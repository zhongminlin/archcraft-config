{"version":3,"file":"vendor.js","mappings":";yIAEO,IAAMA,EAAa,WAYpB,SAAUC,EAASC,EAAgBC,EAAgBC,GACvD,IAAMC,EAAOC,KAAKC,MAAMH,EAAQ,YAC1BI,EAAMJ,EACZF,EAAKO,UAAUN,EAAQE,GACvBH,EAAKO,UAAUN,EAAS,EAAGK,EAC5B,CAEK,SAAUE,EAASR,EAAgBC,GAGvC,OAAc,WAFDD,EAAKS,SAASR,GACfD,EAAKU,UAAUT,EAAS,EAErC,sBCtBKU,QACgB,IAAZC,GAA+D,WAAxB,QAAZ,eAAO,EAAP,0BAAYC,IAAAA,OAAA,EAAAA,EAAA,iBACxB,oBAAhBC,aACgB,oBAAhBC,YAEH,SAAUC,EAAUC,GAKxB,IAJA,IAAMC,EAAYD,EAAIE,OAElBC,EAAa,EACbC,EAAM,EACHA,EAAMH,GAAW,CACtB,IAAIhB,EAAQe,EAAIK,WAAWD,KAE3B,GAA6B,IAAhB,WAARnB,GAIE,GAA6B,IAAhB,WAARA,GAEVkB,GAAc,MACT,CAEL,GAAIlB,GAAS,OAAUA,GAAS,OAE1BmB,EAAMH,EAAW,CACnB,IAAMK,EAAQN,EAAIK,WAAWD,GACJ,QAAZ,MAARE,OACDF,EACFnB,IAAkB,KAARA,IAAkB,KAAe,KAARqB,GAAiB,MAEvD,CAKDH,GAF2B,IAAhB,WAARlB,GAEW,EAGA,CAEjB,MAzBCkB,GA0BH,CACD,OAAOA,CACR,CA6CD,IAAMI,EAAoBb,EAA0B,IAAIG,iBAAgBW,EAC3DC,EAA0Bf,OAEhB,IAAZC,GAA+D,WAAxB,QAAZ,eAAO,EAAP,0BAAYe,IAAAA,OAAA,EAAAA,EAAA,eAC9C,IACA,EAHA7B,EAaG,IAAM8B,GAAe,aAAiB,EAAjB,EAAmBC,YAJ/C,SAAgCZ,EAAaa,EAAoBC,GAC/DP,EAAmBK,WAAWZ,EAAKa,EAAOE,SAASD,GACpD,EAND,SAA4Bd,EAAaa,EAAoBC,GAC3DD,EAAOG,IAAIT,EAAmBU,OAAOjB,GAAMc,EAC5C,EAUK,SAAUI,EAAaC,EAAmBC,EAAqBjB,GAMnE,IALA,IAAInB,EAASoC,EACPC,EAAMrC,EAASmB,EAEfmB,EAAuB,GACzBC,EAAS,GACNvC,EAASqC,GAAK,CACnB,IAAMG,EAAQL,EAAMnC,KACpB,GAAuB,IAAV,IAARwC,GAEHF,EAAMG,KAAKD,QACN,GAAuB,MAAV,IAARA,GAAwB,CAElC,IAAME,EAA2B,GAAnBP,EAAMnC,KACpBsC,EAAMG,MAAe,GAARD,IAAiB,EAAKE,EACpC,MAAM,GAAuB,MAAV,IAARF,GAAwB,CAE5BE,EAA2B,GAAnBP,EAAMnC,KAApB,IACM2C,EAA2B,GAAnBR,EAAMnC,KACpBsC,EAAMG,MAAe,GAARD,IAAiB,GAAOE,GAAS,EAAKC,EACpD,MAAM,GAAuB,MAAV,IAARH,GAAwB,CAElC,IAGII,GAAiB,EAARJ,IAAiB,IAHxBE,EAA2B,GAAnBP,EAAMnC,OAG4B,IAF1C2C,EAA2B,GAAnBR,EAAMnC,OAE8C,EADjC,GAAnBmC,EAAMnC,KAEhB4C,EAAO,QACTA,GAAQ,MACRN,EAAMG,KAAOG,IAAS,GAAM,KAAS,OACrCA,EAAO,MAAiB,KAAPA,GAEnBN,EAAMG,KAAKG,EACZ,MACCN,EAAMG,KAAKD,GAGTF,EAAMpB,QAtCK,OAuCbqB,GAAUM,OAAOC,aAAYC,MAAnB,OAAuBT,GACjCA,EAAMpB,OAAS,EAElB,CAMD,OAJIoB,EAAMpB,OAAS,IACjBqB,GAAUM,OAAOC,aAAYC,MAAnB,OAAuBT,IAG5BC,CACR,CAED,IAAMS,EAAoBtC,EAA0B,IAAII,YAAgB,KAC3DmC,EAA0BvC,OAEhB,IAAZC,GAA8D,WAAvB,QAAZ,eAAO,EAAP,0BAAYuC,IAAAA,OAAA,EAAAA,EAAA,cAC9C,IACA,EAHArD,EC9JJ,QACE,SAAqBsD,EAAuBC,GAAvB,YAAuB,WAAoB,qcCJlE,cACE,WAAYC,GAAZ,MACEC,EAAAA,KAAAA,KAAMD,IAAQ,KAGRE,EAAsCC,OAAOC,OAAOC,EAAYC,kBACtEH,OAAOI,eAAeC,EAAMN,GAE5BC,OAAOM,eAAeD,EAAM,OAAQ,CAClCE,cAAc,EACdC,YAAY,EACZ/D,MAAOyD,EAAYO,QAEtB,CACH,OAdiCC,EAAAA,EAAAA,GAcjC,CAAC,CAdD,CAAiCC,OCuG1B,IAAMC,EAAqB,CAChCjB,MApG4B,EAqG5BlB,OA/CI,SAAmCoC,GAErC,IAdIC,EACAC,EACAC,EAGAC,EAQN,OAAIJ,aAAkBK,KA7ClB,SAAoC9D,OAwBhCb,EAxBkCwE,EAAG,MAAEC,EAAI,OACnD,GAAID,GAAO,GAAKC,GAAQ,GAAKD,GAHH,YAG+B,CAEvD,GAAa,IAATC,GAAcD,GANM,WAMsB,CAE5C,IAAMI,EAAK,IAAIC,WAAW,GAG1B,OAFM7E,EAAO,IAAI8E,SAASF,EAAGG,SACxBxE,UAAU,EAAGiE,GACXI,CACR,CAEC,IAAMI,EAAUR,EAAM,WAChBS,EAAe,WAANT,EAOf,OANMI,EAAK,IAAIC,WAAW,IACpB7E,EAAO,IAAI8E,SAASF,EAAGG,SAExBxE,UAAU,EAAIkE,GAAQ,EAAgB,EAAVO,GAEjChF,EAAKO,UAAU,EAAG0E,GACXL,CAEV,CAMC,OAJMA,EAAK,IAAIC,WAAW,KACpB7E,EAAO,IAAI8E,SAASF,EAAGG,SACxBxE,UAAU,EAAGkE,GAClB1E,EAASC,EAAM,EAAGwE,GACXI,CAEV,CAkBUM,EAfHX,EAckCD,EAdtBa,UACZX,EAAMpE,KAAKC,MAAMkE,EAAO,KACxBE,EAA4B,KAApBF,EAAa,IAANC,GAGfE,EAAYtE,KAAKC,MAAMoE,EAAO,KAC7B,CACLD,IAAKA,EAAME,EACXD,KAAMA,EAAmB,IAAZC,KASN,IAEV,EAyCCU,OARI,SAAmC/B,GACvC,IAAMgC,EAhCF,SAAoChC,GACxC,IAAMrD,EAAO,IAAI8E,SAASzB,EAAK0B,OAAQ1B,EAAKiC,WAAYjC,EAAKjC,YAG7D,OAAQiC,EAAKjC,YACX,KAAK,EAIH,MAAO,CAAEoD,IAFGxE,EAAKU,UAAU,GAEb+D,KADD,GAGf,KAAK,EAEH,IAAMc,EAAoBvF,EAAKU,UAAU,GAIzC,MAAO,CAAE8D,IAF+B,YAAP,EAApBe,GADIvF,EAAKU,UAAU,GAGlB+D,KADDc,IAAsB,GAGrC,KAAK,GAKH,MAAO,CAAEf,IAFGhE,EAASR,EAAM,GAEbyE,KADDzE,EAAKU,UAAU,IAG9B,QACE,MAAM,IAAIiD,EAAY,uEAAgEN,EAAKlC,SAEhG,CAGkBqE,CAA0BnC,GAC3C,OAAO,IAAIsB,KAAoB,IAAfU,EAASb,IAAYa,EAASZ,KAAO,IACtD,GChFD,aAgBE,aAPiB,qBAA+E,GAC/E,qBAA+E,GAG/E,cAAwE,GACxE,cAAwE,GAGvF,KAAKgB,SAASpB,EACf,CAgEH,OA9DSqB,EAAAA,UAAAA,SAAP,SAAgB7E,OACduC,EAAI,OACJlB,EAAM,SACNkD,EAAM,SAMN,GAAIhC,GAAQ,EAEV,KAAKuC,SAASvC,GAAQlB,EACtB,KAAK0D,SAASxC,GAAQgC,MACjB,CAEL,IAAMS,EAAQ,EAAIzC,EAClB,KAAK0C,gBAAgBD,GAAS3D,EAC9B,KAAK6D,gBAAgBF,GAAST,CAC/B,CACF,EAEMM,EAAAA,UAAAA,YAAP,SAAmBpB,EAAiB0B,GAElC,IAAK,IAAIC,EAAI,EAAGA,EAAI,KAAKH,gBAAgB3E,OAAQ8E,IAAK,CAEpD,GAAiB,OADXC,EAAY,KAAKJ,gBAAgBG,IAGrC,GAAY,OADN5C,EAAO6C,EAAU5B,EAAQ0B,IAG7B,OAAO,IAAIG,GADG,EAAIF,EACO5C,EAG9B,CAGD,IAAS4C,EAAI,EAAGA,EAAI,KAAKN,SAASxE,OAAQ8E,IAAK,CAC7C,IAAMC,EAEE7C,EADR,GAAiB,OADX6C,EAAY,KAAKP,SAASM,IAG9B,GAAY,OADN5C,EAAO6C,EAAU5B,EAAQ0B,IAG7B,OAAO,IAAIG,EADEF,EACY5C,EAG9B,CAED,OAAIiB,aAAkB6B,EAEb7B,EAEF,IACR,EAEMoB,EAAAA,UAAAA,OAAP,SAAcrC,EAAkBD,EAAc4C,GAC5C,IAAMI,EAAYhD,EAAO,EAAI,KAAK2C,iBAAiB,EAAI3C,GAAQ,KAAKwC,SAASxC,GAC7E,OAAIgD,EACKA,EAAU/C,EAAMD,EAAM4C,GAGtB,IAAIG,EAAQ/C,EAAMC,EAE5B,EAhFsBqC,EAAAA,aAA8C,IAAIA,EAiF3E,CAAC,CAlFD,GCrBM,SAAUW,EAAiBtB,GAC/B,OAAIA,aAAkBF,WACbE,EACEuB,YAAYC,OAAOxB,GACrB,IAAIF,WAAWE,EAAOA,OAAQA,EAAOO,WAAYP,EAAO3D,YACtD2D,aAAkBuB,YACpB,IAAIzB,WAAWE,GAGfF,WAAW2B,KAAKzB,EAE1B,CCLM,IAGP,aAKE,WACmB0B,EACAT,EACAU,EACAC,EACAC,EACAC,EACAC,EACAC,QAPA,QAAAN,EAAkDf,EAAAA,mBAClD,QAAAM,OAAuBvE,QACvB,QAAAiF,EAXY,UAYZ,QAAAC,EAXsB,WAYtB,QAAAC,GAAAA,QACA,QAAAC,GAAAA,QACA,QAAAC,GAAAA,QACA,QAAAC,GAAAA,GAPA,sBACA,eACA,gBACA,yBACA,gBACA,oBACA,uBACA,2BAZX,SAAM,EACN,UAAO,IAAIjC,SAAS,IAAIwB,YAAY,KAAKK,oBACzC,WAAQ,IAAI9B,WAAW,KAAK7E,KAAK+E,OAWrC,CA0XN,OAxXUiC,EAAAA,UAAAA,cAAR,WACE,OAAO,KAAK5E,MAAMJ,SAAS,EAAG,KAAKX,IACpC,EAEO2F,EAAAA,UAAAA,kBAAR,WACE,KAAK3F,IAAM,CACZ,EAEM2F,EAAAA,UAAAA,OAAP,SAAc1C,GAGZ,OAFA,KAAK2C,oBACL,KAAKC,SAAS5C,EAAQ,GACf,KAAK6C,eACb,EAEOH,EAAAA,UAAAA,SAAR,SAAiB1C,EAAiB8C,GAChC,GAAIA,EAAQ,KAAKV,SACf,MAAM,IAAItC,MAAM,oCAA6BgD,IAGjC,MAAV9C,EACF,KAAK+C,YACsB,kBAAX/C,EAChB,KAAKgD,cAAchD,GACQ,iBAAXA,EAChB,KAAKiD,aAAajD,GACS,iBAAXA,EAChB,KAAKkD,aAAalD,GAElB,KAAKmD,aAAanD,EAAQ8C,EAE7B,EAEOJ,EAAAA,UAAAA,wBAAR,SAAgCU,GAC9B,IAAMC,EAAe,KAAKtG,IAAMqG,EAE5B,KAAK1H,KAAKoB,WAAauG,GACzB,KAAKC,aAA4B,EAAfD,EAErB,EAEOX,EAAAA,UAAAA,aAAR,SAAqBa,GACnB,IAAMC,EAAY,IAAIxB,YAAYuB,GAC5BE,EAAW,IAAIlD,WAAWiD,GAC1BE,EAAU,IAAIlD,SAASgD,GAE7BC,EAAS9F,IAAI,KAAKG,OAElB,KAAKpC,KAAOgI,EACZ,KAAK5F,MAAQ2F,CACd,EAEOf,EAAAA,UAAAA,UAAR,WACE,KAAKiB,QAAQ,IACd,EAEOjB,EAAAA,UAAAA,cAAR,SAAsB1C,IACL,IAAXA,EACF,KAAK2D,QAAQ,KAEb,KAAKA,QAAQ,IAEhB,EACOjB,EAAAA,UAAAA,aAAR,SAAqB1C,GACf4D,OAAOC,cAAc7D,KAAY,KAAKyC,oBACpCzC,GAAU,EACRA,EAAS,IAEX,KAAK2D,QAAQ3D,GACJA,EAAS,KAElB,KAAK2D,QAAQ,KACb,KAAKA,QAAQ3D,IACJA,EAAS,OAElB,KAAK2D,QAAQ,KACb,KAAKG,SAAS9D,IACLA,EAAS,YAElB,KAAK2D,QAAQ,KACb,KAAKI,SAAS/D,KAGd,KAAK2D,QAAQ,KACb,KAAKK,SAAShE,IAGZA,IAAW,GAEb,KAAK2D,QAAQ,IAAQ3D,EAAS,IACrBA,IAAW,KAEpB,KAAK2D,QAAQ,KACb,KAAKM,QAAQjE,IACJA,IAAW,OAEpB,KAAK2D,QAAQ,KACb,KAAKO,SAASlE,IACLA,IAAW,YAEpB,KAAK2D,QAAQ,KACb,KAAKQ,SAASnE,KAGd,KAAK2D,QAAQ,KACb,KAAKS,SAASpE,IAKd,KAAKuC,cAEP,KAAKoB,QAAQ,KACb,KAAKU,SAASrE,KAGd,KAAK2D,QAAQ,KACb,KAAKW,SAAStE,GAGnB,EAEO0C,EAAAA,UAAAA,kBAAR,SAA0B5F,GACxB,GAAIA,EAAa,GAEf,KAAK6G,QAAQ,IAAO7G,QACf,GAAIA,EAAa,IAEtB,KAAK6G,QAAQ,KACb,KAAKA,QAAQ7G,QACR,GAAIA,EAAa,MAEtB,KAAK6G,QAAQ,KACb,KAAKG,SAAShH,OACT,MAAIA,EAAa,YAKtB,MAAM,IAAIgD,MAAM,2BAAoBhD,EAAU,oBAH9C,KAAK6G,QAAQ,KACb,KAAKI,SAASjH,EAGf,CACF,EAEO4F,EAAAA,UAAAA,aAAR,SAAqB1C,GAInB,GAFkBA,EAAOnD,OAETO,EAAwB,CACtC,IAAMN,EAAaJ,EAAUsD,GAC7B,KAAKuE,wBALe,EAKyBzH,GAC7C,KAAK0H,kBAAkB1H,GACvBQ,EAAa0C,EAAQ,KAAKlC,MAAO,KAAKf,KACtC,KAAKA,KAAOD,CACb,KAAM,CACCA,EAAaJ,EAAUsD,GAC7B,KAAKuE,wBAXe,EAWyBzH,GAC7C,KAAK0H,kBAAkB1H,GNpIvB,SAAuBH,EAAaa,EAAoBC,GAI5D,IAHA,IAAMb,EAAYD,EAAIE,OAClBlB,EAAS8B,EACTV,EAAM,EACHA,EAAMH,GAAW,CACtB,IAAIhB,EAAQe,EAAIK,WAAWD,KAE3B,GAA6B,IAAhB,WAARnB,GAAL,CAIO,GAA6B,IAAhB,WAARA,GAEV4B,EAAO7B,KAAcC,GAAS,EAAK,GAAQ,QACtC,CAEL,GAAIA,GAAS,OAAUA,GAAS,OAE1BmB,EAAMH,EAAW,CACnB,IAAMK,EAAQN,EAAIK,WAAWD,GACJ,QAAZ,MAARE,OACDF,EACFnB,IAAkB,KAARA,IAAkB,KAAe,KAARqB,GAAiB,MAEvD,CAG0B,IAAhB,WAARrB,IAEH4B,EAAO7B,KAAcC,GAAS,GAAM,GAAQ,IAC5C4B,EAAO7B,KAAcC,GAAS,EAAK,GAAQ,MAG3C4B,EAAO7B,KAAcC,GAAS,GAAM,EAAQ,IAC5C4B,EAAO7B,KAAcC,GAAS,GAAM,GAAQ,IAC5C4B,EAAO7B,KAAcC,GAAS,EAAK,GAAQ,IAE9C,CAED4B,EAAO7B,KAAqB,GAARC,EAAgB,GAFnC,MA5BC4B,EAAO7B,KAAYC,CA+BtB,CACF,CM4FK6I,CAAazE,EAAQ,KAAKlC,MAAO,KAAKf,KACtC,KAAKA,KAAOD,CACb,CACF,EAEO4F,EAAAA,UAAAA,aAAR,SAAqB1C,EAAiB8C,GAEpC,IAAM4B,EAAM,KAAKvC,eAAewC,YAAY3E,EAAQ,KAAK0B,SACzD,GAAW,MAAPgD,EACF,KAAKE,gBAAgBF,QAChB,GAAIG,MAAMC,QAAQ9E,GACvB,KAAK+E,YAAY/E,EAAQ8C,QACpB,GAAId,YAAYC,OAAOjC,GAC5B,KAAKgF,aAAahF,OACb,IAAsB,iBAAXA,EAIhB,MAAM,IAAIF,MAAM,+BAAwBX,OAAOG,UAAU2F,SAASvG,MAAMsB,KAHxE,KAAKkF,UAAUlF,EAAmC8C,EAInD,CACF,EAEOJ,EAAAA,UAAAA,aAAR,SAAqB1C,GACnB,IAAMmF,EAAOnF,EAAOlD,WACpB,GAAIqI,EAAO,IAET,KAAKxB,QAAQ,KACb,KAAKA,QAAQwB,QACR,GAAIA,EAAO,MAEhB,KAAKxB,QAAQ,KACb,KAAKG,SAASqB,OACT,MAAIA,EAAO,YAKhB,MAAM,IAAIrF,MAAM,4BAAqBqF,IAHrC,KAAKxB,QAAQ,KACb,KAAKI,SAASoB,EAGf,CACD,IAAMrH,EAAQiE,EAAiB/B,GAC/B,KAAKoF,SAAStH,EACf,EAEO4E,EAAAA,UAAAA,YAAR,SAAoB1C,EAAwB8C,GAC1C,IAAMqC,EAAOnF,EAAOnD,OACpB,GAAIsI,EAAO,GAET,KAAKxB,QAAQ,IAAOwB,QACf,GAAIA,EAAO,MAEhB,KAAKxB,QAAQ,KACb,KAAKG,SAASqB,OACT,MAAIA,EAAO,YAKhB,MAAM,IAAIrF,MAAM,2BAAoBqF,IAHpC,KAAKxB,QAAQ,KACb,KAAKI,SAASoB,EAGf,CACD,IAAmB,YAAAE,EAAAA,EAAAA,OAAAA,IAAQ,CAAtB,IAAMC,EAAI,KACb,KAAK1C,SAAS0C,EAAMxC,EAAQ,EAC7B,CACF,EAEOJ,EAAAA,UAAAA,sBAAR,SAA8B1C,EAAiCuF,GAG7D,IAFA,IAAIC,EAAQ,EAEM,QAAAH,EAAAA,EAAAA,OAAAA,IAAM,MACFlI,IAAhB6C,EADQ,OAEVwF,GAEH,CAED,OAAOA,CACR,EAEO9C,EAAAA,UAAAA,UAAR,SAAkB1C,EAAiC8C,GACjD,IAAMyC,EAAOpG,OAAOoG,KAAKvF,GACrB,KAAKsC,UACPiD,EAAKE,OAGP,IAAMN,EAAO,KAAK3C,gBAAkB,KAAKkD,sBAAsB1F,EAAQuF,GAAQA,EAAK1I,OAEpF,GAAIsI,EAAO,GAET,KAAKxB,QAAQ,IAAOwB,QACf,GAAIA,EAAO,MAEhB,KAAKxB,QAAQ,KACb,KAAKG,SAASqB,OACT,MAAIA,EAAO,YAKhB,MAAM,IAAIrF,MAAM,gCAAyBqF,IAHzC,KAAKxB,QAAQ,KACb,KAAKI,SAASoB,EAGf,CAED,IAAkB,YAAAE,EAAAA,EAAAA,OAAAA,IAAM,CAAnB,IAAMM,EAAG,KACN/J,EAAQoE,EAAO2F,GAEf,KAAKnD,sBAA6BrF,IAAVvB,IAC5B,KAAKsH,aAAayC,GAClB,KAAK/C,SAAShH,EAAOkH,EAAQ,GAEhC,CACF,EAEOJ,EAAAA,UAAAA,gBAAR,SAAwBgC,GACtB,IAAMS,EAAOT,EAAI3F,KAAKlC,OACtB,GAAa,IAATsI,EAEF,KAAKxB,QAAQ,UACR,GAAa,IAATwB,EAET,KAAKxB,QAAQ,UACR,GAAa,IAATwB,EAET,KAAKxB,QAAQ,UACR,GAAa,IAATwB,EAET,KAAKxB,QAAQ,UACR,GAAa,KAATwB,EAET,KAAKxB,QAAQ,UACR,GAAIwB,EAAO,IAEhB,KAAKxB,QAAQ,KACb,KAAKA,QAAQwB,QACR,GAAIA,EAAO,MAEhB,KAAKxB,QAAQ,KACb,KAAKG,SAASqB,OACT,MAAIA,EAAO,YAKhB,MAAM,IAAIrF,MAAM,sCAA+BqF,IAH/C,KAAKxB,QAAQ,KACb,KAAKI,SAASoB,EAGf,CACD,KAAKlB,QAAQS,EAAI5F,MACjB,KAAKsG,SAASV,EAAI3F,KACnB,EAEO2D,EAAAA,UAAAA,QAAR,SAAgB9G,GACd,KAAK2I,wBAAwB,GAE7B,KAAK7I,KAAKkK,SAAS,KAAK7I,IAAKnB,GAC7B,KAAKmB,KACN,EAEO2F,EAAAA,UAAAA,SAAR,SAAiBmD,GACf,IAAMV,EAAOU,EAAOhJ,OACpB,KAAK0H,wBAAwBY,GAE7B,KAAKrH,MAAMH,IAAIkI,EAAQ,KAAK9I,KAC5B,KAAKA,KAAOoI,CACb,EAEOzC,EAAAA,UAAAA,QAAR,SAAgB9G,GACd,KAAK2I,wBAAwB,GAE7B,KAAK7I,KAAKoK,QAAQ,KAAK/I,IAAKnB,GAC5B,KAAKmB,KACN,EAEO2F,EAAAA,UAAAA,SAAR,SAAiB9G,GACf,KAAK2I,wBAAwB,GAE7B,KAAK7I,KAAKqK,UAAU,KAAKhJ,IAAKnB,GAC9B,KAAKmB,KAAO,CACb,EAEO2F,EAAAA,UAAAA,SAAR,SAAiB9G,GACf,KAAK2I,wBAAwB,GAE7B,KAAK7I,KAAKsK,SAAS,KAAKjJ,IAAKnB,GAC7B,KAAKmB,KAAO,CACb,EAEO2F,EAAAA,UAAAA,SAAR,SAAiB9G,GACf,KAAK2I,wBAAwB,GAE7B,KAAK7I,KAAKO,UAAU,KAAKc,IAAKnB,GAC9B,KAAKmB,KAAO,CACb,EAEO2F,EAAAA,UAAAA,SAAR,SAAiB9G,GACf,KAAK2I,wBAAwB,GAE7B,KAAK7I,KAAKuK,SAAS,KAAKlJ,IAAKnB,GAC7B,KAAKmB,KAAO,CACb,EAEO2F,EAAAA,UAAAA,SAAR,SAAiB9G,GACf,KAAK2I,wBAAwB,GAC7B,KAAK7I,KAAKwK,WAAW,KAAKnJ,IAAKnB,GAC/B,KAAKmB,KAAO,CACb,EAEO2F,EAAAA,UAAAA,SAAR,SAAiB9G,GACf,KAAK2I,wBAAwB,GAC7B,KAAK7I,KAAKyK,WAAW,KAAKpJ,IAAKnB,GAC/B,KAAKmB,KAAO,CACb,EAEO2F,EAAAA,UAAAA,SAAR,SAAiB9G,GACf,KAAK2I,wBAAwB,GP9X3B,SAAoB7I,EAAgBC,EAAgBC,GACxD,IAAMC,EAAOD,EAAQ,WACfI,EAAMJ,EACZF,EAAKO,UAAUN,EAAQE,GACvBH,EAAKO,UAAUN,EAAS,EAAGK,EAC5B,CO2XGoK,CAAU,KAAK1K,KAAM,KAAKqB,IAAKnB,GAC/B,KAAKmB,KAAO,CACb,EAEO2F,EAAAA,UAAAA,SAAR,SAAiB9G,GACf,KAAK2I,wBAAwB,GAE7B9I,EAAS,KAAKC,KAAM,KAAKqB,IAAKnB,GAC9B,KAAKmB,KAAO,CACb,EACH,CAAC,CAxYD,GCTM,SAAUsJ,EAAWC,GACzB,MAAO,UAAGA,EAAO,EAAI,IAAM,GAAE,MAAAC,OAAKzK,KAAK0K,IAAIF,GAAMrB,SAAS,IAAIwB,SAAS,EAAG,KAC3E,CCAD,IAYA,aAKE,WAAqBC,EAAgDC,QAAhD,QAAAD,EAjBQ,SAiBwC,QAAAC,EAhBpC,IAgBZ,oBAAgD,uBAJrE,SAAM,EACN,UAAO,EAML,KAAKC,OAAS,GACd,IAAK,IAAIjF,EAAI,EAAGA,EAAI,KAAK+E,aAAc/E,IACrC,KAAKiF,OAAOxI,KAAK,GAEpB,CAiDH,OA/CSyI,EAAAA,UAAAA,YAAP,SAAmB/J,GACjB,OAAOA,EAAa,GAAKA,GAAc,KAAK4J,YAC7C,EAEOG,EAAAA,UAAAA,KAAR,SAAa/I,EAAmBC,EAAqBjB,GAGnDgK,EAAY,IAAqB,UAFjB,KAAKF,OAAO9J,EAAa,GAERuI,EAAAA,EAAAA,OAAAA,IAAS,CAGxC,IAHe,IAAM0B,EAAM,KACrBC,EAAcD,EAAOjJ,MAElBmJ,EAAI,EAAGA,EAAInK,EAAYmK,IAC9B,GAAID,EAAYC,KAAOnJ,EAAMC,EAAckJ,GACzC,SAASH,EAGb,OAAOC,EAAOpK,GACf,CACD,OAAO,IACR,EAEOkK,EAAAA,UAAAA,MAAR,SAAc/I,EAAmBlC,GAC/B,IAAMsL,EAAU,KAAKN,OAAO9I,EAAMjB,OAAS,GACrCkK,EAAyB,CAAEjJ,MAAK,EAAEnB,IAAKf,GAEzCsL,EAAQrK,QAAU,KAAK8J,gBAGzBO,EAASpL,KAAKqL,SAAWD,EAAQrK,OAAU,GAAKkK,EAEhDG,EAAQ9I,KAAK2I,EAEhB,EAEMF,EAAAA,UAAAA,OAAP,SAAc/I,EAAmBC,EAAqBjB,GACpD,IAAMsK,EAAc,KAAKC,KAAKvJ,EAAOC,EAAajB,GAClD,GAAmB,MAAfsK,EAEF,OADA,KAAKE,MACEF,EAET,KAAKG,OAEL,IAAM5K,EAAMkB,EAAaC,EAAOC,EAAajB,GAEvC0K,EAAoBjH,WAAWjB,UAAUmI,MAAMC,KAAK5J,EAAOC,EAAaA,EAAcjB,GAE5F,OADA,KAAK6K,MAAMH,EAAmB7K,GACvBA,CACR,EACH,CAAC,CA7DD,+7EC2BMiL,EAAa,IAAIpH,SAAS,IAAIwB,YAAY,IAC1C6F,EAAc,IAAItH,WAAWqH,EAAWnH,QAIjCqH,EAA+C,WAC1D,IAGEF,EAAWG,QAAQ,EAGpB,CAFC,MAAOC,GACP,OAAOA,EAAEC,WACV,CACD,MAAM,IAAInI,MAAM,gBACjB,CAT2D,GAWtDoI,EAAY,IAAIJ,EAA8B,qBAE9CK,EAAyB,IAAItB,EAEnC,aASE,WACmB1E,EACAT,EACA0G,EACAC,EACAC,EACAC,EACAC,EACAC,QAPA,QAAAtG,EAAkDf,EAAAA,mBAClD,QAAAM,OAAuBvE,QACvB,QAAAiL,EAAAA,QACA,QAAAC,EAAAA,QACA,QAAAC,EAAAA,QACA,QAAAC,EAAAA,QACA,QAAAC,EAAAA,QACA,QAAAC,EAAAA,GAPA,sBACA,eACA,oBACA,oBACA,sBACA,oBACA,oBACA,kBAhBX,cAAW,EACX,SAAM,EAEN,UAAOb,EACP,WAAQC,EACR,eA5BiB,EA6BR,WAA2B,EAWxC,CAmiBN,OAjiBUa,EAAAA,UAAAA,kBAAR,WACE,KAAKC,SAAW,EAChB,KAAKC,UA5CkB,EA6CvB,KAAKC,MAAMhM,OAAS,CAGrB,EAEO6L,EAAAA,UAAAA,UAAR,SAAkBjI,GAChB,KAAK3C,MAAQiE,EAAiBtB,GAC9B,KAAK/E,KJ9EH,SAAyB+E,GAC7B,GAAIA,aAAkBuB,YACpB,OAAO,IAAIxB,SAASC,GAGtB,IAAMqI,EAAa/G,EAAiBtB,GACpC,OAAO,IAAID,SAASsI,EAAWrI,OAAQqI,EAAW9H,WAAY8H,EAAWhM,WAC1E,CIuEeiM,CAAe,KAAKjL,OAChC,KAAKf,IAAM,CACZ,EAEO2L,EAAAA,UAAAA,aAAR,SAAqBjI,GACnB,IAzDuB,IAyDnB,KAAKmI,UAAoC,KAAKI,aAAa,GAExD,CACL,IAAMC,EAAgB,KAAKnL,MAAMJ,SAAS,KAAKX,KACzCmM,EAAUnH,EAAiBtB,GAG3B+C,EAAY,IAAIjD,WAAW0I,EAAcpM,OAASqM,EAAQrM,QAChE2G,EAAU7F,IAAIsL,GACdzF,EAAU7F,IAAIuL,EAASD,EAAcpM,QACrC,KAAKsM,UAAU3F,EAChB,MAVC,KAAK2F,UAAU1I,EAWlB,EAEOiI,EAAAA,UAAAA,aAAR,SAAqBvD,GACnB,OAAO,KAAKzJ,KAAKoB,WAAa,KAAKC,KAAOoI,CAC3C,EAEOuD,EAAAA,UAAAA,qBAAR,SAA6BU,GACrB,IAAE1N,EAAc,KAAV,KAAEqB,EAAQ,KAAL,IACjB,OAAO,IAAIsM,WAAW,gBAAS3N,EAAKoB,WAAaC,EAAG,QAAAwJ,OAAO7K,EAAKoB,WAAU,6BAAAyJ,OAA4B6C,EAAS,KAChH,EAMMV,EAAAA,UAAAA,OAAP,SAAcjI,GACZ,KAAKkC,oBACL,KAAKwG,UAAU1I,GAEf,IAAMT,EAAS,KAAKsJ,eACpB,GAAI,KAAKN,aAAa,GACpB,MAAM,KAAKO,qBAAqB,KAAKxM,KAEvC,OAAOiD,CACR,EAEO0I,EAAAA,UAAAA,YAAR,SAAoBjI,qDAClB,KAAKkC,oBACL,KAAKwG,UAAU1I,2BAER,KAAKuI,aAAa,GACvB,GAAM,KAAKM,gBADc,oBACzB/M,EAAAA,iCAEH,EAEYmM,EAAAA,UAAAA,YAAb,SAAyBc,6HACnBC,GAAU,2CAEaC,EAAAA,EAAAA,+EACzB,GADejJ,EAAM,QACjBgJ,EACF,MAAM,KAAKF,qBAAqB,KAAKZ,UAGvC,KAAKgB,aAAalJ,GAElB,IACET,EAAS,KAAKsJ,eACdG,GAAU,CAMX,CALC,MAAOzB,GACP,KAAMA,aAAaF,GACjB,MAAME,CAGT,CACD,KAAKW,UAAY,KAAK5L,iSAGxB,GAAI0M,EAAS,CACX,GAAI,KAAKT,aAAa,GACpB,MAAM,KAAKO,qBAAqB,KAAKZ,UAEvC,SAAO3I,EACR,CAGD,MADQ4I,GAAFvL,EAA8B,MAApB,SAAEN,EAAG,MAAE4L,EAAQ,WACzB,IAAIU,WACR,uCAAgChD,EAAWuC,GAAS,QAAArC,OAAOoC,EAAQ,MAAApC,OAAKxJ,EAAG,kCAE9E,EAEM2L,EAAAA,UAAAA,kBAAP,SACEc,GAEA,OAAO,KAAKI,iBAAiBJ,GAAQ,EACtC,EAEMd,EAAAA,UAAAA,aAAP,SAAoBc,GAClB,OAAO,KAAKI,iBAAiBJ,GAAQ,EACtC,EAEcd,EAAAA,UAAAA,iBAAf,SAAgCc,EAAyD1E,+GACnF+E,EAAwB/E,EACxBgF,GAAkB,6CAEKC,EAAAA,EAAAA,mFACzB,GADetJ,EAAM,QACjBqE,GAA8B,IAAnBgF,EACb,MAAM,KAAKP,qBAAqB,KAAKZ,UAGvC,KAAKgB,aAAalJ,GAEdoJ,IACFC,EAAiB,KAAKE,gBACtBH,GAAwB,EACxB,KAAKI,gFAKG,KAAKX,wBAAX,0BACA,OADAjM,EAAAA,OACyB,KAAnByM,EACJ,uCAIJ,4BAAmBhC,GACjB,MAAMoC,uBAIV,KAAKvB,UAAY,KAAK5L,8TAEzB,EAEO2L,EAAAA,UAAAA,aAAR,WACEyB,EAAQ,OAAa,CACnB,IAAMvB,EAAW,KAAKwB,eAClBpK,OAAM,EAEV,GAAI4I,GAAY,IAEd5I,EAAS4I,EAAW,SACf,GAAIA,EAAW,IACpB,GAAIA,EAAW,IAEb5I,EAAS4I,OACJ,GAAIA,EAAW,IAAM,CAG1B,GAAa,KADPzD,EAAOyD,EAAW,KACR,CACd,KAAKyB,aAAalF,GAClB,KAAK8E,WACL,SAASE,CACV,CACCnK,EAAS,EAEZ,MAAM,GAAI4I,EAAW,IAAM,CAG1B,GAAa,KADPzD,EAAOyD,EAAW,KACR,CACd,KAAK0B,eAAenF,GACpB,KAAK8E,WACL,SAASE,CACV,CACCnK,EAAS,EAEZ,KAAM,CAEL,IAAMlD,EAAa8L,EAAW,IAC9B5I,EAAS,KAAKuK,iBAAiBzN,EAAY,EAC5C,MACI,GAAiB,MAAb8L,EAET5I,EAAS,UACJ,GAAiB,MAAb4I,EAET5I,GAAS,OACJ,GAAiB,MAAb4I,EAET5I,GAAS,OACJ,GAAiB,MAAb4I,EAET5I,EAAS,KAAKwK,eACT,GAAiB,MAAb5B,EAET5I,EAAS,KAAKyK,eACT,GAAiB,MAAb7B,EAET5I,EAAS,KAAK0K,cACT,GAAiB,MAAb9B,EAET5I,EAAS,KAAK2K,eACT,GAAiB,MAAb/B,EAET5I,EAAS,KAAK4K,eACT,GAAiB,MAAbhC,EAET5I,EAAS,KAAK6K,eACT,GAAiB,MAAbjC,EAET5I,EAAS,KAAK8K,cACT,GAAiB,MAAblC,EAET5I,EAAS,KAAK+K,eACT,GAAiB,MAAbnC,EAET5I,EAAS,KAAKgL,eACT,GAAiB,MAAbpC,EAET5I,EAAS,KAAKiL,eACT,GAAiB,MAAbrC,EAAmB,CAEtB9L,EAAa,KAAKoO,SACxBlL,EAAS,KAAKuK,iBAAiBzN,EAAY,EAC5C,MAAM,GAAiB,MAAb8L,EAAmB,CAEtB9L,EAAa,KAAKqO,UACxBnL,EAAS,KAAKuK,iBAAiBzN,EAAY,EAC5C,MAAM,GAAiB,MAAb8L,EAAmB,CAEtB9L,EAAa,KAAKsO,UACxBpL,EAAS,KAAKuK,iBAAiBzN,EAAY,EAC5C,MAAM,GAAiB,MAAb8L,EAAmB,CAG5B,GAAa,KADPzD,EAAO,KAAKwF,WACF,CACd,KAAKL,eAAenF,GACpB,KAAK8E,WACL,SAASE,CACV,CACCnK,EAAS,EAEZ,MAAM,GAAiB,MAAb4I,EAAmB,CAG5B,GAAa,KADPzD,EAAO,KAAKyF,WACF,CACd,KAAKN,eAAenF,GACpB,KAAK8E,WACL,SAASE,CACV,CACCnK,EAAS,EAEZ,MAAM,GAAiB,MAAb4I,EAAmB,CAG5B,GAAa,KADPzD,EAAO,KAAKwF,WACF,CACd,KAAKN,aAAalF,GAClB,KAAK8E,WACL,SAASE,CACV,CACCnK,EAAS,EAEZ,MAAM,GAAiB,MAAb4I,EAAmB,CAG5B,GAAa,KADPzD,EAAO,KAAKyF,WACF,CACd,KAAKP,aAAalF,GAClB,KAAK8E,WACL,SAASE,CACV,CACCnK,EAAS,EAEZ,MAAM,GAAiB,MAAb4I,EAAmB,CAE5B,IAAMzD,EAAO,KAAK+F,SAClBlL,EAAS,KAAKqL,aAAalG,EAAM,EAClC,MAAM,GAAiB,MAAbyD,EAAmB,CAEtBzD,EAAO,KAAKgG,UAClBnL,EAAS,KAAKqL,aAAalG,EAAM,EAClC,MAAM,GAAiB,MAAbyD,EAAmB,CAEtBzD,EAAO,KAAKiG,UAClBpL,EAAS,KAAKqL,aAAalG,EAAM,EAClC,MAAM,GAAiB,MAAbyD,EAET5I,EAAS,KAAKsL,gBAAgB,EAAG,QAC5B,GAAiB,MAAb1C,EAET5I,EAAS,KAAKsL,gBAAgB,EAAG,QAC5B,GAAiB,MAAb1C,EAET5I,EAAS,KAAKsL,gBAAgB,EAAG,QAC5B,GAAiB,MAAb1C,EAET5I,EAAS,KAAKsL,gBAAgB,EAAG,QAC5B,GAAiB,MAAb1C,EAET5I,EAAS,KAAKsL,gBAAgB,GAAI,QAC7B,GAAiB,MAAb1C,EAAmB,CAEtBzD,EAAO,KAAK+F,SAClBlL,EAAS,KAAKsL,gBAAgBnG,EAAM,EACrC,MAAM,GAAiB,MAAbyD,EAAmB,CAEtBzD,EAAO,KAAKgG,UAClBnL,EAAS,KAAKsL,gBAAgBnG,EAAM,EACrC,KAAM,IAAiB,MAAbyD,EAKT,MAAM,IAAIvJ,EAAY,kCAA2BgH,EAAWuC,KAHtDzD,EAAO,KAAKiG,UAClBpL,EAAS,KAAKsL,gBAAgBnG,EAAM,EAGrC,CAED,KAAK8E,WAGL,IADA,IAAMpB,EAAQ,KAAKA,MACZA,EAAMhM,OAAS,GAAG,CAEvB,IAAM0O,EAAQ1C,EAAMA,EAAMhM,OAAS,GACnC,GAAc,IAAV0O,EAAMzM,KAAsB,CAG9B,GAFAyM,EAAMC,MAAMD,EAAME,UAAYzL,EAC9BuL,EAAME,WACFF,EAAME,WAAaF,EAAMpG,KAI3B,SAASgF,EAHTtB,EAAM6C,MACN1L,EAASuL,EAAMC,KAIlB,KAAM,IAAc,IAAVD,EAAMzM,KAAwB,CACvC,GAxYF6M,SAEa,YAFbA,SAwYyB3L,IAtYY,WAAZ2L,EAuYrB,MAAM,IAAItM,EAAY,uDAAyDW,GAEjF,GAAe,cAAXA,EACF,MAAM,IAAIX,EAAY,oCAGxBkM,EAAM5F,IAAM3F,EACZuL,EAAMzM,KAAI,EACV,SAASqL,CACV,CAMC,GAHAoB,EAAMK,IAAIL,EAAM5F,KAAQ3F,EACxBuL,EAAMM,YAEFN,EAAMM,YAAcN,EAAMpG,KAGvB,CACLoG,EAAM5F,IAAM,KACZ4F,EAAMzM,KAAI,EACV,SAASqL,CACV,CANCtB,EAAM6C,MACN1L,EAASuL,EAAMK,GAMlB,CACF,CAED,OAAO5L,CACR,CAraqB,IAClB2L,CAqaL,EAEOjD,EAAAA,UAAAA,aAAR,WAME,OAvZuB,IAkZnB,KAAKE,WACP,KAAKA,SAAW,KAAK8B,UAIhB,KAAK9B,QACb,EAEOF,EAAAA,UAAAA,SAAR,WACE,KAAKE,UA3ZkB,CA4ZxB,EAEOF,EAAAA,UAAAA,cAAR,WACE,IAAME,EAAW,KAAKwB,eAEtB,OAAQxB,GACN,KAAK,IACH,OAAO,KAAK+B,UACd,KAAK,IACH,OAAO,KAAKC,UACd,QACE,GAAIhC,EAAW,IACb,OAAOA,EAAW,IAElB,MAAM,IAAIvJ,EAAY,wCAAiCgH,EAAWuC,KAIzE,EAEOF,EAAAA,UAAAA,aAAR,SAAqBvD,GACnB,GAAIA,EAAO,KAAKoD,aACd,MAAM,IAAIlJ,EAAY,2CAAoC8F,EAAI,4BAAAoB,OAA2B,KAAKgC,aAAY,MAG5G,KAAKM,MAAMzK,KAAK,CACdU,KAAI,EACJqG,KAAI,EACJQ,IAAK,KACLkG,UAAW,EACXD,IAAK,IAER,EAEOlD,EAAAA,UAAAA,eAAR,SAAuBvD,GACrB,GAAIA,EAAO,KAAKmD,eACd,MAAM,IAAIjJ,EAAY,6CAAsC8F,EAAI,wBAAAoB,OAAuB,KAAK+B,eAAc,MAG5G,KAAKO,MAAMzK,KAAK,CACdU,KAAI,EACJqG,KAAI,EACJqG,MAAO,IAAI3G,MAAeM,GAC1BsG,SAAU,GAEb,EAEO/C,EAAAA,UAAAA,iBAAR,SAAyB5L,EAAoBgP,SAC3C,GAAIhP,EAAa,KAAKsL,aACpB,MAAM,IAAI/I,EACR,kDAA2CvC,EAAU,sBAAAyJ,OAAqB,KAAK6B,aAAY,MAI/F,GAAI,KAAKtK,MAAMhB,WAAa,KAAKC,IAAM+O,EAAehP,EACpD,MAAMoL,EAGR,IACIlI,EADErE,EAAS,KAAKoB,IAAM+O,EAU1B,OAPE9L,EADE,KAAK+L,kBAAkC,QAAf,OAAKtD,kBAAUlM,IAAAA,OAAA,EAAAA,EAAEyP,YAAYlP,IAC9C,KAAK2L,WAAW3H,OAAO,KAAKhD,MAAOnC,EAAQmB,GAC3CA,EAAa8B,ET3VtB,SAAuBd,EAAmBC,EAAqBjB,GACnE,IAAMmP,EAAcnO,EAAMJ,SAASK,EAAaA,EAAcjB,GAC9D,OAAO6B,EAAmBmC,OAAOmL,EAClC,CSyVcC,CAAa,KAAKpO,MAAOnC,EAAQmB,GAEjCe,EAAa,KAAKC,MAAOnC,EAAQmB,GAE5C,KAAKC,KAAO+O,EAAehP,EACpBkD,CACR,EAEO0I,EAAAA,UAAAA,cAAR,WACE,OAAI,KAAKG,MAAMhM,OAAS,GAEL,IADH,KAAKgM,MAAM,KAAKA,MAAMhM,OAAS,GAChCiC,IAGhB,EAEO4J,EAAAA,UAAAA,aAAR,SAAqB5L,EAAoBqP,GACvC,GAAIrP,EAAa,KAAKuL,aACpB,MAAM,IAAIhJ,EAAY,2CAAoCvC,EAAU,sBAAAyJ,OAAqB,KAAK8B,aAAY,MAG5G,IAAK,KAAKW,aAAalM,EAAaqP,GAClC,MAAMjE,EAGR,IAAMvM,EAAS,KAAKoB,IAAMoP,EACpBnM,EAAS,KAAKlC,MAAMJ,SAAS/B,EAAQA,EAASmB,GAEpD,OADA,KAAKC,KAAOoP,EAAarP,EAClBkD,CACR,EAEO0I,EAAAA,UAAAA,gBAAR,SAAwBvD,EAAcgH,GACpC,GAAIhH,EAAO,KAAKqD,aACd,MAAM,IAAInJ,EAAY,2CAAoC8F,EAAI,sBAAAoB,OAAqB,KAAKiC,aAAY,MAGtG,IAAM4D,EAAU,KAAK1Q,KAAKqM,QAAQ,KAAKhL,IAAMoP,GACvCpN,EAAO,KAAKsM,aAAalG,EAAMgH,EAAa,GAClD,OAAO,KAAKhK,eAAerB,OAAO/B,EAAMqN,EAAS,KAAK1K,QACvD,EAEOgH,EAAAA,UAAAA,OAAR,WACE,OAAO,KAAKhN,KAAK2Q,SAAS,KAAKtP,IAChC,EAEO2L,EAAAA,UAAAA,QAAR,WACE,OAAO,KAAKhN,KAAK4Q,UAAU,KAAKvP,IACjC,EAEO2L,EAAAA,UAAAA,QAAR,WACE,OAAO,KAAKhN,KAAKU,UAAU,KAAKW,IACjC,EAEO2L,EAAAA,UAAAA,OAAR,WACE,IAAM9M,EAAQ,KAAKF,KAAK2Q,SAAS,KAAKtP,KAEtC,OADA,KAAKA,MACEnB,CACR,EAEO8M,EAAAA,UAAAA,OAAR,WACE,IAAM9M,EAAQ,KAAKF,KAAKqM,QAAQ,KAAKhL,KAErC,OADA,KAAKA,MACEnB,CACR,EAEO8M,EAAAA,UAAAA,QAAR,WACE,IAAM9M,EAAQ,KAAKF,KAAK4Q,UAAU,KAAKvP,KAEvC,OADA,KAAKA,KAAO,EACLnB,CACR,EAEO8M,EAAAA,UAAAA,QAAR,WACE,IAAM9M,EAAQ,KAAKF,KAAK6Q,SAAS,KAAKxP,KAEtC,OADA,KAAKA,KAAO,EACLnB,CACR,EAEO8M,EAAAA,UAAAA,QAAR,WACE,IAAM9M,EAAQ,KAAKF,KAAKU,UAAU,KAAKW,KAEvC,OADA,KAAKA,KAAO,EACLnB,CACR,EAEO8M,EAAAA,UAAAA,QAAR,WACE,IAAM9M,EAAQ,KAAKF,KAAKS,SAAS,KAAKY,KAEtC,OADA,KAAKA,KAAO,EACLnB,CACR,EAEO8M,EAAAA,UAAAA,QAAR,WACE,IVjkBsBhN,EAAgBC,EUikBhCC,GVjkBgBF,EUikBE,KAAKA,KVjkBSC,EUikBH,KAAKoB,IV9jB5B,WAFDrB,EAAKU,UAAUT,GAChBD,EAAKU,UAAUT,EAAS,IUikBlC,OADA,KAAKoB,KAAO,EACLnB,CACR,EAEO8M,EAAAA,UAAAA,QAAR,WACE,IAAM9M,EAAQM,EAAS,KAAKR,KAAM,KAAKqB,KAEvC,OADA,KAAKA,KAAO,EACLnB,CACR,EAEO8M,EAAAA,UAAAA,QAAR,WACE,IAAM9M,EAAQ,KAAKF,KAAK8Q,WAAW,KAAKzP,KAExC,OADA,KAAKA,KAAO,EACLnB,CACR,EAEO8M,EAAAA,UAAAA,QAAR,WACE,IAAM9M,EAAQ,KAAKF,KAAK+Q,WAAW,KAAK1P,KAExC,OADA,KAAKA,KAAO,EACLnB,CACR,EACH,CAAC,CArjBD,8CCxDM,MAAO8Q,EAKU,aAAClP,GAChB,IAAI2H,EAAO3H,EAAOV,YAAcU,EAAOX,OACvC,MAAM8P,EAAY,GAClB,EAAG,CACC,IAAIC,EAAkB,IAAPzH,EACfA,IAAe,EACXA,EAAO,IACPyH,GAAY,KAEhBD,EAAUvO,KAAKwO,EAClB,OACMzH,EAAO,GAEdA,EAAO3H,EAAOV,YAAcU,EAAOX,OAEnC,MAAM4D,EAAS,IAAIF,WAAWoM,EAAU9P,OAASsI,GAGjD,OAFA1E,EAAO9C,IAAIgP,EAAW,GACtBlM,EAAO9C,IAAIH,EAAQmP,EAAU9P,QACtB4D,EAAOA,MACjB,CAEkB,aAACoM,GAChB,MAAM3O,EAAuB,GACvB4O,EAAa,IAAIvM,WAAWsM,GAE5BE,EAAiB,CAAC,EAAG,EAAG,GAAI,GAAI,IAEtC,IAAK,IAAIpR,EAAS,EAAGA,EAASkR,EAAM/P,YAAa,CAC7C,IAEIkQ,EAFAC,EAAW,EACX9H,EAAO,EAEX,GACI6H,EAAWF,EAAWnR,EAASsR,GAC/B9H,IAA2B,IAAX6H,IAAqBD,EAAeE,GACpDA,UAEGA,EAAWnR,KAAKoR,IAZC,EAYwBL,EAAM/P,WAAanB,IAAiC,IAAV,IAAXqR,IAE/E,GAA0B,IAAV,IAAXA,IAA0BC,EAdP,EAepB,MAAM,IAAInN,MAAM,6BAGpB,GAlBwB,IAkBpBmN,GAAoCD,EAAW,EAC/C,MAAM,IAAIlN,MAAM,+CAGpB,KAAIgN,EAAWhQ,YAAenB,EAASsR,EAAW9H,GAM9C,MAAM,IAAIrF,MAAM,uBAJhB5B,EAAOE,KAAK0O,EAAWrF,MACjBqF,EAAWrF,MAAM9L,EAASsR,EAAUtR,EAASsR,EAAW9H,GACxD2H,EAAWpP,SAAS/B,EAASsR,EAAUtR,EAASsR,EAAW9H,IAKrExJ,EAASA,EAASsR,EAAW9H,CAChC,CAED,OAAOjH,CACV,ECjDL,MAAMiP,EAAsC,IAAI5M,WAAW,CAAC,IAAM6M,EAAAA,EAAAA,OAG5D,MAAOC,EAmBTpF,YAAYqF,GAjBI,KAAA1N,KAAe,cAEf,KAAA2N,QAAkB,EAElB,KAAAC,eAAiCC,EAAAA,EAAAA,OAEhC,KAAAC,aAAe,EACf,KAAAC,YAAc,EACd,KAAAC,eAAiB,EAU9BN,EAAqBA,GAAsB,CAAC,EAC5CO,KAAKC,SAAW,IAAIpL,EAChB4K,EAAmBnL,eACnBmL,EAAmB5L,QACnB4L,EAAmBlL,SACnBkL,EAAmBjL,kBACnBiL,EAAmBhL,SACnBgL,EAAmB/K,aACnB+K,EAAmB9K,gBACnB8K,EAAmB7K,qBAGvBoL,KAAKE,SAAW,IAAIrF,EAChB4E,EAAmBnL,eACnBmL,EAAmB5L,QACnB4L,EAAmBlF,aACnBkF,EAAmBjF,aACnBiF,EAAmBhF,eACnBgF,EAAmB/E,aACnB+E,EAAmB9E,aAE1B,CAOMwF,cAAcnB,EAAoBoB,GAErC,KCpEsBC,EDoEFrB,ICnEa,oBAAhB7K,eAChBkM,aAAelM,aAEfkM,EAAIjG,aAAwC,gBAAzBiG,EAAIjG,YAAYrI,MDiEhC,MAAM,IAAIE,MAAM,wECrEtB,IAAwBoO,EDwEP,OAAXD,IACAA,EAASE,EAAAA,EAAAA,UAGb,MAAMC,EAAW1B,EAAoB2B,MAAMxB,GAErCyB,EAAc,GACpB,IAAK,MAAMtP,KAAWoP,EAAU,CAC5B,MAAMG,EAAgBV,KAAKW,cAAcxP,EAASiP,GAE9CM,GACAD,EAAYlQ,KAAKmQ,EAExB,CAED,OAAOD,CACV,CAOMG,aAAazP,GAChB,OAAQA,EAAQF,MACZ,KAAKsO,EAAAA,EAAAA,WACD,OAAOS,KAAKa,iBAAiB1P,GACjC,KAAKoO,EAAAA,EAAAA,iBACD,OAAOS,KAAKc,uBAAuB3P,GACvC,KAAKoO,EAAAA,EAAAA,WACD,OAAOS,KAAKe,iBAAiB5P,GACjC,KAAKoO,EAAAA,EAAAA,WACD,OAAOS,KAAKgB,iBAAiB7P,GACjC,KAAKoO,EAAAA,EAAAA,KACD,OAAOV,EAAoBoC,MAAM3B,GACrC,KAAKC,EAAAA,EAAAA,iBACD,OAAOS,KAAKkB,uBAAuB/P,GACvC,QACI,MAAM,IAAIc,MAAM,yBAE3B,CAEO0O,cAAc3B,EAAmBoB,GACrC,GAAqB,IAAjBpB,EAAMhQ,OACN,MAAM,IAAIiD,MAAM,oBAGpB,MAAMkP,EAAanB,KAAKE,SAASjN,OAAO+L,GACxC,GAA0B,IAAtBmC,EAAWnS,UAAkBmS,aAAsBnK,OACnD,MAAM,IAAI/E,MAAM,oBAGpB,MAAMmP,EAAcD,EAAW,GAE/B,OAAQC,GACJ,KAAK7B,EAAAA,EAAAA,WACD,OAAOS,KAAKqB,yBAAyBrB,KAAKsB,aAAaH,GAAaA,GACxE,KAAK5B,EAAAA,EAAAA,WACD,OAAOS,KAAKuB,yBAAyBvB,KAAKsB,aAAaH,GAAaA,GACxE,KAAK5B,EAAAA,EAAAA,WACD,OAAOS,KAAKwB,yBAAyBxB,KAAKsB,aAAaH,GAAaA,GACxE,KAAK5B,EAAAA,EAAAA,KACD,OAAOS,KAAKyB,mBAAmBN,GACnC,KAAK5B,EAAAA,EAAAA,MACD,OAAOS,KAAK0B,oBAAoBP,GACpC,QAGI,OADAf,EAAOuB,IAAIC,EAAAA,EAAAA,YAAsB,yBAA2BR,EAAc,cACnE,KAElB,CAEOM,oBAAoBP,GAExB,GAAIA,EAAWnS,OAAS,EACpB,MAAM,IAAIiD,MAAM,sCAGpB,MAAO,CAEH4P,eAAgBV,EAAWnS,QAAU,EAAImS,EAAW,QAAK7R,EACzDwS,MAAOX,EAAW,GAClBlQ,KAAMsO,EAAAA,EAAAA,MAEb,CAEOkC,mBAAmBN,GAEvB,GAAIA,EAAWnS,OAAS,EACpB,MAAM,IAAIiD,MAAM,qCAGpB,MAAO,CAEHhB,KAAMsO,EAAAA,EAAAA,KAEb,CAEO8B,yBAAyBU,EAAyBZ,GAEtD,GAAIA,EAAWnS,OAAS,EACpB,MAAM,IAAIiD,MAAM,2CAGpB,MAAM+P,EAAeb,EAAW,GAChC,OAAIa,EACO,CACHC,UAAWd,EAAW,GACtBY,UACAC,eACAE,UAAW,GACXC,OAAQhB,EAAW,GACnBlQ,KAAMsO,EAAAA,EAAAA,YAGH,CACH0C,UAAWd,EAAW,GACtBY,UACAG,UAAW,GACXC,OAAQhB,EAAW,GACnBlQ,KAAMsO,EAAAA,EAAAA,WAIjB,CAEOgC,yBAAyBQ,EAAyBZ,GAEtD,GAAIA,EAAWnS,OAAS,EACpB,MAAM,IAAIiD,MAAM,2CAGpB,MAAO,CACH8P,UACAC,aAAcb,EAAW,GACzB1J,KAAM0J,EAAW,GACjBlQ,KAAMsO,EAAAA,EAAAA,WAEb,CAEOiC,yBAAyBO,EAAyBZ,GAEtD,GAAIA,EAAWnS,OAAS,EACpB,MAAM,IAAIiD,MAAM,2CAGpB,MAAMmQ,EAAajB,EAAW,GAE9B,GAAIiB,IAAepC,KAAKF,aAAeqB,EAAWnS,OAAS,EACvD,MAAM,IAAIiD,MAAM,2CAGpB,IAAI6P,EACAzR,EAEJ,OAAQ+R,GACJ,KAAKpC,KAAKH,aACNiC,EAAQX,EAAW,GACnB,MACJ,KAAKnB,KAAKD,eACN1P,EAAS8Q,EAAW,GAY5B,MAR6C,CACzCW,QACAC,UACAC,aAAcb,EAAW,GACzB9Q,SACAY,KAAMsO,EAAAA,EAAAA,WAIb,CAEOsB,iBAAiBwB,GACrB,IAAIC,EASJ,OAPIA,EADAD,EAAkBH,UACRlC,KAAKC,SAASlQ,OAAO,CAACwP,EAAAA,EAAAA,WAAwB8C,EAAkBN,SAAW,CAAC,EAAGM,EAAkBL,cAAgB,KAC3HK,EAAkBF,OAAQE,EAAkBJ,UAAWI,EAAkBH,YAE/DlC,KAAKC,SAASlQ,OAAO,CAACwP,EAAAA,EAAAA,WAAwB8C,EAAkBN,SAAW,CAAC,EAAGM,EAAkBL,cAAgB,KAC3HK,EAAkBF,OAAQE,EAAkBJ,YAGzCpD,EAAoBoC,MAAMqB,EAAQ1I,QAC5C,CAEOkH,uBAAuByB,GAC3B,IAAID,EASJ,OAPIA,EADAC,EAAwBL,UACdlC,KAAKC,SAASlQ,OAAO,CAACwP,EAAAA,EAAAA,iBAA8BgD,EAAwBR,SAAW,CAAC,EAAGQ,EAAwBP,aAC7HO,EAAwBJ,OAAQI,EAAwBN,UAAWM,EAAwBL,YAEjFlC,KAAKC,SAASlQ,OAAO,CAACwP,EAAAA,EAAAA,iBAA8BgD,EAAwBR,SAAW,CAAC,EAAGQ,EAAwBP,aAC7HO,EAAwBJ,OAAQI,EAAwBN,YAGrDpD,EAAoBoC,MAAMqB,EAAQ1I,QAC5C,CAEOmH,iBAAiByB,GACrB,MAAMF,EAAUtC,KAAKC,SAASlQ,OAAO,CAACwP,EAAAA,EAAAA,WAAwBiD,EAAkBT,SAAW,CAAC,EAAGS,EAAkBR,aACjHQ,EAAkB/K,OAElB,OAAOoH,EAAoBoC,MAAMqB,EAAQ1I,QAC5C,CAEOoH,iBAAiByB,GACrB,MAAML,EAAaK,EAAkBX,MAAQ9B,KAAKH,aAAe4C,EAAkBpS,OAAS2P,KAAKD,eAAiBC,KAAKF,YAEvH,IAAIwC,EACJ,OAAQF,GACJ,KAAKpC,KAAKH,aACNyC,EAAUtC,KAAKC,SAASlQ,OAAO,CAACwP,EAAAA,EAAAA,WAAwBkD,EAAkBV,SAAW,CAAC,EAAGU,EAAkBT,aAAcI,EAAYK,EAAkBX,QACvJ,MACJ,KAAK9B,KAAKF,YACNwC,EAAUtC,KAAKC,SAASlQ,OAAO,CAACwP,EAAAA,EAAAA,WAAwBkD,EAAkBV,SAAW,CAAC,EAAGU,EAAkBT,aAAcI,IACzH,MACJ,KAAKpC,KAAKD,eACNuC,EAAUtC,KAAKC,SAASlQ,OAAO,CAACwP,EAAAA,EAAAA,WAAwBkD,EAAkBV,SAAW,CAAC,EAAGU,EAAkBT,aAAcI,EAAYK,EAAkBpS,SAI/J,OAAOwO,EAAoBoC,MAAMqB,EAAQ1I,QAC5C,CAEOsH,uBAAuBwB,GAC3B,MAAMJ,EAAUtC,KAAKC,SAASlQ,OAAO,CAACwP,EAAAA,EAAAA,iBAA8BmD,EAAwBX,SAAW,CAAC,EAAGW,EAAwBV,eAEnI,OAAOnD,EAAoBoC,MAAMqB,EAAQ1I,QAC5C,CAEO0H,aAAaH,GACjB,MAAMY,EAA0BZ,EAAW,GAC3C,GAAuB,iBAAZY,EACP,MAAM,IAAI9P,MAAM,oBAEpB,OAAO8P,CACV,kDEtTL,MAAMY,EAAuC,CAAC,EAAG,IAAM,IAAO,IAAO,MAG/D,MAAOC,EAGTxI,YAAYyI,GACR7C,KAAK8C,kBAA+BxT,IAAhBuT,EAA4B,IAAIA,EAAa,MAAQF,CAC5E,CAEMI,6BAA6BC,GAChC,OAAOhD,KAAK8C,aAAaE,EAAaC,mBACzC,ECZC,MAAOC,UAAkBjR,MAa3BmI,YAAY+I,EAAsBC,GAC9B,MAAMC,aAAuB5R,UAC7B6R,MAAM,GAAGH,mBAA8BC,MACvCpD,KAAKoD,WAAaA,EAIlBpD,KAAKuD,UAAYF,CACpB,EAIC,MAAOG,UAAqBvR,MAS9BmI,YAAY+I,EAAuB,uBAC/B,MAAME,aAAuB5R,UAC7B6R,MAAMH,GAINnD,KAAKuD,UAAYF,CACpB,EAIC,MAAOI,UAAmBxR,MAS5BmI,YAAY+I,EAAuB,sBAC/B,MAAME,aAAuB5R,UAC7B6R,MAAMH,GAINnD,KAAKuD,UAAYF,CACpB,EAKC,MAAOK,UAAkCzR,MAgB3CmI,YAAYjJ,EAAiBwS,GACzB,MAAMN,aAAuB5R,UAC7B6R,MAAMnS,GACN6O,KAAK2D,UAAYA,EACjB3D,KAAK4D,UAAY,4BAIjB5D,KAAKuD,UAAYF,CACpB,EAKC,MAAOQ,UAA+B5R,MAgBxCmI,YAAYjJ,EAAiBwS,GACzB,MAAMN,aAAuB5R,UAC7B6R,MAAMnS,GACN6O,KAAK2D,UAAYA,EACjB3D,KAAK4D,UAAY,yBAIjB5D,KAAKuD,UAAYF,CACpB,EAKC,MAAOS,UAAoC7R,MAgB7CmI,YAAYjJ,EAAiBwS,GACzB,MAAMN,aAAuB5R,UAC7B6R,MAAMnS,GACN6O,KAAK2D,UAAYA,EACjB3D,KAAK4D,UAAY,8BAIjB5D,KAAKuD,UAAYF,CACpB,EAKC,MAAOU,UAAyC9R,MAYlDmI,YAAYjJ,GACR,MAAMkS,aAAuB5R,UAC7B6R,MAAMnS,GACN6O,KAAK4D,UAAY,mCAIjB5D,KAAKuD,UAAYF,CACpB,EAKC,MAAOW,UAAwB/R,MAajCmI,YAAYjJ,EAAiB8S,GACzB,MAAMZ,aAAuB5R,UAC7B6R,MAAMnS,GAEN6O,KAAKiE,YAAcA,EAInBjE,KAAKuD,UAAYF,CACpB,EC/KC,MAAOa,EAqCT9J,YACoBgJ,EACAe,EACAC,GAFA,KAAAhB,WAAAA,EACA,KAAAe,WAAAA,EACA,KAAAC,QAAAA,CACnB,EAOC,MAAgBC,EAeXC,IAAIC,EAAaC,GACpB,OAAOxE,KAAKyE,KAAK,IACVD,EACHE,OAAQ,MACRH,OAEP,CAgBMI,KAAKJ,EAAaC,GACrB,OAAOxE,KAAKyE,KAAK,IACVD,EACHE,OAAQ,OACRH,OAEP,CAgBMK,OAAOL,EAAaC,GACvB,OAAOxE,KAAKyE,KAAK,IACVD,EACHE,OAAQ,SACRH,OAEP,CAeMM,gBAAgBN,GACnB,MAAO,EACV,uCHrJC,MAAOO,EACe,kBAACzE,EAAUtO,GAC/B,GAAIsO,QACA,MAAM,IAAIpO,MAAM,QAAQF,2BAE/B,CACuB,kBAACsO,EAAatO,GAClC,IAAKsO,GAAOA,EAAI0E,MAAM,SAClB,MAAM,IAAI9S,MAAM,QAAQF,mCAE/B,CAEiB,YAACsO,EAAUrI,EAAajG,GAEtC,KAAMsO,KAAOrI,GACT,MAAM,IAAI/F,MAAM,WAAWF,YAAesO,KAEjD,EAIC,MAAO2E,EAESC,uBACd,MAAyB,iBAAXC,QAAkD,iBAApBA,OAAOC,QACtD,CAGiBC,yBACd,MAAuB,iBAATC,MAAqB,kBAAmBA,IACzD,CAGUC,2BACP,MAAyB,iBAAXJ,aAAkD,IAApBA,OAAOC,QACtD,CAIiBI,oBACd,OAAQ,KAAKN,YAAc,KAAKG,cAAgB,KAAKE,aACxD,EAIC,SAAUE,EAActU,EAAWuU,GACrC,IAAIC,EAAS,GAYb,OAXIC,EAAczU,IACdwU,EAAS,yBAAyBxU,EAAKjC,aACnCwW,IACAC,GAAU,eAYhB,SAA4BxU,GAC9B,MAAMrD,EAAO,IAAI6E,WAAWxB,GAG5B,IAAIpC,EAAM,GAOV,OANAjB,EAAK+X,SAASC,IAEV/W,GAAO,KADK+W,EAAM,GAAK,IAAM,KACXA,EAAIzO,SAAS,MAA/B,IAIGtI,EAAIgX,OAAO,EAAGhX,EAAIE,OAAS,EACrC,CAxBoC+W,CAAkB7U,QAExB,iBAATA,IACdwU,EAAS,yBAAyBxU,EAAKlC,SACnCyW,IACAC,GAAU,eAAexU,OAG1BwU,CACV,CAmBK,SAAUC,EAActF,GAC1B,OAAOA,GAA8B,oBAAhBlM,cAChBkM,aAAelM,aAEXkM,EAAIjG,aAAwC,gBAAzBiG,EAAIjG,YAAYrI,KAC/C,CAGM,eAAeiU,EAAY5F,EAAiB6F,EAAuBC,EAAwB3B,EAAa4B,EAC7E/B,EAA+BI,GAC7D,IAAIzC,EAAiC,GACrC,GAAIoE,EAAoB,CACpB,MAAMC,QAAcD,IAChBC,IACArE,EAAU,CACN,cAAmB,UAAUqE,KAGxC,CAED,MAAOrU,EAAMhE,GAASsY,IACtBtE,EAAQhQ,GAAQhE,EAEhBqS,EAAOuB,IAAIC,EAAAA,EAAAA,MAAgB,IAAIqE,8BAA0CT,EAAcpB,EAASI,EAAQ8B,uBAExG,MAAMC,EAAeZ,EAAcvB,GAAW,cAAgB,OACxDoC,QAAiBN,EAAWvB,KAAKJ,EAAK,CACxCH,UACArC,QAAS,IAAKA,KAAYyC,EAAQzC,SAClCwE,eACAE,QAASjC,EAAQiC,QACjBC,gBAAiBlC,EAAQkC,kBAG7BtG,EAAOuB,IAAIC,EAAAA,EAAAA,MAAgB,IAAIqE,mDAA+DO,EAASpD,cAC1G,CAoBK,MAAOuD,EAITvM,YAAYwM,EAAqBC,GAC7B,KAAKC,SAAWF,EAChB,KAAKG,UAAYF,CACpB,CAEMG,UACH,MAAMtT,EAAgB,KAAKoT,SAASG,UAAUC,QAAQ,KAAKH,WACvDrT,GAAS,GACT,KAAKoT,SAASG,UAAUE,OAAOzT,EAAO,GAGH,IAAnC,KAAKoT,SAASG,UAAUjY,QAAgB,KAAK8X,SAASM,gBACtD,KAAKN,SAASM,iBAAiBC,OAAOC,OAE7C,EAIC,MAAOC,EAWTnN,YAAYoN,GACR,KAAKC,UAAYD,EACjB,KAAKE,IAAMC,OACd,CAEMhG,IAAIiG,EAAoBzW,GAC3B,GAAIyW,GAAY,KAAKH,UAAW,CAC5B,MAAMI,EAAM,KAAI,IAAIrV,MAAOsV,kBAAkBlG,EAAAA,EAASgG,OAAczW,IACpE,OAAQyW,GACJ,KAAKhG,EAAAA,EAAAA,SACL,KAAKA,EAAAA,EAAAA,MACD,KAAK8F,IAAI5F,MAAM+F,GACf,MACJ,KAAKjG,EAAAA,EAAAA,QACD,KAAK8F,IAAIK,KAAKF,GACd,MACJ,KAAKjG,EAAAA,EAAAA,YACD,KAAK8F,IAAIM,KAAKH,GACd,MACJ,QAEI,KAAKH,IAAI/F,IAAIkG,GAGxB,CACJ,EAIC,SAAUxB,IACZ,IAAI4B,EAAsB,uBAI1B,OAHIjD,EAASO,SACT0C,EAAsB,cAEnB,CAAEA,EAAqBC,EA1MH,QA0M+BC,IAAaC,IAAcC,KACxF,CAGK,SAAUH,EAAmBxI,EAAiB4I,EAAYC,EAAiBC,GAE7E,IAAIC,EAAoB,qBAExB,MAAMC,EAAgBhJ,EAAQiJ,MAAM,KAmBpC,OAlBAF,GAAa,GAAGC,EAAc,MAAMA,EAAc,KAClDD,GAAa,KAAK/I,MAGd+I,GADAH,GAAa,KAAPA,EACO,GAAGA,MAEH,eAGjBG,GAAa,GAAGF,IAGZE,GADAD,EACa,KAAKA,IAEL,4BAGjBC,GAAa,IACNA,CACV,CAGa,SAASN,IACnB,IAAInD,EAASO,OAYT,MAAO,GAXP,OAAQ9W,EAAQma,UACZ,IAAK,QACD,MAAO,aACX,IAAK,SACD,MAAO,QACX,IAAK,QACD,MAAO,QACX,QACI,OAAOna,EAAQma,SAK9B,CAGa,SAASP,IACnB,GAAIrD,EAASO,OACT,OAAO9W,EAAQoa,SAASC,IAG/B,CAED,SAASV,IACL,OAAIpD,EAASO,OACF,SAEA,SAEd,CAGK,SAAUwD,EAAe5O,GAC3B,OAAIA,EAAEa,MACKb,EAAEa,MACFb,EAAEhJ,QACFgJ,EAAEhJ,QAEN,GAAGgJ,GACb,CIpRK,MAAO6O,UAAwB3E,EAOjCjK,YAAmBgG,GAIf,GAHAkD,QACAtD,KAAKiJ,QAAU7I,EAEM,oBAAV8I,MAAuB,CAG9B,MAAMC,EAA0DC,QAGhEpJ,KAAKqJ,KAAO,IAAKF,EAAY,gBAAjB,WACZnJ,KAAKsJ,WAAaH,EAAY,cAI9BnJ,KAAKsJ,WAAaH,EAAY,eAAZA,CAA4BnJ,KAAKsJ,WAAYtJ,KAAKqJ,KACvE,MACGrJ,KAAKsJ,WAAaJ,MAAMK,KJ+P9B,WAEF,GAA0B,oBAAfC,WACP,OAAOA,WAEX,GAAoB,oBAATnE,KACP,OAAOA,KAEX,GAAsB,oBAAXH,OACP,OAAOA,OAEX,QAAsB,IAAXuE,EAAAA,EACP,OAAOA,EAAAA,EAEX,MAAM,IAAIxX,MAAM,wBACnB,CI9QwCyX,IAEjC,GAA+B,oBAApBC,gBAAiC,CAGxC,MAAMR,EAA0DC,QAGhEpJ,KAAK4J,qBAAuBT,EAAY,mBAC3C,MACGnJ,KAAK4J,qBAAuBD,eAEnC,CAGgB,WAACE,GAEd,GAAIA,EAAQC,aAAeD,EAAQC,YAAYC,QAC3C,MAAM,IAAItG,EAGd,IAAKoG,EAAQnF,OACT,MAAM,IAAIzS,MAAM,sBAEpB,IAAK4X,EAAQtF,IACT,MAAM,IAAItS,MAAM,mBAGpB,MAAM+X,EAAkB,IAAIhK,KAAK4J,qBAEjC,IAAI9H,EAEA+H,EAAQC,cACRD,EAAQC,YAAYG,QAAU,KAC1BD,EAAgBE,QAChBpI,EAAQ,IAAI2B,CAAZ,GAMR,IAUI+C,EAVA2D,EAAiB,KACrB,GAAIN,EAAQpD,QAAS,CACjB,MAAM2D,EAAYP,EAAQpD,QAC1B0D,EAAYE,YAAW,KACnBL,EAAgBE,QAChBlK,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,QAAkB,8BACnCE,EAAQ,IAAI0B,CAAZ,GACD4G,EACN,CAGD,IACI5D,QAAiBxG,KAAKsJ,WAAWO,EAAQtF,IAAM,CAC3C+F,KAAMT,EAAQzF,QACdmG,MAAO,WACPC,aAAyC,IAA5BX,EAAQnD,gBAA2B,UAAY,cAC5D3E,QAAS,CACL,eAAgB,2BAChB,mBAAoB,oBACjB8H,EAAQ9H,SAEf2C,OAAQmF,EAAQnF,OAChB+F,KAAM,OACNC,SAAU,SACVC,OAAQX,EAAgBW,QAkB/B,CAhBC,MAAOxQ,GACL,GAAI2H,EACA,MAAMA,EAMV,MAJA9B,KAAKiJ,QAAQtH,IACTC,EAAAA,EAAAA,QACA,4BAA4BzH,MAE1BA,CACT,CAxBD,QAyBQgQ,GACAS,aAAaT,GAEbN,EAAQC,cACRD,EAAQC,YAAYG,QAAU,KAErC,CAED,IAAKzD,EAASqE,GAAI,CACd,MAAM1H,QAAqB2H,EAAmBtE,EAAU,QACxD,MAAM,IAAItD,EAAUC,GAAgBqD,EAASrC,WAAYqC,EAASuE,OACrE,CAED,MAAM3G,EAAU0G,EAAmBtE,EAAUqD,EAAQtD,cAC/CjE,QAAgB8B,EAEtB,OAAO,IAAIF,EACPsC,EAASuE,OACTvE,EAASrC,WACT7B,EAEP,CAEMuC,gBAAgBN,GACnB,IAAIyG,EAAkB,GAKtB,OAJIhG,EAASO,QAAUvF,KAAKqJ,MAExBrJ,KAAKqJ,KAAK4B,WAAW1G,GAAK,CAACpK,EAAG+Q,IAAMF,EAAUE,EAAEC,KAAK,QAElDH,CACV,EAGL,SAASF,EAAmBtE,EAAoBD,GAC5C,IAAInC,EACJ,OAAQmC,GACJ,IAAK,cACDnC,EAAUoC,EAAS4E,cACnB,MACJ,IAAK,OAOL,QACIhH,EAAUoC,EAAS6E,OACnB,MANJ,IAAK,OACL,IAAK,WACL,IAAK,OACD,MAAM,IAAIpZ,MAAM,GAAGsU,uBAM3B,OAAOnC,CACV,CC7JK,MAAOkH,UAAsBjH,EAG/BjK,YAAmBgG,GACfkD,QACAtD,KAAKiJ,QAAU7I,CAClB,CAGMqE,KAAKoF,GAER,OAAIA,EAAQC,aAAeD,EAAQC,YAAYC,QACpCwB,QAAQC,OAAO,IAAI/H,GAGzBoG,EAAQnF,OAGRmF,EAAQtF,IAIN,IAAIgH,SAAsB,CAACE,EAASD,KACvC,MAAME,EAAM,IAAIC,eAEhBD,EAAIE,KAAK/B,EAAQnF,OAASmF,EAAQtF,KAAM,GACxCmH,EAAIhF,qBAA8CpX,IAA5Bua,EAAQnD,iBAAuCmD,EAAQnD,gBAC7EgF,EAAIG,iBAAiB,mBAAoB,kBAEzCH,EAAIG,iBAAiB,eAAgB,4BAErC,MAAM9J,EAAU8H,EAAQ9H,QACpBA,GACAzQ,OAAOoG,KAAKqK,GACP6D,SAASkG,IACNJ,EAAIG,iBAAiBC,EAAQ/J,EAAQ+J,GAArC,IAIRjC,EAAQtD,eACRmF,EAAInF,aAAesD,EAAQtD,cAG3BsD,EAAQC,cACRD,EAAQC,YAAYG,QAAU,KAC1ByB,EAAIxB,QACJsB,EAAO,IAAI/H,EAAX,GAIJoG,EAAQpD,UACRiF,EAAIjF,QAAUoD,EAAQpD,SAG1BiF,EAAIK,OAAS,KACLlC,EAAQC,cACRD,EAAQC,YAAYG,QAAU,MAG9ByB,EAAIX,QAAU,KAAOW,EAAIX,OAAS,IAClCU,EAAQ,IAAIvH,EAAawH,EAAIX,OAAQW,EAAIvH,WAAYuH,EAAIlF,UAAYkF,EAAIM,eAEzER,EAAO,IAAItI,EAAUwI,EAAIlF,UAAYkF,EAAIM,cAAgBN,EAAIvH,WAAYuH,EAAIX,QAChF,EAGLW,EAAIO,QAAU,KACVjM,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,QAAkB,4BAA4B8J,EAAIX,WAAWW,EAAIvH,eAClFqH,EAAO,IAAItI,EAAUwI,EAAIvH,WAAYuH,EAAIX,QAAzC,EAGJW,EAAIQ,UAAY,KACZlM,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,QAAkB,8BACnC4J,EAAO,IAAIhI,EAAX,EAGJkI,EAAIjH,KAAKoF,EAAQzF,SAAW,GAA5B,IAzDOmH,QAAQC,OAAO,IAAIvZ,MAAM,oBAHzBsZ,QAAQC,OAAO,IAAIvZ,MAAM,sBA8DvC,EC1EC,MAAOka,UAA0B9H,EAInCjK,YAAmBgG,GAGf,GAFAkD,QAEqB,oBAAV4F,OAAyBlE,EAASO,OACzCvF,KAAKoM,YAAc,IAAIpD,EAAgB5I,OACpC,IAA8B,oBAAnBuL,eAGd,MAAM,IAAI1Z,MAAM,+BAFhB+N,KAAKoM,YAAc,IAAId,EAAclL,EAGxC,CACJ,CAGMqE,KAAKoF,GAER,OAAIA,EAAQC,aAAeD,EAAQC,YAAYC,QACpCwB,QAAQC,OAAO,IAAI/H,GAGzBoG,EAAQnF,OAGRmF,EAAQtF,IAINvE,KAAKoM,YAAY3H,KAAKoF,GAHlB0B,QAAQC,OAAO,IAAIvZ,MAAM,oBAHzBsZ,QAAQC,OAAO,IAAIvZ,MAAM,sBAOvC,CAEM4S,gBAAgBN,GACnB,OAAOvE,KAAKoM,YAAYvH,gBAAgBN,EAC3C,EC3CC,MAAgB8H,GACFA,EAAAA,cAAgB,gBAChBA,EAAAA,OAAS,uBCIvB,MAAO1C,EAAbvP,cACY,KAAAkS,YAAsB,EACvB,KAAArC,QAA+B,IAkBzC,CAhBUC,QACElK,KAAKsM,aACNtM,KAAKsM,YAAa,EACdtM,KAAKiK,SACLjK,KAAKiK,UAGhB,CAEGU,aACA,OAAO3K,IACV,CAEG+J,cACA,OAAO/J,KAAKsM,UACf,ECdC,MAAOC,EAoBTnS,YAAY8L,EAAwBC,EAAkE/F,EAAiBoE,GACnHxE,KAAKoM,YAAclG,EACnBlG,KAAKwM,oBAAsBrG,EAC3BnG,KAAKiJ,QAAU7I,EACfJ,KAAKyM,WAAa,IAAI9C,EACtB3J,KAAK0M,SAAWlI,EAEhBxE,KAAK2M,UAAW,EAEhB3M,KAAK4M,UAAY,KACjB5M,KAAK6M,QAAU,IAClB,CAfUC,kBACP,OAAO9M,KAAKyM,WAAW1C,OAC1B,CAemB,cAACxF,EAAa5E,GAU9B,GATAmF,EAAIiI,WAAWxI,EAAK,OACpBO,EAAIiI,WAAWpN,EAAgB,kBAC/BmF,EAAIkI,KAAKrN,EAAgBC,EAAAA,EAAgB,kBAEzCI,KAAKiN,KAAO1I,EAEZvE,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,uCAG7BjC,IAAmBC,EAAAA,EAAAA,QACQ,oBAAnB+L,gBAA+E,iBAAtC,IAAIA,gBAAiBpF,aACtE,MAAM,IAAItU,MAAM,8FAGpB,MAAOF,EAAMhE,GAASsY,IAChBtE,EAAU,CAAE,CAAChQ,GAAOhE,KAAUiS,KAAK0M,SAAS3K,SAE5CmL,EAA2B,CAC7BpD,YAAa9J,KAAKyM,WAAW9B,OAC7B5I,UACA0E,QAAS,IACTC,gBAAiB1G,KAAK0M,SAAShG,iBAG/B/G,IAAmBC,EAAAA,EAAAA,SACnBsN,EAAY3G,aAAe,eAG/B,MAAMH,QAAcpG,KAAKmN,kBACzBnN,KAAKoN,mBAAmBF,EAAa9G,GAIrC,MAAMiH,EAAU,GAAG9I,OAAS/R,KAAK8a,QACjCtN,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,oCAAoCyL,MACrE,MAAM7G,QAAiBxG,KAAKoM,YAAY9H,IAAI+I,EAASH,GACzB,MAAxB1G,EAASpD,YACTpD,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,qDAAqD4E,EAASpD,eAG/FpD,KAAKuN,YAAc,IAAIrK,EAAUsD,EAASrC,YAAc,GAAIqC,EAASpD,YACrEpD,KAAK2M,UAAW,GAEhB3M,KAAK2M,UAAW,EAGpB3M,KAAKwN,WAAaxN,KAAKyN,MAAMzN,KAAKiN,KAAMC,EAC3C,CAE4B,wBACzB,OAAIlN,KAAKwM,0BACQxM,KAAKwM,sBAGf,IACV,CAEOY,mBAAmBvD,EAAsBzD,GACxCyD,EAAQ9H,UACT8H,EAAQ9H,QAAU,CAAC,GAEnBqE,EACAyD,EAAQ9H,QAAQsK,EAAYqB,eAAiB,UAAUtH,IAGvDyD,EAAQ9H,QAAQsK,EAAYqB,uBACrB7D,EAAQ9H,QAAQsK,EAAYqB,cAE1C,CAEkB,YAACnJ,EAAa2I,GAC7B,IACI,KAAOlN,KAAK2M,UAAU,CAElB,MAAMvG,QAAcpG,KAAKmN,kBACzBnN,KAAKoN,mBAAmBF,EAAa9G,GAErC,IACI,MAAMiH,EAAU,GAAG9I,OAAS/R,KAAK8a,QACjCtN,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,oCAAoCyL,MACrE,MAAM7G,QAAiBxG,KAAKoM,YAAY9H,IAAI+I,EAASH,GAEzB,MAAxB1G,EAASpD,YACTpD,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,YAAsB,sDAEvC5B,KAAK2M,UAAW,GACe,MAAxBnG,EAASpD,YAChBpD,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,qDAAqD4E,EAASpD,eAG/FpD,KAAKuN,YAAc,IAAIrK,EAAUsD,EAASrC,YAAc,GAAIqC,EAASpD,YACrEpD,KAAK2M,UAAW,GAGZnG,EAASpC,SACTpE,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,0CAA0C4D,EAAcgB,EAASpC,QAASpE,KAAK0M,SAASpG,uBACrHtG,KAAK4M,WACL5M,KAAK4M,UAAUpG,EAASpC,UAI5BpE,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,qDAiB5C,CAdC,MAAOzH,GACA6F,KAAK2M,SAIFxS,aAAaqJ,EAEbxD,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,uDAGjC5B,KAAKuN,YAAcpT,EACnB6F,KAAK2M,UAAW,GARpB3M,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,wDAAwDzH,EAAEhJ,UAWlG,CACJ,CASJ,CAzDD,QAkDI6O,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,6CAI5B5B,KAAK8M,aACN9M,KAAK2N,eAEZ,CACJ,CAEgB,WAACzc,GACd,OAAK8O,KAAK2M,SAGH3G,EAAYhG,KAAKiJ,QAAS,cAAejJ,KAAKoM,YAAapM,KAAKiN,KAAOjN,KAAKwM,oBAAqBtb,EAAM8O,KAAK0M,UAFxGnB,QAAQC,OAAO,IAAIvZ,MAAM,gDAGvC,CAEgB,aACb+N,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,6CAGjC5B,KAAK2M,UAAW,EAChB3M,KAAKyM,WAAWvC,QAEhB,UACUlK,KAAKwN,WAGXxN,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,qDAAqD5B,KAAKiN,SAE3F,MAAMlL,EAAiC,CAAC,GACjChQ,EAAMhE,GAASsY,IACtBtE,EAAQhQ,GAAQhE,EAEhB,MAAM6f,EAA6B,CAC/B7L,QAAS,IAAKA,KAAY/B,KAAK0M,SAAS3K,SACxC0E,QAASzG,KAAK0M,SAASjG,QACvBC,gBAAiB1G,KAAK0M,SAAShG,iBAE7BN,QAAcpG,KAAKmN,kBACzBnN,KAAKoN,mBAAmBQ,EAAexH,SACjCpG,KAAKoM,YAAYxH,OAAO5E,KAAKiN,KAAOW,GAE1C5N,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,+CAOpC,CA1BD,QAqBI5B,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,0CAIjC5B,KAAK2N,eACR,CACJ,CAEOA,gBACJ,GAAI3N,KAAK6M,QAAS,CACd,IAAIgB,EAAa,gDACb7N,KAAKuN,cACLM,GAAc,WAAa7N,KAAKuN,aAEpCvN,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgBiM,GACjC7N,KAAK6M,QAAQ7M,KAAKuN,YACrB,CACJ,EC5NC,MAAOO,EAWT1T,YAAY8L,EAAwBC,EAAkE/F,EAC1FoE,GACRxE,KAAKoM,YAAclG,EACnBlG,KAAKwM,oBAAsBrG,EAC3BnG,KAAKiJ,QAAU7I,EACfJ,KAAK0M,SAAWlI,EAEhBxE,KAAK4M,UAAY,KACjB5M,KAAK6M,QAAU,IAClB,CAEmB,cAACtI,EAAa5E,GAU9B,GATAmF,EAAIiI,WAAWxI,EAAK,OACpBO,EAAIiI,WAAWpN,EAAgB,kBAC/BmF,EAAIkI,KAAKrN,EAAgBC,EAAAA,EAAgB,kBAEzCI,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,+BAGjC5B,KAAKiN,KAAO1I,EAERvE,KAAKwM,oBAAqB,CAC1B,MAAMpG,QAAcpG,KAAKwM,sBACrBpG,IACA7B,IAAQA,EAAI2C,QAAQ,KAAO,EAAI,IAAM,KAAO,gBAAgB6G,mBAAmB3H,KAEtF,CAED,OAAO,IAAImF,SAAc,CAACE,EAASD,KAC/B,IAMIwC,EANAC,GAAS,EACb,GAAItO,IAAmBC,EAAAA,EAAAA,KAAvB,CAMA,GAAIoF,EAASC,WAAaD,EAASI,YAC/B4I,EAAc,IAAIhO,KAAK0M,SAASwB,YAAa3J,EAAK,CAAEmC,gBAAiB1G,KAAK0M,SAAShG,sBAChF,CAEH,MAAMsE,EAAUhL,KAAKoM,YAAYvH,gBAAgBN,GAC3CxC,EAA0B,CAAC,EACjCA,EAAQoM,OAASnD,EACjB,MAAOjZ,EAAMhE,GAASsY,IACtBtE,EAAQhQ,GAAQhE,EAEhBigB,EAAc,IAAIhO,KAAK0M,SAASwB,YAAa3J,EAAK,CAAEmC,gBAAiB1G,KAAK0M,SAAShG,gBAAiB3E,QAAS,IAAKA,KAAY/B,KAAK0M,SAAS3K,UAC/I,CAED,IACIiM,EAAYI,UAAajU,IACrB,GAAI6F,KAAK4M,UACL,IACI5M,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,kCAAkC4D,EAAcrL,EAAEjJ,KAAM8O,KAAK0M,SAASpG,uBACvGtG,KAAK4M,UAAUzS,EAAEjJ,KAIpB,CAHC,MAAO4Q,GAEL,YADA9B,KAAKqO,OAAOvM,EAEf,CACJ,EAILkM,EAAY/B,QAAW9R,IAEf8T,EACAjO,KAAKqO,SAEL7C,EAAO,IAAIvZ,MAAM,gQAGpB,EAGL+b,EAAYM,OAAS,KACjBtO,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,YAAsB,oBAAoB5B,KAAKiN,QAChEjN,KAAKuO,aAAeP,EACpBC,GAAS,EACTxC,GAAS,CAKhB,CAHC,MAAOtR,GAEL,YADAqR,EAAOrR,EAEV,CAlDA,MAFGqR,EAAO,IAAIvZ,MAAM,6EAoDpB,GAER,CAEgB,WAACf,GACd,OAAK8O,KAAKuO,aAGHvI,EAAYhG,KAAKiJ,QAAS,MAAOjJ,KAAKoM,YAAapM,KAAKiN,KAAOjN,KAAKwM,oBAAqBtb,EAAM8O,KAAK0M,UAFhGnB,QAAQC,OAAO,IAAIvZ,MAAM,gDAGvC,CAEMuc,OAEH,OADAxO,KAAKqO,SACE9C,QAAQE,SAClB,CAEO4C,OAAOlU,GACP6F,KAAKuO,eACLvO,KAAKuO,aAAaE,QAClBzO,KAAKuO,kBAAejf,EAEhB0Q,KAAK6M,SACL7M,KAAK6M,QAAQ1S,GAGxB,ECtHC,MAAOuU,EAYTtU,YAAY8L,EAAwBC,EAAkE/F,EAC1FkG,EAA4BqI,EAA4C5M,GAChF/B,KAAKiJ,QAAU7I,EACfJ,KAAKwM,oBAAsBrG,EAC3BnG,KAAK4O,mBAAqBtI,EAC1BtG,KAAK6O,sBAAwBF,EAC7B3O,KAAKoM,YAAclG,EAEnBlG,KAAK4M,UAAY,KACjB5M,KAAK6M,QAAU,KACf7M,KAAK8O,SAAW/M,CACnB,CAEmB,cAACwC,EAAa5E,GAM9B,GALAmF,EAAIiI,WAAWxI,EAAK,OACpBO,EAAIiI,WAAWpN,EAAgB,kBAC/BmF,EAAIkI,KAAKrN,EAAgBC,EAAAA,EAAgB,kBACzCI,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,sCAE7B5B,KAAKwM,oBAAqB,CAC1B,MAAMpG,QAAcpG,KAAKwM,sBACrBpG,IACA7B,IAAQA,EAAI2C,QAAQ,KAAO,EAAI,IAAM,KAAO,gBAAgB6G,mBAAmB3H,KAEtF,CAED,OAAO,IAAImF,SAAc,CAACE,EAASD,KAE/B,IAAIuD,EADJxK,EAAMA,EAAIyK,QAAQ,QAAS,MAE3B,MAAMhE,EAAUhL,KAAKoM,YAAYvH,gBAAgBN,GACjD,IAAI0J,GAAS,EAEb,GAAIjJ,EAASO,OAAQ,CACjB,MAAMxD,EAAiC,CAAC,GACjChQ,EAAMhE,GAASsY,IACtBtE,EAAQhQ,GAAQhE,EAEZid,IACAjJ,EAAQsK,EAAY8B,QAAU,GAAGnD,KAIrC+D,EAAY,IAAI/O,KAAK6O,sBAAsBtK,OAAKjV,EAAW,CACvDyS,QAAS,IAAKA,KAAY/B,KAAK8O,WAEtC,CAEIC,IAEDA,EAAY,IAAI/O,KAAK6O,sBAAsBtK,IAG3C5E,IAAmBC,EAAAA,EAAAA,SACnBmP,EAAUE,WAAa,eAG3BF,EAAUT,OAAUY,IAChBlP,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,YAAsB,0BAA0B2C,MACjEvE,KAAKmP,WAAaJ,EAClBd,GAAS,EACTxC,GAAS,EAGbsD,EAAU9C,QAAWmD,IACjB,IAAItN,EAAa,KAGbA,EADsB,oBAAfuN,YAA8BD,aAAiBC,WAC9CD,EAAMtN,MAEN,wCAGZ9B,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,YAAsB,0BAA0BE,KAAjE,EAGJiN,EAAUX,UAAajd,IAEnB,GADA6O,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,yCAAyC4D,EAAcrU,EAAQD,KAAM8O,KAAK4O,wBACvG5O,KAAK4M,UACL,IACI5M,KAAK4M,UAAUzb,EAAQD,KAI1B,CAHC,MAAO4Q,GAEL,YADA9B,KAAKqO,OAAOvM,EAEf,CACJ,EAGLiN,EAAUlC,QAAWuC,IAGjB,GAAInB,EACAjO,KAAKqO,OAAOe,OACT,CACH,IAAItN,EAAa,KAGbA,EADsB,oBAAfuN,YAA8BD,aAAiBC,WAC9CD,EAAMtN,MAEN,iSAMZ0J,EAAO,IAAIvZ,MAAM6P,GACpB,EAlBL,GAqBP,CAEM2C,KAAKvT,GACR,OAAI8O,KAAKmP,YAAcnP,KAAKmP,WAAWG,aAAetP,KAAK6O,sBAAsBU,MAC7EvP,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,wCAAwC4D,EAActU,EAAM8O,KAAK4O,wBAClG5O,KAAKmP,WAAW1K,KAAKvT,GACdqa,QAAQE,WAGZF,QAAQC,OAAO,qCACzB,CAEMgD,OAOH,OANIxO,KAAKmP,YAGLnP,KAAKqO,YAAO/e,GAGTic,QAAQE,SAClB,CAEO4C,OAAOe,GAEPpP,KAAKmP,aAELnP,KAAKmP,WAAWtC,QAAU,OAC1B7M,KAAKmP,WAAWf,UAAY,OAC5BpO,KAAKmP,WAAWlD,QAAU,OAC1BjM,KAAKmP,WAAWV,QAChBzO,KAAKmP,gBAAa7f,GAGtB0Q,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,yCAC7B5B,KAAK6M,WACD7M,KAAKwP,cAAcJ,KAA8B,IAAnBA,EAAMK,UAAqC,MAAfL,EAAMM,KAEzDN,aAAiBnd,MACxB+N,KAAK6M,QAAQuC,GAEbpP,KAAK6M,UAJL7M,KAAK6M,QAAQ,IAAI5a,MAAM,sCAAsCmd,EAAMM,SAASN,EAAMO,QAAU,wBAOvG,CAEOH,cAAcJ,GAClB,OAAOA,GAAmC,kBAAnBA,EAAMK,UAAgD,iBAAfL,EAAMM,IACvE,ECvIC,MAAOE,EA0BTxV,YAAYmK,EAAaC,EAAkC,CAAC,GZ6D1D,IAAuBpE,EYrDrB,GArBI,KAAAyP,qBAA4D,OAKpD,KAAAC,SAAgB,CAAC,EAMhB,KAAAC,kBAA4B,EAGzCjL,EAAIiI,WAAWxI,EAAK,OAEpBvE,KAAKiJ,aZ2DM3Z,KADU8Q,EY1DOoE,EAAQpE,QZ4D7B,IAAImH,EAAc3F,EAAAA,EAAAA,aAGd,OAAXxB,EACOE,EAAAA,EAAAA,cAGqBhR,IAA3B8Q,EAAmBuB,IACbvB,EAGJ,IAAImH,EAAcnH,GYtErBJ,KAAKgQ,QAAUhQ,KAAKiQ,YAAY1L,IAEhCC,EAAUA,GAAW,CAAC,GACd8B,uBAAkDhX,IAA9BkV,EAAQ8B,mBAA0C9B,EAAQ8B,kBAC/C,kBAA5B9B,EAAQkC,sBAA6DpX,IAA5BkV,EAAQkC,gBAGxD,MAAM,IAAIzU,MAAM,mEAFhBuS,EAAQkC,qBAA8CpX,IAA5BkV,EAAQkC,iBAAuClC,EAAQkC,gBAIrFlC,EAAQiC,aAA8BnX,IAApBkV,EAAQiC,QAAwB,IAAajC,EAAQiC,QAEvE,IAAIyJ,EAAuB,KACvBC,EAAyB,KAE7B,GAAInL,EAASO,OAA0C,CAGnD,MAAM4D,EAA0DC,QAChE8G,EAAkB/G,EAAY,MAC9BgH,EAAoBhH,EAAY,cACnC,CAEInE,EAASO,QAA+B,oBAAd6K,WAA8B5L,EAAQ4L,UAE1DpL,EAASO,SAAWf,EAAQ4L,WAC/BF,IACA1L,EAAQ4L,UAAYF,GAHxB1L,EAAQ4L,UAAYA,UAOnBpL,EAASO,QAAiC,oBAAhB2I,aAAgC1J,EAAQ0J,YAE5DlJ,EAASO,SAAWf,EAAQ0J,kBACF,IAAtBiC,IACP3L,EAAQ0J,YAAciC,GAH1B3L,EAAQ0J,YAAcA,YAO1BlO,KAAKoM,YAAc5H,EAAQ0B,YAAc,IAAIiG,EAAkBnM,KAAKiJ,SACpEjJ,KAAKqQ,iBAAgB,eACrBrQ,KAAKsQ,oBAAqB,EAC1BtQ,KAAK0M,SAAWlI,EAEhBxE,KAAK4M,UAAY,KACjB5M,KAAK6M,QAAU,IAClB,CAIiB,YAAClN,GAOf,GANAA,EAAiBA,GAAkBC,EAAAA,EAAAA,OAEnCkF,EAAIkI,KAAKrN,EAAgBC,EAAAA,EAAgB,kBAEzCI,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,6CAA6ChC,EAAAA,EAAeD,QAEpE,iBAArBK,KAAKqQ,iBACL,OAAO9E,QAAQC,OAAO,IAAIvZ,MAAM,4EASpC,GANA+N,KAAKqQ,iBAAgB,aAErBrQ,KAAKuQ,sBAAwBvQ,KAAKwQ,eAAe7Q,SAC3CK,KAAKuQ,sBAGqB,kBAA5BvQ,KAAKqQ,iBAA2D,CAEhE,MAAMlf,EAAU,+DAMhB,OALA6O,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgBzQ,SAG3B6O,KAAKyQ,aAEJlF,QAAQC,OAAO,IAAIvZ,MAAMd,GACnC,CAAM,GAAgC,cAA5B6O,KAAKqQ,iBAAuD,CAEnE,MAAMlf,EAAU,8GAEhB,OADA6O,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgBzQ,GAC1Boa,QAAQC,OAAO,IAAIvZ,MAAMd,GACnC,CAED6O,KAAKsQ,oBAAqB,CAC7B,CAEM7L,KAAKvT,GACR,MAAyB,cAArB8O,KAAKqQ,iBACE9E,QAAQC,OAAO,IAAIvZ,MAAM,yEAG/B+N,KAAK0Q,aACN1Q,KAAK0Q,WAAa,IAAIC,EAAmB3Q,KAAK2D,YAI3C3D,KAAK0Q,WAAWjM,KAAKvT,GAC/B,CAEgB,WAAC4Q,GACd,MAAyB,iBAArB9B,KAAKqQ,kBACLrQ,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,+BAA+BE,2EACzDyJ,QAAQE,WAGM,kBAArBzL,KAAKqQ,kBACLrQ,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,+BAA+BE,4EACzD9B,KAAKyQ,eAGhBzQ,KAAKqQ,iBAAgB,gBAErBrQ,KAAKyQ,aAAe,IAAIlF,SAASE,IAE7BzL,KAAK6P,qBAAuBpE,CAA5B,UAIEzL,KAAK4Q,cAAc9O,cACnB9B,KAAKyQ,aACd,CAE0B,oBAAC3O,GAIxB9B,KAAK6Q,WAAa/O,EAElB,UACU9B,KAAKuQ,qBAGd,CAFC,MAAOpW,GAER,CAKD,GAAI6F,KAAK2D,UAAW,CAChB,UACU3D,KAAK2D,UAAU6K,MAIxB,CAHC,MAAOrU,GACL6F,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,gDAAgDzH,OACjF6F,KAAK8Q,iBACR,CAED9Q,KAAK2D,eAAYrU,CACpB,MACG0Q,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,yFAExC,CAE2B,qBAACjC,GAGzB,IAAI4E,EAAMvE,KAAKgQ,QACfhQ,KAAKwM,oBAAsBxM,KAAK0M,SAASvG,mBAEzC,IACI,GAAInG,KAAK0M,SAASqE,gBAAiB,CAC/B,GAAI/Q,KAAK0M,SAAS/I,YAAcqN,EAAAA,EAAAA,WAO5B,MAAM,IAAI/e,MAAM,gFALhB+N,KAAK2D,UAAY3D,KAAKiR,oBAAoBD,EAAAA,EAAAA,kBAGpChR,KAAKkR,gBAAgB3M,EAAK5E,EAIvC,KAAM,CACH,IAAIwR,EAA+C,KAC/CC,EAAY,EAEhB,EAAG,CAGC,GAFAD,QAA0BnR,KAAKqR,wBAAwB9M,GAE9B,kBAArBvE,KAAKqQ,kBAA2E,iBAArBrQ,KAAKqQ,iBAChE,MAAM,IAAIpe,MAAM,kDAGpB,GAAIkf,EAAkBrP,MAClB,MAAM,IAAI7P,MAAMkf,EAAkBrP,OAGtC,GAAKqP,EAA0BG,gBAC3B,MAAM,IAAIrf,MAAM,gMAOpB,GAJIkf,EAAkB5M,MAClBA,EAAM4M,EAAkB5M,KAGxB4M,EAAkBI,YAAa,CAG/B,MAAMA,EAAcJ,EAAkBI,YACtCvR,KAAKwM,oBAAsB,IAAM+E,CACpC,CAEDH,GACH,OACMD,EAAkB5M,KAAO6M,EAxO1B,KA0ON,GA1OM,MA0OFA,GAA+BD,EAAkB5M,IACjD,MAAM,IAAItS,MAAM,+CAGd+N,KAAKwR,iBAAiBjN,EAAKvE,KAAK0M,SAAS/I,UAAWwN,EAAmBxR,EAChF,CAEGK,KAAK2D,qBAAqB4I,IAC1BvM,KAAK8P,SAAS2B,mBAAoB,GAGb,eAArBzR,KAAKqQ,mBAGLrQ,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,8CACjC5B,KAAKqQ,iBAAgB,YAc5B,CARC,MAAOlW,GAOL,OANA6F,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,mCAAqCzH,GACtE6F,KAAKqQ,iBAAgB,eACrBrQ,KAAK2D,eAAYrU,EAGjB0Q,KAAK6P,uBACEtE,QAAQC,OAAOrR,EACzB,CACJ,CAEoC,8BAACoK,GAClC,MAAMxC,EAAiC,CAAC,EACxC,GAAI/B,KAAKwM,oBAAqB,CAC1B,MAAMpG,QAAcpG,KAAKwM,sBACrBpG,IACArE,EAAQsK,EAAYqB,eAAiB,UAAUtH,IAEtD,CAED,MAAOrU,EAAMhE,GAASsY,IACtBtE,EAAQhQ,GAAQhE,EAEhB,MAAM2jB,EAAe1R,KAAK2R,qBAAqBpN,GAC/CvE,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,gCAAgC8P,MACjE,IACI,MAAMlL,QAAiBxG,KAAKoM,YAAYzH,KAAK+M,EAAc,CACvDtN,QAAS,GACTrC,QAAS,IAAKA,KAAY/B,KAAK0M,SAAS3K,SACxC0E,QAASzG,KAAK0M,SAASjG,QACvBC,gBAAiB1G,KAAK0M,SAAShG,kBAGnC,GAA4B,MAAxBF,EAASpD,WACT,OAAOmI,QAAQC,OAAO,IAAIvZ,MAAM,mDAAmDuU,EAASpD,gBAGhG,MAAM+N,EAAoBS,KAAKpR,MAAMgG,EAASpC,SAM9C,QALK+M,EAAkBU,kBAAoBV,EAAkBU,iBAAmB,KAG5EV,EAAkBW,gBAAkBX,EAAkBY,cAEnDZ,CAWV,CAVC,MAAOhX,GACL,IAAIgJ,EAAe,mDAAqDhJ,EAQxE,OAPIA,aAAa+I,GACQ,MAAjB/I,EAAEiJ,aACFD,GAA8B,uFAGtCnD,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgBuB,GAE1BoI,QAAQC,OAAO,IAAIzH,EAAiCZ,GAC9D,CACJ,CAEO6O,kBAAkBzN,EAAauN,GACnC,OAAKA,EAIEvN,IAA6B,IAAtBA,EAAI2C,QAAQ,KAAc,IAAM,KAAO,MAAM4K,IAHhDvN,CAId,CAE6B,uBAACA,EAAa0N,EAAgEd,EAAuCe,GAC/I,IAAIC,EAAanS,KAAKgS,kBAAkBzN,EAAK4M,EAAkBW,iBAC/D,GAAI9R,KAAKoS,cAAcH,GAMnB,OALAjS,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,2EACjC5B,KAAK2D,UAAYsO,QACXjS,KAAKkR,gBAAgBiB,EAAYD,QAEvClS,KAAK+R,aAAeZ,EAAkBY,cAI1C,MAAMM,EAA6B,GAC7BC,EAAanB,EAAkBoB,qBAAuB,GAC5D,IAAIC,EAA4CrB,EAChD,IAAK,MAAMsB,KAAYH,EAAY,CAC/B,MAAMI,EAAmB1S,KAAK2S,yBAAyBF,EAAUR,EAAoBC,GACrF,GAAIQ,aAA4BzgB,MAE5BogB,EAAoB9hB,KAAK,GAAGkiB,EAAS9O,qBACrC0O,EAAoB9hB,KAAKmiB,QACtB,GAAI1S,KAAKoS,cAAcM,GAAmB,CAE7C,GADA1S,KAAK2D,UAAY+O,GACZF,EAAW,CACZ,IACIA,QAAkBxS,KAAKqR,wBAAwB9M,EAGlD,CAFC,MAAOqO,GACL,OAAOrH,QAAQC,OAAOoH,EACzB,CACDT,EAAanS,KAAKgS,kBAAkBzN,EAAKiO,EAAUV,gBACtD,CACD,IAGI,aAFM9R,KAAKkR,gBAAgBiB,EAAYD,QACvClS,KAAK+R,aAAeS,EAAUT,aAYjC,CAVC,MAAOa,GAKL,GAJA5S,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,kCAAkC6Q,EAAS9O,eAAeiP,KAC3FJ,OAAYljB,EACZ+iB,EAAoB9hB,KAAK,IAAIuT,EAA4B,GAAG2O,EAAS9O,qBAAqBiP,IAAM5B,EAAAA,EAAkByB,EAAS9O,aAElG,eAArB3D,KAAKqQ,iBAAiD,CACtD,MAAMlf,EAAU,uDAEhB,OADA6O,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgBzQ,GAC1Boa,QAAQC,OAAO,IAAIvZ,MAAMd,GACnC,CACJ,CACJ,CACJ,CAED,OAAIkhB,EAAoBrjB,OAAS,EACtBuc,QAAQC,OAAO,IAAIxH,EAAgB,yEAAyEqO,EAAoBlH,KAAK,OAAQkH,IAEjJ9G,QAAQC,OAAO,IAAIvZ,MAAM,+EACnC,CAEOgf,oBAAoBtN,GACxB,OAAQA,GACJ,KAAKqN,EAAAA,EAAAA,WACD,IAAKhR,KAAK0M,SAAS0D,UACf,MAAM,IAAIne,MAAM,qDAEpB,OAAO,IAAIyc,EAAmB1O,KAAKoM,YAAapM,KAAKwM,oBAAqBxM,KAAKiJ,QAASjJ,KAAK0M,SAASpG,kBAAoBtG,KAAK0M,SAAS0D,UAAWpQ,KAAK0M,SAAS3K,SAAW,CAAC,GACjL,KAAKiP,EAAAA,EAAAA,iBACD,IAAKhR,KAAK0M,SAASwB,YACf,MAAM,IAAIjc,MAAM,uDAEpB,OAAO,IAAI6b,EAA0B9N,KAAKoM,YAAapM,KAAKwM,oBAAqBxM,KAAKiJ,QAASjJ,KAAK0M,UACxG,KAAKsE,EAAAA,EAAAA,YACD,OAAO,IAAIzE,EAAqBvM,KAAKoM,YAAapM,KAAKwM,oBAAqBxM,KAAKiJ,QAASjJ,KAAK0M,UACnG,QACI,MAAM,IAAIza,MAAM,sBAAsB0R,MAEjD,CAEOuN,gBAAgB3M,EAAa5E,GAGjC,OAFAK,KAAK2D,UAAWiJ,UAAY5M,KAAK4M,UACjC5M,KAAK2D,UAAWkJ,QAAW1S,GAAM6F,KAAK8Q,gBAAgB3W,GAC/C6F,KAAK2D,UAAWkP,QAAQtO,EAAK5E,EACvC,CAEOgT,yBAAyBF,EAA+BR,EAAmDC,GAC/G,MAAMvO,EAAYqN,EAAAA,EAAkByB,EAAS9O,WAC7C,GAAIA,QAEA,OADA3D,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,uBAAuB6Q,EAAS9O,0DAC1D,IAAI1R,MAAM,uBAAuBwgB,EAAS9O,0DAEjD,IA0HZ,SAA0BsO,EAAmDa,GACzE,OAAQb,GAAkE,IAA1Ca,EAAkBb,EACrD,CA5Hec,CAAiBd,EAAoBtO,GAqBrC,OADA3D,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,uBAAuBoP,EAAAA,EAAkBrN,8CACnE,IAAIE,EAAuB,IAAImN,EAAAA,EAAkBrN,iCAA0CA,GAnBlG,KADwB8O,EAASO,gBAAgBjV,KAAKkV,GAAMrT,EAAAA,EAAeqT,KACvD/L,QAAQgL,IAA4B,GAepD,OADAlS,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,uBAAuBoP,EAAAA,EAAkBrN,kEAA0E/D,EAAAA,EAAesS,QAC5J,IAAIjgB,MAAM,IAAI+e,EAAAA,EAAkBrN,wBAAgC/D,EAAAA,EAAesS,OAdtF,GAAKvO,IAAcqN,EAAAA,EAAAA,aAAiChR,KAAK0M,SAAS0D,WAC7DzM,IAAcqN,EAAAA,EAAAA,mBAAuChR,KAAK0M,SAASwB,YAEpE,OADAlO,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,uBAAuBoP,EAAAA,EAAkBrN,yDACnE,IAAID,EAA0B,IAAIsN,EAAAA,EAAkBrN,4CAAqDA,GAEhH3D,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,wBAAwBoP,EAAAA,EAAkBrN,QAC3E,IACI,OAAO3D,KAAKiR,oBAAoBtN,EAGnC,CAFC,MAAOiP,GACL,OAAOA,CACV,CAWpB,CAEOR,cAAczO,GAClB,OAAOA,GAAoC,iBAAfA,GAA2B,YAAaA,CACvE,CAEOmN,gBAAgBhP,GASpB,GARA9B,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,iCAAiCE,4BAAgC9B,KAAKqQ,qBAEvGrQ,KAAK2D,eAAYrU,EAGjBwS,EAAQ9B,KAAK6Q,YAAc/O,EAC3B9B,KAAK6Q,gBAAavhB,EAEO,iBAArB0Q,KAAKqQ,iBAAT,CAKA,GAAyB,eAArBrQ,KAAKqQ,iBAEL,MADArQ,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,QAAkB,yCAAyCE,2EACtE,IAAI7P,MAAM,iCAAiC6P,wEAyBrD,GAtByB,kBAArB9B,KAAKqQ,kBAGLrQ,KAAK6P,uBAGL/N,EACA9B,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,uCAAuCE,OAExE9B,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,YAAsB,4BAGvC5B,KAAK0Q,aACL1Q,KAAK0Q,WAAWlC,OAAOnH,OAAOlN,IAC1B6F,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,0CAA0CzH,MAA3E,IAEJ6F,KAAK0Q,gBAAaphB,GAGtB0Q,KAAK+R,kBAAeziB,EACpB0Q,KAAKqQ,iBAAgB,eAEjBrQ,KAAKsQ,mBAAoB,CACzBtQ,KAAKsQ,oBAAqB,EAC1B,IACQtQ,KAAK6M,SACL7M,KAAK6M,QAAQ/K,EAIpB,CAFC,MAAO3H,GACL6F,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,0BAA0BE,mBAAuB3H,MACrF,CACJ,CAtCA,MAFG6F,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,yCAAyCE,8EAyCjF,CAEOmO,YAAY1L,GAEhB,GAAuC,IAAnCA,EAAI2O,YAAY,WAAY,IAA8C,IAAlC3O,EAAI2O,YAAY,UAAW,GACnE,OAAO3O,EAGX,IAAKS,EAASC,UACV,MAAM,IAAIhT,MAAM,mBAAmBsS,OAQvC,MAAM4O,EAAOjO,OAAOC,SAASiO,cAAc,KAI3C,OAHAD,EAAKE,KAAO9O,EAEZvE,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,YAAsB,gBAAgB2C,UAAY4O,EAAKE,UACjEF,EAAKE,IACf,CAEO1B,qBAAqBpN,GACzB,MAAM7Q,EAAQ6Q,EAAI2C,QAAQ,KAC1B,IAAIwK,EAAenN,EAAI+O,UAAU,GAAc,IAAX5f,EAAe6Q,EAAIvV,OAAS0E,GAWhE,MAV8C,MAA1Cge,EAAaA,EAAa1iB,OAAS,KACnC0iB,GAAgB,KAEpBA,GAAgB,YAChBA,IAA2B,IAAXhe,EAAe,GAAK6Q,EAAI+O,UAAU5f,IAEA,IAA9Cge,EAAaxK,QAAQ,sBACrBwK,IAA2B,IAAXhe,EAAe,IAAM,IACrCge,GAAgB,oBAAsB1R,KAAK+P,mBAExC2B,CACV,EAQC,MAAOf,EAOTvW,YAA6BmZ,GAAA,KAAAA,WAAAA,EANrB,KAAAC,QAAiB,GAEjB,KAAAC,YAAsB,EAK1BzT,KAAK0T,kBAAoB,IAAIC,EAC7B3T,KAAK4T,iBAAmB,IAAID,EAE5B3T,KAAK6T,iBAAmB7T,KAAK8T,WAChC,CAEMrP,KAAKvT,GAKR,OAJA8O,KAAK+T,YAAY7iB,GACZ8O,KAAK4T,mBACN5T,KAAK4T,iBAAmB,IAAID,GAEzB3T,KAAK4T,iBAAiBI,OAChC,CAEMxF,OAGH,OAFAxO,KAAKyT,YAAa,EAClBzT,KAAK0T,kBAAkBjI,UAChBzL,KAAK6T,gBACf,CAEOE,YAAY7iB,GAChB,GAAI8O,KAAKwT,QAAQxkB,eAAiBgR,KAAKwT,QAAQ,WAAetiB,EAC1D,MAAM,IAAIe,MAAM,sCAAsC+N,KAAKwT,kCAAmCtiB,KAGlG8O,KAAKwT,QAAQjjB,KAAKW,GAClB8O,KAAK0T,kBAAkBjI,SAC1B,CAEsB,kBACnB,OAAa,CAGT,SAFMzL,KAAK0T,kBAAkBM,SAExBhU,KAAKyT,WAAY,CACdzT,KAAK4T,kBACL5T,KAAK4T,iBAAiBpI,OAAO,uBAGjC,KACH,CAEDxL,KAAK0T,kBAAoB,IAAIC,EAE7B,MAAMM,EAAkBjU,KAAK4T,iBAC7B5T,KAAK4T,sBAAmBtkB,EAExB,MAAM4B,EAAmC,iBAArB8O,KAAKwT,QAAQ,GAC7BxT,KAAKwT,QAAQrI,KAAK,IAClBwF,EAAmBuD,eAAelU,KAAKwT,SAE3CxT,KAAKwT,QAAQxkB,OAAS,EAEtB,UACUgR,KAAKuT,WAAW9O,KAAKvT,GAC3B+iB,EAAgBxI,SAGnB,CAFC,MAAO3J,GACLmS,EAAgBzI,OAAO1J,EAC1B,CACJ,CACJ,CAE4B,sBAACqS,GAC1B,MAAMC,EAAcD,EAAapW,KAAKsW,GAAMA,EAAEplB,aAAYqlB,QAAO,CAACC,EAAGF,IAAME,EAAIF,IACzEhkB,EAAS,IAAIqC,WAAW0hB,GAC9B,IAAItmB,EAAS,EACb,IAAK,MAAM2J,KAAQ0c,EACf9jB,EAAOP,IAAI,IAAI4C,WAAW+E,GAAO3J,GACjCA,GAAU2J,EAAKxI,WAGnB,OAAOoB,EAAOuC,MACjB,EAGL,MAAM+gB,EAKFvZ,cACI4F,KAAKgU,QAAU,IAAIzI,SAAQ,CAACE,EAASD,KAAYxL,KAAKwU,UAAWxU,KAAKyU,WAAa,CAAChJ,EAASD,IAChG,CAEMC,UACHzL,KAAKwU,WACR,CAEMhJ,OAAOmE,GACV3P,KAAKyU,UAAW9E,EACnB,ECzpBC,MAAO+E,EAIU,aAAC/kB,GAChB,MAAO,GAAGA,IAAS+kB,EAAkBC,iBACxC,CAEkB,aAAC3V,GAChB,GAAIA,EAAMA,EAAMhQ,OAAS,KAAO0lB,EAAkBC,gBAC9C,MAAM,IAAI1iB,MAAM,0BAGpB,MAAMsO,EAAWvB,EAAM2J,MAAM+L,EAAkBC,iBAE/C,OADApU,EAAS1C,MACF0C,CACV,EAfamU,EAAAA,oBAAsB,GACtBA,EAAAA,gBAAkB/jB,OAAOC,aAAa8jB,EAAkBE,qBCYpE,MAAOC,EAEFC,sBAAsBC,GACzB,OAAOL,EAAkBzT,MAAM2Q,KAAKoD,UAAUD,GACjD,CAEME,uBAAuB/jB,GAC1B,IAAIgkB,EACA9Z,EAEJ,GAAIuK,EAAczU,GAAO,CAErB,MAAMikB,EAAa,IAAIziB,WAAWxB,GAC5BkkB,EAAiBD,EAAWjO,QAAQwN,EAAkBE,qBAC5D,IAAwB,IAApBQ,EACA,MAAM,IAAInjB,MAAM,0BAKpB,MAAMojB,EAAiBD,EAAiB,EACxCF,EAAcvkB,OAAOC,aAAaC,MAAM,KAAMmG,MAAMvF,UAAUmI,MAAMC,KAAKsb,EAAWvb,MAAM,EAAGyb,KAC7Fja,EAAiB+Z,EAAWlmB,WAAaomB,EAAkBF,EAAWvb,MAAMyb,GAAgBziB,OAAS,IACxG,KAAM,CACH,MAAM0iB,EAAmBpkB,EACnBkkB,EAAiBE,EAASpO,QAAQwN,EAAkBC,iBAC1D,IAAwB,IAApBS,EACA,MAAM,IAAInjB,MAAM,0BAKpB,MAAMojB,EAAiBD,EAAiB,EACxCF,EAAcI,EAAShC,UAAU,EAAG+B,GACpCja,EAAiBka,EAAStmB,OAASqmB,EAAkBC,EAAShC,UAAU+B,GAAkB,IAC7F,CAGD,MAAM9U,EAAWmU,EAAkBlU,MAAM0U,GACnC1O,EAAWoL,KAAKpR,MAAMD,EAAS,IACrC,GAAIiG,EAASvV,KACT,MAAM,IAAIgB,MAAM,kDAMpB,MAAO,CAACmJ,EAJ0CoL,EAKrD,iBC5DC,MAAO+O,EAOTnb,cACI4F,KAAKiH,UAAY,EACpB,CAEMuO,KAAK/d,GACR,IAAK,MAAMoP,KAAY7G,KAAKiH,UACxBJ,EAAS2O,KAAK/d,EAErB,CAEMqK,MAAM2T,GACT,IAAK,MAAM5O,KAAY7G,KAAKiH,UACpBJ,EAAS/E,OACT+E,EAAS/E,MAAM2T,EAG1B,CAEMrZ,WACH,IAAK,MAAMyK,KAAY7G,KAAKiH,UACpBJ,EAASzK,UACTyK,EAASzK,UAGpB,CAEMsZ,UAAU7O,GAEb,OADA7G,KAAKiH,UAAU1W,KAAKsW,GACb,IAAIF,EAAoB3G,KAAM6G,EACxC,EC3BE,IAAK8O,GAAZ,SAAYA,GAERA,EAAAA,aAAAA,eAEAA,EAAAA,WAAAA,aAEAA,EAAAA,UAAAA,YAEAA,EAAAA,cAAAA,gBAEAA,EAAAA,aAAAA,cAVJ,EAAYA,IAAAA,EAAkB,KAcxB,MAAOC,EAmETxb,YAAoByb,EAAyBzV,EAAiB0V,EAAwBC,GAvC9E,KAAAC,eAAyB,EASzB,KAAAC,qBAAuB,KAE3BjW,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,QAAkB,uNAAnC,EA6BAkD,EAAIiI,WAAW8I,EAAY,cAC3B/Q,EAAIiI,WAAW3M,EAAQ,UACvB0E,EAAIiI,WAAW+I,EAAU,YAEzB9V,KAAKkW,4BA1FyB,IA2F9BlW,KAAKmW,gCA1F+B,KA4FpCnW,KAAKiJ,QAAU7I,EACfJ,KAAKoW,UAAYN,EACjB9V,KAAK6V,WAAaA,EAClB7V,KAAKqW,iBAAmBN,EACxB/V,KAAKsW,mBAAqB,IAAIzB,EAE9B7U,KAAK6V,WAAWjJ,UAAa1b,GAAc8O,KAAKuW,qBAAqBrlB,GACrE8O,KAAK6V,WAAWhJ,QAAW/K,GAAkB9B,KAAKwW,kBAAkB1U,GAEpE9B,KAAKyW,WAAa,CAAC,EACnBzW,KAAK0W,SAAW,CAAC,EACjB1W,KAAK2W,iBAAmB,GACxB3W,KAAK4W,uBAAyB,GAC9B5W,KAAK6W,sBAAwB,GAC7B7W,KAAK8W,cAAgB,EACrB9W,KAAK+W,4BAA6B,EAClC/W,KAAKqQ,iBAAmBsF,EAAmBqB,aAC3ChX,KAAKsQ,oBAAqB,EAE1BtQ,KAAKiX,mBAAqBjX,KAAKoW,UAAUxV,aAAa,CAAE3P,KAAMsO,EAAAA,EAAAA,MACjE,CAhCmB,cAACsW,EAAyBzV,EAAiB0V,EAAwBC,GACnF,OAAO,IAAIH,EAAcC,EAAYzV,EAAQ0V,EAAUC,EAC1D,CAiCGrY,YACA,OAAOsC,KAAKqQ,gBACf,CAKG0B,mBACA,OAAO/R,KAAK6V,YAAc7V,KAAK6V,WAAW9D,cAAwB,IACrE,CAGG/B,cACA,OAAOhQ,KAAK6V,WAAW7F,SAAW,EACrC,CAOGA,YAAQzL,GACR,GAAIvE,KAAKqQ,mBAAqBsF,EAAmBqB,cAAgBhX,KAAKqQ,mBAAqBsF,EAAmBuB,aAC1G,MAAM,IAAIjlB,MAAM,0FAGpB,IAAKsS,EACD,MAAM,IAAItS,MAAM,8CAGpB+N,KAAK6V,WAAW7F,QAAUzL,CAC7B,CAMM4S,QAEH,OADAnX,KAAKoX,cAAgBpX,KAAKqX,6BACnBrX,KAAKoX,aACf,CAEuC,mCACpC,GAAIpX,KAAKqQ,mBAAqBsF,EAAmBqB,aAC7C,OAAOzL,QAAQC,OAAO,IAAIvZ,MAAM,0EAGpC+N,KAAKqQ,iBAAmBsF,EAAmB2B,WAC3CtX,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,2BAEjC,UACU5B,KAAKwQ,iBAEPxL,EAASC,WAETC,OAAOC,SAASoS,iBAAiB,SAAUvX,KAAKiW,sBAGpDjW,KAAKqQ,iBAAmBsF,EAAmB6B,UAC3CxX,KAAKsQ,oBAAqB,EAC1BtQ,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,wCAKpC,CAJC,MAAOzH,GAGL,OAFA6F,KAAKqQ,iBAAmBsF,EAAmBqB,aAC3ChX,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,gEAAgEzH,OAC1FoR,QAAQC,OAAOrR,EACzB,CACJ,CAE2B,uBACxB6F,KAAKyX,2BAAwBnoB,EAC7B0Q,KAAK+W,4BAA6B,EAElC,MAAMW,EAAmB,IAAInM,SAAQ,CAACE,EAASD,KAC3CxL,KAAK2X,mBAAqBlM,EAC1BzL,KAAK4X,mBAAqBpM,CAA1B,UAGExL,KAAK6V,WAAWsB,MAAMnX,KAAKoW,UAAUzW,gBAE3C,IACI,MAAMoV,EAA4C,CAC9Ce,SAAU9V,KAAKoW,UAAUrkB,KACzB2N,QAASM,KAAKoW,UAAU1W,SAmB5B,GAhBAM,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,oCAE3B5B,KAAK6X,aAAa7X,KAAKsW,mBAAmBxB,sBAAsBC,IAEtE/U,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,YAAsB,sBAAsB5B,KAAKoW,UAAUrkB,UAG5EiO,KAAK8X,kBACL9X,KAAK+X,sBACL/X,KAAKgY,gCAECN,EAKF1X,KAAKyX,sBAKL,MAAMzX,KAAKyX,qBAYlB,CAVC,MAAOtd,GASL,MARA6F,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,oCAAoCzH,8CAErE6F,KAAK8X,kBACL9X,KAAKiY,0BAICjY,KAAK6V,WAAWrH,KAAKrU,GACrBA,CACT,CACJ,CAMgB,aAEb,MAAM+d,EAAelY,KAAKoX,cAE1BpX,KAAKyQ,aAAezQ,KAAK4Q,sBACnB5Q,KAAKyQ,aAEX,UAEUyH,CAGT,CAFC,MAAO/d,GAER,CACJ,CAEOyW,cAAc9O,GAClB,OAAI9B,KAAKqQ,mBAAqBsF,EAAmBqB,cAC7ChX,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,8BAA8BE,+DACxDyJ,QAAQE,WAGfzL,KAAKqQ,mBAAqBsF,EAAmBwC,eAC7CnY,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,+BAA+BE,4EACzD9B,KAAKyQ,eAGhBzQ,KAAKqQ,iBAAmBsF,EAAmBwC,cAE3CnY,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,2BAE7B5B,KAAKoY,uBAILpY,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,iEAEjCgJ,aAAa5K,KAAKoY,uBAClBpY,KAAKoY,2BAAwB9oB,EAE7B0Q,KAAKqY,iBACE9M,QAAQE,YAGnBzL,KAAK8X,kBACL9X,KAAKiY,oBACLjY,KAAKyX,sBAAwB3V,GAAS,IAAI7P,MAAM,uEAKzC+N,KAAK6V,WAAWrH,KAAK1M,IAC/B,CASMnG,OAAgB2c,KAAuBC,GAC1C,MAAOC,EAAStW,GAAalC,KAAKyY,wBAAwBF,GACpDG,EAAuB1Y,KAAK2Y,wBAAwBL,EAAYC,EAAMrW,GAG5E,IAAI0W,EAEJ,MAAMhS,EAAU,IAAI2O,EAqCpB,OApCA3O,EAAQQ,eAAiB,KACrB,MAAMyR,EAA4C7Y,KAAK8Y,wBAAwBJ,EAAqB1W,cAIpG,cAFOhC,KAAKyW,WAAWiC,EAAqB1W,cAErC4W,EAAaG,MAAK,IACd/Y,KAAKgZ,kBAAkBH,IADlC,EAKJ7Y,KAAKyW,WAAWiC,EAAqB1W,cAAgB,CAACiX,EAA+DnX,KAC7GA,EACA8E,EAAQ9E,MAAMA,GAEPmX,IAEHA,EAAgBhoB,OAASsO,EAAAA,EAAAA,WACrB0Z,EAAgBnX,MAChB8E,EAAQ9E,MAAM,IAAI7P,MAAMgnB,EAAgBnX,QAExC8E,EAAQxK,WAGZwK,EAAQ4O,KAAMyD,EAAgBxhB,MAErC,EAGLmhB,EAAe5Y,KAAKgZ,kBAAkBN,GACjCrR,OAAOlN,IACJyM,EAAQ9E,MAAM3H,UACP6F,KAAKyW,WAAWiC,EAAqB1W,aAA5C,IAGRhC,KAAKkZ,eAAeV,EAASI,GAEtBhS,CACV,CAEOiR,aAAa1mB,GAEjB,OADA6O,KAAKgY,0BACEhY,KAAK6V,WAAWpR,KAAKtT,EAC/B,CAMO6nB,kBAAkB7nB,GACtB,OAAO6O,KAAK6X,aAAa7X,KAAKoW,UAAUxV,aAAazP,GACxD,CAWMsT,KAAK6T,KAAuBC,GAC/B,MAAOC,EAAStW,GAAalC,KAAKyY,wBAAwBF,GACpDY,EAAcnZ,KAAKgZ,kBAAkBhZ,KAAKoZ,kBAAkBd,EAAYC,GAAM,EAAMrW,IAI1F,OAFAlC,KAAKkZ,eAAeV,EAASW,GAEtBA,CACV,CAaME,OAAgBf,KAAuBC,GAC1C,MAAOC,EAAStW,GAAalC,KAAKyY,wBAAwBF,GACpDG,EAAuB1Y,KAAKoZ,kBAAkBd,EAAYC,GAAM,EAAOrW,GAgC7E,OA9BU,IAAIqJ,SAAa,CAACE,EAASD,KAEjCxL,KAAKyW,WAAWiC,EAAqB1W,cAAiB,CAACiX,EAA+DnX,KAC9GA,EACA0J,EAAO1J,GAEAmX,IAEHA,EAAgBhoB,OAASsO,EAAAA,EAAAA,WACrB0Z,EAAgBnX,MAChB0J,EAAO,IAAIvZ,MAAMgnB,EAAgBnX,QAEjC2J,EAAQwN,EAAgB5oB,QAG5Bmb,EAAO,IAAIvZ,MAAM,4BAA4BgnB,EAAgBhoB,SAEpE,EAGL,MAAM2nB,EAAe5Y,KAAKgZ,kBAAkBN,GACvCrR,OAAOlN,IACJqR,EAAOrR,UAEA6F,KAAKyW,WAAWiC,EAAqB1W,aAA5C,IAGRhC,KAAKkZ,eAAeV,EAASI,EAA7B,GAIP,CAOMU,GAAGhB,EAAoBiB,GACrBjB,GAAeiB,IAIpBjB,EAAaA,EAAWkB,cACnBxZ,KAAK0W,SAAS4B,KACftY,KAAK0W,SAAS4B,GAAc,KAIsB,IAAlDtY,KAAK0W,SAAS4B,GAAYpR,QAAQqS,IAItCvZ,KAAK0W,SAAS4B,GAAY/nB,KAAKgpB,GAClC,CAiBME,IAAInB,EAAoB5T,GAC3B,IAAK4T,EACD,OAGJA,EAAaA,EAAWkB,cACxB,MAAME,EAAW1Z,KAAK0W,SAAS4B,GAC/B,GAAKoB,EAGL,GAAIhV,EAAQ,CACR,MAAMiV,EAAYD,EAASxS,QAAQxC,IAChB,IAAfiV,IACAD,EAASvS,OAAOwS,EAAW,GACH,IAApBD,EAAS1qB,eACFgR,KAAK0W,SAAS4B,GAGhC,aACUtY,KAAK0W,SAAS4B,EAG5B,CAMMzL,QAAQ+M,GACPA,GACA5Z,KAAK2W,iBAAiBpmB,KAAKqpB,EAElC,CAMMC,eAAeD,GACdA,GACA5Z,KAAK4W,uBAAuBrmB,KAAKqpB,EAExC,CAMME,cAAcF,GACbA,GACA5Z,KAAK6W,sBAAsBtmB,KAAKqpB,EAEvC,CAEOrD,qBAAqBrlB,GASzB,GARA8O,KAAK8X,kBAEA9X,KAAK+W,6BACN7lB,EAAO8O,KAAK+Z,0BAA0B7oB,GACtC8O,KAAK+W,4BAA6B,GAIlC7lB,EAAM,CAEN,MAAMqP,EAAWP,KAAKoW,UAAUjW,cAAcjP,EAAM8O,KAAKiJ,SAEzD,IAAK,MAAM9X,KAAWoP,EAClB,OAAQpP,EAAQF,MACZ,KAAKsO,EAAAA,EAAAA,WACDS,KAAKga,oBAAoB7oB,GACzB,MACJ,KAAKoO,EAAAA,EAAAA,WACL,KAAKA,EAAAA,EAAAA,WAAwB,CACzB,MAAMqa,EAAW5Z,KAAKyW,WAAWtlB,EAAQ6Q,cACzC,GAAI4X,EAAU,CACNzoB,EAAQF,OAASsO,EAAAA,EAAAA,mBACVS,KAAKyW,WAAWtlB,EAAQ6Q,cAEnC,IACI4X,EAASzoB,EAGZ,CAFC,MAAOgJ,GACL6F,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,gCAAgCmH,EAAe5O,KACnF,CACJ,CACD,KACH,CACD,KAAKoF,EAAAA,EAAAA,KAED,MACJ,KAAKA,EAAAA,EAAAA,MAAmB,CACpBS,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,YAAsB,uCAEvC,MAAME,EAAQ3Q,EAAQ2Q,MAAQ,IAAI7P,MAAM,sCAAwCd,EAAQ2Q,YAASxS,GAElE,IAA3B6B,EAAQ0Q,eAKR7B,KAAK6V,WAAWrH,KAAK1M,GAGrB9B,KAAKyQ,aAAezQ,KAAK4Q,cAAc9O,GAG3C,KACH,CACD,QACI9B,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,QAAkB,yBAAyBzQ,EAAQF,SAInF,CAED+O,KAAK+X,qBACR,CAEOgC,0BAA0B7oB,GAC9B,IAAI+oB,EACA7e,EAEJ,KACKA,EAAe6e,GAAmBja,KAAKsW,mBAAmBrB,uBAAuB/jB,EAQrF,CAPC,MAAOiJ,GACL,MAAMhJ,EAAU,qCAAuCgJ,EACvD6F,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgBzQ,GAEjC,MAAM2Q,EAAQ,IAAI7P,MAAMd,GAExB,MADA6O,KAAK4X,mBAAmB9V,GAClBA,CACT,CACD,GAAImY,EAAgBnY,MAAO,CACvB,MAAM3Q,EAAU,oCAAsC8oB,EAAgBnY,MACtE9B,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgBzQ,GAEjC,MAAM2Q,EAAQ,IAAI7P,MAAMd,GAExB,MADA6O,KAAK4X,mBAAmB9V,GAClBA,CACT,CAKD,OAJI9B,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,8BAGrC5B,KAAK2X,qBACEvc,CACV,CAEO4c,0BACAhY,KAAK6V,WAAW/F,SAAS2B,oBAM7BzR,KAAKgW,gBAAiB,IAAIxjB,MAAOQ,UAAYgN,KAAKmW,gCAElDnW,KAAKiY,oBACR,CAEOF,sBACJ,KAAK/X,KAAK6V,WAAW/F,UAAa9P,KAAK6V,WAAW/F,SAAS2B,oBAEvDzR,KAAKka,eAAiB7P,YAAW,IAAMrK,KAAKma,iBAAiBna,KAAKkW,kCAGnC5mB,IAA3B0Q,KAAKoa,oBACT,CACI,IAAIC,EAAWra,KAAKgW,gBAAiB,IAAIxjB,MAAOQ,UAC5CqnB,EAAW,IACXA,EAAW,GAIfra,KAAKoa,kBAAoB/P,YAAWiQ,UAChC,GAAIta,KAAKqQ,mBAAqBsF,EAAmB6B,UAC7C,UACUxX,KAAK6X,aAAa7X,KAAKiX,mBAKhC,CAJC,MAGEjX,KAAKiY,mBACR,CACJ,GACFoC,EACN,CAER,CAGOF,gBAIJna,KAAK6V,WAAWrH,KAAK,IAAIvc,MAAM,uEAClC,CAEO+nB,oBAAoB3X,GACxB,MAAMkY,EAAUva,KAAK0W,SAASrU,EAAkBF,OAAOqX,eACvD,GAAIe,EAAS,CACT,IACIA,EAAQ3U,SAAS4U,GAAMA,EAAE3pB,MAAMmP,KAAMqC,EAAkBJ,YAG1D,CAFC,MAAO9H,GACL6F,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,6BAA6BS,EAAkBF,OAAOqX,8BAA8Brf,MACxH,CAED,GAAIkI,EAAkBL,aAAc,CAEhC,MAAM7Q,EAAU,qFAChB6O,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgBzQ,GAGjC6O,KAAKyQ,aAAezQ,KAAK4Q,cAAc,IAAI3e,MAAMd,GACpD,CACJ,MACG6O,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,QAAkB,mCAAmCS,EAAkBF,iBAE/F,CAEOqU,kBAAkB1U,GACtB9B,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,kCAAkCE,4BAAgC9B,KAAKqQ,qBAGxGrQ,KAAKyX,sBAAwBzX,KAAKyX,uBAAyB3V,GAAS,IAAI7P,MAAM,iFAI1E+N,KAAK2X,oBACL3X,KAAK2X,qBAGT3X,KAAKya,0BAA0B3Y,GAAS,IAAI7P,MAAM,uEAElD+N,KAAK8X,kBACL9X,KAAKiY,oBAEDjY,KAAKqQ,mBAAqBsF,EAAmBwC,cAC7CnY,KAAKqY,eAAevW,GACb9B,KAAKqQ,mBAAqBsF,EAAmB6B,WAAaxX,KAAKqW,iBAEtErW,KAAK0a,WAAW5Y,GACT9B,KAAKqQ,mBAAqBsF,EAAmB6B,WACpDxX,KAAKqY,eAAevW,EAQ3B,CAEOuW,eAAevW,GACnB,GAAI9B,KAAKsQ,mBAAoB,CACzBtQ,KAAKqQ,iBAAmBsF,EAAmBqB,aAC3ChX,KAAKsQ,oBAAqB,EAEtBtL,EAASC,WACTC,OAAOC,SAASwV,oBAAoB,SAAU3a,KAAKiW,sBAGvD,IACIjW,KAAK2W,iBAAiB/Q,SAASsF,GAAMA,EAAEra,MAAMmP,KAAM,CAAC8B,KAGvD,CAFC,MAAO3H,GACL6F,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,0CAA0CE,mBAAuB3H,MACrG,CACJ,CACJ,CAEuB,iBAAC2H,GACrB,MAAM8Y,EAAqBpoB,KAAK8a,MAChC,IAAIuN,EAA4B,EAC5BC,OAAuBxrB,IAAVwS,EAAsBA,EAAQ,IAAI7P,MAAM,mDAErD8oB,EAAiB/a,KAAKgb,mBAAmBH,IAA6B,EAAGC,GAE7E,GAAuB,OAAnBC,EAGA,OAFA/a,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,2GACjC5B,KAAKqY,eAAevW,GAYxB,GARA9B,KAAKqQ,iBAAmBsF,EAAmBuB,aAEvCpV,EACA9B,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,YAAsB,6CAA6CE,OAEpF9B,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,YAAsB,4BAGA,IAAvC5B,KAAK4W,uBAAuB5nB,OAAc,CAC1C,IACIgR,KAAK4W,uBAAuBhR,SAASsF,GAAMA,EAAEra,MAAMmP,KAAM,CAAC8B,KAG7D,CAFC,MAAO3H,GACL6F,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,iDAAiDE,mBAAuB3H,MAC5G,CAGD,GAAI6F,KAAKqQ,mBAAqBsF,EAAmBuB,aAE7C,YADAlX,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,wFAGxC,CAED,KAA0B,OAAnBmZ,GAAyB,CAQ5B,GAPA/a,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,YAAsB,4BAA4BiZ,mBAA2CE,eAExG,IAAIxP,SAASE,IACfzL,KAAKoY,sBAAwB/N,WAAWoB,EAASsP,EAAjD,IAEJ/a,KAAKoY,2BAAwB9oB,EAEzB0Q,KAAKqQ,mBAAqBsF,EAAmBuB,aAE7C,YADAlX,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,qFAIrC,IAMI,SALM5B,KAAKwQ,iBAEXxQ,KAAKqQ,iBAAmBsF,EAAmB6B,UAC3CxX,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,YAAsB,2CAEG,IAAtC5B,KAAK6W,sBAAsB7nB,OAC3B,IACIgR,KAAK6W,sBAAsBjR,SAASsF,GAAMA,EAAEra,MAAMmP,KAAM,CAACA,KAAK6V,WAAW9D,gBAG5E,CAFC,MAAO5X,GACL6F,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,uDAAuD5B,KAAK6V,WAAW9D,8BAA8B5X,MACzI,CAGL,MAeH,CAdC,MAAOA,GAGL,GAFA6F,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,YAAsB,8CAA8CzH,OAEjF6F,KAAKqQ,mBAAqBsF,EAAmBuB,aAM7C,OALAlX,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,4BAA4B5B,KAAKqQ,mGAE9DrQ,KAAKqQ,mBAA4BsF,EAAmBwC,eACpDnY,KAAKqY,kBAKbyC,EAAa3gB,aAAalI,MAAQkI,EAAI,IAAIlI,MAAMkI,EAAE/C,YAClD2jB,EAAiB/a,KAAKgb,mBAAmBH,IAA6BroB,KAAK8a,MAAQsN,EAAoBE,EAC1G,CACJ,CAED9a,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,YAAsB,+CAA+CpP,KAAK8a,MAAQsN,YAA6BC,gDAEhI7a,KAAKqY,gBACR,CAEO2C,mBAAmB/X,EAA4BgY,EAA6BC,GAChF,IACI,OAAOlb,KAAKqW,iBAAkBtT,6BAA6B,CACvDkY,sBACAhY,qBACAiY,eAKP,CAHC,MAAO/gB,GAEL,OADA6F,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,6CAA6CqB,MAAuBgY,mBAAqC9gB,OACnI,IACV,CACJ,CAEOsgB,0BAA0B3Y,GAC9B,MAAMqZ,EAAYnb,KAAKyW,WACvBzW,KAAKyW,WAAa,CAAC,EAEnBnlB,OAAOoG,KAAKyjB,GACPvV,SAAS9N,IACN,MAAM8hB,EAAWuB,EAAUrjB,GAC3B,IACI8hB,EAAS,KAAM9X,EAGlB,CAFC,MAAO3H,GACL6F,KAAKiJ,QAAQtH,IAAIC,EAAAA,EAAAA,MAAgB,wCAAwCE,mBAAuBiH,EAAe5O,KAClH,IAEZ,CAEO8d,oBACAjY,KAAKoa,oBACLxP,aAAa5K,KAAKoa,mBAClBpa,KAAKoa,uBAAoB9qB,EAEhC,CAEOwoB,kBACA9X,KAAKka,gBACLtP,aAAa5K,KAAKka,eAEzB,CAEOd,kBAAkBd,EAAoBC,EAAa6C,EAAsBlZ,GAC7E,GAAIkZ,EACA,OAAyB,IAArBlZ,EAAUlT,OACH,CACHiT,UAAWsW,EACXrW,YACAC,OAAQmW,EACRrnB,KAAMsO,EAAAA,EAAAA,YAGH,CACH0C,UAAWsW,EACXpW,OAAQmW,EACRrnB,KAAMsO,EAAAA,EAAAA,YAGX,CACH,MAAMyC,EAAehC,KAAK8W,cAG1B,OAFA9W,KAAK8W,gBAEoB,IAArB5U,EAAUlT,OACH,CACHiT,UAAWsW,EACXvW,aAAcA,EAAa5K,WAC3B8K,YACAC,OAAQmW,EACRrnB,KAAMsO,EAAAA,EAAAA,YAGH,CACH0C,UAAWsW,EACXvW,aAAcA,EAAa5K,WAC3B+K,OAAQmW,EACRrnB,KAAMsO,EAAAA,EAAAA,WAGjB,CACJ,CAEO2Z,eAAeV,EAA+BI,GAClD,GAAuB,IAAnBJ,EAAQxpB,OAAZ,CAKK4pB,IACDA,EAAerN,QAAQE,WAK3B,IAAK,MAAM4P,KAAY7C,EACnBA,EAAQ6C,GAAU3F,UAAU,CACxBtZ,SAAU,KACNwc,EAAeA,EAAaG,MAAK,IAAM/Y,KAAKgZ,kBAAkBhZ,KAAKwB,yBAAyB6Z,KAA5F,EAEJvZ,MAAQ2T,IACJ,IAAItkB,EAEAA,EADAskB,aAAexjB,MACLwjB,EAAItkB,QACPskB,GAAOA,EAAIre,SACRqe,EAAIre,WAEJ,gBAGdwhB,EAAeA,EAAaG,MAAK,IAAM/Y,KAAKgZ,kBAAkBhZ,KAAKwB,yBAAyB6Z,EAAUlqB,KAAtG,EAEJqkB,KAAO/d,IACHmhB,EAAeA,EAAaG,MAAK,IAAM/Y,KAAKgZ,kBAAkBhZ,KAAKuB,yBAAyB8Z,EAAU5jB,KAAtG,GA3BX,CA+BJ,CAEOghB,wBAAwBF,GAC5B,MAAMC,EAAgC,GAChCtW,EAAsB,GAC5B,IAAK,IAAIpO,EAAI,EAAGA,EAAIykB,EAAKvpB,OAAQ8E,IAAK,CAClC,MAAMwnB,EAAW/C,EAAKzkB,GACtB,GAAIkM,KAAKub,cAAcD,GAAW,CAC9B,MAAMD,EAAWrb,KAAK8W,cACtB9W,KAAK8W,gBAEL0B,EAAQ6C,GAAYC,EACpBpZ,EAAU3R,KAAK8qB,EAASjkB,YAGxBmhB,EAAKpR,OAAOrT,EAAG,EAClB,CACJ,CAED,MAAO,CAAC0kB,EAAStW,EACpB,CAEOqZ,cAAcC,GAElB,OAAOA,GAAOA,EAAI9F,WAAsC,mBAAlB8F,EAAI9F,SAC7C,CAEOiD,wBAAwBL,EAAoBC,EAAarW,GAC7D,MAAMF,EAAehC,KAAK8W,cAG1B,OAFA9W,KAAK8W,gBAEoB,IAArB5U,EAAUlT,OACH,CACHiT,UAAWsW,EACXvW,aAAcA,EAAa5K,WAC3B8K,YACAC,OAAQmW,EACRrnB,KAAMsO,EAAAA,EAAAA,kBAGH,CACH0C,UAAWsW,EACXvW,aAAcA,EAAa5K,WAC3B+K,OAAQmW,EACRrnB,KAAMsO,EAAAA,EAAAA,iBAGjB,CAEOuZ,wBAAwB2C,GAC5B,MAAO,CACHzZ,aAAcyZ,EACdxqB,KAAMsO,EAAAA,EAAAA,iBAEb,CAEOgC,yBAAyBka,EAAYhkB,GACzC,MAAO,CACHuK,aAAcyZ,EACdhkB,OACAxG,KAAMsO,EAAAA,EAAAA,WAEb,CAEOiC,yBAAyBia,EAAY3Z,EAAazR,GACtD,OAAIyR,EACO,CACHA,QACAE,aAAcyZ,EACdxqB,KAAMsO,EAAAA,EAAAA,YAIP,CACHyC,aAAcyZ,EACdprB,SACAY,KAAMsO,EAAAA,EAAAA,WAEb,ECl/BC,MAAOmc,EAAbthB,cAGoB,KAAArI,KANmB,OAQnB,KAAA2N,QAAkB,EAGlB,KAAAC,eAAiCC,EAAAA,EAAAA,IAmGpD,CA5FUO,cAAcnB,EAAeoB,GAEhC,GAAqB,iBAAVpB,EACP,MAAM,IAAI/M,MAAM,2DAGpB,IAAK+M,EACD,MAAO,GAGI,OAAXoB,IACAA,EAASE,EAAAA,EAAAA,UAIb,MAAMC,EAAWmU,EAAkBlU,MAAMxB,GAEnCyB,EAAc,GACpB,IAAK,MAAMtP,KAAWoP,EAAU,CAC5B,MAAMG,EAAgBkR,KAAKpR,MAAMrP,GACjC,GAAkC,iBAAvBuP,EAAczP,KACrB,MAAM,IAAIgB,MAAM,oBAEpB,OAAQyO,EAAczP,MAClB,KAAKsO,EAAAA,EAAAA,WACDS,KAAK2b,qBAAqBjb,GAC1B,MACJ,KAAKnB,EAAAA,EAAAA,WACDS,KAAK4b,qBAAqBlb,GAC1B,MACJ,KAAKnB,EAAAA,EAAAA,WACDS,KAAK6b,qBAAqBnb,GAC1B,MACJ,KAAKnB,EAAAA,EAAAA,KAGL,KAAKA,EAAAA,EAAAA,MAED,MACJ,QAEIa,EAAOuB,IAAIC,EAAAA,EAAAA,YAAsB,yBAA2BlB,EAAczP,KAAO,cACjF,SAERwP,EAAYlQ,KAAKmQ,EACpB,CAED,OAAOD,CACV,CAOMG,aAAazP,GAChB,OAAOujB,EAAkBzT,MAAM2Q,KAAKoD,UAAU7jB,GACjD,CAEOwqB,qBAAqBxqB,GACzB6O,KAAK8b,sBAAsB3qB,EAAQgR,OAAQ,gDAEd7S,IAAzB6B,EAAQ6Q,cACRhC,KAAK8b,sBAAsB3qB,EAAQ6Q,aAAc,0CAExD,CAEO4Z,qBAAqBzqB,GAGzB,GAFA6O,KAAK8b,sBAAsB3qB,EAAQ6Q,aAAc,gDAE5B1S,IAAjB6B,EAAQsG,KACR,MAAM,IAAIxF,MAAM,0CAEvB,CAEO4pB,qBAAqB1qB,GACzB,GAAIA,EAAQd,QAAUc,EAAQ2Q,MAC1B,MAAM,IAAI7P,MAAM,4CAGfd,EAAQd,QAAUc,EAAQ2Q,OAC3B9B,KAAK8b,sBAAsB3qB,EAAQ2Q,MAAO,2CAG9C9B,KAAK8b,sBAAsB3qB,EAAQ6Q,aAAc,0CACpD,CAEO8Z,sBAAsB/tB,EAAYoV,GACtC,GAAqB,iBAAVpV,GAAgC,KAAVA,EAC7B,MAAM,IAAIkE,MAAMkR,EAEvB,ECvGL,MAAM4Y,EAA+C,CACjDC,MAAOpa,EAAAA,EAAAA,MACPqa,MAAOra,EAAAA,EAAAA,MACPoG,KAAMpG,EAAAA,EAAAA,YACNsa,YAAata,EAAAA,EAAAA,YACbmG,KAAMnG,EAAAA,EAAAA,QACNua,QAASva,EAAAA,EAAAA,QACTE,MAAOF,EAAAA,EAAAA,MACPwa,SAAUxa,EAAAA,EAAAA,SACVya,KAAMza,EAAAA,EAAAA,MAgBJ,MAAO0a,EA0CFC,iBAAiBC,GAGpB,GAFA1X,EAAIiI,WAAWyP,EAAS,gBAoINltB,IAlILktB,EAkIH7a,IAjIN3B,KAAKI,OAASoc,OACX,GAAuB,iBAAZA,EAAsB,CACpC,MAAM5U,EA7DlB,SAAuB7V,GAInB,MAAM0qB,EAAUV,EAAoBhqB,EAAKynB,eACzC,QAAuB,IAAZiD,EACP,OAAOA,EAEP,MAAM,IAAIxqB,MAAM,sBAAsBF,IAE7C,CAmD4B2qB,CAAcF,GAC/Bxc,KAAKI,OAAS,IAAImH,EAAcK,EACnC,MACG5H,KAAKI,OAAS,IAAImH,EAAciV,GAGpC,OAAOxc,IACV,CA0BM2c,QAAQpY,EAAaqY,GAiBxB,OAhBA9X,EAAIiI,WAAWxI,EAAK,OACpBO,EAAI+X,WAAWtY,EAAK,OAEpBvE,KAAKuE,IAAMA,EAKPvE,KAAK8c,sBAD6B,iBAA3BF,EACsB,IAAK5c,KAAK8c,yBAA0BF,GAEpC,IACtB5c,KAAK8c,sBACRnZ,UAAWiZ,GAIZ5c,IACV,CAMM+c,gBAAgBjH,GAInB,OAHAhR,EAAIiI,WAAW+I,EAAU,YAEzB9V,KAAK8V,SAAWA,EACT9V,IACV,CAmBMgd,uBAAuBC,GAC1B,GAAIjd,KAAK+V,gBACL,MAAM,IAAI9jB,MAAM,2CAWpB,OARKgrB,EAEMjmB,MAAMC,QAAQgmB,GACrBjd,KAAK+V,gBAAkB,IAAInT,EAAuBqa,GAElDjd,KAAK+V,gBAAkBkH,EAJvBjd,KAAK+V,gBAAkB,IAAInT,EAOxB5C,IACV,CAMMkd,QAGH,MAAMJ,EAAwB9c,KAAK8c,uBAAyB,CAAC,EAS7D,QANqCxtB,IAAjCwtB,EAAsB1c,SAEtB0c,EAAsB1c,OAASJ,KAAKI,SAInCJ,KAAKuE,IACN,MAAM,IAAItS,MAAM,4FAEpB,MAAM4jB,EAAa,IAAIjG,EAAe5P,KAAKuE,IAAKuY,GAEhD,OAAOlH,EAAcrkB,OACjBskB,EACA7V,KAAKI,QAAUE,EAAAA,EAAAA,SACfN,KAAK8V,UAAY,IAAI4F,EACrB1b,KAAK+V,gBACZ,iCC5ME,IAAKxW,mBAAZ,SAAYA,GAERA,EAAAA,EAAAA,WAAAA,GAAAA,aAEAA,EAAAA,EAAAA,WAAAA,GAAAA,aAEAA,EAAAA,EAAAA,WAAAA,GAAAA,aAEAA,EAAAA,EAAAA,iBAAAA,GAAAA,mBAEAA,EAAAA,EAAAA,iBAAAA,GAAAA,mBAEAA,EAAAA,EAAAA,KAAAA,GAAAA,OAEAA,EAAAA,EAAAA,MAAAA,GAAAA,OAdJ,EAAYA,IAAAA,EAAW,mCCChB,IAAKqC,mBAAZ,SAAYA,GAERA,EAAAA,EAAAA,MAAAA,GAAAA,QAEAA,EAAAA,EAAAA,MAAAA,GAAAA,QAEAA,EAAAA,EAAAA,YAAAA,GAAAA,cAEAA,EAAAA,EAAAA,QAAAA,GAAAA,UAEAA,EAAAA,EAAAA,MAAAA,GAAAA,QAEAA,EAAAA,EAAAA,SAAAA,GAAAA,WAEAA,EAAAA,EAAAA,KAAAA,GAAAA,MAdJ,EAAYA,IAAAA,EAAQ,kCCHb,IAAKoP,EAYApR,2BAZZ,SAAYoR,GAERA,EAAAA,EAAAA,KAAAA,GAAAA,OAEAA,EAAAA,EAAAA,WAAAA,GAAAA,aAEAA,EAAAA,EAAAA,iBAAAA,GAAAA,mBAEAA,EAAAA,EAAAA,YAAAA,GAAAA,aARJ,EAAYA,IAAAA,EAAiB,KAY7B,SAAYpR,GAERA,EAAAA,EAAAA,KAAAA,GAAAA,OAEAA,EAAAA,EAAAA,OAAAA,GAAAA,QAJJ,EAAYA,IAAAA,EAAc,oDCXpB,MAAOU,EAITlG,cAAwB,CAIjBuH,IAAIwb,EAAqBC,GAC/B,EAPa9c,EAAAA,SAAoB,IAAIA,uBCR2FxI,aAAjIulB,EAAqB,oBAAPhY,WAAyC,IAAdA,KAAKgY,OAAqBhY,KAAKgY,OAAO,CAAC,EAA0BC,EAAgB,CAAC,EAAU,IAAIxlB,KAAOulB,EAAWA,EAAOE,eAAezlB,KAAMwlB,EAAgBxlB,GAAKulB,EAAOvlB,IAAM,IAAyG0lB,EAA6BC,EAAgCC,EAA8BC,EAAhMC,EAAW,GAAgNJ,EAAmC,iBAATtY,OAAkBuY,EAA6C,mBAAhBI,cAA2BH,EAAqC,iBAAVjvB,GAA8C,iBAAnBA,EAAQoa,UAAoD,iBAAxBpa,EAAQoa,SAASC,KAAgB6U,GAAsBH,IAAqBE,IAAsBD,EAAsB,IAA4JK,EAAMC,EAAUC,EAA8BC,EAAWC,EAAjNC,EAAgB,GAA6MT,GAA+CS,EAAvBV,EAAuCW,EAAAA,OAAAA,QAAwBD,GAAiB,IAAyBE,KAAcP,EAAM,SAAoBQ,EAASC,GAAuH,OAA3GN,IAAOA,EAAOG,EAAQ,QAAUF,IAASA,EAASE,EAAQ,QAAQE,EAASJ,EAAQ,UAAcI,GAAiBL,EAAM,aAAiBK,EAASC,EAAO,KAAK,OAAQ,EAACP,EAAW,SAAoBM,GAAU,IAAIE,EAAIV,EAAMQ,GAAS,GAAiE,OAAvDE,EAAI5rB,SAAQ4rB,EAAI,IAAI9rB,WAAW8rB,IAAKC,EAAOD,EAAI5rB,QAAe4rB,CAAI,EAAI/vB,EAAO,KAASO,OAAO,GAAeP,EAAO,KAAS,GAAGugB,QAAQ,MAAM,KAAK4O,EAAWnvB,EAAO,KAASmL,MAAM,GAAmC8kB,EAAM,QAAYrB,EAAO5uB,EAAO,GAAO,qBAAoB,SAASmkB,GAAI,KAAKA,aAAc+L,GAAa,MAAM/L,CAAI,IAAEnkB,EAAO,GAAO,qBAAqByb,GAAa,SAASa,GAAQtc,EAAO,KAASsc,EAAQ,EAACsS,EAAM,QAAY,WAAW,MAAM,4BAA6B,GAASM,GAAsC,oBAANiB,OAAmBd,EAAM,SAAoBe,GAAG,OAAOD,KAAKC,EAAG,GAACb,EAAW,SAAoBa,GAAG,IAAI3tB,EAAK,MAAuB,mBAAb4tB,WAAgC,IAAIpsB,WAAWosB,WAAWD,KAA0BJ,EAAqB,iBAA3CvtB,EAAK0tB,KAAKC,EAAE,YAAgD3tB,EAAK,EAAuB,oBAAZ6tB,WAAyBnB,EAAWmB,WAAqC,oBAAX9c,YAAwB2b,EAAW3b,WAA2B,mBAAP+c,MAAyB,SAASjU,GAAQiU,KAAKjU,EAAQ,EAAmB,oBAARkU,QAAyC,oBAAVtX,UAAsBA,QAAQ,CAAC,GAAEA,QAAQhG,IAAIsd,MAAMtX,QAAQI,KAAKJ,QAAQ7F,MAAwB,oBAAXod,SAAuBA,SAASD,SAAezB,GAAoBC,KAA0BA,EAAuBU,EAAgB9Y,KAAK8Z,SAAS9L,KAA+B,oBAAXlO,UAAwBA,SAASia,gBAAejB,EAAgBhZ,SAASia,cAAcC,KAA6ClB,EAAH,IAAnCA,EAAgBjX,QAAQ,SAA8BiX,EAAgBrY,OAAO,EAAEqY,EAAgBjL,YAAY,KAAK,GAAwB,GAAI4K,EAAM,SAASvZ,GAAK,IAAImH,EAAI,IAAIC,eAAwD,OAAzCD,EAAIE,KAAK,MAAMrH,GAAI,GAAOmH,EAAIjH,KAAK,MAAaiH,EAAIM,YAAa,EAAIyR,IAAuBO,EAAW,SAASzZ,GAAK,IAAImH,EAAI,IAAIC,eAAuF,OAAxED,EAAIE,KAAK,MAAMrH,GAAI,GAAOmH,EAAInF,aAAa,cAAcmF,EAAIjH,KAAK,MAAa,IAAI/R,WAAWgZ,EAAIlF,SAAU,GAACuX,EAAU,SAASxZ,EAAIwH,EAAOE,GAAS,IAAIP,EAAI,IAAIC,eAAeD,EAAIE,KAAK,MAAMrH,GAAI,GAAMmH,EAAInF,aAAa,cAAcmF,EAAIK,OAAO,WAA0B,KAAZL,EAAIX,QAAyB,GAAZW,EAAIX,QAAWW,EAAIlF,SAAUuF,EAAOL,EAAIlF,UAAiByF,GAAU,EAACP,EAAIO,QAAQA,EAAQP,EAAIjH,KAAK,KAAM,GAAoE4Y,EAAM,OAAW1V,QAAQhG,IAAI4H,KAAK5B,SAA1C,IAAiY2X,EAA1U7J,EAAI4H,EAAM,UAAc1V,QAAQI,KAAKwB,KAAK5B,SAAS,IAAI7P,KAAOwlB,EAAoBA,EAAgBC,eAAezlB,KAAMulB,EAAOvlB,GAAKwlB,EAAgBxlB,IAAMwlB,EAAgB,KAAQD,EAAM,YAAcO,EAAWP,EAAM,WAAiBA,EAAM,aAA4BA,EAAM,YAAmBA,EAAM,MAAeA,EAAM,KAA2BA,EAAM,aAAeiC,EAAWjC,EAAM,YAAe,IAA+HkC,EAA7GlC,EAAM,cAAgD,iBAAdmC,aAAwBtV,EAAM,mCAAkD,IAAIuV,GAAM,EAAqB,SAAShB,EAAOiB,EAAUrU,GAAUqU,GAAWxV,EAAM,qBAAqBmB,EAAO,CAA4Q,IAA+6BzY,EAAa+sB,EAAx7BC,EAAiC,oBAAdhxB,YAA0B,IAAIA,YAAY,aAAQU,EAAw6B,SAASuwB,EAA2BC,GAAKltB,EAAOktB,EAAIzC,EAAM,MAAgB,IAAI0C,UAAUD,GAAKzC,EAAM,OAAkB,IAAI2C,WAAWF,GAAKzC,EAAM,OAAkB,IAAI4C,WAAWH,GAAKzC,EAAM,OAAWsC,EAAO,IAAIjtB,WAAWotB,GAAKzC,EAAM,QAAoB,IAAI6C,YAAYJ,GAAKzC,EAAM,QAAoB,IAAI8C,YAAYL,GAAKzC,EAAM,QAAoB,IAAI+C,aAAaN,GAAKzC,EAAM,QAAoB,IAAIgD,aAAaP,EAAK,CAAmBzC,EAAM,eAAzB,IAA0DiD,EAAcC,EAAa,GAAOC,EAAW,GAAOC,EAAc,GAAmsB,IAAIC,EAAgB,EAAMC,EAAqB,KAASC,EAAsB,KAA2iB,SAAS1W,EAAM2W,GAA0M,MAAjMxD,EAAM,SAAaA,EAAM,QAAYwD,GAAepL,EAAToL,GAAM,IAAapB,GAAM,EAAgB,EAAEoB,EAAK,SAASA,EAAK,+CAAqD,IAAIrB,YAAYsB,aAAaD,EAAc,CAA3RxD,EAAM,gBAAoB,CAAC,EAAEA,EAAM,gBAAoB,CAAC,EAA6R,SAAS0D,EAAUzC,GAAU,OAAOA,EAAS0C,WAArF,wCAA+G,UAASC,EAAU3C,GAAU,OAAOA,EAAS0C,WAAW,UAAW,KAAt1NE,EAA01NC,EAAe,cAAuF,SAASC,EAAUC,GAAM,IAAI,GAAGA,GAAMF,GAAgB7B,EAAY,OAAO,IAAI5sB,WAAW4sB,GAAY,GAAGtB,EAAY,OAAOA,EAAWqD,GAAW,KAAK,iDAAyE,CAAtB,MAAM5L,GAAKvL,EAAMuL,EAAK,CAAC,CAAimE,SAAS6L,EAAqBnG,GAAW,KAAMA,EAAUnsB,OAAO,GAAE,CAAC,IAAI4qB,EAASuB,EAAUoG,QAAQ,GAAoB,mBAAV3H,EAAV,CAA0D,IAAI4H,EAAK5H,EAAS4H,KAAsB,iBAAPA,OAAmClyB,IAAfsqB,EAAS4B,IAAiB8E,EAAUhc,IAAIkd,EAAdlB,GAA2BA,EAAUhc,IAAIkd,EAAdlB,CAAoB1G,EAAS4B,KAAWgG,OAAoBlyB,IAAfsqB,EAAS4B,IAAgB,KAAK5B,EAAS4B,IAA9L,MAA1B5B,EAASyD,EAAqN,CAAC,CAAkF,SAASoE,EAA0BnqB,GAAM,IAAqG,OAAjGioB,EAAWmC,KAAKpqB,EAAK1E,EAAO3D,WAAW,QAAQ,IAAI4wB,EAA2BN,EAAW3sB,QAAe,CAAY,CAAV,MAAMuH,GAAI,CAAC,CAA19F4mB,EAAUI,KAAr4ND,EAAg7NC,EAA1BA,EAA74N9D,EAAM,WAAuBA,EAAM,WAAe6D,EAAK/C,GAAwBA,EAAgB+C,GAAivU,IAA8mDS,EAA1mDC,EAAc,CAAC,EAA3wB,SAAgCC,EAAKxC,EAAIxZ,GAAK8Z,EAAOmC,WAAWD,EAAKxC,EAAIA,EAAIxZ,EAAK,EAAotB,EAAljB,SAAiCkc,GAAe,IAA96KC,EAAEC,EAAg7KC,EAAQvC,EAAO3wB,OAA2CmzB,EAAY,WAAW,IAA3DJ,KAA8B,GAA8CI,EAAa,OAAO,EAAM,IAAI,IAAIC,EAAQ,EAAEA,GAAS,EAAEA,GAAS,EAAE,CAAC,IAAIC,EAAkBH,GAAS,EAAE,GAAGE,GAA6N,GAApNC,EAAkBp0B,KAAKoR,IAAIgjB,EAAkBN,EAAc,WAAsHN,EAA/FxzB,KAAKoR,IAAI8iB,IAA/tLH,EAAmvL/zB,KAAKq0B,IAAIP,EAAcM,KAAxwLJ,EAA2xL,OAAnwL,IAAGD,GAAGC,EAASD,EAAEC,GAAgBD,KAA6yL,OAAO,CAAM,QAAO,CAAM,GAA8YO,GAAp9F,WAAsB,IAAIva,EAAK,CAAC,EAAI4Z,GAAe,SAASY,EAAgBC,EAAS/D,GAAQ,IAAvoEgE,EAA2oEC,EAAQF,EAASE,QAAQtF,EAAM,IAAQsF,EAAsC9C,GAA9BN,EAAWlC,EAAM,IAAN,GAAyDzqB,QAAQ0tB,EAAUjD,EAAM,IAAN,EAAhxEqF,EAA6yErF,EAAM,IAAN,EAAzyEmD,EAAWoC,QAAQF,GAAmR,SAA6BjH,GAA6G,GAAzGiF,IAAqBrD,EAAM,wBAA4BA,EAAM,uBAA2BqD,GAAqC,GAAjBA,IAA8C,OAAvBC,IAA6BkC,cAAclC,GAAsBA,EAAqB,MAAQC,GAAsB,CAAC,IAAIhH,EAASgH,EAAsBA,EAAsB,KAAKhH,GAAW,CAAE,CAAmrDkJ,EAAwC,CAAqC,SAASC,EAA2B1yB,GAAQmyB,EAAgBnyB,EAAM,SAAc,UAAS2yB,EAAuBC,GAAU,OAAllC,WAA4B,IAAI3D,IAAa9B,GAAoBC,GAAuB,CAAC,GAAkB,mBAARvU,QAAqB+X,EAAUE,GAAiB,OAAOjY,MAAMiY,EAAe,CAAC3W,YAAY,gBAAgBuO,MAAK,SAASvS,GAAU,IAAIA,EAAQ,GAAQ,KAAK,uCAAuC2a,EAAe,IAAI,OAAO3a,EAAQ,aAAkB,IAAEa,OAAM,WAAW,OAAO+Z,EAAUD,EAAgB,IAAO,GAAGpD,EAAW,OAAO,IAAIxS,SAAQ,SAASE,EAAQD,GAAQuS,EAAUoD,GAAe,SAAS3a,GAAUiF,EAAQ,IAAI/Y,WAAW8T,GAAW,GAACgF,EAAQ,GAAI,QAAOD,QAAQE,UAAUsN,MAAK,WAAW,OAAOqI,EAAUD,EAAgB,GAAE,CAAqe+B,GAAmBnK,MAAK,SAASwF,GAAwD,OAArCiB,YAAY2D,YAAY5E,EAAOvW,EAAoB,IAAE+Q,KAAKkK,GAAS,SAAStT,GAAQ8F,EAAI,0CAA0C9F,GAAQzF,EAAMyF,EAAQ,GAAE,CAA6lB,GAA1nG+Q,IAAqBrD,EAAM,wBAA4BA,EAAM,uBAA2BqD,GAAqiGrD,EAAM,gBAAqB,IAAgE,OAAhDA,EAAM,gBAAoBrV,EAAKwa,EAAmH,CAAnF,MAAMroB,GAAgE,OAA7Dsb,EAAI,sDAAsDtb,IAAU,CAAM,CAA7vBmlB,GAAsD,mBAAnCE,YAAY4D,sBAAoCrC,EAAUI,IAAkBF,EAAUE,IAAgC,mBAARjY,MAAwY8Z,EAAuBD,GAApY7Z,MAAMiY,EAAe,CAAC3W,YAAY,gBAAgBuO,MAAK,SAASvS,GAAqE,OAAhDgZ,YAAY4D,qBAAqB5c,EAASwB,GAAoB+Q,KAAKgK,GAA2B,SAASpT,GAAuG,OAA/F8F,EAAI,kCAAkC9F,GAAQ8F,EAAI,6CAAoDuN,EAAuBD,EAA4B,GAAE,GAA+R,CAA4qCM,GAAoChG,EAAM,mBAAuB,WAAW,OAA0BA,EAAM,mBAAuBA,EAAM,IAAN,GAAoBxsB,MAAM,KAAKoR,UAAW,EAAkBob,EAAM,aAAiB,WAAW,OAAoBA,EAAM,aAAiBA,EAAM,IAAN,GAAoBxsB,MAAM,KAAKoR,UAAW,EAAaob,EAAM,QAAY,WAAW,OAAOkF,EAAQlF,EAAM,QAAYA,EAAM,IAAN,GAAoBxsB,MAAM,KAAKoR,UAAW,GAA24BqhB,GAAh4BjG,EAAM,MAAU,WAAW,OAAaA,EAAM,MAAUA,EAAM,IAAN,GAAoBxsB,MAAM,KAAKoR,UAAW,EAAoBob,EAAM,eAAmB,WAAW,OAAsBA,EAAM,eAAmBA,EAAM,IAAN,GAAoBxsB,MAAM,KAAKoR,UAAW,EAA2Bob,EAAM,sBAA0B,WAAW,OAA6BA,EAAM,sBAA0BA,EAAM,IAAN,GAAoBxsB,MAAM,KAAKoR,UAAW,EAAwBob,EAAM,mBAAuB,WAAW,OAA0BA,EAAM,mBAAuBA,EAAM,IAAN,GAAoBxsB,MAAM,KAAKoR,UAAW,EAAsBob,EAAM,iBAAqB,WAAW,OAAwBA,EAAM,iBAAqBA,EAAM,IAAN,GAAoBxsB,MAAM,KAAKoR,UAAW,EAAwBob,EAAM,mBAAuB,WAAW,OAA0BA,EAAM,mBAAuBA,EAAM,IAAN,GAAoBxsB,MAAM,KAAKoR,UAAW,EAAgBob,EAAM,WAAe,WAAW,OAAOiG,EAAWjG,EAAM,WAAeA,EAAM,IAAN,GAAoBxsB,MAAM,KAAKoR,UAAW,GAAmH,SAAS0c,EAAW5T,GAAQ/K,KAAKjO,KAAK,aAAaiO,KAAK7O,QAAQ,gCAAgC4Z,EAAO,IAAI/K,KAAK+K,OAAOA,CAAO,CAA8G,SAASwY,EAAIhL,GAA+F,SAASiL,IAAW7B,IAAiBA,GAAU,EAAKtE,EAAM,WAAc,EAAQoC,KAA/9N,EAAK6B,EAAqBd,GAAm+NnD,EAAM,sBAAyBA,EAAM,uBAA5/N,WAAmB,GAAGA,EAAM,QAA2F,IAAjD,mBAAnBA,EAAM,UAAwBA,EAAM,QAAY,CAACA,EAAM,UAAmBA,EAAM,QAAYruB,QAA2M0zB,EAAtLrF,EAAM,QAAYkE,QAAwKd,EAAcmC,QAAQF,GAAhD,IAAsBA,EAA1JpB,EAAqBb,EAAe,CAAmzNgD,IAAU,CAAjRlL,EAAKA,GAAMqF,EAAc8C,EAAgB,KAApmO,WAAkB,GAAGrD,EAAM,OAAuF,IAA/C,mBAAlBA,EAAM,SAAuBA,EAAM,OAAW,CAACA,EAAM,SAAkBA,EAAM,OAAWruB,QAA2Z0zB,EAAvYrF,EAAM,OAAWkE,QAA0XhB,EAAaqC,QAAQF,GAA9C,IAAqBA,EAA5WpB,EAAqBf,EAAc,CAAm5NmD,GAAYhD,EAAgB,IAAqMrD,EAAM,WAAeA,EAAM,UAAc,cAAchT,YAAW,WAAWA,YAAW,WAAWgT,EAAM,UAAc,GAAI,GAAC,GAAGmG,GAAQ,GAAC,IAAQA,KAAS,CAAkB,GAAhzBnG,EAAM,SAAn+Q,SAAkBsG,EAAKC,GAAW,IAAIpF,EAAsL,OAAvJA,EAAvE,GAA+CoF,EAA4BN,EAAWK,EAAK30B,QAAiBuzB,EAAQoB,EAAK30B,QAAW20B,EAAK9zB,UAAU8zB,EAAK/pB,MAAO+lB,EAAO7vB,IAAI6zB,EAAKnF,GAAUmB,EAAO7vB,IAAI,IAAI4C,WAAWixB,GAAMnF,GAAYA,CAAI,EAAkxQnB,EAAM,aAAhiP,SAAsBwG,EAAIC,GAAgB,OAAOD,EAAttB,SAA2BE,EAAKC,EAAIF,GAA6D,IAA7C,IAAIG,EAAOD,EAAIF,EAAmBI,EAAOF,EAAUD,EAAKG,MAAWA,GAAQD,MAAUC,EAAO,GAAGA,EAAOF,EAAI,IAAID,EAAKl0B,UAAU+vB,EAAa,OAAOA,EAAY3sB,OAAO8wB,EAAKl0B,SAASm0B,EAAIE,IAAyB,IAAX,IAAIp1B,EAAI,GAASk1B,EAAIE,GAAO,CAAC,IAAIC,EAAGJ,EAAKC,KAAO,GAAQ,IAAHG,EAAL,CAAoD,IAAIC,EAAe,GAAZL,EAAKC,KAAU,GAAa,MAAN,IAAHG,GAAJ,CAAmE,IAAIE,EAAe,GAAZN,EAAKC,KAAmG,IAAvEG,EAAL,MAAN,IAAHA,IAAqB,GAAHA,IAAQ,GAAGC,GAAI,EAAEC,GAAe,EAAHF,IAAO,GAAGC,GAAI,GAAGC,GAAI,EAAc,GAAZN,EAAKC,MAAgB,MAAOl1B,GAAK6B,OAAOC,aAAauzB,OAAQ,CAAC,IAAIG,EAAGH,EAAG,MAAMr1B,GAAK6B,OAAOC,aAAa,MAAM0zB,GAAI,GAAG,MAAS,KAAHA,EAAS,CAAnO,MAAjDx1B,GAAK6B,OAAOC,cAAiB,GAAHuzB,IAAQ,EAAEC,EAA5E,MAAtCt1B,GAAK6B,OAAOC,aAAauzB,EAA0U,CAAC,OAAOr1B,CAAI,CAAqDy1B,CAAkB5E,EAAOkE,EAAIC,GAAgB,EAAG,EAAy9OzG,EAAM,aAAvjR,EAAiuRuD,EAAsB,SAAS4D,IAAgB7C,GAAU4B,IAAU5B,IAAUf,EAAsB4D,EAAU,EAAicnH,EAAM,IAAQkG,EAAOlG,EAAM,QAA2F,IAAjD,mBAAnBA,EAAM,UAAwBA,EAAM,QAAY,CAACA,EAAM,UAAmBA,EAAM,QAAYruB,OAAO,GAAGquB,EAAM,QAAYxf,KAAlBwf,GAA2BkG,IAAqC7E,EAAOiE,QAAQtF,EAAOA,EAAOoH,cAAc,WAA4B,oBAAPpf,aAA2BA,KAAKgY,OAAOA,EAAgBkC,EAAWe,EAAc1tB,EAAa+sB,OAAqDrwB,SAAiDovB,EAAOiE,OAAS,yBCAr4b,UAQmB,oBAATtd,MAAuBA,KANzBqf,EAAO,QAAD,4BAMgC,WAC1C,MAAMjb,EAAyB,oBAATpE,KAAuBA,KAAOrF,KAK9C2kB,EAAY,CACdC,QAAS,EACTC,QAAS,EACTC,SAAU,GAGd,SAASC,EAAWC,GAChB,GAAID,EAAWE,SACX,OAAOF,EAAWE,SAEtB,GAAIF,EAAWG,QACX,OAAO3Z,QAAQE,QAAQsZ,EAAWG,SAEtC,IAAIlR,EAmBJ,OAbIA,EAJAvK,EAAOhb,SACPgb,EAAOhb,QAAQoa,UACfY,EAAOhb,QAAQoa,SAASC,KAEdqc,IAAiBpM,MACtBsE,GACG,IAAI9R,SAASE,IACT4R,EAAOoG,QAAU,IAAMhY,EAAQ4R,EAA/B,MAIF+H,IAAiBrM,MAAMuG,GAEtB+F,EAAS/F,EADG0F,EAAMM,EAAiBN,QAAO11B,KAIzDy1B,EAAWE,SAAWjR,EACfA,EAAQ+E,MAAMsE,IACjB0H,EAAWG,QAAU7H,SACd0H,EAAWE,SACX5H,IAEd,CAED,SAASgI,EAAS/F,EAAYC,GAC1B,OAAO,IAAIhU,SAASE,IAChBhC,EAAO4T,OAAS,CACZiC,aACAC,aACAkE,UACIhY,EAAQ4R,OACX,GAEE8H,MAEd,CAED,SAASA,IACL,OAAI1b,EAAO8b,qBACA9b,EAAO8b,uBAGPha,QAAQE,QAAQ2S,EAAQ,OAGtC,CAED,SAASgH,IACL,OAAI3b,EAAO+b,qBACA/b,EAAO+b,uBAGPja,QAAQE,QAAQ2S,EAAQ,QAAwBrF,MAClD0M,GACUC,EAAiBD,IAUvC,CAED,SAASC,EAAiBC,GACtB,MAAMta,EAAOua,KAAKD,GACZpH,EAAS,IAAI7rB,WAAW,IAAIyB,YAAYkX,EAAKrc,SACnD,IAAK,IAAI8E,EAAI,EAAGA,EAAIuX,EAAKrc,OAAQ8E,IAC7ByqB,EAAOzqB,GAAKuX,EAAKlc,WAAW2E,GAEhC,OAAOyqB,CACV,CAED,SAAS+G,EAAiBN,GACtB,MAAMa,EAAK,KAGLC,EAAiB,GAAKD,EAEtBE,GAJK,KAAOF,EACP,KAGU,EAAS,GAAKA,GAAMC,EACnCE,EAAgB/3B,KAAKoR,IACvBpR,KAAKq0B,IAAIr0B,KAAKg4B,KAAMjB,EAAMa,EAAMC,GAAiB,KAAO,IACxDC,GAGJ,OAAO,IAAIvG,YAAY0G,OAAO,CAC1BC,QAASH,EACTI,QAASL,GAEhB,CAED,SAASM,EAAchJ,EAAQiJ,GAC3B,OAAOjJ,EAAOkJ,SAASD,EAAK,KAAMjJ,EAAOmJ,aAC5C,CAED,SAASC,EAAiBpJ,EAAQiJ,GAE9B,OAAOD,EAAchJ,EADO,IAAI3qB,WAAW,IAAI4zB,EAAK,IAEvD,CAED,SAASI,EAAW53B,GAChB,GAAmB,iBAARA,EACP,OAAOA,EAEX,GAA2B,mBAAhBH,YACP,OAAO,IAAIA,aAAcoB,OAAOjB,GAC7B,GAAsB,mBAAX63B,OACd,OAAOA,OAAOtyB,KAAKvF,GAEnB,MAAM,IAAImD,MAAM,gCAEvB,CAsBD,SAAS20B,EAAWC,GAChB,MAAMC,EAAQD,EAAO7B,KAAO,KAC5B,OAAOD,EAAW+B,GAAO/N,MAAMsE,IAC3B,MAAM0J,EAAQF,EAAOG,MAAQ,EACvBC,EAAcJ,EAAOI,aAAe,EACpCC,EAAaR,EAAWG,EAAOM,MAC/BC,EAAMX,EAAiBpJ,EAAQ6J,GAC/BG,EAASH,EAAWl4B,OACpBs4B,EAAcZ,EAAWG,EAAOU,MAChCA,EAAOd,EAAiBpJ,EAAQiK,GAChCE,EAAUF,EAAYt4B,OACtBy4B,EAAaZ,EAAO51B,MAAQ0zB,EAAUC,QACtC8C,EAAOrK,EAAOkJ,SAChB,IAAIvvB,MAAM6vB,EAAOc,SAAW,IAC5B,KACAtK,EAAOmJ,cAELoB,EAASf,EAAOe,OAChBvB,EAAchJ,EAAQwJ,EAAOe,QAC7B,EACAC,EAAYhB,EAAOe,OAASf,EAAOe,OAAO34B,WAAa,EACvD64B,EAAKjB,EAAOiB,GAAKzB,EAAchJ,EAAQwJ,EAAOiB,IAAM,EACpDC,EAAQlB,EAAOiB,GAAKjB,EAAOiB,GAAG74B,WAAa,EAC3C+4B,EAAUnB,EAAOc,SAAW,GAC5BM,EAAa5K,EAAO6K,mBACtBnB,EACAD,EACAG,EACAO,EACAQ,EACAP,GAEEU,EAAU9K,EAAOkJ,SACnB,IAAIvvB,MAAMixB,EAAa,GACvB,KACA5K,EAAOmJ,cAEL9mB,EAAU,GAChB,IAAI+V,EACA2S,EAwBA/3B,EAvBJ,IACI+3B,EAAM/K,EAAOgL,iBACTtB,EACAD,EACAG,EACAG,EACAC,EACAE,EACAC,EACAE,EACAM,EACAG,EACAF,EACAR,EACAG,EACAC,EACAC,EACAC,EACAroB,EAIP,CAFC,MAAOvF,GACLsb,EAAMtb,CACT,CAED,GAAY,IAARiuB,GAAc3S,EAcX,CACH,IACSA,IACDA,EAAM4H,EAAOiL,aACTjL,EAAOkL,sBAAsBH,IAG3B,CAAZ,MAAOjuB,GAAK,CACd9J,EAAS,CAAEc,QAASskB,EAAK/F,KAAM0Y,EAClC,KAvBsB,CACnB,IAAII,EAAU,GACd,MAAMC,EAAU,IAAI/1B,WAAWs1B,GAC/B,IAAK,IAAIl0B,EAAI,EAAGA,EAAIk0B,EAASl0B,IAAK,CAC9B,MAAM2E,EAAO4kB,EAAOqL,MAAMhB,EAAO5zB,GACjC20B,EAAQ30B,GAAK2E,EACb+vB,IAAY,KAAO,IAAO/vB,GAAMrB,SAAS,KAAKwC,OAAO,EACxD,CAEDvJ,EAAS,CACLq3B,KAAMe,EACNE,QAASH,EACTL,QAJe9K,EAAOiL,aAAaH,GAM1C,CAUD,IACI9K,EAAOuL,MAAMxB,GACb/J,EAAOuL,MAAMrB,GACblK,EAAOuL,MAAMlB,GACbrK,EAAOuL,MAAMT,GACTL,GACAzK,EAAOuL,MAAMd,GAEbF,GACAvK,EAAOuL,MAAMhB,EAEP,CAAZ,MAAOztB,GAAK,CACd,GAAIsb,EACA,MAAMplB,EAEN,OAAOA,CACV,GAER,CAkBD,SAASw4B,EAAahC,GAClB,OAAO9B,IAAahM,MAAMsE,IACtB,MAAM6J,EAAaR,EAAWG,EAAOM,MAC/BC,EAAMX,EAAiBpJ,EAAQ6J,GAC/BG,EAASH,EAAWl4B,OACpB44B,EAASf,EAAOe,OAChBvB,EAAchJ,EAAQwJ,EAAOe,QAC7B,EACAC,EAAYhB,EAAOe,OAASf,EAAOe,OAAO34B,WAAa,EACvD64B,EAAKjB,EAAOiB,GAAKzB,EAAchJ,EAAQwJ,EAAOiB,IAAM,EACpDC,EAAQlB,EAAOiB,GAAKjB,EAAOiB,GAAG74B,WAAa,EAE3C65B,EAAMrC,EAAiBpJ,EADVqJ,EAAWG,EAAOsB,UAErC,IAQI1S,EACA2S,EAeA/3B,EAxBAo3B,EAAaZ,EAAO51B,KACxB,QAAmB3B,IAAfm4B,EAA0B,CAC1B,IAAIsB,EAAUlC,EAAOsB,QAAQxf,MAAM,KAAK,GACpCogB,IACAA,EAAUA,EAAQ/Z,QAAQ,IAAK,KAC/ByY,EAAa9C,EAAUoE,IAAYpE,EAAUC,QAEpD,CAGD,IACIwD,EAAM/K,EAAO2L,mBACTF,EACA1B,EACAC,EACAO,EACAC,EACAC,EACAC,EACAN,EAIP,CAFC,MAAOttB,GACLsb,EAAMtb,CACT,CAED,GAAIiuB,GAAO3S,EAAK,CACZ,IACSA,IACDA,EAAM4H,EAAOiL,aACTjL,EAAOkL,sBAAsBH,IAG3B,CAAZ,MAAOjuB,GAAK,CACd9J,EAAS,CAAEc,QAASskB,EAAK/F,KAAM0Y,EAClC,CACD,IACI/K,EAAOuL,MAAMxB,GACb/J,EAAOuL,MAAME,EACH,CAAZ,MAAO3uB,GAAK,CACd,GAAIsb,EACA,MAAMplB,EAEN,OAAOA,CACV,GAER,CAED,SAASo0B,IACDM,EAAWG,UACXH,EAAWG,QAAQT,uBACZM,EAAWE,gBACXF,EAAWG,QAEzB,CAED,MAAO,CACHP,YACA+C,KAAMd,EACNqC,OAAQJ,EACRpE,gBAEP,GAxWa,gDCFd,IAAI,aAAJ,IAAIyE,EAAU,SAAU55B,GACpB,aAEA,IAAI65B,EAAO,IAEPC,EAAU,iBACVC,EAAcC,EAAaF,GAC3BG,EAAmB,uCAEnBC,EAAyC,mBAAXC,OAElC,SAASC,EAAQC,EAAGC,EAAOC,EAAUC,GACjC,YAAiB,IAANH,EAA0BD,EAAQ,QACxB,IAAVE,IAAyC,KAAVA,GAAiBC,GAA2BE,EAAUJ,EAAGC,EAAOC,EAAUC,GAC7GE,EAAWL,EACrB,CAED,SAASM,EAAWl8B,EAAOm8B,GACvBlqB,KAAKjS,MAAQA,EACbiS,KAAKkqB,KAAOA,EACZlqB,KAAKmqB,SAAU,CAClB,CAGD,SAASC,EAAar8B,GAClBiS,KAAKjS,MAAQA,EACbiS,KAAKkqB,KAAOn8B,EAAQ,EACpBiS,KAAKmqB,SAAU,CAClB,CAGD,SAASE,EAAat8B,GAClBiS,KAAKjS,MAAQA,CAChB,CAGD,SAASu8B,EAAUC,GACf,OAAQnB,EAAUmB,GAAKA,EAAInB,CAC9B,CAED,SAASE,EAAaiB,GAClB,OAAIA,EAAI,IACG,CAACA,GACRA,EAAI,KACG,CAACA,EAAI,IAAKt8B,KAAKC,MAAMq8B,EAAI,MAC7B,CAACA,EAAI,IAAKt8B,KAAKC,MAAMq8B,EAAI,KAAO,IAAKt8B,KAAKC,MAAMq8B,EAAI,MAC9D,CAED,SAASC,EAAalE,GAClBmE,EAAKnE,GACL,IAAIt3B,EAASs3B,EAAIt3B,OACjB,GAAIA,EAAS,GAAK07B,EAAWpE,EAAK+C,GAAe,EAC7C,OAAQr6B,GACJ,KAAK,EAAG,OAAO,EACf,KAAK,EAAG,OAAOs3B,EAAI,GACnB,KAAK,EAAG,OAAOA,EAAI,GAAKA,EAAI,GAAK6C,EACjC,QAAS,OAAO7C,EAAI,IAAMA,EAAI,GAAKA,EAAI,GAAK6C,GAAQA,EAG5D,OAAO7C,CACV,CAED,SAASmE,EAAKd,GAEV,IADA,IAAI71B,EAAI61B,EAAE36B,OACQ,IAAX26B,IAAI71B,KACX61B,EAAE36B,OAAS8E,EAAI,CAClB,CAED,SAAS62B,EAAY37B,GAGjB,IAFA,IAAIgzB,EAAI,IAAIhrB,MAAMhI,GACd8E,GAAK,IACAA,EAAI9E,GACTgzB,EAAEluB,GAAK,EAEX,OAAOkuB,CACV,CAED,SAAS4I,EAASL,GACd,OAAIA,EAAI,EAAUt8B,KAAKC,MAAMq8B,GACtBt8B,KAAKg4B,KAAKsE,EACpB,CAED,SAASM,EAAItW,EAAGF,GACZ,IAKIyW,EAAKh3B,EALLi3B,EAAMxW,EAAEvlB,OACRg8B,EAAM3W,EAAErlB,OACRi8B,EAAI,IAAIj0B,MAAM+zB,GACdG,EAAQ,EACRC,EAAOhC,EAEX,IAAKr1B,EAAI,EAAGA,EAAIk3B,EAAKl3B,IAEjBo3B,GADAJ,EAAMvW,EAAEzgB,GAAKugB,EAAEvgB,GAAKo3B,IACLC,EAAO,EAAI,EAC1BF,EAAEn3B,GAAKg3B,EAAMI,EAAQC,EAEzB,KAAOr3B,EAAIi3B,GAEPG,GADAJ,EAAMvW,EAAEzgB,GAAKo3B,KACGC,EAAO,EAAI,EAC3BF,EAAEn3B,KAAOg3B,EAAMI,EAAQC,EAG3B,OADID,EAAQ,GAAGD,EAAE16B,KAAK26B,GACfD,CACV,CAED,SAASG,EAAO7W,EAAGF,GACf,OAAIE,EAAEvlB,QAAUqlB,EAAErlB,OAAe67B,EAAItW,EAAGF,GACjCwW,EAAIxW,EAAGE,EACjB,CAED,SAAS8W,EAAS9W,EAAG2W,GACjB,IAGIJ,EAAKh3B,EAHLw3B,EAAI/W,EAAEvlB,OACNi8B,EAAI,IAAIj0B,MAAMs0B,GACdH,EAAOhC,EAEX,IAAKr1B,EAAI,EAAGA,EAAIw3B,EAAGx3B,IACfg3B,EAAMvW,EAAEzgB,GAAKq3B,EAAOD,EACpBA,EAAQj9B,KAAKC,MAAM48B,EAAMK,GACzBF,EAAEn3B,GAAKg3B,EAAMI,EAAQC,EACrBD,GAAS,EAEb,KAAOA,EAAQ,GACXD,EAAEn3B,KAAOo3B,EAAQC,EACjBD,EAAQj9B,KAAKC,MAAMg9B,EAAQC,GAE/B,OAAOF,CACV,CAmCD,SAASM,EAAShX,EAAGF,GACjB,IAKIvgB,EAAG03B,EALHC,EAAMlX,EAAEvlB,OACR08B,EAAMrX,EAAErlB,OACRi8B,EAAI,IAAIj0B,MAAMy0B,GACdE,EAAS,EACTR,EAAOhC,EAEX,IAAKr1B,EAAI,EAAGA,EAAI43B,EAAK53B,KACjB03B,EAAajX,EAAEzgB,GAAK63B,EAAStX,EAAEvgB,IACd,GACb03B,GAAcL,EACdQ,EAAS,GACNA,EAAS,EAChBV,EAAEn3B,GAAK03B,EAEX,IAAK13B,EAAI43B,EAAK53B,EAAI23B,EAAK33B,IAAK,CAExB,MADA03B,EAAajX,EAAEzgB,GAAK63B,GACH,GACZ,CACDV,EAAEn3B,KAAO03B,EACT,KACH,CAJmBA,GAAcL,EAKlCF,EAAEn3B,GAAK03B,CACV,CACD,KAAO13B,EAAI23B,EAAK33B,IACZm3B,EAAEn3B,GAAKygB,EAAEzgB,GAGb,OADA22B,EAAKQ,GACEA,CACV,CAkBD,SAASW,EAAcrX,EAAGF,EAAG6V,GACzB,IAIIp2B,EAAG03B,EAJHF,EAAI/W,EAAEvlB,OACNi8B,EAAI,IAAIj0B,MAAMs0B,GACdJ,GAAS7W,EACT8W,EAAOhC,EAEX,IAAKr1B,EAAI,EAAGA,EAAIw3B,EAAGx3B,IACf03B,EAAajX,EAAEzgB,GAAKo3B,EACpBA,EAAQj9B,KAAKC,MAAMs9B,EAAaL,GAChCK,GAAcL,EACdF,EAAEn3B,GAAK03B,EAAa,EAAIA,EAAaL,EAAOK,EAGhD,MAAiB,iBADjBP,EAAIT,EAAaS,KAETf,IAAMe,GAAKA,GACR,IAAIb,EAAaa,IACnB,IAAIhB,EAAWgB,EAAGf,EAC9B,CAyDD,SAAS2B,EAAatX,EAAGF,GACrB,IAKIyX,EAASZ,EAAOp3B,EAAGi4B,EALnBN,EAAMlX,EAAEvlB,OACR08B,EAAMrX,EAAErlB,OAERi8B,EAAIN,EADAc,EAAMC,GAEVP,EAAOhC,EAEX,IAAKr1B,EAAI,EAAGA,EAAI23B,IAAO33B,EAAG,CACtBi4B,EAAMxX,EAAEzgB,GACR,IAAK,IAAIsF,EAAI,EAAGA,EAAIsyB,IAAOtyB,EAEvB0yB,EAAUC,EADJ1X,EAAEjb,GACc6xB,EAAEn3B,EAAIsF,GAC5B8xB,EAAQj9B,KAAKC,MAAM49B,EAAUX,GAC7BF,EAAEn3B,EAAIsF,GAAK0yB,EAAUZ,EAAQC,EAC7BF,EAAEn3B,EAAIsF,EAAI,IAAM8xB,CAEvB,CAED,OADAT,EAAKQ,GACEA,CACV,CAED,SAASe,EAAczX,EAAGF,GACtB,IAIIyX,EAASh4B,EAJTw3B,EAAI/W,EAAEvlB,OACNi8B,EAAI,IAAIj0B,MAAMs0B,GACdH,EAAOhC,EACP+B,EAAQ,EAEZ,IAAKp3B,EAAI,EAAGA,EAAIw3B,EAAGx3B,IACfg4B,EAAUvX,EAAEzgB,GAAKugB,EAAI6W,EACrBA,EAAQj9B,KAAKC,MAAM49B,EAAUX,GAC7BF,EAAEn3B,GAAKg4B,EAAUZ,EAAQC,EAE7B,KAAOD,EAAQ,GACXD,EAAEn3B,KAAOo3B,EAAQC,EACjBD,EAAQj9B,KAAKC,MAAMg9B,EAAQC,GAE/B,OAAOF,CACV,CAED,SAASgB,EAAUjK,EAAGuI,GAElB,IADA,IAAIU,EAAI,GACDV,KAAM,GAAGU,EAAE16B,KAAK,GACvB,OAAO06B,EAAEvyB,OAAOspB,EACnB,CAED,SAASkK,EAAkBlK,EAAGmK,GAC1B,IAAI5B,EAAIt8B,KAAKq0B,IAAIN,EAAEhzB,OAAQm9B,EAAEn9B,QAE7B,GAAIu7B,GAAK,GAAI,OAAOsB,EAAa7J,EAAGmK,GACpC5B,EAAIt8B,KAAKg4B,KAAKsE,EAAI,GAElB,IAAIlW,EAAI2N,EAAEpoB,MAAM2wB,GACZhW,EAAIyN,EAAEpoB,MAAM,EAAG2wB,GACf6B,EAAID,EAAEvyB,MAAM2wB,GACZrf,EAAIihB,EAAEvyB,MAAM,EAAG2wB,GAEf8B,EAAKH,EAAkB3X,EAAGrJ,GAC1BohB,EAAKJ,EAAkB7X,EAAG+X,GAC1BG,EAAOL,EAAkBd,EAAO7W,EAAGF,GAAI+W,EAAOlgB,EAAGkhB,IAEjDN,EAAUV,EAAOA,EAAOiB,EAAIJ,EAAUV,EAASA,EAASgB,EAAMF,GAAKC,GAAK/B,IAAK0B,EAAUK,EAAI,EAAI/B,IAEnG,OADAE,EAAKqB,GACEA,CACV,CA8BD,SAASU,EAAsBjY,EAAGF,EAAG6V,GACjC,OACW,IAAID,EADX1V,EAAI4U,EACkB6C,EAAc3X,EAAGE,GAErBsX,EAAaxX,EAAGiV,EAAa/U,IAFJ2V,EAGlD,CAuBD,SAASuC,EAAOlY,GAEZ,IAGIuX,EAASZ,EAAOp3B,EAAGi4B,EAHnBT,EAAI/W,EAAEvlB,OACNi8B,EAAIN,EAAYW,EAAIA,GACpBH,EAAOhC,EAEX,IAAKr1B,EAAI,EAAGA,EAAIw3B,EAAGx3B,IAAK,CAEpBo3B,EAAQ,GADRa,EAAMxX,EAAEzgB,IACUi4B,EAClB,IAAK,IAAI3yB,EAAItF,EAAGsF,EAAIkyB,EAAGlyB,IAEnB0yB,EAAeC,EADTxX,EAAEnb,GACE,EAAkB6xB,EAAEn3B,EAAIsF,GAAK8xB,EACvCA,EAAQj9B,KAAKC,MAAM49B,EAAUX,GAC7BF,EAAEn3B,EAAIsF,GAAK0yB,EAAUZ,EAAQC,EAEjCF,EAAEn3B,EAAIw3B,GAAKJ,CACd,CAED,OADAT,EAAKQ,GACEA,CACV,CA4GD,SAASyB,EAAY3+B,EAAO4+B,GACxB,IAGI74B,EAAG84B,EAAGC,EAAWC,EAHjB99B,EAASjB,EAAMiB,OACf+9B,EAAWpC,EAAY37B,GAI3B,IADA69B,EAAY,EACP/4B,EAAI9E,EAAS,EAAG8E,GAAK,IAAKA,EAG3B+4B,GAFAC,EAJO3D,IAIG0D,EAAmB9+B,EAAM+F,KACnC84B,EAAIhC,EAASkC,EAAUH,IACGA,EAC1BI,EAASj5B,GAAS,EAAJ84B,EAElB,MAAO,CAACG,EAAsB,EAAZF,EACrB,CAED,SAASG,EAAU3nB,EAAMskB,GACrB,IAAI57B,EAAOw8B,EAAIP,EAAWL,GAC1B,GAAIH,EACA,MAAO,CAAC,IAAIa,EAAahlB,EAAKtX,MAAQw8B,EAAEx8B,OAAQ,IAAIs8B,EAAahlB,EAAKtX,MAAQw8B,EAAEx8B,QAEpF,IACIg/B,EADAxY,EAAIlP,EAAKtX,MAAOsmB,EAAIkW,EAAEx8B,MAE1B,GAAU,IAANsmB,EAAS,MAAM,IAAIpiB,MAAM,yBAC7B,GAAIoT,EAAK8kB,QACL,OAAII,EAAEJ,QACK,CAAC,IAAIC,EAAaQ,EAASrW,EAAIF,IAAK,IAAI+V,EAAa7V,EAAIF,IAE7D,CAACqV,EAAQ,GAAIrkB,GAExB,GAAIklB,EAAEJ,QAAS,CACX,GAAU,IAAN9V,EAAS,MAAO,CAAChP,EAAMqkB,EAAQ,IACnC,IAAU,GAANrV,EAAS,MAAO,CAAChP,EAAK4nB,SAAUvD,EAAQ,IAC5C,IAAI/wB,EAAM1K,KAAK0K,IAAI0b,GACnB,GAAI1b,EAAMwwB,EAAM,CAEZ4D,EAAWvC,GADXz8B,EAAQ2+B,EAAYnY,EAAG5b,IACO,IAC9B,IAAIk0B,EAAY9+B,EAAM,GAEtB,OADIsX,EAAK6kB,OAAM2C,GAAaA,GACJ,iBAAbE,GACH1nB,EAAK6kB,OAASK,EAAEL,OAAM6C,GAAYA,GAC/B,CAAC,IAAI3C,EAAa2C,GAAW,IAAI3C,EAAayC,KAElD,CAAC,IAAI5C,EAAW8C,EAAU1nB,EAAK6kB,OAASK,EAAEL,MAAO,IAAIE,EAAayC,GAC5E,CACDxY,EAAIiV,EAAa3wB,EACpB,CACD,IAAIu0B,EAAaxC,EAAWnW,EAAGF,GAC/B,IAAoB,IAAhB6Y,EAAmB,MAAO,CAACxD,EAAQ,GAAIrkB,GAC3C,GAAmB,IAAf6nB,EAAkB,MAAO,CAACxD,EAAQrkB,EAAK6kB,OAASK,EAAEL,KAAO,GAAK,GAAIR,EAAQ,IAI1E37B,EADAwmB,EAAEvlB,OAASqlB,EAAErlB,QAAU,IA/I/B,SAAiBulB,EAAGF,GAChB,IASI8Y,EAAe5L,EAAO2J,EAAOS,EAAQ73B,EAAGw3B,EAAGsB,EAT3CnB,EAAMlX,EAAEvlB,OACR08B,EAAMrX,EAAErlB,OACRm8B,EAAOhC,EACP94B,EAASs6B,EAAYtW,EAAErlB,QACvBo+B,EAA8B/Y,EAAEqX,EAAM,GAEtCiB,EAAS1+B,KAAKg4B,KAAKkF,GAAQ,EAAIiC,IAC/BP,EAAYb,EAAczX,EAAGoY,GAC7BG,EAAUd,EAAc3X,EAAGsY,GAK/B,IAHIE,EAAU79B,QAAUy8B,GAAKoB,EAAUt8B,KAAK,GAC5Cu8B,EAAQv8B,KAAK,GACb68B,EAA8BN,EAAQpB,EAAM,GACvCnK,EAAQkK,EAAMC,EAAKnK,GAAS,EAAGA,IAAS,CASzC,IARA4L,EAAgBhC,EAAO,EACnB0B,EAAUtL,EAAQmK,KAAS0B,IAC3BD,EAAgBl/B,KAAKC,OAAO2+B,EAAUtL,EAAQmK,GAAOP,EAAO0B,EAAUtL,EAAQmK,EAAM,IAAM0B,IAG9FlC,EAAQ,EACRS,EAAS,EACTL,EAAIwB,EAAQ99B,OACP8E,EAAI,EAAGA,EAAIw3B,EAAGx3B,IACfo3B,GAASiC,EAAgBL,EAAQh5B,GACjC84B,EAAI3+B,KAAKC,MAAMg9B,EAAQC,GACvBQ,GAAUkB,EAAUtL,EAAQztB,IAAMo3B,EAAQ0B,EAAIzB,GAC9CD,EAAQ0B,EACJjB,EAAS,GACTkB,EAAUtL,EAAQztB,GAAK63B,EAASR,EAChCQ,GAAU,IAEVkB,EAAUtL,EAAQztB,GAAK63B,EACvBA,EAAS,GAGjB,KAAkB,IAAXA,GAAc,CAGjB,IAFAwB,GAAiB,EACjBjC,EAAQ,EACHp3B,EAAI,EAAGA,EAAIw3B,EAAGx3B,KACfo3B,GAAS2B,EAAUtL,EAAQztB,GAAKq3B,EAAO2B,EAAQh5B,IACnC,GACR+4B,EAAUtL,EAAQztB,GAAKo3B,EAAQC,EAC/BD,EAAQ,IAER2B,EAAUtL,EAAQztB,GAAKo3B,EACvBA,EAAQ,GAGhBS,GAAUT,CACb,CACD76B,EAAOkxB,GAAS4L,CACnB,CAGD,OADAN,EAAYH,EAAYG,EAAWF,GAAQ,GACpC,CAACnC,EAAan6B,GAASm6B,EAAaqC,GAC9C,CAwFeQ,CAAQ9Y,EAAGF,GAtF3B,SAAiBE,EAAGF,GAQhB,IANA,IAKIiZ,EAAOC,EAAMC,EAAOC,EAAOC,EAL3BjC,EAAMlX,EAAEvlB,OACR08B,EAAMrX,EAAErlB,OACRqB,EAAS,GACTs9B,EAAO,GACPxC,EAAOhC,EAEJsC,GAGH,GAFAkC,EAAK/K,QAAQrO,IAAIkX,IACjBhB,EAAKkD,GACDjD,EAAWiD,EAAMtZ,GAAK,EACtBhkB,EAAOE,KAAK,OADhB,CAKAi9B,EAAQG,GADRJ,EAAOI,EAAK3+B,QACQ,GAAKm8B,EAAOwC,EAAKJ,EAAO,GAC5CE,EAAQpZ,EAAEqX,EAAM,GAAKP,EAAO9W,EAAEqX,EAAM,GAChC6B,EAAO7B,IACP8B,GAASA,EAAQ,GAAKrC,GAE1BmC,EAAQr/B,KAAKg4B,KAAKuH,EAAQC,GAC1B,EAAG,CAEC,GAAI/C,EADJgD,EAAQ1B,EAAc3X,EAAGiZ,GACHK,IAAS,EAAG,MAClCL,GACH,OAAQA,GACTj9B,EAAOE,KAAK+8B,GACZK,EAAOpC,EAASoC,EAAMD,EAdrB,CAiBL,OADAr9B,EAAOu9B,UACA,CAACpD,EAAan6B,GAASm6B,EAAamD,GAC9C,CAuDgBE,CAAQtZ,EAAGF,GAExB0Y,EAAWh/B,EAAM,GACjB,IAAI+/B,EAAQzoB,EAAK6kB,OAASK,EAAEL,KACxB6D,EAAMhgC,EAAM,GACZigC,EAAQ3oB,EAAK6kB,KASjB,MARwB,iBAAb6C,GACHe,IAAOf,GAAYA,GACvBA,EAAW,IAAI3C,EAAa2C,IACzBA,EAAW,IAAI9C,EAAW8C,EAAUe,GACxB,iBAARC,GACHC,IAAOD,GAAOA,GAClBA,EAAM,IAAI3D,EAAa2D,IACpBA,EAAM,IAAI9D,EAAW8D,EAAKC,GAC1B,CAACjB,EAAUgB,EACrB,CAuGD,SAASrD,EAAWnW,EAAGF,GACnB,GAAIE,EAAEvlB,SAAWqlB,EAAErlB,OACf,OAAOulB,EAAEvlB,OAASqlB,EAAErlB,OAAS,GAAK,EAEtC,IAAK,IAAI8E,EAAIygB,EAAEvlB,OAAS,EAAG8E,GAAK,EAAGA,IAC/B,GAAIygB,EAAEzgB,KAAOugB,EAAEvgB,GAAI,OAAOygB,EAAEzgB,GAAKugB,EAAEvgB,GAAK,GAAK,EAEjD,OAAO,CACV,CAmLD,SAASm6B,EAAatE,GAClB,IAAIY,EAAIZ,EAAEhxB,MACV,OAAI4xB,EAAE2D,cACF3D,EAAE4D,OAAO,IAAM5D,EAAE4D,OAAO,IAAM5D,EAAE4D,OAAO,OACvC5D,EAAE6D,UAAY7D,EAAE8D,cAAc,IAAM9D,EAAE8D,cAAc,QACpD9D,EAAE+D,OAAO,UAAb,GAEH,CAED,SAASC,EAAgBhE,EAAGhW,GAKxB,IAJA,IAGI6X,EAAMt4B,EAAGkuB,EAHTwM,EAAQjE,EAAEkE,OACVpa,EAAIma,EACJvD,EAAI,EAED5W,EAAE+Z,UAAU/Z,EAAIA,EAAEqa,OAAO,GAAIzD,IACpCzV,EAAM,IAAK1hB,EAAI,EAAGA,EAAIygB,EAAEvlB,OAAQ8E,IAC5B,IAAIy2B,EAAE+D,OAAO/Z,EAAEzgB,OACfkuB,EAAIkH,EAAO3U,EAAEzgB,IAAI66B,OAAOta,EAAGkW,IACrB2D,WAAYlM,EAAEmM,OAAOK,GAA3B,CACA,IAAKpC,EAAInB,EAAI,EAAQ,GAALmB,EAAQA,IAAK,CAEzB,IADApK,EAAIA,EAAEyK,SAASsB,IAAIxD,IACb2D,SAAU,OAAO,EACvB,GAAIlM,EAAEmM,OAAOK,GAAQ,SAAShZ,CACjC,CACD,OAAO,CANoC,CAQ/C,OAAO,CACV,CA33BDyU,EAAWx4B,UAAYH,OAAOC,OAAOm4B,EAAQj4B,WAO7C24B,EAAa34B,UAAYH,OAAOC,OAAOm4B,EAAQj4B,WAK/C44B,EAAa54B,UAAYH,OAAOC,OAAOm4B,EAAQj4B,WA4F/Cw4B,EAAWx4B,UAAUo5B,IAAM,SAAUlB,GACjC,IAAIY,EAAIP,EAAWL,GACnB,GAAI3pB,KAAKkqB,OAASK,EAAEL,KAChB,OAAOlqB,KAAKurB,SAAShB,EAAE0C,UAE3B,IAAI1Y,EAAIvU,KAAKjS,MAAOsmB,EAAIkW,EAAEx8B,MAC1B,OAAIw8B,EAAEJ,QACK,IAAIF,EAAWoB,EAAS9W,EAAGtmB,KAAK0K,IAAI0b,IAAKrU,KAAKkqB,MAElD,IAAID,EAAWmB,EAAO7W,EAAGF,GAAIrU,KAAKkqB,KAC5C,EACDD,EAAWx4B,UAAUm9B,KAAO3E,EAAWx4B,UAAUo5B,IAEjDT,EAAa34B,UAAUo5B,IAAM,SAAUlB,GACnC,IAAIY,EAAIP,EAAWL,GACfpV,EAAIvU,KAAKjS,MACb,GAAIwmB,EAAI,IAAMgW,EAAEL,KACZ,OAAOlqB,KAAKurB,SAAShB,EAAE0C,UAE3B,IAAI5Y,EAAIkW,EAAEx8B,MACV,GAAIw8B,EAAEJ,QAAS,CACX,GAAIG,EAAU/V,EAAIF,GAAI,OAAO,IAAI+V,EAAa7V,EAAIF,GAClDA,EAAIiV,EAAar7B,KAAK0K,IAAI0b,GAC7B,CACD,OAAO,IAAI4V,EAAWoB,EAAShX,EAAGpmB,KAAK0K,IAAI4b,IAAKA,EAAI,EACvD,EACD6V,EAAa34B,UAAUm9B,KAAOxE,EAAa34B,UAAUo5B,IAErDR,EAAa54B,UAAUo5B,IAAM,SAAUlB,GACnC,OAAO,IAAIU,EAAarqB,KAAKjS,MAAQi8B,EAAWL,GAAG57B,MACtD,EACDs8B,EAAa54B,UAAUm9B,KAAOvE,EAAa54B,UAAUo5B,IAoErDZ,EAAWx4B,UAAU85B,SAAW,SAAU5B,GACtC,IAAIY,EAAIP,EAAWL,GACnB,GAAI3pB,KAAKkqB,OAASK,EAAEL,KAChB,OAAOlqB,KAAK6qB,IAAIN,EAAE0C,UAEtB,IAAI1Y,EAAIvU,KAAKjS,MAAOsmB,EAAIkW,EAAEx8B,MAC1B,OAAIw8B,EAAEJ,QACKyB,EAAcrX,EAAGtmB,KAAK0K,IAAI0b,GAAIrU,KAAKkqB,MA1ClD,SAAqB3V,EAAGF,EAAG6V,GACvB,IAAIn8B,EAQJ,OAPI28B,EAAWnW,EAAGF,IAAM,EACpBtmB,EAAQw9B,EAAShX,EAAGF,IAEpBtmB,EAAQw9B,EAASlX,EAAGE,GACpB2V,GAAQA,GAGS,iBADrBn8B,EAAQy8B,EAAaz8B,KAEbm8B,IAAMn8B,GAASA,GACZ,IAAIq8B,EAAar8B,IAErB,IAAIk8B,EAAWl8B,EAAOm8B,EAChC,CA6BU2E,CAAYta,EAAGF,EAAGrU,KAAKkqB,KACjC,EACDD,EAAWx4B,UAAUq9B,MAAQ7E,EAAWx4B,UAAU85B,SAElDnB,EAAa34B,UAAU85B,SAAW,SAAU5B,GACxC,IAAIY,EAAIP,EAAWL,GACfpV,EAAIvU,KAAKjS,MACb,GAAIwmB,EAAI,IAAMgW,EAAEL,KACZ,OAAOlqB,KAAK6qB,IAAIN,EAAE0C,UAEtB,IAAI5Y,EAAIkW,EAAEx8B,MACV,OAAIw8B,EAAEJ,QACK,IAAIC,EAAa7V,EAAIF,GAEzBuX,EAAcvX,EAAGpmB,KAAK0K,IAAI4b,GAAIA,GAAK,EAC7C,EACD6V,EAAa34B,UAAUq9B,MAAQ1E,EAAa34B,UAAU85B,SAEtDlB,EAAa54B,UAAU85B,SAAW,SAAU5B,GACxC,OAAO,IAAIU,EAAarqB,KAAKjS,MAAQi8B,EAAWL,GAAG57B,MACtD,EACDs8B,EAAa54B,UAAUq9B,MAAQzE,EAAa54B,UAAU85B,SAEtDtB,EAAWx4B,UAAUw7B,OAAS,WAC1B,OAAO,IAAIhD,EAAWjqB,KAAKjS,OAAQiS,KAAKkqB,KAC3C,EACDE,EAAa34B,UAAUw7B,OAAS,WAC5B,IAAI/C,EAAOlqB,KAAKkqB,KACZ6E,EAAQ,IAAI3E,GAAcpqB,KAAKjS,OAEnC,OADAghC,EAAM7E,MAAQA,EACP6E,CACV,EACD1E,EAAa54B,UAAUw7B,OAAS,WAC5B,OAAO,IAAI5C,GAAcrqB,KAAKjS,MACjC,EAEDk8B,EAAWx4B,UAAUkH,IAAM,WACvB,OAAO,IAAIsxB,EAAWjqB,KAAKjS,OAAO,EACrC,EACDq8B,EAAa34B,UAAUkH,IAAM,WACzB,OAAO,IAAIyxB,EAAan8B,KAAK0K,IAAIqH,KAAKjS,OACzC,EACDs8B,EAAa54B,UAAUkH,IAAM,WACzB,OAAO,IAAI0xB,EAAarqB,KAAKjS,OAAS,EAAIiS,KAAKjS,OAASiS,KAAKjS,MAChE,EA0EDk8B,EAAWx4B,UAAUu9B,SAAW,SAAUrF,GACtC,IAGIhxB,EARcs2B,EAAIC,EAKlB3E,EAAIP,EAAWL,GACfpV,EAAIvU,KAAKjS,MAAOsmB,EAAIkW,EAAEx8B,MACtBm8B,EAAOlqB,KAAKkqB,OAASK,EAAEL,KAE3B,GAAIK,EAAEJ,QAAS,CACX,GAAU,IAAN9V,EAAS,OAAOqV,EAAQ,GAC5B,GAAU,IAANrV,EAAS,OAAOrU,KACpB,IAAW,IAAPqU,EAAU,OAAOrU,KAAKitB,SAE1B,IADAt0B,EAAM1K,KAAK0K,IAAI0b,IACL8U,EACN,OAAO,IAAIc,EAAW+B,EAAczX,EAAG5b,GAAMuxB,GAEjD7V,EAAIiV,EAAa3wB,EACpB,CACD,OAnBkBs2B,EAmBD1a,EAAEvlB,OAnBGkgC,EAmBK7a,EAAErlB,OAClB,IAAIi7B,GAnBP,KAAQgF,EAAK,KAAQC,EAAK,MAAWD,EAAKC,EAAK,EAmB7BhD,EAAkB3X,EAAGF,GACzBwX,EAAatX,EAAGF,GADa6V,EAEtD,EAEDD,EAAWx4B,UAAU09B,MAAQlF,EAAWx4B,UAAUu9B,SAQlD5E,EAAa34B,UAAU29B,iBAAmB,SAAU7a,GAChD,OAAI+V,EAAU/V,EAAExmB,MAAQiS,KAAKjS,OAClB,IAAIq8B,EAAa7V,EAAExmB,MAAQiS,KAAKjS,OAEpCy+B,EAAsBv+B,KAAK0K,IAAI4b,EAAExmB,OAAQu7B,EAAar7B,KAAK0K,IAAIqH,KAAKjS,QAASiS,KAAKkqB,OAAS3V,EAAE2V,KACvG,EACDD,EAAWx4B,UAAU29B,iBAAmB,SAAU7a,GAC9C,OAAgB,IAAZA,EAAExmB,MAAoB27B,EAAQ,GAClB,IAAZnV,EAAExmB,MAAoBiS,MACT,IAAbuU,EAAExmB,MAAqBiS,KAAKitB,SACzBT,EAAsBv+B,KAAK0K,IAAI4b,EAAExmB,OAAQiS,KAAKjS,MAAOiS,KAAKkqB,OAAS3V,EAAE2V,KAC/E,EACDE,EAAa34B,UAAUu9B,SAAW,SAAUrF,GACxC,OAAOK,EAAWL,GAAGyF,iBAAiBpvB,KACzC,EACDoqB,EAAa34B,UAAU09B,MAAQ/E,EAAa34B,UAAUu9B,SAEtD3E,EAAa54B,UAAUu9B,SAAW,SAAUrF,GACxC,OAAO,IAAIU,EAAarqB,KAAKjS,MAAQi8B,EAAWL,GAAG57B,MACtD,EACDs8B,EAAa54B,UAAU09B,MAAQ9E,EAAa54B,UAAUu9B,SAuBtD/E,EAAWx4B,UAAUg7B,OAAS,WAC1B,OAAO,IAAIxC,EAAWwC,EAAOzsB,KAAKjS,QAAQ,EAC7C,EAEDq8B,EAAa34B,UAAUg7B,OAAS,WAC5B,IAAI1+B,EAAQiS,KAAKjS,MAAQiS,KAAKjS,MAC9B,OAAIu8B,EAAUv8B,GAAe,IAAIq8B,EAAar8B,GACvC,IAAIk8B,EAAWwC,EAAOnD,EAAar7B,KAAK0K,IAAIqH,KAAKjS,UAAU,EACrE,EAEDs8B,EAAa54B,UAAUg7B,OAAS,SAAU9C,GACtC,OAAO,IAAIU,EAAarqB,KAAKjS,MAAQiS,KAAKjS,MAC7C,EAoKDk8B,EAAWx4B,UAAU49B,OAAS,SAAU1F,GACpC,IAAIt5B,EAAS28B,EAAUhtB,KAAM2pB,GAC7B,MAAO,CACHoD,SAAU18B,EAAO,GACjBw8B,UAAWx8B,EAAO,GAEzB,EACDg6B,EAAa54B,UAAU49B,OAASjF,EAAa34B,UAAU49B,OAASpF,EAAWx4B,UAAU49B,OAGrFpF,EAAWx4B,UAAUi9B,OAAS,SAAU/E,GACpC,OAAOqD,EAAUhtB,KAAM2pB,GAAG,EAC7B,EACDU,EAAa54B,UAAU69B,KAAOjF,EAAa54B,UAAUi9B,OAAS,SAAU/E,GACpE,OAAO,IAAIU,EAAarqB,KAAKjS,MAAQi8B,EAAWL,GAAG57B,MACtD,EACDq8B,EAAa34B,UAAU69B,KAAOlF,EAAa34B,UAAUi9B,OAASzE,EAAWx4B,UAAU69B,KAAOrF,EAAWx4B,UAAUi9B,OAE/GzE,EAAWx4B,UAAUs8B,IAAM,SAAUpE,GACjC,OAAOqD,EAAUhtB,KAAM2pB,GAAG,EAC7B,EACDU,EAAa54B,UAAUs8B,IAAM1D,EAAa54B,UAAUo7B,UAAY,SAAUlD,GACtE,OAAO,IAAIU,EAAarqB,KAAKjS,MAAQi8B,EAAWL,GAAG57B,MACtD,EACDq8B,EAAa34B,UAAUo7B,UAAYzC,EAAa34B,UAAUs8B,IAAM9D,EAAWx4B,UAAUo7B,UAAY5C,EAAWx4B,UAAUs8B,IAEtH9D,EAAWx4B,UAAU89B,IAAM,SAAU5F,GACjC,IAGI57B,EAAOi0B,EAAGmK,EAHV5B,EAAIP,EAAWL,GACfpV,EAAIvU,KAAKjS,MACTsmB,EAAIkW,EAAEx8B,MAEV,GAAU,IAANsmB,EAAS,OAAOqV,EAAQ,GAC5B,GAAU,IAANnV,EAAS,OAAOmV,EAAQ,GAC5B,GAAU,IAANnV,EAAS,OAAOmV,EAAQ,GAC5B,IAAW,IAAPnV,EAAU,OAAOgW,EAAE6D,SAAW1E,EAAQ,GAAKA,GAAS,GACxD,GAAIa,EAAEL,KACF,OAAOR,EAAQ,GAEnB,IAAKa,EAAEJ,QAAS,MAAM,IAAIl4B,MAAM,gBAAkBs4B,EAAEnzB,WAAa,kBACjE,GAAI4I,KAAKmqB,SACDG,EAAUv8B,EAAQE,KAAKshC,IAAIhb,EAAGF,IAC9B,OAAO,IAAI+V,EAAaQ,EAAS78B,IAIzC,IAFAi0B,EAAIhiB,KACJmsB,EAAIzC,EAAQ,IAEA,EAAJrV,IACA8X,EAAIA,EAAEgD,MAAMnN,KACV3N,GAEI,IAANA,GACJA,GAAK,EACL2N,EAAIA,EAAEyK,SAEV,OAAON,CACV,EACD/B,EAAa34B,UAAU89B,IAAMtF,EAAWx4B,UAAU89B,IAElDlF,EAAa54B,UAAU89B,IAAM,SAAU5F,GACnC,IAAIY,EAAIP,EAAWL,GACfpV,EAAIvU,KAAKjS,MAAOsmB,EAAIkW,EAAEx8B,MACtByhC,EAAK/F,OAAO,GAAIgG,EAAKhG,OAAO,GAAIiG,EAAKjG,OAAO,GAChD,GAAIpV,IAAMmb,EAAI,OAAO9F,EAAQ,GAC7B,GAAInV,IAAMib,EAAI,OAAO9F,EAAQ,GAC7B,GAAInV,IAAMkb,EAAI,OAAO/F,EAAQ,GAC7B,GAAInV,IAAMkV,QAAQ,GAAI,OAAOc,EAAE6D,SAAW1E,EAAQ,GAAKA,GAAS,GAChE,GAAIa,EAAEoF,aAAc,OAAO,IAAItF,EAAamF,GAG5C,IAFA,IAAIxN,EAAIhiB,KACJmsB,EAAIzC,EAAQ,IAEPrV,EAAIob,KAAQA,IACbtD,EAAIA,EAAEgD,MAAMnN,KACV3N,GAEFA,IAAMmb,GACVnb,GAAKqb,EACL1N,EAAIA,EAAEyK,SAEV,OAAON,CACV,EAEDlC,EAAWx4B,UAAUk9B,OAAS,SAAUiB,EAAK7B,GAGzC,GAFA6B,EAAM5F,EAAW4F,IACjB7B,EAAM/D,EAAW+D,IACT8B,SAAU,MAAM,IAAI59B,MAAM,qCAClC,IAAIg5B,EAAIvB,EAAQ,GACZyB,EAAOnrB,KAAK+tB,IAAIA,GAKpB,IAJI6B,EAAID,eACJC,EAAMA,EAAIZ,SAAStF,GAAS,IAC5ByB,EAAOA,EAAK2E,OAAO/B,IAEhB6B,EAAIG,cAAc,CACrB,GAAI5E,EAAK0E,SAAU,OAAOnG,EAAQ,GAC9BkG,EAAII,UAAS/E,EAAIA,EAAE+D,SAAS7D,GAAM4C,IAAIA,IAC1C6B,EAAMA,EAAIlB,OAAO,GACjBvD,EAAOA,EAAKsB,SAASsB,IAAIA,EAC5B,CACD,OAAO9C,CACV,EACDZ,EAAa54B,UAAUk9B,OAASvE,EAAa34B,UAAUk9B,OAAS1E,EAAWx4B,UAAUk9B,OAYrF1E,EAAWx4B,UAAUi5B,WAAa,SAAUf,GACxC,IAAIY,EAAIP,EAAWL,GACfpV,EAAIvU,KAAKjS,MACTsmB,EAAIkW,EAAEx8B,MACV,OAAIw8B,EAAEJ,QAAgB,EACfO,EAAWnW,EAAGF,EACxB,EACD+V,EAAa34B,UAAUi5B,WAAa,SAAUf,GAC1C,IAAIY,EAAIP,EAAWL,GACfpV,EAAItmB,KAAK0K,IAAIqH,KAAKjS,OAClBsmB,EAAIkW,EAAEx8B,MACV,OAAIw8B,EAAEJ,QAEK5V,KADPF,EAAIpmB,KAAK0K,IAAI0b,IACI,EAAIE,EAAIF,EAAI,GAAK,GAE9B,CACX,EACDgW,EAAa54B,UAAUi5B,WAAa,SAAUf,GAC1C,IAAIpV,EAAIvU,KAAKjS,MACTsmB,EAAI2V,EAAWL,GAAG57B,MAGtB,OAFAwmB,EAAIA,GAAK,EAAIA,GAAKA,MAClBF,EAAIA,GAAK,EAAIA,GAAKA,GACD,EAAIE,EAAIF,EAAI,GAAK,CACrC,EAED4V,EAAWx4B,UAAUw+B,QAAU,SAAUtG,GAGrC,GAAIA,IAAMuG,IACN,OAAQ,EAEZ,GAAIvG,KAAOuG,IACP,OAAO,EAGX,IAAI3F,EAAIP,EAAWL,GACfpV,EAAIvU,KAAKjS,MACTsmB,EAAIkW,EAAEx8B,MACV,OAAIiS,KAAKkqB,OAASK,EAAEL,KACTK,EAAEL,KAAO,GAAK,EAErBK,EAAEJ,QACKnqB,KAAKkqB,MAAQ,EAAI,EAErBQ,EAAWnW,EAAGF,IAAMrU,KAAKkqB,MAAQ,EAAI,EAC/C,EACDD,EAAWx4B,UAAU0+B,UAAYlG,EAAWx4B,UAAUw+B,QAEtD7F,EAAa34B,UAAUw+B,QAAU,SAAUtG,GACvC,GAAIA,IAAMuG,IACN,OAAQ,EAEZ,GAAIvG,KAAOuG,IACP,OAAO,EAGX,IAAI3F,EAAIP,EAAWL,GACfpV,EAAIvU,KAAKjS,MACTsmB,EAAIkW,EAAEx8B,MACV,OAAIw8B,EAAEJ,QACK5V,GAAKF,EAAI,EAAIE,EAAIF,EAAI,GAAK,EAEjCE,EAAI,IAAMgW,EAAEL,KACL3V,EAAI,GAAK,EAAI,EAEjBA,EAAI,EAAI,GAAK,CACvB,EACD6V,EAAa34B,UAAU0+B,UAAY/F,EAAa34B,UAAUw+B,QAE1D5F,EAAa54B,UAAUw+B,QAAU,SAAUtG,GACvC,GAAIA,IAAMuG,IACN,OAAQ,EAEZ,GAAIvG,KAAOuG,IACP,OAAO,EAEX,IAAI3b,EAAIvU,KAAKjS,MACTsmB,EAAI2V,EAAWL,GAAG57B,MACtB,OAAOwmB,IAAMF,EAAI,EAAIE,EAAIF,EAAI,GAAK,CACrC,EACDgW,EAAa54B,UAAU0+B,UAAY9F,EAAa54B,UAAUw+B,QAE1DhG,EAAWx4B,UAAU08B,OAAS,SAAUxE,GACpC,OAA2B,IAApB3pB,KAAKiwB,QAAQtG,EACvB,EACDU,EAAa54B,UAAU2+B,GAAK/F,EAAa54B,UAAU08B,OAAS/D,EAAa34B,UAAU2+B,GAAKhG,EAAa34B,UAAU08B,OAASlE,EAAWx4B,UAAU2+B,GAAKnG,EAAWx4B,UAAU08B,OAEvKlE,EAAWx4B,UAAU4+B,UAAY,SAAU1G,GACvC,OAA2B,IAApB3pB,KAAKiwB,QAAQtG,EACvB,EACDU,EAAa54B,UAAU6+B,IAAMjG,EAAa54B,UAAU4+B,UAAYjG,EAAa34B,UAAU6+B,IAAMlG,EAAa34B,UAAU4+B,UAAYpG,EAAWx4B,UAAU6+B,IAAMrG,EAAWx4B,UAAU4+B,UAEhLpG,EAAWx4B,UAAU8+B,QAAU,SAAU5G,GACrC,OAAO3pB,KAAKiwB,QAAQtG,GAAK,CAC5B,EACDU,EAAa54B,UAAU++B,GAAKnG,EAAa54B,UAAU8+B,QAAUnG,EAAa34B,UAAU++B,GAAKpG,EAAa34B,UAAU8+B,QAAUtG,EAAWx4B,UAAU++B,GAAKvG,EAAWx4B,UAAU8+B,QAEzKtG,EAAWx4B,UAAU68B,OAAS,SAAU3E,GACpC,OAAO3pB,KAAKiwB,QAAQtG,GAAK,CAC5B,EACDU,EAAa54B,UAAUg/B,GAAKpG,EAAa54B,UAAU68B,OAASlE,EAAa34B,UAAUg/B,GAAKrG,EAAa34B,UAAU68B,OAASrE,EAAWx4B,UAAUg/B,GAAKxG,EAAWx4B,UAAU68B,OAEvKrE,EAAWx4B,UAAUi/B,gBAAkB,SAAU/G,GAC7C,OAAO3pB,KAAKiwB,QAAQtG,IAAM,CAC7B,EACDU,EAAa54B,UAAUk/B,IAAMtG,EAAa54B,UAAUi/B,gBAAkBtG,EAAa34B,UAAUk/B,IAAMvG,EAAa34B,UAAUi/B,gBAAkBzG,EAAWx4B,UAAUk/B,IAAM1G,EAAWx4B,UAAUi/B,gBAE5LzG,EAAWx4B,UAAUm/B,eAAiB,SAAUjH,GAC5C,OAAO3pB,KAAKiwB,QAAQtG,IAAM,CAC7B,EACDU,EAAa54B,UAAUo/B,IAAMxG,EAAa54B,UAAUm/B,eAAiBxG,EAAa34B,UAAUo/B,IAAMzG,EAAa34B,UAAUm/B,eAAiB3G,EAAWx4B,UAAUo/B,IAAM5G,EAAWx4B,UAAUm/B,eAE1L3G,EAAWx4B,UAAU28B,OAAS,WAC1B,OAA+B,IAAP,EAAhBpuB,KAAKjS,MAAM,GACtB,EACDq8B,EAAa34B,UAAU28B,OAAS,WAC5B,OAA4B,IAAP,EAAbpuB,KAAKjS,MAChB,EACDs8B,EAAa54B,UAAU28B,OAAS,WAC5B,OAAQpuB,KAAKjS,MAAQ07B,OAAO,MAAQA,OAAO,EAC9C,EAEDQ,EAAWx4B,UAAUu+B,MAAQ,WACzB,OAA+B,IAAP,EAAhBhwB,KAAKjS,MAAM,GACtB,EACDq8B,EAAa34B,UAAUu+B,MAAQ,WAC3B,OAA4B,IAAP,EAAbhwB,KAAKjS,MAChB,EACDs8B,EAAa54B,UAAUu+B,MAAQ,WAC3B,OAAQhwB,KAAKjS,MAAQ07B,OAAO,MAAQA,OAAO,EAC9C,EAEDQ,EAAWx4B,UAAUs+B,WAAa,WAC9B,OAAQ/vB,KAAKkqB,IAChB,EACDE,EAAa34B,UAAUs+B,WAAa,WAChC,OAAO/vB,KAAKjS,MAAQ,CACvB,EACDs8B,EAAa54B,UAAUs+B,WAAa3F,EAAa34B,UAAUs+B,WAE3D9F,EAAWx4B,UAAUk+B,WAAa,WAC9B,OAAO3vB,KAAKkqB,IACf,EACDE,EAAa34B,UAAUk+B,WAAa,WAChC,OAAO3vB,KAAKjS,MAAQ,CACvB,EACDs8B,EAAa54B,UAAUk+B,WAAavF,EAAa34B,UAAUk+B,WAE3D1F,EAAWx4B,UAAUy8B,OAAS,WAC1B,OAAO,CACV,EACD9D,EAAa34B,UAAUy8B,OAAS,WAC5B,OAAgC,IAAzBjgC,KAAK0K,IAAIqH,KAAKjS,MACxB,EACDs8B,EAAa54B,UAAUy8B,OAAS,WAC5B,OAAOluB,KAAKrH,MAAM5K,QAAU07B,OAAO,EACtC,EAEDQ,EAAWx4B,UAAUo+B,OAAS,WAC1B,OAAO,CACV,EACDzF,EAAa34B,UAAUo+B,OAAS,WAC5B,OAAsB,IAAf7vB,KAAKjS,KACf,EACDs8B,EAAa54B,UAAUo+B,OAAS,WAC5B,OAAO7vB,KAAKjS,QAAU07B,OAAO,EAChC,EAEDQ,EAAWx4B,UAAU48B,cAAgB,SAAU1E,GAC3C,IAAIY,EAAIP,EAAWL,GACnB,OAAIY,EAAEsF,aACFtF,EAAE2D,WACkB,IAApB3D,EAAEG,WAAW,GAAiB1qB,KAAKouB,SAChCpuB,KAAK+tB,IAAIxD,GAAGsF,UACtB,EACDxF,EAAa54B,UAAU48B,cAAgBjE,EAAa34B,UAAU48B,cAAgBpE,EAAWx4B,UAAU48B,cAgCnGpE,EAAWx4B,UAAUq/B,QAAU,SAAUC,GACrC,IAAID,EAAU7C,EAAajuB,MAC3B,GAAI8wB,IAAYxhC,EAAW,OAAOwhC,EAClC,IAAIvG,EAAIvqB,KAAKrH,MACTq4B,EAAOzG,EAAE0G,YACb,GAAID,GAAQ,GACR,OAAOzC,EAAgBhE,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAGvE,IAFA,IAAI2G,EAAOjjC,KAAK0T,IAAI,GAAKqvB,EAAKG,aAC1BC,EAAInjC,KAAKg4B,MAAiB,IAAX8K,EAAoB,EAAI9iC,KAAKshC,IAAI2B,EAAM,GAAMA,GACvD3c,EAAI,GAAIzgB,EAAI,EAAGA,EAAIs9B,EAAGt9B,IAC3BygB,EAAEhkB,KAAK24B,EAAOp1B,EAAI,IAEtB,OAAOy6B,EAAgBhE,EAAGhW,EAC7B,EACD8V,EAAa54B,UAAUq/B,QAAU1G,EAAa34B,UAAUq/B,QAAU7G,EAAWx4B,UAAUq/B,QAEvF7G,EAAWx4B,UAAU4/B,gBAAkB,SAAUC,EAAYC,GACzD,IAAIT,EAAU7C,EAAajuB,MAC3B,GAAI8wB,IAAYxhC,EAAW,OAAOwhC,EAGlC,IAFA,IAAIvG,EAAIvqB,KAAKrH,MACTy4B,EAAIE,IAAehiC,EAAY,EAAIgiC,EAC9B/c,EAAI,GAAIzgB,EAAI,EAAGA,EAAIs9B,EAAGt9B,IAC3BygB,EAAEhkB,KAAK24B,EAAOsI,YAAY,EAAGjH,EAAEuE,MAAM,GAAIyC,IAE7C,OAAOhD,EAAgBhE,EAAGhW,EAC7B,EACD8V,EAAa54B,UAAU4/B,gBAAkBjH,EAAa34B,UAAU4/B,gBAAkBpH,EAAWx4B,UAAU4/B,gBAEvGpH,EAAWx4B,UAAUq+B,OAAS,SAAUvF,GAEpC,IADA,IAA8EqC,EAAG6E,EAAOC,EAApFN,EAAIlI,EAAOyI,KAAMC,EAAO1I,EAAO2I,IAAK5G,EAAIjB,EAAWO,GAAIuH,EAAO9xB,KAAKrH,OAC/Dm5B,EAAKjC,UACTjD,EAAI3B,EAAEyD,OAAOoD,GACbL,EAAQL,EACRM,EAAQzG,EACRmG,EAAIQ,EACJ3G,EAAI6G,EACJF,EAAOH,EAAMlG,SAASqB,EAAEoC,SAAS4C,IACjCE,EAAOJ,EAAMnG,SAASqB,EAAEoC,SAAS8C,IAErC,IAAK7G,EAAEiD,SAAU,MAAM,IAAIj8B,MAAM+N,KAAK5I,WAAa,QAAUmzB,EAAEnzB,WAAa,qBAI5E,OAHsB,IAAlBg6B,EAAEnB,QAAQ,KACVmB,EAAIA,EAAEvG,IAAIN,IAEVvqB,KAAK2vB,aACEyB,EAAEnE,SAENmE,CACV,EAED/G,EAAa54B,UAAUq+B,OAAS1F,EAAa34B,UAAUq+B,OAAS7F,EAAWx4B,UAAUq+B,OAErF7F,EAAWx4B,UAAU+jB,KAAO,WACxB,IAAIznB,EAAQiS,KAAKjS,MACjB,OAAIiS,KAAKkqB,KACE0B,EAAc79B,EAAO,EAAGiS,KAAKkqB,MAEjC,IAAID,EAAWoB,EAASt9B,EAAO,GAAIiS,KAAKkqB,KAClD,EACDE,EAAa34B,UAAU+jB,KAAO,WAC1B,IAAIznB,EAAQiS,KAAKjS,MACjB,OAAIA,EAAQ,EAAIq7B,EAAgB,IAAIgB,EAAar8B,EAAQ,GAClD,IAAIk8B,EAAWZ,GAAa,EACtC,EACDgB,EAAa54B,UAAU+jB,KAAO,WAC1B,OAAO,IAAI6U,EAAarqB,KAAKjS,MAAQ07B,OAAO,GAC/C,EAEDQ,EAAWx4B,UAAUg9B,KAAO,WACxB,IAAI1gC,EAAQiS,KAAKjS,MACjB,OAAIiS,KAAKkqB,KACE,IAAID,EAAWoB,EAASt9B,EAAO,IAAI,GAEvC69B,EAAc79B,EAAO,EAAGiS,KAAKkqB,KACvC,EACDE,EAAa34B,UAAUg9B,KAAO,WAC1B,IAAI1gC,EAAQiS,KAAKjS,MACjB,OAAIA,EAAQ,GAAKq7B,EAAgB,IAAIgB,EAAar8B,EAAQ,GACnD,IAAIk8B,EAAWZ,GAAa,EACtC,EACDgB,EAAa54B,UAAUg9B,KAAO,WAC1B,OAAO,IAAIpE,EAAarqB,KAAKjS,MAAQ07B,OAAO,GAC/C,EAGD,IADA,IAAIsI,EAAc,CAAC,GACZ,EAAIA,EAAYA,EAAY/iC,OAAS,IAAMm6B,GAAM4I,EAAYxhC,KAAK,EAAIwhC,EAAYA,EAAY/iC,OAAS,IAC9G,IAAIgjC,EAAgBD,EAAY/iC,OAAQijC,EAAgBF,EAAYC,EAAgB,GAEpF,SAASE,EAAc3H,GACnB,OAAOt8B,KAAK0K,IAAI4xB,IAAMpB,CACzB,CAqCD,SAASgJ,EAAQnQ,EAAGmK,EAAGiG,GACnBjG,EAAInC,EAAWmC,GAOf,IANA,IAAIkG,EAAQrQ,EAAE2N,aAAc2C,EAAQnG,EAAEwD,aAClC4C,EAAOF,EAAQrQ,EAAEwQ,MAAQxQ,EACzByQ,EAAOH,EAAQnG,EAAEqG,MAAQrG,EACzBuG,EAAS,EAAGC,EAAS,EACrBC,EAAU,KAAMC,EAAU,KAC1BxiC,EAAS,IACLkiC,EAAK1C,WAAa4C,EAAK5C,UAE3B6C,GADAE,EAAU5F,EAAUuF,EAAMN,IACT,GAAGd,aAChBkB,IACAK,EAAST,EAAgB,EAAIS,GAIjCC,GADAE,EAAU7F,EAAUyF,EAAMR,IACT,GAAGd,aAChBmB,IACAK,EAASV,EAAgB,EAAIU,GAGjCJ,EAAOK,EAAQ,GACfH,EAAOI,EAAQ,GACfxiC,EAAOE,KAAK6hC,EAAGM,EAAQC,IAG3B,IADA,IAAI7H,EAA2C,IAArCsH,EAAGC,EAAQ,EAAI,EAAGC,EAAQ,EAAI,GAAWpJ,GAAQ,GAAKA,EAAO,GAC9Dp1B,EAAIzD,EAAOrB,OAAS,EAAG8E,GAAK,EAAGA,GAAK,EACzCg3B,EAAMA,EAAIkE,SAASiD,GAAepH,IAAI3B,EAAO74B,EAAOyD,KAExD,OAAOg3B,CACV,CAjEDb,EAAWx4B,UAAUw6B,UAAY,SAAUtC,GACvC,IAAIY,EAAIP,EAAWL,GAAGwH,aACtB,IAAKe,EAAc3H,GACf,MAAM,IAAIt4B,MAAMtB,OAAO45B,GAAK,+BAEhC,GAAIA,EAAI,EAAG,OAAOvqB,KAAK8yB,YAAYvI,GACnC,IAAIl6B,EAAS2P,KACb,GAAI3P,EAAOw/B,SAAU,OAAOx/B,EAC5B,KAAOk6B,GAAKyH,GACR3hC,EAASA,EAAO2+B,SAASiD,GACzB1H,GAAKyH,EAAgB,EAEzB,OAAO3hC,EAAO2+B,SAAS+C,EAAYxH,GACtC,EACDF,EAAa54B,UAAUw6B,UAAY7B,EAAa34B,UAAUw6B,UAAYhC,EAAWx4B,UAAUw6B,UAE3FhC,EAAWx4B,UAAUqhC,WAAa,SAAUnJ,GACxC,IAAIoJ,EACAxI,EAAIP,EAAWL,GAAGwH,aACtB,IAAKe,EAAc3H,GACf,MAAM,IAAIt4B,MAAMtB,OAAO45B,GAAK,+BAEhC,GAAIA,EAAI,EAAG,OAAOvqB,KAAKisB,WAAW1B,GAElC,IADA,IAAIl6B,EAAS2P,KACNuqB,GAAKyH,GAAe,CACvB,GAAI3hC,EAAOw/B,UAAax/B,EAAOs/B,cAAgBt/B,EAAO69B,SAAW,OAAO79B,EAExEA,GADA0iC,EAAS/F,EAAU38B,EAAQ4hC,IACX,GAAGtC,aAAeoD,EAAO,GAAGtE,OAASsE,EAAO,GAC5DxI,GAAKyH,EAAgB,CACxB,CAED,OADAe,EAAS/F,EAAU38B,EAAQ0hC,EAAYxH,KACzB,GAAGoF,aAAeoD,EAAO,GAAGtE,OAASsE,EAAO,EAC7D,EACD1I,EAAa54B,UAAUqhC,WAAa1I,EAAa34B,UAAUqhC,WAAa7I,EAAWx4B,UAAUqhC,WAkC7F7I,EAAWx4B,UAAU+gC,IAAM,WACvB,OAAOxyB,KAAKitB,SAASwB,MACxB,EACDpE,EAAa54B,UAAU+gC,IAAMpI,EAAa34B,UAAU+gC,IAAMvI,EAAWx4B,UAAU+gC,IAE/EvI,EAAWx4B,UAAUuhC,IAAM,SAAUzI,GACjC,OAAO4H,EAAQnyB,KAAMuqB,GAAG,SAAUhW,EAAGF,GAAK,OAAOE,EAAIF,CAAI,GAC5D,EACDgW,EAAa54B,UAAUuhC,IAAM5I,EAAa34B,UAAUuhC,IAAM/I,EAAWx4B,UAAUuhC,IAE/E/I,EAAWx4B,UAAUwhC,GAAK,SAAU1I,GAChC,OAAO4H,EAAQnyB,KAAMuqB,GAAG,SAAUhW,EAAGF,GAAK,OAAOE,EAAIF,CAAI,GAC5D,EACDgW,EAAa54B,UAAUwhC,GAAK7I,EAAa34B,UAAUwhC,GAAKhJ,EAAWx4B,UAAUwhC,GAE7EhJ,EAAWx4B,UAAUyhC,IAAM,SAAU3I,GACjC,OAAO4H,EAAQnyB,KAAMuqB,GAAG,SAAUhW,EAAGF,GAAK,OAAOE,EAAIF,CAAI,GAC5D,EACDgW,EAAa54B,UAAUyhC,IAAM9I,EAAa34B,UAAUyhC,IAAMjJ,EAAWx4B,UAAUyhC,IAE/E,IAAIC,EAAY,GAAK,GACrB,SAASC,EAAS7I,GAGd,IAAIZ,EAAIY,EAAEx8B,MACNi0B,EAAiB,iBAAN2H,EAAiBA,EAAIwJ,EACf,iBAANxJ,EAAiBA,EAAIF,OAAO0J,GAC/BxJ,EAAE,GAAKA,EAAE,GAAKR,EAPQ,WAQlC,OAAOnH,GAAKA,CACf,CAED,SAASqR,EAAiBtlC,EAAOo9B,GAC7B,GAAIA,EAAKgF,UAAUpiC,IAAU,EAAG,CAC5B,IAAIulC,EAAMD,EAAiBtlC,EAAOo9B,EAAKsB,OAAOtB,IAC1CoI,EAAID,EAAIC,EACRp5B,EAAIm5B,EAAIn5B,EACRi3B,EAAImC,EAAEvE,SAAS7D,GACnB,OAAOiG,EAAEjB,UAAUpiC,IAAU,EAAI,CAAEwlC,EAAGnC,EAAGj3B,EAAO,EAAJA,EAAQ,GAAM,CAAEo5B,EAAGA,EAAGp5B,EAAO,EAAJA,EACxE,CACD,MAAO,CAAEo5B,EAAGrK,EAAO,GAAI/uB,EAAG,EAC7B,CAcD,SAASmoB,EAAI/N,EAAGF,GAGZ,OAFAE,EAAIyV,EAAWzV,GACfF,EAAI2V,EAAW3V,GACRE,EAAEgc,QAAQlc,GAAKE,EAAIF,CAC7B,CACD,SAAShV,EAAIkV,EAAGF,GAGZ,OAFAE,EAAIyV,EAAWzV,GACfF,EAAI2V,EAAW3V,GACRE,EAAE+Z,OAAOja,GAAKE,EAAIF,CAC5B,CACD,SAASmf,EAAIjf,EAAGF,GAGZ,GAFAE,EAAIyV,EAAWzV,GAAG5b,MAClB0b,EAAI2V,EAAW3V,GAAG1b,MACd4b,EAAE4Z,OAAO9Z,GAAI,OAAOE,EACxB,GAAIA,EAAEsb,SAAU,OAAOxb,EACvB,GAAIA,EAAEwb,SAAU,OAAOtb,EAEvB,IADA,IAAoB6X,EAAGgF,EAAnBlmB,EAAIwe,EAAQ,GACTnV,EAAE6Z,UAAY/Z,EAAE+Z,UACnBhC,EAAI/sB,EAAI+zB,EAAS7e,GAAI6e,EAAS/e,IAC9BE,EAAIA,EAAEma,OAAOtC,GACb/X,EAAIA,EAAEqa,OAAOtC,GACblhB,EAAIA,EAAE8jB,SAAS5C,GAEnB,KAAO7X,EAAE6Z,UACL7Z,EAAIA,EAAEma,OAAO0E,EAAS7e,IAE1B,EAAG,CACC,KAAOF,EAAE+Z,UACL/Z,EAAIA,EAAEqa,OAAO0E,EAAS/e,IAEtBE,EAAEgc,QAAQlc,KACV+c,EAAI/c,EAAGA,EAAIE,EAAGA,EAAI6c,GAEtB/c,EAAIA,EAAEkX,SAAShX,EAClB,QAASF,EAAEwb,UACZ,OAAO3kB,EAAEgjB,SAAW3Z,EAAIA,EAAEya,SAAS9jB,EACtC,CAhDD+e,EAAWx4B,UAAUw/B,UAAY,WAC7B,IAAI1G,EAAIvqB,KAIR,OAHIuqB,EAAE4F,UAAUjH,EAAO,IAAM,IACzBqB,EAAIA,EAAE0C,SAAS1B,SAASrC,EAAO,KAEJ,IAA3BqB,EAAE4F,UAAUjH,EAAO,IACZA,EAAO,GAEXA,EAAOmK,EAAiB9I,EAAGrB,EAAO,IAAI/uB,GAAG0wB,IAAI3B,EAAO,GAC9D,EACDmB,EAAa54B,UAAUw/B,UAAY7G,EAAa34B,UAAUw/B,UAAYhH,EAAWx4B,UAAUw/B,UA8D3F,IAAIlH,EAAY,SAAU1e,EAAM8f,EAAMtB,EAAUC,GAC5CD,EAAWA,GAAYN,EACvBle,EAAO1a,OAAO0a,GACTye,IACDze,EAAOA,EAAKmO,cACZqQ,EAAWA,EAASrQ,eAExB,IACI1lB,EADA9E,EAASqc,EAAKrc,OAEdykC,EAAUxlC,KAAK0K,IAAIwyB,GACnBuI,EAAiB,CAAC,EACtB,IAAK5/B,EAAI,EAAGA,EAAI+1B,EAAS76B,OAAQ8E,IAC7B4/B,EAAe7J,EAAS/1B,IAAMA,EAElC,IAAKA,EAAI,EAAGA,EAAI9E,EAAQ8E,IAAK,CAEzB,GAAU,OADNoX,EAAIG,EAAKvX,MAEToX,KAAKwoB,GACDA,EAAexoB,IAAMuoB,GAAS,CAC9B,GAAU,MAANvoB,GAAyB,IAAZuoB,EAAe,SAChC,MAAM,IAAIxhC,MAAMiZ,EAAI,iCAAmCigB,EAAO,IACjE,CAER,CACDA,EAAOnB,EAAWmB,GAClB,IAAIwI,EAAS,GACThE,EAAyB,MAAZtkB,EAAK,GACtB,IAAKvX,EAAI67B,EAAa,EAAI,EAAG77B,EAAIuX,EAAKrc,OAAQ8E,IAAK,CAC/C,IAAIoX,EACJ,IADIA,EAAIG,EAAKvX,MACJ4/B,EAAgBC,EAAOpjC,KAAKy5B,EAAW0J,EAAexoB,SAC1D,IAAU,MAANA,EAKJ,MAAM,IAAIjZ,MAAMiZ,EAAI,6BAJrB,IAAIiM,EAAQrjB,EACZ,GAAKA,UAA0B,MAAZuX,EAAKvX,IAAcA,EAAIuX,EAAKrc,QAC/C2kC,EAAOpjC,KAAKy5B,EAAW3e,EAAKzR,MAAMud,EAAQ,EAAGrjB,IAE5C,CACR,CACD,OAAO8/B,EAAmBD,EAAQxI,EAAMwE,EAC3C,EAED,SAASiE,EAAmBD,EAAQxI,EAAMwE,GACtC,IAAwC77B,EAApCuM,EAAMqpB,EAAQ,GAAI6F,EAAM7F,EAAQ,GACpC,IAAK51B,EAAI6/B,EAAO3kC,OAAS,EAAG8E,GAAK,EAAGA,IAChCuM,EAAMA,EAAIwqB,IAAI8I,EAAO7/B,GAAGq7B,MAAMI,IAC9BA,EAAMA,EAAIJ,MAAMhE,GAEpB,OAAOwE,EAAatvB,EAAI4sB,SAAW5sB,CACtC,CAUD,SAASwzB,EAAOtJ,EAAGY,GAEf,IADAA,EAAOjC,EAAOiC,IACL0E,SAAU,CACf,GAAItF,EAAEsF,SAAU,MAAO,CAAE9hC,MAAO,CAAC,GAAI4hC,YAAY,GACjD,MAAM,IAAI19B,MAAM,4CACnB,CACD,GAAIk5B,EAAKgD,QAAQ,GAAI,CACjB,GAAI5D,EAAEsF,SAAU,MAAO,CAAE9hC,MAAO,CAAC,GAAI4hC,YAAY,GACjD,GAAIpF,EAAEoF,aACF,MAAO,CACH5hC,MAAO,GAAG2K,OAAO7H,MAAM,GAAImG,MAAMnG,MAAM,KAAMmG,OAAOuzB,EAAE4G,eACjDpzB,IAAI/G,MAAMvF,UAAUqiC,QAAS,CAAC,EAAG,KAEtCnE,YAAY,GAGpB,IAAIrJ,EAAMtvB,MAAMnG,MAAM,KAAMmG,MAAMuzB,EAAE4G,aAAe,IAC9CpzB,IAAI/G,MAAMvF,UAAUqiC,QAAS,CAAC,EAAG,IAEtC,OADAxN,EAAI1D,QAAQ,CAAC,IACN,CACH70B,MAAO,GAAG2K,OAAO7H,MAAM,GAAIy1B,GAC3BqJ,YAAY,EAEnB,CAED,IAAIoE,GAAM,EAKV,GAJIxJ,EAAEoF,cAAgBxE,EAAK4E,eACvBgE,GAAM,EACNxJ,EAAIA,EAAE5xB,OAENwyB,EAAK+C,SACL,OAAI3D,EAAEsF,SAAiB,CAAE9hC,MAAO,CAAC,GAAI4hC,YAAY,GAE1C,CACH5hC,MAAOiJ,MAAMnG,MAAM,KAAMmG,MAAMuzB,EAAE4G,eAC5BpzB,IAAIhI,OAAOtE,UAAUqiC,QAAS,GACnCnE,WAAYoE,GAKpB,IAFA,IACc1E,EADV3nB,EAAM,GACNssB,EAAOzJ,EACJyJ,EAAKrE,cAAgBqE,EAAKtJ,WAAWS,IAAS,GAAG,CACpDkE,EAAS2E,EAAK3E,OAAOlE,GACrB6I,EAAO3E,EAAOtC,SACd,IAAIkH,EAAQ5E,EAAOxC,UACfoH,EAAMtE,eACNsE,EAAQ9I,EAAK2D,MAAMmF,GAAOt7B,MAC1Bq7B,EAAOA,EAAKxe,QAEhB9N,EAAInX,KAAK0jC,EAAM9C,aAClB,CAED,OADAzpB,EAAInX,KAAKyjC,EAAK7C,cACP,CAAEpjC,MAAO2Z,EAAIkmB,UAAW+B,WAAYoE,EAC9C,CAED,SAASG,EAAa3J,EAAGY,EAAMtB,GAC3B,IAAIvD,EAAMuN,EAAOtJ,EAAGY,GACpB,OAAQ7E,EAAIqJ,WAAa,IAAM,IAAMrJ,EAAIv4B,MAAMgQ,KAAI,SAAUikB,GACzD,OAlER,SAAmBiS,EAAOpK,GAEtB,OAAIoK,GADJpK,EAAWA,GAAYN,GACFv6B,OACV66B,EAASoK,GAEb,IAAMA,EAAQ,GACxB,CA4Dcjf,CAAUgN,EAAG6H,EACvB,IAAE1e,KAAK,GACX,CAiDD,SAASgpB,EAAiBxK,GACtB,GAAIW,GAAWX,GAAI,CACf,IAAI3H,GAAK2H,EACT,GAAI3H,IAAM4I,EAAS5I,GACf,OAAOwH,EAAuB,IAAIa,EAAaZ,OAAOzH,IAAM,IAAIoI,EAAapI,GACjF,MAAM,IAAI/vB,MAAM,oBAAsB03B,EACzC,CACD,IAAIO,EAAgB,MAATP,EAAE,GACTO,IAAMP,EAAIA,EAAE/vB,MAAM,IACtB,IAAI+O,EAAQghB,EAAEhhB,MAAM,MACpB,GAAIA,EAAM3Z,OAAS,EAAG,MAAM,IAAIiD,MAAM,oBAAsB0W,EAAMwC,KAAK,MACvE,GAAqB,IAAjBxC,EAAM3Z,OAAc,CACpB,IAAI4gC,EAAMjnB,EAAM,GAGhB,GAFe,MAAXinB,EAAI,KAAYA,EAAMA,EAAIh2B,MAAM,KACpCg2B,GAAOA,KACKhF,EAASgF,KAAStF,EAAUsF,GAAM,MAAM,IAAI39B,MAAM,oBAAsB29B,EAAM,6BAC1F,IAAIvkB,EAAO1C,EAAM,GACbyrB,EAAe/oB,EAAKnE,QAAQ,KAKhC,GAJIktB,GAAgB,IAChBxE,GAAOvkB,EAAKrc,OAASolC,EAAe,EACpC/oB,EAAOA,EAAKzR,MAAM,EAAGw6B,GAAgB/oB,EAAKzR,MAAMw6B,EAAe,IAE/DxE,EAAM,EAAG,MAAM,IAAI39B,MAAM,sDAE7B03B,EADAte,GAAS,IAAIrU,MAAM44B,EAAM,GAAIzkB,KAAK,IAErC,CAED,IADc,kBAAkBkpB,KAAK1K,GACvB,MAAM,IAAI13B,MAAM,oBAAsB03B,GACpD,GAAIH,EACA,OAAO,IAAIa,EAAaZ,OAAOS,EAAO,IAAMP,EAAIA,IAGpD,IADA,IAAIsB,EAAI,GAAI3I,EAAMqH,EAAE36B,OAAsBqQ,EAAMijB,EAr2CrC,EAs2CJA,EAAM,GACT2I,EAAE16B,MAAMo5B,EAAE/vB,MAAMyF,EAAKijB,KACrBjjB,GAx2CO,GAy2CG,IAAGA,EAAM,GACnBijB,GA12CO,EA62CX,OADAmI,EAAKQ,GACE,IAAIhB,EAAWgB,EAAGf,EAC5B,CAaD,SAASF,EAAWL,GAChB,MAAiB,iBAANA,EAZf,SAA0BA,GACtB,GAAIH,EACA,OAAO,IAAIa,EAAaZ,OAAOE,IAEnC,GAAIW,EAAUX,GAAI,CACd,GAAIA,IAAMiB,EAASjB,GAAI,MAAM,IAAI13B,MAAM03B,EAAI,uBAC3C,OAAO,IAAIS,EAAaT,EAC3B,CACD,OAAOwK,EAAiBxK,EAAEvyB,WAC7B,CAIck9B,CAAiB3K,GAEX,iBAANA,EACAwK,EAAiBxK,GAEX,iBAANA,EACA,IAAIU,EAAaV,GAErBA,CACV,CA/GDM,EAAWx4B,UAAU8iC,QAAU,SAAU3K,GACrC,OAAOiK,EAAO7zB,KAAM4pB,EACvB,EAEDQ,EAAa34B,UAAU8iC,QAAU,SAAU3K,GACvC,OAAOiK,EAAO7zB,KAAM4pB,EACvB,EAEDS,EAAa54B,UAAU8iC,QAAU,SAAU3K,GACvC,OAAOiK,EAAO7zB,KAAM4pB,EACvB,EAEDK,EAAWx4B,UAAU2F,SAAW,SAAUwyB,EAAOC,GAE7C,GADID,IAAUt6B,IAAWs6B,EAAQ,IACnB,KAAVA,EAAc,OAAOsK,EAAal0B,KAAM4pB,EAAOC,GAEnD,IADA,IAA2EoK,EAAvEtK,EAAI3pB,KAAKjS,MAAOu9B,EAAI3B,EAAE36B,OAAQF,EAAM6B,OAAOg5B,IAAI2B,MAC1CA,GAAK,GACV2I,EAAQtjC,OAAOg5B,EAAE2B,IACjBx8B,GAH4D,UAG/C8K,MAAMq6B,EAAMjlC,QAAUilC,EAGvC,OADWj0B,KAAKkqB,KAAO,IAAM,IACfp7B,CACjB,EAEDs7B,EAAa34B,UAAU2F,SAAW,SAAUwyB,EAAOC,GAE/C,OADID,IAAUt6B,IAAWs6B,EAAQ,IACpB,IAATA,EAAoBsK,EAAal0B,KAAM4pB,EAAOC,GAC3Cl5B,OAAOqP,KAAKjS,MACtB,EAEDs8B,EAAa54B,UAAU2F,SAAWgzB,EAAa34B,UAAU2F,SAEzDizB,EAAa54B,UAAU+iC,OAASvK,EAAWx4B,UAAU+iC,OAASpK,EAAa34B,UAAU+iC,OAAS,WAAc,OAAOx0B,KAAK5I,UAAa,EAErI6yB,EAAWx4B,UAAUqiC,QAAU,WAC3B,OAAOW,SAASz0B,KAAK5I,WAAY,GACpC,EACD6yB,EAAWx4B,UAAU0/B,WAAalH,EAAWx4B,UAAUqiC,QAEvD1J,EAAa34B,UAAUqiC,QAAU,WAC7B,OAAO9zB,KAAKjS,KACf,EACDq8B,EAAa34B,UAAU0/B,WAAa/G,EAAa34B,UAAUqiC,QAC3DzJ,EAAa54B,UAAUqiC,QAAUzJ,EAAa54B,UAAU0/B,WAAa,WACjE,OAAOsD,SAASz0B,KAAK5I,WAAY,GACpC,EAoED,IAAK,IAAItD,EAAI,EAAGA,EAAI,IAAMA,IACtB41B,EAAQ51B,GAAKk2B,EAAWl2B,GACpBA,EAAI,IAAG41B,GAAS51B,GAAKk2B,GAAYl2B,IAiBzC,OAdA41B,EAAQmI,IAAMnI,EAAQ,GACtBA,EAAQiI,KAAOjI,EAAQ,GACvBA,EAAQgL,SAAWhL,GAAS,GAC5BA,EAAQpH,IAAMA,EACdoH,EAAQrqB,IAAMA,EACdqqB,EAAQ8J,IAAMA,EACd9J,EAAQiL,IA1QR,SAAapgB,EAAGF,GAGZ,OAFAE,EAAIyV,EAAWzV,GAAG5b,MAClB0b,EAAI2V,EAAW3V,GAAG1b,MACX4b,EAAEma,OAAO8E,EAAIjf,EAAGF,IAAI2a,SAAS3a,EACvC,EAuQDqV,EAAQkL,WAAa,SAAU5S,GAAK,OAAOA,aAAaiI,GAAcjI,aAAaoI,GAAgBpI,aAAaqI,CAAe,EAC/HX,EAAQ8H,YAvQR,SAAqBjd,EAAGF,EAAGkd,GACvBhd,EAAIyV,EAAWzV,GACfF,EAAI2V,EAAW3V,GACf,IAAIwgB,EAAUtD,GAAOtjC,KAAKqL,OACtBnL,EAAMkR,EAAIkV,EAAGF,GACbygB,EADwBxS,EAAI/N,EAAGF,GAClBkX,SAASp9B,GAAK08B,IAAI,GACnC,GAAIiK,EAAM3K,QAAS,OAAOh8B,EAAI08B,IAAI58B,KAAKC,MAAM2mC,IAAYC,IAGzD,IAFA,IAAInB,EAASE,EAAOiB,EAAO3L,GAAMp7B,MAC7BsC,EAAS,GAAI0kC,GAAa,EACrBjhC,EAAI,EAAGA,EAAI6/B,EAAO3kC,OAAQ8E,IAAK,CACpC,IAAIkhC,EAAMD,EAAapB,EAAO7/B,IAAMA,EAAI,EAAI6/B,EAAO3kC,OAAS2kC,EAAO7/B,EAAI,GAAKq1B,EAAO,GAAKA,EACpF8K,EAAQrJ,EAASiK,IAAYG,GACjC3kC,EAAOE,KAAK0jC,GACRA,EAAQN,EAAO7/B,KAAIihC,GAAa,EACvC,CACD,OAAO5mC,EAAI08B,IAAInB,EAAQuL,UAAU5kC,EAAQ84B,GAAM,GAClD,EAyPDO,EAAQuL,UAAY,SAAUtB,EAAQxI,EAAMwE,GACxC,OAAOiE,EAAmBD,EAAO51B,IAAIisB,GAAaA,EAAWmB,GAAQ,IAAKwE,EAC7E,EAEMjG,CACV,CAh6Ca,GAm6CuBhL,EAAOnB,eAAe,aACvDmB,EAAOiE,QAAUuG,QAKX,KAANxE,EAAAA,WACI,OAAOwE,CADL,iDCz6CV,SAMC,WAiCD,IA44BMgM,EAwBFC,EAWAxL,EACAyL,EAQEC,EACAC,EACAC,EACAC,EAEAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEAC,EACAC,EAEAC,EAEAC,EACAC,EAEAC,EACAC,EACAC,EAEAC,EAl9BFC,EAAO,SAAUC,GACnB,IAAIC,EAAU,IAAIF,EAAKG,QAavB,OAXAD,EAAQE,SAASjM,IACf6L,EAAKK,QACLL,EAAKM,eACLN,EAAKO,SAGPL,EAAQM,eAAerM,IACrB6L,EAAKO,SAGPN,EAAO98B,KAAK+8B,EAASA,GACdA,EAAQ1Z,OAChB,EAEDwZ,EAAKh3B,QAAU,QAUfg3B,EAAKS,MAAQ,CAAC,EASdT,EAAKS,MAAMpvB,KAAQ,SAAU0B,GAE3B,OAAO,SAAUtY,GACXsY,EAAO9B,SAAWA,QAAQI,MAC5BJ,QAAQI,KAAK5W,EAEhB,CAEF,CARkB,CAQhB6O,MAaH02B,EAAKS,MAAMC,SAAW,SAAUC,GAC9B,OAAIA,QACK,GAEAA,EAAIjgC,UAEd,EAkBDs/B,EAAKS,MAAMG,MAAQ,SAAUD,GAC3B,GAAIA,QACF,OAAOA,EAMT,IAHA,IAAIC,EAAQhmC,OAAOC,OAAO,MACtBmG,EAAOpG,OAAOoG,KAAK2/B,GAEdvjC,EAAI,EAAGA,EAAI4D,EAAK1I,OAAQ8E,IAAK,CACpC,IAAIgE,EAAMJ,EAAK5D,GACXuM,EAAMg3B,EAAIv/B,GAEd,GAAId,MAAMC,QAAQoJ,GAChBi3B,EAAMx/B,GAAOuI,EAAIzG,YADnB,CAKA,GAAmB,iBAARyG,GACQ,iBAARA,GACQ,kBAARA,EAKX,MAAM,IAAIk3B,UAAU,yDAJlBD,EAAMx/B,GAAOuI,CALd,CAUF,CAED,OAAOi3B,CACR,EACDZ,EAAKc,SAAW,SAAUC,EAAQC,EAAWC,GAC3C33B,KAAKy3B,OAASA,EACdz3B,KAAK03B,UAAYA,EACjB13B,KAAK43B,aAAeD,CACrB,EAEDjB,EAAKc,SAASK,OAAS,IAEvBnB,EAAKc,SAASM,WAAa,SAAU7kB,GACnC,IAAIsX,EAAItX,EAAE/L,QAAQwvB,EAAKc,SAASK,QAEhC,IAAW,IAAPtN,EACF,KAAM,6BAGR,IAAIwN,EAAW9kB,EAAErZ,MAAM,EAAG2wB,GACtBkN,EAASxkB,EAAErZ,MAAM2wB,EAAI,GAEzB,OAAO,IAAImM,EAAKc,SAAUC,EAAQM,EAAU9kB,EAC7C,EAEDyjB,EAAKc,SAAS/lC,UAAU2F,SAAW,WAKjC,OAJyB9H,MAArB0Q,KAAK43B,eACP53B,KAAK43B,aAAe53B,KAAK03B,UAAYhB,EAAKc,SAASK,OAAS73B,KAAKy3B,QAG5Dz3B,KAAK43B,YACb,EAWDlB,EAAKsB,IAAM,SAAUC,GAGnB,GAFAj4B,KAAKi4B,SAAW3mC,OAAOC,OAAO,MAE1B0mC,EAAU,CACZj4B,KAAKhR,OAASipC,EAASjpC,OAEvB,IAAK,IAAI8E,EAAI,EAAGA,EAAIkM,KAAKhR,OAAQ8E,IAC/BkM,KAAKi4B,SAASA,EAASnkC,KAAM,CAEhC,MACCkM,KAAKhR,OAAS,CAEjB,EASD0nC,EAAKsB,IAAI57B,SAAW,CAClB87B,UAAW,SAAUC,GACnB,OAAOA,CACR,EAEDC,MAAO,WACL,OAAOp4B,IACR,EAEDq4B,SAAU,WACR,OAAO,CACR,GAUH3B,EAAKsB,IAAIM,MAAQ,CACfJ,UAAW,WACT,OAAOl4B,IACR,EAEDo4B,MAAO,SAAUD,GACf,OAAOA,CACR,EAEDE,SAAU,WACR,OAAO,CACR,GASH3B,EAAKsB,IAAIvmC,UAAU4mC,SAAW,SAAUlmC,GACtC,QAAS6N,KAAKi4B,SAAS9lC,EACxB,EAUDukC,EAAKsB,IAAIvmC,UAAUymC,UAAY,SAAUC,GACvC,IAAI5jB,EAAGF,EAAG4jB,EAAUM,EAAe,GAEnC,GAAIJ,IAAUzB,EAAKsB,IAAI57B,SACrB,OAAO4D,KAGT,GAAIm4B,IAAUzB,EAAKsB,IAAIM,MACrB,OAAOH,EAGLn4B,KAAKhR,OAASmpC,EAAMnpC,QACtBulB,EAAIvU,KACJqU,EAAI8jB,IAEJ5jB,EAAI4jB,EACJ9jB,EAAIrU,MAGNi4B,EAAW3mC,OAAOoG,KAAK6c,EAAE0jB,UAEzB,IAAK,IAAInkC,EAAI,EAAGA,EAAImkC,EAASjpC,OAAQ8E,IAAK,CACxC,IAAI0kC,EAAUP,EAASnkC,GACnB0kC,KAAWnkB,EAAE4jB,UACfM,EAAahoC,KAAKioC,EAErB,CAED,OAAO,IAAI9B,EAAKsB,IAAKO,EACtB,EASD7B,EAAKsB,IAAIvmC,UAAU2mC,MAAQ,SAAUD,GACnC,OAAIA,IAAUzB,EAAKsB,IAAI57B,SACds6B,EAAKsB,IAAI57B,SAGd+7B,IAAUzB,EAAKsB,IAAIM,MACdt4B,KAGF,IAAI02B,EAAKsB,IAAI1mC,OAAOoG,KAAKsI,KAAKi4B,UAAUv/B,OAAOpH,OAAOoG,KAAKygC,EAAMF,WACzE,EASDvB,EAAK+B,IAAM,SAAUC,EAASC,GAC5B,IAAIC,EAAoB,EAExB,IAAK,IAAIlB,KAAagB,EACH,UAAbhB,IACJkB,GAAqBtnC,OAAOoG,KAAKghC,EAAQhB,IAAY1oC,QAGvD,IAAIgzB,GAAK2W,EAAgBC,EAAoB,KAAQA,EAAoB,IAEzE,OAAO3qC,KAAK0T,IAAI,EAAI1T,KAAK0K,IAAIqpB,GAC9B,EAUD0U,EAAKmC,MAAQ,SAAU/pC,EAAKgqC,GAC1B94B,KAAKlR,IAAMA,GAAO,GAClBkR,KAAK84B,SAAWA,GAAY,CAAC,CAC9B,EAODpC,EAAKmC,MAAMpnC,UAAU2F,SAAW,WAC9B,OAAO4I,KAAKlR,GACb,EAsBD4nC,EAAKmC,MAAMpnC,UAAUsnC,OAAS,SAAU3G,GAEtC,OADApyB,KAAKlR,IAAMsjC,EAAGpyB,KAAKlR,IAAKkR,KAAK84B,UACtB94B,IACR,EASD02B,EAAKmC,MAAMpnC,UAAU6lC,MAAQ,SAAUlF,GAErC,OADAA,EAAKA,GAAM,SAAUnf,GAAK,OAAOA,CAAG,EAC7B,IAAIyjB,EAAKmC,MAAOzG,EAAGpyB,KAAKlR,IAAKkR,KAAK84B,UAAW94B,KAAK84B,SAC1D,EAwBDpC,EAAKsC,UAAY,SAAU3B,EAAKyB,GAC9B,GAAW,MAAPzB,GAAsB/nC,MAAP+nC,EACjB,MAAO,GAGT,GAAIrgC,MAAMC,QAAQogC,GAChB,OAAOA,EAAIt5B,KAAI,SAAUqzB,GACvB,OAAO,IAAIsF,EAAKmC,MACdnC,EAAKS,MAAMC,SAAShG,GAAG5X,cACvBkd,EAAKS,MAAMG,MAAMwB,GAEpB,IAOH,IAJA,IAAIhqC,EAAMuoC,EAAIjgC,WAAWoiB,cACrByf,EAAMnqC,EAAIE,OACVkqC,EAAS,GAEJC,EAAW,EAAGC,EAAa,EAAGD,GAAYF,EAAKE,IAAY,CAClE,IACIE,EAAcF,EAAWC,EAE7B,GAHWtqC,EAAIwqC,OAAOH,GAGZp0B,MAAM2xB,EAAKsC,UAAUO,YAAcJ,GAAYF,EAAM,CAE7D,GAAII,EAAc,EAAG,CACnB,IAAIG,EAAgB9C,EAAKS,MAAMG,MAAMwB,IAAa,CAAC,EACnDU,EAAa,SAAe,CAACJ,EAAYC,GACzCG,EAAa,MAAYN,EAAOlqC,OAEhCkqC,EAAO3oC,KACL,IAAImmC,EAAKmC,MACP/pC,EAAI8K,MAAMw/B,EAAYD,GACtBK,GAGL,CAEDJ,EAAaD,EAAW,CACzB,CAEF,CAED,OAAOD,CACR,EASDxC,EAAKsC,UAAUO,UAAY,UAmC3B7C,EAAK+C,SAAW,WACdz5B,KAAK05B,OAAS,EACf,EAEDhD,EAAK+C,SAASE,oBAAsBroC,OAAOC,OAAO,MAmClDmlC,EAAK+C,SAASG,iBAAmB,SAAUxH,EAAIyH,GACzCA,KAAS75B,KAAK25B,qBAChBjD,EAAKS,MAAMpvB,KAAK,6CAA+C8xB,GAGjEzH,EAAGyH,MAAQA,EACXnD,EAAK+C,SAASE,oBAAoBvH,EAAGyH,OAASzH,CAC/C,EAQDsE,EAAK+C,SAASK,4BAA8B,SAAU1H,GACjCA,EAAGyH,OAAUzH,EAAGyH,SAAS75B,KAAK25B,qBAG/CjD,EAAKS,MAAMpvB,KAAK,kGAAmGqqB,EAEtH,EAYDsE,EAAK+C,SAASM,KAAO,SAAUC,GAC7B,IAAIlD,EAAW,IAAIJ,EAAK+C,SAYxB,OAVAO,EAAWp0B,SAAQ,SAAUq0B,GAC3B,IAAI7H,EAAKsE,EAAK+C,SAASE,oBAAoBM,GAE3C,IAAI7H,EAGF,MAAM,IAAIngC,MAAM,sCAAwCgoC,GAFxDnD,EAASjM,IAAIuH,EAIhB,IAEM0E,CACR,EASDJ,EAAK+C,SAAShoC,UAAUo5B,IAAM,WAC5B,IAAIqP,EAAMljC,MAAMvF,UAAUmI,MAAMC,KAAKoI,WAErCi4B,EAAIt0B,SAAQ,SAAUwsB,GACpBsE,EAAK+C,SAASK,4BAA4B1H,GAC1CpyB,KAAK05B,OAAOnpC,KAAK6hC,EAClB,GAAEpyB,KACJ,EAWD02B,EAAK+C,SAAShoC,UAAU0oC,MAAQ,SAAUC,EAAYC,GACpD3D,EAAK+C,SAASK,4BAA4BO,GAE1C,IAAInrC,EAAM8Q,KAAK05B,OAAOxyB,QAAQkzB,GAC9B,IAAY,GAARlrC,EACF,MAAM,IAAI+C,MAAM,0BAGlB/C,GAAY,EACZ8Q,KAAK05B,OAAOvyB,OAAOjY,EAAK,EAAGmrC,EAC5B,EAWD3D,EAAK+C,SAAShoC,UAAU6oC,OAAS,SAAUF,EAAYC,GACrD3D,EAAK+C,SAASK,4BAA4BO,GAE1C,IAAInrC,EAAM8Q,KAAK05B,OAAOxyB,QAAQkzB,GAC9B,IAAY,GAARlrC,EACF,MAAM,IAAI+C,MAAM,0BAGlB+N,KAAK05B,OAAOvyB,OAAOjY,EAAK,EAAGmrC,EAC5B,EAOD3D,EAAK+C,SAAShoC,UAAU8oC,OAAS,SAAUnI,GACzC,IAAIljC,EAAM8Q,KAAK05B,OAAOxyB,QAAQkrB,IAClB,GAARljC,GAIJ8Q,KAAK05B,OAAOvyB,OAAOjY,EAAK,EACzB,EASDwnC,EAAK+C,SAAShoC,UAAU8xB,IAAM,SAAU2V,GAGtC,IAFA,IAAIsB,EAAcx6B,KAAK05B,OAAO1qC,OAErB8E,EAAI,EAAGA,EAAI0mC,EAAa1mC,IAAK,CAIpC,IAHA,IAAIs+B,EAAKpyB,KAAK05B,OAAO5lC,GACjB2mC,EAAO,GAEFrhC,EAAI,EAAGA,EAAI8/B,EAAOlqC,OAAQoK,IAAK,CACtC,IAAI/I,EAAS+hC,EAAG8G,EAAO9/B,GAAIA,EAAG8/B,GAE9B,GAAI7oC,SAAmD,KAAXA,EAE5C,GAAI2G,MAAMC,QAAQ5G,GAChB,IAAK,IAAIqqC,EAAI,EAAGA,EAAIrqC,EAAOrB,OAAQ0rC,IACjCD,EAAKlqC,KAAKF,EAAOqqC,SAGnBD,EAAKlqC,KAAKF,EAEb,CAED6oC,EAASuB,CACV,CAED,OAAOvB,CACR,EAYDxC,EAAK+C,SAAShoC,UAAUkpC,UAAY,SAAU7rC,EAAKgqC,GACjD,IAAI1yB,EAAQ,IAAIswB,EAAKmC,MAAO/pC,EAAKgqC,GAEjC,OAAO94B,KAAKujB,IAAI,CAACnd,IAAQrI,KAAI,SAAUqzB,GACrC,OAAOA,EAAEh6B,UACV,GACF,EAMDs/B,EAAK+C,SAAShoC,UAAUmpC,MAAQ,WAC9B56B,KAAK05B,OAAS,EACf,EASDhD,EAAK+C,SAAShoC,UAAU+iC,OAAS,WAC/B,OAAOx0B,KAAK05B,OAAO37B,KAAI,SAAUq0B,GAG/B,OAFAsE,EAAK+C,SAASK,4BAA4B1H,GAEnCA,EAAGyH,KACX,GACF,EAsBDnD,EAAKmE,OAAS,SAAU5C,GACtBj4B,KAAK86B,WAAa,EAClB96B,KAAKi4B,SAAWA,GAAY,EAC7B,EAaDvB,EAAKmE,OAAOppC,UAAUspC,iBAAmB,SAAUrnC,GAEjD,GAA4B,GAAxBsM,KAAKi4B,SAASjpC,OAChB,OAAO,EAST,IANA,IAAImoB,EAAQ,EACRhnB,EAAM6P,KAAKi4B,SAASjpC,OAAS,EAC7BqqC,EAAclpC,EAAMgnB,EACpB6jB,EAAa/sC,KAAKC,MAAMmrC,EAAc,GACtC4B,EAAaj7B,KAAKi4B,SAAsB,EAAb+C,GAExB3B,EAAc,IACf4B,EAAavnC,IACfyjB,EAAQ6jB,GAGNC,EAAavnC,IACfvD,EAAM6qC,GAGJC,GAAcvnC,IAIlB2lC,EAAclpC,EAAMgnB,EACpB6jB,EAAa7jB,EAAQlpB,KAAKC,MAAMmrC,EAAc,GAC9C4B,EAAaj7B,KAAKi4B,SAAsB,EAAb+C,GAG7B,OAAIC,GAAcvnC,GAIdunC,EAAavnC,EAHK,EAAbsnC,EAOLC,EAAavnC,EACW,GAAlBsnC,EAAa,QADvB,CAGD,EAWDtE,EAAKmE,OAAOppC,UAAUypC,OAAS,SAAUC,EAAW96B,GAClDL,KAAKo7B,OAAOD,EAAW96B,GAAK,WAC1B,KAAM,iBACP,GACF,EAUDq2B,EAAKmE,OAAOppC,UAAU2pC,OAAS,SAAUD,EAAW96B,EAAK+xB,GACvDpyB,KAAK86B,WAAa,EAClB,IAAIl9B,EAAWoC,KAAK+6B,iBAAiBI,GAEjCn7B,KAAKi4B,SAASr6B,IAAau9B,EAC7Bn7B,KAAKi4B,SAASr6B,EAAW,GAAKw0B,EAAGpyB,KAAKi4B,SAASr6B,EAAW,GAAIyC,GAE9DL,KAAKi4B,SAAS9wB,OAAOvJ,EAAU,EAAGu9B,EAAW96B,EAEhD,EAODq2B,EAAKmE,OAAOppC,UAAU4pC,UAAY,WAChC,GAAIr7B,KAAK86B,WAAY,OAAO96B,KAAK86B,WAKjC,IAHA,IAAIQ,EAAe,EACfC,EAAiBv7B,KAAKi4B,SAASjpC,OAE1B8E,EAAI,EAAGA,EAAIynC,EAAgBznC,GAAK,EAAG,CAC1C,IAAIuM,EAAML,KAAKi4B,SAASnkC,GACxBwnC,GAAgBj7B,EAAMA,CACvB,CAED,OAAOL,KAAK86B,WAAa7sC,KAAKutC,KAAKF,EACpC,EAQD5E,EAAKmE,OAAOppC,UAAUgqC,IAAM,SAAUC,GAOpC,IANA,IAAIC,EAAa,EACbpnB,EAAIvU,KAAKi4B,SAAU5jB,EAAIqnB,EAAYzD,SACnC2D,EAAOrnB,EAAEvlB,OAAQ6sC,EAAOxnB,EAAErlB,OAC1B8sC,EAAO,EAAGC,EAAO,EACjBjoC,EAAI,EAAGsF,EAAI,EAERtF,EAAI8nC,GAAQxiC,EAAIyiC,IACrBC,EAAOvnB,EAAEzgB,KAAIioC,EAAO1nB,EAAEjb,IAEpBtF,GAAK,EACIgoC,EAAOC,EAChB3iC,GAAK,EACI0iC,GAAQC,IACjBJ,GAAcpnB,EAAEzgB,EAAI,GAAKugB,EAAEjb,EAAI,GAC/BtF,GAAK,EACLsF,GAAK,GAIT,OAAOuiC,CACR,EASDjF,EAAKmE,OAAOppC,UAAUuqC,WAAa,SAAUN,GAC3C,OAAO17B,KAAKy7B,IAAIC,GAAe17B,KAAKq7B,aAAe,CACpD,EAOD3E,EAAKmE,OAAOppC,UAAU8iC,QAAU,WAG9B,IAFA,IAAI5kC,EAAS,IAAIqH,MAAOgJ,KAAKi4B,SAASjpC,OAAS,GAEtC8E,EAAI,EAAGsF,EAAI,EAAGtF,EAAIkM,KAAKi4B,SAASjpC,OAAQ8E,GAAK,EAAGsF,IACvDzJ,EAAOyJ,GAAK4G,KAAKi4B,SAASnkC,GAG5B,OAAOnE,CACR,EAOD+mC,EAAKmE,OAAOppC,UAAU+iC,OAAS,WAC7B,OAAOx0B,KAAKi4B,QACb,EAmBDvB,EAAKO,SACC/B,EAAY,CACZ,QAAY,MACZ,OAAW,OACX,KAAS,OACT,KAAS,OACT,KAAS,MACT,IAAQ,MACR,KAAS,KACT,MAAU,MACV,IAAQ,IACR,MAAU,MACV,QAAY,MACZ,MAAU,MACV,KAAS,MACT,MAAU,KACV,QAAY,MACZ,QAAY,MACZ,QAAY,MACZ,MAAU,KACV,MAAU,MACV,OAAW,MACX,KAAS,OAGXC,EAAY,CACV,MAAU,KACV,MAAU,GACV,MAAU,KACV,MAAU,KACV,KAAS,KACT,IAAQ,GACR,KAAS,IAIXxL,EAAI,WACJyL,EAAIlqB,qBAQFmqB,EAAU,IAAI4G,OALT,4DAML3G,EAAU,IAAI2G,OAJT,8FAKL1G,EAAU,IAAI0G,OANT,gFAOLzG,EAAS,IAAIyG,OALT,kCAOJxG,EAAQ,kBACRC,EAAS,iBACTC,EAAQ,aACRC,EAAS,kBACTC,EAAU,KACVC,EAAW,cACXC,EAAW,IAAIkG,OAAO,sBACtBjG,EAAW,IAAIiG,OAAO,IAAM7G,EAAIzL,EAAI,gBAEpCsM,EAAQ,mBACRC,EAAO,2IAEPC,EAAO,iDAEPC,EAAO,sFACPC,EAAQ,oBAERC,EAAO,WACPC,EAAS,MACTC,EAAQ,IAAIyF,OAAO,IAAM7G,EAAIzL,EAAI,gBAEjC8M,EAAgB,SAAuByF,GACzC,IAAIC,EACFC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEF,GAAIP,EAAEltC,OAAS,EAAK,OAAOktC,EAiB3B,GAde,MADfG,EAAUH,EAAEp2B,OAAO,EAAE,MAEnBo2B,EAAIG,EAAQK,cAAgBR,EAAEp2B,OAAO,IAKvCy2B,EAAM7G,GADN4G,EAAK7G,GAGEpB,KAAK6H,GAAMA,EAAIA,EAAEltB,QAAQstB,EAAG,QAC1BC,EAAIlI,KAAK6H,KAAMA,EAAIA,EAAEltB,QAAQutB,EAAI,SAI1CA,EAAM3G,GADN0G,EAAK3G,GAEEtB,KAAK6H,GAAI,CACd,IAAIS,EAAKL,EAAGM,KAAKV,IACjBI,EAAKjH,GACEhB,KAAKsI,EAAG,MACbL,EAAKzG,EACLqG,EAAIA,EAAEltB,QAAQstB,EAAG,IAEpB,MAAUC,EAAIlI,KAAK6H,KAElBC,GADIQ,EAAKJ,EAAIK,KAAKV,IACR,IACVK,EAAM/G,GACEnB,KAAK8H,KAGXK,EAAMzG,EACN0G,EAAMzG,GAFNuG,EAAMzG,GAGEzB,KAJR6H,EAAIC,GAIeD,GAAQ,IAClBM,EAAInI,KAAK6H,IAAMI,EAAKzG,EAASqG,EAAIA,EAAEltB,QAAQstB,EAAG,KAC9CG,EAAIpI,KAAK6H,KAAMA,GAAQ,OAiFpC,OA5EAI,EAAKrG,GACE5B,KAAK6H,KAGVA,GADAC,GADIQ,EAAKL,EAAGM,KAAKV,IACP,IACC,MAIbI,EAAKpG,GACE7B,KAAK6H,KAEVC,GADIQ,EAAKL,EAAGM,KAAKV,IACP,GACVE,EAASO,EAAG,IACZL,EAAKjH,GACEhB,KAAK8H,KACVD,EAAIC,EAAOjH,EAAUkH,MAKzBE,EAAKnG,GACE9B,KAAK6H,KAEVC,GADIQ,EAAKL,EAAGM,KAAKV,IACP,GACVE,EAASO,EAAG,IACZL,EAAKjH,GACEhB,KAAK8H,KACVD,EAAIC,EAAOhH,EAAUiH,KAMzBG,EAAMlG,GADNiG,EAAKlG,GAEE/B,KAAK6H,IAEVC,GADIQ,EAAKL,EAAGM,KAAKV,IACP,IACVI,EAAKhH,GACEjB,KAAK8H,KACVD,EAAIC,IAEGI,EAAIlI,KAAK6H,KAElBC,GADIQ,EAAKJ,EAAIK,KAAKV,IACR,GAAKS,EAAG,IAClBJ,EAAMjH,GACEjB,KAAK8H,KACXD,EAAIC,KAKRG,EAAKhG,GACEjC,KAAK6H,KAEVC,GADIQ,EAAKL,EAAGM,KAAKV,IACP,GAEVK,EAAMhH,EACNiH,EAAMhG,IAFN8F,EAAKhH,GAGEjB,KAAK8H,IAAUI,EAAIlI,KAAK8H,KAAWK,EAAInI,KAAK8H,MACjDD,EAAIC,IAKRI,EAAMjH,GADNgH,EAAK/F,GAEElC,KAAK6H,IAAMK,EAAIlI,KAAK6H,KACzBI,EAAKzG,EACLqG,EAAIA,EAAEltB,QAAQstB,EAAG,KAKJ,KAAXD,IACFH,EAAIG,EAAQ7iB,cAAgB0iB,EAAEp2B,OAAO,IAGhCo2B,CACR,EAEM,SAAU91B,GACf,OAAOA,EAAM2yB,OAAOtC,EACrB,GAGHC,EAAK+C,SAASG,iBAAiBlD,EAAKO,QAAS,WAmB7CP,EAAKmG,uBAAyB,SAAUC,GACtC,IAAIC,EAAQD,EAAUxoB,QAAO,SAAUmmB,EAAMuC,GAE3C,OADAvC,EAAKuC,GAAYA,EACVvC,CACR,GAAE,CAAC,GAEJ,OAAO,SAAUr0B,GACf,GAAIA,GAAS22B,EAAM32B,EAAMhP,cAAgBgP,EAAMhP,WAAY,OAAOgP,CACnE,CACF,EAeDswB,EAAKM,eAAiBN,EAAKmG,uBAAuB,CAChD,IACA,OACA,QACA,SACA,QACA,MACA,SACA,OACA,KACA,QACA,KACA,MACA,MACA,MACA,KACA,KACA,KACA,UACA,OACA,MACA,KACA,MACA,SACA,QACA,OACA,MACA,KACA,OACA,SACA,OACA,OACA,QACA,MACA,OACA,MACA,MACA,MACA,MACA,OACA,KACA,MACA,OACA,MACA,MACA,MACA,UACA,IACA,KACA,KACA,OACA,KACA,KACA,MACA,OACA,QACA,MACA,OACA,SACA,MACA,KACA,QACA,OACA,OACA,KACA,UACA,KACA,MACA,MACA,KACA,MACA,QACA,KACA,OACA,KACA,QACA,MACA,MACA,SACA,OACA,MACA,OACA,MACA,SACA,QACA,KACA,OACA,OACA,OACA,MACA,QACA,OACA,OACA,QACA,QACA,OACA,OACA,MACA,KACA,MACA,OACA,KACA,QACA,MACA,KACA,OACA,OACA,OACA,QACA,QACA,QACA,MACA,OACA,MACA,OACA,OACA,QACA,MACA,MACA,SAGFnG,EAAK+C,SAASG,iBAAiBlD,EAAKM,eAAgB,kBAqBpDN,EAAKK,QAAU,SAAU3wB,GACvB,OAAOA,EAAM2yB,QAAO,SAAU9lB,GAC5B,OAAOA,EAAEjE,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,GAC9C,GACF,EAED0nB,EAAK+C,SAASG,iBAAiBlD,EAAKK,QAAS,WA2B7CL,EAAKuG,SAAW,WACdj9B,KAAKk9B,OAAQ,EACbl9B,KAAKm9B,MAAQ,CAAC,EACdn9B,KAAKyb,GAAKib,EAAKuG,SAASG,QACxB1G,EAAKuG,SAASG,SAAW,CAC1B,EAUD1G,EAAKuG,SAASG,QAAU,EASxB1G,EAAKuG,SAAShI,UAAY,SAAU3O,GAGlC,IAFA,IAAIsQ,EAAU,IAAIF,EAAKuG,SAASpG,QAEvB/iC,EAAI,EAAGmlC,EAAM3S,EAAIt3B,OAAQ8E,EAAImlC,EAAKnlC,IACzC8iC,EAAQsE,OAAO5U,EAAIxyB,IAIrB,OADA8iC,EAAQyG,SACDzG,EAAQ0G,IAChB,EAWD5G,EAAKuG,SAASM,WAAa,SAAUC,GACnC,MAAI,iBAAkBA,EACb9G,EAAKuG,SAASQ,gBAAgBD,EAAOE,KAAMF,EAAOG,cAElDjH,EAAKuG,SAASnF,WAAW0F,EAAOE,KAE1C,EAiBDhH,EAAKuG,SAASQ,gBAAkB,SAAU3uC,EAAK6uC,GAS7C,IARA,IAAIL,EAAO,IAAI5G,EAAKuG,SAEhBjiC,EAAQ,CAAC,CACX8N,KAAMw0B,EACNM,eAAgBD,EAChB7uC,IAAKA,IAGAkM,EAAMhM,QAAQ,CACnB,IAAI6uC,EAAQ7iC,EAAM6C,MAGlB,GAAIggC,EAAM/uC,IAAIE,OAAS,EAAG,CACxB,IACI8uC,EADAC,EAAOF,EAAM/uC,IAAIwqC,OAAO,GAGxByE,KAAQF,EAAM/0B,KAAKq0B,MACrBW,EAAaD,EAAM/0B,KAAKq0B,MAAMY,IAE9BD,EAAa,IAAIpH,EAAKuG,SACtBY,EAAM/0B,KAAKq0B,MAAMY,GAAQD,GAGH,GAApBD,EAAM/uC,IAAIE,SACZ8uC,EAAWZ,OAAQ,GAGrBliC,EAAMzK,KAAK,CACTuY,KAAMg1B,EACNF,eAAgBC,EAAMD,eACtB9uC,IAAK+uC,EAAM/uC,IAAI8K,MAAM,IAExB,CAED,GAA4B,GAAxBikC,EAAMD,eAAV,CAKA,GAAI,MAAOC,EAAM/0B,KAAKq0B,MACpB,IAAIa,EAAgBH,EAAM/0B,KAAKq0B,MAAM,SAChC,CACDa,EAAgB,IAAItH,EAAKuG,SAC7BY,EAAM/0B,KAAKq0B,MAAM,KAAOa,CACzB,CAgCD,GA9BwB,GAApBH,EAAM/uC,IAAIE,SACZgvC,EAAcd,OAAQ,GAGxBliC,EAAMzK,KAAK,CACTuY,KAAMk1B,EACNJ,eAAgBC,EAAMD,eAAiB,EACvC9uC,IAAK+uC,EAAM/uC,MAMT+uC,EAAM/uC,IAAIE,OAAS,GACrBgM,EAAMzK,KAAK,CACTuY,KAAM+0B,EAAM/0B,KACZ80B,eAAgBC,EAAMD,eAAiB,EACvC9uC,IAAK+uC,EAAM/uC,IAAI8K,MAAM,KAMD,GAApBikC,EAAM/uC,IAAIE,SACZ6uC,EAAM/0B,KAAKo0B,OAAQ,GAMjBW,EAAM/uC,IAAIE,QAAU,EAAG,CACzB,GAAI,MAAO6uC,EAAM/0B,KAAKq0B,MACpB,IAAIc,EAAmBJ,EAAM/0B,KAAKq0B,MAAM,SACnC,CACDc,EAAmB,IAAIvH,EAAKuG,SAChCY,EAAM/0B,KAAKq0B,MAAM,KAAOc,CACzB,CAEuB,GAApBJ,EAAM/uC,IAAIE,SACZivC,EAAiBf,OAAQ,GAG3BliC,EAAMzK,KAAK,CACTuY,KAAMm1B,EACNL,eAAgBC,EAAMD,eAAiB,EACvC9uC,IAAK+uC,EAAM/uC,IAAI8K,MAAM,IAExB,CAKD,GAAIikC,EAAM/uC,IAAIE,OAAS,EAAG,CACxB,IAEIkvC,EAFAC,EAAQN,EAAM/uC,IAAIwqC,OAAO,GACzB8E,EAAQP,EAAM/uC,IAAIwqC,OAAO,GAGzB8E,KAASP,EAAM/0B,KAAKq0B,MACtBe,EAAgBL,EAAM/0B,KAAKq0B,MAAMiB,IAEjCF,EAAgB,IAAIxH,EAAKuG,SACzBY,EAAM/0B,KAAKq0B,MAAMiB,GAASF,GAGJ,GAApBL,EAAM/uC,IAAIE,SACZkvC,EAAchB,OAAQ,GAGxBliC,EAAMzK,KAAK,CACTuY,KAAMo1B,EACNN,eAAgBC,EAAMD,eAAiB,EACvC9uC,IAAKqvC,EAAQN,EAAM/uC,IAAI8K,MAAM,IAEhC,CAnFA,CAoFF,CAED,OAAO0jC,CACR,EAYD5G,EAAKuG,SAASnF,WAAa,SAAUhpC,GAYnC,IAXA,IAAIga,EAAO,IAAI4tB,EAAKuG,SAChBK,EAAOx0B,EAUFhV,EAAI,EAAGmlC,EAAMnqC,EAAIE,OAAQ8E,EAAImlC,EAAKnlC,IAAK,CAC9C,IAAIiqC,EAAOjvC,EAAIgF,GACXopC,EAASppC,GAAKmlC,EAAM,EAExB,GAAY,KAAR8E,EACFj1B,EAAKq0B,MAAMY,GAAQj1B,EACnBA,EAAKo0B,MAAQA,MAER,CACL,IAAI1nB,EAAO,IAAIkhB,EAAKuG,SACpBznB,EAAK0nB,MAAQA,EAEbp0B,EAAKq0B,MAAMY,GAAQvoB,EACnB1M,EAAO0M,CACR,CACF,CAED,OAAO8nB,CACR,EAYD5G,EAAKuG,SAASxrC,UAAU8iC,QAAU,WAQhC,IAPA,IAAIwI,EAAQ,GAER/hC,EAAQ,CAAC,CACXqjC,OAAQ,GACRv1B,KAAM9I,OAGDhF,EAAMhM,QAAQ,CACnB,IAAI6uC,EAAQ7iC,EAAM6C,MACds/B,EAAQ7rC,OAAOoG,KAAKmmC,EAAM/0B,KAAKq0B,OAC/BlE,EAAMkE,EAAMnuC,OAEZ6uC,EAAM/0B,KAAKo0B,QAKbW,EAAMQ,OAAO/E,OAAO,GACpByD,EAAMxsC,KAAKstC,EAAMQ,SAGnB,IAAK,IAAIvqC,EAAI,EAAGA,EAAImlC,EAAKnlC,IAAK,CAC5B,IAAIwqC,EAAOnB,EAAMrpC,GAEjBkH,EAAMzK,KAAK,CACT8tC,OAAQR,EAAMQ,OAAO3lC,OAAO4lC,GAC5Bx1B,KAAM+0B,EAAM/0B,KAAKq0B,MAAMmB,IAE1B,CACF,CAED,OAAOvB,CACR,EAYDrG,EAAKuG,SAASxrC,UAAU2F,SAAW,WASjC,GAAI4I,KAAKu+B,KACP,OAAOv+B,KAAKu+B,KAOd,IAJA,IAAIzvC,EAAMkR,KAAKk9B,MAAQ,IAAM,IACzBsB,EAASltC,OAAOoG,KAAKsI,KAAKm9B,OAAOvlC,OACjCqhC,EAAMuF,EAAOxvC,OAER8E,EAAI,EAAGA,EAAImlC,EAAKnlC,IAAK,CAC5B,IAAI+lC,EAAQ2E,EAAO1qC,GAGnBhF,EAAMA,EAAM+qC,EAFD75B,KAAKm9B,MAAMtD,GAEGpe,EAC1B,CAED,OAAO3sB,CACR,EAYD4nC,EAAKuG,SAASxrC,UAAUymC,UAAY,SAAU7jB,GAU5C,IATA,IAAI1kB,EAAS,IAAI+mC,EAAKuG,SAClBY,OAAQvuC,EAER0L,EAAQ,CAAC,CACXyjC,MAAOpqB,EACP1kB,OAAQA,EACRmZ,KAAM9I,OAGDhF,EAAMhM,QAAQ,CACnB6uC,EAAQ7iC,EAAM6C,MAWd,IALA,IAAI6gC,EAASptC,OAAOoG,KAAKmmC,EAAMY,MAAMtB,OACjCwB,EAAOD,EAAO1vC,OACd4vC,EAASttC,OAAOoG,KAAKmmC,EAAM/0B,KAAKq0B,OAChC0B,EAAOD,EAAO5vC,OAET49B,EAAI,EAAGA,EAAI+R,EAAM/R,IAGxB,IAFA,IAAIkS,EAAQJ,EAAO9R,GAEVrC,EAAI,EAAGA,EAAIsU,EAAMtU,IAAK,CAC7B,IAAIwU,EAAQH,EAAOrU,GAEnB,GAAIwU,GAASD,GAAkB,KAATA,EAAc,CAClC,IAAIh2B,EAAO+0B,EAAM/0B,KAAKq0B,MAAM4B,GACxBN,EAAQZ,EAAMY,MAAMtB,MAAM2B,GAC1B5B,EAAQp0B,EAAKo0B,OAASuB,EAAMvB,MAC5B1nB,OAAOlmB,EAEPyvC,KAASlB,EAAMluC,OAAOwtC,OAIxB3nB,EAAOqoB,EAAMluC,OAAOwtC,MAAM4B,IACrB7B,MAAQ1nB,EAAK0nB,OAASA,IAM3B1nB,EAAO,IAAIkhB,EAAKuG,UACXC,MAAQA,EACbW,EAAMluC,OAAOwtC,MAAM4B,GAASvpB,GAG9Bxa,EAAMzK,KAAK,CACTkuC,MAAOA,EACP9uC,OAAQ6lB,EACR1M,KAAMA,GAET,CACF,CAEJ,CAED,OAAOnZ,CACR,EACD+mC,EAAKuG,SAASpG,QAAU,WACtB72B,KAAKg/B,aAAe,GACpBh/B,KAAKs9B,KAAO,IAAI5G,EAAKuG,SACrBj9B,KAAKi/B,eAAiB,GACtBj/B,KAAKk/B,eAAiB,CAAC,CACxB,EAEDxI,EAAKuG,SAASpG,QAAQplC,UAAUypC,OAAS,SAAUiE,GACjD,IAAIr2B,EACAs2B,EAAe,EAEnB,GAAID,EAAOn/B,KAAKg/B,aACd,MAAM,IAAI/sC,MAAO,+BAGnB,IAAK,IAAI6B,EAAI,EAAGA,EAAIqrC,EAAKnwC,QAAU8E,EAAIkM,KAAKg/B,aAAahwC,QACnDmwC,EAAKrrC,IAAMkM,KAAKg/B,aAAalrC,GAD8BA,IAE/DsrC,IAGFp/B,KAAKq/B,SAASD,GAGZt2B,EADgC,GAA9B9I,KAAKi/B,eAAejwC,OACfgR,KAAKs9B,KAELt9B,KAAKi/B,eAAej/B,KAAKi/B,eAAejwC,OAAS,GAAGswC,MAG7D,IAASxrC,EAAIsrC,EAActrC,EAAIqrC,EAAKnwC,OAAQ8E,IAAK,CAC/C,IAAIyrC,EAAW,IAAI7I,EAAKuG,SACpBc,EAAOoB,EAAKrrC,GAEhBgV,EAAKq0B,MAAMY,GAAQwB,EAEnBv/B,KAAKi/B,eAAe1uC,KAAK,CACvBivC,OAAQ12B,EACRi1B,KAAMA,EACNuB,MAAOC,IAGTz2B,EAAOy2B,CACR,CAEDz2B,EAAKo0B,OAAQ,EACbl9B,KAAKg/B,aAAeG,CACrB,EAEDzI,EAAKuG,SAASpG,QAAQplC,UAAU4rC,OAAS,WACvCr9B,KAAKq/B,SAAS,EACf,EAED3I,EAAKuG,SAASpG,QAAQplC,UAAU4tC,SAAW,SAAUI,GACnD,IAAK,IAAI3rC,EAAIkM,KAAKi/B,eAAejwC,OAAS,EAAG8E,GAAK2rC,EAAQ3rC,IAAK,CAC7D,IAAIgV,EAAO9I,KAAKi/B,eAAenrC,GAC3B4rC,EAAW52B,EAAKw2B,MAAMloC,WAEtBsoC,KAAY1/B,KAAKk/B,eACnBp2B,EAAK02B,OAAOrC,MAAMr0B,EAAKi1B,MAAQ/9B,KAAKk/B,eAAeQ,IAInD52B,EAAKw2B,MAAMf,KAAOmB,EAElB1/B,KAAKk/B,eAAeQ,GAAY52B,EAAKw2B,OAGvCt/B,KAAKi/B,eAAephC,KACrB,CACF,EAsBD64B,EAAKiJ,MAAQ,SAAUC,GACrB5/B,KAAK6/B,cAAgBD,EAAMC,cAC3B7/B,KAAK8/B,aAAeF,EAAME,aAC1B9/B,KAAK+/B,SAAWH,EAAMG,SACtB//B,KAAKggC,OAASJ,EAAMI,OACpBhgC,KAAK82B,SAAW8I,EAAM9I,QACvB,EAyEDJ,EAAKiJ,MAAMluC,UAAUwuC,OAAS,SAAUC,GACtC,OAAOlgC,KAAKmgC,OAAM,SAAUA,GACb,IAAIzJ,EAAK0J,YAAYF,EAAaC,GACxC3/B,OACR,GACF,EA2BDk2B,EAAKiJ,MAAMluC,UAAU0uC,MAAQ,SAAU/N,GAoBrC,IAZA,IAAI+N,EAAQ,IAAIzJ,EAAK2J,MAAMrgC,KAAKggC,QAC5BM,EAAiBhvC,OAAOC,OAAO,MAC/BgvC,EAAejvC,OAAOC,OAAO,MAC7BivC,EAAiBlvC,OAAOC,OAAO,MAC/BkvC,EAAkBnvC,OAAOC,OAAO,MAChCmvC,EAAoBpvC,OAAOC,OAAO,MAO7BuC,EAAI,EAAGA,EAAIkM,KAAKggC,OAAOhxC,OAAQ8E,IACtCysC,EAAavgC,KAAKggC,OAAOlsC,IAAM,IAAI4iC,EAAKmE,OAG1CzI,EAAGv4B,KAAKsmC,EAAOA,GAEf,IAASrsC,EAAI,EAAGA,EAAIqsC,EAAMQ,QAAQ3xC,OAAQ8E,IAAK,CAS7C,IAAI0pC,EAAS2C,EAAMQ,QAAQ7sC,GACvB8sC,EAAQ,KACRC,EAAgBnK,EAAKsB,IAAIM,MAG3BsI,EADEpD,EAAOsD,YACD9gC,KAAK82B,SAAS6D,UAAU6C,EAAOE,KAAM,CAC3CsC,OAAQxC,EAAOwC,SAGT,CAACxC,EAAOE,MAGlB,IAAK,IAAIljB,EAAI,EAAGA,EAAIomB,EAAM5xC,OAAQwrB,IAAK,CACrC,IAAIkjB,EAAOkD,EAAMpmB,GAQjBgjB,EAAOE,KAAOA,EAOd,IAAIqD,EAAerK,EAAKuG,SAASM,WAAWC,GACxCwD,EAAgBhhC,KAAK+/B,SAAS7H,UAAU6I,GAAcxM,UAQ1D,GAA6B,IAAzByM,EAAchyC,QAAgBwuC,EAAOyD,WAAavK,EAAK2J,MAAMY,SAASC,SAAU,CAClF,IAAK,IAAIxG,EAAI,EAAGA,EAAI8C,EAAOwC,OAAOhxC,OAAQ0rC,IAAK,CAE7C+F,EADIU,EAAQ3D,EAAOwC,OAAOtF,IACDhE,EAAKsB,IAAIM,KACnC,CAED,KACD,CAED,IAAK,IAAIl/B,EAAI,EAAGA,EAAI4nC,EAAchyC,OAAQoK,IAKxC,KAAIgoC,EAAeJ,EAAc5nC,GAC7Bs/B,EAAU14B,KAAK6/B,cAAcuB,GAC7BC,EAAY3I,EAAQ4I,OAExB,IAAS5G,EAAI,EAAGA,EAAI8C,EAAOwC,OAAOhxC,OAAQ0rC,IAAK,CAS7C,IACI6G,EAAe7I,EADfyI,EAAQ3D,EAAOwC,OAAOtF,IAEtB8G,EAAuBlwC,OAAOoG,KAAK6pC,GACnCE,EAAYL,EAAe,IAAMD,EACjCO,EAAuB,IAAIhL,EAAKsB,IAAIwJ,GAoBxC,GAbIhE,EAAOyD,UAAYvK,EAAK2J,MAAMY,SAASC,WACzCL,EAAgBA,EAAczI,MAAMsJ,QAELpyC,IAA3BmxC,EAAgBU,KAClBV,EAAgBU,GAASzK,EAAKsB,IAAI57B,WASlCohC,EAAOyD,UAAYvK,EAAK2J,MAAMY,SAASU,YA4B3C,GANApB,EAAaY,GAAO/F,OAAOiG,EAAW7D,EAAOoE,OAAO,SAAUrtB,EAAGF,GAAK,OAAOE,EAAIF,CAAG,KAMhFmsB,EAAeiB,GAAnB,CAIA,IAAK,IAAInW,EAAI,EAAGA,EAAIkW,EAAqBxyC,OAAQs8B,IAAK,CAOpD,IAGIuW,EAHAC,EAAsBN,EAAqBlW,GAC3CyW,EAAmB,IAAIrL,EAAKc,SAAUsK,EAAqBX,GAC3DrI,EAAWyI,EAAaO,QAG4BxyC,KAAnDuyC,EAAavB,EAAeyB,IAC/BzB,EAAeyB,GAAoB,IAAIrL,EAAKsL,UAAWZ,EAAcD,EAAOrI,GAE5E+I,EAAWhX,IAAIuW,EAAcD,EAAOrI,EAGvC,CAED0H,EAAeiB,IAAa,CAtB3B,YA7BkCnyC,IAA7BoxC,EAAkBS,KACpBT,EAAkBS,GAASzK,EAAKsB,IAAIM,OAGtCoI,EAAkBS,GAAST,EAAkBS,GAAO/I,MAAMsJ,EAgD7D,CA1FD,CA4FH,CAQD,GAAIlE,EAAOyD,WAAavK,EAAK2J,MAAMY,SAASC,SAC1C,IAASxG,EAAI,EAAGA,EAAI8C,EAAOwC,OAAOhxC,OAAQ0rC,IAAK,CAE7C+F,EADIU,EAAQ3D,EAAOwC,OAAOtF,IACD+F,EAAgBU,GAAOjJ,UAAU2I,EAC3D,CAEJ,CAOD,IAAIoB,EAAqBvL,EAAKsB,IAAI57B,SAC9B8lC,EAAuBxL,EAAKsB,IAAIM,MAEpC,IAASxkC,EAAI,EAAGA,EAAIkM,KAAKggC,OAAOhxC,OAAQ8E,IAAK,CAC3C,IAAIqtC,EAEAV,EAFAU,EAAQnhC,KAAKggC,OAAOlsC,MAGtBmuC,EAAqBA,EAAmB/J,UAAUuI,EAAgBU,KAGhET,EAAkBS,KACpBe,EAAuBA,EAAqB9J,MAAMsI,EAAkBS,IAEvE,CAED,IAAIgB,EAAoB7wC,OAAOoG,KAAK4oC,GAChC8B,EAAU,GACVC,EAAU/wC,OAAOC,OAAO,MAY5B,GAAI4uC,EAAMmC,YAAa,CACrBH,EAAoB7wC,OAAOoG,KAAKsI,KAAK8/B,cAErC,IAAShsC,EAAI,EAAGA,EAAIquC,EAAkBnzC,OAAQ8E,IAAK,CAC7CiuC,EAAmBI,EAAkBruC,GAAzC,IACIikC,EAAWrB,EAAKc,SAASM,WAAWiK,GACxCzB,EAAeyB,GAAoB,IAAIrL,EAAKsL,SAC7C,CACF,CAED,IAASluC,EAAI,EAAGA,EAAIquC,EAAkBnzC,OAAQ8E,IAAK,CASjD,IACI2jC,GADAM,EAAWrB,EAAKc,SAASM,WAAWqK,EAAkBruC,KACpC2jC,OAEtB,GAAKwK,EAAmB5J,SAASZ,KAI7ByK,EAAqB7J,SAASZ,GAAlC,CAIA,IAEI8K,EAFAC,EAAcxiC,KAAK8/B,aAAa/H,GAChC0K,EAAQlC,EAAaxI,EAASL,WAAWsE,WAAWwG,GAGxD,QAAqClzC,KAAhCizC,EAAWF,EAAQ5K,IACtB8K,EAASE,OAASA,EAClBF,EAASG,UAAUC,QAAQrC,EAAevI,QACrC,CACL,IAAIhzB,EAAQ,CACV69B,IAAKnL,EACLgL,MAAOA,EACPC,UAAWpC,EAAevI,IAE5BsK,EAAQ5K,GAAU1yB,EAClBq9B,EAAQ7xC,KAAKwU,EACd,CAjBA,CAkBF,CAKD,OAAOq9B,EAAQxqC,MAAK,SAAU2c,EAAGF,GAC/B,OAAOA,EAAEouB,MAAQluB,EAAEkuB,KACpB,GACF,EAUD/L,EAAKiJ,MAAMluC,UAAU+iC,OAAS,WAC5B,IAAIqL,EAAgBvuC,OAAOoG,KAAKsI,KAAK6/B,eAClCjoC,OACAmG,KAAI,SAAU2/B,GACb,MAAO,CAACA,EAAM19B,KAAK6/B,cAAcnC,GAClC,GAAE19B,MAED8/B,EAAexuC,OAAOoG,KAAKsI,KAAK8/B,cACjC/hC,KAAI,SAAU6kC,GACb,MAAO,CAACA,EAAK5iC,KAAK8/B,aAAa8C,GAAKpO,SACrC,GAAEx0B,MAEL,MAAO,CACLN,QAASg3B,EAAKh3B,QACdsgC,OAAQhgC,KAAKggC,OACbF,aAAcA,EACdD,cAAeA,EACf/I,SAAU92B,KAAK82B,SAAStC,SAE3B,EAQDkC,EAAKiJ,MAAM5F,KAAO,SAAU8I,GAC1B,IAAIjD,EAAQ,CAAC,EACTE,EAAe,CAAC,EAChBgD,EAAoBD,EAAgB/C,aACpCD,EAAgBvuC,OAAOC,OAAO,MAC9BwxC,EAA0BF,EAAgBhD,cAC1CmD,EAAkB,IAAItM,EAAKuG,SAASpG,QACpCC,EAAWJ,EAAK+C,SAASM,KAAK8I,EAAgB/L,UAE9C+L,EAAgBnjC,SAAWg3B,EAAKh3B,SAClCg3B,EAAKS,MAAMpvB,KAAK,4EAA8E2uB,EAAKh3B,QAAU,sCAAwCmjC,EAAgBnjC,QAAU,KAGjL,IAAK,IAAI5L,EAAI,EAAGA,EAAIgvC,EAAkB9zC,OAAQ8E,IAAK,CACjD,IACI8uC,GADAK,EAAQH,EAAkBhvC,IACd,GACZmkC,EAAWgL,EAAM,GAErBnD,EAAa8C,GAAO,IAAIlM,EAAKmE,OAAO5C,EACrC,CAED,IAASnkC,EAAI,EAAGA,EAAIivC,EAAwB/zC,OAAQ8E,IAAK,CACvD,IAAImvC,EACAvF,GADAuF,EAAQF,EAAwBjvC,IACnB,GACb4kC,EAAUuK,EAAM,GAEpBD,EAAgB9H,OAAOwC,GACvBmC,EAAcnC,GAAQhF,CACvB,CAWD,OATAsK,EAAgB3F,SAEhBuC,EAAMI,OAAS6C,EAAgB7C,OAE/BJ,EAAME,aAAeA,EACrBF,EAAMC,cAAgBA,EACtBD,EAAMG,SAAWiD,EAAgB1F,KACjCsC,EAAM9I,SAAWA,EAEV,IAAIJ,EAAKiJ,MAAMC,EACvB,EA8BDlJ,EAAKG,QAAU,WACb72B,KAAKkjC,KAAO,KACZljC,KAAKmjC,QAAU7xC,OAAOC,OAAO,MAC7ByO,KAAKojC,WAAa9xC,OAAOC,OAAO,MAChCyO,KAAK6/B,cAAgBvuC,OAAOC,OAAO,MACnCyO,KAAKqjC,qBAAuB,CAAC,EAC7BrjC,KAAKsjC,aAAe,CAAC,EACrBtjC,KAAKg5B,UAAYtC,EAAKsC,UACtBh5B,KAAK82B,SAAW,IAAIJ,EAAK+C,SACzBz5B,KAAKk3B,eAAiB,IAAIR,EAAK+C,SAC/Bz5B,KAAK24B,cAAgB,EACrB34B,KAAKxQ,GAAK,IACVwQ,KAAKujC,IAAM,IACXvjC,KAAKqhC,UAAY,EACjBrhC,KAAKwjC,kBAAoB,EAC1B,EAcD9M,EAAKG,QAAQplC,UAAUmxC,IAAM,SAAUA,GACrC5iC,KAAKkjC,KAAON,CACb,EAkCDlM,EAAKG,QAAQplC,UAAU0vC,MAAQ,SAAUzJ,EAAW+L,GAClD,GAAI,KAAKpP,KAAKqD,GACZ,MAAM,IAAIl8B,WAAY,UAAYk8B,EAAY,oCAGhD13B,KAAKmjC,QAAQzL,GAAa+L,GAAc,CAAC,CAC1C,EAUD/M,EAAKG,QAAQplC,UAAU4iB,EAAI,SAAUqvB,GAEjC1jC,KAAKxQ,GADHk0C,EAAS,EACD,EACDA,EAAS,EACR,EAEAA,CAEb,EASDhN,EAAKG,QAAQplC,UAAUkyC,GAAK,SAAUD,GACpC1jC,KAAKujC,IAAMG,CACZ,EAmBDhN,EAAKG,QAAQplC,UAAUo5B,IAAM,SAAU+Y,EAAKH,GAC1C,IAAIhM,EAASmM,EAAI5jC,KAAKkjC,MAClBlD,EAAS1uC,OAAOoG,KAAKsI,KAAKmjC,SAE9BnjC,KAAKojC,WAAW3L,GAAUgM,GAAc,CAAC,EACzCzjC,KAAK24B,eAAiB,EAEtB,IAAK,IAAI7kC,EAAI,EAAGA,EAAIksC,EAAOhxC,OAAQ8E,IAAK,CACtC,IAAI4jC,EAAYsI,EAAOlsC,GACnB+vC,EAAY7jC,KAAKmjC,QAAQzL,GAAWmM,UACpC1C,EAAQ0C,EAAYA,EAAUD,GAAOA,EAAIlM,GACzCwB,EAASl5B,KAAKg5B,UAAUmI,EAAO,CAC7BnB,OAAQ,CAACtI,KAEXkJ,EAAQ5gC,KAAK82B,SAASvT,IAAI2V,GAC1BnB,EAAW,IAAIrB,EAAKc,SAAUC,EAAQC,GACtCoM,EAAaxyC,OAAOC,OAAO,MAE/ByO,KAAKqjC,qBAAqBtL,GAAY+L,EACtC9jC,KAAKsjC,aAAavL,GAAY,EAG9B/3B,KAAKsjC,aAAavL,IAAa6I,EAAM5xC,OAGrC,IAAK,IAAIoK,EAAI,EAAGA,EAAIwnC,EAAM5xC,OAAQoK,IAAK,CACrC,IAAIskC,EAAOkD,EAAMxnC,GAUjB,GARwB9J,MAApBw0C,EAAWpG,KACboG,EAAWpG,GAAQ,GAGrBoG,EAAWpG,IAAS,EAIYpuC,MAA5B0Q,KAAK6/B,cAAcnC,GAAoB,CACzC,IAAIhF,EAAUpnC,OAAOC,OAAO,MAC5BmnC,EAAO,OAAa14B,KAAKqhC,UACzBrhC,KAAKqhC,WAAa,EAElB,IAAK,IAAI3G,EAAI,EAAGA,EAAIsF,EAAOhxC,OAAQ0rC,IACjChC,EAAQsH,EAAOtF,IAAMppC,OAAOC,OAAO,MAGrCyO,KAAK6/B,cAAcnC,GAAQhF,CAC5B,CAGkDppC,MAA/C0Q,KAAK6/B,cAAcnC,GAAMhG,GAAWD,KACtCz3B,KAAK6/B,cAAcnC,GAAMhG,GAAWD,GAAUnmC,OAAOC,OAAO,OAK9D,IAAK,IAAI+5B,EAAI,EAAGA,EAAItrB,KAAKwjC,kBAAkBx0C,OAAQs8B,IAAK,CACtD,IAAIyY,EAAc/jC,KAAKwjC,kBAAkBlY,GACrCwN,EAAW4E,EAAK5E,SAASiL,GAEmCz0C,MAA5D0Q,KAAK6/B,cAAcnC,GAAMhG,GAAWD,GAAQsM,KAC9C/jC,KAAK6/B,cAAcnC,GAAMhG,GAAWD,GAAQsM,GAAe,IAG7D/jC,KAAK6/B,cAAcnC,GAAMhG,GAAWD,GAAQsM,GAAaxzC,KAAKuoC,EAC/D,CACF,CAEF,CACF,EAODpC,EAAKG,QAAQplC,UAAUuyC,6BAA+B,WAOpD,IALA,IAAIC,EAAY3yC,OAAOoG,KAAKsI,KAAKsjC,cAC7BY,EAAiBD,EAAUj1C,OAC3Bm1C,EAAc,CAAC,EACfC,EAAqB,CAAC,EAEjBtwC,EAAI,EAAGA,EAAIowC,EAAgBpwC,IAAK,CACvC,IAAIikC,EAAWrB,EAAKc,SAASM,WAAWmM,EAAUnwC,IAC9CqtC,EAAQpJ,EAASL,UAErB0M,EAAmBjD,KAAWiD,EAAmBjD,GAAS,GAC1DiD,EAAmBjD,IAAU,EAE7BgD,EAAYhD,KAAWgD,EAAYhD,GAAS,GAC5CgD,EAAYhD,IAAUnhC,KAAKsjC,aAAavL,EACzC,CAED,IAAIiI,EAAS1uC,OAAOoG,KAAKsI,KAAKmjC,SAE9B,IAASrvC,EAAI,EAAGA,EAAIksC,EAAOhxC,OAAQ8E,IAAK,CACtC,IAAI4jC,EAAYsI,EAAOlsC,GACvBqwC,EAAYzM,GAAayM,EAAYzM,GAAa0M,EAAmB1M,EACtE,CAED13B,KAAKqkC,mBAAqBF,CAC3B,EAODzN,EAAKG,QAAQplC,UAAU6yC,mBAAqB,WAM1C,IALA,IAAIxE,EAAe,CAAC,EAChBmE,EAAY3yC,OAAOoG,KAAKsI,KAAKqjC,sBAC7BkB,EAAkBN,EAAUj1C,OAC5Bw1C,EAAelzC,OAAOC,OAAO,MAExBuC,EAAI,EAAGA,EAAIywC,EAAiBzwC,IAAK,CAaxC,IAZA,IAAIikC,EAAWrB,EAAKc,SAASM,WAAWmM,EAAUnwC,IAC9C4jC,EAAYK,EAASL,UACrB+M,EAAczkC,KAAKsjC,aAAavL,GAChCyK,EAAc,IAAI9L,EAAKmE,OACvB6J,EAAkB1kC,KAAKqjC,qBAAqBtL,GAC5C6I,EAAQtvC,OAAOoG,KAAKgtC,GACpBC,EAAc/D,EAAM5xC,OAGpB41C,EAAa5kC,KAAKmjC,QAAQzL,GAAWkK,OAAS,EAC9CiD,EAAW7kC,KAAKojC,WAAWrL,EAASN,QAAQmK,OAAS,EAEhDxoC,EAAI,EAAGA,EAAIurC,EAAavrC,IAAK,CACpC,IAGIq/B,EAAKgK,EAAOqC,EAHZpH,EAAOkD,EAAMxnC,GACb2rC,EAAKL,EAAgBhH,GACrB2D,EAAYrhC,KAAK6/B,cAAcnC,GAAM4D,YAGdhyC,IAAvBk1C,EAAa9G,IACfjF,EAAM/B,EAAK+B,IAAIz4B,KAAK6/B,cAAcnC,GAAO19B,KAAK24B,eAC9C6L,EAAa9G,GAAQjF,GAErBA,EAAM+L,EAAa9G,GAGrB+E,EAAQhK,IAAQz4B,KAAKujC,IAAM,GAAKwB,IAAO/kC,KAAKujC,KAAO,EAAIvjC,KAAKxQ,GAAKwQ,KAAKxQ,IAAMi1C,EAAczkC,KAAKqkC,mBAAmB3M,KAAeqN,GACjItC,GAASmC,EACTnC,GAASoC,EACTC,EAAqB72C,KAAK+2C,MAAc,IAARvC,GAAgB,IAQhDD,EAAYtH,OAAOmG,EAAWyD,EAC/B,CAEDhF,EAAa/H,GAAYyK,CAC1B,CAEDxiC,KAAK8/B,aAAeA,CACrB,EAODpJ,EAAKG,QAAQplC,UAAUwzC,eAAiB,WACtCjlC,KAAK+/B,SAAWrJ,EAAKuG,SAAShI,UAC5B3jC,OAAOoG,KAAKsI,KAAK6/B,eAAejoC,OAEnC,EAUD8+B,EAAKG,QAAQplC,UAAUyrB,MAAQ,WAK7B,OAJAld,KAAKgkC,+BACLhkC,KAAKskC,qBACLtkC,KAAKilC,iBAEE,IAAIvO,EAAKiJ,MAAM,CACpBE,cAAe7/B,KAAK6/B,cACpBC,aAAc9/B,KAAK8/B,aACnBC,SAAU//B,KAAK+/B,SACfC,OAAQ1uC,OAAOoG,KAAKsI,KAAKmjC,SACzBrM,SAAU92B,KAAKk3B,gBAElB,EAgBDR,EAAKG,QAAQplC,UAAUyzC,IAAM,SAAU9S,GACrC,IAAI7Z,EAAOvhB,MAAMvF,UAAUmI,MAAMC,KAAKoI,UAAW,GACjDsW,EAAKqK,QAAQ5iB,MACboyB,EAAGvhC,MAAMmP,KAAMuY,EAChB,EAaDme,EAAKsL,UAAY,SAAUtE,EAAMyD,EAAOrI,GAStC,IARA,IAAIqM,EAAiB7zC,OAAOC,OAAO,MAC/B6zC,EAAe9zC,OAAOoG,KAAKohC,GAAY,CAAC,GAOnChlC,EAAI,EAAGA,EAAIsxC,EAAap2C,OAAQ8E,IAAK,CAC5C,IAAIgE,EAAMstC,EAAatxC,GACvBqxC,EAAertC,GAAOghC,EAAShhC,GAAK8B,OACrC,CAEDoG,KAAK84B,SAAWxnC,OAAOC,OAAO,WAEjBjC,IAATouC,IACF19B,KAAK84B,SAAS4E,GAAQpsC,OAAOC,OAAO,MACpCyO,KAAK84B,SAAS4E,GAAMyD,GAASgE,EAEhC,EAWDzO,EAAKsL,UAAUvwC,UAAUkxC,QAAU,SAAU0C,GAG3C,IAFA,IAAIzE,EAAQtvC,OAAOoG,KAAK2tC,EAAevM,UAE9BhlC,EAAI,EAAGA,EAAI8sC,EAAM5xC,OAAQ8E,IAAK,CACrC,IAAI4pC,EAAOkD,EAAM9sC,GACbksC,EAAS1uC,OAAOoG,KAAK2tC,EAAevM,SAAS4E,IAEtBpuC,MAAvB0Q,KAAK84B,SAAS4E,KAChB19B,KAAK84B,SAAS4E,GAAQpsC,OAAOC,OAAO,OAGtC,IAAK,IAAI6H,EAAI,EAAGA,EAAI4mC,EAAOhxC,OAAQoK,IAAK,CACtC,IAAI+nC,EAAQnB,EAAO5mC,GACf1B,EAAOpG,OAAOoG,KAAK2tC,EAAevM,SAAS4E,GAAMyD,IAEnB7xC,MAA9B0Q,KAAK84B,SAAS4E,GAAMyD,KACtBnhC,KAAK84B,SAAS4E,GAAMyD,GAAS7vC,OAAOC,OAAO,OAG7C,IAAK,IAAImpC,EAAI,EAAGA,EAAIhjC,EAAK1I,OAAQ0rC,IAAK,CACpC,IAAI5iC,EAAMJ,EAAKgjC,GAEwBprC,MAAnC0Q,KAAK84B,SAAS4E,GAAMyD,GAAOrpC,GAC7BkI,KAAK84B,SAAS4E,GAAMyD,GAAOrpC,GAAOutC,EAAevM,SAAS4E,GAAMyD,GAAOrpC,GAEvEkI,KAAK84B,SAAS4E,GAAMyD,GAAOrpC,GAAOkI,KAAK84B,SAAS4E,GAAMyD,GAAOrpC,GAAKY,OAAO2sC,EAAevM,SAAS4E,GAAMyD,GAAOrpC,GAGjH,CACF,CACF,CACF,EASD4+B,EAAKsL,UAAUvwC,UAAUo5B,IAAM,SAAU6S,EAAMyD,EAAOrI,GACpD,KAAM4E,KAAQ19B,KAAK84B,UAGjB,OAFA94B,KAAK84B,SAAS4E,GAAQpsC,OAAOC,OAAO,WACpCyO,KAAK84B,SAAS4E,GAAMyD,GAASrI,GAI/B,GAAMqI,KAASnhC,KAAK84B,SAAS4E,GAO7B,IAFA,IAAI0H,EAAe9zC,OAAOoG,KAAKohC,GAEtBhlC,EAAI,EAAGA,EAAIsxC,EAAap2C,OAAQ8E,IAAK,CAC5C,IAAIgE,EAAMstC,EAAatxC,GAEnBgE,KAAOkI,KAAK84B,SAAS4E,GAAMyD,GAC7BnhC,KAAK84B,SAAS4E,GAAMyD,GAAOrpC,GAAOkI,KAAK84B,SAAS4E,GAAMyD,GAAOrpC,GAAKY,OAAOogC,EAAShhC,IAElFkI,KAAK84B,SAAS4E,GAAMyD,GAAOrpC,GAAOghC,EAAShhC,EAE9C,MAdCkI,KAAK84B,SAAS4E,GAAMyD,GAASrI,CAehC,EAYDpC,EAAK2J,MAAQ,SAAUiF,GACrBtlC,KAAK2gC,QAAU,GACf3gC,KAAKslC,UAAYA,CAClB,EA0BD5O,EAAK2J,MAAMkF,SAAW,IAAI50C,OAAQ,KAClC+lC,EAAK2J,MAAMkF,SAASC,KAAO,EAC3B9O,EAAK2J,MAAMkF,SAASE,QAAU,EAC9B/O,EAAK2J,MAAMkF,SAASG,SAAW,EAa/BhP,EAAK2J,MAAMY,SAAW,CAIpB0E,SAAU,EAMVzE,SAAU,EAMVS,WAAY,GA0BdjL,EAAK2J,MAAM5uC,UAAU+rC,OAAS,SAAUA,GA+BtC,MA9BM,WAAYA,IAChBA,EAAOwC,OAAShgC,KAAKslC,WAGjB,UAAW9H,IACfA,EAAOoE,MAAQ,GAGX,gBAAiBpE,IACrBA,EAAOsD,aAAc,GAGjB,aAActD,IAClBA,EAAO+H,SAAW7O,EAAK2J,MAAMkF,SAASC,MAGnChI,EAAO+H,SAAW7O,EAAK2J,MAAMkF,SAASE,SAAajI,EAAOE,KAAKpE,OAAO,IAAM5C,EAAK2J,MAAMkF,WAC1F/H,EAAOE,KAAO,IAAMF,EAAOE,MAGxBF,EAAO+H,SAAW7O,EAAK2J,MAAMkF,SAASG,UAAclI,EAAOE,KAAK9jC,OAAO,IAAM88B,EAAK2J,MAAMkF,WAC3F/H,EAAOE,KAAYF,EAAOE,KAAO,KAG7B,aAAcF,IAClBA,EAAOyD,SAAWvK,EAAK2J,MAAMY,SAAS0E,UAGxC3lC,KAAK2gC,QAAQpwC,KAAKitC,GAEXx9B,IACR,EASD02B,EAAK2J,MAAM5uC,UAAU6wC,UAAY,WAC/B,IAAK,IAAIxuC,EAAI,EAAGA,EAAIkM,KAAK2gC,QAAQ3xC,OAAQ8E,IACvC,GAAIkM,KAAK2gC,QAAQ7sC,GAAGmtC,UAAYvK,EAAK2J,MAAMY,SAASU,WAClD,OAAO,EAIX,OAAO,CACR,EA4BDjL,EAAK2J,MAAM5uC,UAAUisC,KAAO,SAAUA,EAAMl5B,GAC1C,GAAIxN,MAAMC,QAAQymC,GAEhB,OADAA,EAAK93B,SAAQ,SAAUwrB,GAAKpxB,KAAK09B,KAAKtM,EAAGsF,EAAKS,MAAMG,MAAM9yB,GAAW,GAAExE,MAChEA,KAGT,IAAIw9B,EAASh5B,GAAW,CAAC,EAKzB,OAJAg5B,EAAOE,KAAOA,EAAKtmC,WAEnB4I,KAAKw9B,OAAOA,GAELx9B,IACR,EACD02B,EAAKkP,gBAAkB,SAAUz0C,EAASgmB,EAAOhnB,GAC/C6P,KAAKjO,KAAO,kBACZiO,KAAK7O,QAAUA,EACf6O,KAAKmX,MAAQA,EACbnX,KAAK7P,IAAMA,CACZ,EAEDumC,EAAKkP,gBAAgBn0C,UAAY,IAAIQ,MACrCykC,EAAKmP,WAAa,SAAU/2C,GAC1BkR,KAAK8lC,QAAU,GACf9lC,KAAKlR,IAAMA,EACXkR,KAAKhR,OAASF,EAAIE,OAClBgR,KAAK9Q,IAAM,EACX8Q,KAAKmX,MAAQ,EACbnX,KAAK+lC,oBAAsB,EAC5B,EAEDrP,EAAKmP,WAAWp0C,UAAU8xB,IAAM,WAG9B,IAFA,IAAI7lB,EAAQg5B,EAAKmP,WAAWG,QAErBtoC,GACLA,EAAQA,EAAMsC,KAEjB,EAED02B,EAAKmP,WAAWp0C,UAAUw0C,YAAc,WAKtC,IAJA,IAAIC,EAAY,GACZ9M,EAAap5B,KAAKmX,MAClBgiB,EAAWn5B,KAAK9Q,IAEX4E,EAAI,EAAGA,EAAIkM,KAAK+lC,oBAAoB/2C,OAAQ8E,IACnDqlC,EAAWn5B,KAAK+lC,oBAAoBjyC,GACpCoyC,EAAU31C,KAAKyP,KAAKlR,IAAI8K,MAAMw/B,EAAYD,IAC1CC,EAAaD,EAAW,EAM1B,OAHA+M,EAAU31C,KAAKyP,KAAKlR,IAAI8K,MAAMw/B,EAAYp5B,KAAK9Q,MAC/C8Q,KAAK+lC,oBAAoB/2C,OAAS,EAE3Bk3C,EAAU/6B,KAAK,GACvB,EAEDurB,EAAKmP,WAAWp0C,UAAU00C,KAAO,SAAUl1C,GACzC+O,KAAK8lC,QAAQv1C,KAAK,CAChBU,KAAMA,EACNnC,IAAKkR,KAAKimC,cACV9uB,MAAOnX,KAAKmX,MACZhnB,IAAK6P,KAAK9Q,MAGZ8Q,KAAKmX,MAAQnX,KAAK9Q,GACnB,EAEDwnC,EAAKmP,WAAWp0C,UAAU20C,gBAAkB,WAC1CpmC,KAAK+lC,oBAAoBx1C,KAAKyP,KAAK9Q,IAAM,GACzC8Q,KAAK9Q,KAAO,CACb,EAEDwnC,EAAKmP,WAAWp0C,UAAU+jB,KAAO,WAC/B,GAAIxV,KAAK9Q,KAAO8Q,KAAKhR,OACnB,OAAO0nC,EAAKmP,WAAWQ,IAGzB,IAAItI,EAAO/9B,KAAKlR,IAAIwqC,OAAOt5B,KAAK9Q,KAEhC,OADA8Q,KAAK9Q,KAAO,EACL6uC,CACR,EAEDrH,EAAKmP,WAAWp0C,UAAU60C,MAAQ,WAChC,OAAOtmC,KAAK9Q,IAAM8Q,KAAKmX,KACxB,EAEDuf,EAAKmP,WAAWp0C,UAAU80C,OAAS,WAC7BvmC,KAAKmX,OAASnX,KAAK9Q,MACrB8Q,KAAK9Q,KAAO,GAGd8Q,KAAKmX,MAAQnX,KAAK9Q,GACnB,EAEDwnC,EAAKmP,WAAWp0C,UAAU+0C,OAAS,WACjCxmC,KAAK9Q,KAAO,CACb,EAEDwnC,EAAKmP,WAAWp0C,UAAUg1C,eAAiB,WACzC,IAAI1I,EAAM2I,EAEV,GAEEA,GADA3I,EAAO/9B,KAAKwV,QACIrmB,WAAW,SACpBu3C,EAAW,IAAMA,EAAW,IAEjC3I,GAAQrH,EAAKmP,WAAWQ,KAC1BrmC,KAAKwmC,QAER,EAED9P,EAAKmP,WAAWp0C,UAAUk1C,KAAO,WAC/B,OAAO3mC,KAAK9Q,IAAM8Q,KAAKhR,MACxB,EAED0nC,EAAKmP,WAAWQ,IAAM,MACtB3P,EAAKmP,WAAWe,MAAQ,QACxBlQ,EAAKmP,WAAWgB,KAAO,OACvBnQ,EAAKmP,WAAWiB,cAAgB,gBAChCpQ,EAAKmP,WAAWkB,MAAQ,QACxBrQ,EAAKmP,WAAWmB,SAAW,WAE3BtQ,EAAKmP,WAAWoB,SAAW,SAAUC,GAInC,OAHAA,EAAMV,SACNU,EAAMf,KAAKzP,EAAKmP,WAAWe,OAC3BM,EAAMX,SACC7P,EAAKmP,WAAWG,OACxB,EAEDtP,EAAKmP,WAAWsB,QAAU,SAAUD,GAQlC,GAPIA,EAAMZ,QAAU,IAClBY,EAAMV,SACNU,EAAMf,KAAKzP,EAAKmP,WAAWgB,OAG7BK,EAAMX,SAEFW,EAAMP,OACR,OAAOjQ,EAAKmP,WAAWG,OAE1B,EAEDtP,EAAKmP,WAAWuB,gBAAkB,SAAUF,GAI1C,OAHAA,EAAMX,SACNW,EAAMT,iBACNS,EAAMf,KAAKzP,EAAKmP,WAAWiB,eACpBpQ,EAAKmP,WAAWG,OACxB,EAEDtP,EAAKmP,WAAWwB,SAAW,SAAUH,GAInC,OAHAA,EAAMX,SACNW,EAAMT,iBACNS,EAAMf,KAAKzP,EAAKmP,WAAWkB,OACpBrQ,EAAKmP,WAAWG,OACxB,EAEDtP,EAAKmP,WAAWyB,OAAS,SAAUJ,GAC7BA,EAAMZ,QAAU,GAClBY,EAAMf,KAAKzP,EAAKmP,WAAWgB,KAE9B,EAaDnQ,EAAKmP,WAAW0B,cAAgB7Q,EAAKsC,UAAUO,UAE/C7C,EAAKmP,WAAWG,QAAU,SAAUkB,GAClC,OAAa,CACX,IAAInJ,EAAOmJ,EAAM1xB,OAEjB,GAAIuoB,GAAQrH,EAAKmP,WAAWQ,IAC1B,OAAO3P,EAAKmP,WAAWyB,OAIzB,GAA0B,IAAtBvJ,EAAK5uC,WAAW,GAApB,CAKA,GAAY,KAAR4uC,EACF,OAAOrH,EAAKmP,WAAWoB,SAGzB,GAAY,KAARlJ,EAKF,OAJAmJ,EAAMV,SACFU,EAAMZ,QAAU,GAClBY,EAAMf,KAAKzP,EAAKmP,WAAWgB,MAEtBnQ,EAAKmP,WAAWuB,gBAGzB,GAAY,KAARrJ,EAKF,OAJAmJ,EAAMV,SACFU,EAAMZ,QAAU,GAClBY,EAAMf,KAAKzP,EAAKmP,WAAWgB,MAEtBnQ,EAAKmP,WAAWwB,SAMzB,GAAY,KAARtJ,GAAiC,IAAlBmJ,EAAMZ,QAEvB,OADAY,EAAMf,KAAKzP,EAAKmP,WAAWmB,UACpBtQ,EAAKmP,WAAWG,QAMzB,GAAY,KAARjI,GAAiC,IAAlBmJ,EAAMZ,QAEvB,OADAY,EAAMf,KAAKzP,EAAKmP,WAAWmB,UACpBtQ,EAAKmP,WAAWG,QAGzB,GAAIjI,EAAKh5B,MAAM2xB,EAAKmP,WAAW0B,eAC7B,OAAO7Q,EAAKmP,WAAWsB,OAvCxB,MAFCD,EAAMd,iBA2CT,CACF,EAED1P,EAAK0J,YAAc,SAAUtxC,EAAKqxC,GAChCngC,KAAKknC,MAAQ,IAAIxQ,EAAKmP,WAAY/2C,GAClCkR,KAAKmgC,MAAQA,EACbngC,KAAKwnC,cAAgB,CAAC,EACtBxnC,KAAKynC,UAAY,CAClB,EAED/Q,EAAK0J,YAAY3uC,UAAU+O,MAAQ,WACjCR,KAAKknC,MAAM3jB,MACXvjB,KAAK8lC,QAAU9lC,KAAKknC,MAAMpB,QAI1B,IAFA,IAAIpoC,EAAQg5B,EAAK0J,YAAYsH,YAEtBhqC,GACLA,EAAQA,EAAMsC,MAGhB,OAAOA,KAAKmgC,KACb,EAEDzJ,EAAK0J,YAAY3uC,UAAUk2C,WAAa,WACtC,OAAO3nC,KAAK8lC,QAAQ9lC,KAAKynC,UAC1B,EAED/Q,EAAK0J,YAAY3uC,UAAUm2C,cAAgB,WACzC,IAAIC,EAAS7nC,KAAK2nC,aAElB,OADA3nC,KAAKynC,WAAa,EACXI,CACR,EAEDnR,EAAK0J,YAAY3uC,UAAUq2C,WAAa,WACtC,IAAIC,EAAkB/nC,KAAKwnC,cAC3BxnC,KAAKmgC,MAAM3C,OAAOuK,GAClB/nC,KAAKwnC,cAAgB,CAAC,CACvB,EAED9Q,EAAK0J,YAAYsH,YAAc,SAAUM,GACvC,IAAIH,EAASG,EAAOL,aAEpB,GAAcr4C,MAAVu4C,EAIJ,OAAQA,EAAO52C,MACb,KAAKylC,EAAKmP,WAAWmB,SACnB,OAAOtQ,EAAK0J,YAAY6H,cAC1B,KAAKvR,EAAKmP,WAAWe,MACnB,OAAOlQ,EAAK0J,YAAY8H,WAC1B,KAAKxR,EAAKmP,WAAWgB,KACnB,OAAOnQ,EAAK0J,YAAY+H,UAC1B,QACE,IAAIhlC,EAAe,4CAA8C0kC,EAAO52C,KAMxE,MAJI42C,EAAO/4C,IAAIE,QAAU,IACvBmU,GAAgB,gBAAkB0kC,EAAO/4C,IAAM,KAG3C,IAAI4nC,EAAKkP,gBAAiBziC,EAAc0kC,EAAO1wB,MAAO0wB,EAAO13C,KAExE,EAEDumC,EAAK0J,YAAY6H,cAAgB,SAAUD,GACzC,IAAIH,EAASG,EAAOJ,gBAEpB,GAAct4C,MAAVu4C,EAAJ,CAIA,OAAQA,EAAO/4C,KACb,IAAK,IACHk5C,EAAOR,cAAcvG,SAAWvK,EAAK2J,MAAMY,SAASU,WACpD,MACF,IAAK,IACHqG,EAAOR,cAAcvG,SAAWvK,EAAK2J,MAAMY,SAASC,SACpD,MACF,QACE,IAAI/9B,EAAe,kCAAoC0kC,EAAO/4C,IAAM,IACpE,MAAM,IAAI4nC,EAAKkP,gBAAiBziC,EAAc0kC,EAAO1wB,MAAO0wB,EAAO13C,KAGvE,IAAIi4C,EAAaJ,EAAOL,aAExB,GAAkBr4C,MAAd84C,EAAyB,CACvBjlC,EAAe,yCACnB,MAAM,IAAIuzB,EAAKkP,gBAAiBziC,EAAc0kC,EAAO1wB,MAAO0wB,EAAO13C,IACpE,CAED,OAAQi4C,EAAWn3C,MACjB,KAAKylC,EAAKmP,WAAWe,MACnB,OAAOlQ,EAAK0J,YAAY8H,WAC1B,KAAKxR,EAAKmP,WAAWgB,KACnB,OAAOnQ,EAAK0J,YAAY+H,UAC1B,QACMhlC,EAAe,mCAAqCilC,EAAWn3C,KAAO,IAC1E,MAAM,IAAIylC,EAAKkP,gBAAiBziC,EAAcilC,EAAWjxB,MAAOixB,EAAWj4C,KA5B9E,CA8BF,EAEDumC,EAAK0J,YAAY8H,WAAa,SAAUF,GACtC,IAAIH,EAASG,EAAOJ,gBAEpB,GAAct4C,MAAVu4C,EAAJ,CAIA,IAAmD,GAA/CG,EAAO7H,MAAMmF,UAAUp+B,QAAQ2gC,EAAO/4C,KAAY,CACpD,IAAIu5C,EAAiBL,EAAO7H,MAAMmF,UAAUvnC,KAAI,SAAU8gB,GAAK,MAAO,IAAMA,EAAI,GAAK,IAAE1T,KAAK,MACxFhI,EAAe,uBAAyB0kC,EAAO/4C,IAAM,uBAAyBu5C,EAElF,MAAM,IAAI3R,EAAKkP,gBAAiBziC,EAAc0kC,EAAO1wB,MAAO0wB,EAAO13C,IACpE,CAED63C,EAAOR,cAAcxH,OAAS,CAAC6H,EAAO/4C,KAEtC,IAAIs5C,EAAaJ,EAAOL,aAExB,GAAkBr4C,MAAd84C,EAAyB,CACvBjlC,EAAe,gCACnB,MAAM,IAAIuzB,EAAKkP,gBAAiBziC,EAAc0kC,EAAO1wB,MAAO0wB,EAAO13C,IACpE,CAED,GAAQi4C,EAAWn3C,OACZylC,EAAKmP,WAAWgB,KACnB,OAAOnQ,EAAK0J,YAAY+H,UAEpBhlC,EAAe,0BAA4BilC,EAAWn3C,KAAO,IACjE,MAAM,IAAIylC,EAAKkP,gBAAiBziC,EAAcilC,EAAWjxB,MAAOixB,EAAWj4C,IAvB9E,CAyBF,EAEDumC,EAAK0J,YAAY+H,UAAY,SAAUH,GACrC,IAAIH,EAASG,EAAOJ,gBAEpB,GAAct4C,MAAVu4C,EAAJ,CAIAG,EAAOR,cAAc9J,KAAOmK,EAAO/4C,IAAI0qB,eAEP,GAA5BquB,EAAO/4C,IAAIoY,QAAQ,OACrB8gC,EAAOR,cAAc1G,aAAc,GAGrC,IAAIsH,EAAaJ,EAAOL,aAExB,GAAkBr4C,MAAd84C,EAKJ,OAAQA,EAAWn3C,MACjB,KAAKylC,EAAKmP,WAAWgB,KAEnB,OADAmB,EAAOF,aACApR,EAAK0J,YAAY+H,UAC1B,KAAKzR,EAAKmP,WAAWe,MAEnB,OADAoB,EAAOF,aACApR,EAAK0J,YAAY8H,WAC1B,KAAKxR,EAAKmP,WAAWiB,cACnB,OAAOpQ,EAAK0J,YAAYkI,kBAC1B,KAAK5R,EAAKmP,WAAWkB,MACnB,OAAOrQ,EAAK0J,YAAYmI,WAC1B,KAAK7R,EAAKmP,WAAWmB,SAEnB,OADAgB,EAAOF,aACApR,EAAK0J,YAAY6H,cAC1B,QACE,IAAI9kC,EAAe,2BAA6BilC,EAAWn3C,KAAO,IAClE,MAAM,IAAIylC,EAAKkP,gBAAiBziC,EAAcilC,EAAWjxB,MAAOixB,EAAWj4C,UApB7E63C,EAAOF,YAXR,CAiCF,EAEDpR,EAAK0J,YAAYkI,kBAAoB,SAAUN,GAC7C,IAAIH,EAASG,EAAOJ,gBAEpB,GAAct4C,MAAVu4C,EAAJ,CAIA,IAAIlK,EAAelJ,SAASoT,EAAO/4C,IAAK,IAExC,GAAI05C,MAAM7K,GAAe,CACvB,IAAIx6B,EAAe,gCACnB,MAAM,IAAIuzB,EAAKkP,gBAAiBziC,EAAc0kC,EAAO1wB,MAAO0wB,EAAO13C,IACpE,CAED63C,EAAOR,cAAc7J,aAAeA,EAEpC,IAAIyK,EAAaJ,EAAOL,aAExB,GAAkBr4C,MAAd84C,EAKJ,OAAQA,EAAWn3C,MACjB,KAAKylC,EAAKmP,WAAWgB,KAEnB,OADAmB,EAAOF,aACApR,EAAK0J,YAAY+H,UAC1B,KAAKzR,EAAKmP,WAAWe,MAEnB,OADAoB,EAAOF,aACApR,EAAK0J,YAAY8H,WAC1B,KAAKxR,EAAKmP,WAAWiB,cACnB,OAAOpQ,EAAK0J,YAAYkI,kBAC1B,KAAK5R,EAAKmP,WAAWkB,MACnB,OAAOrQ,EAAK0J,YAAYmI,WAC1B,KAAK7R,EAAKmP,WAAWmB,SAEnB,OADAgB,EAAOF,aACApR,EAAK0J,YAAY6H,cAC1B,QACM9kC,EAAe,2BAA6BilC,EAAWn3C,KAAO,IAClE,MAAM,IAAIylC,EAAKkP,gBAAiBziC,EAAcilC,EAAWjxB,MAAOixB,EAAWj4C,UApB7E63C,EAAOF,YAdR,CAoCF,EAEDpR,EAAK0J,YAAYmI,WAAa,SAAUP,GACtC,IAAIH,EAASG,EAAOJ,gBAEpB,GAAct4C,MAAVu4C,EAAJ,CAIA,IAAIjG,EAAQnN,SAASoT,EAAO/4C,IAAK,IAEjC,GAAI05C,MAAM5G,GAAQ,CAChB,IAAIz+B,EAAe,wBACnB,MAAM,IAAIuzB,EAAKkP,gBAAiBziC,EAAc0kC,EAAO1wB,MAAO0wB,EAAO13C,IACpE,CAED63C,EAAOR,cAAc5F,MAAQA,EAE7B,IAAIwG,EAAaJ,EAAOL,aAExB,GAAkBr4C,MAAd84C,EAKJ,OAAQA,EAAWn3C,MACjB,KAAKylC,EAAKmP,WAAWgB,KAEnB,OADAmB,EAAOF,aACApR,EAAK0J,YAAY+H,UAC1B,KAAKzR,EAAKmP,WAAWe,MAEnB,OADAoB,EAAOF,aACApR,EAAK0J,YAAY8H,WAC1B,KAAKxR,EAAKmP,WAAWiB,cACnB,OAAOpQ,EAAK0J,YAAYkI,kBAC1B,KAAK5R,EAAKmP,WAAWkB,MACnB,OAAOrQ,EAAK0J,YAAYmI,WAC1B,KAAK7R,EAAKmP,WAAWmB,SAEnB,OADAgB,EAAOF,aACApR,EAAK0J,YAAY6H,cAC1B,QACM9kC,EAAe,2BAA6BilC,EAAWn3C,KAAO,IAClE,MAAM,IAAIylC,EAAKkP,gBAAiBziC,EAAcilC,EAAWjxB,MAAOixB,EAAWj4C,UApB7E63C,EAAOF,YAdR,CAoCF,OASW,0BAANpjB,EAYI,WAMN,OAAOgS,CACR,GAnBS,iCAx3GX,qBCWD,IAAI+R,EAAQrqB,EAAQ,OAmPpB,SAASsqB,EAAkB32C,EAAM0Y,GAI/Bg+B,EAAME,OAAOD,kBAAkB32C,GAHjB,WACZ,OAAO,IAAI02C,EAAMG,IAAIC,UAAU92C,EAAM0Y,EACtC,GAEF,CAvPD2T,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OAGRM,EAAOiE,QAAU8lB,EAAMG,IAAMH,EAAMG,KAAO,CAAC,EAqB3CH,EAAMG,IAAIE,gBAAkB,SAAShxC,EAAKixC,EAAIp5C,EAAQ8a,GACpD,IAAIk+B,EAASK,EAAc,CACzBlxC,IAAKA,EACLnI,OAAQA,EACRs5C,SAAS,EACTx+B,KAAMA,IAGR,OADAk+B,EAAOxxB,MAAM4xB,GACNJ,CACR,EAiBDF,EAAMG,IAAIM,uBAAyB,SAASpxC,EAAK2S,GAC/C,OAAOu+B,EAAc,CACnBlxC,IAAKA,EACLnI,OAAQ,KACRs5C,SAAS,EACTx+B,KAAMA,GAET,EAqBDg+B,EAAMG,IAAIO,gBAAkB,SAASrxC,EAAKixC,EAAIp5C,EAAQ8a,GACpD,IAAIk+B,EAASK,EAAc,CACzBlxC,IAAKA,EACLnI,OAAQA,EACRs5C,SAAS,EACTx+B,KAAMA,IAGR,OADAk+B,EAAOxxB,MAAM4xB,GACNJ,CACR,EAiBDF,EAAMG,IAAIQ,uBAAyB,SAAStxC,EAAK2S,GAC/C,OAAOu+B,EAAc,CACnBlxC,IAAKA,EACLnI,OAAQ,KACRs5C,SAAS,EACTx+B,KAAMA,GAET,EAUDg+B,EAAMG,IAAIC,UAAY,SAAS92C,EAAM0Y,GAC/B4+B,GACFC,IAEF,IAAIjkC,EAAOrF,KACXqF,EAAKtT,KAAOA,EACZsT,EAAKoF,KAAO,IAAIA,EAAK,CACnB8+B,UAAW,GACXZ,OAAQ,CACNa,QAAS,SAASC,EAASC,GACzB,OAAOC,EAAatkC,EAAKukC,GAAIH,EAASC,GAAU,EACjD,EACDT,QAAS,SAASQ,EAASC,GACzB,OAAOC,EAAatkC,EAAKukC,GAAIH,EAASC,GAAU,EACjD,KAGLrkC,EAAKwkC,OAAQ,CACd,EAUDpB,EAAMG,IAAIC,UAAUp3C,UAAU63C,WAAa,SAAS9kC,GAClD,IAAGxE,KAAK6pC,MAAR,CAIA,IACIvW,EADAx7B,EAAM0M,EAAQ1M,IAQlB,GAAkB,iBAARA,GACQ,KAAfA,EAAI9I,QAAgC,KAAf8I,EAAI9I,QAAgC,KAAf8I,EAAI9I,QAG1C,GAAGy5C,EAAMqB,KAAK7yC,QAAQa,KACX,KAAfA,EAAI9I,QAAgC,KAAf8I,EAAI9I,QAAgC,KAAf8I,EAAI9I,QAAgB,CAE/DskC,EAAMx7B,EACNA,EAAM2wC,EAAMqB,KAAKC,eACjB,IAAI,IAAIj2C,EAAI,EAAGA,EAAIw/B,EAAItkC,SAAU8E,EAC/BgE,EAAIkyC,QAAQ1W,EAAIx/B,GAEnB,OATCgE,EAAM2wC,EAAMqB,KAAKC,aAAajyC,GAYhC,IAAI2wC,EAAMqB,KAAK7yC,QAAQa,GAAM,CAC3Bw7B,EAAMx7B,EACNA,EAAM,GAGN,IAAImhC,EAAM3F,EAAItkC,SACd,GAAW,KAARiqC,GAAsB,KAARA,GAAsB,KAARA,EAAY,CACzCA,KAAc,EACd,IAAQnlC,EAAI,EAAGA,EAAImlC,IAAOnlC,EACxBgE,EAAIvH,KAAK+iC,EAAIhlC,WAEhB,CACF,CAGD,IAAIm6C,EAAMqB,KAAK7yC,QAAQa,IACJ,IAAfA,EAAI9I,QAA+B,IAAf8I,EAAI9I,QAA+B,IAAf8I,EAAI9I,OAC9C,MAAM,IAAIiD,MAAM,0BAIlB,IAAIwY,EAAOzK,KAAKyK,KAAK1Y,KACjBk4C,GAA6D,IAAhD,CAAC,MAAO,MAAO,MAAO,OAAO/iC,QAAQuD,GAGtDzK,KAAK4pC,GAAKM,EAAWpyC,EAAK0M,EAAQykC,UAAYgB,GAC9CjqC,KAAK6pC,OAAQ,CAnDZ,CAoDF,EAUDpB,EAAMG,IAAIsB,WAAa,SAASpyC,EAAKmxC,GAInC,OAHII,GACFC,IAEKY,EAAWpyC,EAAKmxC,EACxB,EAUDR,EAAMG,IAAIe,aAAeA,EAIzBjB,EAAkB,UAAWD,EAAME,OAAOwB,MAAMC,KAChD1B,EAAkB,UAAWD,EAAME,OAAOwB,MAAME,KAChD3B,EAAkB,UAAWD,EAAME,OAAOwB,MAAMG,KAChD5B,EAAkB,UAAWD,EAAME,OAAOwB,MAAMI,KAChD7B,EAAkB,UAAWD,EAAME,OAAOwB,MAAMK,KAChD9B,EAAkB,UAAWD,EAAME,OAAOwB,MAAMM,KAWhD,IAEIC,EACAC,EACAC,EACAC,EACAC,EANAzB,GAAO,EA2KX,SAASC,IACPD,GAAO,EAePuB,EAAO,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,GAAM,GAAM,GAAM,IAAM,GAAM,IAIpE,IADA,IAAIG,EAAQ,IAAI/zC,MAAM,KACdlD,EAAI,EAAGA,EAAI,MAAOA,EACxBi3C,EAAMj3C,GAAKA,GAAK,EAChBi3C,EAAMj3C,EAAI,KAAQA,EAAI,KAAQ,EAAI,IAIpC42C,EAAO,IAAI1zC,MAAM,KACjB2zC,EAAQ,IAAI3zC,MAAM,KAClB6zC,EAAM,IAAI7zC,MAAM,GAChB8zC,EAAO,IAAI9zC,MAAM,GACjB,IAAQlD,EAAI,EAAGA,EAAI,IAAKA,EACtB+2C,EAAI/2C,GAAK,IAAIkD,MAAM,KACnB8zC,EAAKh3C,GAAK,IAAIkD,MAAM,KAEtB,IAAmBg0C,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAIC,EAAxCnxC,EAAI,EAAGoxC,EAAK,EAChB,IAAQz3C,EAAI,EAAGA,EAAI,MAAOA,EAAG,CA8D3Bq3C,GADAA,EAAKI,EAAMA,GAAM,EAAMA,GAAM,EAAMA,GAAM,EAAMA,GAAM,IACzC,EAAW,IAALJ,EAAY,GAG9BT,EAAKvwC,GAAKgxC,EACVR,EAAMQ,GAAMhxC,EAoEZkxC,GAJAD,EAAML,EAAMI,KAKF,GACPA,GAAM,GACNA,GAAM,EACNA,EAAKC,EACRE,IARAN,EAAKD,EAAM5wC,KACX8wC,EAAKF,EAAMC,KACXE,EAAKH,EAAME,MAOS,IACjB9wC,EAAI+wC,IAAO,IACX/wC,EAAI8wC,EAAKC,IAAO,EAChB/wC,EAAI6wC,EAAKE,EAEZ,IAAI,IAAI3gB,EAAI,EAAGA,EAAI,IAAKA,EACtBsgB,EAAItgB,GAAGpwB,GAAKkxC,EACZP,EAAKvgB,GAAG4gB,GAAMG,EAGdD,EAAKA,GAAM,GAAKA,IAAO,EACvBC,EAAMA,GAAO,GAAKA,IAAQ,EAInB,IAANnxC,EAEDA,EAAIoxC,EAAK,GAITpxC,EAAI6wC,EAAKD,EAAMA,EAAMA,EAAMC,EAAKE,KAChCK,GAAMR,EAAMA,EAAMQ,IAErB,CACF,CA0BD,SAASrB,EAAWpyC,EAAKmxC,GAmBvB,IAjBA,IAaIuC,EAbAtP,EAAIpkC,EAAI8B,MAAM,GAaR6xC,EAAM,EACZC,EAAKxP,EAAEltC,OAEPmB,EA9ZG,GA6ZGu7C,EAAK,EAAI,GAEX53C,EAAI43C,EAAI53C,EAAI3D,IAAO2D,EACzB03C,EAAOtP,EAAEpoC,EAAI,GACVA,EAAI43C,GAAO,GAEZF,EACEd,EAAKc,IAAS,GAAK,MAAQ,GAC3Bd,EAAKc,IAAS,EAAI,MAAQ,GAC1Bd,EAAY,IAAPc,IAAe,EACpBd,EAAKc,IAAS,IAAOZ,EAAKa,IAAQ,GACpCA,KACQC,EAAK,GAAM53C,EAAI43C,GAAO,IAE9BF,EACEd,EAAKc,IAAS,KAAO,GACrBd,EAAKc,IAAS,GAAK,MAAQ,GAC3Bd,EAAKc,IAAS,EAAI,MAAQ,EAC1Bd,EAAY,IAAPc,IAETtP,EAAEpoC,GAAKooC,EAAEpoC,EAAI43C,GAAMF,EAkDrB,GAAGvC,EAAS,CAQV,IAPA,IAAI3V,EACAqY,EAAKb,EAAK,GACVc,EAAKd,EAAK,GACVe,EAAKf,EAAK,GACVgB,EAAKhB,EAAK,GACViB,EAAO7P,EAAEtiC,MAAM,GAEJoyC,GAAPl4C,EAAI,GADZ3D,EAAM+rC,EAAEltC,QA1eH,GA2eyB8E,EAAI3D,EAAK2D,GA3elC,EA2e2Ck4C,GA3e3C,EA+eH,GAAS,IAANl4C,GAAWA,IAAO3D,EA/elB,EAgfD47C,EAAKj4C,GAAKooC,EAAE8P,GACZD,EAAKj4C,EAAI,GAAKooC,EAAE8P,EAAK,GACrBD,EAAKj4C,EAAI,GAAKooC,EAAE8P,EAAK,GACrBD,EAAKj4C,EAAI,GAAKooC,EAAE8P,EAAK,QAMrB,IAAI,IAAIzhB,EAAI,EAAGA,EAzfd,IAyfwBA,EACvB+I,EAAM4I,EAAE8P,EAAKzhB,GACbwhB,EAAKj4C,GAAK,GAAGy2B,IACXohB,EAAGjB,EAAKpX,IAAQ,KAChBsY,EAAGlB,EAAKpX,IAAQ,GAAK,MACrBuY,EAAGnB,EAAKpX,IAAQ,EAAI,MACpBwY,EAAGpB,EAAW,IAANpX,IAIhB4I,EAAI6P,CACL,CAED,OAAO7P,CACR,CAWD,SAASyN,EAAazN,EAAGl9B,EAAOrP,EAAQs5C,GAuCtC,IACI0C,EAAIC,EAAIC,EAAIC,EAAIG,EAchB13B,EAAGF,EAAGnJ,EAAGkhB,EAAG8f,EAAIC,EAAIC,EAfpBC,EAAKnQ,EAAEltC,OAAS,EAAI,EAErBi6C,GACD0C,EAAKb,EAAK,GACVc,EAAKd,EAAK,GACVe,EAAKf,EAAK,GACVgB,EAAKhB,EAAK,GACVmB,EAAMtB,IAENgB,EAAKd,EAAI,GACTe,EAAKf,EAAI,GACTgB,EAAKhB,EAAI,GACTiB,EAAKjB,EAAI,GACToB,EAAMvB,GAGRn2B,EAAIvV,EAAM,GAAKk9B,EAAE,GACjB7nB,EAAIrV,EAAMiqC,EAAU,EAAI,GAAK/M,EAAE,GAC/BhxB,EAAIlM,EAAM,GAAKk9B,EAAE,GACjB9P,EAAIptB,EAAMiqC,EAAU,EAAI,GAAK/M,EAAE,GAS/B,IARA,IAAIpoC,EAAI,EAQAkxC,EAAQ,EAAGA,EAAQqH,IAAMrH,EAoH/BkH,EACEP,EAAGp3B,IAAM,IACTq3B,EAAGv3B,IAAM,GAAK,KACdw3B,EAAG3gC,IAAM,EAAI,KACb4gC,EAAO,IAAJ1f,GAAW8P,IAAIpoC,GACpBq4C,EACER,EAAGt3B,IAAM,IACTu3B,EAAG1gC,IAAM,GAAK,KACd2gC,EAAGzf,IAAM,EAAI,KACb0f,EAAO,IAAJv3B,GAAW2nB,IAAIpoC,GACpBs4C,EACET,EAAGzgC,IAAM,IACT0gC,EAAGxf,IAAM,GAAK,KACdyf,EAAGt3B,IAAM,EAAI,KACbu3B,EAAO,IAAJz3B,GAAW6nB,IAAIpoC,GACpBs4B,EACEuf,EAAGvf,IAAM,IACTwf,EAAGr3B,IAAM,GAAK,KACds3B,EAAGx3B,IAAM,EAAI,KACby3B,EAAO,IAAJ5gC,GAAWgxB,IAAIpoC,GACpBygB,EAAI23B,EACJ73B,EAAI83B,EACJjhC,EAAIkhC,EAeNz8C,EAAO,GACJs8C,EAAI13B,IAAM,KAAO,GACjB03B,EAAI53B,IAAM,GAAK,MAAQ,GACvB43B,EAAI/gC,IAAM,EAAI,MAAQ,EACtB+gC,EAAQ,IAAJ7f,GAAY8P,IAAIpoC,GACvBnE,EAAOs5C,EAAU,EAAI,GAClBgD,EAAI53B,IAAM,KAAO,GACjB43B,EAAI/gC,IAAM,GAAK,MAAQ,GACvB+gC,EAAI7f,IAAM,EAAI,MAAQ,EACtB6f,EAAQ,IAAJ13B,GAAY2nB,IAAIpoC,GACvBnE,EAAO,GACJs8C,EAAI/gC,IAAM,KAAO,GACjB+gC,EAAI7f,IAAM,GAAK,MAAQ,GACvB6f,EAAI13B,IAAM,EAAI,MAAQ,EACtB03B,EAAQ,IAAJ53B,GAAY6nB,IAAIpoC,GACvBnE,EAAOs5C,EAAU,EAAI,GAClBgD,EAAI7f,IAAM,KAAO,GACjB6f,EAAI13B,IAAM,GAAK,MAAQ,GACvB03B,EAAI53B,IAAM,EAAI,MAAQ,EACtB43B,EAAQ,IAAJ/gC,GAAYgxB,IAAIpoC,EACxB,CAsBD,SAASk1C,EAAcxkC,GAErB,IAGImkC,EAFA2D,EAAY,SAFhB9nC,EAAUA,GAAW,CAAC,GACFiG,MAAQ,OAAOiyB,cAW/BvlB,GANFwxB,EADCnkC,EAAQykC,QACAR,EAAME,OAAO4D,eAAeD,EAAW9nC,EAAQ1M,KAE/C2wC,EAAME,OAAO6D,aAAaF,EAAW9nC,EAAQ1M,MAIrCqf,MAcnB,OAbAwxB,EAAOxxB,MAAQ,SAAS4xB,EAAIvkC,GAE1B,IAAI7U,EAAS,KACV6U,aAAmBikC,EAAMqB,KAAK2C,aAC/B98C,EAAS6U,EACTA,EAAU,CAAC,IAEbA,EAAUA,GAAW,CAAC,GACd7U,OAASA,EACjB6U,EAAQukC,GAAKA,EACb5xB,EAAMtd,KAAK8uC,EAAQnkC,EACpB,EAEMmkC,CACR,mBC1jCD,IAAIF,EAAQrqB,EAAQ,OACpBA,EAAQ,OACRA,EAAQ,OAER,IAAIsuB,EAAMhuB,EAAOiE,QAAU8lB,EAAMiE,IAsCjC,SAASC,EAAoBjvC,EAAOwN,EAAG0hC,GACrC,IAAIC,EAAU3hC,EAAE4hC,SAAWrE,EAAMiE,IAAIK,cAAcF,OAGnDnvC,EAAMkhB,KAAKouB,YAAc,CACvB3D,MAAM,EACNV,OAAQF,EAAME,OAAO4D,eAAe,UAAWM,EAC7CD,EAAGl1C,KAAKu1C,iBAAmBL,EAAGl1C,KAAKw1C,kBACrCnE,GAAI8D,EAASD,EAAGl1C,KAAKy1C,gBAAkBP,EAAGl1C,KAAK01C,iBAEjD1vC,EAAMuD,MAAM+rC,YAAc,CACxB3D,MAAM,EACNV,OAAQF,EAAME,OAAO6D,aAAa,UAAWK,EAC3CD,EAAGl1C,KAAKw1C,iBAAmBN,EAAGl1C,KAAKu1C,kBACrClE,GAAI8D,EAASD,EAAGl1C,KAAK01C,gBAAkBR,EAAGl1C,KAAKy1C,iBAEjDzvC,EAAMkhB,KAAKyuB,eAAiBC,EAC5B5vC,EAAMuD,MAAMosC,eAAiBE,EAG7B7vC,EAAMkhB,KAAK4uB,UAAY9vC,EAAMuD,MAAMusC,UAAYZ,EAAGa,WAClD/vC,EAAMkhB,KAAK8uB,YAAchwC,EAAMuD,MAAMysC,YAAchB,EAAIiB,SACxD,CAWD,SAASJ,EAAqBr0C,EAAQ+Z,GACpC,IAQI81B,EARA6E,GAAO,EAGPC,EAAM56B,EAAEy6B,YAAYz6B,EAAE66B,OAAQ76B,EAAE86B,eAAgB70C,GACpDA,EAAO80C,SAASC,SAASJ,GACzB56B,EAAEi7B,uBAOAnF,EAHC7vC,EAAOwG,QAAQyuC,QAAUzB,EAAI0B,SAASC,QAAQF,MAG1Cl7B,EAAE+5B,YAAY3D,KAAO,KAAOp2B,EAAE+5B,YAAYjE,GAE1CN,EAAMnvC,OAAOg1C,aAAa,IAGjCr7B,EAAE+5B,YAAY3D,MAAO,EAGrB,IAAIV,EAAS11B,EAAE+5B,YAAYrE,OAiB3B,OAhBAA,EAAOxxB,MAAM,CAAC4xB,GAAIA,IAGf7vC,EAAOwG,QAAQyuC,OAASzB,EAAI0B,SAASG,QAAQJ,OAC9CxF,EAAOh5C,OAAOs+C,SAASlF,GAIzBJ,EAAO5P,OAAO7/B,EAAO80C,UAClBrF,EAAOtL,OAAOmR,KAEft1C,EAAO80C,SAAWrF,EAAOh5C,OACzBuJ,EAAOlK,OAASkK,EAAO80C,SAASh/C,SAChC4+C,GAAO,GAGFA,CACR,CAWD,SAASY,EAA6BjF,EAAWvqC,EAAOiqC,GAmBtD,IAAIA,EAAS,CAIX,IAAIwF,EAAUlF,EAAavqC,EAAMhQ,SAAWu6C,EAC5CvqC,EAAM0vC,aAAaD,EAAU,EAAGA,EACjC,CACD,OAAO,CACR,CAWD,SAASE,EAA6BpF,EAAW55C,EAAQs5C,GACvD,IAAI2E,GAAO,EACX,GAAG3E,EAAS,CAQV,IAFA,IAAIhQ,EAAMtpC,EAAOX,SACb4/C,EAAgBj/C,EAAOk/C,OACnB/6C,EAAImlC,EAAM,EAAI2V,EAAe96C,EAAImlC,EAAM,IAAKnlC,EAClD85C,EAAOA,GAASj+C,EAAOm/C,GAAGh7C,IAAM86C,EAE/BhB,GAEDj+C,EAAOi7B,SAASgkB,EAAgB,EAEnC,CACD,OAAOhB,CACR,CAWD,SAASN,EAAqBp0C,EAAQ+Z,GACpC,IAEI81B,EAFA6E,GAAO,EAMT7E,EAHC7vC,EAAOwG,QAAQyuC,QAAUzB,EAAI0B,SAASC,QAAQF,MAG1Cl7B,EAAE+5B,YAAY3D,KAAO,KAAOp2B,EAAE+5B,YAAYjE,GAI1C7vC,EAAO80C,SAASe,SAAS,IAGhC97B,EAAE+5B,YAAY3D,MAAO,EAGrB,IAAIV,EAAS11B,EAAE+5B,YAAYrE,OAC3BA,EAAOxxB,MAAM,CAAC4xB,GAAIA,IAGlBJ,EAAO5P,OAAO7/B,EAAO80C,UACrBJ,EAAOjF,EAAOtL,OAAOsR,GAOrB,IAAIK,EAAS/7B,EAAEu6B,UAIXK,EAAMpF,EAAMnvC,OAAOg1C,aAAaU,GAGhC/V,EAAM0P,EAAOh5C,OAAOX,SACrBiqC,GAAO+V,GACR91C,EAAO80C,SAAWrF,EAAOh5C,OAAOo/C,SAAS9V,EAAM+V,GAC/CnB,EAAMlF,EAAOh5C,OAAOo/C,SAASC,IAG7B91C,EAAO80C,SAAWrF,EAAOh5C,OAAOo/C,WAElC71C,EAAO80C,SAAWvF,EAAMqB,KAAKC,aAAa7wC,EAAO80C,UACjD90C,EAAOlK,OAASkK,EAAO80C,SAASh/C,SAGhC,IAAIigD,EAAOh8B,EAAEy6B,YAAYz6B,EAAE66B,OAAQ76B,EAAE86B,eAAgB70C,GAGrD,OAFA+Z,EAAEi7B,uBACFN,EAkBF,SAAqB91C,EAAKo3C,EAAMD,GAC9B,IAAIE,EAAO1G,EAAM0G,KAAK59C,SAUtB,OARA49C,EAAKh4B,MAAM,OAAQrf,GACnBq3C,EAAKpW,OAAOmW,GACZA,EAAOC,EAAKC,SAASL,WAErBI,EAAKh4B,MAAM,KAAM,MACjBg4B,EAAKpW,OAAOkW,GACZA,EAAOE,EAAKC,SAASL,WAEdG,IAASD,CACjB,CA9BQI,CAAYp8B,EAAE66B,OAAQD,EAAKoB,IAASrB,EACpCA,CACR,CA5ODlB,EAAI4C,aAAJ,6BAAmD,CACjD7zB,GAAI,CAAC,EAAM,IACX1pB,KAAM,+BACNw9C,uBAAwB,SAAS3C,GAC/BA,EAAG4C,sBAAwB9C,EAAI+C,oBAAoB7G,IACnDgE,EAAG8C,YAAchD,EAAIiD,WAAWC,MAChChD,EAAGiD,eAAiB,GACpBjD,EAAGkD,aAAe,GAClBlD,EAAGmD,gBAAkB,GACrBnD,EAAGoD,iBAAmB,GACtBpD,EAAGqD,cAAgBvD,EAAIwD,aAAavC,UACpCf,EAAGa,WAAa,GAChBb,EAAGuD,eAAiB,EACrB,EACDxD,oBAAqBA,GAEvBD,EAAI4C,aAAJ,6BAAmD,CACjD7zB,GAAI,CAAC,EAAM,IACX1pB,KAAM,+BACNw9C,uBAAwB,SAAS3C,GAC/BA,EAAG4C,sBAAwB9C,EAAI+C,oBAAoB7G,IACnDgE,EAAG8C,YAAchD,EAAIiD,WAAWC,MAChChD,EAAGiD,eAAiB,GACpBjD,EAAGkD,aAAe,GAClBlD,EAAGmD,gBAAkB,GACrBnD,EAAGoD,iBAAmB,GACtBpD,EAAGqD,cAAgBvD,EAAIwD,aAAavC,UACpCf,EAAGa,WAAa,GAChBb,EAAGuD,eAAiB,EACrB,EACDxD,oBAAqBA,oBC3CvB,IAAIlE,EAAQrqB,EAAQ,OACpBA,EAAQ,OACR,IAAIgyB,EAAO3H,EAAM2H,KAEjBztB,EAAQ0tB,oBAAsB,CAE5Bt+C,KAAM,iBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CAENgE,KAAM,yBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKG,QAChBD,aAAa,EACbE,QAAS,qBACR,CAED9+C,KAAM,qCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,gCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKK,IAChBH,aAAa,EACbE,QAAS,mBAEV,CAED9+C,KAAM,iBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKM,YAChBJ,aAAa,EACbE,QAAS,gBAIbluB,EAAQquB,mBAAqB,CAC3Bj/C,KAAM,uBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACbM,YAAa,uBACbljD,MAAO,CAAC,CACNgE,KAAM,2CACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,gCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKK,IAChBH,aAAa,EACbE,QAAS,kBAIb,CACEP,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKS,UAChBP,aAAa,EACbQ,UAAU,EACVC,sBAAuB,uCCkE3B,IAAI3I,EAAQrqB,EAAQ,OACpBA,EAAQ,OACRA,EAAQ,OAGR,IAAIgyB,EAAO1xB,EAAOiE,QAAU8lB,EAAM2H,KAAO3H,EAAM2H,MAAQ,CAAC,EAsNxD,SAASiB,EAAmBphD,EAAOqhD,EAAW/mB,GAC5C,GAAGA,EAAI+mB,EAAW,CAChB,IAAIxvC,EAAQ,IAAI7P,MAAM,+BAItB,MAHA6P,EAAMyvC,UAAYthD,EAAMjB,SACxB8S,EAAMwvC,UAAYA,EAClBxvC,EAAM0vC,UAAYjnB,EACZzoB,CACP,CACF,CAzNDsuC,EAAKG,MAAQ,CACXC,UAAkB,EAClBiB,YAAkB,GAClBC,iBAAkB,IAClBC,QAAkB,KAOpBvB,EAAKK,KAAO,CACVjL,KAAkB,EAClBoM,QAAkB,EAClBhB,QAAkB,EAClBM,UAAkB,EAClBH,YAAkB,EAClBc,KAAkB,EAClBf,IAAkB,EAClBgB,MAAkB,EAClBC,SAAkB,EAClBC,KAAkB,EAClBC,WAAiB,GACjBC,SAAiB,GACjBC,KAAiB,GACjBC,KAAiB,GACjB1B,SAAiB,GACjB2B,IAAiB,GACjBC,gBAAiB,GACjBC,UAAiB,GACjBC,QAAiB,GACjBC,gBAAiB,GACjBC,UAAiB,IAgBnBtC,EAAK7+C,OAAS,SAAS++C,EAAUr/C,EAAM0/C,EAAa5iD,EAAOyW,GAQzD,GAAGikC,EAAMqB,KAAK7yC,QAAQlJ,GAAQ,CAE5B,IADA,IAAIulC,EAAM,GACFx/B,EAAI,EAAGA,EAAI/F,EAAMiB,SAAU8E,OACjBxE,IAAbvB,EAAM+F,IACPw/B,EAAI/iC,KAAKxC,EAAM+F,IAGnB/F,EAAQulC,CACT,CAED,IAAI+D,EAAM,CACRiZ,SAAUA,EACVr/C,KAAMA,EACN0/C,YAAaA,EACbQ,SAAUR,GAAelI,EAAMqB,KAAK7yC,QAAQlJ,GAC5CA,MAAOA,GAST,OAPGyW,GAAW,sBAAuBA,IAEnC6yB,EAAIsb,kBAAoBnuC,EAAQmuC,kBAGhCtb,EAAIub,SAAWxC,EAAKyC,KAAKxb,IAEpBA,CACR,EAWD+Y,EAAKyC,KAAO,SAASxb,EAAK7yB,GACxB,IAAIquC,EAEJ,GAAGpK,EAAMqB,KAAK7yC,QAAQogC,GAAM,CAC1Bwb,EAAO,GACP,IAAI,IAAI/+C,EAAI,EAAGA,EAAIujC,EAAIroC,SAAU8E,EAC/B++C,EAAKtiD,KAAK6/C,EAAKyC,KAAKxb,EAAIvjC,GAAI0Q,IAE9B,OAAOquC,CACR,CAED,MAAkB,iBAARxb,EAEDA,GAGTwb,EAAO,CACLvC,SAAUjZ,EAAIiZ,SACdr/C,KAAMomC,EAAIpmC,KACV0/C,YAAatZ,EAAIsZ,YACjBQ,SAAU9Z,EAAI8Z,SACdpjD,MAAOqiD,EAAKyC,KAAKxb,EAAItpC,MAAOyW,IAE3BA,IAAYA,EAAQsuC,2BAErBD,EAAKF,kBAAoBtb,EAAIsb,mBAExBE,EACR,EAcDzC,EAAKjiB,OAAS,SAAS4kB,EAAMC,EAAMxuC,GACjC,GAAGikC,EAAMqB,KAAK7yC,QAAQ87C,GAAO,CAC3B,IAAItK,EAAMqB,KAAK7yC,QAAQ+7C,GACrB,OAAO,EAET,GAAGD,EAAK/jD,SAAWgkD,EAAKhkD,OACtB,OAAO,EAET,IAAI,IAAI8E,EAAI,EAAGA,EAAIi/C,EAAK/jD,SAAU8E,EAChC,IAAIs8C,EAAKjiB,OAAO4kB,EAAKj/C,GAAIk/C,EAAKl/C,IAC5B,OAAO,EAGX,OAAO,CACR,CAED,UAAUi/C,UAAgBC,EACxB,OAAO,EAGT,GAAmB,iBAATD,EACR,OAAOA,IAASC,EAGlB,IAAIC,EAAQF,EAAKzC,WAAa0C,EAAK1C,UACjCyC,EAAK9hD,OAAS+hD,EAAK/hD,MACnB8hD,EAAKpC,cAAgBqC,EAAKrC,aAC1BoC,EAAK5B,WAAa6B,EAAK7B,UACvBf,EAAKjiB,OAAO4kB,EAAKhlD,MAAOilD,EAAKjlD,OAK/B,OAJGyW,GAAWA,EAAQ0uC,2BACpBD,EAAQA,GAAUF,EAAKJ,oBAAsBK,EAAKL,mBAG7CM,CACR,EAYD7C,EAAK+C,kBAAoB,SAAS9+B,GAGhC,IAAI83B,EAAK93B,EAAE++B,UACX,GAAU,MAAPjH,EAeH,OAToB,IAALA,EAOJ93B,EAAEg/B,QAAa,IAALlH,IAAc,GAJxBA,CAOZ,EAoID,SAASmH,EAASrjD,EAAOqhD,EAAWr8C,EAAOuP,GAEzC,IAAI2S,EAGJk6B,EAAmBphD,EAAOqhD,EAAW,GAGrC,IAAIiC,EAAKtjD,EAAMmjD,UAEf9B,IAGA,IAAIhB,EAAiB,IAALiD,EAGZtiD,EAAY,GAALsiD,EAGXp8B,EAAQlnB,EAAMjB,SACd,IAiBIjB,EAEA4kD,EAnBA3jD,EA3HgB,SAASiB,EAAOqhD,GAIpC,IAAInF,EAAKl8C,EAAMmjD,UAEf,GADA9B,IACU,MAAPnF,EAAH,CAKA,IAAIn9C,EAEJ,GADoB,IAALm9C,EAIR,CAGL,IAAIqH,EAAqB,IAALrH,EACpBkF,EAAmBphD,EAAOqhD,EAAWkC,GACrCxkD,EAASiB,EAAMojD,OAAOG,GAAiB,EACxC,MAPCxkD,EAASm9C,EASX,GAAGn9C,EAAS,EACV,MAAM,IAAIiD,MAAM,oBAAsBjD,GAExC,OAAOA,CAnBN,CAoBF,CA+FcykD,CAAgBxjD,EAAOqhD,GAIpC,GAHAA,GAAan6B,EAAQlnB,EAAMjB,cAGbM,IAAXN,GAAwBA,EAASsiD,EAAW,CAC7C,GAAG9sC,EAAQusB,OAAQ,CACjB,IAAIjvB,EAAQ,IAAI7P,MAAM,sCAItB,MAHA6P,EAAMyvC,UAAYthD,EAAMjB,SACxB8S,EAAMwvC,UAAYA,EAClBxvC,EAAM0vC,UAAYxiD,EACZ8S,CACP,CAED9S,EAASsiD,CACV,CAQD,IAAIX,EAA+B,KAAV,GAAL4C,GACpB,GAAG5C,EAGD,GADA5iD,EAAQ,QACMuB,IAAXN,EAED,OAAQ,CAEN,GADAqiD,EAAmBphD,EAAOqhD,EAAW,GAClCrhD,EAAMA,MAAM,KAAOU,OAAOC,aAAa,EAAG,GAAI,CAC/CX,EAAM8+C,SAAS,GACfuC,GAAa,EACb,KACD,CACDn6B,EAAQlnB,EAAMjB,SACdjB,EAAMwC,KAAK+iD,EAASrjD,EAAOqhD,EAAWr8C,EAAQ,EAAGuP,IACjD8sC,GAAan6B,EAAQlnB,EAAMjB,QAC5B,MAGD,KAAMA,EAAS,GACbmoB,EAAQlnB,EAAMjB,SACdjB,EAAMwC,KAAK+iD,EAASrjD,EAAOjB,EAAQiG,EAAQ,EAAGuP,IAC9C8sC,GAAan6B,EAAQlnB,EAAMjB,SAC3BA,GAAUmoB,EAAQlnB,EAAMjB,SAc9B,QARaM,IAAVvB,GAAuBuiD,IAAaF,EAAKG,MAAMC,WAChDv/C,IAASm/C,EAAKK,KAAKS,YACnByB,EAAoB1iD,EAAMA,MAAMjB,SAMrBM,IAAVvB,GAAuByW,EAAQkvC,kBAChCpD,IAAaF,EAAKG,MAAMC,WAGvBv/C,IAASm/C,EAAKK,KAAKS,WACpBliD,EAAS,EAAG,CAEZ,IAAI2kD,EAAY1jD,EAAM2uB,KAClBg1B,EAAiBtC,EACjBuC,EAAS,EAab,GAZG5iD,IAASm/C,EAAKK,KAAKS,YAOpBG,EAAmBphD,EAAOqhD,EAAW,GACrCuC,EAAS5jD,EAAMmjD,UACf9B,KAGY,IAAXuC,EACD,IAGE18B,EAAQlnB,EAAMjB,SACd,IAKImiD,EAAWmC,EAASrjD,EAAOqhD,EAAWr8C,EAAQ,EALjC,CAEf87B,QAAQ,EACR2iB,kBAAkB,IAGhBI,EAAO38B,EAAQlnB,EAAMjB,SACzBsiD,GAAawC,EACV7iD,GAAQm/C,EAAKK,KAAKS,WACnB4C,IAKF,IAAIC,EAAK5C,EAASb,SACfwD,IAAS9kD,GACT+kD,IAAO3D,EAAKG,MAAMC,WAAauD,IAAO3D,EAAKG,MAAMmB,mBAClD3jD,EAAQ,CAACojD,GAGZ,CADC,MAAMv+B,GACP,MAEUtjB,IAAVvB,IAEDkC,EAAM2uB,KAAO+0B,EACbrC,EAAYsC,EAEf,CAED,QAAatkD,IAAVvB,EAAqB,CAItB,QAAcuB,IAAXN,EAAsB,CACvB,GAAGwV,EAAQusB,OACT,MAAM,IAAI9+B,MAAM,sDAGlBjD,EAASsiD,CACV,CAED,GAAGrgD,IAASm/C,EAAKK,KAAKiC,UAEpB,IADA3kD,EAAQ,GACFiB,EAAS,EAAGA,GAAU,EAC1BqiD,EAAmBphD,EAAOqhD,EAAW,GACrCvjD,GAAS4C,OAAOC,aAAaX,EAAMyO,YACnC4yC,GAAa,OAGfvjD,EAAQkC,EAAM8+C,SAAS//C,GACvBsiD,GAAatiD,CAEhB,CAGD,IAAIglD,OAAoC1kD,IAAtBqjD,EAAkC,KAAO,CACzDA,kBAAmBA,GAIrB,OAAOvC,EAAK7+C,OAAO++C,EAAUr/C,EAAM0/C,EAAa5iD,EAAOimD,EACxD,CA1ND5D,EAAK6D,QAAU,SAAShkD,EAAOuU,QACdlV,IAAZkV,IACDA,EAAU,CACRusB,QAAQ,EACRmjB,eAAe,EACfR,kBAAkB,IAGA,kBAAZlvC,IACRA,EAAU,CACRusB,OAAQvsB,EACR0vC,eAAe,EACfR,kBAAkB,IAGjB,WAAYlvC,IACfA,EAAQusB,QAAS,GAEd,kBAAmBvsB,IACtBA,EAAQ0vC,eAAgB,GAErB,qBAAsB1vC,IACzBA,EAAQkvC,kBAAmB,GAIT,iBAAVzjD,IACRA,EAAQw4C,EAAMqB,KAAKC,aAAa95C,IAGlC,IAAIkkD,EAAYlkD,EAAMjB,SAClBjB,EAAQulD,EAASrjD,EAAOA,EAAMjB,SAAU,EAAGwV,GAC/C,GAAGA,EAAQ0vC,eAAoC,IAAnBjkD,EAAMjB,SAAgB,CAChD,IAAI8S,EAAQ,IAAI7P,MAAM,kDAGtB,MAFA6P,EAAMqyC,UAAYA,EAClBryC,EAAMwvC,UAAYrhD,EAAMjB,SAClB8S,CACP,CACD,OAAO/T,CACR,EA4LDqiD,EAAKgE,MAAQ,SAAS/c,GACpB,IAAIpnC,EAAQw4C,EAAMqB,KAAKC,eAGnBwJ,EAAKlc,EAAIiZ,SAAWjZ,EAAIpmC,KAGxBlD,EAAQ06C,EAAMqB,KAAKC,eAGnBsK,GAAuB,EAQ3B,GAPG,sBAAuBhd,IACxBgd,GAAuB,EACpBhd,EAAIub,WACLyB,EAAuBjE,EAAKjiB,OAAOkJ,EAAKA,EAAIub,YAI7CyB,EACDtmD,EAAMkgD,SAAS5W,EAAIsb,wBACd,GAAGtb,EAAI8Z,SAAU,CAInB9Z,EAAIsZ,YACL4C,GAAM,GAGNxlD,EAAMi8C,QAAQ,GAIhB,IAAI,IAAIl2C,EAAI,EAAGA,EAAIujC,EAAItpC,MAAMiB,SAAU8E,OACjBxE,IAAjB+nC,EAAItpC,MAAM+F,IACX/F,EAAMumD,UAAUlE,EAAKgE,MAAM/c,EAAItpC,MAAM+F,IAG1C,MAEC,GAAGujC,EAAIpmC,OAASm/C,EAAKK,KAAKiC,UACxB,IAAQ5+C,EAAI,EAAGA,EAAIujC,EAAItpC,MAAMiB,SAAU8E,EACrC/F,EAAMwmD,SAASld,EAAItpC,MAAMoB,WAAW2E,SAMnCujC,EAAIpmC,OAASm/C,EAAKK,KAAKG,SACxBvZ,EAAItpC,MAAMiB,OAAS,IAEW,IAA5BqoC,EAAItpC,MAAMoB,WAAW,IACc,IAAV,IAA1BkoC,EAAItpC,MAAMoB,WAAW,KAEO,MAA5BkoC,EAAItpC,MAAMoB,WAAW,IACe,MAAV,IAA1BkoC,EAAItpC,MAAMoB,WAAW,KACtBpB,EAAMkgD,SAAS5W,EAAItpC,MAAM+X,OAAO,IAEhC/X,EAAMkgD,SAAS5W,EAAItpC,OASzB,GAHAkC,EAAM+5C,QAAQuJ,GAGXxlD,EAAMiB,UAAY,IAGnBiB,EAAM+5C,QAAyB,IAAjBj8C,EAAMiB,cACf,CAKL,IAAIiqC,EAAMlrC,EAAMiB,SACZwlD,EAAW,GACf,GACEA,GAAY7jD,OAAOC,aAAmB,IAANqoC,GAChCA,KAAc,QACRA,EAAM,GAIdhpC,EAAM+5C,QAA0B,IAAlBwK,EAASxlD,QAIvB,IAAQ8E,EAAI0gD,EAASxlD,OAAS,EAAG8E,GAAK,IAAKA,EACzC7D,EAAM+5C,QAAQwK,EAASrlD,WAAW2E,GAErC,CAID,OADA7D,EAAMqkD,UAAUvmD,GACTkC,CACR,EAUDmgD,EAAKqE,SAAW,SAASC,GAEvB,IAOI7F,EAAM8F,EAAY5mD,EAAOsmB,EAPzBrc,EAAS08C,EAAI/rC,MAAM,KACnB1Y,EAAQw4C,EAAMqB,KAAKC,eAGvB95C,EAAM+5C,QAAQ,GAAKvV,SAASz8B,EAAO,GAAI,IAAMy8B,SAASz8B,EAAO,GAAI,KAIjE,IAAI,IAAIlE,EAAI,EAAGA,EAAIkE,EAAOhJ,SAAU8E,EAAG,CAGrC+6C,GAAO,EACP8F,EAAa,GACb5mD,EAAQ0mC,SAASz8B,EAAOlE,GAAI,IAC5B,GACEugB,EAAY,IAARtmB,EACJA,KAAkB,EAEd8gD,IACFx6B,GAAK,KAEPsgC,EAAWpkD,KAAK8jB,GAChBw6B,GAAO,QACD9gD,EAAQ,GAGhB,IAAI,IAAIw8B,EAAIoqB,EAAW3lD,OAAS,EAAGu7B,GAAK,IAAKA,EAC3Ct6B,EAAM+5C,QAAQ2K,EAAWpqB,GAE5B,CAED,OAAOt6B,CACR,EAWDmgD,EAAKwE,SAAW,SAAS3kD,GACvB,IAAIykD,EAGgB,iBAAVzkD,IACRA,EAAQw4C,EAAMqB,KAAKC,aAAa95C,IAIlC,IAAIokB,EAAIpkB,EAAMmjD,UACdsB,EAAMzmD,KAAKC,MAAMmmB,EAAI,IAAM,IAAOA,EAAI,GAKtC,IADA,IAAItmB,EAAQ,EACNkC,EAAMjB,SAAW,GAErBjB,IAAiB,EAEV,KAHPsmB,EAAIpkB,EAAMmjD,WAIRrlD,GAAa,IAAJsmB,GAGTqgC,GAAO,KAAO3mD,EAAQsmB,GACtBtmB,EAAQ,GAIZ,OAAO2mD,CACR,EAYDtE,EAAKyE,cAAgB,SAASC,GAsB5B,IAAIC,EAAO,IAAIviD,KAGXwiD,EAAOvgB,SAASqgB,EAAIhvC,OAAO,EAAG,GAAI,IACtCkvC,EAAQA,GAAQ,GAAM,KAAOA,EAAO,IAAOA,EAC3C,IAAIC,EAAKxgB,SAASqgB,EAAIhvC,OAAO,EAAG,GAAI,IAAM,EACtCovC,EAAKzgB,SAASqgB,EAAIhvC,OAAO,EAAG,GAAI,IAChCqvC,EAAK1gB,SAASqgB,EAAIhvC,OAAO,EAAG,GAAI,IAChCsvC,EAAK3gB,SAASqgB,EAAIhvC,OAAO,EAAG,GAAI,IAChCuvC,EAAK,EAGT,GAAGP,EAAI9lD,OAAS,GAAI,CAElB,IAAIkc,EAAI4pC,EAAIxb,OAAO,IACfnpC,EAAM,GAGD,MAAN+a,GAAmB,MAANA,IAEdmqC,EAAK5gB,SAASqgB,EAAIhvC,OAAO,GAAI,GAAI,IACjC3V,GAAO,EAEV,CAMD,GAHA4kD,EAAKO,eAAeN,EAAMC,EAAIC,GAC9BH,EAAKQ,YAAYJ,EAAIC,EAAIC,EAAI,GAE1BllD,IAGQ,OADT+a,EAAI4pC,EAAIxb,OAAOnpC,KACO,MAAN+a,GAAW,CAEzB,IAIIpd,EAAoB,GAJT2mC,SAASqgB,EAAIhvC,OAAO3V,EAAM,EAAG,GAAI,IACjCskC,SAASqgB,EAAIhvC,OAAO3V,EAAM,EAAG,GAAI,IAIhDrC,GAAU,IAGD,MAANod,EACD6pC,EAAKS,SAAST,EAAOjnD,GAErBinD,EAAKS,SAAST,EAAOjnD,EAExB,CAGH,OAAOinD,CACR,EASD3E,EAAKqF,sBAAwB,SAASC,GAyBpC,IAAIX,EAAO,IAAIviD,KAEXmjD,EAAOlhB,SAASihB,EAAQ5vC,OAAO,EAAG,GAAI,IACtCmvC,EAAKxgB,SAASihB,EAAQ5vC,OAAO,EAAG,GAAI,IAAM,EAC1CovC,EAAKzgB,SAASihB,EAAQ5vC,OAAO,EAAG,GAAI,IACpCqvC,EAAK1gB,SAASihB,EAAQ5vC,OAAO,EAAG,GAAI,IACpCsvC,EAAK3gB,SAASihB,EAAQ5vC,OAAO,GAAI,GAAI,IACrCuvC,EAAK5gB,SAASihB,EAAQ5vC,OAAO,GAAI,GAAI,IACrC8vC,EAAM,EACN9nD,EAAS,EACT+nD,GAAQ,EAE8B,MAAvCH,EAAQpc,OAAOoc,EAAQ1mD,OAAS,KACjC6mD,GAAQ,GAGV,IAAI1lD,EAAMulD,EAAQ1mD,OAAS,EAAGkc,EAAIwqC,EAAQpc,OAAOnpC,GACxC,MAAN+a,GAAmB,MAANA,IAMdpd,EAAoB,GAJL2mC,SAASihB,EAAQ5vC,OAAO3V,EAAM,EAAG,GAAI,IACrCskC,SAASihB,EAAQ5vC,OAAO3V,EAAM,EAAG,GAAI,IAIpDrC,GAAU,IAGD,MAANod,IACDpd,IAAW,GAGb+nD,GAAQ,GAmBV,MAf0B,MAAvBH,EAAQpc,OAAO,MAChBsc,EAA2C,IAArCE,WAAWJ,EAAQ5vC,OAAO,IAAK,KAGpC+vC,GACDd,EAAKO,eAAeK,EAAMV,EAAIC,GAC9BH,EAAKQ,YAAYJ,EAAIC,EAAIC,EAAIO,GAG7Bb,EAAKS,SAAST,EAAOjnD,KAErBinD,EAAKgB,YAAYJ,EAAMV,EAAIC,GAC3BH,EAAKiB,SAASb,EAAIC,EAAIC,EAAIO,IAGrBb,CACR,EAaD3E,EAAK6F,cAAgB,SAASlB,GAE5B,GAAmB,iBAATA,EACR,OAAOA,EAGT,IAAInH,EAAO,GAGPsI,EAAS,GACbA,EAAO3lD,MAAM,GAAKwkD,EAAKoB,kBAAkBrwC,OAAO,IAChDowC,EAAO3lD,KAAK,IAAMwkD,EAAKqB,cAAgB,IACvCF,EAAO3lD,KAAK,GAAKwkD,EAAKsB,cACtBH,EAAO3lD,KAAK,GAAKwkD,EAAKuB,eACtBJ,EAAO3lD,KAAK,GAAKwkD,EAAKwB,iBACtBL,EAAO3lD,KAAK,GAAKwkD,EAAKyB,iBAGtB,IAAI,IAAI1iD,EAAI,EAAGA,EAAIoiD,EAAOlnD,SAAU8E,EAC/BoiD,EAAOpiD,GAAG9E,OAAS,IACpB4+C,GAAQ,KAEVA,GAAQsI,EAAOpiD,GAIjB,OAFA85C,GAAQ,GAGT,EASDwC,EAAKqG,sBAAwB,SAAS1B,GAEpC,GAAmB,iBAATA,EACR,OAAOA,EAGT,IAAInH,EAAO,GAGPsI,EAAS,GACbA,EAAO3lD,KAAK,GAAKwkD,EAAKoB,kBACtBD,EAAO3lD,KAAK,IAAMwkD,EAAKqB,cAAgB,IACvCF,EAAO3lD,KAAK,GAAKwkD,EAAKsB,cACtBH,EAAO3lD,KAAK,GAAKwkD,EAAKuB,eACtBJ,EAAO3lD,KAAK,GAAKwkD,EAAKwB,iBACtBL,EAAO3lD,KAAK,GAAKwkD,EAAKyB,iBAGtB,IAAI,IAAI1iD,EAAI,EAAGA,EAAIoiD,EAAOlnD,SAAU8E,EAC/BoiD,EAAOpiD,GAAG9E,OAAS,IACpB4+C,GAAQ,KAEVA,GAAQsI,EAAOpiD,GAIjB,OAFA85C,GAAQ,GAGT,EAUDwC,EAAKsG,aAAe,SAAS10B,GAC3B,IAAI4rB,EAAOnF,EAAMqB,KAAKC,eACtB,GAAG/nB,IAAM,KAAQA,EAAI,IACnB,OAAO4rB,EAAK+I,aAAa30B,EAAG,GAE9B,GAAGA,IAAM,OAAUA,EAAI,MACrB,OAAO4rB,EAAK+I,aAAa30B,EAAG,IAE9B,GAAGA,IAAM,SAAYA,EAAI,QACvB,OAAO4rB,EAAK+I,aAAa30B,EAAG,IAE9B,GAAGA,IAAM,YAAcA,EAAI,WACzB,OAAO4rB,EAAK+I,aAAa30B,EAAG,IAE9B,IAAIlgB,EAAQ,IAAI7P,MAAM,sCAEtB,MADA6P,EAAM80C,QAAU50B,EACVlgB,CACP,EAUDsuC,EAAKyG,aAAe,SAAS5mD,GAEP,iBAAVA,IACRA,EAAQw4C,EAAMqB,KAAKC,aAAa95C,IAGlC,IAAIs6B,EAAqB,EAAjBt6B,EAAMjB,SACd,GAAGu7B,EAAI,GACL,MAAM,IAAIt4B,MAAM,sCAElB,OAAOhC,EAAM6mD,aAAavsB,EAC3B,EAyBD6lB,EAAK2G,SAAW,SAAS1f,EAAK1N,EAAGknB,EAASmG,GACxC,IAAIpJ,GAAO,EAGX,GAAIvW,EAAIiZ,WAAa3mB,EAAE2mB,eAAmC,IAAhB3mB,EAAE2mB,UACzCjZ,EAAIpmC,OAAS04B,EAAE14B,WAA2B,IAAZ04B,EAAE14B,KA6DzB+lD,IACL3f,EAAIiZ,WAAa3mB,EAAE2mB,UACpB0G,EAAOzmD,KACL,IAAMo5B,EAAE53B,KAAR,yBACyB43B,EAAE2mB,SAAW,WACtCjZ,EAAIiZ,SAAW,KAEhBjZ,EAAIpmC,OAAS04B,EAAE14B,MAChB+lD,EAAOzmD,KACL,IAAMo5B,EAAE53B,KAAR,oBACoB43B,EAAE14B,KAAO,WAAaomC,EAAIpmC,KAAO,WArEzD,GAAGomC,EAAIsZ,cAAgBhnB,EAAEgnB,kBACG,IAAnBhnB,EAAEgnB,YAA8B,CAIvC,GAHA/C,GAAO,EAGJjkB,EAAE57B,OAAS06C,EAAMqB,KAAK7yC,QAAQ0yB,EAAE57B,OAEjC,IADA,IAAIqL,EAAI,EACAtF,EAAI,EAAG85C,GAAQ95C,EAAI61B,EAAE57B,MAAMiB,SAAU8E,EAC3C85C,EAAOjkB,EAAE57B,MAAM+F,GAAGmjD,WAAY,EAC3B5f,EAAItpC,MAAMqL,MACXw0C,EAAOwC,EAAK2G,SAAS1f,EAAItpC,MAAMqL,GAAIuwB,EAAE57B,MAAM+F,GAAI+8C,EAASmG,MAEpD59C,EACMuwB,EAAE57B,MAAM+F,GAAGmjD,WACnBrJ,GAAO,KAGPA,GAAQoJ,GACVA,EAAOzmD,KACL,IAAMo5B,EAAE53B,KAAR,gBACgB43B,EAAE2mB,SAAW,YAC7B3mB,EAAE14B,KAAO,4BACT04B,EAAE57B,MAAMiB,OAAS,WACjBqoC,EAAItpC,MAAMiB,OAAS,KAK3B,GAAG4+C,GAAQiD,EAUT,GATGlnB,EAAEknB,UACHA,EAAQlnB,EAAEknB,SAAWxZ,EAAItpC,OAExB47B,EAAEsnB,cACHJ,EAAQlnB,EAAEsnB,aAAe5Z,GAExB1N,EAAEutB,0BAA4B,sBAAuB7f,IACtDwZ,EAAQlnB,EAAEutB,0BAA4B7f,EAAIsb,mBAEzChpB,EAAEynB,uBAAyB,sBAAuB/Z,EAEnD,GAAGA,EAAIsb,kBAAkB3jD,OAAS,EAChC6hD,EAAQlnB,EAAEynB,uBAAyB,OAC9B,CAGL,GAAc,IADD/Z,EAAIsb,kBAAkBxjD,WAAW,GAE5C,MAAM,IAAI8C,MACR,6DAEJ4+C,EAAQlnB,EAAEynB,uBAAyB/Z,EAAIsb,kBAAkB/4C,MAAM,EAChE,CAGN,MAASo9C,GACRA,EAAOzmD,KACL,IAAMo5B,EAAE53B,KAAR,2BAC2B43B,EAAEgnB,YAAc,WAC3CtZ,EAAIsZ,YAAc,KAexB,OAAO/C,CACR,EAGD,IAAIuJ,EAAiB,qBAWrB/G,EAAKgH,YAAc,SAAS/f,EAAKggB,EAAOC,GACtC,IAAI1J,EAAO,GAIX0J,EAAcA,GAAe,GAD7BD,EAAQA,GAAS,GAIN,IACTzJ,GAAQ,MAKV,IADA,IAAI2J,EAAS,GACLzjD,EAAI,EAAGA,EAAIujD,EAAQC,IAAexjD,EACxCyjD,GAAU,IAKZ,OADA3J,GAAQ2J,EAAS,QACVlgB,EAAIiZ,UACX,KAAKF,EAAKG,MAAMC,UACd5C,GAAQ,aACR,MACF,KAAKwC,EAAKG,MAAMkB,YACd7D,GAAQ,eACR,MACF,KAAKwC,EAAKG,MAAMmB,iBACd9D,GAAQ,oBACR,MACF,KAAKwC,EAAKG,MAAMoB,QACd/D,GAAQ,WAIV,GAAGvW,EAAIiZ,WAAaF,EAAKG,MAAMC,UAI7B,OAHA5C,GAAQvW,EAAIpmC,KAGLomC,EAAIpmC,MACX,KAAKm/C,EAAKK,KAAKjL,KACboI,GAAQ,UACR,MACF,KAAKwC,EAAKK,KAAKmB,QACbhE,GAAQ,aACR,MACF,KAAKwC,EAAKK,KAAKG,QACbhD,GAAQ,aACR,MACF,KAAKwC,EAAKK,KAAKS,UACbtD,GAAQ,gBACR,MACF,KAAKwC,EAAKK,KAAKM,YACbnD,GAAQ,kBACR,MACF,KAAKwC,EAAKK,KAAKoB,KACbjE,GAAQ,UACR,MACF,KAAKwC,EAAKK,KAAKK,IACblD,GAAQ,uBACR,MACF,KAAKwC,EAAKK,KAAKqB,MACblE,GAAQ,uBACR,MACF,KAAKwC,EAAKK,KAAKsB,SACbnE,GAAQ,6BACR,MACF,KAAKwC,EAAKK,KAAKuB,KACbpE,GAAQ,UACR,MACF,KAAKwC,EAAKK,KAAKwB,WACbrE,GAAQ,gBACR,MACF,KAAKwC,EAAKK,KAAKyB,SACbtE,GAAQ,kBACR,MACF,KAAKwC,EAAKK,KAAK0B,KACbvE,GAAQ,UACR,MACF,KAAKwC,EAAKK,KAAK2B,KACbxE,GAAQ,gCACR,MACF,KAAKwC,EAAKK,KAAKC,SACb9C,GAAQ,cACR,MACF,KAAKwC,EAAKK,KAAK4B,IACbzE,GAAQ,SACR,MACF,KAAKwC,EAAKK,KAAK6B,gBACb1E,GAAQ,sBACR,MACF,KAAKwC,EAAKK,KAAK+G,UACb5J,GAAQ,uBACR,MACF,KAAKwC,EAAKK,KAAK+B,QACb5E,GAAQ,cACR,MACF,KAAKwC,EAAKK,KAAKgC,gBACb7E,GAAQ,sBACR,MACF,KAAKwC,EAAKK,KAAKiC,UACb9E,GAAQ,qBAIVA,GAAQvW,EAAIpmC,KAMd,GAHA28C,GAAQ,KACRA,GAAQ2J,EAAS,gBAAkBlgB,EAAIsZ,YAAc,KAElDtZ,EAAI8Z,SAAU,CACf,IAAIsG,EAAY,EACZxL,EAAM,GACV,IAAQn4C,EAAI,EAAGA,EAAIujC,EAAItpC,MAAMiB,SAAU8E,OACjBxE,IAAjB+nC,EAAItpC,MAAM+F,KACX2jD,GAAa,EACbxL,GAAOmE,EAAKgH,YAAY/f,EAAItpC,MAAM+F,GAAIujD,EAAQ,EAAGC,GAC7CxjD,EAAI,EAAKujC,EAAItpC,MAAMiB,SACrBi9C,GAAO,MAIb2B,GAAQ2J,EAAS,eAAiBE,EAAYxL,CAC/C,KAAM,CAEL,GADA2B,GAAQ2J,EAAS,UACdlgB,EAAIpmC,OAASm/C,EAAKK,KAAKK,IAAK,CAC7B,IAAI4D,EAAMtE,EAAKwE,SAASvd,EAAItpC,OAC5B6/C,GAAQ8G,EACLjM,EAAMiP,KAAOjP,EAAMiP,IAAIC,MACrBjD,KAAOjM,EAAMiP,IAAIC,OAClB/J,GAAQ,KAAOnF,EAAMiP,IAAIC,KAAKjD,GAAO,KAG1C,CACD,GAAGrd,EAAIpmC,OAASm/C,EAAKK,KAAKG,QACxB,IACEhD,GAAQwC,EAAKyG,aAAaxf,EAAItpC,MAG/B,CAFC,MAAM6kB,GACNg7B,GAAQ,KAAOnF,EAAMqB,KAAK8N,WAAWvgB,EAAItpC,MAC1C,MACI,GAAGspC,EAAIpmC,OAASm/C,EAAKK,KAAKS,WAS/B,GAPG7Z,EAAItpC,MAAMiB,OAAS,EAEpB4+C,GAAQ,KAAOnF,EAAMqB,KAAK8N,WAAWvgB,EAAItpC,MAAM6L,MAAM,IAErDg0C,GAAQ,SAGPvW,EAAItpC,MAAMiB,OAAS,EAAG,CACvB,IAAI6kD,EAASxc,EAAItpC,MAAMoB,WAAW,GACrB,GAAV0kD,EACDjG,GAAQ,wBACAiG,EAAS,IACjBjG,GAAQ,KAAOiG,EAAS,sBAE3B,OACI,GAAGxc,EAAIpmC,OAASm/C,EAAKK,KAAKM,YAC3BoG,EAAe9iB,KAAKgD,EAAItpC,SAC1B6/C,GAAQ,IAAMvW,EAAItpC,MAAQ,MAE5B6/C,GAAQ,KAAOnF,EAAMqB,KAAK8N,WAAWvgB,EAAItpC,YACpC,GAAGspC,EAAIpmC,OAASm/C,EAAKK,KAAK0B,KAC/B,IACEvE,GAAQnF,EAAMqB,KAAK+N,WAAWxgB,EAAItpC,MAQnC,CAPC,MAAMoM,GACN,GAAiB,kBAAdA,EAAEhJ,QAIH,MAAMgJ,EAHNyzC,GACE,KAAOnF,EAAMqB,KAAK8N,WAAWvgB,EAAItpC,OAAS,mBAI/C,MACOspC,EAAIpmC,OAASm/C,EAAKK,KAAK6B,iBAC/Bjb,EAAIpmC,OAASm/C,EAAKK,KAAK+G,UACvB5J,GAAQvW,EAAItpC,MACJopD,EAAe9iB,KAAKgD,EAAItpC,OAChC6/C,GAAQ,KAAOnF,EAAMqB,KAAK8N,WAAWvgB,EAAItpC,OACZ,IAArBspC,EAAItpC,MAAMiB,OAClB4+C,GAAQ,SAERA,GAAQvW,EAAItpC,KAEf,CAED,OAAO6/C,CACR,aC33CD,IAAIkK,EAAM,CAAC,EACXp5B,EAAOiE,QAAUm1B,EAGjB,IAAIC,EAAoB,CAAC,EAWzBD,EAAI/nD,OAAS,SAASiP,EAAO6qB,EAAUmuB,GACrC,GAAuB,iBAAbnuB,EACR,MAAM,IAAI0N,UAAU,gCAEtB,QAAejoC,IAAZ0oD,GAA4C,iBAAZA,EACjC,MAAM,IAAIzgB,UAAU,+BAGtB,IAAI5nC,EAAS,GAEb,GAAKqP,aAAiBtM,WAGf,CACL,IAAIoB,EAAI,EACJq3B,EAAOtB,EAAS76B,OAChBipD,EAAQpuB,EAASyP,OAAO,GACxB3F,EAAS,CAAC,GACd,IAAI7/B,EAAI,EAAGA,EAAIkL,EAAMhQ,SAAU8E,EAAG,CAChC,IAAI,IAAIsF,EAAI,EAAG8xB,EAAQlsB,EAAMlL,GAAIsF,EAAIu6B,EAAO3kC,SAAUoK,EACpD8xB,GAASyI,EAAOv6B,IAAM,EACtBu6B,EAAOv6B,GAAK8xB,EAAQC,EACpBD,EAASA,EAAQC,EAAQ,EAG3B,KAAMD,EAAQ,GACZyI,EAAOpjC,KAAK26B,EAAQC,GACpBD,EAASA,EAAQC,EAAQ,CAE5B,CAGD,IAAIr3B,EAAI,EAAgB,IAAbkL,EAAMlL,IAAYA,EAAIkL,EAAMhQ,OAAS,IAAK8E,EACnDnE,GAAUsoD,EAGZ,IAAInkD,EAAI6/B,EAAO3kC,OAAS,EAAG8E,GAAK,IAAKA,EACnCnE,GAAUk6B,EAAS8J,EAAO7/B,GAE7B,MA3BCnE,EAkGJ,SAA+BqP,EAAO6qB,GACpC,IAAI/1B,EAAI,EACJq3B,EAAOtB,EAAS76B,OAChBipD,EAAQpuB,EAASyP,OAAO,GACxB3F,EAAS,CAAC,GACd,IAAI7/B,EAAI,EAAGA,EAAIkL,EAAMhQ,WAAY8E,EAAG,CAClC,IAAI,IAAIsF,EAAI,EAAG8xB,EAAQlsB,EAAM8vC,GAAGh7C,GAAIsF,EAAIu6B,EAAO3kC,SAAUoK,EACvD8xB,GAASyI,EAAOv6B,IAAM,EACtBu6B,EAAOv6B,GAAK8xB,EAAQC,EACpBD,EAASA,EAAQC,EAAQ,EAG3B,KAAMD,EAAQ,GACZyI,EAAOpjC,KAAK26B,EAAQC,GACpBD,EAASA,EAAQC,EAAQ,CAE5B,CAED,IAAIx7B,EAAS,GAGb,IAAImE,EAAI,EAAmB,IAAhBkL,EAAM8vC,GAAGh7C,IAAYA,EAAIkL,EAAMhQ,SAAW,IAAK8E,EACxDnE,GAAUsoD,EAGZ,IAAInkD,EAAI6/B,EAAO3kC,OAAS,EAAG8E,GAAK,IAAKA,EACnCnE,GAAUk6B,EAAS8J,EAAO7/B,IAG5B,OAAOnE,CACR,CAhIYuoD,CAAsBl5C,EAAO6qB,GA6BxC,GAAGmuB,EAAS,CACV,IAAIG,EAAQ,IAAIlc,OAAO,OAAS+b,EAAU,IAAK,KAC/CroD,EAASA,EAAOoV,MAAMozC,GAAOhtC,KAAK,OACnC,CAED,OAAOxb,CACR,EAUDmoD,EAAI7kD,OAAS,SAAS+L,EAAO6qB,GAC3B,GAAoB,iBAAV7qB,EACR,MAAM,IAAIu4B,UAAU,6BAEtB,GAAuB,iBAAb1N,EACR,MAAM,IAAI0N,UAAU,gCAGtB,IAAI6gB,EAAQL,EAAkBluB,GAC9B,IAAIuuB,EAAO,CAETA,EAAQL,EAAkBluB,GAAY,GACtC,IAAI,IAAI/1B,EAAI,EAAGA,EAAI+1B,EAAS76B,SAAU8E,EACpCskD,EAAMvuB,EAAS16B,WAAW2E,IAAMA,CAEnC,CAGDkL,EAAQA,EAAMgQ,QAAQ,MAAO,IAE7B,IAAImc,EAAOtB,EAAS76B,OAChBipD,EAAQpuB,EAASyP,OAAO,GACxBrpC,EAAQ,CAAC,GACb,IAAQ6D,EAAI,EAAGA,EAAIkL,EAAMhQ,OAAQ8E,IAAK,CACpC,IAAI/F,EAAQqqD,EAAMp5C,EAAM7P,WAAW2E,IACnC,QAAaxE,IAAVvB,EACD,OAGF,IAAI,IAAIqL,EAAI,EAAG8xB,EAAQn9B,EAAOqL,EAAInJ,EAAMjB,SAAUoK,EAChD8xB,GAASj7B,EAAMmJ,GAAK+xB,EACpBl7B,EAAMmJ,GAAa,IAAR8xB,EACXA,IAAU,EAGZ,KAAMA,EAAQ,GACZj7B,EAAMM,KAAa,IAAR26B,GACXA,IAAU,CAEb,CAGD,IAAI,IAAIwP,EAAI,EAAG17B,EAAM07B,KAAOud,GAASvd,EAAI17B,EAAMhQ,OAAS,IAAK0rC,EAC3DzqC,EAAMM,KAAK,GAGb,MAAqB,oBAAXo2B,OACDA,OAAOtyB,KAAKpE,EAAM29B,WAGpB,IAAIl7B,WAAWzC,EAAM29B,UAC7B,mBClJD,IAAI6a,EAAQrqB,EAAQ,OACpBA,EAAQ,OAERM,EAAOiE,QAAU8lB,EAAME,OAASF,EAAME,QAAU,CAAC,EAGjDF,EAAME,OAAO0P,WAAa5P,EAAME,OAAO0P,YAAc,CAAC,EAetD5P,EAAME,OAAO6D,aAAe,SAASF,EAAWx0C,GAC9C,IAAIggD,EAAMxL,EAOV,GANkB,iBAARwL,IACRA,EAAMrP,EAAME,OAAO2P,aAAaR,MAE9BA,EAAMA,MAGNA,EACF,MAAM,IAAI7lD,MAAM,0BAA4Bq6C,GAI9C,OAAO,IAAI7D,EAAME,OAAO4P,YAAY,CAClCjM,UAAWwL,EACXhgD,IAAKA,EACLmxC,SAAS,GAEZ,EAeDR,EAAME,OAAO4D,eAAiB,SAASD,EAAWx0C,GAChD,IAAIggD,EAAMxL,EAOV,GANkB,iBAARwL,IACRA,EAAMrP,EAAME,OAAO2P,aAAaR,MAE9BA,EAAMA,MAGNA,EACF,MAAM,IAAI7lD,MAAM,0BAA4Bq6C,GAI9C,OAAO,IAAI7D,EAAME,OAAO4P,YAAY,CAClCjM,UAAWwL,EACXhgD,IAAKA,EACLmxC,SAAS,GAEZ,EASDR,EAAME,OAAOD,kBAAoB,SAAS32C,EAAMu6C,GAC9Cv6C,EAAOA,EAAK2qC,cACZ+L,EAAME,OAAO0P,WAAWtmD,GAAQu6C,CACjC,EASD7D,EAAME,OAAO2P,aAAe,SAASvmD,GAEnC,OADAA,EAAOA,EAAK2qC,iBACD+L,EAAME,OAAO0P,WACf5P,EAAME,OAAO0P,WAAWtmD,GAE1B,IACR,EAED,IAAIwmD,EAAc9P,EAAME,OAAO4P,YAAc,SAAS/zC,GACpDxE,KAAKssC,UAAY9nC,EAAQ8nC,UACzBtsC,KAAKyK,KAAOzK,KAAKssC,UAAU7hC,KAC3BzK,KAAKupC,UAAYvpC,KAAKyK,KAAK8+B,UAC3BvpC,KAAKw4C,SAAU,EACfx4C,KAAKy4C,OAAS,KACdz4C,KAAKrQ,OAAS,KACdqQ,KAAK04C,IAAMl0C,EAAQykC,QAAUjpC,KAAKyK,KAAKw+B,QAAUjpC,KAAKyK,KAAK++B,QAC3DxpC,KAAK24C,SAAWn0C,EAAQykC,QACxBjpC,KAAKssC,UAAUhD,WAAW9kC,EAC3B,EA6BD+zC,EAAY9mD,UAAU0lB,MAAQ,SAAS3S,GACrCA,EAAUA,GAAW,CAAC,EACtB,IAAIo0C,EAAO,CAAC,EACZ,IAAI,IAAI9gD,KAAO0M,EACbo0C,EAAK9gD,GAAO0M,EAAQ1M,GAEtB8gD,EAAK3P,QAAUjpC,KAAK24C,SACpB34C,KAAKw4C,SAAU,EACfx4C,KAAKy4C,OAAShQ,EAAMqB,KAAKC,eACzB/pC,KAAKrQ,OAAS6U,EAAQ7U,QAAU84C,EAAMqB,KAAKC,eAC3C/pC,KAAKyK,KAAK0M,MAAMyhC,EACjB,EAODL,EAAY9mD,UAAUsnC,OAAS,SAAS/5B,GAOtC,IANGA,GAEDgB,KAAKy4C,OAAOnE,UAAUt1C,IAIjBgB,KAAK04C,IAAI7+C,KAAKmG,KAAKyK,KAAMzK,KAAKy4C,OAAQz4C,KAAKrQ,OAAQqQ,KAAKw4C,WAC5Dx4C,KAAKw4C,UAGRx4C,KAAKy4C,OAAOI,SACb,EAUDN,EAAY9mD,UAAU4rC,OAAS,SAASyb,IAGnCA,GAA2B,QAAnB94C,KAAKyK,KAAK1Y,MAAqC,QAAnBiO,KAAKyK,KAAK1Y,OAC/CiO,KAAKyK,KAAKquC,IAAM,SAAS95C,GACvB,OAAO85C,EAAI94C,KAAKupC,UAAWvqC,GAAO,EACnC,EACDgB,KAAKyK,KAAKsuC,MAAQ,SAASppD,GACzB,OAAOmpD,EAAI94C,KAAKupC,UAAW55C,GAAQ,EACpC,GAIH,IAAI6U,EAAU,CAAC,EAMf,OALAA,EAAQykC,QAAUjpC,KAAK24C,SAGvBn0C,EAAQw0C,SAAWh5C,KAAKy4C,OAAOzpD,SAAWgR,KAAKupC,aAE3CvpC,KAAK24C,UAAY34C,KAAKyK,KAAKquC,MACzB94C,KAAKyK,KAAKquC,IAAI94C,KAAKy4C,OAAQj0C,MAMjCxE,KAAKw4C,SAAU,EACfx4C,KAAK+4B,WAEF/4B,KAAK24C,UAAY34C,KAAKyK,KAAKsuC,QACxB/4C,KAAKyK,KAAKsuC,MAAM/4C,KAAKrQ,OAAQ6U,OAKhCxE,KAAKyK,KAAKwuC,cACPj5C,KAAKyK,KAAKwuC,YAAYj5C,KAAKrQ,OAAQ6U,IAM1C,mBC9ND,IAAIikC,EAAQrqB,EAAQ,OACpBA,EAAQ,OAERqqB,EAAME,OAASF,EAAME,QAAU,CAAC,EAGhC,IAAIwB,EAAQzrB,EAAOiE,QAAU8lB,EAAME,OAAOwB,MAAQ1B,EAAME,OAAOwB,OAAS,CAAC,EA+6BzE,SAAS+O,EAAYnQ,EAAIQ,GAMvB,GALiB,iBAAPR,IAERA,EAAKN,EAAMqB,KAAKC,aAAahB,IAG5BN,EAAMqB,KAAK7yC,QAAQ8xC,IAAOA,EAAG/5C,OAAS,EAAG,CAE1C,IAAIskC,EAAMyV,EACVA,EAAKN,EAAMqB,KAAKC,eAChB,IAAI,IAAIj2C,EAAI,EAAGA,EAAIw/B,EAAItkC,SAAU8E,EAC/Bi1C,EAAGiB,QAAQ1W,EAAIx/B,GAElB,CAED,GAAGi1C,EAAG/5C,SAAWu6C,EACf,MAAM,IAAIt3C,MACR,0BAA4B82C,EAAG/5C,SAC/B,uBAAyBu6C,EAAY,WAGzC,IAAId,EAAMqB,KAAK7yC,QAAQ8xC,GAAK,CAE1B,IAAIoQ,EAAO,GACPC,EAAS7P,EAAY,EACzB,IAAQz1C,EAAI,EAAGA,EAAIslD,IAAUtlD,EAC3BqlD,EAAK5oD,KAAKw4C,EAAGz6C,YAEfy6C,EAAKoQ,CACN,CAED,OAAOpQ,CACR,CAED,SAASsQ,EAAMzJ,GAEbA,EAAMA,EAAM5gD,OAAS,GAAM4gD,EAAMA,EAAM5gD,OAAS,GAAK,EAAK,UAC3D,CAED,SAASsqD,EAAWzzC,GAElB,MAAO,CAAEA,EAAM,WAAe,EAAS,WAANA,EAClC,CAr9BDskC,EAAMC,IAAM,SAAS5lC,GACnBA,EAAUA,GAAW,CAAC,EACtBxE,KAAKjO,KAAO,MACZiO,KAAK2oC,OAASnkC,EAAQmkC,OACtB3oC,KAAKupC,UAAY/kC,EAAQ+kC,WAAa,GACtCvpC,KAAKu5C,MAAQv5C,KAAKupC,UAAY,EAC9BvpC,KAAKw5C,SAAW,IAAIxiD,MAAMgJ,KAAKu5C,OAC/Bv5C,KAAKy5C,UAAY,IAAIziD,MAAMgJ,KAAKu5C,MACjC,EAEDpP,EAAMC,IAAI34C,UAAU0lB,MAAQ,SAAS3S,GAAW,EAEhD2lC,EAAMC,IAAI34C,UAAU+3C,QAAU,SAASxqC,EAAOrP,EAAQ0tC,GAEpD,GAAGr+B,EAAMhQ,SAAWgR,KAAKupC,aAAelM,GAAUr+B,EAAMhQ,SAAW,GACjE,OAAO,EAIT,IAAI,IAAI8E,EAAI,EAAGA,EAAIkM,KAAKu5C,QAASzlD,EAC/BkM,KAAKw5C,SAAS1lD,GAAKkL,EAAM1Q,WAI3B0R,KAAK2oC,OAAOa,QAAQxpC,KAAKw5C,SAAUx5C,KAAKy5C,WAGxC,IAAQ3lD,EAAI,EAAGA,EAAIkM,KAAKu5C,QAASzlD,EAC/BnE,EAAO+pD,SAAS15C,KAAKy5C,UAAU3lD,GAElC,EAEDq2C,EAAMC,IAAI34C,UAAUw3C,QAAU,SAASjqC,EAAOrP,EAAQ0tC,GAEpD,GAAGr+B,EAAMhQ,SAAWgR,KAAKupC,aAAelM,GAAUr+B,EAAMhQ,SAAW,GACjE,OAAO,EAIT,IAAI,IAAI8E,EAAI,EAAGA,EAAIkM,KAAKu5C,QAASzlD,EAC/BkM,KAAKw5C,SAAS1lD,GAAKkL,EAAM1Q,WAI3B0R,KAAK2oC,OAAOM,QAAQjpC,KAAKw5C,SAAUx5C,KAAKy5C,WAGxC,IAAQ3lD,EAAI,EAAGA,EAAIkM,KAAKu5C,QAASzlD,EAC/BnE,EAAO+pD,SAAS15C,KAAKy5C,UAAU3lD,GAElC,EAEDq2C,EAAMC,IAAI34C,UAAUqnD,IAAM,SAAS95C,EAAOwF,GAGxC,IAAIiqC,EAAWzvC,EAAMhQ,WAAagR,KAAKupC,UACrCvpC,KAAKupC,UAAavpC,KAAKupC,UAAYvqC,EAAMhQ,SAE3C,OADAgQ,EAAM0vC,aAAaD,EAASA,IACrB,CACR,EAEDtE,EAAMC,IAAI34C,UAAUsnD,MAAQ,SAASppD,EAAQ6U,GAE3C,GAAGA,EAAQw0C,SAAW,EACpB,OAAO,EAIT,IAAI/f,EAAMtpC,EAAOX,SACb2I,EAAQhI,EAAOm/C,GAAG7V,EAAM,GAC5B,QAAGthC,EAASqI,KAAKupC,WAAa,KAK9B55C,EAAOi7B,SAASjzB,IACT,EACR,EAIDwyC,EAAME,IAAM,SAAS7lC,GACnBA,EAAUA,GAAW,CAAC,EACtBxE,KAAKjO,KAAO,MACZiO,KAAK2oC,OAASnkC,EAAQmkC,OACtB3oC,KAAKupC,UAAY/kC,EAAQ+kC,WAAa,GACtCvpC,KAAKu5C,MAAQv5C,KAAKupC,UAAY,EAC9BvpC,KAAKw5C,SAAW,IAAIxiD,MAAMgJ,KAAKu5C,OAC/Bv5C,KAAKy5C,UAAY,IAAIziD,MAAMgJ,KAAKu5C,MACjC,EAEDpP,EAAME,IAAI54C,UAAU0lB,MAAQ,SAAS3S,GAGnC,GAAkB,OAAfA,EAAQukC,GAAa,CAEtB,IAAI/oC,KAAK25C,MACP,MAAM,IAAI1nD,MAAM,yBAElB+N,KAAK45C,IAAM55C,KAAK25C,MAAM//C,MAAM,EAC7B,KAAM,MAAK,OAAQ4K,GAClB,MAAM,IAAIvS,MAAM,yBAGhB+N,KAAK45C,IAAMV,EAAY10C,EAAQukC,GAAI/oC,KAAKupC,WACxCvpC,KAAK25C,MAAQ35C,KAAK45C,IAAIhgD,MAAM,EAC7B,CACF,EAEDuwC,EAAME,IAAI54C,UAAU+3C,QAAU,SAASxqC,EAAOrP,EAAQ0tC,GAEpD,GAAGr+B,EAAMhQ,SAAWgR,KAAKupC,aAAelM,GAAUr+B,EAAMhQ,SAAW,GACjE,OAAO,EAKT,IAAI,IAAI8E,EAAI,EAAGA,EAAIkM,KAAKu5C,QAASzlD,EAC/BkM,KAAKw5C,SAAS1lD,GAAKkM,KAAK25C,MAAM7lD,GAAKkL,EAAM1Q,WAI3C0R,KAAK2oC,OAAOa,QAAQxpC,KAAKw5C,SAAUx5C,KAAKy5C,WAGxC,IAAQ3lD,EAAI,EAAGA,EAAIkM,KAAKu5C,QAASzlD,EAC/BnE,EAAO+pD,SAAS15C,KAAKy5C,UAAU3lD,IAEjCkM,KAAK25C,MAAQ35C,KAAKy5C,SACnB,EAEDtP,EAAME,IAAI54C,UAAUw3C,QAAU,SAASjqC,EAAOrP,EAAQ0tC,GAEpD,GAAGr+B,EAAMhQ,SAAWgR,KAAKupC,aAAelM,GAAUr+B,EAAMhQ,SAAW,GACjE,OAAO,EAIT,IAAI,IAAI8E,EAAI,EAAGA,EAAIkM,KAAKu5C,QAASzlD,EAC/BkM,KAAKw5C,SAAS1lD,GAAKkL,EAAM1Q,WAI3B0R,KAAK2oC,OAAOM,QAAQjpC,KAAKw5C,SAAUx5C,KAAKy5C,WAIxC,IAAQ3lD,EAAI,EAAGA,EAAIkM,KAAKu5C,QAASzlD,EAC/BnE,EAAO+pD,SAAS15C,KAAK25C,MAAM7lD,GAAKkM,KAAKy5C,UAAU3lD,IAEjDkM,KAAK25C,MAAQ35C,KAAKw5C,SAAS5/C,MAAM,EAClC,EAEDuwC,EAAME,IAAI54C,UAAUqnD,IAAM,SAAS95C,EAAOwF,GAGxC,IAAIiqC,EAAWzvC,EAAMhQ,WAAagR,KAAKupC,UACrCvpC,KAAKupC,UAAavpC,KAAKupC,UAAYvqC,EAAMhQ,SAE3C,OADAgQ,EAAM0vC,aAAaD,EAASA,IACrB,CACR,EAEDtE,EAAME,IAAI54C,UAAUsnD,MAAQ,SAASppD,EAAQ6U,GAE3C,GAAGA,EAAQw0C,SAAW,EACpB,OAAO,EAIT,IAAI/f,EAAMtpC,EAAOX,SACb2I,EAAQhI,EAAOm/C,GAAG7V,EAAM,GAC5B,QAAGthC,EAASqI,KAAKupC,WAAa,KAK9B55C,EAAOi7B,SAASjzB,IACT,EACR,EAIDwyC,EAAMG,IAAM,SAAS9lC,GACnBA,EAAUA,GAAW,CAAC,EACtBxE,KAAKjO,KAAO,MACZiO,KAAK2oC,OAASnkC,EAAQmkC,OACtB3oC,KAAKupC,UAAY/kC,EAAQ+kC,WAAa,GACtCvpC,KAAKu5C,MAAQv5C,KAAKupC,UAAY,EAC9BvpC,KAAKw5C,SAAW,KAChBx5C,KAAKy5C,UAAY,IAAIziD,MAAMgJ,KAAKu5C,OAChCv5C,KAAK65C,cAAgB,IAAI7iD,MAAMgJ,KAAKu5C,OACpCv5C,KAAK85C,eAAiBrR,EAAMqB,KAAKC,eACjC/pC,KAAK+5C,cAAgB,CACtB,EAED5P,EAAMG,IAAI74C,UAAU0lB,MAAQ,SAAS3S,GACnC,KAAK,OAAQA,GACX,MAAM,IAAIvS,MAAM,yBAGlB+N,KAAK45C,IAAMV,EAAY10C,EAAQukC,GAAI/oC,KAAKupC,WACxCvpC,KAAKw5C,SAAWx5C,KAAK45C,IAAIhgD,MAAM,GAC/BoG,KAAK+5C,cAAgB,CACtB,EAED5P,EAAMG,IAAI74C,UAAU+3C,QAAU,SAASxqC,EAAOrP,EAAQ0tC,GAEpD,IAAI2c,EAAch7C,EAAMhQ,SACxB,GAAmB,IAAhBgrD,EACD,OAAO,EAOT,GAHAh6C,KAAK2oC,OAAOa,QAAQxpC,KAAKw5C,SAAUx5C,KAAKy5C,WAGd,IAAvBz5C,KAAK+5C,eAAuBC,GAAeh6C,KAAKupC,UAEjD,IAAI,IAAIz1C,EAAI,EAAGA,EAAIkM,KAAKu5C,QAASzlD,EAC/BkM,KAAKw5C,SAAS1lD,GAAKkL,EAAM1Q,WAAa0R,KAAKy5C,UAAU3lD,GACrDnE,EAAO+pD,SAAS15C,KAAKw5C,SAAS1lD,QAJlC,CAUA,IAAImmD,GAAgBj6C,KAAKupC,UAAYyQ,GAAeh6C,KAAKupC,UACtD0Q,EAAe,IAChBA,EAAej6C,KAAKupC,UAAY0Q,GAIlCj6C,KAAK85C,eAAeI,QACpB,IAAQpmD,EAAI,EAAGA,EAAIkM,KAAKu5C,QAASzlD,EAC/BkM,KAAK65C,cAAc/lD,GAAKkL,EAAM1Q,WAAa0R,KAAKy5C,UAAU3lD,GAC1DkM,KAAK85C,eAAeJ,SAAS15C,KAAK65C,cAAc/lD,IAGlD,GAAGmmD,EAAe,EAEhBj7C,EAAM4f,MAAQ5e,KAAKupC,eAGnB,IAAQz1C,EAAI,EAAGA,EAAIkM,KAAKu5C,QAASzlD,EAC/BkM,KAAKw5C,SAAS1lD,GAAKkM,KAAK65C,cAAc/lD,GAS1C,GAJGkM,KAAK+5C,cAAgB,GACtB/5C,KAAK85C,eAAe/K,SAAS/uC,KAAK+5C,eAGjCE,EAAe,IAAM5c,EAItB,OAHA1tC,EAAOs+C,SAASjuC,KAAK85C,eAAe/K,SAClCkL,EAAej6C,KAAK+5C,gBACtB/5C,KAAK+5C,cAAgBE,GACd,EAGTtqD,EAAOs+C,SAASjuC,KAAK85C,eAAe/K,SAClCiL,EAAch6C,KAAK+5C,gBACrB/5C,KAAK+5C,cAAgB,CAvCpB,CAwCF,EAED5P,EAAMG,IAAI74C,UAAUw3C,QAAU,SAASjqC,EAAOrP,EAAQ0tC,GAEpD,IAAI2c,EAAch7C,EAAMhQ,SACxB,GAAmB,IAAhBgrD,EACD,OAAO,EAOT,GAHAh6C,KAAK2oC,OAAOa,QAAQxpC,KAAKw5C,SAAUx5C,KAAKy5C,WAGd,IAAvBz5C,KAAK+5C,eAAuBC,GAAeh6C,KAAKupC,UAEjD,IAAI,IAAIz1C,EAAI,EAAGA,EAAIkM,KAAKu5C,QAASzlD,EAC/BkM,KAAKw5C,SAAS1lD,GAAKkL,EAAM1Q,WACzBqB,EAAO+pD,SAAS15C,KAAKw5C,SAAS1lD,GAAKkM,KAAKy5C,UAAU3lD,QAJtD,CAUA,IAAImmD,GAAgBj6C,KAAKupC,UAAYyQ,GAAeh6C,KAAKupC,UACtD0Q,EAAe,IAChBA,EAAej6C,KAAKupC,UAAY0Q,GAIlCj6C,KAAK85C,eAAeI,QACpB,IAAQpmD,EAAI,EAAGA,EAAIkM,KAAKu5C,QAASzlD,EAC/BkM,KAAK65C,cAAc/lD,GAAKkL,EAAM1Q,WAC9B0R,KAAK85C,eAAeJ,SAAS15C,KAAK65C,cAAc/lD,GAAKkM,KAAKy5C,UAAU3lD,IAGtE,GAAGmmD,EAAe,EAEhBj7C,EAAM4f,MAAQ5e,KAAKupC,eAGnB,IAAQz1C,EAAI,EAAGA,EAAIkM,KAAKu5C,QAASzlD,EAC/BkM,KAAKw5C,SAAS1lD,GAAKkM,KAAK65C,cAAc/lD,GAS1C,GAJGkM,KAAK+5C,cAAgB,GACtB/5C,KAAK85C,eAAe/K,SAAS/uC,KAAK+5C,eAGjCE,EAAe,IAAM5c,EAItB,OAHA1tC,EAAOs+C,SAASjuC,KAAK85C,eAAe/K,SAClCkL,EAAej6C,KAAK+5C,gBACtB/5C,KAAK+5C,cAAgBE,GACd,EAGTtqD,EAAOs+C,SAASjuC,KAAK85C,eAAe/K,SAClCiL,EAAch6C,KAAK+5C,gBACrB/5C,KAAK+5C,cAAgB,CAvCpB,CAwCF,EAID5P,EAAMI,IAAM,SAAS/lC,GACnBA,EAAUA,GAAW,CAAC,EACtBxE,KAAKjO,KAAO,MACZiO,KAAK2oC,OAASnkC,EAAQmkC,OACtB3oC,KAAKupC,UAAY/kC,EAAQ+kC,WAAa,GACtCvpC,KAAKu5C,MAAQv5C,KAAKupC,UAAY,EAC9BvpC,KAAKw5C,SAAW,KAChBx5C,KAAKy5C,UAAY,IAAIziD,MAAMgJ,KAAKu5C,OAChCv5C,KAAK85C,eAAiBrR,EAAMqB,KAAKC,eACjC/pC,KAAK+5C,cAAgB,CACtB,EAED5P,EAAMI,IAAI94C,UAAU0lB,MAAQ,SAAS3S,GACnC,KAAK,OAAQA,GACX,MAAM,IAAIvS,MAAM,yBAGlB+N,KAAK45C,IAAMV,EAAY10C,EAAQukC,GAAI/oC,KAAKupC,WACxCvpC,KAAKw5C,SAAWx5C,KAAK45C,IAAIhgD,MAAM,GAC/BoG,KAAK+5C,cAAgB,CACtB,EAED5P,EAAMI,IAAI94C,UAAU+3C,QAAU,SAASxqC,EAAOrP,EAAQ0tC,GAEpD,IAAI2c,EAAch7C,EAAMhQ,SACxB,GAAsB,IAAnBgQ,EAAMhQ,SACP,OAAO,EAOT,GAHAgR,KAAK2oC,OAAOa,QAAQxpC,KAAKw5C,SAAUx5C,KAAKy5C,WAGd,IAAvBz5C,KAAK+5C,eAAuBC,GAAeh6C,KAAKupC,UAEjD,IAAI,IAAIz1C,EAAI,EAAGA,EAAIkM,KAAKu5C,QAASzlD,EAC/BnE,EAAO+pD,SAAS16C,EAAM1Q,WAAa0R,KAAKy5C,UAAU3lD,IAClDkM,KAAKw5C,SAAS1lD,GAAKkM,KAAKy5C,UAAU3lD,OAJtC,CAUA,IAAImmD,GAAgBj6C,KAAKupC,UAAYyQ,GAAeh6C,KAAKupC,UACtD0Q,EAAe,IAChBA,EAAej6C,KAAKupC,UAAY0Q,GAIlCj6C,KAAK85C,eAAeI,QACpB,IAAQpmD,EAAI,EAAGA,EAAIkM,KAAKu5C,QAASzlD,EAC/BkM,KAAK85C,eAAeJ,SAAS16C,EAAM1Q,WAAa0R,KAAKy5C,UAAU3lD,IAGjE,GAAGmmD,EAAe,EAEhBj7C,EAAM4f,MAAQ5e,KAAKupC,eAGnB,IAAQz1C,EAAI,EAAGA,EAAIkM,KAAKu5C,QAASzlD,EAC/BkM,KAAKw5C,SAAS1lD,GAAKkM,KAAKy5C,UAAU3lD,GAStC,GAJGkM,KAAK+5C,cAAgB,GACtB/5C,KAAK85C,eAAe/K,SAAS/uC,KAAK+5C,eAGjCE,EAAe,IAAM5c,EAItB,OAHA1tC,EAAOs+C,SAASjuC,KAAK85C,eAAe/K,SAClCkL,EAAej6C,KAAK+5C,gBACtB/5C,KAAK+5C,cAAgBE,GACd,EAGTtqD,EAAOs+C,SAASjuC,KAAK85C,eAAe/K,SAClCiL,EAAch6C,KAAK+5C,gBACrB/5C,KAAK+5C,cAAgB,CAtCpB,CAuCF,EAED5P,EAAMI,IAAI94C,UAAUw3C,QAAUkB,EAAMI,IAAI94C,UAAU+3C,QAIlDW,EAAMK,IAAM,SAAShmC,GACnBA,EAAUA,GAAW,CAAC,EACtBxE,KAAKjO,KAAO,MACZiO,KAAK2oC,OAASnkC,EAAQmkC,OACtB3oC,KAAKupC,UAAY/kC,EAAQ+kC,WAAa,GACtCvpC,KAAKu5C,MAAQv5C,KAAKupC,UAAY,EAC9BvpC,KAAKw5C,SAAW,KAChBx5C,KAAKy5C,UAAY,IAAIziD,MAAMgJ,KAAKu5C,OAChCv5C,KAAK85C,eAAiBrR,EAAMqB,KAAKC,eACjC/pC,KAAK+5C,cAAgB,CACtB,EAED5P,EAAMK,IAAI/4C,UAAU0lB,MAAQ,SAAS3S,GACnC,KAAK,OAAQA,GACX,MAAM,IAAIvS,MAAM,yBAGlB+N,KAAK45C,IAAMV,EAAY10C,EAAQukC,GAAI/oC,KAAKupC,WACxCvpC,KAAKw5C,SAAWx5C,KAAK45C,IAAIhgD,MAAM,GAC/BoG,KAAK+5C,cAAgB,CACtB,EAED5P,EAAMK,IAAI/4C,UAAU+3C,QAAU,SAASxqC,EAAOrP,EAAQ0tC,GAEpD,IAAI2c,EAAch7C,EAAMhQ,SACxB,GAAmB,IAAhBgrD,EACD,OAAO,EAOT,GAHAh6C,KAAK2oC,OAAOa,QAAQxpC,KAAKw5C,SAAUx5C,KAAKy5C,WAGd,IAAvBz5C,KAAK+5C,eAAuBC,GAAeh6C,KAAKupC,UAEjD,IAAI,IAAIz1C,EAAI,EAAGA,EAAIkM,KAAKu5C,QAASzlD,EAC/BnE,EAAO+pD,SAAS16C,EAAM1Q,WAAa0R,KAAKy5C,UAAU3lD,QAE/C,CAEL,IAAImmD,GAAgBj6C,KAAKupC,UAAYyQ,GAAeh6C,KAAKupC,UACtD0Q,EAAe,IAChBA,EAAej6C,KAAKupC,UAAY0Q,GAIlCj6C,KAAK85C,eAAeI,QACpB,IAAQpmD,EAAI,EAAGA,EAAIkM,KAAKu5C,QAASzlD,EAC/BkM,KAAK85C,eAAeJ,SAAS16C,EAAM1Q,WAAa0R,KAAKy5C,UAAU3lD,IAajE,GAVGmmD,EAAe,IAEhBj7C,EAAM4f,MAAQ5e,KAAKupC,WAIlBvpC,KAAK+5C,cAAgB,GACtB/5C,KAAK85C,eAAe/K,SAAS/uC,KAAK+5C,eAGjCE,EAAe,IAAM5c,EAItB,OAHA1tC,EAAOs+C,SAASjuC,KAAK85C,eAAe/K,SAClCkL,EAAej6C,KAAK+5C,gBACtB/5C,KAAK+5C,cAAgBE,GACd,EAGTtqD,EAAOs+C,SAASjuC,KAAK85C,eAAe/K,SAClCiL,EAAch6C,KAAK+5C,gBACrB/5C,KAAK+5C,cAAgB,CACtB,CAGDV,EAAMr5C,KAAKw5C,SACZ,EAEDrP,EAAMK,IAAI/4C,UAAUw3C,QAAUkB,EAAMK,IAAI/4C,UAAU+3C,QAIlDW,EAAMM,IAAM,SAASjmC,GACnBA,EAAUA,GAAW,CAAC,EACtBxE,KAAKjO,KAAO,MACZiO,KAAK2oC,OAASnkC,EAAQmkC,OACtB3oC,KAAKupC,UAAY/kC,EAAQ+kC,WAAa,GACtCvpC,KAAKu5C,MAAQv5C,KAAKupC,UAAY,EAC9BvpC,KAAKw5C,SAAW,IAAIxiD,MAAMgJ,KAAKu5C,OAC/Bv5C,KAAKy5C,UAAY,IAAIziD,MAAMgJ,KAAKu5C,OAChCv5C,KAAK85C,eAAiBrR,EAAMqB,KAAKC,eACjC/pC,KAAK+5C,cAAgB,EAKrB/5C,KAAKm6C,GAAK,UACX,EAEDhQ,EAAMM,IAAIh5C,UAAU0lB,MAAQ,SAAS3S,GACnC,KAAK,OAAQA,GACX,MAAM,IAAIvS,MAAM,yBAGlB,IAMImoD,EANArR,EAAKN,EAAMqB,KAAKC,aAAavlC,EAAQukC,IAsBzC,GAnBA/oC,KAAKq6C,cAAgB,EAKnBD,EADC,mBAAoB51C,EACJikC,EAAMqB,KAAKC,aAAavlC,EAAQ41C,gBAEhC3R,EAAMqB,KAAKC,eAK5B/pC,KAAKs6C,WADJ,cAAe91C,EACEA,EAAQ+1C,UAER,IAIpBv6C,KAAKw6C,KAAO,KACTh2C,EAAQykC,UAETjpC,KAAKw6C,KAAO/R,EAAMqB,KAAKC,aAAavlC,EAAQi2C,KAAK1L,WAC9C/uC,KAAKw6C,KAAKxrD,SAAYgR,KAAKs6C,WAAa,GACzC,MAAM,IAAIroD,MAAM,iDAKpB+N,KAAK06C,WAAa,IAAI1jD,MAAMgJ,KAAKu5C,OAGjCv5C,KAAKy6C,IAAM,KAIXz6C,KAAK26C,YAAc,IAAI3jD,MAAMgJ,KAAKu5C,OAClCv5C,KAAK2oC,OAAOa,QAAQ,CAAC,EAAG,EAAG,EAAG,GAAIxpC,KAAK26C,aAMvC36C,KAAK46C,cAAgB,EACrB56C,KAAK66C,GAAK76C,KAAK86C,kBAAkB96C,KAAK26C,YAAa36C,KAAK46C,eAKxD,IAAIG,EAAWhS,EAAG/5C,SAClB,GAAgB,KAAb+rD,EAED/6C,KAAKg7C,IAAM,CAACjS,EAAGz6C,WAAYy6C,EAAGz6C,WAAYy6C,EAAGz6C,WAAY,OACpD,CAGL,IADA0R,KAAKg7C,IAAM,CAAC,EAAG,EAAG,EAAG,GACfjS,EAAG/5C,SAAW,GAClBgR,KAAKg7C,IAAMh7C,KAAKi7C,MACdj7C,KAAK26C,YAAa36C,KAAKg7C,IACvB,CAACjS,EAAGz6C,WAAYy6C,EAAGz6C,WAAYy6C,EAAGz6C,WAAYy6C,EAAGz6C,aAErD0R,KAAKg7C,IAAMh7C,KAAKi7C,MACdj7C,KAAK26C,YAAa36C,KAAKg7C,IAAK,CAAC,EAAG,GAAGtiD,OAAO4gD,EAAsB,EAAXyB,IACxD,CAGD/6C,KAAKw5C,SAAWx5C,KAAKg7C,IAAIphD,MAAM,GAC/By/C,EAAMr5C,KAAKw5C,UACXx5C,KAAK+5C,cAAgB,EAGrBK,EAAiB3R,EAAMqB,KAAKC,aAAaqQ,GAEzCp6C,KAAKk7C,aAAe5B,EAAqC,EAA1Bc,EAAeprD,UAE9C,IAAIgqD,EAAWoB,EAAeprD,SAAWgR,KAAKupC,UAK9C,IAJGyP,GACDoB,EAAe1L,aAAa,EAAG1uC,KAAKupC,UAAYyP,GAElDh5C,KAAKm7C,GAAK,CAAC,EAAG,EAAG,EAAG,GACdf,EAAeprD,SAAW,GAC9BgR,KAAKm7C,GAAKn7C,KAAKi7C,MAAMj7C,KAAK26C,YAAa36C,KAAKm7C,GAAI,CAC9Cf,EAAe9rD,WACf8rD,EAAe9rD,WACf8rD,EAAe9rD,WACf8rD,EAAe9rD,YAGpB,EAED67C,EAAMM,IAAIh5C,UAAU+3C,QAAU,SAASxqC,EAAOrP,EAAQ0tC,GAEpD,IAAI2c,EAAch7C,EAAMhQ,SACxB,GAAmB,IAAhBgrD,EACD,OAAO,EAOT,GAHAh6C,KAAK2oC,OAAOa,QAAQxpC,KAAKw5C,SAAUx5C,KAAKy5C,WAGd,IAAvBz5C,KAAK+5C,eAAuBC,GAAeh6C,KAAKupC,UAAW,CAE5D,IAAI,IAAIz1C,EAAI,EAAGA,EAAIkM,KAAKu5C,QAASzlD,EAC/BnE,EAAO+pD,SAAS15C,KAAKy5C,UAAU3lD,IAAMkL,EAAM1Q,YAE7C0R,KAAKq6C,eAAiBr6C,KAAKupC,SAC5B,KAAM,CAEL,IAAI0Q,GAAgBj6C,KAAKupC,UAAYyQ,GAAeh6C,KAAKupC,UACtD0Q,EAAe,IAChBA,EAAej6C,KAAKupC,UAAY0Q,GAIlCj6C,KAAK85C,eAAeI,QACpB,IAAQpmD,EAAI,EAAGA,EAAIkM,KAAKu5C,QAASzlD,EAC/BkM,KAAK85C,eAAeJ,SAAS16C,EAAM1Q,WAAa0R,KAAKy5C,UAAU3lD,IAGjE,GAAGmmD,GAAgB,GAAK5c,EAAQ,CAE9B,GAAGA,EAAQ,CAET,IAAI2b,EAAWgB,EAAch6C,KAAKupC,UAClCvpC,KAAKq6C,eAAiBrB,EAEtBh5C,KAAK85C,eAAelvB,SAAS5qB,KAAKupC,UAAYyP,EAC/C,MACCh5C,KAAKq6C,eAAiBr6C,KAAKupC,UAI7B,IAAQz1C,EAAI,EAAGA,EAAIkM,KAAKu5C,QAASzlD,EAC/BkM,KAAKy5C,UAAU3lD,GAAKkM,KAAK85C,eAAexrD,WAE1C0R,KAAK85C,eAAel7B,MAAQ5e,KAAKupC,SAClC,CAOD,GAJGvpC,KAAK+5C,cAAgB,GACtB/5C,KAAK85C,eAAe/K,SAAS/uC,KAAK+5C,eAGjCE,EAAe,IAAM5c,EAOtB,OAJAr+B,EAAM4f,MAAQ5e,KAAKupC,UACnB55C,EAAOs+C,SAASjuC,KAAK85C,eAAe/K,SAClCkL,EAAej6C,KAAK+5C,gBACtB/5C,KAAK+5C,cAAgBE,GACd,EAGTtqD,EAAOs+C,SAASjuC,KAAK85C,eAAe/K,SAClCiL,EAAch6C,KAAK+5C,gBACrB/5C,KAAK+5C,cAAgB,CACtB,CAGD/5C,KAAKm7C,GAAKn7C,KAAKi7C,MAAMj7C,KAAK26C,YAAa36C,KAAKm7C,GAAIn7C,KAAKy5C,WAGrDJ,EAAMr5C,KAAKw5C,SACZ,EAEDrP,EAAMM,IAAIh5C,UAAUw3C,QAAU,SAASjqC,EAAOrP,EAAQ0tC,GAEpD,IAAI2c,EAAch7C,EAAMhQ,SACxB,GAAGgrD,EAAch6C,KAAKupC,aAAelM,GAAU2c,EAAc,GAC3D,OAAO,EAITh6C,KAAK2oC,OAAOa,QAAQxpC,KAAKw5C,SAAUx5C,KAAKy5C,WAGxCJ,EAAMr5C,KAAKw5C,UAGXx5C,KAAK06C,WAAW,GAAK17C,EAAM1Q,WAC3B0R,KAAK06C,WAAW,GAAK17C,EAAM1Q,WAC3B0R,KAAK06C,WAAW,GAAK17C,EAAM1Q,WAC3B0R,KAAK06C,WAAW,GAAK17C,EAAM1Q,WAC3B0R,KAAKm7C,GAAKn7C,KAAKi7C,MAAMj7C,KAAK26C,YAAa36C,KAAKm7C,GAAIn7C,KAAK06C,YAGrD,IAAI,IAAI5mD,EAAI,EAAGA,EAAIkM,KAAKu5C,QAASzlD,EAC/BnE,EAAO+pD,SAAS15C,KAAKy5C,UAAU3lD,GAAKkM,KAAK06C,WAAW5mD,IAInDkmD,EAAch6C,KAAKupC,UACpBvpC,KAAKq6C,eAAiBL,EAAch6C,KAAKupC,UAEzCvpC,KAAKq6C,eAAiBr6C,KAAKupC,SAE9B,EAEDY,EAAMM,IAAIh5C,UAAUwnD,YAAc,SAAStpD,EAAQ6U,GACjD,IAAIopC,GAAO,EAGRppC,EAAQykC,SAAWzkC,EAAQw0C,UAC5BrpD,EAAOi7B,SAAS5qB,KAAKupC,UAAY/kC,EAAQw0C,UAI3Ch5C,KAAKy6C,IAAMhS,EAAMqB,KAAKC,eAGtB,IAAIqR,EAAUp7C,KAAKk7C,aAAaxiD,OAAO4gD,EAAgC,EAArBt5C,KAAKq6C,gBAGvDr6C,KAAKm7C,GAAKn7C,KAAKi7C,MAAMj7C,KAAK26C,YAAa36C,KAAKm7C,GAAIC,GAGhD,IAAIX,EAAM,GACVz6C,KAAK2oC,OAAOa,QAAQxpC,KAAKg7C,IAAKP,GAC9B,IAAI,IAAI3mD,EAAI,EAAGA,EAAIkM,KAAKu5C,QAASzlD,EAC/BkM,KAAKy6C,IAAIf,SAAS15C,KAAKm7C,GAAGrnD,GAAK2mD,EAAI3mD,IAWrC,OAPAkM,KAAKy6C,IAAI7vB,SAAS5qB,KAAKy6C,IAAIzrD,UAAYgR,KAAKs6C,WAAa,IAGtD91C,EAAQykC,SAAWjpC,KAAKy6C,IAAIxqD,UAAY+P,KAAKw6C,OAC9C5M,GAAO,GAGFA,CACR,EA2BDzD,EAAMM,IAAIh5C,UAAUu9B,SAAW,SAAShN,EAAGmK,GAKzC,IAJA,IAAIkvB,EAAM,CAAC,EAAG,EAAG,EAAG,GAChBC,EAAMnvB,EAAEvyB,MAAM,GAGV9F,EAAI,EAAGA,EAAI,MAAOA,EAAG,CAIjBkuB,EAAGluB,EAAI,GAAM,GAAM,GAAM,GAAKA,EAAI,KAE1CunD,EAAI,IAAMC,EAAI,GACdD,EAAI,IAAMC,EAAI,GACdD,EAAI,IAAMC,EAAI,GACdD,EAAI,IAAMC,EAAI,IAKhBt7C,KAAKuvB,IAAI+rB,EAAKA,EACf,CAED,OAAOD,CACR,EAEDlR,EAAMM,IAAIh5C,UAAU89B,IAAM,SAASvN,EAAGta,GASpC,IANA,IAAI6zC,EAAa,EAAPv5B,EAAE,GAMJluB,EAAI,EAAGA,EAAI,IAAKA,EACtB4T,EAAI5T,GAAMkuB,EAAEluB,KAAO,GAAkB,EAAXkuB,EAAEluB,EAAI,KAAW,GAG7C4T,EAAI,GAAKsa,EAAE,KAAO,EAKfu5B,IACD7zC,EAAI,IAAM1H,KAAKm6C,GAElB,EAEDhQ,EAAMM,IAAIh5C,UAAU+pD,cAAgB,SAASx5B,GAG3C,IADA,IAAIy5B,EAAI,CAAC,EAAG,EAAG,EAAG,GACV3nD,EAAI,EAAGA,EAAI,KAAMA,EAAG,CAC1B,IACI4nD,EAAO15B,EADAluB,EAAI,EAAK,KACmB,GAAf,EAAKA,EAAI,GAAY,GACzC6nD,EAAK37C,KAAK66C,GAAG/mD,GAAG4nD,GACpBD,EAAE,IAAME,EAAG,GACXF,EAAE,IAAME,EAAG,GACXF,EAAE,IAAME,EAAG,GACXF,EAAE,IAAME,EAAG,EACZ,CACD,OAAOF,CACR,EAaDtR,EAAMM,IAAIh5C,UAAUwpD,MAAQ,SAASW,EAAGzvB,EAAGnK,GAKzC,OAJAmK,EAAE,IAAMnK,EAAE,GACVmK,EAAE,IAAMnK,EAAE,GACVmK,EAAE,IAAMnK,EAAE,GACVmK,EAAE,IAAMnK,EAAE,GACHhiB,KAAKw7C,cAAcrvB,EAE3B,EAiBDge,EAAMM,IAAIh5C,UAAUqpD,kBAAoB,SAASc,EAAG5qB,GAQlD,IAJA,IAAI6qB,EAAa,EAAI7qB,EACjB8qB,EAAS,EAAID,EACbvkD,EAAO,GAAKukD,EACZrhC,EAAI,IAAIxjB,MAAMM,GACVxD,EAAI,EAAGA,EAAIwD,IAAQxD,EAAG,CAC5B,IAAIw/B,EAAM,CAAC,EAAG,EAAG,EAAG,GAEhByoB,GAASD,EAAS,EAAKhoD,EAAIgoD,GAAW9qB,EAC1CsC,EAFWx/B,EAAIgoD,EAAU,GAEb,GAAM9qB,EAAO,GAAO+qB,EAChCvhC,EAAE1mB,GAAKkM,KAAKg8C,qBAAqBh8C,KAAKgvB,SAASsE,EAAKsoB,GAAI5qB,EACzD,CACD,OAAOxW,CACR,EASD2vB,EAAMM,IAAIh5C,UAAUuqD,qBAAuB,SAASC,EAAKjrB,GAIvD,IAAI15B,EAAO,GAAK05B,EACZkrB,EAAO5kD,IAAS,EAChBkjB,EAAI,IAAIxjB,MAAMM,GAClBkjB,EAAE0hC,GAAQD,EAAIriD,MAAM,GAEpB,IADA,IAAI9F,EAAIooD,IAAS,EACXpoD,EAAI,GAERkM,KAAKuvB,IAAI/U,EAAE,EAAI1mB,GAAI0mB,EAAE1mB,GAAK,IAC1BA,IAAM,EAGR,IADAA,EAAI,EACEA,EAAIooD,GAAM,CACd,IAAI,IAAI9iD,EAAI,EAAGA,EAAItF,IAAKsF,EAAG,CACzB,IAAI+iD,EAAM3hC,EAAE1mB,GACRsoD,EAAM5hC,EAAEphB,GACZohB,EAAE1mB,EAAIsF,GAAK,CACT+iD,EAAI,GAAKC,EAAI,GACbD,EAAI,GAAKC,EAAI,GACbD,EAAI,GAAKC,EAAI,GACbD,EAAI,GAAKC,EAAI,GAEhB,CACDtoD,GAAK,CACN,CAID,IAHA0mB,EAAE,GAAK,CAAC,EAAG,EAAG,EAAG,GAGb1mB,EAAIooD,EAAO,EAAGpoD,EAAIwD,IAAQxD,EAAG,CAC/B,IAAIoX,EAAIsP,EAAE1mB,EAAIooD,GACd1hC,EAAE1mB,GAAK,CAACmoD,EAAI,GAAK/wC,EAAE,GAAI+wC,EAAI,GAAK/wC,EAAE,GAAI+wC,EAAI,GAAK/wC,EAAE,GAAI+wC,EAAI,GAAK/wC,EAAE,GACjE,CACD,OAAOsP,CACR,mBCz5BD,IAAIiuB,EAAQrqB,EAAQ,OAoLpB,SAASsqB,EAAkB32C,EAAM0Y,GAI/Bg+B,EAAME,OAAOD,kBAAkB32C,GAHjB,WACZ,OAAO,IAAI02C,EAAM4T,IAAIxT,UAAU92C,EAAM0Y,EACtC,GAEF,CAxLD2T,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OAGRM,EAAOiE,QAAU8lB,EAAM4T,IAAM5T,EAAM4T,KAAO,CAAC,EAsB3C5T,EAAM4T,IAAIvT,gBAAkB,SAAShxC,EAAKixC,EAAIp5C,EAAQ8a,GACpD,IAAIk+B,EAASK,EAAc,CACzBlxC,IAAKA,EACLnI,OAAQA,EACRs5C,SAAS,EACTx+B,KAAMA,IAAgB,OAAPs+B,EAAc,MAAQ,SAGvC,OADAJ,EAAOxxB,MAAM4xB,GACNJ,CACR,EAgBDF,EAAM4T,IAAInT,uBAAyB,SAASpxC,EAAK2S,GAC/C,OAAOu+B,EAAc,CACnBlxC,IAAKA,EACLnI,OAAQ,KACRs5C,SAAS,EACTx+B,KAAMA,GAET,EAsBDg+B,EAAM4T,IAAIlT,gBAAkB,SAASrxC,EAAKixC,EAAIp5C,EAAQ8a,GACpD,IAAIk+B,EAASK,EAAc,CACzBlxC,IAAKA,EACLnI,OAAQA,EACRs5C,SAAS,EACTx+B,KAAMA,IAAgB,OAAPs+B,EAAc,MAAQ,SAGvC,OADAJ,EAAOxxB,MAAM4xB,GACNJ,CACR,EAgBDF,EAAM4T,IAAIjT,uBAAyB,SAAStxC,EAAK2S,GAC/C,OAAOu+B,EAAc,CACnBlxC,IAAKA,EACLnI,OAAQ,KACRs5C,SAAS,EACTx+B,KAAMA,GAET,EAUDg+B,EAAM4T,IAAIxT,UAAY,SAAS92C,EAAM0Y,GACnC,IAAIpF,EAAOrF,KACXqF,EAAKtT,KAAOA,EACZsT,EAAKoF,KAAO,IAAIA,EAAK,CACnB8+B,UAAW,EACXZ,OAAQ,CACNa,QAAS,SAASC,EAASC,GACzB,OAAOC,EAAatkC,EAAKi3C,MAAO7S,EAASC,GAAU,EACpD,EACDT,QAAS,SAASQ,EAASC,GACzB,OAAOC,EAAatkC,EAAKi3C,MAAO7S,EAASC,GAAU,EACpD,KAGLrkC,EAAKwkC,OAAQ,CACd,EAUDpB,EAAM4T,IAAIxT,UAAUp3C,UAAU63C,WAAa,SAAS9kC,GAClD,IAAGxE,KAAK6pC,MAAR,CAIA,IAAI/xC,EAAM2wC,EAAMqB,KAAKC,aAAavlC,EAAQ1M,KAC1C,GAAiC,IAA9BkI,KAAKjO,KAAKmV,QAAQ,SACC,KAAjBpP,EAAI9I,SACL,MAAM,IAAIiD,MAAM,gCAAiD,EAAf6F,EAAI9I,UAK1DgR,KAAKs8C,MA2CP,SAAqBxkD,GA2BnB,IA1BA,IAyBWw7B,EAzBPipB,EAAa,CAAC,EAAE,EAAI,UAAW,UAAW,MAAQ,MAAQ,UAAW,UAAW,IAAM,IAAM,UAAW,UAAW,MAAQ,MAAQ,UAAW,WAC7IC,EAAa,CAAC,EAAE,EAAI,QAAS,QAAS,SAAU,SAAU,SAAU,SAAU,IAAM,IAAM,QAAS,QAAS,SAAU,SAAU,SAAU,UAC1IC,EAAa,CAAC,EAAE,EAAI,KAAM,KAAM,SAAU,SAAU,SAAU,SAAU,EAAE,EAAI,KAAM,KAAM,SAAU,SAAU,SAAU,UACxHC,EAAa,CAAC,EAAE,QAAS,UAAU,UAAU,KAAO,QAAS,UAAU,UAAU,OAAQ,QAAS,UAAU,UAAU,OAAQ,QAAS,UAAU,WACjJC,EAAa,CAAC,EAAE,OAAQ,GAAK,OAAQ,EAAE,OAAQ,GAAK,OAAQ,KAAO,OAAQ,KAAO,OAAQ,KAAO,OAAQ,KAAO,QAChHC,EAAa,CAAC,EAAE,KAAM,GAAK,KAAM,EAAE,KAAM,GAAK,KAAM,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAC1HC,EAAa,CAAC,EAAE,UAAW,OAAQ,UAAW,EAAI,UAAW,OAAQ,UAAW,EAAE,UAAW,OAAQ,UAAW,EAAI,UAAW,OAAQ,WACvIC,EAAa,CAAC,EAAE,MAAQ,KAAM,MAAQ,UAAW,UAAW,UAAW,UAAW,OAAQ,OAAQ,OAAQ,OAAQ,UAAW,UAAW,UAAW,WACnJC,EAAa,CAAC,EAAE,OAAQ,EAAE,OAAQ,EAAI,OAAQ,EAAI,OAAQ,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAChIC,EAAa,CAAC,EAAE,UAAW,EAAI,UAAW,EAAE,UAAW,EAAI,UAAW,KAAM,UAAW,KAAM,UAAW,KAAM,UAAW,KAAM,WAC/HC,EAAa,CAAC,EAAE,GAAK,EAAE,GAAK,QAAS,QAAS,QAAS,QAAS,KAAO,KAAO,KAAO,KAAO,QAAS,QAAS,QAAS,SACvHC,EAAa,CAAC,EAAE,SAAU,IAAM,SAAU,QAAS,SAAU,QAAS,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UACtJC,EAAa,CAAC,EAAE,KAAO,UAAU,UAAU,OAAQ,OAAQ,UAAU,UAAU,GAAK,KAAO,UAAU,UAAU,OAAQ,OAAQ,UAAU,WACzIC,EAAa,CAAC,EAAE,EAAI,IAAM,IAAM,EAAE,EAAI,IAAM,IAAM,EAAI,EAAI,IAAM,IAAM,EAAI,EAAI,IAAM,KAIpF9rB,EAAax5B,EAAI9I,SAAW,EAAI,EAAI,EAGpC0I,EAAO,GAGP2lD,EAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAEvD9yB,EAAI,EACAnxB,EAAI,EAAGA,EAAIk4B,EAAYl4B,IAAK,CAClC,IAAI46B,EAAOl8B,EAAIxJ,WACXgvD,EAAQxlD,EAAIxJ,WAIhB0lC,IAFAV,EAA+B,WAAvBU,IAAS,EAAKspB,KAEN,EAGhBtpB,GADAV,EAAiC,QAHjCgqB,GAAShqB,MAGU,GAAMU,GAMzBA,IAFAV,EAA+B,WAAvBU,IAAS,GAFjBspB,GAAUhqB,IAAQ,OAIF,EAGhBU,GADAV,EAAiC,QAHjCgqB,GAAShqB,MAGU,GAAMU,GAMzBA,IAFAV,EAA+B,YAAvBU,IAAS,GAFjBspB,GAAUhqB,IAAQ,OAIF,EAGhBU,GADAV,EAA+B,WAH/BgqB,GAAShqB,KAGS,EAAKU,GASvBV,GAHAU,IAFAV,EAA+B,YAAvBU,IAAS,GAFjBspB,GAAUhqB,GAAO,MAID,IAGD,GAJfgqB,GAAShqB,KAIuB,GAAM,IAGtCU,EAASspB,GAAS,GAAQA,GAAS,EAAK,SACpCA,IAAU,EAAK,MAAYA,IAAU,GAAM,IAC/CA,EAAQhqB,EAGR,IAAI,IAAIx/B,EAAI,EAAGA,EAAIupD,EAAOruD,SAAU8E,EAAG,CAElCupD,EAAOvpD,IACRkgC,EAAQA,GAAQ,EAAMA,IAAS,GAC/BspB,EAASA,GAAS,EAAMA,IAAU,KAElCtpB,EAAQA,GAAQ,EAAMA,IAAS,GAC/BspB,EAASA,GAAS,EAAMA,IAAU,IAGpCA,IAAU,GAOV,IAAIC,EACFhB,GATFvoB,IAAS,MASY,IAAMwoB,EAAWxoB,IAAS,GAAM,IACnDyoB,EAAWzoB,IAAS,GAAM,IAAO0oB,EAAW1oB,IAAS,GAAM,IAC3D2oB,EAAW3oB,IAAS,GAAM,IAAO4oB,EAAW5oB,IAAS,EAAK,IAC1D6oB,EAAW7oB,IAAS,EAAK,IACvBwpB,EACFV,EAAUQ,IAAU,IAAMP,EAAWO,IAAU,GAAM,IACrDN,EAAWM,IAAU,GAAM,IAAOL,EAAYK,IAAU,GAAM,IAC9DJ,EAAYI,IAAU,GAAM,IAAOH,EAAYG,IAAU,EAAK,IAC9DF,EAAYE,IAAU,EAAK,IAC7BhqB,EAAsC,OAA9BkqB,IAAa,GAAMD,GAC3B7lD,EAAK6yB,KAAOgzB,EAAUjqB,EACtB57B,EAAK6yB,KAAOizB,EAAYlqB,GAAO,EAChC,CACF,CAED,OAAO57B,CACR,CAjJc+lD,CAAY3lD,GACzBkI,KAAK6pC,OAAQ,CAXZ,CAYF,EAIDnB,EAAkB,UAAWD,EAAME,OAAOwB,MAAMC,KAChD1B,EAAkB,UAAWD,EAAME,OAAOwB,MAAME,KAChD3B,EAAkB,UAAWD,EAAME,OAAOwB,MAAMG,KAChD5B,EAAkB,UAAWD,EAAME,OAAOwB,MAAMI,KAChD7B,EAAkB,UAAWD,EAAME,OAAOwB,MAAMK,KAEhD9B,EAAkB,WAAYD,EAAME,OAAOwB,MAAMC,KACjD1B,EAAkB,WAAYD,EAAME,OAAOwB,MAAME,KACjD3B,EAAkB,WAAYD,EAAME,OAAOwB,MAAMG,KACjD5B,EAAkB,WAAYD,EAAME,OAAOwB,MAAMI,KACjD7B,EAAkB,WAAYD,EAAME,OAAOwB,MAAMK,KAWjD,IAAIkT,EAAc,CAAC,SAAU,EAAE,MAAQ,SAAU,SAAU,MAAQ,EAAI,MAAQ,KAAM,SAAU,SAAU,KAAM,SAAU,SAAU,SAAU,EAAI,KAAM,SAAU,SAAU,MAAQ,MAAQ,SAAU,SAAU,SAAU,MAAQ,SAAU,SAAU,MAAQ,EAAE,KAAM,MAAQ,SAAU,MAAQ,SAAU,EAAI,SAAU,SAAU,SAAU,SAAU,KAAM,SAAU,MAAQ,MAAQ,SAAU,KAAM,EAAI,SAAU,MAAQ,SAAU,MAAQ,SAAU,SAAU,SAAU,KAAM,MAAQ,SAAU,KAAM,SAAU,SAAU,EAAE,MAAQ,MAAQ,EAAE,UAC7gBC,EAAc,EAAE,YAAY,WAAW,MAAO,QAAS,QAAS,IAAM,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,WAAW,QAAS,IAAM,WAAW,QAAS,SAAU,WAAW,GAAG,WAAW,MAAO,SAAU,WAAW,SAAU,WAAW,EAAE,QAAS,OAAQ,YAAY,WAAW,MAAO,EAAE,SAAU,WAAW,SAAU,YAAY,YAAY,WAAW,OAAQ,YAAY,WAAW,IAAM,WAAW,QAAS,GAAK,OAAQ,WAAW,OAAQ,WAAW,SAAU,WAAW,SAAU,YAAY,WAAW,QAAS,QAAS,GAAG,WAAW,OAAQ,YAAY,YAAY,WAAW,SAC1mBC,EAAc,CAAC,IAAM,UAAU,EAAE,UAAU,UAAU,EAAE,OAAQ,UAAU,OAAQ,UAAU,UAAU,OAAQ,UAAU,OAAQ,UAAU,IAAM,UAAU,EAAI,UAAU,IAAM,OAAQ,UAAU,UAAU,OAAQ,UAAU,OAAQ,OAAQ,UAAU,EAAI,UAAU,IAAM,UAAU,UAAU,UAAU,OAAQ,IAAM,OAAQ,UAAU,UAAU,EAAE,IAAM,OAAQ,UAAU,UAAU,UAAU,IAAM,EAAE,UAAU,UAAU,OAAQ,UAAU,UAAU,EAAI,OAAQ,OAAQ,UAAU,UAAU,UAAU,IAAM,UAAU,OAAQ,EAAI,UAAU,QAC/gBC,EAAc,CAAC,QAAS,KAAO,KAAO,IAAK,QAAS,QAAS,QAAS,KAAO,EAAE,QAAS,QAAS,QAAS,IAAK,EAAE,QAAS,QAAS,EAAI,KAAO,QAAS,QAAS,IAAK,QAAS,KAAO,KAAO,QAAS,EAAI,KAAO,QAAS,KAAO,QAAS,QAAS,IAAK,QAAS,QAAS,QAAS,QAAS,IAAK,EAAE,EAAE,QAAS,KAAO,QAAS,QAAS,EAAI,QAAS,KAAO,KAAO,IAAK,QAAS,IAAK,EAAI,KAAO,QAAS,KAAO,QAAS,QAAS,KAAO,KAAO,QAAS,QAAS,IAAK,QAAS,KAAO,SACtdC,EAAc,CAAC,IAAM,SAAU,SAAU,WAAW,OAAQ,IAAM,WAAW,SAAU,WAAW,OAAQ,SAAU,WAAW,WAAW,WAAW,OAAQ,WAAW,SAAU,WAAW,WAAW,EAAE,WAAW,WAAW,WAAW,SAAU,WAAW,WAAW,EAAE,WAAW,SAAU,SAAU,WAAW,OAAQ,OAAQ,WAAW,IAAM,SAAU,WAAW,SAAU,WAAW,WAAW,SAAU,WAAW,WAAW,SAAU,WAAW,IAAM,SAAU,WAAW,WAAW,OAAQ,WAAW,WAAW,SAAU,EAAE,WAAW,WAAW,OAAQ,SAAU,WAAW,OAAQ,EAAE,WAAW,SAAU,YACpmBC,EAAc,CAAC,UAAW,UAAW,MAAO,UAAW,UAAW,GAAK,UAAW,QAAS,UAAW,QAAS,QAAS,UAAW,QAAS,UAAW,UAAW,MAAO,EAAE,QAAS,UAAW,MAAO,QAAS,UAAW,GAAK,UAAW,UAAW,EAAE,QAAS,UAAW,MAAO,QAAS,UAAW,UAAW,UAAW,GAAK,UAAW,QAAS,UAAW,QAAS,MAAO,UAAW,QAAS,UAAW,UAAW,MAAO,UAAW,UAAW,QAAS,UAAW,QAAS,UAAW,EAAE,UAAW,GAAK,MAAO,UAAW,QAAS,MAAO,QAAS,UAAW,EAAE,UAAW,UAAW,QAAS,WACxkBC,EAAc,CAAC,QAAS,SAAU,SAAU,EAAE,KAAM,SAAU,QAAS,SAAU,SAAU,QAAS,EAAE,SAAU,EAAI,SAAU,SAAU,KAAM,SAAU,QAAS,QAAS,SAAU,SAAU,SAAU,SAAU,QAAS,SAAU,KAAM,KAAM,SAAU,QAAS,EAAI,SAAU,QAAS,SAAU,QAAS,QAAS,SAAU,SAAU,SAAU,SAAU,EAAI,QAAS,SAAU,SAAU,QAAS,SAAU,KAAM,QAAS,SAAU,KAAM,SAAU,SAAU,SAAU,QAAS,EAAE,EAAI,SAAU,EAAE,QAAS,SAAU,KAAM,SAAU,SAAU,KAAM,SAC9hBC,EAAc,CAAC,UAAW,KAAO,OAAQ,UAAW,UAAW,UAAW,GAAK,UAAW,OAAQ,UAAW,UAAW,OAAQ,UAAW,OAAQ,KAAO,GAAK,UAAW,UAAW,UAAW,KAAO,OAAQ,OAAQ,UAAW,UAAW,KAAO,EAAE,EAAE,UAAW,UAAW,UAAW,OAAQ,OAAQ,OAAQ,OAAQ,UAAW,KAAO,GAAK,UAAW,KAAO,OAAQ,UAAW,GAAK,UAAW,UAAW,UAAW,UAAW,OAAQ,UAAW,EAAE,UAAW,OAAQ,UAAW,UAAW,UAAW,UAAW,EAAE,UAAW,OAAQ,OAAQ,KAAO,KAAO,OAAQ,UAAW,WA0H5jB,SAAStU,EAAajyC,EAAMsH,EAAOrP,EAAQs5C,GAEzC,IACIiV,EASA5qB,EAVAhC,EAA6B,KAAhB55B,EAAK1I,OAAgB,EAAI,EAGxCkvD,EADgB,IAAf5sB,EACS2X,EAAU,CAAC,IAAK,GAAI,GAAK,CAAC,EAAG,GAAI,GAEhCA,EACT,CAAC,GAAI,IAAK,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,GACjC,CAAC,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,GAAI,GAKnC,IAAIjV,EAAOh1B,EAAM,GACbs+C,EAAQt+C,EAAM,GAKlBg1B,IAFAV,EAA+B,WAAvBU,IAAS,EAAKspB,KAEN,EAIhBtpB,IAFAV,EAAgC,OAAxBU,IAAS,IAHjBspB,GAAShqB,MAKO,GAGhBU,GADAV,EAA+B,YAH/BgqB,GAAShqB,KAGS,EAAKU,GAKvBA,GADAV,EAA+B,WAF/BgqB,GAAUhqB,GAAO,KAEC,EAAKU,GASvBA,GAHAA,IAFAV,EAA+B,YAAvBU,IAAS,GAFjBspB,GAAUhqB,GAAO,MAID,IAGC,EAAMU,IAAS,GAChCspB,GALAA,GAAShqB,IAKU,EAAMgqB,IAAU,GAEnC,IAAI,IAAIlkD,EAAI,EAAGA,EAAIk4B,EAAYl4B,GAAK,EAAG,CAKrC,IAJA,IAAI+kD,EAAUD,EAAQ9kD,EAAI,GACtBglD,EAAUF,EAAQ9kD,EAAI,GAGlBtF,EAAIoqD,EAAQ9kD,GAAItF,GAAKqqD,EAASrqD,GAAKsqD,EAAS,CAClD,IAAIC,EAASf,EAAQ5lD,EAAK5D,GACtBwqD,GAAWhB,IAAU,EAAMA,GAAS,IAAO5lD,EAAK5D,EAAI,GAGxDw/B,EAAMU,EACNA,EAAOspB,EACPA,EAAQhqB,GACNqqB,EAAaU,IAAW,GAAM,IAC9BR,EAAaQ,IAAW,GAAM,IAC9BN,EAAaM,IAAY,EAAK,IAC9BJ,EAAqB,GAATI,GACZX,EAAaY,IAAW,GAAM,IAC9BV,EAAaU,IAAW,GAAM,IAC9BR,EAAaQ,IAAY,EAAK,IAC9BN,EAAqB,GAATM,GACf,CAEDhrB,EAAMU,EACNA,EAAOspB,EACPA,EAAQhqB,CACT,CAIDgqB,EAAUA,IAAU,EAAMA,GAAS,GAInCA,GADAhqB,EAA+B,aAJ/BU,EAASA,IAAS,EAAMA,GAAQ,MAIf,EAAKspB,GAMtBA,IAFAhqB,EAA+B,UAAvBgqB,IAAU,GAFlBtpB,GAASV,GAAO,MAIC,EAIjBgqB,IAFAhqB,EAA+B,WAAvBgqB,IAAU,GAHlBtpB,GAAQV,MAKS,EAGjBgqB,GADAhqB,EAAgC,QAHhCU,GAAQV,KAGS,GAAMgqB,GAKvBA,GADAhqB,EAA+B,YAF/BU,GAASV,GAAO,MAEC,EAAKgqB,GAEtBtpB,GAASV,GAAO,EAEhB3jC,EAAO,GAAKqkC,EACZrkC,EAAO,GAAK2tD,CACb,CAqBD,SAAStU,EAAcxkC,GAErB,IAGImkC,EAFA2D,EAAY,SAFhB9nC,EAAUA,GAAW,CAAC,GACFiG,MAAQ,OAAOiyB,cAW/BvlB,GANFwxB,EADCnkC,EAAQykC,QACAR,EAAME,OAAO4D,eAAeD,EAAW9nC,EAAQ1M,KAE/C2wC,EAAME,OAAO6D,aAAaF,EAAW9nC,EAAQ1M,MAIrCqf,MAcnB,OAbAwxB,EAAOxxB,MAAQ,SAAS4xB,EAAIvkC,GAE1B,IAAI7U,EAAS,KACV6U,aAAmBikC,EAAMqB,KAAK2C,aAC/B98C,EAAS6U,EACTA,EAAU,CAAC,IAEbA,EAAUA,GAAW,CAAC,GACd7U,OAASA,EACjB6U,EAAQukC,GAAKA,EACb5xB,EAAMtd,KAAK8uC,EAAQnkC,EACpB,EAEMmkC,CACR,mBCreD,IAAIF,EAAQrqB,EAAQ,OACpBA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,MACRA,EAAQ,OACR,IAAImgC,EAAgBngC,EAAQ,OACxB4yB,EAAqBuN,EAAcvN,mBACnCX,EAAsBkO,EAAclO,oBAExC,QAAyB,IAAfpmB,EACR,IAAIA,EAAawe,EAAM+V,KAAKv0B,WAG9B,IAAIwiB,EAAahE,EAAMqB,KAAK2C,WACxBgS,EAAiC,oBAAX93B,OAAyBj0B,WAAai0B,OAMhE8hB,EAAMiP,IAAMjP,EAAMiP,KAAO,CAAC,EAC1Bh5B,EAAOiE,QAAU8lB,EAAMiP,IAAIgH,QAAUjW,EAAMiW,QAAUjW,EAAMiW,SAAW,CAAC,EACvE,IAAIA,EAAUjW,EAAMiW,QA+LpB,SAASC,EAAsBn6C,GAC7B,IAAIrT,EAAUqT,EAAQrT,QACtB,GAAGA,aAAmBuB,YAAcvB,aAAmBstD,EACrD,OAAOttD,EAGT,IAAIytD,EAAWp6C,EAAQo6C,SACvB,QAAetvD,IAAZ6B,EAAuB,CACxB,IAAGqT,EAAQq6C,GAKT,MAAM,IAAItnB,UAAU,oDAHpBpmC,EAAUqT,EAAQq6C,GAAGzP,SAASL,WAC9B6P,EAAW,QAId,CAED,GAAsB,iBAAZztD,IAAyBytD,EACjC,MAAM,IAAIrnB,UAAU,kDAGtB,GAAsB,iBAAZpmC,EAAsB,CAC9B,GAAqB,oBAAXw1B,OACR,OAAOA,OAAOtyB,KAAKlD,EAASytD,GAE9BztD,EAAU,IAAIs7C,EAAWt7C,EAASytD,EACnC,MAAM,KAAKztD,aAAmBs7C,GAC7B,MAAM,IAAIlV,UACR,8IAOJ,IADA,IAAI3kC,EAAS,IAAI6rD,EAAattD,EAAQnC,UAC9B8E,EAAI,EAAGA,EAAIlB,EAAO5D,SAAU8E,EAClClB,EAAOkB,GAAK3C,EAAQ29C,GAAGh7C,GAEzB,OAAOlB,CACR,CApOD8rD,EAAQI,UAAY,CAAC,EACrBJ,EAAQI,UAAUC,uBAAyB,GAC3CL,EAAQI,UAAUE,wBAA0B,GAC5CN,EAAQI,UAAUG,iBAAmB,GACrCP,EAAQI,UAAUI,iBAAmB,GACrCR,EAAQI,UAAUK,iBAAmB,GAErCT,EAAQU,gBAAkB,SAAS56C,GAEjC,IAAI66C,GADJ76C,EAAUA,GAAW,CAAC,GACH66C,KACnB,QAAY/vD,IAAT+vD,EAEDA,EAAO5W,EAAMnvC,OAAOg1C,aAAaoQ,EAAQI,UAAUG,uBAC9C,GAAmB,iBAATI,GACf,GAAGA,EAAKrwD,SAAW0vD,EAAQI,UAAUG,iBACnC,MAAM,IAAI1nB,UACR,kBAAoBmnB,EAAQI,UAAUG,iBACtC,0BAEC,KAAKI,aAAgB3sD,YAC1B,MAAM,IAAI6kC,UACR,oEAGJ8nB,EAAOV,EAAsB,CAACxtD,QAASkuD,EAAMT,SAAU,WAIvD,IAFA,IAAIU,EAAK,IAAIb,EAAaC,EAAQI,UAAUC,wBACxCQ,EAAK,IAAId,EAAaC,EAAQI,UAAUE,yBACpClrD,EAAI,EAAGA,EAAI,KAAMA,EACvByrD,EAAGzrD,GAAKurD,EAAKvrD,GAGf,OA8OF,SAA6BwrD,EAAIC,GAC/B,IACIzrD,EADAy/B,EAAI,CAACisB,IAAMA,IAAMA,IAAMA,KAGvBpzB,EAAIqzB,EAAOF,EAAI,IAQnB,IAPAnzB,EAAE,IAAM,IACRA,EAAE,KAAO,IACTA,EAAE,KAAO,GAETszB,EAAWnsB,EAAGnH,GACduzB,EAAKL,EAAI/rB,GAELz/B,EAAI,EAAGA,EAAI,KAAMA,EACnByrD,EAAGzrD,EAAI,IAAMwrD,EAAGxrD,EAGnB,CA/PC8rD,CAAoBN,EAAIC,GACjB,CAACM,UAAWP,EAAIQ,WAAYP,EACpC,EAUDb,EAAQqB,mBAAqB,SAAS1oB,GACpC,IAAIwZ,EAAU,CAAC,EACXmG,EAAS,GAEb,IADYvO,EAAM2H,KAAK2G,SAAS1f,EAAKgZ,EAAqBQ,EAASmG,GACxD,CACT,IAAIl1C,EAAQ,IAAI7P,MAAM,gBAEtB,MADA6P,EAAMk1C,OAASA,EACTl1C,CACP,CACD,IAAI4yC,EAAMjM,EAAM2H,KAAKwE,SAAS/D,EAAQmP,eAClCC,EAAaxX,EAAMkP,KAAKuI,WAC5B,GAAGxL,IAAQuL,EACT,MAAM,IAAIhuD,MAAM,gBAAkByiD,EAAM,mBACtCuL,EAAa,MAEjB,IAAIH,EAAajP,EAAQiP,WAUzB,MAAO,CAACK,gBAPcxB,EAAsB,CAC1CxtD,QAASs3C,EAAM2H,KAAK6D,QAAQ6L,GAAY/xD,MACxC6wD,SAAU,WAMb,EASDF,EAAQ0B,kBAAoB,SAAS/oB,GAEnC,IAAIwZ,EAAU,CAAC,EACXmG,EAAS,GAEb,IADYvO,EAAM2H,KAAK2G,SAAS1f,EAAK2Z,EAAoBH,EAASmG,GACvD,CACT,IAAIl1C,EAAQ,IAAI7P,MAAM,gBAEtB,MADA6P,EAAMk1C,OAASA,EACTl1C,CACP,CACD,IAAI4yC,EAAMjM,EAAM2H,KAAKwE,SAAS/D,EAAQwP,cAClCJ,EAAaxX,EAAMkP,KAAKuI,WAC5B,GAAGxL,IAAQuL,EACT,MAAM,IAAIhuD,MAAM,gBAAkByiD,EAAM,mBACtCuL,EAAa,MAEjB,IAAIK,EAAiBzP,EAAQ0P,iBAC7B,GAAGD,EAAetxD,SAAW0vD,EAAQI,UAAUC,uBAC7C,MAAM,IAAI9sD,MAAM,0BAElB,OAAO0sD,EAAsB,CAC3BxtD,QAASmvD,EACT1B,SAAU,UAEb,EAEDF,EAAQ8B,wBAA0B,SAASh8C,GAEzC,IAAIs7C,EAAanB,EAAsB,CACrCxtD,SAFFqT,EAAUA,GAAW,CAAC,GAEHs7C,WAAYlB,SAAU,WAEzC,GAAGkB,EAAW9wD,SAAW0vD,EAAQI,UAAUE,wBACzC,MAAM,IAAIznB,UACR,mDACAmnB,EAAQI,UAAUE,yBAItB,IADA,IAAIM,EAAK,IAAIb,EAAaC,EAAQI,UAAUC,wBACpCjrD,EAAI,EAAGA,EAAIwrD,EAAGtwD,SAAU8E,EAC9BwrD,EAAGxrD,GAAKgsD,EAAW,GAAKhsD,GAE1B,OAAOwrD,CACR,EAEDZ,EAAQx0B,KAAO,SAAS1lB,GAEtB,IAAIqD,EAAM82C,EADVn6C,EAAUA,GAAW,CAAC,GAElBs7C,EAAanB,EAAsB,CACrCxtD,QAASqT,EAAQs7C,WACjBlB,SAAU,WAEZ,GAAGkB,EAAW9wD,SAAW0vD,EAAQI,UAAUG,iBAEzCa,EADcpB,EAAQU,gBAAgB,CAACC,KAAMS,IACxBA,gBAChB,GAAGA,EAAW9wD,SAAW0vD,EAAQI,UAAUE,wBAChD,MAAM,IAAIznB,UACR,mDACAmnB,EAAQI,UAAUG,iBAAmB,OACrCP,EAAQI,UAAUE,yBAGtB,IAAIyB,EAAY,IAAIhC,EAClBC,EAAQI,UAAUI,iBAAmBr3C,EAAI7Y,SAqJ7C,SAAqB0xD,EAAIlmC,EAAG+P,EAAGg1B,GAC7B,IAAIzrD,EAAGsF,EAAG4oB,EAAI,IAAI3B,aAAa,IAC3BkT,EAAI,CAACisB,IAAMA,IAAMA,IAAMA,KAEvBpzB,EAAIqzB,EAAOF,EAAI,IACnBnzB,EAAE,IAAM,IACRA,EAAE,KAAO,IACTA,EAAE,KAAO,GAET,IAAIu0B,EAAQp2B,EAAI,GAChB,IAAIz2B,EAAI,EAAGA,EAAIy2B,IAAKz2B,EAClB4sD,EAAG,GAAK5sD,GAAK0mB,EAAE1mB,GAEjB,IAAIA,EAAI,EAAGA,EAAI,KAAMA,EACnB4sD,EAAG,GAAK5sD,GAAKs4B,EAAE,GAAKt4B,GAGtB,IAAIm3B,EAAIw0B,EAAOiB,EAAG7wD,SAAS,IAAK06B,EAAI,IAKpC,IAJAjW,EAAO2W,GACPy0B,EAAWnsB,EAAGtI,GACd00B,EAAKe,EAAIntB,GAELz/B,EAAI,GAAIA,EAAI,KAAMA,EACpB4sD,EAAG5sD,GAAKyrD,EAAGzrD,GAEb,IAAI8nD,EAAI6D,EAAOiB,EAAIn2B,EAAI,IAGvB,IAFAjW,EAAOsnC,GAEH9nD,EAAI,GAAIA,EAAI,KAAMA,EACpBkuB,EAAEluB,GAAK,EAET,IAAIA,EAAI,EAAGA,EAAI,KAAMA,EACnBkuB,EAAEluB,GAAKm3B,EAAEn3B,GAEX,IAAIA,EAAI,EAAGA,EAAI,KAAMA,EACnB,IAAIsF,EAAI,EAAGA,EAAI,GAAIA,IACjB4oB,EAAEluB,EAAIsF,IAAMwiD,EAAE9nD,GAAKs4B,EAAEhzB,GAIzBwnD,EAAKF,EAAG7wD,SAAS,IAAKmyB,EAEvB,CA9LC6+B,CAAYJ,EAAW54C,EAAKA,EAAI7Y,OAAQ8wD,GAGxC,IADA,IAAIgB,EAAM,IAAIrC,EAAaC,EAAQI,UAAUI,kBACrCprD,EAAI,EAAGA,EAAIgtD,EAAI9xD,SAAU8E,EAC/BgtD,EAAIhtD,GAAK2sD,EAAU3sD,GAErB,OAAOgtD,CACR,EAEDpC,EAAQz1B,OAAS,SAASzkB,GAExB,IAAIqD,EAAM82C,EADVn6C,EAAUA,GAAW,CAAC,GAEtB,QAAyBlV,IAAtBkV,EAAQu8C,UACT,MAAM,IAAIxpB,UACR,uGAGJ,IAAIupB,EAAMnC,EAAsB,CAC9BxtD,QAASqT,EAAQu8C,UACjBnC,SAAU,WAEZ,GAAGkC,EAAI9xD,SAAW0vD,EAAQI,UAAUI,iBAClC,MAAM,IAAI3nB,UACR,kDACAmnB,EAAQI,UAAUI,kBAEtB,IAAIW,EAAYlB,EAAsB,CACpCxtD,QAASqT,EAAQq7C,UACjBjB,SAAU,WAEZ,GAAGiB,EAAU7wD,SAAW0vD,EAAQI,UAAUC,uBACxC,MAAM,IAAIxnB,UACR,kDACAmnB,EAAQI,UAAUC,wBAGtB,IAEIjrD,EAFA4sD,EAAK,IAAIjC,EAAaC,EAAQI,UAAUI,iBAAmBr3C,EAAI7Y,QAC/DwrB,EAAI,IAAIikC,EAAaC,EAAQI,UAAUI,iBAAmBr3C,EAAI7Y,QAElE,IAAI8E,EAAI,EAAGA,EAAI4qD,EAAQI,UAAUI,mBAAoBprD,EACnD4sD,EAAG5sD,GAAKgtD,EAAIhtD,GAEd,IAAIA,EAAI,EAAGA,EAAI+T,EAAI7Y,SAAU8E,EAC3B4sD,EAAG5sD,EAAI4qD,EAAQI,UAAUI,kBAAoBr3C,EAAI/T,GAEnD,OAmJF,SAA0B0mB,EAAGkmC,EAAIn2B,EAAG+0B,GAClC,IAAIxrD,EACAs9B,EAAI,IAAIqtB,EAAa,IACrBlrB,EAAI,CAACisB,IAAMA,IAAMA,IAAMA,KACvB5yB,EAAI,CAAC4yB,IAAMA,IAAMA,IAAMA,KAG3B,IADQ,EACLj1B,EAAI,GACL,OAAQ,EAGV,GAwIF,SAAmBU,EAAGsI,GACpB,IAAInC,EAAIouB,IAAMwB,EAAMxB,IAAM35C,EAAM25C,IAC5ByB,EAAMzB,IAAM0B,EAAO1B,IAAM2B,EAAO3B,IAChC4B,EAAO5B,IAEX6B,EAASp2B,EAAE,GAAIq2B,GAuCjB,SAAqBC,EAAGh3B,GACtB,IAAIz2B,EACJ,IAAIA,EAAI,EAAGA,EAAI,KAAMA,EACnBytD,EAAEztD,GAAKy2B,EAAE,EAAIz2B,IAAMy2B,EAAE,EAAIz2B,EAAI,IAAM,GAErCytD,EAAE,KAAO,KACV,CA5CCC,CAAYv2B,EAAE,GAAIsI,GAClBkuB,EAAE57C,EAAKolB,EAAE,IACTy2B,EAAET,EAAKp7C,EAAK87C,GACZC,EAAE/7C,EAAKA,EAAKolB,EAAE,IACd42B,EAAEZ,EAAKh2B,EAAE,GAAIg2B,GAEbQ,EAAEP,EAAMD,GACRQ,EAAEN,EAAMD,GACRQ,EAAEN,EAAMD,EAAMD,GACdQ,EAAEtwB,EAAGgwB,EAAMv7C,GACX67C,EAAEtwB,EAAGA,EAAG6vB,GAoCV,SAAiBM,EAAGztD,GAClB,IACIygB,EADArJ,EAAIs0C,IAER,IAAIjrC,EAAI,EAAGA,EAAI,KAAMA,EACnBrJ,EAAEqJ,GAAKzgB,EAAEygB,GAEX,IAAIA,EAAI,IAAKA,GAAK,IAAKA,EACrBktC,EAAEv2C,EAAGA,GACI,IAANqJ,GACDmtC,EAAEx2C,EAAGA,EAAGpX,GAGZ,IAAIygB,EAAI,EAAGA,EAAI,KAAMA,EACnBgtC,EAAEhtC,GAAKrJ,EAAEqJ,EAEZ,CAjDCutC,CAAQ1wB,EAAGA,GACXswB,EAAEtwB,EAAGA,EAAGvrB,GACR67C,EAAEtwB,EAAGA,EAAG6vB,GACRS,EAAEtwB,EAAGA,EAAG6vB,GACRS,EAAEz2B,EAAE,GAAImG,EAAG6vB,GAEXQ,EAAET,EAAK/1B,EAAE,IACTy2B,EAAEV,EAAKA,EAAKC,GACTc,EAASf,EAAKn7C,IACf67C,EAAEz2B,EAAE,GAAIA,EAAE,GAAI+2B,GAKhB,GAFAP,EAAET,EAAK/1B,EAAE,IACTy2B,EAAEV,EAAKA,EAAKC,GACTc,EAASf,EAAKn7C,GACf,OAAQ,EAGPo8C,EAASh3B,EAAE,MAASsI,EAAE,KAAO,GAC9BquB,EAAE32B,EAAE,GAAIi3B,EAAKj3B,EAAE,IAIjB,OADAy2B,EAAEz2B,EAAE,GAAIA,EAAE,GAAIA,EAAE,IACT,CACR,CAlLIk3B,CAAUv1B,EAAG0yB,GACd,OAAQ,EAGV,IAAIxrD,EAAI,EAAGA,EAAIy2B,IAAKz2B,EAClB0mB,EAAE1mB,GAAK4sD,EAAG5sD,GAEZ,IAAIA,EAAI,EAAGA,EAAI,KAAMA,EACnB0mB,EAAE1mB,EAAI,IAAMwrD,EAAGxrD,GAEjB,IAAI8nD,EAAI6D,EAAOjlC,EAAG+P,GASlB,GARAjW,EAAOsnC,GACPwG,EAAW7uB,EAAG3G,EAAGgvB,GAEjB8D,EAAW9yB,EAAG8zB,EAAG7wD,SAAS,KAC1Bg7B,EAAI0I,EAAG3G,GACP+yB,EAAKvuB,EAAGmC,GAERhJ,GAAK,GACF83B,EAAiB3B,EAAI,EAAGtvB,EAAG,GAAI,CAChC,IAAIt9B,EAAI,EAAGA,EAAIy2B,IAAKz2B,EAClB0mB,EAAE1mB,GAAK,EAET,OAAQ,CACT,CAED,IAAIA,EAAI,EAAGA,EAAIy2B,IAAKz2B,EAClB0mB,EAAE1mB,GAAK4sD,EAAG5sD,EAAI,IAGhB,OADOy2B,CAER,CA7LS+3B,CAAiB9nC,EAAGkmC,EAAIA,EAAG1xD,OAAQ6wD,IAAc,CAC1D,EA2CD,IAAIqC,EAAM1C,IACN8B,EAAM9B,EAAG,CAAC,IACVmC,EAAInC,EAAG,CACT,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,IACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,QACtD+C,EAAK/C,EAAG,CACV,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,IACxD,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,OACtDgD,EAAIhD,EAAG,CACT,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,OACtDiD,EAAIjD,EAAG,CACT,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,QACtDkD,EAAI,IAAIriC,aAAa,CACvB,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,GAC1C,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAC1C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAC3C2hC,EAAIxC,EAAG,CACT,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MACxD,MAAQ,MAAQ,IAAQ,MAAQ,MAAQ,MAAQ,KAAQ,QAI1D,SAASC,EAAO53C,EAAK86C,GAEnB,IAAI9D,EAAKpW,EAAMoW,GAAGY,OAAOluD,SACrBqB,EAAS,IAAI65C,EAAW5kC,GAC5Bg3C,EAAG9lB,OAAOnmC,EAAOm8C,SAAS4T,GAAS,UACnC,IAAIj7B,EAAOm3B,EAAGzP,SAASL,WACvB,GAAqB,oBAAXpoB,OACR,OAAOA,OAAOtyB,KAAKqzB,EAAM,UAG3B,IADA,IAAIhgB,EAAM,IAAI+2C,EAAaC,EAAQI,UAAUK,kBACrCrrD,EAAI,EAAGA,EAAI,KAAMA,EACvB4T,EAAI5T,GAAK4zB,EAAKv4B,WAAW2E,GAE3B,OAAO4T,CACR,CA6GD,SAASk5C,EAAK31B,EAAGjJ,GACf,IAAIkJ,EAAOp3B,EAAGsF,EAAGshC,EACjB,IAAI5mC,EAAI,GAAIA,GAAK,KAAMA,EAAG,CAExB,IADAo3B,EAAQ,EACJ9xB,EAAItF,EAAI,GAAI4mC,EAAI5mC,EAAI,GAAIsF,EAAIshC,IAAKthC,EACnC4oB,EAAE5oB,IAAM8xB,EAAQ,GAAKlJ,EAAEluB,GAAK4uD,EAAEtpD,GAAKtF,EAAI,KACvCo3B,EAASlJ,EAAE5oB,GAAK,KAAQ,EACxB4oB,EAAE5oB,IAAc,IAAR8xB,EAEVlJ,EAAE5oB,IAAM8xB,EACRlJ,EAAEluB,GAAK,CACR,CAED,IADAo3B,EAAQ,EACJ9xB,EAAI,EAAGA,EAAI,KAAMA,EACnB4oB,EAAE5oB,IAAM8xB,GAASlJ,EAAE,KAAO,GAAK0gC,EAAEtpD,GACjC8xB,EAAQlJ,EAAE5oB,IAAM,EAChB4oB,EAAE5oB,IAAM,IAEV,IAAIA,EAAI,EAAGA,EAAI,KAAMA,EACnB4oB,EAAE5oB,IAAM8xB,EAAQw3B,EAAEtpD,GAEpB,IAAItF,EAAI,EAAGA,EAAI,KAAMA,EACnBkuB,EAAEluB,EAAI,IAAMkuB,EAAEluB,IAAM,EACpBm3B,EAAEn3B,GAAY,IAAPkuB,EAAEluB,EAEZ,CAED,SAASwgB,EAAO2W,GAEd,IADA,IAAIjJ,EAAI,IAAI3B,aAAa,IACjBvsB,EAAI,EAAGA,EAAI,KAAMA,EACvBkuB,EAAEluB,GAAKm3B,EAAEn3B,GACTm3B,EAAEn3B,GAAK,EAET8sD,EAAK31B,EAAGjJ,EACT,CAED,SAAS6I,EAAI0I,EAAG3G,GACd,IAAIrY,EAAIirC,IAAMnrC,EAAImrC,IAAMt0C,EAAIs0C,IACxBpzB,EAAIozB,IAAMrlD,EAAIqlD,IAAM3gC,EAAI2gC,IACxBoD,EAAIpD,IAAM5D,EAAI4D,IAAMpuB,EAAIouB,IAE5BoC,EAAErtC,EAAGgf,EAAE,GAAIA,EAAE,IACbquB,EAAExwB,EAAGxE,EAAE,GAAIA,EAAE,IACb80B,EAAEntC,EAAGA,EAAG6c,GACRywB,EAAExtC,EAAGkf,EAAE,GAAIA,EAAE,IACbsuB,EAAEzwB,EAAGxE,EAAE,GAAIA,EAAE,IACb80B,EAAErtC,EAAGA,EAAG+c,GACRswB,EAAEx2C,EAAGqoB,EAAE,GAAI3G,EAAE,IACb80B,EAAEx2C,EAAGA,EAAGq3C,GACRb,EAAEt1B,EAAGmH,EAAE,GAAI3G,EAAE,IACbi1B,EAAEz1B,EAAGA,EAAGA,GACRw1B,EAAEznD,EAAGka,EAAGE,GACRqtC,EAAE/iC,EAAGuN,EAAGlhB,GACR22C,EAAEe,EAAGx2B,EAAGlhB,GACR22C,EAAEjG,EAAGvnC,EAAGE,GAERmtC,EAAEnuB,EAAE,GAAIp5B,EAAG0kB,GACX6iC,EAAEnuB,EAAE,GAAIqoB,EAAGgH,GACXlB,EAAEnuB,EAAE,GAAIqvB,EAAG/jC,GACX6iC,EAAEnuB,EAAE,GAAIp5B,EAAGyhD,EACZ,CAED,SAASiH,EAAMtvB,EAAG3G,EAAGvY,GACnB,IAAI,IAAIvgB,EAAI,EAAGA,EAAI,IAAKA,EACtBgvD,EAASvvB,EAAEz/B,GAAI84B,EAAE94B,GAAIugB,EAExB,CAED,SAASsrC,EAAK10B,EAAGsI,GACf,IAAIwvB,EAAKvD,IAAMwD,EAAKxD,IAAMyD,EAAKzD,KAgKjC,SAAkB+B,EAAGztD,GACnB,IACIygB,EADArJ,EAAIs0C,IAER,IAAIjrC,EAAI,EAAGA,EAAI,KAAMA,EACnBrJ,EAAEqJ,GAAKzgB,EAAEygB,GAEX,IAAIA,EAAI,IAAKA,GAAK,IAAKA,EACrBktC,EAAEv2C,EAAGA,GACI,IAANqJ,GAAiB,IAANA,GACZmtC,EAAEx2C,EAAGA,EAAGpX,GAGZ,IAAIygB,EAAI,EAAGA,EAAI,KAAMA,EACnBgtC,EAAEhtC,GAAKrJ,EAAEqJ,EAEZ,CA9KC2uC,CAASD,EAAI1vB,EAAE,IACfmuB,EAAEqB,EAAIxvB,EAAE,GAAI0vB,GACZvB,EAAEsB,EAAIzvB,EAAE,GAAI0vB,GACZE,EAAUl4B,EAAG+3B,GACb/3B,EAAE,KAAOg3B,EAASc,IAAO,CAC1B,CAED,SAASI,EAAU5B,EAAGh3B,GACpB,IAAIz2B,EAAGsF,EAAGib,EACNmG,EAAIglC,IAAMpuB,EAAIouB,IAClB,IAAI1rD,EAAI,EAAGA,EAAI,KAAMA,EACnBs9B,EAAEt9B,GAAKy2B,EAAEz2B,GAKX,IAHAsvD,EAAShyB,GACTgyB,EAAShyB,GACTgyB,EAAShyB,GACLh4B,EAAI,EAAGA,EAAI,IAAKA,EAAG,CAErB,IADAohB,EAAE,GAAK4W,EAAE,GAAK,MACVt9B,EAAI,EAAGA,EAAI,KAAMA,EACnB0mB,EAAE1mB,GAAKs9B,EAAEt9B,GAAK,OAAW0mB,EAAE1mB,EAAI,IAAM,GAAM,GAC3C0mB,EAAE1mB,EAAE,IAAM,MAEZ0mB,EAAE,IAAM4W,EAAE,IAAM,OAAW5W,EAAE,KAAO,GAAM,GAC1CnG,EAAKmG,EAAE,KAAO,GAAM,EACpBA,EAAE,KAAO,MACTsoC,EAAS1xB,EAAG5W,EAAG,EAAInG,EACpB,CACD,IAAKvgB,EAAI,EAAGA,EAAI,GAAIA,IAClBytD,EAAE,EAAIztD,GAAY,IAAPs9B,EAAEt9B,GACbytD,EAAE,EAAIztD,EAAI,GAAKs9B,EAAEt9B,IAAM,CAE1B,CAuED,SAASiuD,EAASxtC,EAAGF,GACnB,IAAInJ,EAAI,IAAIuzC,EAAa,IACrBryB,EAAI,IAAIqyB,EAAa,IAGzB,OAFA0E,EAAUj4C,EAAGqJ,GACb4uC,EAAU/2B,EAAG/X,GACNguC,EAAiBn3C,EAAG,EAAGkhB,EAAG,EAClC,CAED,SAASi2B,EAAiBrgC,EAAGqhC,EAAIl3B,EAAGm3B,GAClC,OAGF,SAAYthC,EAAGqhC,EAAIl3B,EAAGm3B,EAAI/4B,GACxB,IAAIz2B,EAAGs4B,EAAI,EACX,IAAIt4B,EAAI,EAAGA,EAAIy2B,IAAKz2B,EAClBs4B,GAAKpK,EAAEqhC,EAAKvvD,GAAKq4B,EAAEm3B,EAAKxvD,GAE1B,OAAQ,EAAMs4B,EAAI,IAAO,GAAM,CAChC,CATQm3B,CAAGvhC,EAAGqhC,EAAIl3B,EAAGm3B,EAAI,GACzB,CAUD,SAASrB,EAAS1tC,GAChB,IAAI6X,EAAI,IAAIqyB,EAAa,IAEzB,OADA0E,EAAU/2B,EAAG7X,GACC,EAAP6X,EAAE,EACV,CAED,SAASg2B,EAAW7uB,EAAG3G,EAAG3Z,GACxB,IAAIoB,EAAGvgB,EAKP,IAJAutD,EAAS9tB,EAAE,GAAI2uB,GACfb,EAAS9tB,EAAE,GAAI+tB,GACfD,EAAS9tB,EAAE,GAAI+tB,GACfD,EAAS9tB,EAAE,GAAI2uB,GACXpuD,EAAI,IAAKA,GAAK,IAAKA,EAErB+uD,EAAMtvB,EAAG3G,EADTvY,EAAKpB,EAAGnf,EAAI,EAAG,KAAW,EAAJA,GAAU,GAEhC+2B,EAAI+B,EAAG2G,GACP1I,EAAI0I,EAAGA,GACPsvB,EAAMtvB,EAAG3G,EAAGvY,EAEf,CAED,SAASqrC,EAAWnsB,EAAGtgB,GACrB,IAAI2Z,EAAI,CAAC4yB,IAAMA,IAAMA,IAAMA,KAC3B6B,EAASz0B,EAAE,GAAI41B,GACfnB,EAASz0B,EAAE,GAAI61B,GACfpB,EAASz0B,EAAE,GAAI00B,GACfI,EAAE90B,EAAE,GAAI41B,EAAGC,GACXL,EAAW7uB,EAAG3G,EAAG3Z,EAClB,CAED,SAASouC,EAASp2B,EAAG1W,GACnB,IAAIzgB,EACJ,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IACjBm3B,EAAEn3B,GAAY,EAAPygB,EAAEzgB,EAEZ,CAmBD,SAASsvD,EAAS7B,GAChB,IAAIztD,EAAG61B,EAAGze,EAAI,EACd,IAAIpX,EAAI,EAAGA,EAAI,KAAMA,EACnB61B,EAAI43B,EAAEztD,GAAKoX,EAAI,MACfA,EAAIjd,KAAKC,MAAMy7B,EAAI,OACnB43B,EAAEztD,GAAK61B,EAAQ,MAAJze,EAEbq2C,EAAE,IAAMr2C,EAAI,EAAI,IAAMA,EAAI,EAC3B,CAED,SAAS43C,EAASvvB,EAAG3G,EAAGvY,GAEtB,IADA,IAAI+c,EAAGlmB,IAAMmJ,EAAI,GACTvgB,EAAI,EAAGA,EAAI,KAAMA,EACvBs9B,EAAIlmB,GAAKqoB,EAAEz/B,GAAK84B,EAAE94B,IAClBy/B,EAAEz/B,IAAMs9B,EACRxE,EAAE94B,IAAMs9B,CAEX,CAED,SAASouB,EAAGnW,GACV,IAAIv1C,EAAGm3B,EAAI,IAAI5K,aAAa,IAC5B,GAAGgpB,EACD,IAAIv1C,EAAI,EAAGA,EAAIu1C,EAAKr6C,SAAU8E,EAC5Bm3B,EAAEn3B,GAAKu1C,EAAKv1C,GAGhB,OAAOm3B,CACR,CAED,SAAS42B,EAAEN,EAAGhtC,EAAGF,GACf,IAAI,IAAIvgB,EAAI,EAAGA,EAAI,KAAMA,EACvBytD,EAAEztD,GAAKygB,EAAEzgB,GAAKugB,EAAEvgB,EAEnB,CAED,SAAS8tD,EAAEL,EAAGhtC,EAAGF,GACf,IAAI,IAAIvgB,EAAI,EAAGA,EAAI,KAAMA,EACvBytD,EAAEztD,GAAKygB,EAAEzgB,GAAKugB,EAAEvgB,EAEnB,CAED,SAAS2tD,EAAEF,EAAGhtC,GACZmtC,EAAEH,EAAGhtC,EAAGA,EACT,CAED,SAASmtC,EAAEH,EAAGhtC,EAAGF,GACf,IAAIsV,EAAGze,EACJs4C,EAAK,EAAIC,EAAK,EAAIC,EAAK,EAAIC,EAAK,EAAIC,EAAK,EAAIC,EAAK,EAAIC,EAAK,EAAIC,EAAK,EACpEC,EAAK,EAAIC,EAAK,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EACrEC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EACrEC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAC5DC,EAAKlxC,EAAE,GACPk/B,EAAKl/B,EAAE,GACP83B,EAAK93B,EAAE,GACPmxC,EAAKnxC,EAAE,GACPoxC,EAAKpxC,EAAE,GACPqxC,EAAKrxC,EAAE,GACPsxC,EAAKtxC,EAAE,GACPuxC,EAAKvxC,EAAE,GACPwxC,EAAKxxC,EAAE,GACPyxC,EAAKzxC,EAAE,GACP0xC,EAAM1xC,EAAE,IACR2xC,EAAM3xC,EAAE,IACR4xC,EAAM5xC,EAAE,IACR6xC,EAAM7xC,EAAE,IACR8xC,EAAM9xC,EAAE,IACR+xC,EAAM/xC,EAAE,IAGVmvC,IADA75B,EAAIpV,EAAE,IACIgxC,EACV9B,GAAM95B,EAAI4pB,EACVmQ,GAAM/5B,EAAIwiB,EACVwX,GAAMh6B,EAAI67B,EACV5B,GAAMj6B,EAAI87B,EACV5B,GAAMl6B,EAAI+7B,EACV5B,GAAMn6B,EAAIg8B,EACV5B,GAAMp6B,EAAIi8B,EACV5B,GAAMr6B,EAAIk8B,EACV5B,GAAMt6B,EAAIm8B,EACV5B,GAAOv6B,EAAIo8B,EACX5B,GAAOx6B,EAAIq8B,EACX5B,GAAOz6B,EAAIs8B,EACX5B,GAAO16B,EAAIu8B,EACX5B,GAAO36B,EAAIw8B,EACX5B,GAAO56B,EAAIy8B,EAEX3C,IADA95B,EAAIpV,EAAE,IACIgxC,EACV7B,GAAM/5B,EAAI4pB,EACVoQ,GAAMh6B,EAAIwiB,EACVyX,GAAMj6B,EAAI67B,EACV3B,GAAMl6B,EAAI87B,EACV3B,GAAMn6B,EAAI+7B,EACV3B,GAAMp6B,EAAIg8B,EACV3B,GAAMr6B,EAAIi8B,EACV3B,GAAMt6B,EAAIk8B,EACV3B,GAAOv6B,EAAIm8B,EACX3B,GAAOx6B,EAAIo8B,EACX3B,GAAOz6B,EAAIq8B,EACX3B,GAAO16B,EAAIs8B,EACX3B,GAAO36B,EAAIu8B,EACX3B,GAAO56B,EAAIw8B,EACX3B,GAAO76B,EAAIy8B,EAEX1C,IADA/5B,EAAIpV,EAAE,IACIgxC,EACV5B,GAAMh6B,EAAI4pB,EACVqQ,GAAMj6B,EAAIwiB,EACV0X,GAAMl6B,EAAI67B,EACV1B,GAAMn6B,EAAI87B,EACV1B,GAAMp6B,EAAI+7B,EACV1B,GAAMr6B,EAAIg8B,EACV1B,GAAMt6B,EAAIi8B,EACV1B,GAAOv6B,EAAIk8B,EACX1B,GAAOx6B,EAAIm8B,EACX1B,GAAOz6B,EAAIo8B,EACX1B,GAAO16B,EAAIq8B,EACX1B,GAAO36B,EAAIs8B,EACX1B,GAAO56B,EAAIu8B,EACX1B,GAAO76B,EAAIw8B,EACX1B,GAAO96B,EAAIy8B,EAEXzC,IADAh6B,EAAIpV,EAAE,IACIgxC,EACV3B,GAAMj6B,EAAI4pB,EACVsQ,GAAMl6B,EAAIwiB,EACV2X,GAAMn6B,EAAI67B,EACVzB,GAAMp6B,EAAI87B,EACVzB,GAAMr6B,EAAI+7B,EACVzB,GAAMt6B,EAAIg8B,EACVzB,GAAOv6B,EAAIi8B,EACXzB,GAAOx6B,EAAIk8B,EACXzB,GAAOz6B,EAAIm8B,EACXzB,GAAO16B,EAAIo8B,EACXzB,GAAO36B,EAAIq8B,EACXzB,GAAO56B,EAAIs8B,EACXzB,GAAO76B,EAAIu8B,EACXzB,GAAO96B,EAAIw8B,EACXzB,GAAO/6B,EAAIy8B,EAEXxC,IADAj6B,EAAIpV,EAAE,IACIgxC,EACV1B,GAAMl6B,EAAI4pB,EACVuQ,GAAMn6B,EAAIwiB,EACV4X,GAAMp6B,EAAI67B,EACVxB,GAAMr6B,EAAI87B,EACVxB,GAAMt6B,EAAI+7B,EACVxB,GAAOv6B,EAAIg8B,EACXxB,GAAOx6B,EAAIi8B,EACXxB,GAAOz6B,EAAIk8B,EACXxB,GAAO16B,EAAIm8B,EACXxB,GAAO36B,EAAIo8B,EACXxB,GAAO56B,EAAIq8B,EACXxB,GAAO76B,EAAIs8B,EACXxB,GAAO96B,EAAIu8B,EACXxB,GAAO/6B,EAAIw8B,EACXxB,GAAOh7B,EAAIy8B,EAEXvC,IADAl6B,EAAIpV,EAAE,IACIgxC,EACVzB,GAAMn6B,EAAI4pB,EACVwQ,GAAMp6B,EAAIwiB,EACV6X,GAAMr6B,EAAI67B,EACVvB,GAAMt6B,EAAI87B,EACVvB,GAAOv6B,EAAI+7B,EACXvB,GAAOx6B,EAAIg8B,EACXvB,GAAOz6B,EAAIi8B,EACXvB,GAAO16B,EAAIk8B,EACXvB,GAAO36B,EAAIm8B,EACXvB,GAAO56B,EAAIo8B,EACXvB,GAAO76B,EAAIq8B,EACXvB,GAAO96B,EAAIs8B,EACXvB,GAAO/6B,EAAIu8B,EACXvB,GAAOh7B,EAAIw8B,EACXvB,GAAOj7B,EAAIy8B,EAEXtC,IADAn6B,EAAIpV,EAAE,IACIgxC,EACVxB,GAAMp6B,EAAI4pB,EACVyQ,GAAMr6B,EAAIwiB,EACV8X,GAAMt6B,EAAI67B,EACVtB,GAAOv6B,EAAI87B,EACXtB,GAAOx6B,EAAI+7B,EACXtB,GAAOz6B,EAAIg8B,EACXtB,GAAO16B,EAAIi8B,EACXtB,GAAO36B,EAAIk8B,EACXtB,GAAO56B,EAAIm8B,EACXtB,GAAO76B,EAAIo8B,EACXtB,GAAO96B,EAAIq8B,EACXtB,GAAO/6B,EAAIs8B,EACXtB,GAAOh7B,EAAIu8B,EACXtB,GAAOj7B,EAAIw8B,EACXtB,GAAOl7B,EAAIy8B,EAEXrC,IADAp6B,EAAIpV,EAAE,IACIgxC,EACVvB,GAAMr6B,EAAI4pB,EACV0Q,GAAMt6B,EAAIwiB,EACV+X,GAAOv6B,EAAI67B,EACXrB,GAAOx6B,EAAI87B,EACXrB,GAAOz6B,EAAI+7B,EACXrB,GAAO16B,EAAIg8B,EACXrB,GAAO36B,EAAIi8B,EACXrB,GAAO56B,EAAIk8B,EACXrB,GAAO76B,EAAIm8B,EACXrB,GAAO96B,EAAIo8B,EACXrB,GAAO/6B,EAAIq8B,EACXrB,GAAOh7B,EAAIs8B,EACXrB,GAAOj7B,EAAIu8B,EACXrB,GAAOl7B,EAAIw8B,EACXrB,GAAOn7B,EAAIy8B,EAEXpC,IADAr6B,EAAIpV,EAAE,IACIgxC,EACVtB,GAAMt6B,EAAI4pB,EACV2Q,GAAOv6B,EAAIwiB,EACXgY,GAAOx6B,EAAI67B,EACXpB,GAAOz6B,EAAI87B,EACXpB,GAAO16B,EAAI+7B,EACXpB,GAAO36B,EAAIg8B,EACXpB,GAAO56B,EAAIi8B,EACXpB,GAAO76B,EAAIk8B,EACXpB,GAAO96B,EAAIm8B,EACXpB,GAAO/6B,EAAIo8B,EACXpB,GAAOh7B,EAAIq8B,EACXpB,GAAOj7B,EAAIs8B,EACXpB,GAAOl7B,EAAIu8B,EACXpB,GAAOn7B,EAAIw8B,EACXpB,GAAOp7B,EAAIy8B,EAEXnC,IADAt6B,EAAIpV,EAAE,IACIgxC,EACVrB,GAAOv6B,EAAI4pB,EACX4Q,GAAOx6B,EAAIwiB,EACXiY,GAAOz6B,EAAI67B,EACXnB,GAAO16B,EAAI87B,EACXnB,GAAO36B,EAAI+7B,EACXnB,GAAO56B,EAAIg8B,EACXnB,GAAO76B,EAAIi8B,EACXnB,GAAO96B,EAAIk8B,EACXnB,GAAO/6B,EAAIm8B,EACXnB,GAAOh7B,EAAIo8B,EACXnB,GAAOj7B,EAAIq8B,EACXnB,GAAOl7B,EAAIs8B,EACXnB,GAAOn7B,EAAIu8B,EACXnB,GAAOp7B,EAAIw8B,EACXnB,GAAOr7B,EAAIy8B,EAEXlC,IADAv6B,EAAIpV,EAAE,KACKgxC,EACXpB,GAAOx6B,EAAI4pB,EACX6Q,GAAOz6B,EAAIwiB,EACXkY,GAAO16B,EAAI67B,EACXlB,GAAO36B,EAAI87B,EACXlB,GAAO56B,EAAI+7B,EACXlB,GAAO76B,EAAIg8B,EACXlB,GAAO96B,EAAIi8B,EACXlB,GAAO/6B,EAAIk8B,EACXlB,GAAOh7B,EAAIm8B,EACXlB,GAAOj7B,EAAIo8B,EACXlB,GAAOl7B,EAAIq8B,EACXlB,GAAOn7B,EAAIs8B,EACXlB,GAAOp7B,EAAIu8B,EACXlB,GAAOr7B,EAAIw8B,EACXlB,GAAOt7B,EAAIy8B,EAEXjC,IADAx6B,EAAIpV,EAAE,KACKgxC,EACXnB,GAAOz6B,EAAI4pB,EACX8Q,GAAO16B,EAAIwiB,EACXmY,GAAO36B,EAAI67B,EACXjB,GAAO56B,EAAI87B,EACXjB,GAAO76B,EAAI+7B,EACXjB,GAAO96B,EAAIg8B,EACXjB,GAAO/6B,EAAIi8B,EACXjB,GAAOh7B,EAAIk8B,EACXjB,GAAOj7B,EAAIm8B,EACXjB,GAAOl7B,EAAIo8B,EACXjB,GAAOn7B,EAAIq8B,EACXjB,GAAOp7B,EAAIs8B,EACXjB,GAAOr7B,EAAIu8B,EACXjB,GAAOt7B,EAAIw8B,EACXjB,GAAOv7B,EAAIy8B,EAEXhC,IADAz6B,EAAIpV,EAAE,KACKgxC,EACXlB,GAAO16B,EAAI4pB,EACX+Q,GAAO36B,EAAIwiB,EACXoY,GAAO56B,EAAI67B,EACXhB,GAAO76B,EAAI87B,EACXhB,GAAO96B,EAAI+7B,EACXhB,GAAO/6B,EAAIg8B,EACXhB,GAAOh7B,EAAIi8B,EACXhB,GAAOj7B,EAAIk8B,EACXhB,GAAOl7B,EAAIm8B,EACXhB,GAAOn7B,EAAIo8B,EACXhB,GAAOp7B,EAAIq8B,EACXhB,GAAOr7B,EAAIs8B,EACXhB,GAAOt7B,EAAIu8B,EACXhB,GAAOv7B,EAAIw8B,EACXhB,GAAOx7B,EAAIy8B,EAEX/B,IADA16B,EAAIpV,EAAE,KACKgxC,EACXjB,GAAO36B,EAAI4pB,EACXgR,GAAO56B,EAAIwiB,EACXqY,GAAO76B,EAAI67B,EACXf,GAAO96B,EAAI87B,EACXf,GAAO/6B,EAAI+7B,EACXf,GAAOh7B,EAAIg8B,EACXf,GAAOj7B,EAAIi8B,EACXf,GAAOl7B,EAAIk8B,EACXf,GAAOn7B,EAAIm8B,EACXf,GAAOp7B,EAAIo8B,EACXf,GAAOr7B,EAAIq8B,EACXf,GAAOt7B,EAAIs8B,EACXf,GAAOv7B,EAAIu8B,EACXf,GAAOx7B,EAAIw8B,EACXf,GAAOz7B,EAAIy8B,EAEX9B,IADA36B,EAAIpV,EAAE,KACKgxC,EACXhB,GAAO56B,EAAI4pB,EACXiR,GAAO76B,EAAIwiB,EACXsY,GAAO96B,EAAI67B,EACXd,GAAO/6B,EAAI87B,EACXd,GAAOh7B,EAAI+7B,EACXd,GAAOj7B,EAAIg8B,EACXd,GAAOl7B,EAAIi8B,EACXd,GAAOn7B,EAAIk8B,EACXd,GAAOp7B,EAAIm8B,EACXd,GAAOr7B,EAAIo8B,EACXd,GAAOt7B,EAAIq8B,EACXd,GAAOv7B,EAAIs8B,EACXd,GAAOx7B,EAAIu8B,EACXd,GAAOz7B,EAAIw8B,EACXd,GAAO17B,EAAIy8B,EAEX7B,IADA56B,EAAIpV,EAAE,KACKgxC,EAkBX9B,GAAO,IAhBPgB,GAAO96B,EAAIwiB,GAiBXuX,GAAO,IAhBPgB,GAAO/6B,EAAI67B,GAiBX7B,GAAO,IAhBPgB,GAAOh7B,EAAI87B,GAiBX7B,GAAO,IAhBPgB,GAAOj7B,EAAI+7B,GAiBX7B,GAAO,IAhBPgB,GAAOl7B,EAAIg8B,GAiBX7B,GAAO,IAhBPgB,GAAOn7B,EAAIi8B,GAiBX7B,GAAO,IAhBPgB,GAAOp7B,EAAIk8B,GAiBX7B,GAAO,IAhBPgB,GAAOr7B,EAAIm8B,GAiBX7B,GAAO,IAhBPgB,GAAOt7B,EAAIo8B,GAiBX7B,GAAO,IAhBPgB,GAAOv7B,EAAIq8B,GAiBX7B,GAAO,IAhBPgB,GAAOx7B,EAAIs8B,GAiBX7B,GAAO,IAhBPgB,GAAOz7B,EAAIu8B,GAiBX7B,GAAO,IAhBPgB,GAAO17B,EAAIw8B,GAiBX7B,GAAO,IAhBPgB,GAAO37B,EAAIy8B,GAqBsC5C,GAAjD75B,GAnBA65B,GAAO,IAhBPgB,GAAO76B,EAAI4pB,KAkCXroC,EAAI,GACU,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACS85B,GAAjD95B,EAAK85B,EAAKv4C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACS+5B,GAAjD/5B,EAAK+5B,EAAKx4C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACSg6B,GAAjDh6B,EAAKg6B,EAAKz4C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACSi6B,GAAjDj6B,EAAKi6B,EAAK14C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACSk6B,GAAjDl6B,EAAKk6B,EAAK34C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACSm6B,GAAjDn6B,EAAKm6B,EAAK54C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACSo6B,GAAjDp6B,EAAKo6B,EAAK74C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACSq6B,GAAjDr6B,EAAKq6B,EAAK94C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACSs6B,GAAjDt6B,EAAKs6B,EAAK/4C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACQu6B,GAAhDv6B,EAAIu6B,EAAMh5C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACQw6B,GAAhDx6B,EAAIw6B,EAAMj5C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACQy6B,GAAhDz6B,EAAIy6B,EAAMl5C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACQ06B,GAAhD16B,EAAI06B,EAAMn5C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACQ26B,GAAhD36B,EAAI26B,EAAMp5C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACQ46B,GAAhD56B,EAAI46B,EAAMr5C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QAKS65B,GAAjD75B,GAJA65B,GAAMt4C,EAAE,EAAI,IAAMA,EAAE,KAGpBA,EAAI,GACU,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACS85B,GAAjD95B,EAAK85B,EAAKv4C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACS+5B,GAAjD/5B,EAAK+5B,EAAKx4C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACSg6B,GAAjDh6B,EAAKg6B,EAAKz4C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACSi6B,GAAjDj6B,EAAKi6B,EAAK14C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACSk6B,GAAjDl6B,EAAKk6B,EAAK34C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACSm6B,GAAjDn6B,EAAKm6B,EAAK54C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACSo6B,GAAjDp6B,EAAKo6B,EAAK74C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACSq6B,GAAjDr6B,EAAKq6B,EAAK94C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACSs6B,GAAjDt6B,EAAKs6B,EAAK/4C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACQu6B,GAAhDv6B,EAAIu6B,EAAMh5C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACQw6B,GAAhDx6B,EAAIw6B,EAAMj5C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACQy6B,GAAhDz6B,EAAIy6B,EAAMl5C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACQ06B,GAAhD16B,EAAI06B,EAAMn5C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACQ26B,GAAhD36B,EAAI26B,EAAMp5C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACQ46B,GAAhD56B,EAAI46B,EAAMr5C,EAAI,OAAgD,OAAzCA,EAAIjd,KAAKC,MAAMy7B,EAAI,QACxC65B,GAAMt4C,EAAE,EAAI,IAAMA,EAAE,GAEpBq2C,EAAG,GAAKiC,EACRjC,EAAG,GAAKkC,EACRlC,EAAG,GAAKmC,EACRnC,EAAG,GAAKoC,EACRpC,EAAG,GAAKqC,EACRrC,EAAG,GAAKsC,EACRtC,EAAG,GAAKuC,EACRvC,EAAG,GAAKwC,EACRxC,EAAG,GAAKyC,EACRzC,EAAG,GAAK0C,EACR1C,EAAE,IAAM2C,EACR3C,EAAE,IAAM4C,EACR5C,EAAE,IAAM6C,EACR7C,EAAE,IAAM8C,EACR9C,EAAE,IAAM+C,EACR/C,EAAE,IAAMgD,CACT,aCxiCD7lC,EAAOiE,QAAU,CAEfne,QAAS,CACP6hD,mBAAmB,qBCDvB,IAAI5d,EAAQrqB,EAAQ,OACpBA,EAAQ,OACRA,EAAQ,QAGGM,EAAOiE,QAAU8lB,EAAM0G,KAAO1G,EAAM0G,MAAQ,CAAC,GAOnD59C,OAAS,WAEZ,IAAI+0D,EAAO,KAGPC,EAAM,KAGNC,EAAY,KAGZC,EAAY,KAGZC,EAAM,CAUVA,MAAY,SAAS7H,EAAI/mD,GACvB,GAAU,OAAP+mD,EACD,GAAiB,iBAAPA,EAAiB,CAGzB,MADAA,EAAKA,EAAGrlC,iBACCivB,EAAMoW,GAAGxG,YAGhB,MAAM,IAAIpmD,MAAM,2BAA6B4sD,EAAK,KAFlD0H,EAAM9d,EAAMoW,GAAGxG,WAAWwG,GAAIttD,QAIjC,MAECg1D,EAAM1H,EAIV,GAAW,OAAR/mD,EAEDA,EAAMwuD,MACD,CACL,GAAkB,iBAARxuD,EAERA,EAAM2wC,EAAMqB,KAAKC,aAAajyC,QACzB,GAAG2wC,EAAMqB,KAAK7yC,QAAQa,GAAM,CAEjC,IAAIw7B,EAAMx7B,EACVA,EAAM2wC,EAAMqB,KAAKC,eACjB,IAAI,IAAIj2C,EAAI,EAAGA,EAAIw/B,EAAItkC,SAAU8E,EAC/BgE,EAAIkyC,QAAQ1W,EAAIx/B,GAEnB,CAGD,IAAI6yD,EAAS7uD,EAAI9I,SACd23D,EAASJ,EAAIK,cACdL,EAAIpvC,QACJovC,EAAIxtB,OAAOjhC,EAAI7H,SACf6H,EAAMyuD,EAAInX,UAMZoX,EAAY/d,EAAMqB,KAAKC,eACvB0c,EAAYhe,EAAMqB,KAAKC,eACvB4c,EAAS7uD,EAAI9I,SACb,IAAQ8E,EAAI,EAAGA,EAAI6yD,IAAU7yD,EAAG,CAC1Bw/B,EAAMx7B,EAAIg3C,GAAGh7C,GACjB0yD,EAAUxc,QAAQ,GAAO1W,GACzBmzB,EAAUzc,QAAQ,GAAO1W,EAC1B,CAGD,GAAGqzB,EAASJ,EAAIK,YAEd,IADItzB,EAAMizB,EAAIK,YAAcD,EACpB7yD,EAAI,EAAGA,EAAIw/B,IAAOx/B,EACxB0yD,EAAUxc,QAAQ,IAClByc,EAAUzc,QAAQ,IAGtBsc,EAAOxuD,EACP0uD,EAAYA,EAAUv2D,QACtBw2D,EAAYA,EAAUx2D,OACvB,CAMDs2D,EAAIpvC,QACJovC,EAAIxtB,OAAOytB,EACZ,EAODE,OAAa,SAASz2D,GACpBs2D,EAAIxtB,OAAO9oC,EACZ,EAODy2D,OAAa,WAGX,IAAIG,EAAQN,EAAInX,SAASn/C,QAIzB,OAHAs2D,EAAIpvC,QACJovC,EAAIxtB,OAAO0tB,GACXF,EAAIxtB,OAAO8tB,GACJN,EAAInX,QACZ,GAID,OAFAsX,EAAItX,OAASsX,EAAII,OAEVJ,CACR,mBC1IDhoC,EAAOiE,QAAU,EAAjBjE,OACAN,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,MACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,MACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,wBCgBR,IAKI2oC,EALAte,EAAQrqB,EAAQ,OAEpBM,EAAOiE,QAAU8lB,EAAM+V,KAAO/V,EAAM+V,MAAQ,CAAC,EAU7C,SAASv0B,EAAW1V,EAAEF,EAAEnJ,GACtBlL,KAAK9O,KAAO,GACJ,MAALqjB,IACE,iBAAmBA,EAAGvU,KAAKgnD,WAAWzyC,EAAEF,EAAEnJ,GAChC,MAALmJ,GAAa,iBAAmBE,EAAGvU,KAAK83B,WAAWvjB,EAAE,KACxDvU,KAAK83B,WAAWvjB,EAAEF,GAC1B,CAID,SAAS4yC,IAAQ,OAAO,IAAIh9B,EAAW,KAAQ,CAmC/C,SAASi9B,EAAIpzD,EAAEkuB,EAAEka,EAAE9iC,EAAE8R,EAAEqf,GAErB,IADA,IAAI48B,EAAO,MAAFnlC,EAAUolC,EAAKplC,GAAG,KACnBuI,GAAK,GAAG,CACd,IAAIe,EAAiB,MAAbtrB,KAAK9O,KAAK4C,GACd8nD,EAAI57C,KAAK9O,KAAK4C,MAAM,GACpB0mB,EAAI4sC,EAAG97B,EAAEswB,EAAEuL,EAEfj8C,IADAogB,EAAI67B,EAAG77B,IAAM,MAAF9Q,IAAW,IAAI0hB,EAAEhrC,KAAKkI,GAAG8R,IAC5B,KAAKsP,GAAG,IAAI4sC,EAAGxL,EACvB1f,EAAEhrC,KAAKkI,KAAS,UAAFkyB,CACf,CACD,OAAOpgB,CACR,CAjDDu9B,EAAM+V,KAAKv0B,WAAaA,EAoDC,oBAAfo9B,WAEPp9B,EAAWx4B,UAAU61D,GAAKJ,EAC1BH,EAAQ,IAC6B,+BAArBM,UAAUE,SAC3Bt9B,EAAWx4B,UAAU61D,GAjCvB,SAAaxzD,EAAEkuB,EAAEka,EAAE9iC,EAAE8R,EAAEqf,GAErB,IADA,IAAI48B,EAAO,MAAFnlC,EAAUolC,EAAKplC,GAAG,KACnBuI,GAAK,GAAG,CACd,IAAIe,EAAiB,MAAbtrB,KAAK9O,KAAK4C,GACd8nD,EAAI57C,KAAK9O,KAAK4C,MAAM,GACpB0mB,EAAI4sC,EAAG97B,EAAEswB,EAAEuL,EAEfj8C,IADAogB,EAAI67B,EAAG77B,IAAM,MAAF9Q,IAAW,IAAI0hB,EAAEhrC,KAAKkI,IAAM,WAAF8R,MAC5B,KAAKsP,IAAI,IAAI4sC,EAAGxL,GAAG1wC,IAAI,IAChCgxB,EAAEhrC,KAAKkI,KAAS,WAAFkyB,CACf,CACD,OAAOpgB,CACR,EAuBC67C,EAAQ,IAC8B,YAArBM,UAAUE,SAC3Bt9B,EAAWx4B,UAAU61D,GA/CvB,SAAaxzD,EAAEkuB,EAAEka,EAAE9iC,EAAE8R,EAAEqf,GACrB,OAAQA,GAAK,GAAG,CACd,IAAIZ,EAAI3H,EAAEhiB,KAAK9O,KAAK4C,KAAKooC,EAAEhrC,KAAKkI,GAAG8R,EACnCA,EAAIjd,KAAKC,MAAMy7B,EAAE,UACjBuS,EAAEhrC,KAAKkI,KAAS,SAAFuwB,CACf,CACD,OAAOze,CACR,EAyCC67C,EAAQ,KAER98B,EAAWx4B,UAAU61D,GAAKJ,EAC1BH,EAAQ,IAGV98B,EAAWx4B,UAAU+1D,GAAKT,EAC1B98B,EAAWx4B,UAAUg2D,IAAO,GAAGV,GAAO,EACtC98B,EAAWx4B,UAAUi2D,GAAM,GAAGX,EAG9B98B,EAAWx4B,UAAUk2D,GAAK15D,KAAKshC,IAAI,EADvB,IAEZtF,EAAWx4B,UAAUm2D,GAFT,GAEoBb,EAChC98B,EAAWx4B,UAAUo2D,GAAK,EAAEd,EAHhB,GAMZ,IAEIe,EAAGC,EADHC,EAAQ,IAAIhxD,MAGhB,IADA8wD,EAAK,IAAI34D,WAAW,GAChB44D,EAAK,EAAGA,GAAM,IAAKA,EAAIC,EAAMF,KAAQC,EAEzC,IADAD,EAAK,IAAI34D,WAAW,GAChB44D,EAAK,GAAIA,EAAK,KAAMA,EAAIC,EAAMF,KAAQC,EAE1C,IADAD,EAAK,IAAI34D,WAAW,GAChB44D,EAAK,GAAIA,EAAK,KAAMA,EAAIC,EAAMF,KAAQC,EAE1C,SAASE,EAAS19B,GAAK,MAVX,uCAUwB+O,OAAO/O,EAAK,CAChD,SAAS29B,EAAMj1C,EAAEnf,GACf,IAAIoX,EAAI88C,EAAM/0C,EAAE9jB,WAAW2E,IAC3B,OAAW,MAAHoX,GAAU,EAAEA,CACrB,CAmBD,SAASi9C,EAAIr0D,GAAK,IAAIm3B,EAAIg8B,IAAqB,OAAdh8B,EAAEm9B,QAAQt0D,GAAWm3B,CAAI,CA6F1D,SAASo9B,EAAMrmC,GACb,IAAWoP,EAAPnG,EAAI,EAMR,OALiB,IAAbmG,EAAEpP,IAAI,MAAYA,EAAIoP,EAAGnG,GAAK,IACnB,IAAXmG,EAAEpP,GAAG,KAAWA,EAAIoP,EAAGnG,GAAK,GACjB,IAAXmG,EAAEpP,GAAG,KAAWA,EAAIoP,EAAGnG,GAAK,GACjB,IAAXmG,EAAEpP,GAAG,KAAWA,EAAIoP,EAAGnG,GAAK,GACjB,IAAXmG,EAAEpP,GAAG,KAAWA,EAAIoP,EAAGnG,GAAK,GACzBA,CACR,CAkLD,SAASq9B,EAAQ9tC,GAAKxa,KAAKwa,EAAIA,CAAI,CA0CnC,SAAS+tC,EAAW/tC,GAClBxa,KAAKwa,EAAIA,EACTxa,KAAKwoD,GAAKhuC,EAAEiuC,WACZzoD,KAAK0oD,IAAc,MAAR1oD,KAAKwoD,GAChBxoD,KAAK2oD,IAAM3oD,KAAKwoD,IAAI,GACpBxoD,KAAK4oD,IAAM,GAAIpuC,EAAEgtC,GAAG,IAAK,EACzBxnD,KAAK6oD,IAAM,EAAEruC,EAAE4W,CAChB,CAgQD,SAAS03B,EAAO9mC,EAAEmK,GAAK,OAAOnK,EAAEmK,CAAI,CAIpC,SAAS48B,EAAM/mC,EAAEmK,GAAK,OAAOnK,EAAEmK,CAAI,CAInC,SAAS68B,EAAOhnC,EAAEmK,GAAK,OAAOnK,EAAEmK,CAAI,CAIpC,SAAS88B,EAAUjnC,EAAEmK,GAAK,OAAOnK,GAAGmK,CAAI,CA2BxC,SAAS+8B,EAAKlnC,GACd,GAAQ,GAALA,EAAQ,OAAQ,EACnB,IAAIiJ,EAAI,EAMR,OALiB,IAAX,MAAFjJ,KAAkBA,IAAM,GAAIiJ,GAAK,IACtB,IAAT,IAAFjJ,KAAgBA,IAAM,EAAGiJ,GAAK,GACpB,IAAR,GAAFjJ,KAAeA,IAAM,EAAGiJ,GAAK,GACrB,IAAN,EAAFjJ,KAAaA,IAAM,EAAGiJ,GAAK,GACnB,IAAN,EAAFjJ,MAAaiJ,EACVA,CACN,CAWD,SAASk+B,EAAKnnC,GAEd,IADA,IAAIiJ,EAAI,EACG,GAALjJ,GAAUA,GAAKA,EAAE,IAAKiJ,EAC5B,OAAOA,CACN,CA0GD,SAASm+B,IAAY,CACrB,SAASC,EAAKrnC,GAAK,OAAOA,CAAI,CAuC9B,SAASsnC,EAAQ9uC,GAEjBxa,KAAKupD,GAAKtC,IACVjnD,KAAKwpD,GAAKvC,IACVh9B,EAAWw/B,IAAIC,UAAU,EAAElvC,EAAE4W,EAAEpxB,KAAKupD,IACpCvpD,KAAK2pD,GAAK3pD,KAAKupD,GAAG76B,OAAOlU,GACzBxa,KAAKwa,EAAIA,CACR,CA/fD8tC,EAAQ72D,UAAUm4D,QATlB,SAAkB5nC,GAChB,OAAGA,EAAE/O,EAAI,GAAK+O,EAAEmO,UAAUnwB,KAAKwa,IAAM,EAAUwH,EAAE+L,IAAI/tB,KAAKwa,GAC9CwH,CACb,EAODsmC,EAAQ72D,UAAUo4D,OANlB,SAAiB7nC,GAAK,OAAOA,CAAI,EAOjCsmC,EAAQ72D,UAAU6iB,OANlB,SAAiB0N,GAAKA,EAAE8nC,SAAS9pD,KAAKwa,EAAE,KAAKwH,EAAK,EAOlDsmC,EAAQ72D,UAAUs4D,MANlB,SAAgB/nC,EAAEmK,EAAElB,GAAKjJ,EAAEgoC,WAAW79B,EAAElB,GAAIjrB,KAAKsU,OAAO2W,EAAK,EAO7Dq9B,EAAQ72D,UAAUw4D,MANlB,SAAgBjoC,EAAEiJ,GAAKjJ,EAAEkoC,SAASj/B,GAAIjrB,KAAKsU,OAAO2W,EAAK,EAqFvDs9B,EAAW92D,UAAUm4D,QAzCrB,SAAqB5nC,GACnB,IAAIiJ,EAAIg8B,IAIR,OAHAjlC,EAAErpB,MAAM+wD,UAAU1pD,KAAKwa,EAAE4W,EAAEnG,GAC3BA,EAAE6+B,SAAS9pD,KAAKwa,EAAE,KAAKyQ,GACpBjJ,EAAE/O,EAAI,GAAKgY,EAAEkF,UAAUlG,EAAWkgC,MAAQ,GAAGnqD,KAAKwa,EAAE4vC,MAAMn/B,EAAEA,GACxDA,CACR,EAoCDs9B,EAAW92D,UAAUo4D,OAjCrB,SAAoB7nC,GAClB,IAAIiJ,EAAIg8B,IAGR,OAFAjlC,EAAEqoC,OAAOp/B,GACTjrB,KAAKsU,OAAO2W,GACLA,CACR,EA6BDs9B,EAAW92D,UAAU6iB,OA1BrB,SAAoB0N,GAClB,KAAMA,EAAEoP,GAAKpxB,KAAK6oD,KAChB7mC,EAAE9wB,KAAK8wB,EAAEoP,KAAO,EAClB,IAAI,IAAIt9B,EAAI,EAAGA,EAAIkM,KAAKwa,EAAE4W,IAAKt9B,EAAG,CAEhC,IAAIsF,EAAc,MAAV4oB,EAAE9wB,KAAK4C,GACXqwB,EAAM/qB,EAAE4G,KAAK0oD,MAAOtvD,EAAE4G,KAAK2oD,KAAK3mC,EAAE9wB,KAAK4C,IAAI,IAAIkM,KAAK0oD,IAAK1oD,KAAK4oD,KAAK,IAAK5mC,EAAEylC,GAK9E,IAHAruD,EAAItF,EAAEkM,KAAKwa,EAAE4W,EACbpP,EAAE9wB,KAAKkI,IAAM4G,KAAKwa,EAAE8sC,GAAG,EAAEnjC,EAAGnC,EAAEluB,EAAE,EAAEkM,KAAKwa,EAAE4W,GAEnCpP,EAAE9wB,KAAKkI,IAAM4oB,EAAE0lC,IAAM1lC,EAAE9wB,KAAKkI,IAAM4oB,EAAE0lC,GAAI1lC,EAAE9wB,OAAOkI,IACxD,CACD4oB,EAAEsoC,QACFtoC,EAAEuoC,UAAUvqD,KAAKwa,EAAE4W,EAAEpP,GAClBA,EAAEmO,UAAUnwB,KAAKwa,IAAM,GAAGwH,EAAEooC,MAAMpqD,KAAKwa,EAAEwH,EAC7C,EAWDumC,EAAW92D,UAAUs4D,MALrB,SAAmB/nC,EAAEmK,EAAElB,GAAKjJ,EAAEgoC,WAAW79B,EAAElB,GAAIjrB,KAAKsU,OAAO2W,EAAK,EAMhEs9B,EAAW92D,UAAUw4D,MATrB,SAAmBjoC,EAAEiJ,GAAKjJ,EAAEkoC,SAASj/B,GAAIjrB,KAAKsU,OAAO2W,EAAK,EAmC1DhB,EAAWx4B,UAAU44D,OAlarB,SAAmBp/B,GACjB,IAAI,IAAIn3B,EAAIkM,KAAKoxB,EAAE,EAAGt9B,GAAK,IAAKA,EAAGm3B,EAAE/5B,KAAK4C,GAAKkM,KAAK9O,KAAK4C,GACzDm3B,EAAEmG,EAAIpxB,KAAKoxB,EACXnG,EAAEhY,EAAIjT,KAAKiT,CACZ,EA+ZDgX,EAAWx4B,UAAU22D,QA5ZrB,SAAoBpmC,GAClBhiB,KAAKoxB,EAAI,EACTpxB,KAAKiT,EAAK+O,EAAE,GAAI,EAAE,EACfA,EAAI,EAAGhiB,KAAK9O,KAAK,GAAK8wB,EACjBA,GAAK,EAAGhiB,KAAK9O,KAAK,GAAK8wB,EAAEhiB,KAAK0nD,GACjC1nD,KAAKoxB,EAAI,CACf,EAuZDnH,EAAWx4B,UAAUqmC,WAjZrB,SAAuB7kB,EAAEoB,GACvB,IAAIqmB,EACJ,GAAQ,IAALrmB,EAASqmB,EAAI,OACX,GAAQ,GAALrmB,EAAQqmB,EAAI,OACf,GAAQ,KAALrmB,EAAUqmB,EAAI,OACjB,GAAQ,GAALrmB,EAAQqmB,EAAI,OACf,GAAQ,IAALrmB,EAASqmB,EAAI,MAChB,IAAQ,GAALrmB,EACoB,YAArBrU,KAAKwqD,UAAUv3C,EAAEoB,GADRqmB,EAAI,CACiB,CACrC16B,KAAKoxB,EAAI,EACTpxB,KAAKiT,EAAI,EAET,IADA,IAAInf,EAAImf,EAAEjkB,OAAQy7D,GAAK,EAAOC,EAAK,IAC3B52D,GAAK,GAAG,CACd,IAAIkuB,EAAQ,GAAH0Y,EAAW,IAALznB,EAAEnf,GAAQo0D,EAAMj1C,EAAEnf,GAC9BkuB,EAAI,EACa,KAAf/O,EAAEqmB,OAAOxlC,KAAW22D,GAAK,IAG9BA,GAAK,EACI,GAANC,EACD1qD,KAAK9O,KAAK8O,KAAKoxB,KAAOpP,EAChB0oC,EAAGhwB,EAAI16B,KAAKwnD,IAClBxnD,KAAK9O,KAAK8O,KAAKoxB,EAAE,KAAOpP,GAAI,GAAIhiB,KAAKwnD,GAAGkD,GAAK,IAAKA,EAClD1qD,KAAK9O,KAAK8O,KAAKoxB,KAAQpP,GAAIhiB,KAAKwnD,GAAGkD,GAEnC1qD,KAAK9O,KAAK8O,KAAKoxB,EAAE,IAAMpP,GAAG0oC,GAC5BA,GAAMhwB,IACG16B,KAAKwnD,KAAIkD,GAAM1qD,KAAKwnD,IAC9B,CACO,GAAL9sB,GAAyB,IAAT,IAALznB,EAAE,MACdjT,KAAKiT,GAAK,EACPy3C,EAAK,IAAG1qD,KAAK9O,KAAK8O,KAAKoxB,EAAE,KAAQ,GAAIpxB,KAAKwnD,GAAGkD,GAAK,GAAIA,IAE3D1qD,KAAKsqD,QACFG,GAAIxgC,EAAWkgC,KAAKC,MAAMpqD,KAAKA,KACnC,EA+WDiqB,EAAWx4B,UAAU64D,MA5WrB,WAEE,IADA,IAAIp/C,EAAIlL,KAAKiT,EAAEjT,KAAKynD,GACdznD,KAAKoxB,EAAI,GAAKpxB,KAAK9O,KAAK8O,KAAKoxB,EAAE,IAAMlmB,KAAKlL,KAAKoxB,CACtD,EA0WDnH,EAAWx4B,UAAUi4D,UAxSrB,SAAsBn/B,EAAEU,GACtB,IAAIn3B,EACJ,IAAIA,EAAIkM,KAAKoxB,EAAE,EAAGt9B,GAAK,IAAKA,EAAGm3B,EAAE/5B,KAAK4C,EAAEy2B,GAAKvqB,KAAK9O,KAAK4C,GACvD,IAAIA,EAAIy2B,EAAE,EAAGz2B,GAAK,IAAKA,EAAGm3B,EAAE/5B,KAAK4C,GAAK,EACtCm3B,EAAEmG,EAAIpxB,KAAKoxB,EAAE7G,EACbU,EAAEhY,EAAIjT,KAAKiT,CACZ,EAmSDgX,EAAWx4B,UAAU84D,UAhSrB,SAAsBhgC,EAAEU,GACtB,IAAI,IAAIn3B,EAAIy2B,EAAGz2B,EAAIkM,KAAKoxB,IAAKt9B,EAAGm3B,EAAE/5B,KAAK4C,EAAEy2B,GAAKvqB,KAAK9O,KAAK4C,GACxDm3B,EAAEmG,EAAInjC,KAAKq0B,IAAItiB,KAAKoxB,EAAE7G,EAAE,GACxBU,EAAEhY,EAAIjT,KAAKiT,CACZ,EA6RDgX,EAAWx4B,UAAUk5D,SA1RrB,SAAqBpgC,EAAEU,GACrB,IAG0Dn3B,EAHtD82D,EAAKrgC,EAAEvqB,KAAKwnD,GACZqD,EAAM7qD,KAAKwnD,GAAGoD,EACdE,GAAM,GAAGD,GAAK,EACdE,EAAK98D,KAAKC,MAAMq8B,EAAEvqB,KAAKwnD,IAAKt8C,EAAKlL,KAAKiT,GAAG23C,EAAI5qD,KAAKynD,GACtD,IAAI3zD,EAAIkM,KAAKoxB,EAAE,EAAGt9B,GAAK,IAAKA,EAC1Bm3B,EAAE/5B,KAAK4C,EAAEi3D,EAAG,GAAM/qD,KAAK9O,KAAK4C,IAAI+2D,EAAK3/C,EACrCA,GAAKlL,KAAK9O,KAAK4C,GAAGg3D,IAAKF,EAEzB,IAAI92D,EAAIi3D,EAAG,EAAGj3D,GAAK,IAAKA,EAAGm3B,EAAE/5B,KAAK4C,GAAK,EACvCm3B,EAAE/5B,KAAK65D,GAAM7/C,EACb+f,EAAEmG,EAAIpxB,KAAKoxB,EAAE25B,EAAG,EAChB9/B,EAAEhY,EAAIjT,KAAKiT,EACXgY,EAAEq/B,OACH,EA6QDrgC,EAAWx4B,UAAUu5D,SA1QrB,SAAqBzgC,EAAEU,GACrBA,EAAEhY,EAAIjT,KAAKiT,EACX,IAAI83C,EAAK98D,KAAKC,MAAMq8B,EAAEvqB,KAAKwnD,IAC3B,GAAGuD,GAAM/qD,KAAKoxB,EAAKnG,EAAEmG,EAAI,MAAzB,CACA,IAAIw5B,EAAKrgC,EAAEvqB,KAAKwnD,GACZqD,EAAM7qD,KAAKwnD,GAAGoD,EACdE,GAAM,GAAGF,GAAI,EACjB3/B,EAAE/5B,KAAK,GAAK8O,KAAK9O,KAAK65D,IAAKH,EAC3B,IAAI,IAAI92D,EAAIi3D,EAAG,EAAGj3D,EAAIkM,KAAKoxB,IAAKt9B,EAC9Bm3B,EAAE/5B,KAAK4C,EAAEi3D,EAAG,KAAO/qD,KAAK9O,KAAK4C,GAAGg3D,IAAKD,EACrC5/B,EAAE/5B,KAAK4C,EAAEi3D,GAAM/qD,KAAK9O,KAAK4C,IAAI82D,EAE5BA,EAAK,IAAG3/B,EAAE/5B,KAAK8O,KAAKoxB,EAAE25B,EAAG,KAAO/qD,KAAKiT,EAAE63C,IAAKD,GAC/C5/B,EAAEmG,EAAIpxB,KAAKoxB,EAAE25B,EACb9/B,EAAEq/B,OAXmC,CAYtC,EA4PDrgC,EAAWx4B,UAAU24D,MAzPrB,SAAkB71C,EAAE0W,GAElB,IADA,IAAIn3B,EAAI,EAAGoX,EAAI,EAAGsP,EAAIvsB,KAAKoR,IAAIkV,EAAE6c,EAAEpxB,KAAKoxB,GAClCt9B,EAAI0mB,GACRtP,GAAKlL,KAAK9O,KAAK4C,GAAGygB,EAAErjB,KAAK4C,GACzBm3B,EAAE/5B,KAAK4C,KAAOoX,EAAElL,KAAKynD,GACrBv8C,IAAMlL,KAAKwnD,GAEb,GAAGjzC,EAAE6c,EAAIpxB,KAAKoxB,EAAG,CAEf,IADAlmB,GAAKqJ,EAAEtB,EACDnf,EAAIkM,KAAKoxB,GACblmB,GAAKlL,KAAK9O,KAAK4C,GACfm3B,EAAE/5B,KAAK4C,KAAOoX,EAAElL,KAAKynD,GACrBv8C,IAAMlL,KAAKwnD,GAEbt8C,GAAKlL,KAAKiT,CACX,KAAM,CAEL,IADA/H,GAAKlL,KAAKiT,EACJnf,EAAIygB,EAAE6c,GACVlmB,GAAKqJ,EAAErjB,KAAK4C,GACZm3B,EAAE/5B,KAAK4C,KAAOoX,EAAElL,KAAKynD,GACrBv8C,IAAMlL,KAAKwnD,GAEbt8C,GAAKqJ,EAAEtB,CACR,CACDgY,EAAEhY,EAAK/H,EAAE,GAAI,EAAE,EACZA,GAAK,EAAG+f,EAAE/5B,KAAK4C,KAAOkM,KAAK0nD,GAAGx8C,EACzBA,EAAI,IAAG+f,EAAE/5B,KAAK4C,KAAOoX,GAC7B+f,EAAEmG,EAAIt9B,EACNm3B,EAAEq/B,OACH,EA6NDrgC,EAAWx4B,UAAUu4D,WAzNrB,SAAuBz1C,EAAE0W,GACvB,IAAIjJ,EAAIhiB,KAAKrH,MAAOwzB,EAAI5X,EAAE5b,MACtB7E,EAAIkuB,EAAEoP,EAEV,IADAnG,EAAEmG,EAAIt9B,EAAEq4B,EAAEiF,IACFt9B,GAAK,GAAGm3B,EAAE/5B,KAAK4C,GAAK,EAC5B,IAAIA,EAAI,EAAGA,EAAIq4B,EAAEiF,IAAKt9B,EAAGm3B,EAAE/5B,KAAK4C,EAAEkuB,EAAEoP,GAAKpP,EAAEslC,GAAG,EAAEn7B,EAAEj7B,KAAK4C,GAAGm3B,EAAEn3B,EAAE,EAAEkuB,EAAEoP,GAClEnG,EAAEhY,EAAI,EACNgY,EAAEq/B,QACCtqD,KAAKiT,GAAKsB,EAAEtB,GAAGgX,EAAWkgC,KAAKC,MAAMn/B,EAAEA,EAC3C,EAiNDhB,EAAWx4B,UAAUy4D,SA9MrB,SAAqBj/B,GAGnB,IAFA,IAAIjJ,EAAIhiB,KAAKrH,MACT7E,EAAIm3B,EAAEmG,EAAI,EAAEpP,EAAEoP,IACVt9B,GAAK,GAAGm3B,EAAE/5B,KAAK4C,GAAK,EAC5B,IAAIA,EAAI,EAAGA,EAAIkuB,EAAEoP,EAAE,IAAKt9B,EAAG,CACzB,IAAIoX,EAAI8W,EAAEslC,GAAGxzD,EAAEkuB,EAAE9wB,KAAK4C,GAAGm3B,EAAE,EAAEn3B,EAAE,EAAE,IAC7Bm3B,EAAE/5B,KAAK4C,EAAEkuB,EAAEoP,IAAIpP,EAAEslC,GAAGxzD,EAAE,EAAE,EAAEkuB,EAAE9wB,KAAK4C,GAAGm3B,EAAE,EAAEn3B,EAAE,EAAEoX,EAAE8W,EAAEoP,EAAEt9B,EAAE,KAAOkuB,EAAE0lC,KAC/Dz8B,EAAE/5B,KAAK4C,EAAEkuB,EAAEoP,IAAMpP,EAAE0lC,GACnBz8B,EAAE/5B,KAAK4C,EAAEkuB,EAAEoP,EAAE,GAAK,EAErB,CACEnG,EAAEmG,EAAI,IAAGnG,EAAE/5B,KAAK+5B,EAAEmG,EAAE,IAAMpP,EAAEslC,GAAGxzD,EAAEkuB,EAAE9wB,KAAK4C,GAAGm3B,EAAE,EAAEn3B,EAAE,EAAE,IACtDm3B,EAAEhY,EAAI,EACNgY,EAAEq/B,OACH,EAiMDrgC,EAAWx4B,UAAUq4D,SA7LrB,SAAqBtvC,EAAEoS,EAAE3B,GACvB,IAAIggC,EAAKzwC,EAAE7hB,MACX,KAAGsyD,EAAG75B,GAAK,GAAX,CACA,IAAI85B,EAAKlrD,KAAKrH,MACd,GAAGuyD,EAAG95B,EAAI65B,EAAG75B,EAGX,OAFQ,MAALxE,GAAWA,EAAEw7B,QAAQ,QAChB,MAALn9B,GAAWjrB,KAAKqqD,OAAOp/B,IAGpB,MAALA,IAAWA,EAAIg8B,KAClB,IAAI96B,EAAI86B,IAAOkE,EAAKnrD,KAAKiT,EAAGm4C,EAAK5wC,EAAEvH,EAC/Bo4C,EAAMrrD,KAAKwnD,GAAGa,EAAM4C,EAAG/5D,KAAK+5D,EAAG75B,EAAE,IAClCi6B,EAAM,GAAKJ,EAAGN,SAASU,EAAIl/B,GAAI++B,EAAGP,SAASU,EAAIpgC,KAAaggC,EAAGZ,OAAOl+B,GAAI++B,EAAGb,OAAOp/B,IACvF,IAAIqgC,EAAKn/B,EAAEiF,EACPm6B,EAAKp/B,EAAEj7B,KAAKo6D,EAAG,GACnB,GAAS,GAANC,EAAH,CACA,IAAIC,EAAKD,GAAI,GAAGvrD,KAAK4nD,KAAM0D,EAAG,EAAGn/B,EAAEj7B,KAAKo6D,EAAG,IAAItrD,KAAK6nD,GAAG,GACnD4D,EAAKzrD,KAAK2nD,GAAG6D,EAAIE,GAAM,GAAG1rD,KAAK4nD,IAAI4D,EAAIrxD,EAAI,GAAG6F,KAAK6nD,GACnD/zD,EAAIm3B,EAAEmG,EAAGh4B,EAAItF,EAAEw3D,EAAIl6B,EAAQ,MAAHxE,EAASq6B,IAAMr6B,EAQ3C,IAPAT,EAAEu9B,UAAUtwD,EAAEg4B,GACXnG,EAAEkF,UAAUiB,IAAM,IACnBnG,EAAE/5B,KAAK+5B,EAAEmG,KAAO,EAChBnG,EAAEm/B,MAAMh5B,EAAEnG,IAEZhB,EAAWw/B,IAAIC,UAAU4B,EAAGl6B,GAC5BA,EAAEg5B,MAAMj+B,EAAEA,GACJA,EAAEiF,EAAIk6B,GAAIn/B,EAAEj7B,KAAKi7B,EAAEiF,KAAO,EAChC,OAAQh4B,GAAK,GAAG,CAEd,IAAIuyD,EAAM1gC,EAAE/5B,OAAO4C,IAAIy3D,EAAIvrD,KAAKynD,GAAGx5D,KAAKC,MAAM+8B,EAAE/5B,KAAK4C,GAAG23D,GAAIxgC,EAAE/5B,KAAK4C,EAAE,GAAGqG,GAAGuxD,GAC3E,IAAIzgC,EAAE/5B,KAAK4C,IAAIq4B,EAAEm7B,GAAG,EAAEqE,EAAG1gC,EAAE7xB,EAAE,EAAEkyD,IAAOK,EAGpC,IAFAx/B,EAAEu9B,UAAUtwD,EAAEg4B,GACdnG,EAAEm/B,MAAMh5B,EAAEnG,GACJA,EAAE/5B,KAAK4C,KAAO63D,GAAI1gC,EAAEm/B,MAAMh5B,EAAEnG,EAErC,CACO,MAAL2B,IACD3B,EAAEs/B,UAAUe,EAAG1+B,GACZu+B,GAAMC,GAAInhC,EAAWkgC,KAAKC,MAAMx9B,EAAEA,IAEvC3B,EAAEmG,EAAIk6B,EACNrgC,EAAEq/B,QACCe,EAAM,GAAGpgC,EAAE+/B,SAASK,EAAIpgC,GACxBkgC,EAAK,GAAGlhC,EAAWkgC,KAAKC,MAAMn/B,EAAEA,EA5BjB,CAbE,CA0CrB,EAkJDhB,EAAWx4B,UAAUg3D,SA7GrB,WACE,GAAGzoD,KAAKoxB,EAAI,EAAG,OAAO,EACtB,IAAIpP,EAAIhiB,KAAK9O,KAAK,GAClB,GAAY,IAAN,EAAF8wB,GAAW,OAAO,EACtB,IAAImK,EAAM,EAAFnK,EAQR,OAFAmK,GAHAA,GADAA,GADAA,EAAKA,GAAG,GAAK,GAAFnK,GAAOmK,GAAI,KACd,GAAK,IAAFnK,GAAQmK,GAAI,MACf,IAAO,MAAFnK,GAAUmK,EAAG,QAAU,QAG5B,EAAEnK,EAAEmK,EAAEnsB,KAAK0nD,IAAK1nD,KAAK0nD,IAEnB,EAAG1nD,KAAK0nD,GAAGv7B,GAAGA,CACzB,EAiGDlC,EAAWx4B,UAAU28B,OApCrB,WAAuB,OAA+C,IAAtCpuB,KAAKoxB,EAAE,EAAiB,EAAbpxB,KAAK9O,KAAK,GAAM8O,KAAKiT,EAAU,EAqC1EgX,EAAWx4B,UAAUm+B,IAlCrB,SAAgBz1B,EAAEshD,GAChB,GAAGthD,EAAI,YAAcA,EAAI,EAAG,OAAO8vB,EAAWw/B,IAC9C,IAAIx+B,EAAIg8B,IAAOsC,EAAKtC,IAAOrE,EAAInH,EAAEmO,QAAQ5pD,MAAOlM,EAAIu0D,EAAMluD,GAAG,EAE7D,IADAyoD,EAAEyH,OAAOp/B,KACDn3B,GAAK,GAEX,GADA2nD,EAAEwO,MAAMh/B,EAAEs+B,IACNpvD,EAAG,GAAGrG,GAAM,EAAG2nD,EAAEsO,MAAMR,EAAG3G,EAAE33B,OAC3B,CAAE,IAAImG,EAAInG,EAAGA,EAAIs+B,EAAIA,EAAKn4B,CAAI,CAErC,OAAOqqB,EAAEoO,OAAO5+B,EACjB,EA2BDhB,EAAWx4B,UAAU2F,SApXrB,SAAoBid,GAClB,GAAGrU,KAAKiT,EAAI,EAAG,MAAO,IAAIjT,KAAKitB,SAAS71B,SAASid,GACjD,IAAIqmB,EACJ,GAAQ,IAALrmB,EAASqmB,EAAI,OACX,GAAQ,GAALrmB,EAAQqmB,EAAI,OACf,GAAQ,GAALrmB,EAAQqmB,EAAI,OACf,GAAQ,IAALrmB,EAASqmB,EAAI,MAChB,IAAQ,GAALrmB,EACH,OAAOrU,KAAK4rD,QAAQv3C,GADTqmB,EAAI,CACf,CACL,IAAmBtO,EAAfy/B,GAAM,GAAGnxB,GAAG,EAAMlgB,GAAI,EAAOyQ,EAAI,GAAIn3B,EAAIkM,KAAKoxB,EAC9CmC,EAAIvzB,KAAKwnD,GAAI1zD,EAAEkM,KAAKwnD,GAAI9sB,EAC5B,GAAG5mC,KAAM,EAEP,IADGy/B,EAAIvzB,KAAKwnD,KAAOp7B,EAAIpsB,KAAK9O,KAAK4C,IAAIy/B,GAAK,IAAK/Y,GAAI,EAAMyQ,EAAIg9B,EAAS77B,IAChEt4B,GAAK,GACNy/B,EAAImH,GACLtO,GAAKpsB,KAAK9O,KAAK4C,IAAK,GAAGy/B,GAAG,IAAMmH,EAAEnH,EAClCnH,GAAKpsB,KAAK9O,OAAO4C,KAAKy/B,GAAGvzB,KAAKwnD,GAAG9sB,KAEjCtO,EAAKpsB,KAAK9O,KAAK4C,KAAKy/B,GAAGmH,GAAImxB,EACxBt4B,GAAK,IAAKA,GAAKvzB,KAAKwnD,KAAM1zD,IAE5Bs4B,EAAI,IAAG5R,GAAI,GACXA,IAAGyQ,GAAKg9B,EAAS77B,IAGxB,OAAO5R,EAAEyQ,EAAE,GACZ,EA2VDhB,EAAWx4B,UAAUw7B,OAxVrB,WAAsB,IAAIhC,EAAIg8B,IAAsC,OAA/Bh9B,EAAWkgC,KAAKC,MAAMpqD,KAAKirB,GAAWA,CAAI,EAyV/EhB,EAAWx4B,UAAUkH,IAtVrB,WAAmB,OAAQqH,KAAKiT,EAAE,EAAGjT,KAAKitB,SAASjtB,IAAO,EAuV1DiqB,EAAWx4B,UAAU0+B,UApVrB,SAAqB5b,GACnB,IAAI0W,EAAIjrB,KAAKiT,EAAEsB,EAAEtB,EACjB,GAAQ,GAALgY,EAAQ,OAAOA,EAClB,IAAIn3B,EAAIkM,KAAKoxB,EAEb,GAAQ,IADRnG,EAAIn3B,EAAEygB,EAAE6c,GACG,OAAQpxB,KAAKiT,EAAE,GAAIgY,EAAEA,EAChC,OAAQn3B,GAAK,MAAoC,IAA7Bm3B,EAAEjrB,KAAK9O,KAAK4C,GAAGygB,EAAErjB,KAAK4C,IAAU,OAAOm3B,EAC3D,OAAO,CACR,EA6UDhB,EAAWx4B,UAAUw/B,UA/TrB,WACE,OAAGjxB,KAAKoxB,GAAK,EAAU,EAChBpxB,KAAKwnD,IAAIxnD,KAAKoxB,EAAE,GAAGi3B,EAAMroD,KAAK9O,KAAK8O,KAAKoxB,EAAE,GAAIpxB,KAAKiT,EAAEjT,KAAKynD,GAClE,EA6TDx9B,EAAWx4B,UAAUs8B,IAzJrB,SAAexZ,GACb,IAAI0W,EAAIg8B,IAGR,OAFAjnD,KAAKrH,MAAMmxD,SAASv1C,EAAE,KAAK0W,GACxBjrB,KAAKiT,EAAI,GAAKgY,EAAEkF,UAAUlG,EAAWkgC,MAAQ,GAAG51C,EAAE61C,MAAMn/B,EAAEA,GACtDA,CACR,EAqJDhB,EAAWx4B,UAAUq6D,UA9BrB,SAAqB3xD,EAAEqgB,GACrB,IAAIihC,EAEJ,OAD0BA,EAAvBthD,EAAI,KAAOqgB,EAAE4T,SAAc,IAAIk6B,EAAQ9tC,GAAa,IAAI+tC,EAAW/tC,GAC/Dxa,KAAK4vB,IAAIz1B,EAAEshD,EACnB,EA6BDxxB,EAAWkgC,KAAOhC,EAAI,GACtBl+B,EAAWw/B,IAAMtB,EAAI,GAyUrBiB,EAAQ33D,UAAUm4D,QAAUP,EAC5BD,EAAQ33D,UAAUo4D,OAASR,EAC3BD,EAAQ33D,UAAUs4D,MALlB,SAAgB/nC,EAAEmK,EAAElB,GAAKjJ,EAAEgoC,WAAW79B,EAAElB,EAAK,EAM7Cm+B,EAAQ33D,UAAUw4D,MALlB,SAAgBjoC,EAAEiJ,GAAKjJ,EAAEkoC,SAASj/B,EAAK,EAuEvCq+B,EAAQ73D,UAAUm4D,QAzBlB,SAAwB5nC,GACxB,GAAGA,EAAE/O,EAAI,GAAK+O,EAAEoP,EAAI,EAAEpxB,KAAKwa,EAAE4W,EAAG,OAAOpP,EAAE+L,IAAI/tB,KAAKwa,GAC7C,GAAGwH,EAAEmO,UAAUnwB,KAAKwa,GAAK,EAAG,OAAOwH,EACjC,IAAIiJ,EAAIg8B,IAAoC,OAA7BjlC,EAAEqoC,OAAOp/B,GAAIjrB,KAAKsU,OAAO2W,GAAWA,CACzD,EAsBDq+B,EAAQ73D,UAAUo4D,OApBlB,SAAuB7nC,GAAK,OAAOA,CAAI,EAqBvCsnC,EAAQ73D,UAAU6iB,OAlBlB,SAAuB0N,GAKvB,IAJAA,EAAEuoC,UAAUvqD,KAAKwa,EAAE4W,EAAE,EAAEpxB,KAAKupD,IACzBvnC,EAAEoP,EAAIpxB,KAAKwa,EAAE4W,EAAE,IAAKpP,EAAEoP,EAAIpxB,KAAKwa,EAAE4W,EAAE,EAAGpP,EAAEsoC,SAC3CtqD,KAAK2pD,GAAGoC,gBAAgB/rD,KAAKupD,GAAGvpD,KAAKwa,EAAE4W,EAAE,EAAEpxB,KAAKwpD,IAChDxpD,KAAKwa,EAAEwxC,gBAAgBhsD,KAAKwpD,GAAGxpD,KAAKwa,EAAE4W,EAAE,EAAEpxB,KAAKupD,IACzCvnC,EAAEmO,UAAUnwB,KAAKupD,IAAM,GAAGvnC,EAAEiqC,WAAW,EAAEjsD,KAAKwa,EAAE4W,EAAE,GAExD,IADApP,EAAEooC,MAAMpqD,KAAKupD,GAAGvnC,GACVA,EAAEmO,UAAUnwB,KAAKwa,IAAM,GAAGwH,EAAEooC,MAAMpqD,KAAKwa,EAAEwH,EAC9C,EAWDsnC,EAAQ73D,UAAUs4D,MALlB,SAAsB/nC,EAAEmK,EAAElB,GAAKjJ,EAAEgoC,WAAW79B,EAAElB,GAAIjrB,KAAKsU,OAAO2W,EAAK,EAMnEq+B,EAAQ73D,UAAUw4D,MATlB,SAAsBjoC,EAAEiJ,GAAKjJ,EAAEkoC,SAASj/B,GAAIjrB,KAAKsU,OAAO2W,EAAK,EAiJ7D,IAAIihC,EAAY,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAChXC,GAAS,GAAG,IAAID,EAAUA,EAAUl9D,OAAO,GA8D/Ci7B,EAAWx4B,UAAU26D,UAxjBrB,SAAsBnhC,GAAK,OAAOh9B,KAAKC,MAAMD,KAAKo+D,IAAIrsD,KAAKwnD,GAAGv5D,KAAK0T,IAAIspB,GAAM,EAyjB7EhB,EAAWx4B,UAAUm6D,QA/iBrB,SAAoBv3C,GAEpB,GADQ,MAALA,IAAWA,EAAI,IACE,GAAjBrU,KAAKssD,UAAiBj4C,EAAI,GAAKA,EAAI,GAAI,MAAO,IACjD,IAAIk4C,EAAKvsD,KAAKosD,UAAU/3C,GACpBE,EAAItmB,KAAKshC,IAAIlb,EAAEk4C,GACfngC,EAAI+7B,EAAI5zC,GAAI4X,EAAI86B,IAAOxL,EAAIwL,IAAOh8B,EAAI,GAE1C,IADAjrB,KAAK8pD,SAAS19B,EAAED,EAAEsvB,GACZtvB,EAAEmgC,SAAW,GAClBrhC,GAAK1W,EAAEknC,EAAE+Q,YAAYp1D,SAASid,GAAGvO,OAAO,GAAKmlB,EAC7CkB,EAAE29B,SAAS19B,EAAED,EAAEsvB,GAEhB,OAAOA,EAAE+Q,WAAWp1D,SAASid,GAAK4W,CACjC,EAoiBDhB,EAAWx4B,UAAU+4D,UAjiBrB,SAAsBv3C,EAAEoB,GACxBrU,KAAKooD,QAAQ,GACL,MAAL/zC,IAAWA,EAAI,IAGlB,IAFA,IAAIk4C,EAAKvsD,KAAKosD,UAAU/3C,GACpB+X,EAAIn+B,KAAKshC,IAAIlb,EAAEk4C,GAAK9B,GAAK,EAAOrxD,EAAI,EAAG8iC,EAAI,EACvCpoC,EAAI,EAAGA,EAAImf,EAAEjkB,SAAU8E,EAAG,CACjC,IAAIkuB,EAAIkmC,EAAMj1C,EAAEnf,GACbkuB,EAAI,EACa,KAAf/O,EAAEqmB,OAAOxlC,IAA8B,GAAjBkM,KAAKssD,WAAe7B,GAAK,IAGpDvuB,EAAI7nB,EAAE6nB,EAAEla,IACH5oB,GAAKmzD,IACRvsD,KAAKysD,UAAUrgC,GACfpsB,KAAKisD,WAAW/vB,EAAE,GAClB9iC,EAAI,EACJ8iC,EAAI,GAEN,CACE9iC,EAAI,IACN4G,KAAKysD,UAAUx+D,KAAKshC,IAAIlb,EAAEjb,IAC1B4G,KAAKisD,WAAW/vB,EAAE,IAEhBuuB,GAAIxgC,EAAWkgC,KAAKC,MAAMpqD,KAAKA,KACjC,EA0gBDiqB,EAAWx4B,UAAUu1D,WAvgBrB,SAAuBzyC,EAAEF,EAAEnJ,GAC3B,GAAG,iBAAmBmJ,EAErB,GAAGE,EAAI,EAAGvU,KAAKooD,QAAQ,QAMrB,IAJApoD,KAAKgnD,WAAWzyC,EAAErJ,GACdlL,KAAK0sD,QAAQn4C,EAAE,IACjBvU,KAAK2sD,UAAU1iC,EAAWw/B,IAAIx9B,UAAU1X,EAAE,GAAGw0C,EAAM/oD,MAClDA,KAAKouB,UAAUpuB,KAAKisD,WAAW,EAAE,IAC7BjsD,KAAKqxB,gBAAgBhd,IAC1BrU,KAAKisD,WAAW,EAAE,GACfjsD,KAAKixB,YAAc1c,GAAGvU,KAAKoqD,MAAMngC,EAAWw/B,IAAIx9B,UAAU1X,EAAE,GAAGvU,UAGhE,CAEN,IAAIgiB,EAAI,IAAIhrB,MAASo6B,EAAM,EAAF7c,EACzByN,EAAEhzB,OAAgB,GAANulB,GAAG,GACfF,EAAEu4C,UAAU5qC,GACToP,EAAI,EAAGpP,EAAE,KAAQ,GAAGoP,GAAG,EAASpP,EAAE,GAAK,EAC1ChiB,KAAK83B,WAAW9V,EAAE,IAClB,CACA,EAkfDiI,EAAWx4B,UAAUk7D,UAndrB,SAAsBp4C,EAAEs4C,EAAG5hC,GAC3B,IAAIn3B,EAAG+qB,EAAGrE,EAAIvsB,KAAKoR,IAAIkV,EAAE6c,EAAEpxB,KAAKoxB,GAChC,IAAIt9B,EAAI,EAAGA,EAAI0mB,IAAK1mB,EAAGm3B,EAAE/5B,KAAK4C,GAAK+4D,EAAG7sD,KAAK9O,KAAK4C,GAAGygB,EAAErjB,KAAK4C,IAC1D,GAAGygB,EAAE6c,EAAIpxB,KAAKoxB,EAAG,CAEhB,IADAvS,EAAItK,EAAEtB,EAAEjT,KAAKynD,GACT3zD,EAAI0mB,EAAG1mB,EAAIkM,KAAKoxB,IAAKt9B,EAAGm3B,EAAE/5B,KAAK4C,GAAK+4D,EAAG7sD,KAAK9O,KAAK4C,GAAG+qB,GACxDoM,EAAEmG,EAAIpxB,KAAKoxB,CACX,KAAM,CAEN,IADAvS,EAAI7e,KAAKiT,EAAEjT,KAAKynD,GACZ3zD,EAAI0mB,EAAG1mB,EAAIygB,EAAE6c,IAAKt9B,EAAGm3B,EAAE/5B,KAAK4C,GAAK+4D,EAAGhuC,EAAEtK,EAAErjB,KAAK4C,IACjDm3B,EAAEmG,EAAI7c,EAAE6c,CACR,CACDnG,EAAEhY,EAAI45C,EAAG7sD,KAAKiT,EAAEsB,EAAEtB,GAClBgY,EAAEq/B,OACD,EAscDrgC,EAAWx4B,UAAUq7D,UAnXrB,SAAsBviC,EAAEsiC,GACxB,IAAI5hC,EAAIhB,EAAWw/B,IAAIx9B,UAAU1B,GAEjC,OADAvqB,KAAK2sD,UAAU1hC,EAAE4hC,EAAG5hC,GACbA,CACN,EAgXDhB,EAAWx4B,UAAUs7D,MApWrB,SAAkBx4C,EAAE0W,GAEpB,IADA,IAAIn3B,EAAI,EAAGoX,EAAI,EAAGsP,EAAIvsB,KAAKoR,IAAIkV,EAAE6c,EAAEpxB,KAAKoxB,GAClCt9B,EAAI0mB,GACTtP,GAAKlL,KAAK9O,KAAK4C,GAAGygB,EAAErjB,KAAK4C,GACzBm3B,EAAE/5B,KAAK4C,KAAOoX,EAAElL,KAAKynD,GACrBv8C,IAAMlL,KAAKwnD,GAEZ,GAAGjzC,EAAE6c,EAAIpxB,KAAKoxB,EAAG,CAEhB,IADAlmB,GAAKqJ,EAAEtB,EACDnf,EAAIkM,KAAKoxB,GACblmB,GAAKlL,KAAK9O,KAAK4C,GACfm3B,EAAE/5B,KAAK4C,KAAOoX,EAAElL,KAAKynD,GACrBv8C,IAAMlL,KAAKwnD,GAEbt8C,GAAKlL,KAAKiT,CACV,KAAM,CAEN,IADA/H,GAAKlL,KAAKiT,EACJnf,EAAIygB,EAAE6c,GACVlmB,GAAKqJ,EAAErjB,KAAK4C,GACZm3B,EAAE/5B,KAAK4C,KAAOoX,EAAElL,KAAKynD,GACrBv8C,IAAMlL,KAAKwnD,GAEbt8C,GAAKqJ,EAAEtB,CACP,CACDgY,EAAEhY,EAAK/H,EAAE,GAAI,EAAE,EACZA,EAAI,EAAG+f,EAAE/5B,KAAK4C,KAAOoX,EAChBA,GAAK,IAAG+f,EAAE/5B,KAAK4C,KAAOkM,KAAK0nD,GAAGx8C,GACtC+f,EAAEmG,EAAIt9B,EACNm3B,EAAEq/B,OACD,EAwUDrgC,EAAWx4B,UAAUg7D,UA/SrB,SAAsBliC,GACtBvqB,KAAK9O,KAAK8O,KAAKoxB,GAAKpxB,KAAKsnD,GAAG,EAAE/8B,EAAE,EAAEvqB,KAAK,EAAE,EAAEA,KAAKoxB,KAC9CpxB,KAAKoxB,EACPpxB,KAAKsqD,OACJ,EA4SDrgC,EAAWx4B,UAAUw6D,WAzSrB,SAAuB1hC,EAAE2R,GACzB,GAAQ,GAAL3R,EAAH,CACA,KAAMvqB,KAAKoxB,GAAK8K,GAAGl8B,KAAK9O,KAAK8O,KAAKoxB,KAAO,EAEzC,IADApxB,KAAK9O,KAAKgrC,IAAM3R,EACVvqB,KAAK9O,KAAKgrC,IAAMl8B,KAAK0nD,IAC1B1nD,KAAK9O,KAAKgrC,IAAMl8B,KAAK0nD,KAChBxrB,GAAKl8B,KAAKoxB,IAAGpxB,KAAK9O,KAAK8O,KAAKoxB,KAAO,KACtCpxB,KAAK9O,KAAKgrC,EANI,CAQhB,EAiSDjS,EAAWx4B,UAAUu6D,gBA/QrB,SAA4Bz3C,EAAEgW,EAAEU,GAChC,IAII7xB,EAJAtF,EAAI7F,KAAKoR,IAAIW,KAAKoxB,EAAE7c,EAAE6c,EAAE7G,GAG5B,IAFAU,EAAEhY,EAAI,EACNgY,EAAEmG,EAAIt9B,EACAA,EAAI,GAAGm3B,EAAE/5B,OAAO4C,GAAK,EAE3B,IAAIsF,EAAI6xB,EAAEmG,EAAEpxB,KAAKoxB,EAAGt9B,EAAIsF,IAAKtF,EAAGm3B,EAAE/5B,KAAK4C,EAAEkM,KAAKoxB,GAAKpxB,KAAKsnD,GAAG,EAAE/yC,EAAErjB,KAAK4C,GAAGm3B,EAAEn3B,EAAE,EAAEkM,KAAKoxB,GAClF,IAAIh4B,EAAInL,KAAKoR,IAAIkV,EAAE6c,EAAE7G,GAAIz2B,EAAIsF,IAAKtF,EAAGkM,KAAKsnD,GAAG,EAAE/yC,EAAErjB,KAAK4C,GAAGm3B,EAAEn3B,EAAE,EAAEy2B,EAAEz2B,GACjEm3B,EAAEq/B,OACD,EAuQDrgC,EAAWx4B,UAAUs6D,gBAnQrB,SAA4Bx3C,EAAEgW,EAAEU,KAC9BV,EACF,IAAIz2B,EAAIm3B,EAAEmG,EAAIpxB,KAAKoxB,EAAE7c,EAAE6c,EAAE7G,EAEzB,IADAU,EAAEhY,EAAI,IACEnf,GAAK,GAAGm3B,EAAE/5B,KAAK4C,GAAK,EAC5B,IAAIA,EAAI7F,KAAKq0B,IAAIiI,EAAEvqB,KAAKoxB,EAAE,GAAIt9B,EAAIygB,EAAE6c,IAAKt9B,EACxCm3B,EAAE/5B,KAAK8O,KAAKoxB,EAAEt9B,EAAEy2B,GAAKvqB,KAAKsnD,GAAG/8B,EAAEz2B,EAAEygB,EAAErjB,KAAK4C,GAAGm3B,EAAE,EAAE,EAAEjrB,KAAKoxB,EAAEt9B,EAAEy2B,GAC3DU,EAAEq/B,QACFr/B,EAAEs/B,UAAU,EAAEt/B,EACb,EA2PDhB,EAAWx4B,UAAUu7D,OA1HrB,SAAmBziC,GACnB,GAAGA,GAAK,EAAG,OAAO,EAClB,IAAI6B,EAAIpsB,KAAK0nD,GAAGn9B,EAAGU,EAAKjrB,KAAKiT,EAAE,EAAGsX,EAAE,EAAE,EACtC,GAAGvqB,KAAKoxB,EAAI,EACX,GAAQ,GAALhF,EAAQnB,EAAIjrB,KAAK9O,KAAK,GAAGq5B,OACvB,IAAI,IAAIz2B,EAAIkM,KAAKoxB,EAAE,EAAGt9B,GAAK,IAAKA,EAAGm3B,GAAKmB,EAAEnB,EAAEjrB,KAAK9O,KAAK4C,IAAIy2B,EAChE,OAAOU,CACN,EAoHDhB,EAAWx4B,UAAUw7D,YApDrB,SAAwB77B,GACxB,IAAI87B,EAAKltD,KAAKurB,SAAStB,EAAWw/B,KAC9B/uB,EAAIwyB,EAAGC,kBACX,GAAGzyB,GAAK,EAAG,OAAO,EAIlB,IAHA,IAEInmB,EAFA0W,EAAIiiC,EAAGp6B,WAAW4H,GAClB0yB,EAwBK,CAELR,UAAW,SAAS5qC,GAClB,IAAI,IAAIluB,EAAI,EAAGA,EAAIkuB,EAAEhzB,SAAU8E,EAC7BkuB,EAAEluB,GAAK7F,KAAKC,MAAsB,IAAhBD,KAAKqL,SAE1B,GA5BGxF,EAAI,EAAGA,EAAIs9B,IAAKt9B,EAAG,CAE1B,GACEygB,EAAI,IAAI0V,EAAWjqB,KAAKixB,YAAam8B,SAEjC74C,EAAE4b,UAAUlG,EAAWw/B,MAAQ,GAAKl1C,EAAE4b,UAAU+8B,IAAO,GAC7D,IAAI/gC,EAAI5X,EAAEoa,OAAO1D,EAAEjrB,MACnB,GAAkC,GAA/BmsB,EAAEgE,UAAUlG,EAAWw/B,MAAgC,GAAnBt9B,EAAEgE,UAAU+8B,GAAU,CAE3D,IADA,IAAI9zD,EAAI,EACFA,IAAMshC,GAAwB,GAAnBvO,EAAEgE,UAAU+8B,IAE3B,GAAkC,IADlC/gC,EAAIA,EAAE2/B,UAAU,EAAE9rD,OACbmwB,UAAUlG,EAAWw/B,KAAW,OAAO,EAE9C,GAAsB,GAAnBt9B,EAAEgE,UAAU+8B,GAAU,OAAO,CACjC,CACD,CACD,OAAO,CACN,EA+BDjjC,EAAWx4B,UAAU6lC,MA3lBrB,WAAqB,IAAIrM,EAAIg8B,IAAuB,OAAhBjnD,KAAKqqD,OAAOp/B,GAAWA,CAAI,EA4lB/DhB,EAAWx4B,UAAU+6D,SAzlBrB,WACA,GAAGxsD,KAAKiT,EAAI,EAAG,CACd,GAAa,GAAVjT,KAAKoxB,EAAQ,OAAOpxB,KAAK9O,KAAK,GAAG8O,KAAK0nD,GACpC,GAAa,GAAV1nD,KAAKoxB,EAAQ,OAAQ,CAC7B,KAAM,IAAa,GAAVpxB,KAAKoxB,EAAQ,OAAOpxB,KAAK9O,KAAK,GACnC,GAAa,GAAV8O,KAAKoxB,EAAQ,OAAO,CAAP,CAErB,OAASpxB,KAAK9O,KAAK,IAAK,GAAI,GAAG8O,KAAKwnD,IAAK,IAAKxnD,KAAKwnD,GAAIxnD,KAAK9O,KAAK,EAChE,EAklBD+4B,EAAWx4B,UAAU47D,UA/kBrB,WAAyB,OAAgB,GAARrtD,KAAKoxB,EAAMpxB,KAAKiT,EAAGjT,KAAK9O,KAAK,IAAI,IAAK,EAAK,EAglB5E+4B,EAAWx4B,UAAU67D,WA7kBrB,WAA0B,OAAgB,GAARttD,KAAKoxB,EAAMpxB,KAAKiT,EAAGjT,KAAK9O,KAAK,IAAI,IAAK,EAAK,EA8kB7E+4B,EAAWx4B,UAAU66D,OAxkBrB,WACA,OAAGtsD,KAAKiT,EAAI,GAAW,EACfjT,KAAKoxB,GAAK,GAAgB,GAAVpxB,KAAKoxB,GAAUpxB,KAAK9O,KAAK,IAAM,EAAW,EACtD,CACX,EAqkBD+4B,EAAWx4B,UAAU87D,YA/frB,WACA,IAAIz5D,EAAIkM,KAAKoxB,EAAGnG,EAAI,IAAIj0B,MACxBi0B,EAAE,GAAKjrB,KAAKiT,EACZ,IAA+BmZ,EAA3BmH,EAAIvzB,KAAKwnD,GAAI1zD,EAAEkM,KAAKwnD,GAAI,EAAM9sB,EAAI,EACtC,GAAG5mC,KAAM,EAGR,IAFGy/B,EAAIvzB,KAAKwnD,KAAOp7B,EAAIpsB,KAAK9O,KAAK4C,IAAIy/B,KAAOvzB,KAAKiT,EAAEjT,KAAKynD,KAAKl0B,IAC3DtI,EAAEyP,KAAOtO,EAAGpsB,KAAKiT,GAAIjT,KAAKwnD,GAAGj0B,GACzBz/B,GAAK,GACNy/B,EAAI,GACLnH,GAAKpsB,KAAK9O,KAAK4C,IAAK,GAAGy/B,GAAG,IAAM,EAAEA,EAClCnH,GAAKpsB,KAAK9O,OAAO4C,KAAKy/B,GAAGvzB,KAAKwnD,GAAG,KAEjCp7B,EAAKpsB,KAAK9O,KAAK4C,KAAKy/B,GAAG,GAAI,IACxBA,GAAK,IAAKA,GAAKvzB,KAAKwnD,KAAM1zD,IAEhB,IAAT,IAAFs4B,KAAcA,IAAM,KAChB,GAALsO,IAAkB,IAAP16B,KAAKiT,KAAc,IAAFmZ,MAAWsO,GACvCA,EAAI,GAAKtO,GAAKpsB,KAAKiT,KAAGgY,EAAEyP,KAAOtO,GAGrC,OAAOnB,CACN,EA2eDhB,EAAWx4B,UAAU08B,OAzerB,SAAkB5Z,GAAK,OAA0B,GAAnBvU,KAAKmwB,UAAU5b,EAAS,EA0etD0V,EAAWx4B,UAAU4N,IAzerB,SAAekV,GAAK,OAAOvU,KAAKmwB,UAAU5b,GAAG,EAAGvU,KAAKuU,CAAI,EA0ezD0V,EAAWx4B,UAAU6wB,IAzerB,SAAe/N,GAAK,OAAOvU,KAAKmwB,UAAU5b,GAAG,EAAGvU,KAAKuU,CAAI,EA0ezD0V,EAAWx4B,UAAUuhC,IArdrB,SAAeze,GAAK,IAAI0W,EAAIg8B,IAAmC,OAA5BjnD,KAAK2sD,UAAUp4C,EAAEu0C,EAAO79B,GAAWA,CAAI,EAsd1EhB,EAAWx4B,UAAUwhC,GAldrB,SAAc1e,GAAK,IAAI0W,EAAIg8B,IAAkC,OAA3BjnD,KAAK2sD,UAAUp4C,EAAEw0C,EAAM99B,GAAWA,CAAI,EAmdxEhB,EAAWx4B,UAAUyhC,IA/crB,SAAe3e,GAAK,IAAI0W,EAAIg8B,IAAmC,OAA5BjnD,KAAK2sD,UAAUp4C,EAAEy0C,EAAO/9B,GAAWA,CAAI,EAgd1EhB,EAAWx4B,UAAU+7D,OA5crB,SAAkBj5C,GAAK,IAAI0W,EAAIg8B,IAAsC,OAA/BjnD,KAAK2sD,UAAUp4C,EAAE00C,EAAUh+B,GAAWA,CAAI,EA6chFhB,EAAWx4B,UAAU+gC,IA1crB,WAEA,IADA,IAAIvH,EAAIg8B,IACAnzD,EAAI,EAAGA,EAAIkM,KAAKoxB,IAAKt9B,EAAGm3B,EAAE/5B,KAAK4C,GAAKkM,KAAKynD,IAAIznD,KAAK9O,KAAK4C,GAG/D,OAFAm3B,EAAEmG,EAAIpxB,KAAKoxB,EACXnG,EAAEhY,GAAKjT,KAAKiT,EACLgY,CACN,EAqcDhB,EAAWx4B,UAAUw6B,UAlcrB,SAAqB1B,GACrB,IAAIU,EAAIg8B,IAER,OADG18B,EAAI,EAAGvqB,KAAKgrD,UAAUzgC,EAAEU,GAASjrB,KAAK2qD,SAASpgC,EAAEU,GAC7CA,CACN,EA+bDhB,EAAWx4B,UAAUqhC,WA5brB,SAAsBvI,GACtB,IAAIU,EAAIg8B,IAER,OADG18B,EAAI,EAAGvqB,KAAK2qD,UAAUpgC,EAAEU,GAASjrB,KAAKgrD,SAASzgC,EAAEU,GAC7CA,CACN,EAybDhB,EAAWx4B,UAAU07D,gBA1arB,WACA,IAAI,IAAIr5D,EAAI,EAAGA,EAAIkM,KAAKoxB,IAAKt9B,EAC5B,GAAmB,GAAhBkM,KAAK9O,KAAK4C,GAAS,OAAOA,EAAEkM,KAAKwnD,GAAG0B,EAAKlpD,KAAK9O,KAAK4C,IACvD,OAAGkM,KAAKiT,EAAI,EAAUjT,KAAKoxB,EAAEpxB,KAAKwnD,IAC1B,CACP,EAsaDv9B,EAAWx4B,UAAUg8D,SA5ZrB,WAEA,IADA,IAAIxiC,EAAI,EAAGjJ,EAAIhiB,KAAKiT,EAAEjT,KAAKynD,GACnB3zD,EAAI,EAAGA,EAAIkM,KAAKoxB,IAAKt9B,EAAGm3B,GAAKk+B,EAAKnpD,KAAK9O,KAAK4C,GAAGkuB,GACvD,OAAOiJ,CACN,EAyZDhB,EAAWx4B,UAAUi7D,QAtZrB,SAAmBniC,GACnB,IAAInxB,EAAInL,KAAKC,MAAMq8B,EAAEvqB,KAAKwnD,IAC1B,OAAGpuD,GAAK4G,KAAKoxB,EAAkB,GAARpxB,KAAKiT,EACY,IAAhCjT,KAAK9O,KAAKkI,GAAI,GAAImxB,EAAEvqB,KAAKwnD,GAChC,EAmZDv9B,EAAWx4B,UAAUi8D,OAzYrB,SAAkBnjC,GAAK,OAAOvqB,KAAK8sD,UAAUviC,EAAEw+B,EAAS,EA0YxD9+B,EAAWx4B,UAAUk8D,SAvYrB,SAAoBpjC,GAAK,OAAOvqB,KAAK8sD,UAAUviC,EAAE0+B,EAAa,EAwY9Dh/B,EAAWx4B,UAAUm8D,QArYrB,SAAmBrjC,GAAK,OAAOvqB,KAAK8sD,UAAUviC,EAAEy+B,EAAU,EAsY1D/+B,EAAWx4B,UAAUo5B,IAnWrB,SAAetW,GAAK,IAAI0W,EAAIg8B,IAAwB,OAAjBjnD,KAAK+sD,MAAMx4C,EAAE0W,GAAWA,CAAI,EAoW/DhB,EAAWx4B,UAAU85B,SAjWrB,SAAoBhX,GAAK,IAAI0W,EAAIg8B,IAAwB,OAAjBjnD,KAAKoqD,MAAM71C,EAAE0W,GAAWA,CAAI,EAkWpEhB,EAAWx4B,UAAUu9B,SA/VrB,SAAoBza,GAAK,IAAI0W,EAAIg8B,IAA6B,OAAtBjnD,KAAKgqD,WAAWz1C,EAAE0W,GAAWA,CAAI,EAgWzEhB,EAAWx4B,UAAUi9B,OA7VrB,SAAkBna,GAAK,IAAI0W,EAAIg8B,IAAgC,OAAzBjnD,KAAK8pD,SAASv1C,EAAE0W,EAAE,MAAcA,CAAI,EA8V1EhB,EAAWx4B,UAAUo7B,UA3VrB,SAAqBtY,GAAK,IAAI0W,EAAIg8B,IAAgC,OAAzBjnD,KAAK8pD,SAASv1C,EAAE,KAAK0W,GAAWA,CAAI,EA4V7EhB,EAAWx4B,UAAUo8D,mBAzVrB,SAA8Bt5C,GAC9B,IAAIqY,EAAIq6B,IAAOh8B,EAAIg8B,IAEnB,OADAjnD,KAAK8pD,SAASv1C,EAAEqY,EAAE3B,GACX,IAAIj0B,MAAM41B,EAAE3B,EAClB,EAsVDhB,EAAWx4B,UAAUk9B,OA/OrB,SAAkBx0B,EAAEqgB,GACpB,IAAuBkgB,EAAe+gB,EAAlC3nD,EAAIqG,EAAE82B,YAAgBhG,EAAIk9B,EAAI,GAClC,GAAGr0D,GAAK,EAAG,OAAOm3B,EACFyP,EAAR5mC,EAAI,GAAQ,EACZA,EAAI,GAAQ,EACZA,EAAI,IAAS,EACbA,EAAI,IAAS,EACZ,EAER2nD,EADE3nD,EAAI,EACF,IAAIw0D,EAAQ9tC,GACTA,EAAE4T,SACL,IAAIk7B,EAAQ9uC,GAEZ,IAAI+tC,EAAW/tC,GAGpB,IAAIooC,EAAI,IAAI5rD,MAASuzB,EAAI,EAAGoZ,EAAKjJ,EAAE,EAAGmxB,GAAM,GAAGnxB,GAAG,EAElD,GADAkoB,EAAE,GAAKnH,EAAEmO,QAAQ5pD,MACd06B,EAAI,EAAG,CACT,IAAIozB,EAAK7G,IAET,IADAxL,EAAEwO,MAAMrH,EAAE,GAAGkL,GACPvjC,GAAKshC,GACTjJ,EAAEr4B,GAAK08B,IACPxL,EAAEsO,MAAM+D,EAAGlL,EAAEr4B,EAAE,GAAGq4B,EAAEr4B,IACpBA,GAAK,CAEP,CAED,IAAe2R,EAA2B9K,EAAtCh4B,EAAIe,EAAEi3B,EAAE,EAAM28B,GAAM,EAAMxE,EAAKtC,IAEnC,IADAnzD,EAAIu0D,EAAMluD,EAAEjJ,KAAKkI,IAAI,EACfA,GAAK,GAAG,CAQb,IAPGtF,GAAK6vC,EAAIzH,EAAK/hC,EAAEjJ,KAAKkI,IAAKtF,EAAE6vC,EAAKkoB,GAElC3vB,GAAK/hC,EAAEjJ,KAAKkI,IAAK,GAAItF,EAAE,GAAI,IAAM6vC,EAAG7vC,EACjCsF,EAAI,IAAG8iC,GAAK/hC,EAAEjJ,KAAKkI,EAAE,IAAK4G,KAAKwnD,GAAG1zD,EAAE6vC,IAGzCpZ,EAAImQ,EACW,IAAN,EAAFwB,IAAaA,IAAM,IAAK3R,EAE/B,IADIz2B,GAAKy2B,GAAK,IAAKz2B,GAAKkM,KAAKwnD,KAAMpuD,GAChC20D,EACDnL,EAAE1mB,GAAGmuB,OAAOp/B,GACZ8iC,GAAM,MACD,CACL,KAAMxjC,EAAI,GAAKkxB,EAAEwO,MAAMh/B,EAAEs+B,GAAK9N,EAAEwO,MAAMV,EAAGt+B,GAAIV,GAAK,EAC/CA,EAAI,EAAGkxB,EAAEwO,MAAMh/B,EAAEs+B,IAAYn4B,EAAInG,EAAGA,EAAIs+B,EAAIA,EAAKn4B,GACpDqqB,EAAEsO,MAAMR,EAAG3G,EAAE1mB,GAAGjR,EACjB,CAED,KAAM7xB,GAAK,GAA2B,IAArBe,EAAEjJ,KAAKkI,GAAI,GAAGtF,IAC7B2nD,EAAEwO,MAAMh/B,EAAEs+B,GAAKn4B,EAAInG,EAAGA,EAAIs+B,EAAIA,EAAKn4B,IAC9Bt9B,EAAI,IAAKA,EAAIkM,KAAKwnD,GAAG,IAAKpuD,EAEjC,CACD,OAAOqiD,EAAEoO,OAAO5+B,EACf,EAyLDhB,EAAWx4B,UAAUu8D,WAjJrB,SAAsBxzC,GACtB,IAAI6R,EAAK7R,EAAE4T,SACX,GAAIpuB,KAAKouB,UAAY/B,GAAqB,GAAd7R,EAAE8xC,SAAe,OAAOriC,EAAWkgC,KAG/D,IAFA,IAAI8D,EAAIzzC,EAAE8c,QAAS3N,EAAI3pB,KAAKs3B,QACxB/iB,EAAI4zC,EAAI,GAAI9zC,EAAI8zC,EAAI,GAAIj9C,EAAIi9C,EAAI,GAAI/7B,EAAI+7B,EAAI,GAC5B,GAAd8F,EAAE3B,UAAe,CACtB,KAAM2B,EAAE7/B,UACN6/B,EAAEjD,SAAS,EAAEiD,GACV5hC,GACG9X,EAAE6Z,UAAa/Z,EAAE+Z,WAAY7Z,EAAEw4C,MAAM/sD,KAAKuU,GAAIF,EAAE+1C,MAAM5vC,EAAEnG,IAC5DE,EAAEy2C,SAAS,EAAEz2C,IACJF,EAAE+Z,UAAU/Z,EAAE+1C,MAAM5vC,EAAEnG,GACjCA,EAAE22C,SAAS,EAAE32C,GAEf,KAAMsV,EAAEyE,UACNzE,EAAEqhC,SAAS,EAAErhC,GACV0C,GACGnhB,EAAEkjB,UAAahC,EAAEgC,WAAYljB,EAAE6hD,MAAM/sD,KAAKkL,GAAIkhB,EAAEg+B,MAAM5vC,EAAE4R,IAC5DlhB,EAAE8/C,SAAS,EAAE9/C,IACJkhB,EAAEgC,UAAUhC,EAAEg+B,MAAM5vC,EAAE4R,GACjCA,EAAE4+B,SAAS,EAAE5+B,GAEZ6hC,EAAE99B,UAAUxG,IAAM,GACnBskC,EAAE7D,MAAMzgC,EAAEskC,GACP5hC,GAAI9X,EAAE61C,MAAMl/C,EAAEqJ,GACjBF,EAAE+1C,MAAMh+B,EAAE/X,KAEVsV,EAAEygC,MAAM6D,EAAEtkC,GACP0C,GAAInhB,EAAEk/C,MAAM71C,EAAErJ,GACjBkhB,EAAEg+B,MAAM/1C,EAAE+X,GAEZ,CACD,OAAkC,GAA/BzC,EAAEwG,UAAUlG,EAAWw/B,KAAkBx/B,EAAWkgC,KACpD/9B,EAAE+D,UAAU3V,IAAM,EAAU4R,EAAEb,SAAS/Q,GACvC4R,EAAEkgC,SAAW,GAAGlgC,EAAE2gC,MAAMvyC,EAAE4R,GAC1BA,EAAEkgC,SAAW,EAAUlgC,EAAEvB,IAAIrQ,GAAgB4R,GADHA,CAE5C,EA8GDnC,EAAWx4B,UAAU89B,IAvTrB,SAAep1B,GAAK,OAAO6F,KAAK4vB,IAAIz1B,EAAE,IAAIivD,EAAa,EAwTvDn/B,EAAWx4B,UAAU+hC,IAxLrB,SAAejf,GACf,IAAIyN,EAAKhiB,KAAKiT,EAAE,EAAGjT,KAAKitB,SAASjtB,KAAKs3B,QAClCnL,EAAK5X,EAAEtB,EAAE,EAAGsB,EAAE0Y,SAAS1Y,EAAE+iB,QAC7B,GAAGtV,EAAEmO,UAAUhE,GAAK,EAAG,CAAE,IAAIiF,EAAIpP,EAAGA,EAAImK,EAAGA,EAAIiF,CAAI,CACnD,IAAIt9B,EAAIkuB,EAAEmrC,kBAAmBvK,EAAIz2B,EAAEghC,kBACnC,GAAGvK,EAAI,EAAG,OAAO5gC,EAMjB,IALGluB,EAAI8uD,IAAGA,EAAI9uD,GACX8uD,EAAI,IACN5gC,EAAEgpC,SAASpI,EAAE5gC,GACbmK,EAAE6+B,SAASpI,EAAEz2B,IAERnK,EAAEsqC,SAAW,IACdx4D,EAAIkuB,EAAEmrC,mBAAqB,GAAGnrC,EAAEgpC,SAASl3D,EAAEkuB,IAC3CluB,EAAIq4B,EAAEghC,mBAAqB,GAAGhhC,EAAE6+B,SAASl3D,EAAEq4B,GAC5CnK,EAAEmO,UAAUhE,IAAM,GACnBnK,EAAEooC,MAAMj+B,EAAEnK,GACVA,EAAEgpC,SAAS,EAAEhpC,KAEbmK,EAAEi+B,MAAMpoC,EAAEmK,GACVA,EAAE6+B,SAAS,EAAE7+B,IAIhB,OADGy2B,EAAI,GAAGz2B,EAAEw+B,SAAS/H,EAAEz2B,GAChBA,CACN,EAiKDlC,EAAWx4B,UAAU4/B,gBA1GrB,SAA2BD,GAC3B,IAAIt9B,EAAGkuB,EAAIhiB,KAAKrH,MAChB,GAAU,GAAPqpB,EAAEoP,GAAUpP,EAAE9wB,KAAK,IAAMg7D,EAAUA,EAAUl9D,OAAO,GAAI,CAC1D,IAAI8E,EAAI,EAAGA,EAAIo4D,EAAUl9D,SAAU8E,EACjC,GAAGkuB,EAAE9wB,KAAK,IAAMg7D,EAAUp4D,GAAI,OAAO,EACvC,OAAO,CACP,CACD,GAAGkuB,EAAEoM,SAAU,OAAO,EAEtB,IADAt6B,EAAI,EACEA,EAAIo4D,EAAUl9D,QAAQ,CAE3B,IADA,IAAIwrB,EAAI0xC,EAAUp4D,GAAIsF,EAAItF,EAAE,EACtBsF,EAAI8yD,EAAUl9D,QAAUwrB,EAAI2xC,GAAO3xC,GAAK0xC,EAAU9yD,KAExD,IADAohB,EAAIwH,EAAEgrC,OAAOxyC,GACP1mB,EAAIsF,MAAMohB,EAAE0xC,EAAUp4D,MAAQ,EAAG,OAAO,CAC9C,CACD,OAAOkuB,EAAEirC,YAAY77B,EACpB,kBCnoCD,IAAIqX,EAAQrqB,EAAQ,OACpBA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OAERM,EAAOiE,QAAU8lB,EAAMylB,IAAMzlB,EAAMylB,KAAO,CAAC,EAE3C,IAAIjkC,EAAawe,EAAM+V,KAAKv0B,WAwH5B,SAASkkC,EAAWC,EAAKvP,EAAIwP,EAAcC,GASzCF,EAAIG,SAAW,SAASvsC,EAAGhzB,GAOzB,IANA,IAAI8I,EAAM,IAAI2wC,EAAMqB,KAAK2C,WAGrB/R,EAAIzsC,KAAKg4B,KAAKj3B,EAASs/D,GAAgBD,EAEvCnjD,EAAI,IAAIu9B,EAAMqB,KAAK2C,WACf34C,EAAIu6D,EAAcv6D,EAAI4mC,IAAK5mC,EAAG,CAEpCoX,EAAEwuC,SAAS5lD,GAGX+qD,EAAG1nC,QACH0nC,EAAG9lB,OAAO/W,EAAI9W,EAAE6jC,YAChB,IAAIrnB,EAAOm3B,EAAGzP,SACdt3C,EAAIm2C,SAASvmB,EAAKqnB,SAASuf,GAC5B,CAID,OADAx2D,EAAI8yB,SAAS9yB,EAAI9I,SAAWA,GACrB8I,EAAIi3C,UACZ,CACF,CAlJDtG,EAAMylB,IAAIM,IAAM,CAAC,EAgBjB/lB,EAAMylB,IAAIM,IAAIj9D,OAAS,SAAS68D,EAAK5pD,GAEnC,IAAI4oD,GADJ5oD,EAAUA,GAAW,CAAC,GACH4oD,MAAQ3kB,EAAMnvC,OAE7B40D,EAAM,CAaVA,QAAc,SAASrO,EAAW4O,GAEhC,IACIxjC,EADAh8B,EAAahB,KAAKg4B,KAAK45B,EAAUt1B,EAAE0G,YAAc,GAErD,GACEhG,EAAI,IAAIhB,EACNwe,EAAMqB,KAAK8N,WAAWwV,EAAK9e,aAAar/C,IACxC,IAAI8+B,IAAI8xB,EAAUt1B,SACdU,EAAEkF,UAAUlG,EAAWw/B,MAAQ,GAIvC,IAAIiF,EAAQz/D,GADZg8B,EAAIwd,EAAMqB,KAAK6kB,WAAW1jC,EAAE7zB,SAAS,MACVpI,OAW3B,OAVG0/D,EAAQ,IACTzjC,EAAIwd,EAAMqB,KAAK8kB,WAAWj+D,OAAOC,aAAa,GAAI89D,GAASzjC,GAStD,CAAC4jC,cALYhP,EAAUrW,QAAQve,EAAG,QAKHnzB,IAF5Bs2D,EAAIG,SAAStjC,EAAGwjC,GAG3B,EAYDP,QAAc,SAASpO,EAAY+O,EAAeJ,GAEhD,IAAIxjC,EAAI60B,EAAW7W,QAAQ4lB,EAAe,QAC1C,OAAOT,EAAIG,SAAStjC,EAAGwjC,EACxB,GAED,OAAOP,CACR,EAaDzlB,EAAMylB,IAAIY,KAAO,SAASjQ,EAAIyP,GAC5BH,EAAWnuD,KAAM6+C,EAAI,EAAGyP,GAAgBzP,EAAGyP,aAC5C,EAWD7lB,EAAMylB,IAAIa,KAAO,SAASlQ,EAAIyP,GAC5BH,EAAWnuD,KAAM6+C,EAAI,EAAGyP,GAAgBzP,EAAGyP,aAC5C,mBCtHD,IAAI7lB,EAAQrqB,EAAQ,OACpBA,EAAQ,OAGRM,EAAOiE,QAAU8lB,EAAM9mC,IAAM8mC,EAAM9mC,KAAO,CAAC,EAe3C8mC,EAAM9mC,IAAIqtD,OAAS,CACjB,OAAQ,QAAS,UAAW,OAAQ,QAAS,UAAW,OAI1D,IAAIC,EAAa,CAAC,EAEdC,EAAW,GAKXC,EAAiB,KAQrB1mB,EAAM9mC,IAAIytD,aAAgB,EAM1B3mB,EAAM9mC,IAAI0tD,eAAkB,EAQ5B5mB,EAAM9mC,IAAI2tD,YAAe,EAGzB,IAAI,IAAIx7D,EAAI,EAAGA,EAAI20C,EAAM9mC,IAAIqtD,OAAOhgE,SAAU8E,EAAG,CAC/C,IAAIujD,EAAQ5O,EAAM9mC,IAAIqtD,OAAOl7D,GAC7Bm7D,EAAW5X,GAAS,CAClB3jD,MAAOI,EACP/B,KAAMslD,EAAM3a,cAEf,CAOD+L,EAAM9mC,IAAIkM,WAAa,SAAS1c,GAE9B,IADA,IAAIo+D,EAAoBN,EAAW99D,EAAQkmD,OAAO3jD,MAC1CI,EAAI,EAAGA,EAAIo7D,EAASlgE,SAAU8E,EAAG,CACvC,IAAIsM,EAAS8uD,EAASp7D,GACtB,GAAGsM,EAAOovD,MAAQ/mB,EAAM9mC,IAAI0tD,eAC1BjvD,EAAOye,EAAE1tB,QAKNo+D,GAFoBN,EAAW7uD,EAAOi3C,OAAO3jD,OAI9C0M,EAAOye,EAAEze,EAAQjP,EAGtB,CACF,EAQDs3C,EAAM9mC,IAAI8tD,gBAAkB,SAASt+D,GAC9B,aAAcA,IACjBA,EAAQu+D,SACNT,EAAW99D,EAAQkmD,OAAOtlD,KAE1B,KAAOZ,EAAQw+D,SAAW,KAC1Bx+D,EAAQA,QAEb,EAQDs3C,EAAM9mC,IAAIiuD,YAAc,SAASz+D,GAC/B,KAAK,SAAUA,GAAU,CAEvB,IAAIonB,EAAO,CAACpnB,EAAQA,SACpBonB,EAAOA,EAAK7f,OAAO,IAAMvH,GAEzBA,EAAQ0+D,KAAOpnB,EAAMqB,KAAKoM,OAAOrlD,MAAMmP,KAAMuY,EAC9C,CACF,EAQDkwB,EAAM9mC,IAAImuD,oBAAsB,SAAS3+D,GAClC,iBAAkBA,IAErBs3C,EAAM9mC,IAAI8tD,gBAAgBt+D,GAC1BA,EAAQ4+D,aAAe5+D,EAAQu+D,SAElC,EAKC,IAAIV,EAAS,CAAC,QAAS,UAAW,OAAQ,QAAS,WACnD,IAAQl7D,EAAI,EAAGA,EAAIk7D,EAAOhgE,SAAU8E,GAElC,SAAUujD,GAER5O,EAAM9mC,IAAI01C,GAAS,SAASsY,EAAUx+D,GAEpC,IAAIonB,EAAOvhB,MAAMvF,UAAUmI,MAAMC,KAAKoI,WAAWrI,MAAM,GAGnDiO,EAAM,CACRmoD,UAAW,IAAIx9D,KACf6kD,MAAOA,EACPsY,SAAUA,EACVx+D,QAASA,EACT,UAAaonB,GAMfkwB,EAAM9mC,IAAIkM,WAAWhG,EACtB,CAnBH,EAoBGmnD,EAAOl7D,IAgFd,GA1DA20C,EAAM9mC,IAAIsuD,WAAa,SAASC,GAC9B,IAAI9vD,EAAS,CACXovD,MAAO,EACP3wC,EAAGqxC,GAGL,OADAznB,EAAM9mC,IAAIwuD,SAAS/vD,EAAQ,QACpBA,CACR,EAUDqoC,EAAM9mC,IAAIwuD,SAAW,SAAS/vD,EAAQi3C,GACpC,IAAIzJ,GAAO,EACX,GAAGxtC,KAAYA,EAAOovD,MAAQ/mB,EAAM9mC,IAAIytD,cACtC,IAAI,IAAIt7D,EAAI,EAAGA,EAAI20C,EAAM9mC,IAAIqtD,OAAOhgE,SAAU8E,EAAG,CAE/C,GAAGujD,GADe5O,EAAM9mC,IAAIqtD,OAAOl7D,GACV,CAEvBsM,EAAOi3C,MAAQA,EACfzJ,GAAO,EACP,KACD,CACF,CAGH,OAAOA,CACR,EAQDnF,EAAM9mC,IAAIyuD,KAAO,SAAShwD,EAAQgwD,QACb,IAATA,GAAwBA,EAChChwD,EAAOovD,OAAS/mB,EAAM9mC,IAAIytD,aAE1BhvD,EAAOovD,QAAU/mB,EAAM9mC,IAAIytD,YAE9B,EAOD3mB,EAAM9mC,IAAI0uD,UAAY,SAASjwD,GAC7B8uD,EAAS3+D,KAAK6P,EACf,EAGsB,oBAAbuH,SAA4B,QAASA,QAAS,CACtD,IAAIvH,EACJ,GAAGuH,QAAQ7F,OAAS6F,QAAQI,MAAQJ,QAAQK,MAAQL,QAAQsU,MAAO,CAGjE,IAAIq0C,EAAgB,CAClBxuD,MAAO6F,QAAQ7F,MACfqa,QAASxU,QAAQI,KACjBC,KAAML,QAAQK,KACdiU,MAAOtU,QAAQsU,MACfs0C,QAAS5oD,QAAQsU,OAEf4C,EAAI,SAASze,EAAQjP,GACvBs3C,EAAM9mC,IAAI8tD,gBAAgBt+D,GAC1B,IAAIq/D,EAAUF,EAAcn/D,EAAQkmD,OAEhC9+B,EAAO,CAACpnB,EAAQu+D,UACpBn3C,EAAOA,EAAK7f,OAAOvH,EAAO,UAAcyI,SAExC42D,EAAQ3/D,MAAM8W,QAAS4Q,EACxB,EACDnY,EAASqoC,EAAM9mC,IAAIsuD,WAAWpxC,EAC/B,KAAM,CAEDA,EAAI,SAASze,EAAQjP,GACvBs3C,EAAM9mC,IAAImuD,oBAAoB3+D,GAC9BwW,QAAQhG,IAAIxQ,EAAQ4+D,aACrB,EACD3vD,EAASqoC,EAAM9mC,IAAIsuD,WAAWpxC,EAC/B,CACD4pB,EAAM9mC,IAAIwuD,SAAS/vD,EAAQ,SAC3BqoC,EAAM9mC,IAAI0uD,UAAUjwD,GACpB+uD,EAAiB/uD,CAClB,MAGCuH,QAAU,CACRhG,IAAK,WAAa,GAgBtB,GAAsB,OAAnBwtD,GACiB,oBAAXjqD,QAA0BA,OAAOia,SACxC,CACA,IAAIghB,EAAQ,IAAIswB,IAAIvrD,OAAOia,SAAS9L,MAAMq9C,aAM1C,GALGvwB,EAAMwwB,IAAI,kBAEXloB,EAAM9mC,IAAIwuD,SACRhB,EAAgBhvB,EAAM77B,IAAI,iBAAiB1K,OAAO,GAAG,IAEtDumC,EAAMwwB,IAAI,gBAGA,QADAxwB,EAAM77B,IAAI,gBAAgB1K,OAAO,GAAG,IAE7C6uC,EAAM9mC,IAAIyuD,KAAKjB,EAGpB,CAGD1mB,EAAM9mC,IAAIivD,cAAgBzB,mBCvT1BzwC,EAAOiE,QAAU,EAAjBjE,OAEAN,EAAQ,OACRA,EAAQ,OACRA,EAAQ,MACRA,EAAQ,uBCLR,IAAIqqB,EAAQrqB,EAAQ,OAEpBM,EAAOiE,QAAU8lB,EAAMoW,GAAKpW,EAAMoW,IAAM,CAAC,EACzCpW,EAAMoW,GAAGxG,WAAa5P,EAAMoW,GAAGxG,YAAc,CAAC,mBCH9C,IAAI5P,EAAQrqB,EAAQ,OACpBA,EAAQ,OACRA,EAAQ,OAER,IAAIyyC,EAAMnyC,EAAOiE,QAAU8lB,EAAMooB,IAAMpoB,EAAMooB,KAAO,CAAC,EACrDpoB,EAAMoW,GAAGgS,IAAMpoB,EAAMoW,GAAGxG,WAAWwY,IAAMA,EAOzCA,EAAIt/D,OAAS,WAEPu/D,GA0KN,WAEEC,EAAWpgE,OAAOC,aAAa,KAC/BmgE,GAAYtoB,EAAMqB,KAAK8kB,WAAWj+D,OAAOC,aAAa,GAAO,IAG7DogE,EAAK,CACH,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAClD,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAClD,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EACnD,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAGrDC,EAAK,CACH,EAAG,GAAI,GAAI,GAAK,EAAG,GAAI,GAAI,GAAK,EAAG,GAAI,GAAI,GAAK,EAAG,GAAI,GAAI,GAC3D,EAAI,EAAG,GAAI,GAAK,EAAI,EAAG,GAAI,GAAK,EAAI,EAAG,GAAI,GAAK,EAAI,EAAG,GAAI,GAC3D,EAAG,GAAI,GAAI,GAAK,EAAG,GAAI,GAAI,GAAK,EAAG,GAAI,GAAI,GAAK,EAAG,GAAI,GAAI,GAC3D,EAAG,GAAI,GAAI,GAAK,EAAG,GAAI,GAAI,GAAK,EAAG,GAAI,GAAI,GAAK,EAAG,GAAI,GAAI,IAG7DC,EAAK,IAAIl6D,MAAM,IACf,IAAI,IAAIlD,EAAI,EAAGA,EAAI,KAAMA,EACvBo9D,EAAGp9D,GAAK7F,KAAKC,MAAkC,WAA5BD,KAAK0K,IAAI1K,KAAKkjE,IAAIr9D,EAAI,KAI3Cg9D,GAAe,CAChB,CApMGjnB,GAIF,IAAIunB,EAAS,KAGT3Y,EAAShQ,EAAMqB,KAAKC,eAGpBH,EAAK,IAAI5yC,MAAM,IAGf6nD,EAAK,CACPvS,UAAW,MACXsa,YAAa,GACb0H,aAAc,GAEd+C,cAAe,EAEfC,kBAAmB,KAEnBC,kBAAmB,EAQrB1S,MAAW,WAETA,EAAGwS,cAAgB,EAGnBxS,EAAGyS,kBAAoBzS,EAAG2S,gBAAkB,GAE5C,IADA,IAAIC,EAAS5S,EAAG0S,kBAAoB,EAC5Bz9D,EAAI,EAAGA,EAAI29D,IAAU39D,EAC3B+qD,EAAGyS,kBAAkB/gE,KAAK,GAS5B,OAPAkoD,EAAShQ,EAAMqB,KAAKC,eACpBqnB,EAAS,CACPM,GAAI,WACJC,GAAI,WACJC,GAAI,WACJC,GAAI,WAEChT,CACR,GA4GD,OA1GAA,EAAG1nC,QAYH0nC,EAAG9lB,OAAS,SAASlxB,EAAK+2C,GACR,SAAbA,IACD/2C,EAAM4gC,EAAMqB,KAAKpjB,WAAW7e,IAI9B,IAAIoxB,EAAMpxB,EAAI7Y,OACd6vD,EAAGwS,eAAiBp4B,EACpBA,EAAM,CAAEA,EAAM,aAAiB,EAAGA,IAAQ,GAC1C,IAAI,IAAInlC,EAAI+qD,EAAGyS,kBAAkBtiE,OAAS,EAAG8E,GAAK,IAAKA,EACrD+qD,EAAGyS,kBAAkBx9D,IAAMmlC,EAAI,GAC/BA,EAAI,GAAKA,EAAI,IAAO4lB,EAAGyS,kBAAkBx9D,GAAK,aAAiB,GAC/D+qD,EAAGyS,kBAAkBx9D,GAAK+qD,EAAGyS,kBAAkBx9D,KAAO,EACtDmlC,EAAI,GAAMA,EAAI,GAAK,aAAiB,EActC,OAVAwf,EAAOxK,SAASpmC,GAGhBiqD,EAAQV,EAAQxnB,EAAI6O,IAGjBA,EAAO75B,KAAO,MAA4B,IAApB65B,EAAOzpD,WAC9BypD,EAAOI,UAGFgG,CACR,EAODA,EAAGzP,OAAS,WAqBV,IAAI2iB,EAAatpB,EAAMqB,KAAKC,eAC5BgoB,EAAW9jB,SAASwK,EAAOxoD,SAG3B,IAOI+oD,EANF6F,EAAGyS,kBAAkBzS,EAAGyS,kBAAkBtiE,OAAS,GACnD6vD,EAAG0S,kBAKuB1S,EAAG+H,YAAc,EAC7CmL,EAAW9jB,SAAS8iB,EAASjrD,OAAO,EAAG+4C,EAAG+H,YAAc5N,IAKxD,IADA,IAAIhoB,EAAM9F,EAAQ,EACVp3B,EAAI+qD,EAAGyS,kBAAkBtiE,OAAS,EAAG8E,GAAK,IAAKA,EAErDo3B,GADA8F,EAAiC,EAA1B6tB,EAAGyS,kBAAkBx9D,GAASo3B,GACrB,aAAiB,EACjC6mC,EAAWC,WAAWhhC,IAAS,GAGjC,IAAIihC,EAAK,CACPP,GAAIN,EAAOM,GACXC,GAAIP,EAAOO,GACXC,GAAIR,EAAOQ,GACXC,GAAIT,EAAOS,IAEbC,EAAQG,EAAIroB,EAAImoB,GAChB,IAAInkB,EAAOnF,EAAMqB,KAAKC,eAKtB,OAJA6D,EAAKokB,WAAWC,EAAGP,IACnB9jB,EAAKokB,WAAWC,EAAGN,IACnB/jB,EAAKokB,WAAWC,EAAGL,IACnBhkB,EAAKokB,WAAWC,EAAGJ,IACZjkB,CACR,EAEMiR,CACR,EAGD,IAAIkS,EAAW,KACXC,EAAK,KACLC,EAAK,KACLC,EAAK,KACLJ,GAAe,EAyCnB,SAASgB,EAAQ7+C,EAAGipB,EAAGjsC,GAIrB,IAFA,IAAImhC,EAAG7c,EAAGF,EAAGnJ,EAAGkhB,EAAMnB,EAAGn3B,EACrBmlC,EAAMhpC,EAAMjB,SACViqC,GAAO,IAAI,CAQf,IANA1kB,EAAItB,EAAEy+C,GACNr9C,EAAIpB,EAAE0+C,GACNzmD,EAAI+H,EAAE2+C,GACNxlC,EAAInZ,EAAE4+C,GAGF/9D,EAAI,EAAGA,EAAI,KAAMA,EACnBooC,EAAEpoC,GAAK7D,EAAMiiE,aAEb9gC,EAAK7c,GADD6X,EAAK/X,GAAKnJ,EAAIkhB,IACL8kC,EAAGp9D,GAAKooC,EAAEpoC,GAEvBygB,EAAI6X,EACJA,EAAIlhB,EACJA,EAAImJ,EACJA,GAAM+c,IAJNnG,EAAIgmC,EAAGn9D,IAIUs9B,IAAO,GAAKnG,EAG/B,KAAMn3B,EAAI,KAAMA,EAEds9B,EAAK7c,GADDrJ,EAAKkhB,GAAK/X,EAAInJ,IACLgmD,EAAGp9D,GAAKooC,EAAE80B,EAAGl9D,IAE1BygB,EAAI6X,EACJA,EAAIlhB,EACJA,EAAImJ,EACJA,GAAM+c,IAJNnG,EAAIgmC,EAAGn9D,IAIUs9B,IAAO,GAAKnG,EAG/B,KAAMn3B,EAAI,KAAMA,EAEds9B,EAAK7c,GADDF,EAAInJ,EAAIkhB,GACC8kC,EAAGp9D,GAAKooC,EAAE80B,EAAGl9D,IAE1BygB,EAAI6X,EACJA,EAAIlhB,EACJA,EAAImJ,EACJA,GAAM+c,IAJNnG,EAAIgmC,EAAGn9D,IAIUs9B,IAAO,GAAKnG,EAG/B,KAAMn3B,EAAI,KAAMA,EAEds9B,EAAK7c,GADDrJ,GAAKmJ,GAAK+X,IACD8kC,EAAGp9D,GAAKooC,EAAE80B,EAAGl9D,IAE1BygB,EAAI6X,EACJA,EAAIlhB,EACJA,EAAImJ,EACJA,GAAM+c,IAJNnG,EAAIgmC,EAAGn9D,IAIUs9B,IAAO,GAAKnG,EAI/BhY,EAAEy+C,GAAMz+C,EAAEy+C,GAAKn9C,EAAK,EACpBtB,EAAE0+C,GAAM1+C,EAAE0+C,GAAKt9C,EAAK,EACpBpB,EAAE2+C,GAAM3+C,EAAE2+C,GAAK1mD,EAAK,EACpB+H,EAAE4+C,GAAM5+C,EAAE4+C,GAAKzlC,EAAK,EAEpB6M,GAAO,EACR,CACF,mBCzRD,IAAIwP,EAAQrqB,EAAQ,OACpBA,EAAQ,OAERM,EAAOiE,QAAU8lB,EAAM0pB,IAAM1pB,EAAM0pB,KAAO,CAAC,EAC3C1pB,EAAM0pB,IAAIC,KAAO3pB,EAAM2pB,sBCFvB,IAAI3pB,EAAQrqB,EAAQ,OACpBA,EAAQ,OAERqqB,EAAM0pB,IAAM1pB,EAAM0pB,KAAO,CAAC,GACfzzC,EAAOiE,QAAU8lB,EAAM0pB,IAAIC,KAAO3pB,EAAM2pB,KAAO3pB,EAAM2pB,MAAQ,CAAC,GASpE7gE,OAAS,SAASstD,GAiCrB,MAhCU,CAQR0P,SAAU,SAASlP,EAAMgT,GAMvB,IAJA,IAAIjhC,EAAI,IAAIqX,EAAMqB,KAAK2C,WAGnBxT,EAAMhrC,KAAKg4B,KAAKosC,EAAUxT,EAAGyP,cACzBx6D,EAAI,EAAGA,EAAImlC,EAAKnlC,IAAK,CAE3B,IAAIoX,EAAI,IAAIu9B,EAAMqB,KAAK2C,WACvBvhC,EAAEwuC,SAAS5lD,GAIX+qD,EAAG1nC,QACH0nC,EAAG9lB,OAAOsmB,EAAOn0C,EAAE6jC,YACnB3d,EAAEkjB,UAAUuK,EAAGzP,SAChB,CAID,OADAhe,EAAExG,SAASwG,EAAEpiC,SAAWqjE,GACjBjhC,EAAE2d,UACV,EAIJ,mBCjDD,IAAItG,EAAQrqB,EAAQ,OAEpBqqB,EAAMiP,IAAMjP,EAAMiP,KAAO,CAAC,EAC1B,IAAIC,EAAOj5B,EAAOiE,QAAU8lB,EAAMiP,IAAIC,KAAOlP,EAAMkP,KAAOlP,EAAMkP,MAAQ,CAAC,EAGzE,SAAS2a,EAAI72C,EAAI1pB,GACf4lD,EAAKl8B,GAAM1pB,EACX4lD,EAAK5lD,GAAQ0pB,CACd,CAED,SAAS82C,EAAI92C,EAAI1pB,GACf4lD,EAAKl8B,GAAM1pB,CACZ,CAGDugE,EAAI,uBAAwB,iBAI5BA,EAAI,uBAAwB,wBAC5BA,EAAI,uBAAwB,yBAC5BA,EAAI,uBAAwB,cAC5BA,EAAI,uBAAwB,QAC5BA,EAAI,uBAAwB,cAC5BA,EAAI,wBAAyB,cAC7BA,EAAI,wBAAyB,2BAC7BA,EAAI,wBAAyB,2BAC7BA,EAAI,wBAAyB,2BAE7BA,EAAI,cAAe,cAEnBA,EAAI,oBAAqB,iBAEzBA,EAAI,eAAgB,UAEpBA,EAAI,gBAAiB,QAErBA,EAAI,gBAAiB,wBACrBA,EAAI,yBAA0B,UAC9BA,EAAI,yBAA0B,UAC9BA,EAAI,yBAA0B,UAC9BA,EAAI,yBAA0B,UAC9BA,EAAI,yBAA0B,cAC9BA,EAAI,yBAA0B,cAC9BA,EAAI,qBAAsB,OAC1BA,EAAI,qBAAsB,OAG1BA,EAAI,uBAAwB,QAC5BA,EAAI,uBAAwB,cAC5BA,EAAI,uBAAwB,iBAC5BA,EAAI,uBAAwB,0BAC5BA,EAAI,uBAAwB,gBAC5BA,EAAI,uBAAwB,iBAG5BA,EAAI,uBAAwB,gBAC5BA,EAAI,uBAAwB,oBAC5BA,EAAI,uBAAwB,eAC5BA,EAAI,uBAAwB,iBAC5BA,EAAI,uBAAwB,eAC5BA,EAAI,uBAAwB,oBAC5BA,EAAI,uBAAwB,qBAC5BA,EAAI,uBAAwB,uBAC5BA,EAAI,wBAAyB,oBAE7BA,EAAI,wBAAyB,gBAC7BA,EAAI,wBAAyB,cAC7BA,EAAI,0BAA2B,mBAG/BA,EAAI,6BAA8B,UAClCA,EAAI,6BAA8B,uBAClCA,EAAI,6BAA8B,WAClCA,EAAI,6BAA8B,UAClCA,EAAI,6BAA8B,aAClCA,EAAI,6BAA8B,mBAGlCA,EAAI,wBAAyB,cAC7BA,EAAI,wBAAyB,eAE7BA,EAAI,0BAA2B,0BAC/BA,EAAI,0BAA2B,yBAC/BA,EAAI,0BAA2B,mCAC/BA,EAAI,0BAA2B,mCAC/BA,EAAI,0BAA2B,8BAC/BA,EAAI,0BAA2B,6BAG/BA,EAAI,qBAAsB,gBAC1BA,EAAI,qBAAsB,kBAC1BA,EAAI,qBAAsB,kBAC1BA,EAAI,sBAAuB,kBAC3BA,EAAI,sBAAuB,kBAG3BA,EAAI,qBAAsB,gBAC1BA,EAAI,yBAA0B,cAC9BA,EAAI,0BAA2B,cAC/BA,EAAI,0BAA2B,cAG/BA,EAAI,UAAW,cACfA,EAAI,UAAW,WACfA,EAAI,UAAW,gBACfA,EAAI,UAAW,eACfA,EAAI,UAAW,gBACfA,EAAI,UAAW,uBACfA,EAAI,UAAW,iBACfA,EAAI,WAAY,oBAChBA,EAAI,WAAY,0BAChBA,EAAI,WAAY,SAChBA,EAAI,WAAY,eAChBA,EAAI,WAAY,oBAChBA,EAAI,WAAY,cAChBA,EAAI,WAAY,aAChBA,EAAI,2BAA4B,kDAChCA,EAAI,2BAA4B,0CAGhCA,EAAI,wBAAyB,cAC7BA,EAAI,yBAA0B,aAC9BC,EAAI,WAAY,0BAChBA,EAAI,WAAY,iBAChBA,EAAI,WAAY,uBAChBA,EAAI,WAAY,uBAChBA,EAAI,WAAY,iBAChBA,EAAI,WAAY,sBAChBA,EAAI,WAAY,kBAChBA,EAAI,WAAY,iBAChBA,EAAI,WAAY,8BAChBA,EAAI,YAAa,oBACjBA,EAAI,YAAa,mBACjBA,EAAI,YAAa,qBACjBA,EAAI,YAAa,oBACjBD,EAAI,YAAa,wBACjBA,EAAI,YAAa,YACjBC,EAAI,YAAa,yBACjBD,EAAI,YAAa,kBACjBA,EAAI,YAAa,iBACjBA,EAAI,YAAa,oBACjBC,EAAI,YAAa,aACjBA,EAAI,YAAa,aACjBA,EAAI,YAAa,kBACjBA,EAAI,YAAa,mBACjBA,EAAI,YAAa,kBACjBA,EAAI,YAAa,yBACjBA,EAAI,YAAa,4BACjBA,EAAI,YAAa,qBACjBA,EAAI,YAAa,4BACjBA,EAAI,YAAa,qBACjBA,EAAI,YAAa,mBACjBD,EAAI,YAAa,yBACjBA,EAAI,YAAa,uBACjBC,EAAI,YAAa,kBACjBA,EAAI,YAAa,qBACjBD,EAAI,YAAa,0BACjBC,EAAI,YAAa,qBACjBD,EAAI,YAAa,eACjBC,EAAI,YAAa,eACjBA,EAAI,YAAa,oBAGjBD,EAAI,0BAA2B,iBAC/BA,EAAI,oBAAqB,uBACzBA,EAAI,oBAAqB,cACzBA,EAAI,oBAAqB,cACzBA,EAAI,oBAAqB,eACzBA,EAAI,oBAAqB,mBACzBA,EAAI,oBAAqB,iCC/JzB,IAAI7pB,EAAQrqB,EAAQ,OAapB,GAZAA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,YAEiB,IAAf6L,EACR,IAAIA,EAAawe,EAAM+V,KAAKv0B,WAI9B,IAAImmB,EAAO3H,EAAM2H,KAGbsH,EAAMjP,EAAMiP,IAAMjP,EAAMiP,KAAO,CAAC,EACpCh5B,EAAOiE,QAAU+0B,EAAI8a,IAAM/pB,EAAM+pB,IAAM/pB,EAAM+pB,KAAO,CAAC,EACrD,IAAI7a,EAAOD,EAAIC,KAIX8a,EAA+B,CACjC1gE,KAAM,0BACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,8CACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,gCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKK,IAChBH,aAAa,EACbE,QAAS,iBACR,CACD9+C,KAAM,iCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACbM,YAAa,sBAEd,CAEDl/C,KAAM,wCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKM,YAChBJ,aAAa,EACbE,QAAS,mBAMT6hB,EAA2B,CAC7B3gE,KAAM,kBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,oCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,wCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKK,IAChBH,aAAa,EACbE,QAAS,UACR,CACD9+C,KAAM,yBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,8BACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKM,YAChBJ,aAAa,EACbE,QAAS,WACR,CACD9+C,KAAM,wCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKG,QAChBD,aAAa,EACbE,QAAS,qBACR,CACD9+C,KAAM,mCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKG,QAChBD,aAAa,EACbsG,UAAU,EACVpG,QAAS,aACR,CAED9+C,KAAM,6BACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACbsG,UAAU,EACVlpD,MAAO,CAAC,CACNgE,KAAM,uCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKK,IAChBH,aAAa,EACbE,QAAS,gBAId,CACD9+C,KAAM,mCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,uCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKK,IAChBH,aAAa,EACbE,QAAS,UACR,CACD9+C,KAAM,sCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKM,YAChBJ,aAAa,EACbE,QAAS,aAKX8hB,EAA2B,CAC7B5gE,KAAM,mBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,wBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKM,YAChBJ,aAAa,EACbE,QAAS,QACR,CACD9+C,KAAM,8BACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKG,QAChBD,aAAa,EACbE,QAAS,gBAuwBb,SAASnpB,EAAKm3B,EAAI5uD,GAChB,OAAO4uD,EAAG1nC,QAAQ4hB,OAAO9oC,GAAOm/C,SAASL,UAC1C,CAED,SAAS6jB,EAAsBC,GAE7B,IAAIC,EACJ,GAAID,GAIF,KADAC,EAAepb,EAAIC,KAAKvH,EAAKwE,SAASie,KACpB,CAChB,IAAI/wD,EAAQ,IAAI7P,MAAM,wBAKtB,MAJA6P,EAAM4yC,IAAMme,EACZ/wD,EAAMixD,UAAY,CAChB,eAAgB,iBAAkB,iBAAkB,iBACpD,kBACIjxD,CACP,OAVDgxD,EAAe,eAYjB,OAAOE,EAA4BF,EACpC,CAED,SAASE,EAA4BF,GACnC,IAAIG,EAAUxqB,EAAMoW,GACpB,OAAOiU,GACP,IAAK,iBACHG,EAAUxqB,EAAMoW,GAAGY,OACrB,IAAK,eACL,IAAK,iBACL,IAAK,iBACL,IAAK,iBACHqT,EAAeA,EAAahtD,OAAO,GAAG0T,cACtC,MACF,QACE,IAAI1X,EAAQ,IAAI7P,MAAM,8BAKtB,MAJA6P,EAAMwqC,UAAYwmB,EAClBhxD,EAAMixD,UAAY,CAChB,eAAgB,iBAAkB,iBAAkB,iBACpD,kBACIjxD,EAER,IAAImxD,KAAaH,KAAgBG,GAC/B,MAAM,IAAIhhE,MAAM,2BAA6B6gE,GAE/C,OAAOG,EAAQH,GAAcvhE,QAC9B,CAzwBDmmD,EAAIwb,sBAAwB,SAAS77B,EAAK87B,EAAU3uD,IAElDA,EAAUA,GAAW,CAAC,GACd4uD,SAAW5uD,EAAQ4uD,UAAY,EACvC5uD,EAAQ7M,MAAQ6M,EAAQ7M,OAAS,KACjC6M,EAAQ8nC,UAAY9nC,EAAQ8nC,WAAa,SACzC9nC,EAAQsuD,aAAetuD,EAAQsuD,cAAgB,OAG/C,IAGIO,EACAC,EACAC,EALAhsC,EAAOkhB,EAAMnvC,OAAOg1C,aAAa9pC,EAAQ4uD,UACzCz7D,EAAQ6M,EAAQ7M,MAChB67D,EAAapjB,EAAKsG,aAAa/+C,GAInC,GAAwC,IAArC6M,EAAQ8nC,UAAUplC,QAAQ,QAAsC,QAAtB1C,EAAQ8nC,UAAqB,CAExE,IAAImnB,EAAOC,EAAQC,EACnB,OAAOnvD,EAAQ8nC,WACf,IAAK,SACH+mB,EAAQ,GACRI,EAAQ,GACRC,EAAS/b,EAAK,cACdgc,EAAWlrB,EAAMG,IAAIM,uBACrB,MACF,IAAK,SACHmqB,EAAQ,GACRI,EAAQ,GACRC,EAAS/b,EAAK,cACdgc,EAAWlrB,EAAMG,IAAIM,uBACrB,MACF,IAAK,SACHmqB,EAAQ,GACRI,EAAQ,GACRC,EAAS/b,EAAK,cACdgc,EAAWlrB,EAAMG,IAAIM,uBACrB,MACF,IAAK,MACHmqB,EAAQ,EACRI,EAAQ,EACRC,EAAS/b,EAAI,OACbgc,EAAWlrB,EAAM4T,IAAInT,uBACrB,MACF,QAGE,MAFIpnC,EAAQ,IAAI7P,MAAM,8DAChBq6C,UAAY9nC,EAAQ8nC,UACpBxqC,EAIR,IAAIgxD,EAAe,WAAatuD,EAAQsuD,aAAap2B,cACjDmiB,EAAKmU,EAA4BF,GAGjCc,EAAKnrB,EAAMorB,MAAMC,OAAOX,EAAU5rC,EAAM5vB,EAAO07D,EAAOxU,GACtD9V,EAAKN,EAAMnvC,OAAOg1C,aAAamlB,IAC/B9qB,EAASgrB,EAASC,IACfz8C,MAAM4xB,GACbJ,EAAO5P,OAAOqX,EAAKgE,MAAM/c,IACzBsR,EAAOtL,SACPk2B,EAAgB5qB,EAAOh5C,OAAOo/C,WAG9B,IAAIloB,EA4sBR,SAA4BU,EAAMisC,EAAYH,EAAOP,GACnD,IAAIjsC,EAASupB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAEvEN,EAAK7+C,OACH6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKM,aAAa,EAAOxpB,GAEtD6oB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKG,SAAS,EACnD4iB,EAAWzkB,cAGK,iBAAjB+jB,GACDjsC,EAAO94B,MAAMwC,KAEX6/C,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKG,SAAS,EACnDnI,EAAMqB,KAAK6kB,WAAW0E,EAAMj8D,SAAS,MAEvCg5C,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAE1DN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAASiD,EAAIC,KAAKmb,IAAe/jB,YAExCqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKoB,MAAM,EAAO,OAG/D,OAAOhrB,CACR,CAruBgBktC,CAAmBxsC,EAAMisC,EAAYH,EAAOP,GAEzDQ,EAAsBljB,EAAK7+C,OACzB6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAChDN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAASkD,EAAI,YAAgB5I,YACpCqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAE1DN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAC1DN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAASkD,EAAI,aAAiB5I,YAErCloB,IAGFupB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAC1DN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAASif,GAAQ3kB,YAExBqB,EAAK7+C,OACH6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKM,aAAa,EAAOhI,QAI7D,KAAM,CA2BL,IAAIjnC,EA3BC,GAAyB,SAAtB0C,EAAQ8nC,UA6BhB,MAFIxqC,EAAQ,IAAI7P,MAAM,8DAChBq6C,UAAY9nC,EAAQ8nC,UACpBxqC,EA3BNuxD,EAAQ,GAER,IAGI1qB,EAHAqrB,EAAY,IAAIvrB,EAAMqB,KAAK2C,WAAWllB,GACtCqsC,EAAKlc,EAAI8a,IAAIyB,kBAAkBd,EAAUa,EAAW,EAAGr8D,EAAO07D,GAC9DtqB,EAAK2O,EAAI8a,IAAIyB,kBAAkBd,EAAUa,EAAW,EAAGr8D,EAAO07D,IAC9D1qB,EAASF,EAAM4T,IAAInT,uBAAuB0qB,IACvCz8C,MAAM4xB,GACbJ,EAAO5P,OAAOqX,EAAKgE,MAAM/c,IACzBsR,EAAOtL,SACPk2B,EAAgB5qB,EAAOh5C,OAAOo/C,WAE9BukB,EAAsBljB,EAAK7+C,OACzB6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAChDN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAASkD,EAAK,oCAAoC5I,YAEzDqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAE1DN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKM,aAAa,EAAOxpB,GAEhE6oB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKG,SAAS,EACnD4iB,EAAWzkB,eAOlB,CAUD,OAPWqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAErE4iB,EAEAljB,EAAK7+C,OACH6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKM,aAAa,EAAOwiB,IAGzD,EAUD7b,EAAIwc,sBAAwB,SAAS78B,EAAK87B,GACxC,IAAIvlB,EAAO,KAGPiD,EAAU,CAAC,EACXmG,EAAS,GACb,IAAI5G,EAAK2G,SAAS1f,EAAKo7B,EAA8B5hB,EAASmG,GAAS,CACrE,IAAIl1C,EAAQ,IAAI7P,MAAM,+FAGtB,MADA6P,EAAMk1C,OAASA,EACTl1C,CACP,CAGD,IAAI4yC,EAAMtE,EAAKwE,SAAS/D,EAAQsjB,eAC5BxrB,EAAS+O,EAAI8a,IAAI4B,UAAU1f,EAAK7D,EAAQwjB,iBAAkBlB,GAG1DmB,EAAY7rB,EAAMqB,KAAKC,aAAa8G,EAAQ0iB,eAOhD,OALA5qB,EAAO5P,OAAOu7B,GACX3rB,EAAOtL,WACRuQ,EAAOwC,EAAK6D,QAAQtL,EAAOh5C,SAGtBi+C,CACR,EAUD8J,EAAI6c,yBAA2B,SAASC,EAAMxc,GAE5C,IAAInwC,EAAM,CACR5W,KAAM,wBACNqZ,KAAM8lC,EAAKgE,MAAMogB,GAAMzlB,YAEzB,OAAOtG,EAAMgsB,IAAI1kE,OAAO8X,EAAK,CAACmwC,QAASA,GACxC,EAUDN,EAAIgd,2BAA6B,SAASD,GACxC,IAAI5sD,EAAM4gC,EAAMgsB,IAAIxhE,OAAOwhE,GAAK,GAEhC,GAAgB,0BAAb5sD,EAAI5W,KAAkC,CACvC,IAAI6Q,EAAQ,IAAI7P,MAAM,iGAGtB,MADA6P,EAAM6yD,WAAa9sD,EAAI5W,KACjB6Q,CACP,CACD,GAAG+F,EAAI+sD,UAAkC,cAAtB/sD,EAAI+sD,SAAS3jE,KAC9B,MAAM,IAAIgB,MAAM,uEAKlB,OAAOm+C,EAAK6D,QAAQpsC,EAAIyC,KACzB,EA4BDotC,EAAImd,qBAAuB,SAASC,EAAQ3B,EAAU3uD,GAGpD,KADAA,EAAUA,GAAW,CAAC,GACVuwD,OAAQ,CAElB,IAAInnB,EAAO8J,EAAIsd,kBAAkBtd,EAAIud,iBAAiBH,IAEtD,OADAlnB,EAAO8J,EAAIwb,sBAAsBtlB,EAAMulB,EAAU3uD,GAC1CkzC,EAAI6c,yBAAyB3mB,EACrC,CAGD,IAAItB,EACAvD,EACAsqB,EACAM,EACJ,OAAOnvD,EAAQ8nC,WACf,IAAK,SACHA,EAAY,cACZ+mB,EAAQ,GACRtqB,EAAKN,EAAMnvC,OAAOg1C,aAAa,IAC/BqlB,EAAWlrB,EAAMG,IAAIM,uBACrB,MACF,IAAK,SACHoD,EAAY,cACZ+mB,EAAQ,GACRtqB,EAAKN,EAAMnvC,OAAOg1C,aAAa,IAC/BqlB,EAAWlrB,EAAMG,IAAIM,uBACrB,MACF,IAAK,SACHoD,EAAY,cACZ+mB,EAAQ,GACRtqB,EAAKN,EAAMnvC,OAAOg1C,aAAa,IAC/BqlB,EAAWlrB,EAAMG,IAAIM,uBACrB,MACF,IAAK,OACHoD,EAAY,eACZ+mB,EAAQ,GACRtqB,EAAKN,EAAMnvC,OAAOg1C,aAAa,GAC/BqlB,EAAWlrB,EAAM4T,IAAInT,uBACrB,MACF,IAAK,MACHoD,EAAY,UACZ+mB,EAAQ,EACRtqB,EAAKN,EAAMnvC,OAAOg1C,aAAa,GAC/BqlB,EAAWlrB,EAAM4T,IAAInT,uBACrB,MACF,QACE,IAAIpnC,EAAQ,IAAI7P,MAAM,wEACOuS,EAAQ8nC,UAAY,MAEjD,MADAxqC,EAAMwqC,UAAY9nC,EAAQ8nC,UACpBxqC,EAIR,IACI6mC,EAASgrB,EADJlrB,EAAM+pB,IAAI0C,mBAAmB/B,EAAUpqB,EAAGjjC,OAAO,EAAG,GAAIutD,IAEjE1qB,EAAOxxB,MAAM4xB,GACbJ,EAAO5P,OAAOqX,EAAKgE,MAAMsD,EAAIud,iBAAiBH,KAC9CnsB,EAAOtL,SAEP,IAAIx1B,EAAM,CACR5W,KAAM,kBACN2jE,SAAU,CACRl1D,QAAS,IACTzO,KAAM,aAERkkE,QAAS,CACP7oB,UAAWA,EACX8oB,WAAY3sB,EAAMqB,KAAK8N,WAAW7O,GAAIrM,eAExCpyB,KAAMq+B,EAAOh5C,OAAOo/C,YAEtB,OAAOtG,EAAMgsB,IAAI1kE,OAAO8X,EACzB,EAUD6vC,EAAI2d,qBAAuB,SAASZ,EAAKtB,GACvC,IAAIvlB,EAAO,KAEP/lC,EAAM4gC,EAAMgsB,IAAIxhE,OAAOwhE,GAAK,GAEhC,GAAgB,0BAAb5sD,EAAI5W,MACQ,gBAAb4W,EAAI5W,MACS,oBAAb4W,EAAI5W,KAIJ,MAHI6Q,EAAQ,IAAI7P,MAAM,iIAEhB0iE,WAAa7yD,EACbA,EAGR,GAAG+F,EAAI+sD,UAAkC,cAAtB/sD,EAAI+sD,SAAS3jE,KAAsB,CACpD,IAAIoiE,EACAM,EACJ,OAAO9rD,EAAIstD,QAAQ7oB,WACnB,IAAK,UACH+mB,EAAQ,EACRM,EAAWlrB,EAAM4T,IAAIjT,uBACrB,MACF,IAAK,eACHiqB,EAAQ,GACRM,EAAWlrB,EAAM4T,IAAIjT,uBACrB,MACF,IAAK,cACHiqB,EAAQ,GACRM,EAAWlrB,EAAMG,IAAIQ,uBACrB,MACF,IAAK,cACHiqB,EAAQ,GACRM,EAAWlrB,EAAMG,IAAIQ,uBACrB,MACF,IAAK,cACHiqB,EAAQ,GACRM,EAAWlrB,EAAMG,IAAIQ,uBACrB,MACF,IAAK,aACHiqB,EAAQ,EACRM,EAAW,SAAS77D,GAClB,OAAO2wC,EAAM6sB,IAAIlsB,uBAAuBtxC,EAAK,GAC9C,EACD,MACF,IAAK,aACHu7D,EAAQ,EACRM,EAAW,SAAS77D,GAClB,OAAO2wC,EAAM6sB,IAAIlsB,uBAAuBtxC,EAAK,GAC9C,EACD,MACF,IAAK,cACHu7D,EAAQ,GACRM,EAAW,SAAS77D,GAClB,OAAO2wC,EAAM6sB,IAAIlsB,uBAAuBtxC,EAAK,IAC9C,EACD,MACF,QACE,IAAIgK,EAGJ,MAHIA,EAAQ,IAAI7P,MAAM,oEACO4V,EAAIstD,QAAQ7oB,UAAY,OAC/CA,UAAYzkC,EAAIstD,QAAQ7oB,UACxBxqC,EAIR,IAAIinC,EAAKN,EAAMqB,KAAK6kB,WAAW9mD,EAAIstD,QAAQC,YAEvCzsB,EAASgrB,EADJlrB,EAAM+pB,IAAI0C,mBAAmB/B,EAAUpqB,EAAGjjC,OAAO,EAAG,GAAIutD,IAIjE,GAFA1qB,EAAOxxB,MAAM4xB,GACbJ,EAAO5P,OAAO0P,EAAMqB,KAAKC,aAAaliC,EAAIyC,QACvCq+B,EAAOtL,SAGR,OAAOuQ,EAFPA,EAAOjF,EAAOh5C,OAAOo/C,UAIxB,MACCnB,EAAO/lC,EAAIyC,KAcb,OAJY,QANVsjC,EADc,0BAAb/lC,EAAI5W,KACEymD,EAAIwc,sBAAsB9jB,EAAK6D,QAAQrG,GAAOulB,GAG9C/iB,EAAK6D,QAAQrG,MAIpBA,EAAO8J,EAAIqI,mBAAmBnS,IAGzBA,CACR,EAeD8J,EAAI8a,IAAIyB,kBAAoB,SAASd,EAAU5rC,EAAM9L,EAAI85C,EAAMhrC,EAAGs0B,GAChE,IAAIzlD,EAAGkyB,EAEP,GAAG,MAAOuzB,EAAmC,CAC3C,KAAK,SAAUpW,EAAMoW,IACnB,MAAM,IAAI5sD,MAAM,sCAElB4sD,EAAKpW,EAAMoW,GAAG2W,KAAKjkE,QACpB,CAED,IAAI08D,EAAIpP,EAAGyP,aACP3kC,EAAIk1B,EAAG+H,YACPv2D,EAAS,IAAIo4C,EAAMqB,KAAK2C,WAGxBgpB,EAAU,IAAIhtB,EAAMqB,KAAK2C,WAC7B,GAAG0mB,QAA6C,CAC9C,IAAI7nC,EAAI,EAAGA,EAAI6nC,EAASnkE,OAAQs8B,IAC9BmqC,EAAQlhB,SAAS4e,EAAShkE,WAAWm8B,IAEvCmqC,EAAQlhB,SAAS,EAClB,CAGD,IAAIhhB,EAAIkiC,EAAQzmE,SACZikB,EAAIsU,EAAKv4B,SAIT2yD,EAAI,IAAIlZ,EAAMqB,KAAK2C,WACvBkV,EAAEjT,aAAajzB,EAAIkO,GAMnB,IAAI+rC,EAAO/rC,EAAI17B,KAAKg4B,KAAKhT,EAAI0W,GACzB83B,EAAI,IAAIhZ,EAAMqB,KAAK2C,WACvB,IAAInhB,EAAI,EAAGA,EAAIoqC,EAAMpqC,IACnBm2B,EAAEzX,QAAQziB,EAAKunB,GAAGxjB,EAAIrY,IAOxB,IAAI0iD,EAAOhsC,EAAI17B,KAAKg4B,KAAKsN,EAAI5J,GACzBisC,EAAI,IAAIntB,EAAMqB,KAAK2C,WACvB,IAAInhB,EAAI,EAAGA,EAAIqqC,EAAMrqC,IACnBsqC,EAAE5rB,QAAQyrB,EAAQ3mB,GAAGxjB,EAAIiI,IAI3B,IAAIyuB,EAAIP,EACRO,EAAE1N,UAAUshB,GAMZ,IAHA,IAAI1qD,EAAIjd,KAAKg4B,KAAKsE,EAAI0jC,GAGdn6D,EAAI,EAAGA,GAAKoX,EAAGpX,IAAK,CAE1B,IAAIgsB,EAAM,IAAI2oB,EAAMqB,KAAK2C,WACzB3sB,EAAImuB,SAAS0T,EAAE1xD,SACf6vB,EAAImuB,SAAS+T,EAAE/xD,SACf,IAAI,IAAI+0C,EAAQ,EAAGA,EAAQuwB,EAAMvwB,IAC/B6Z,EAAG1nC,QACH0nC,EAAG9lB,OAAOjZ,EAAIivB,YACdjvB,EAAM++B,EAAGzP,SAKX,IAAIymB,EAAI,IAAIptB,EAAMqB,KAAK2C,WACvB,IAAInhB,EAAI,EAAGA,EAAI3B,EAAG2B,IAChBuqC,EAAE7rB,QAAQlqB,EAAIgvB,GAAGxjB,EAAI2iC,IAMvB,IAAIvzB,EAAIzsC,KAAKg4B,KAAKhT,EAAI0W,GAAK17B,KAAKg4B,KAAKsN,EAAI5J,GACrCmsC,EAAO,IAAIrtB,EAAMqB,KAAK2C,WAC1B,IAAIrzC,EAAI,EAAGA,EAAIshC,EAAGthC,IAAK,CACrB,IAAI28D,EAAQ,IAAIttB,EAAMqB,KAAK2C,WAAWuV,EAAEjT,SAASplB,IAC7C3H,EAAI,IACR,IAAIsJ,EAAIuqC,EAAE7mE,SAAW,EAAGs8B,GAAK,EAAGA,IAC9BtJ,IAAS,EACTA,GAAK6zC,EAAE/mB,GAAGxjB,GAAKyqC,EAAMjnB,GAAGxjB,GACxByqC,EAAMC,MAAM1qC,EAAO,IAAJtJ,GAEjB8zC,EAAKxhB,UAAUyhB,EAChB,CACD/T,EAAI8T,EAGJzlE,EAAOikD,UAAUx0B,EAClB,CAGD,OADAzvB,EAAOu6B,SAASv6B,EAAOrB,SAAWu7B,GAC3Bl6B,CACR,EAWDqnD,EAAI8a,IAAI4B,UAAY,SAAS1f,EAAK7tB,EAAQssC,GACxC,OAAOze,GACP,KAAKgD,EAAIC,KAAJ,WACH,OAAOD,EAAI8a,IAAIyD,kBAAkBvhB,EAAK7tB,EAAQssC,GAEhD,KAAKzb,EAAIC,KAAK,mCACd,KAAKD,EAAIC,KAAK,6BACZ,OAAOD,EAAI8a,IAAI0D,sBAAsBxhB,EAAK7tB,EAAQssC,GAEpD,QACE,IAAIrxD,EAAQ,IAAI7P,MAAM,0DAOtB,MANA6P,EAAM4yC,IAAMA,EACZ5yC,EAAMq0D,cAAgB,CACpB,aACA,kCACA,6BAEIr0D,EAET,EAcD41C,EAAI8a,IAAIyD,kBAAoB,SAASvhB,EAAK7tB,EAAQssC,GAEhD,IAwBMrxD,EAxBF+uC,EAAU,CAAC,EACXmG,EAAS,GACb,IAAI5G,EAAK2G,SAASlwB,EAAQ6rC,EAA0B7hB,EAASmG,GAI3D,MAHIl1C,EAAQ,IAAI7P,MAAM,yHAEhB+kD,OAASA,EACTl1C,EAKR,IADA4yC,EAAMtE,EAAKwE,SAAS/D,EAAQulB,WACjB1e,EAAIC,KAAJ,YAKT,MAJI71C,EAAQ,IAAI7P,MAAM,gFAEhByiD,IAAMA,EACZ5yC,EAAMq0D,cAAgB,CAAC,eACjBr0D,EAGR,IADA4yC,EAAMtE,EAAKwE,SAAS/D,EAAQ6iB,WACjBhc,EAAIC,KAAK,eAClBjD,IAAQgD,EAAIC,KAAK,eACjBjD,IAAQgD,EAAIC,KAAK,eACjBjD,IAAQgD,EAAIC,KAAK,iBACjBjD,IAAQgD,EAAIC,KAAJ,OAMR,MALI71C,EAAQ,IAAI7P,MAAM,0EAEhByiD,IAAMA,EACZ5yC,EAAMq0D,cAAgB,CACpB,aAAc,aAAc,aAAc,eAAgB,UACtDr0D,EAIR,IAGIuxD,EACAM,EAJApsC,EAAOspB,EAAQwlB,QACf1+D,EAAQ8wC,EAAMqB,KAAKC,aAAa8G,EAAQylB,mBAI5C,OAHA3+D,EAAQA,EAAM07C,OAAO17C,EAAM3I,UAAY,GAGhC0oD,EAAIC,KAAKjD,IAChB,IAAK,aACH2e,EAAQ,GACRM,EAAWlrB,EAAMG,IAAIQ,uBACrB,MACF,IAAK,aACHiqB,EAAQ,GACRM,EAAWlrB,EAAMG,IAAIQ,uBACrB,MACF,IAAK,aACHiqB,EAAQ,GACRM,EAAWlrB,EAAMG,IAAIQ,uBACrB,MACF,IAAK,eACHiqB,EAAQ,GACRM,EAAWlrB,EAAM4T,IAAIjT,uBACrB,MACF,IAAK,SACHiqB,EAAQ,EACRM,EAAWlrB,EAAM4T,IAAIjT,uBAKvB,IAAIyV,EAAK+T,EAAsB/hB,EAAQgiB,QAGnCe,EAAKnrB,EAAMorB,MAAMC,OAAOX,EAAU5rC,EAAM5vB,EAAO07D,EAAOxU,GACtD9V,EAAK8H,EAAQ0lB,MACb5tB,EAASgrB,EAASC,GAGtB,OAFAjrB,EAAOxxB,MAAM4xB,GAENJ,CACR,EAcD+O,EAAI8a,IAAI0D,sBAAwB,SAASxhB,EAAK7tB,EAAQssC,GAEpD,IAAItiB,EAAU,CAAC,EACXmG,EAAS,GACb,IAAI5G,EAAK2G,SAASlwB,EAAQ8rC,EAA0B9hB,EAASmG,GAI3D,MAHIl1C,EAAQ,IAAI7P,MAAM,yHAEhB+kD,OAASA,EACTl1C,EAGR,IAIIuxD,EAAOmD,EAAQ7C,EAJfpsC,EAAOkhB,EAAMqB,KAAKC,aAAa8G,EAAQtpB,MACvC5vB,EAAQ8wC,EAAMqB,KAAKC,aAAa8G,EAAQvf,YAI5C,OAHA35B,EAAQA,EAAM07C,OAAO17C,EAAM3I,UAAY,GAGhC0lD,GACL,KAAKgD,EAAIC,KAAK,mCACZ0b,EAAQ,GACRmD,EAAS,EACT7C,EAAWlrB,EAAM4T,IAAIlT,gBACrB,MAEF,KAAKuO,EAAIC,KAAK,6BACZ0b,EAAQ,EACRmD,EAAS,EACT7C,EAAW,SAAS77D,EAAKixC,GACvB,IAAIJ,EAASF,EAAM6sB,IAAIlsB,uBAAuBtxC,EAAK,IAEnD,OADA6wC,EAAOxxB,MAAM4xB,EAAI,MACVJ,CACR,EACD,MAEF,QACE,IAAI7mC,EAEJ,MAFIA,EAAQ,IAAI7P,MAAM,0DAChByiD,IAAMA,EACN5yC,EAIV,IAAI+8C,EAAK+T,EAAsB/hB,EAAQgiB,QACnC/6D,EAAM4/C,EAAI8a,IAAIyB,kBAAkBd,EAAU5rC,EAAM,EAAG5vB,EAAO07D,EAAOxU,GAIrE,OAHAA,EAAG1nC,QAGIw8C,EAAS77D,EAFP4/C,EAAI8a,IAAIyB,kBAAkBd,EAAU5rC,EAAM,EAAG5vB,EAAO6+D,EAAQ3X,GAGtE,EAaDnH,EAAI8a,IAAI0C,mBAAqB,SAAS/B,EAAU5rC,EAAM8rC,EAAOxU,GAC3D,GAAG,MAAOA,EAAmC,CAC3C,KAAK,QAASpW,EAAMoW,IAClB,MAAM,IAAI5sD,MAAM,qCAElB4sD,EAAKpW,EAAMoW,GAAGgS,IAAIt/D,QACnB,CACW,OAATg2B,IACDA,EAAO,IAGT,IADA,IAAIkvC,EAAU,CAAC/uC,EAAKm3B,EAAIsU,EAAW5rC,IAC3Bv4B,EAAS,GAAI8E,EAAI,EAAG9E,EAASqkE,IAASv/D,EAAG9E,GAAU,GACzDynE,EAAQlmE,KAAKm3B,EAAKm3B,EAAI4X,EAAQ3iE,EAAI,GAAKq/D,EAAW5rC,IAEpD,OAAOkvC,EAAQtrD,KAAK,IAAIrF,OAAO,EAAGutD,EACnC,mBC16BD,IAAI5qB,EAAQrqB,EAAQ,OACpBA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OAER,IAEIs4C,EAFA7C,EAAQprB,EAAMorB,MAAQprB,EAAMorB,OAAS,CAAC,EAGvCprB,EAAMqB,KAAK6sB,WAAaluB,EAAMjkC,QAAQ6hD,oBACvCqQ,EAASt4C,EAAQ,QAmBnBM,EAAOiE,QAAU8lB,EAAMqrB,OAASD,EAAMC,OAAS,SAC7CvgC,EAAGtgB,EAAG/H,EAAGmoD,EAAOxU,EAAIjlC,GAQpB,GAPiB,mBAAPilC,IACRjlC,EAAWilC,EACXA,EAAK,MAKJpW,EAAMqB,KAAK6sB,WAAaluB,EAAMjkC,QAAQ6hD,mBACvCqQ,EAAO5C,SAAkB,OAAPjV,GAA6B,iBAAPA,KACvC6X,EAAOE,WAAW5nE,OAAS,IAAO6vD,GAAa,SAAPA,GAOzC,MANiB,iBAAPA,IAERA,EAAK,QAEPtrB,EAAI5M,OAAOtyB,KAAKk/B,EAAG,UACnBtgB,EAAI0T,OAAOtyB,KAAK4e,EAAG,UACf2G,EAM4B,IAA7B88C,EAAOE,WAAW5nE,OACZ0nE,EAAO5C,OAAOvgC,EAAGtgB,EAAG/H,EAAGmoD,GAAO,SAAS59C,EAAK3d,GACjD,GAAG2d,EACD,OAAOmE,EAASnE,GAElBmE,EAAS,KAAM9hB,EAAIV,SAAS,UAC7B,IAEIs/D,EAAO5C,OAAOvgC,EAAGtgB,EAAG/H,EAAGmoD,EAAOxU,GAAI,SAASppC,EAAK3d,GACrD,GAAG2d,EACD,OAAOmE,EAASnE,GAElBmE,EAAS,KAAM9hB,EAAIV,SAAS,UAC7B,IAlBiC,IAA7Bs/D,EAAOE,WAAW5nE,OACZ0nE,EAAOE,WAAWrjC,EAAGtgB,EAAG/H,EAAGmoD,GAAOj8D,SAAS,UAE7Cs/D,EAAOE,WAAWrjC,EAAGtgB,EAAG/H,EAAGmoD,EAAOxU,GAAIznD,SAAS,UAsB1D,GAJG,MAAOynD,IAERA,EAAK,QAEU,iBAAPA,EAAiB,CACzB,KAAKA,KAAMpW,EAAMoW,GAAGxG,YAClB,MAAM,IAAIpmD,MAAM,2BAA6B4sD,GAE/CA,EAAKpW,EAAMoW,GAAGA,GAAIttD,QACnB,CAED,IAAIslE,EAAOhY,EAAGyP,aAId,GAAG+E,EAAS,WAAawD,EAAO,CAC9B,IAAIphD,EAAM,IAAIxjB,MAAM,4BACpB,GAAG2nB,EACD,OAAOA,EAASnE,GAElB,MAAMA,CACP,CAQD,IAAIwjB,EAAMhrC,KAAKg4B,KAAKotC,EAAQwD,GACxB5rC,EAAIooC,GAASp6B,EAAM,GAAK49B,EA2BxBC,EAAMruB,EAAM0G,KAAK59C,SACrBulE,EAAI3/C,MAAM0nC,EAAItrB,GACd,IACIL,EAAK6jC,EAAKC,EADVpD,EAAK,GAIT,IAAIh6C,EAAU,CACZ,IAAI,IAAI9lB,EAAI,EAAGA,GAAKmlC,IAAOnlC,EAAG,CAE5BgjE,EAAI3/C,MAAM,KAAM,MAChB2/C,EAAI/9B,OAAO9lB,GACX6jD,EAAI/9B,OAAO0P,EAAMqB,KAAKmtB,aAAanjE,IACnCo/B,EAAM8jC,EAAOF,EAAI1nB,SAASL,WAG1B,IAAI,IAAI31C,EAAI,EAAGA,GAAK8R,IAAK9R,EACvB09D,EAAI3/C,MAAM,KAAM,MAChB2/C,EAAI/9B,OAAOi+B,GACXD,EAAMD,EAAI1nB,SAASL,WAEnB7b,EAAMuV,EAAMqB,KAAKotB,SAAShkC,EAAK6jC,EAAKF,GACpCG,EAAOD,EAOTnD,GAAO9/D,EAAImlC,EAAO/F,EAAMA,EAAIptB,OAAO,EAAGmlB,EACvC,CAED,OAAO2oC,CACR,CAGG9/D,EAAI,EACR,SAASqjE,IACP,GAAGrjE,EAAImlC,EAEL,OAAOrf,EAAS,KAAMg6C,GAIxBkD,EAAI3/C,MAAM,KAAM,MAChB2/C,EAAI/9B,OAAO9lB,GACX6jD,EAAI/9B,OAAO0P,EAAMqB,KAAKmtB,aAAanjE,IACnCo/B,EAAM8jC,EAAOF,EAAI1nB,SAASL,WAG1B31C,EAAI,EACJytD,GACD,CAED,SAASA,IACP,GAAGztD,GAAK8R,EAQN,OAPA4rD,EAAI3/C,MAAM,KAAM,MAChB2/C,EAAI/9B,OAAOi+B,GACXD,EAAMD,EAAI1nB,SAASL,WAEnB7b,EAAMuV,EAAMqB,KAAKotB,SAAShkC,EAAK6jC,EAAKF,GACpCG,EAAOD,IACL39D,EACKqvC,EAAMqB,KAAKstB,aAAavQ,GAOjC+M,GAAO9/D,EAAImlC,EAAO/F,EAAMA,EAAIptB,OAAO,EAAGmlB,KAEpCn3B,EACFqjE,GACD,CAEDA,GACD,mBCtLD,IAAI1uB,EAAQrqB,EAAQ,OACpBA,EAAQ,OAGR,IAAIq2C,EAAM/1C,EAAOiE,QAAU8lB,EAAMgsB,IAAMhsB,EAAMgsB,KAAO,CAAC,EAqKrD,SAAS4C,EAAWvrD,GAQlB,IAPA,IAAI8hC,EAAO9hC,EAAO/Z,KAAO,KAGrBiG,EAAS,GACTs/D,EAAc,SAASvyD,EAAOwyD,GAChC,MAAO,IAAMA,CACd,EACOzjE,EAAI,EAAGA,EAAIgY,EAAO9T,OAAOhJ,SAAU8E,EACzCkE,EAAOzH,KAAKub,EAAO9T,OAAOlE,GAAGkb,QAAQ,aAAcsoD,IAErD1pB,GAAQ51C,EAAOmT,KAAK,KAAO,OAG3B,IAAInc,EAAS,EACTwoE,GAAa,EACjB,IAAQ1jE,EAAI,EAAGA,EAAI85C,EAAK5+C,SAAU8E,IAAK9E,EACrC,GAAGA,EAAS,KAAqB,IAAfwoE,EAAkB,CAClC,IAAIt8B,EAAS0S,EAAK4pB,GACJ,MAAXt8B,KACCs8B,EACF5pB,EAAOA,EAAK9nC,OAAO,EAAG0xD,GAAa,QAAU5pB,EAAK9nC,OAAO0xD,IAEzD5pB,EAAOA,EAAK9nC,OAAO,EAAG0xD,GACpB,OAASt8B,EAAS0S,EAAK9nC,OAAO0xD,EAAY,GAE9CxoE,EAAU8E,EAAI0jE,EAAY,EAC1BA,GAAa,IACX1jE,CACH,KAAqB,MAAZ85C,EAAK95C,IAA0B,OAAZ85C,EAAK95C,IAA2B,MAAZ85C,EAAK95C,KACpD0jE,EAAY1jE,GAIhB,OAAO85C,CACR,CAED,SAAS6pB,EAAM3oE,GACb,OAAOA,EAAIkgB,QAAQ,OAAQ,GAC5B,CAjMDylD,EAAI1kE,OAAS,SAAS8X,EAAKrD,GACzBA,EAAUA,GAAW,CAAC,EACtB,IAGIsH,EAHA8hC,EAAO,cAAgB/lC,EAAI5W,KAAO,YAuBtC,GAnBG4W,EAAI+sD,WAKLhnB,GAAQypB,EAJRvrD,EAAS,CACP/Z,KAAM,YACNiG,OAAQ,CAACrH,OAAOkX,EAAI+sD,SAASl1D,SAAUmI,EAAI+sD,SAAS3jE,SAIrD4W,EAAI6vD,gBAEL9pB,GAAQypB,EADRvrD,EAAS,CAAC/Z,KAAM,iBAAkBiG,OAAQ,CAAC6P,EAAI6vD,kBAG9C7vD,EAAIstD,UACLrpD,EAAS,CAAC/Z,KAAM,WAAYiG,OAAQ,CAAC6P,EAAIstD,QAAQ7oB,YAC9CzkC,EAAIstD,QAAQC,YACbtpD,EAAO9T,OAAOzH,KAAKsX,EAAIstD,QAAQC,YAEjCxnB,GAAQypB,EAAWvrD,IAGlBjE,EAAI9F,QAEL,IAAI,IAAIjO,EAAI,EAAGA,EAAI+T,EAAI9F,QAAQ/S,SAAU8E,EACvC85C,GAAQypB,EAAWxvD,EAAI9F,QAAQjO,IAanC,OARG+T,EAAI+sD,WACLhnB,GAAQ,QAIVA,GAAQnF,EAAMqB,KAAK6tB,SAAS9vD,EAAIyC,KAAM9F,EAAQwzC,SAAW,IAAM,OAE/DpK,GAAQ,YAAc/lC,EAAI5W,KAAO,WAElC,EASDwjE,EAAIxhE,OAAS,SAASnE,GAQpB,IAPA,IAMIiW,EANA6oC,EAAO,GAGPgqB,EAAW,gHACXC,EAAU,uCACVC,EAAQ,QAGV/yD,EAAQ6yD,EAASh7B,KAAK9tC,IADZ,CAQV,IAAImC,EAAO8T,EAAM,GACL,4BAAT9T,IACDA,EAAO,uBAGT,IAAI4W,EAAM,CACR5W,KAAMA,EACN2jE,SAAU,KACV8C,cAAe,KACfvC,QAAS,KACTpzD,QAAS,GACTuI,KAAMm+B,EAAMqB,KAAKiuB,SAAShzD,EAAM,KAKlC,GAHA6oC,EAAKr9C,KAAKsX,GAGN9C,EAAM,GAAV,CAOA,IAFA,IAAIizD,EAAQjzD,EAAM,GAAG4D,MAAMmvD,GACvBG,EAAK,EACHlzD,GAASkzD,EAAKD,EAAMhpE,QAAQ,CAKhC,IAHA,IAAIkpE,EAAOF,EAAMC,GAAIjpD,QAAQ,OAAQ,IAG7BmpD,EAAKF,EAAK,EAAGE,EAAKH,EAAMhpE,SAAUmpE,EAAI,CAC5C,IAAI3iD,EAAOwiD,EAAMG,GACjB,IAAI,KAAK9jC,KAAK7e,EAAK,IACjB,MAEF0iD,GAAQ1iD,EACRyiD,EAAKE,CACN,CAID,GADApzD,EAAQmzD,EAAKnzD,MAAM8yD,GACT,CAGR,IAFA,IAAI/rD,EAAS,CAAC/Z,KAAMgT,EAAM,GAAI/M,OAAQ,IAClCA,EAAS+M,EAAM,GAAG4D,MAAM,KACpByvD,EAAK,EAAGA,EAAKpgE,EAAOhJ,SAAUopE,EACpCtsD,EAAO9T,OAAOzH,KAAKknE,EAAMz/D,EAAOogE,KAIlC,GAAIvwD,EAAI+sD,SASD,GAAI/sD,EAAI6vD,eAAiC,mBAAhB5rD,EAAO/Z,KAGhC,GAAI8V,EAAIstD,SAA2B,aAAhBrpD,EAAO/Z,KAQ/B8V,EAAI9F,QAAQxR,KAAKub,OARmC,CAEpD,GAA4B,IAAzBA,EAAO9T,OAAOhJ,OACf,MAAM,IAAIiD,MAAM,yFAGlB4V,EAAIstD,QAAU,CAAC7oB,UAAWt0C,EAAO,GAAIo9D,WAAYp9D,EAAO,IAAM,KAC/D,MARC6P,EAAI6vD,cAAgB1/D,EAAO,IAAM,OAXjB,CAChB,GAAmB,cAAhB8T,EAAO/Z,KACR,MAAM,IAAIE,MAAM,qFAEX,GAA4B,IAAzB6Z,EAAO9T,OAAOhJ,OACtB,MAAM,IAAIiD,MAAM,kFAGlB4V,EAAI+sD,SAAW,CAACl1D,QAAS1H,EAAO,GAAI/G,KAAM+G,EAAO,GAClD,CAaF,GAECigE,CACH,CAED,GAAoB,cAAjBpwD,EAAI+sD,WAA6B/sD,EAAIstD,QACtC,MAAM,IAAIljE,MAAM,sGAzDjB,CA4DF,CAED,GAAmB,IAAhB27C,EAAK5+C,OACN,MAAM,IAAIiD,MAAM,kCAGlB,OAAO27C,CACR,kBCtJD,IAAInF,EAAQrqB,EAAQ,OACpBA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OAGR,IAAIi6C,EAAQ35C,EAAOiE,QAAU8lB,EAAM4vB,MAAQ5vB,EAAM4vB,OAAS,CAAC,EAiN3D,SAASC,EAASjZ,EAAMkZ,EAAY7wC,GAE9BA,IACFA,EAAO+gB,EAAMoW,GAAG2W,KAAKjkE,UAIvB,IAFA,IAAI6/B,EAAI,GACJz5B,EAAQ1J,KAAKg4B,KAAKsyC,EAAa7wC,EAAK4mC,cAChCx6D,EAAI,EAAGA,EAAI6D,IAAS7D,EAAG,CAC7B,IAAIoX,EAAIva,OAAOC,aACZkD,GAAK,GAAM,IAAOA,GAAK,GAAM,IAAOA,GAAK,EAAK,IAAU,IAAJA,GACvD4zB,EAAKvQ,QACLuQ,EAAKqR,OAAOsmB,EAAOn0C,GACnBkmB,GAAK1J,EAAK0nB,SAASL,UACpB,CACD,OAAO3d,EAAE9d,UAAU,EAAGilD,EACvB,CA5MDF,EAAMG,gBAAkB,SAAS1gE,EAAK3G,EAASqT,GAE7C,IAAIq1B,EACAwlB,EACAR,EACA4Z,EAEkB,iBAAZj0D,GACRq1B,EAAQr1B,EACR66C,EAAOp9C,UAAU,SAAM3S,EACvBuvD,EAAK58C,UAAU,SAAM3S,GACbkV,IACRq1B,EAAQr1B,EAAQq1B,YAASvqC,EACzB+vD,EAAO76C,EAAQ66C,WAAQ/vD,EACvBuvD,EAAKr6C,EAAQq6C,SAAMvvD,EAChBkV,EAAQ4tD,MAAQ5tD,EAAQ4tD,KAAKvT,KAC9B4Z,EAASj0D,EAAQ4tD,KAAKvT,KAKtBA,EAGFA,EAAG1nC,QAFH0nC,EAAKpW,EAAMoW,GAAG2W,KAAKjkE,SAMjBknE,IACFA,EAAS5Z,GAIX,IAAI4P,EAAYxgE,KAAKg4B,KAAKnuB,EAAIyyB,EAAE0G,YAAc,GAC1CynC,EAAYjK,EAAY,EAAI5P,EAAGyP,aAAe,EAClD,GAAGn9D,EAAQnC,OAAS0pE,EAIlB,MAHI52D,EAAQ,IAAI7P,MAAM,iDAChBjD,OAASmC,EAAQnC,OACvB8S,EAAM42D,UAAYA,EACZ52D,EAGJ+3B,IACFA,EAAQ,IAEVglB,EAAG9lB,OAAOc,EAAO,OAKjB,IAJA,IAAI8+B,EAAQ9Z,EAAGzP,SAEXwpB,EAAK,GACLC,EAAYH,EAAYvnE,EAAQnC,OAC5B8E,EAAI,EAAGA,EAAI+kE,EAAW/kE,IAC5B8kE,GAAM,KAGR,IAAIpR,EAAKmR,EAAM5pB,WAAa6pB,EAAK,IAASznE,EAE1C,GAAIkuD,GAEG,GAAGA,EAAKrwD,SAAW6vD,EAAGyP,aAAc,CACzC,IAAIxsD,EAIJ,MAJIA,EAAQ,IAAI7P,MAAM,2EAEhB6mE,WAAazZ,EAAKrwD,OACxB8S,EAAMwsD,aAAezP,EAAGyP,aAClBxsD,CACP,OAPCu9C,EAAO5W,EAAMnvC,OAAOy1C,SAAS8P,EAAGyP,cASlC,IAAIyK,EAAST,EAASjZ,EAAMoP,EAAY5P,EAAGyP,aAAe,EAAGmK,GACzDO,EAAWvwB,EAAMqB,KAAKotB,SAAS1P,EAAIuR,EAAQvR,EAAGx4D,QAE9CiqE,EAAWX,EAASU,EAAUna,EAAGyP,aAAcmK,GAC/CS,EAAazwB,EAAMqB,KAAKotB,SAAS7X,EAAM4Z,EAAU5Z,EAAKrwD,QAG1D,MAAO,KAASkqE,EAAaF,CAC9B,EAmBDX,EAAMc,gBAAkB,SAASrhE,EAAKshE,EAAI50D,GAExC,IAAIq1B,EACAglB,EACA4Z,EAEkB,iBAAZj0D,GACRq1B,EAAQr1B,EACRq6C,EAAK58C,UAAU,SAAM3S,GACbkV,IACRq1B,EAAQr1B,EAAQq1B,YAASvqC,EACzBuvD,EAAKr6C,EAAQq6C,SAAMvvD,EAChBkV,EAAQ4tD,MAAQ5tD,EAAQ4tD,KAAKvT,KAC9B4Z,EAASj0D,EAAQ4tD,KAAKvT,KAK1B,IAAI4P,EAAYxgE,KAAKg4B,KAAKnuB,EAAIyyB,EAAE0G,YAAc,GAE9C,GAAGmoC,EAAGpqE,SAAWy/D,EAIf,MAHI3sD,EAAQ,IAAI7P,MAAM,kDAChBjD,OAASoqE,EAAGpqE,OAClB8S,EAAMu3D,eAAiB5K,EACjB3sD,EAeR,QAXUxS,IAAPuvD,EACDA,EAAKpW,EAAMoW,GAAG2W,KAAKjkE,SAEnBstD,EAAG1nC,QAIDshD,IACFA,EAAS5Z,GAGR4P,EAAY,EAAI5P,EAAGyP,aAAe,EACnC,MAAM,IAAIr8D,MAAM,sDAGd4nC,IACFA,EAAQ,IAEVglB,EAAG9lB,OAAOc,EAAO,OAoBjB,IAnBA,IAAI8+B,EAAQ9Z,EAAGzP,SAASL,WAGpB5iB,EAAIitC,EAAG9/B,OAAO,GACd4/B,EAAaE,EAAG9lD,UAAU,EAAGurC,EAAGyP,aAAe,GAC/C0K,EAAWI,EAAG9lD,UAAU,EAAIurC,EAAGyP,cAE/B2K,EAAWX,EAASU,EAAUna,EAAGyP,aAAcmK,GAC/CpZ,EAAO5W,EAAMqB,KAAKotB,SAASgC,EAAYD,EAAUC,EAAWlqE,QAE5D+pE,EAAST,EAASjZ,EAAMoP,EAAY5P,EAAGyP,aAAe,EAAGmK,GACzDa,EAAK7wB,EAAMqB,KAAKotB,SAAS8B,EAAUD,EAAQC,EAAShqE,QAEpDuqE,EAAaD,EAAGhmD,UAAU,EAAGurC,EAAGyP,cAGhCxsD,EAAe,OAANqqB,EAGLr4B,EAAI,EAAGA,EAAI+qD,EAAGyP,eAAgBx6D,EACpCgO,GAAU62D,EAAMr/B,OAAOxlC,KAAOylE,EAAWjgC,OAAOxlC,GAQlD,IAFA,IAAI0lE,EAAQ,EACR9lE,EAAQmrD,EAAGyP,aACPl1D,EAAIylD,EAAGyP,aAAcl1D,EAAIkgE,EAAGtqE,OAAQoK,IAAK,CAC/C,IAAIsW,EAAO4pD,EAAGnqE,WAAWiK,GAErBqgE,EAAe,EAAP/pD,EAAc,EAGtBgqD,EAAaF,EAAQ,MAAS,EAClC13D,GAAU4N,EAAOgqD,EAIjBhmE,GADA8lE,GAAgBC,CAEjB,CAED,GAAG33D,GAAkC,IAAzBw3D,EAAGnqE,WAAWuE,GACxB,MAAM,IAAIzB,MAAM,+BAGlB,OAAOqnE,EAAGhmD,UAAU5f,EAAQ,EAC7B,mBCnKD,IAAI+0C,EAAQrqB,EAAQ,OACpBA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,MACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OAGR,IAAIgyB,EAAO3H,EAAM2H,KACbsH,EAAMjP,EAAMiP,IAGZiiB,EAAMj7C,EAAOiE,QAAU8lB,EAAMmxB,OAASnxB,EAAMmxB,QAAU,CAAC,EAEvDC,EAAuB,CACzB9nE,KAAM,cACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,0BACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKK,IAChBH,aAAa,EACbE,QAAS,eACR,CACD9+C,KAAM,sBACNu+C,SAAUF,EAAKG,MAAMmB,iBACrBf,aAAa,EACbM,YAAa,aAIb6oB,EAAe,CACjB/nE,KAAM,MACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,cACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKG,QAChBD,aAAa,EACbE,QAAS,WAEXgpB,EAAsB,CACpB9nE,KAAM,cACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACbsG,UAAU,EACVhG,YAAa,MACbljD,MAAO,CAAC,CACNgE,KAAM,kBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,kCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,4CACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKK,IAChBH,aAAa,EACbE,QAAS,gBACR,CACD9+C,KAAM,6CACNu+C,SAAUF,EAAKG,MAAMC,UACrBS,YAAa,4BAEd,CACDl/C,KAAM,yBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKM,YAChBJ,aAAa,EACbE,QAAS,eAEV,CACD9+C,KAAM,sBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKM,YAChBJ,aAAa,EACbE,QAAS,WACR,CACD9+C,KAAM,yBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKG,QAChBD,aAAa,EACbsG,UAAU,EACVpG,QAAS,qBAKXkpB,EAAmB,CACrBhoE,KAAM,UACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,gBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKK,IAChBH,aAAa,EACbE,QAAS,SACR,CACD9+C,KAAM,mBACNu+C,SAAUF,EAAKG,MAAMmB,iBACrBf,aAAa,EACbM,YAAa,YACZ,CACDl/C,KAAM,wBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAK4B,IAChB1B,aAAa,EACbsG,UAAU,EACVpG,QAAS,mBAITmpB,EAAqB,CACvBjoE,KAAM,YACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,mBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKK,IAChBH,aAAa,EACbE,QAAS,OACR,CACD9+C,KAAM,uBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAK4B,IAChB1B,aAAa,EACbE,QAAS,YAITopB,EAAmB,CACrBloE,KAAM,UACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,iBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKK,IAChBH,aAAa,EACbE,QAAS,UACR,CACD9+C,KAAM,oBACNu+C,SAAUF,EAAKG,MAAMmB,iBACrBf,aAAa,EAGb5iD,MAAO,CAAC,CACNgE,KAAM,uBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKG,MAAMQ,YACjBJ,aAAa,EACbE,QAAS,YAiBf,SAASqpB,EAAoBC,EAAcC,EAAUC,EAAWC,GAG9D,IAFA,IAAIjqE,EAAS,GAELyD,EAAI,EAAGA,EAAIqmE,EAAanrE,OAAQ8E,IACtC,IAAI,IAAIsF,EAAI,EAAGA,EAAI+gE,EAAarmE,GAAGymE,SAASvrE,OAAQoK,IAAK,CACvD,IAAIohE,EAAML,EAAarmE,GAAGymE,SAASnhE,QACpB9J,IAAZgrE,GAAyBE,EAAIvpE,OAASqpE,IAIzB,OAAbF,OAI6B9qE,IAA7BkrE,EAAI/2B,WAAW22B,IAChBI,EAAI/2B,WAAW22B,GAAUlzD,QAAQmzD,IAAc,GAC/ChqE,EAAOE,KAAKiqE,GALZnqE,EAAOE,KAAKiqE,GAOf,CAGH,OAAOnqE,CACR,CA8LD,SAASoqE,EAAiBvpE,GAGxB,GAAGA,EAAKigD,UAAYjgD,EAAKy/C,YAAa,CAEpC,IADA,IAAI5iD,EAAQ06C,EAAMqB,KAAKC,eACfj2C,EAAI,EAAGA,EAAI5C,EAAKnD,MAAMiB,SAAU8E,EACtC/F,EAAMkgD,SAAS/8C,EAAKnD,MAAM+F,GAAG/F,OAE/BmD,EAAKigD,SAAWjgD,EAAKy/C,aAAc,EACnCz/C,EAAKnD,MAAQA,EAAMghD,UACpB,CACD,OAAO79C,CACR,CAsED,SAASwpE,EAAqBxpE,EAAMiiE,GAClC,IAAItiB,EAAU,CAAC,EACXmG,EAAS,GACb,IAAI5G,EAAK2G,SACP7lD,EAAMu3C,EAAMkyB,MAAMvqB,KAAKwqB,uBAAwB/pB,EAASmG,GAGxD,MAFIl1C,EAAQ,IAAI7P,MAAM,sCAChB+kD,OAASA,EACTl1C,EAGR,IAEMA,EAFF4yC,EAAMtE,EAAKwE,SAAS/D,EAAQgqB,aAChC,GAAGnmB,IAAQgD,EAAIC,KAAKzmD,KAIlB,MAHI4Q,EAAQ,IAAI7P,MACd,0DACIyiD,IAAMA,EACN5yC,EAIR4yC,EAAMtE,EAAKwE,SAAS/D,EAAQiqB,cAC5B,IAAInyB,EAAS+O,EAAI8a,IAAI4B,UAAU1f,EAAK7D,EAAQkqB,aAAc5H,GAGtD6H,EAAuBP,EAAiB5pB,EAAQmqB,sBAChD1G,EAAY7rB,EAAMqB,KAAKC,aAAaixB,EAAqBjtE,OAG7D,GADA46C,EAAO5P,OAAOu7B,IACV3rB,EAAOtL,SACT,MAAM,IAAIprC,MAAM,2CAGlB,OAAO02C,EAAOh5C,OAAOo/C,UACtB,CAaD,SAASksB,EAAoBd,EAAcppC,EAAQoiC,GAEjD,IAAIpiC,GAAkC,IAAxBopC,EAAanrE,OACzB,MAAO,GAMT,IAFAmrE,EAAe/pB,EAAK6D,QAAQkmB,EAAcppC,IAE1Buf,WAAaF,EAAKG,MAAMC,WACtC2pB,EAAalpE,OAASm/C,EAAKK,KAAKC,WACH,IAA7BypB,EAAaxpB,YACb,MAAM,IAAI1+C,MACR,8DAIJ,IADA,IAAIm2B,EAAM,GACFt0B,EAAI,EAAGA,EAAIqmE,EAAapsE,MAAMiB,OAAQ8E,IAAK,CACjD,IAAIonE,EAAUf,EAAapsE,MAAM+F,GAG7B+8C,EAAU,CAAC,EACXmG,EAAS,GACb,IAAI5G,EAAK2G,SAASmkB,EAASnB,EAAkBlpB,EAASmG,GAGpD,MAFIl1C,EAAQ,IAAI7P,MAAM,yBAChB+kD,OAASA,EACTl1C,EAIR,IAMIq5D,EAAWC,EANXZ,EAAM,CACRvpE,KAAMm/C,EAAKwE,SAAS/D,EAAQwqB,OAC5B53B,WAAY63B,EAAqBzqB,EAAQ0qB,gBAE3CnzC,EAAI73B,KAAKiqE,GAGT,IAAIgB,EAAU3qB,EAAQ4qB,SAAS1tE,MAAM,GACrC,OAAOysE,EAAIvpE,MACT,KAAKymD,EAAIC,KAAK+jB,oBAKZ,GAAe,QADfF,EAAU9jB,EAAIwc,sBAAsBsH,EAASrI,IAE3C,MAAM,IAAIlhE,MACR,4DAIN,KAAKylD,EAAIC,KAAKgkB,OAIZ,IACEnB,EAAI1iE,IAAM4/C,EAAIqI,mBAAmByb,EAKlC,CAJC,MAAMrhE,GAENqgE,EAAI1iE,IAAM,KACV0iE,EAAIpqB,KAAOorB,CACZ,CACD,SAEF,KAAK9jB,EAAIC,KAAKikB,QAIZT,EAAYlB,EACZmB,EAAU,WACR,GAAGhrB,EAAKwE,SAAS/D,EAAQgrB,UAAYnkB,EAAIC,KAAKmkB,gBAAiB,CAC7D,IAAIh6D,EAAQ,IAAI7P,MACd,uDAEF,MADA6P,EAAM4yC,IAAMtE,EAAKwE,SAAS/D,EAAQgrB,QAC5B/5D,CACP,CAGD,IAAIi6D,EAAW3rB,EAAK6D,QAAQpD,EAAQmrB,KAAMjrC,GAC1C,IACEypC,EAAIwB,KAAOtkB,EAAIukB,oBAAoBF,GAAU,EAK9C,CAJC,MAAM5hE,GAENqgE,EAAIwB,KAAO,KACXxB,EAAIpqB,KAAO2rB,CACZ,CACF,EACD,MAEF,QACE,IAAIj6D,EAEJ,MAFIA,EAAQ,IAAI7P,MAAM,sCAChByiD,IAAM8lB,EAAIvpE,KACV6Q,EAIV,QAAiBxS,IAAd6rE,IACC/qB,EAAK2G,SAASykB,EAASL,EAAWtqB,EAASmG,GAG7C,MAFIl1C,EAAQ,IAAI7P,MAAM,uBAAyBkpE,EAAUppE,OACnDilD,OAASA,EACTl1C,EAIRs5D,GACD,CAED,OAAOhzC,CACR,CASD,SAASkzC,EAAqB73B,GAC5B,IAAIy4B,EAAe,CAAC,EAEpB,QAAkB5sE,IAAfm0C,EACD,IAAI,IAAI3vC,EAAI,EAAGA,EAAI2vC,EAAWz0C,SAAU8E,EAAG,CACzC,IAAI+8C,EAAU,CAAC,EACXmG,EAAS,GACb,IAAI5G,EAAK2G,SAAStT,EAAW3vC,GAAIkmE,EAAoBnpB,EAASmG,GAAS,CACrE,IAAIl1C,EAAQ,IAAI7P,MAAM,qCAEtB,MADA6P,EAAMk1C,OAASA,EACTl1C,CACP,CAED,IAAI4yC,EAAMtE,EAAKwE,SAAS/D,EAAQ6D,KAChC,QAAqBplD,IAAlBooD,EAAIC,KAAKjD,GAAZ,CAKAwnB,EAAaxkB,EAAIC,KAAKjD,IAAQ,GAC9B,IAAI,IAAIt7C,EAAI,EAAGA,EAAIy3C,EAAQ74C,OAAOhJ,SAAUoK,EAC1C8iE,EAAaxkB,EAAIC,KAAKjD,IAAMnkD,KAAKsgD,EAAQ74C,OAAOoB,GAAGrL,MAJpD,CAMF,CAGH,OAAOmuE,CACR,CAjcDvC,EAAIwC,eAAiB,SAAS9kC,EAAKtG,EAAQoiC,GAEpB,iBAAXpiC,GACRoiC,EAAWpiC,EACXA,GAAS,QACUzhC,IAAXyhC,IACRA,GAAS,GAIX,IAAI8f,EAAU,CAAC,EAEf,IAAIT,EAAK2G,SAAS1f,EAAKyiC,EAAcjpB,EADxB,IAKX,MAHI/uC,EAAQ,IAAI7P,MAAM,iEAEhB+kD,OAASl1C,EACTA,EAGR,IAsFMA,EAtFFs6D,EAAM,CACR18D,QAASmxC,EAAQnxC,QAAQvQ,WAAW,GACpCgrE,aAAc,GAedkC,QAAS,SAASC,GAChB,IAEIC,EAFA3uB,EAAO,CAAC,EA2BZ,MAxBG,eAAgB0uB,EACjBC,EAAaD,EAAOC,WACZ,kBAAmBD,IAC3BC,EAAa9zB,EAAMqB,KAAK6kB,WAAW2N,EAAOE,qBAI1BltE,IAAfitE,KAA8B,iBAAkBD,IACjD,YAAaA,IACb1uB,EAAK0uB,EAAOhC,SAAWJ,EACrBkC,EAAIjC,aAAc,KAAM,KAAMmC,EAAOhC,eAGvBhrE,IAAfitE,IACD3uB,EAAK2uB,WAAarC,EAChBkC,EAAIjC,aAAc,aAClBoC,EAAYD,EAAOhC,UAEpB,iBAAkBgC,IACnB1uB,EAAK6uB,aAAevC,EAClBkC,EAAIjC,aAAc,eAClBmC,EAAOG,aAAcH,EAAOhC,UAGzB1sB,CACR,EAYD8uB,sBAAuB,SAASD,EAAcnC,GAC5C,OAAOJ,EACLkC,EAAIjC,aAAc,eAAgBsC,EAAcnC,EACnD,EAYDqC,oBAAqB,SAASJ,EAAYjC,GACxC,OAAOJ,EACLkC,EAAIjC,aAAc,aAAcoC,EAAYjC,EAC/C,GAGH,GAAqC,IAAlCzpB,EAAQnxC,QAAQvQ,WAAW,GAG5B,MAFI2S,EAAQ,IAAI7P,MAAM,uDAChByN,QAAUmxC,EAAQnxC,QAAQvQ,WAAW,GACrC2S,EAGR,GAAGsuC,EAAKwE,SAAS/D,EAAQgqB,eAAiBnjB,EAAIC,KAAKzmD,KAGjD,MAFI4Q,EAAQ,IAAI7P,MAAM,2DAChByiD,IAAMtE,EAAKwE,SAAS/D,EAAQgqB,aAC5B/4D,EAGR,IAAI5Q,EAAO2/C,EAAQzsC,QAAQrW,MAAM,GACjC,GAAGmD,EAAKo/C,WAAaF,EAAKG,MAAMC,WAC7Bt/C,EAAKD,OAASm/C,EAAKK,KAAKM,YACzB,MAAM,IAAI9+C,MAAM,yDAKlB,GAHAf,EAAOupE,EAAiBvpE,GAGrB2/C,EAAQhD,IAAK,CACd,IAAIgR,EAAK,KACL+d,EAAc,EACdC,EAAezsB,EAAKwE,SAAS/D,EAAQgsB,cACzC,OAAOA,GACP,KAAKnlB,EAAIC,KAAK6d,KACZ3W,EAAKpW,EAAMoW,GAAG2W,KAAKjkE,SACnBqrE,EAAc,GACd,MACF,KAAKllB,EAAIC,KAAKmlB,OACZje,EAAKpW,EAAMoW,GAAGie,OAAOvrE,SACrBqrE,EAAc,GACd,MACF,KAAKllB,EAAIC,KAAKolB,OACZle,EAAKpW,EAAMoW,GAAGke,OAAOxrE,SACrBqrE,EAAc,GACd,MACF,KAAKllB,EAAIC,KAAK8H,OACZZ,EAAKpW,EAAMoW,GAAGY,OAAOluD,SACrBqrE,EAAc,GACd,MACF,KAAKllB,EAAIC,KAAKkZ,IACZhS,EAAKpW,EAAMoW,GAAGgS,IAAIt/D,SAClBqrE,EAAc,GAGhB,GAAU,OAAP/d,EACD,MAAM,IAAI5sD,MAAM,2CAA6C4qE,GAI/D,IAAIG,EAAU,IAAIv0B,EAAMqB,KAAK2C,WAAWoE,EAAQmsB,SAC5CC,EAAkB,kBAAmBpsB,EACvCpc,SAASgU,EAAMqB,KAAK8N,WAAW/G,EAAQosB,eAAgB,IAAM,EAC3DnvB,EAAS6rB,EAAIuD,YACf/J,EAAU6J,EAAS,EAAGC,EAAeL,EAAa/d,GAChDhR,EAAMpF,EAAM0G,KAAK59C,SAIrB,GAHAs8C,EAAI12B,MAAM0nC,EAAI/Q,GACdD,EAAI9U,OAAO7nC,EAAKnD,OACD8/C,EAAIiZ,SACP/X,aAAe8B,EAAQssB,UACjC,MAAM,IAAIlrE,MAAM,uDAEnB,CAGD,OAuCF,SAAkCmqE,EAAKgB,EAAUrsC,EAAQoiC,GAGvD,IAFAiK,EAAWhtB,EAAK6D,QAAQmpB,EAAUrsC,IAEtBuf,WAAaF,EAAKG,MAAMC,WACjC4sB,EAASnsE,OAASm/C,EAAKK,KAAKC,WACH,IAAzB0sB,EAASzsB,YACV,MAAM,IAAI1+C,MAAM,sEAIlB,IAAI,IAAI6B,EAAI,EAAGA,EAAIspE,EAASrvE,MAAMiB,OAAQ8E,IAAK,CAC7C,IAAIupE,EAAcD,EAASrvE,MAAM+F,GAG7B+8C,EAAU,CAAC,EACXmG,EAAS,GACb,IAAI5G,EAAK2G,SAASsmB,EAAaxD,EAAsBhpB,EAASmG,GAG5D,MAFIl1C,EAAQ,IAAI7P,MAAM,6BAChB+kD,OAASA,EACTl1C,EAGR,IAAIu1B,EAAM,CACRi9B,WAAW,GAET6F,EAAe,KACfjpE,EAAO2/C,EAAQzsC,QAAQrW,MAAM,GACjC,OAAOqiD,EAAKwE,SAAS/D,EAAQgqB,cAC7B,KAAKnjB,EAAIC,KAAKzmD,KACZ,GAAGA,EAAKo/C,WAAaF,EAAKG,MAAMC,WAC7Bt/C,EAAKD,OAASm/C,EAAKK,KAAKM,YACzB,MAAM,IAAI9+C,MAAM,qDAElBkoE,EAAeM,EAAiBvpE,GAAMnD,MACtC,MACF,KAAK2pD,EAAIC,KAAK4b,cACZ4G,EAAeO,EAAqBxpE,EAAMiiE,GAC1C97B,EAAIi9B,WAAY,EAChB,MACF,QACE,IAAIxyD,EAEJ,MAFIA,EAAQ,IAAI7P,MAAM,qCAChB4oE,YAAczqB,EAAKwE,SAAS/D,EAAQgqB,aACpC/4D,EAGRu1B,EAAIkjC,SAAWU,EAAoBd,EAAcppC,EAAQoiC,GACzDiJ,EAAIjC,aAAa5pE,KAAK8mC,EACvB,CACF,CAxFCimC,CAAyBlB,EAAKlrE,EAAKnD,MAAOgjC,EAAQoiC,GAC3CiJ,CACR,EA2TDzC,EAAI4D,aAAe,SAASzlE,EAAKkkE,EAAM7I,EAAU3uD,IAE/CA,EAAUA,GAAW,CAAC,GACd4uD,SAAW5uD,EAAQ4uD,UAAY,EACvC5uD,EAAQ7M,MAAQ6M,EAAQ7M,OAAS,KACjC6M,EAAQ8nC,UAAY9nC,EAAQ8nC,WAAa9nC,EAAQs2D,cAAgB,SAC5D,WAAYt2D,IACfA,EAAQg5D,QAAS,GAEd,eAAgBh5D,IACnBA,EAAQ+3D,WAAa,MAElB,uBAAwB/3D,IAC3BA,EAAQi5D,oBAAqB,GAG/B,IACIC,EADAnB,EAAa/3D,EAAQ+3D,WAEzB,GAAkB,OAAfA,EACDA,EAAa9zB,EAAMqB,KAAK6kB,WAAW4N,QAC9B,GAAG/3D,EAAQi5D,mBAEhB,GAAGzB,EAAM,CACP,IAAI2B,EAAal1B,EAAMqB,KAAK7yC,QAAQ+kE,GAAQA,EAAK,GAAKA,EAC7B,iBAAf2B,IACRA,EAAajmB,EAAIkmB,mBAAmBD,KAElCnI,EAAO/sB,EAAMoW,GAAG2W,KAAKjkE,UACpBwnC,OAAOqX,EAAKgE,MAAMsD,EAAImmB,kBAAkBF,IAAa5uB,YAC1DwtB,EAAa/G,EAAKpmB,SAASL,UAC5B,MAICwtB,EAAa9zB,EAAMnvC,OAAOy1C,SAAS,IAIvC,IAAInP,EAAQ,GACM,OAAf28B,GACD38B,EAAMrvC,KAEJ6/C,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAE1DN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAASiD,EAAIC,KAAK4kB,YAAYxtB,YAErCqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAK4B,KAAK,EAAM,CACrDjC,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKM,aAAa,EACvDwrB,QAIP,iBAAkB/3D,GACnBo7B,EAAMrvC,KAEJ6/C,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAE1DN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAASiD,EAAIC,KAAK8kB,cAAc1tB,YAEvCqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAK4B,KAAK,EAAM,CACrDjC,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKiC,WAAW,EACrDluC,EAAQi4D,mBAKf78B,EAAM5wC,OAAS,IAChB0uE,EAAWttB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAK4B,KAAK,EAAMzS,IAIpE,IAAIk+B,EAAW,GAGXC,EAAQ,GACA,OAAT/B,IAEC+B,EADCt1B,EAAMqB,KAAK7yC,QAAQ+kE,GACZA,EAEA,CAACA,IAKb,IADA,IAAIgC,EAAe,GACXlqE,EAAI,EAAGA,EAAIiqE,EAAM/uE,SAAU8E,EAAG,CAGjB,iBADnBkoE,EAAO+B,EAAMjqE,MAEXkoE,EAAOtkB,EAAIkmB,mBAAmB5B,IAIhC,IAAIiC,EAAsB,IAANnqE,EAAW4pE,OAAWpuE,EACtCysE,EAAWrkB,EAAImmB,kBAAkB7B,GACjCkC,EACF9tB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAE1DN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAASiD,EAAIC,KAAKikB,SAAS7sB,YAElCqB,EAAK7+C,OAAO6+C,EAAKG,MAAMmB,iBAAkB,GAAG,EAAM,CAEhDtB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAE1DN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAASiD,EAAIC,KAAKmkB,iBAAiB/sB,YAE1CqB,EAAK7+C,OAAO6+C,EAAKG,MAAMmB,iBAAkB,GAAG,EAAM,CAChDtB,EAAK7+C,OACH6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKM,aAAa,EAC7CX,EAAKgE,MAAM2nB,GAAUhtB,kBAG7BkvB,IAEJD,EAAaztE,KAAK2tE,EACnB,CAED,GAAGF,EAAahvE,OAAS,EAAG,CAE1B,IAAImvE,EAAmB/tB,EAAK7+C,OAC1B6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAMstB,GAG9CI,EAEFhuB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAE1DN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAE/CV,EAAKqE,SAASiD,EAAIC,KAAKzmD,MAAM69C,YAE/BqB,EAAK7+C,OAAO6+C,EAAKG,MAAMmB,iBAAkB,GAAG,EAAM,CAChDtB,EAAK7+C,OACH6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKM,aAAa,EAC7CX,EAAKgE,MAAM+pB,GAAkBpvB,gBAGrC+uB,EAASvtE,KAAK6tE,EACf,CAGD,IAAIzC,EAAS,KACb,GAAW,OAAR7jE,EAAc,CAEf,IAAIumE,EAAS3mB,EAAIsd,kBAAkBtd,EAAIud,iBAAiBn9D,IAGtD6jE,EAFc,OAAbxI,EAEQ/iB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAEnEN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAASiD,EAAIC,KAAKgkB,QAAQ5sB,YAEjCqB,EAAK7+C,OAAO6+C,EAAKG,MAAMmB,iBAAkB,GAAG,EAAM,CAEhD2sB,IAGFX,IAIOttB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAEnEN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAASiD,EAAIC,KAAK+jB,qBAAqB3sB,YAE9CqB,EAAK7+C,OAAO6+C,EAAKG,MAAMmB,iBAAkB,GAAG,EAAM,CAEhDgG,EAAIwb,sBAAsBmL,EAAQlL,EAAU3uD,KAG9Ck5D,IAKJ,IAAIY,EACFluB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAACirB,IAG3D4C,EAEFnuB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAE1DN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAE/CV,EAAKqE,SAASiD,EAAIC,KAAKzmD,MAAM69C,YAE/BqB,EAAK7+C,OAAO6+C,EAAKG,MAAMmB,iBAAkB,GAAG,EAAM,CAChDtB,EAAK7+C,OACH6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKM,aAAa,EAC7CX,EAAKgE,MAAMkqB,GAAiBvvB,gBAGpC+uB,EAASvtE,KAAKguE,EACf,CAGD,IAGIC,EAHAC,EAAOruB,EAAK7+C,OACd6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAMotB,GAGlD,GAAGt5D,EAAQg5D,OAAQ,CAEjB,IAAIhI,EAAO/sB,EAAMoW,GAAG2W,KAAKjkE,SACrByrE,EAAU,IAAIv0B,EAAMqB,KAAK2C,WAC3BhE,EAAMnvC,OAAOy1C,SAASvqC,EAAQ4uD,WAC5Bz7D,EAAQ6M,EAAQ7M,MAGhBk2C,GADA/1C,EAAM6hE,EAAIuD,YAAY/J,EAAU6J,EAAS,EAAGrlE,EAAO,IAC7C8wC,EAAM0G,KAAK59C,UACrBs8C,EAAI12B,MAAMq+C,EAAM19D,GAChB+1C,EAAI9U,OAAOqX,EAAKgE,MAAMqqB,GAAM1vB,YAC5B,IAAI2vB,EAAW7wB,EAAIiZ,SACnB0X,EAAUpuB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAEpEN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAE1DN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAE1DN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAASiD,EAAIC,KAAK6d,MAAMzmB,YAE/BqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKoB,MAAM,EAAO,MAG3DzB,EAAK7+C,OACH6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKM,aAChC,EAAO2tB,EAAS3vB,cAGpBqB,EAAK7+C,OACH6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKM,aAAa,EAAOisB,EAAQjuB,YAE9DqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKG,SAAS,EACnDR,EAAKsG,aAAa/+C,GAAOo3C,aAG9B,CAGD,OAAOqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAEjEN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKG,SAAS,EACnDR,EAAKsG,aAAa,GAAG3H,YAEvBqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAE1DN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAE/CV,EAAKqE,SAASiD,EAAIC,KAAKzmD,MAAM69C,YAE/BqB,EAAK7+C,OAAO6+C,EAAKG,MAAMmB,iBAAkB,GAAG,EAAM,CAChDtB,EAAK7+C,OACH6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKM,aAAa,EAC7CX,EAAKgE,MAAMqqB,GAAM1vB,gBAGvByvB,GAEH,EAeD7E,EAAIuD,YAAcz0B,EAAM+pB,IAAIyB,mCC/hC5B,IAAIxrB,EAAQrqB,EAAQ,OACpBA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,MACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OAGR,IAAIgyB,EAAO3H,EAAM2H,KAGbuuB,EAAKjgD,EAAOiE,QAAU8lB,EAAMkyB,MAAQlyB,EAAMkyB,OAAS,CAAC,EAqxBxD,SAASiE,EAAmBvnC,GAE1B,IAAIwZ,EAAU,CAAC,EACXmG,EAAS,GACb,IAAI5G,EAAK2G,SAAS1f,EAAKsnC,EAAGvuB,KAAKyuB,uBAAwBhuB,EAASmG,GAAS,CACvE,IAAIl1C,EAAQ,IAAI7P,MAAM,kFAGtB,MADA6P,EAAMk1C,OAASA,EACTl1C,CACP,CAED,MAAO,CACLpC,QAASmxC,EAAQnxC,QAAQvQ,WAAW,GACpC2vE,OAAQr2B,EAAMiP,IAAIqnB,qBAAqBluB,EAAQiuB,QAC/CE,aAAcv2B,EAAMqB,KAAKC,aAAa8G,EAAQouB,QAAQC,QACtDC,iBAAkB,CAChB7yB,UAAW8D,EAAKwE,SAAS/D,EAAQiqB,cACjCsE,UAAWvuB,EAAQkqB,aAAelqB,EAAQkqB,aAAahtE,WAAQuB,EAC/D8U,QAASysC,EAAQwuB,QAGtB,CA0DD,SAASC,EAAkBC,GAEzB,IADA,IAlDwBloC,EAkDpB7Y,EAAM,GACF1qB,EAAI,EAAGA,EAAIyrE,EAAWvwE,SAAU8E,EACtC0qB,EAAIjuB,MApDkB8mC,EAoDIkoC,EAAWzrE,GAnDhCs8C,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAEjEN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKG,SAAS,EACnDR,EAAKsG,aAAarf,EAAI33B,SAASqvC,YAEjCqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAE1DjI,EAAMiP,IAAI8nB,wBAAwB,CAAC/7B,WAAYpM,EAAIynC,SAEnD1uB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKG,SAAS,EACnDnI,EAAMqB,KAAK6kB,WAAWt3B,EAAI2nC,iBAG9B5uB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAE1DN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAASpd,EAAI8nC,iBAAiB7yB,WAAWyC,YAEhDqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKoB,MAAM,EAAO,MAG3DzB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKM,aAAa,EACvD1Z,EAAI8nC,iBAAiB/6D,aA+BzB,OAAOoa,CACR,CA6CD,SAASihD,EAAcpoC,GAErB,IAAIuW,EAAOwC,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAErEN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKG,SAAS,EACnDR,EAAKsG,aAAarf,EAAI33B,SAASqvC,YAEjCqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAE1DjI,EAAMiP,IAAI8nB,wBAAwB,CAAC/7B,WAAYpM,EAAIynC,SAEnD1uB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKG,SAAS,EACnDnI,EAAMqB,KAAK6kB,WAAWt3B,EAAI2nC,iBAG9B5uB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAE1DN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAASpd,EAAIqoC,iBAAiB3wB,YAErCqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKoB,MAAM,EAAO,QAwB7D,GAnBGxa,EAAIsoC,6BAEL/xB,EAAK7/C,MAAMwC,KAAK8mC,EAAIsoC,6BAItB/xB,EAAK7/C,MAAMwC,KAAK6/C,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAE1EN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAASpd,EAAIuoC,oBAAoB7wB,YAExCqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKoB,MAAM,EAAO,OAI3DjE,EAAK7/C,MAAMwC,KAAK6/C,EAAK7+C,OACnB6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKM,aAAa,EAAO1Z,EAAI0pB,YAGvD1pB,EAAIwoC,0BAA0B7wE,OAAS,EAAG,CAG3C,IADA,IAAI8wE,EAAY1vB,EAAK7+C,OAAO6+C,EAAKG,MAAMmB,iBAAkB,GAAG,EAAM,IAC1D59C,EAAI,EAAGA,EAAIujC,EAAIwoC,0BAA0B7wE,SAAU8E,EAAG,CAC5D,IAAIisE,EAAO1oC,EAAIwoC,0BAA0B/rE,GACzCgsE,EAAU9nE,OAAOzH,KAAKyvE,EAAiBD,GACxC,CACDnyB,EAAK7/C,MAAMwC,KAAKuvE,EACjB,CAED,OAAOlyB,CACR,CAuCD,SAASoyB,EAAiBD,GACxB,IAAIhyE,EAGJ,GAAGgyE,EAAK9uE,OAASw3C,EAAMiP,IAAIC,KAAKkjB,YAC9B9sE,EAAQqiD,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EACvDV,EAAKqE,SAASsrB,EAAKhyE,OAAOghD,iBACvB,GAAGgxB,EAAK9uE,OAASw3C,EAAMiP,IAAIC,KAAKsoB,cACrClyE,EAAQqiD,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKM,aAAa,EAC/DgvB,EAAKhyE,MAAMkC,cACR,GAAG8vE,EAAK9uE,OAASw3C,EAAMiP,IAAIC,KAAKuoB,YAAa,CASlD,IAAIC,EAAa,IAAI3tE,KAAK,wBACtB4tE,EAAa,IAAI5tE,KAAK,wBACtBuiD,EAAOgrB,EAAKhyE,MAChB,GAAmB,iBAATgnD,EAAmB,CAE3B,IAAIib,EAAYx9D,KAAKgO,MAAMu0C,GAKzBA,EAJEvM,MAAMwnB,GAEgB,KAAhBjb,EAAK/lD,OAENohD,EAAKyE,cAAcE,GAGnB3E,EAAKqF,sBAAsBV,GAN3B,IAAIviD,KAAKw9D,EAQnB,CAGCjiE,EADCgnD,GAAQorB,GAAcprB,EAAOqrB,EACtBhwB,EAAK7+C,OACX6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAK+B,SAAS,EACzCpC,EAAK6F,cAAclB,IAEb3E,EAAK7+C,OACX6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKgC,iBAAiB,EACjDrC,EAAKqG,sBAAsB1B,GAEhC,CAMD,OAAO3E,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAEjEN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAASsrB,EAAK9uE,MAAM89C,YAC3BqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAK4B,KAAK,EAAM,CAErDtkD,KAGL,CAmDD,SAASsyE,EAAUx4D,EAAKwvB,EAAK8jC,GAC3B,IAAItqB,EAAU,CAAC,EAEf,IAAIT,EAAK2G,SAAS1f,EAAK8jC,EAAWtqB,EADrB,IACuC,CAClD,IAAI/uC,EAAQ,IAAI7P,MAAM,+EAGtB,MADA6P,EAAMk1C,OAASl1C,EACTA,CACP,CAID,GADkBsuC,EAAKwE,SAAS/D,EAAQgqB,eACrBpyB,EAAMiP,IAAIC,KAAKzmD,KAChC,MAAM,IAAIe,MAAM,wEAIlB,GAAG4+C,EAAQsuB,iBAAkB,CAC3B,IAAI/6D,EAAU,GACd,GAAGqkC,EAAMqB,KAAK7yC,QAAQ45C,EAAQsuB,kBAC5B,IAAI,IAAIrrE,EAAI,EAAGA,EAAI+8C,EAAQsuB,iBAAiBnwE,SAAU8E,EAAG,CACvD,GAAG+8C,EAAQsuB,iBAAiBrrE,GAAG7C,OAASm/C,EAAKK,KAAKM,YAChD,MAAM,IAAI9+C,MAAM,mGAGlBmS,GAAWysC,EAAQsuB,iBAAiBrrE,GAAG/F,KACxC,MAEDqW,EAAUysC,EAAQsuB,iBAEpBt3D,EAAIs3D,iBAAmB,CACrB7yB,UAAW8D,EAAKwE,SAAS/D,EAAQiqB,cACjCsE,UAAW32B,EAAMqB,KAAKC,aAAa8G,EAAQkqB,aAAahtE,OACxDqW,QAASqkC,EAAMqB,KAAKC,aAAa3lC,GAEpC,CAED,GAAGysC,EAAQzsC,QAAS,CACdA,EAAU,GACd,GAAGqkC,EAAMqB,KAAK7yC,QAAQ45C,EAAQzsC,SAC5B,IAAQtQ,EAAI,EAAGA,EAAI+8C,EAAQzsC,QAAQpV,SAAU8E,EAAG,CAC9C,GAAG+8C,EAAQzsC,QAAQtQ,GAAG7C,OAASm/C,EAAKK,KAAKM,YACvC,MAAM,IAAI9+C,MAAM,yFAGlBmS,GAAWysC,EAAQzsC,QAAQtQ,GAAG/F,KAC/B,MAEDqW,EAAUysC,EAAQzsC,QAEpByD,EAAIzD,QAAUqkC,EAAMqB,KAAKC,aAAa3lC,EACvC,CAKD,OAHAyD,EAAInI,QAAUmxC,EAAQnxC,QAAQvQ,WAAW,GACzC0Y,EAAIy4D,WAAazvB,EAEVA,CACR,CAYD,SAAS0vB,EAAgB14D,GACvB,QAAgCvY,IAA7BuY,EAAIs3D,iBAAiBrnE,IACtB,MAAM,IAAI7F,MAAM,gCAGlB,QAAmB3C,IAAhBuY,EAAIzD,QAAuB,CAC5B,IAAIo8D,EAEJ,OAAO34D,EAAIs3D,iBAAiB7yB,WAC1B,KAAK7D,EAAMiP,IAAIC,KAAK,cACpB,KAAKlP,EAAMiP,IAAIC,KAAK,cACpB,KAAKlP,EAAMiP,IAAIC,KAAK,cAClB6oB,EAAO/3B,EAAMG,IAAIQ,uBAAuBvhC,EAAIs3D,iBAAiBrnE,KAC7D,MAEF,KAAK2wC,EAAMiP,IAAIC,KAAV,OACL,KAAKlP,EAAMiP,IAAIC,KAAK,gBAClB6oB,EAAO/3B,EAAM4T,IAAIjT,uBAAuBvhC,EAAIs3D,iBAAiBrnE,KAC7D,MAEF,QACE,MAAM,IAAI7F,MAAM,qCACd4V,EAAIs3D,iBAAiB7yB,WAK3B,GAHAk0B,EAAKrpD,MAAMtP,EAAIs3D,iBAAiBC,WAChCoB,EAAKznC,OAAOlxB,EAAIs3D,iBAAiB/6D,UAE7Bo8D,EAAKnjC,SACP,MAAM,IAAIprC,MAAM,gCAGlB4V,EAAIzD,QAAUo8D,EAAK7wE,MACpB,CACF,CAjsCDgvE,EAAG8B,eAAiB,SAAShM,GAC3B,IAAI5sD,EAAM4gC,EAAMgsB,IAAIxhE,OAAOwhE,GAAK,GAEhC,GAAgB,UAAb5sD,EAAI5W,KAAkB,CACvB,IAAI6Q,EAAQ,IAAI7P,MAAM,+EAGtB,MADA6P,EAAM6yD,WAAa9sD,EAAI5W,KACjB6Q,CACP,CACD,GAAG+F,EAAI+sD,UAAkC,cAAtB/sD,EAAI+sD,SAAS3jE,KAC9B,MAAM,IAAIgB,MAAM,gEAIlB,IAAIolC,EAAM+Y,EAAK6D,QAAQpsC,EAAIyC,MAE3B,OAAOq0D,EAAG+B,gBAAgBrpC,EAC3B,EAUDsnC,EAAGgC,aAAe,SAAS94D,EAAKmwC,GAE9B,IAAI4oB,EAAS,CACX3vE,KAAM,QACNqZ,KAAM8lC,EAAKgE,MAAMvsC,EAAIg5D,UAAU9xB,YAEjC,OAAOtG,EAAMgsB,IAAI1kE,OAAO6wE,EAAQ,CAAC5oB,QAASA,GAC3C,EASD2mB,EAAG+B,gBAAkB,SAASrpC,GAE5B,IAAIwZ,EAAU,CAAC,EACXmG,EAAS,GACb,IAAI5G,EAAK2G,SAAS1f,EAAKsnC,EAAGvuB,KAAKypB,qBAAsBhpB,EAASmG,GAAS,CACrE,IAAIl1C,EAAQ,IAAI7P,MAAM,0EAGtB,MADA6P,EAAMk1C,OAASA,EACTl1C,CACP,CAED,IACI+F,EADAgzD,EAAczqB,EAAKwE,SAAS/D,EAAQgqB,aAGxC,OAAOA,GACL,KAAKpyB,EAAMiP,IAAIC,KAAKmpB,cAClBj5D,EAAM82D,EAAGoC,sBACT,MAEF,KAAKt4B,EAAMiP,IAAIC,KAAK4b,cAClB1rD,EAAM82D,EAAGqC,sBACT,MAEF,KAAKv4B,EAAMiP,IAAIC,KAAKspB,WAClBp5D,EAAM82D,EAAGuC,mBACT,MAEF,QACE,MAAM,IAAIjvE,MAAM,oDACd4oE,EAAc,4BAIpB,OADAhzD,EAAIs5D,SAAStwB,EAAQzsC,QAAQrW,MAAM,IAC5B8Z,CACR,EAED82D,EAAGuC,iBAAmB,WACpB,IAAIr5D,EAAM,KA2RV,OA1RAA,EAAM,CACJ5W,KAAMw3C,EAAMiP,IAAIC,KAAKspB,WACrBvhE,QAAS,EACT0hE,aAAc,GACdC,KAAM,GAENC,QAAS,GAETC,2BAA4B,GAC5BlE,YAAa,KACbmE,YAAa,GAEbL,SAAU,SAAS9pC,GASjB,GAPAgpC,EAAUx4D,EAAKwvB,EAAKsnC,EAAGvuB,KAAKqxB,qBAC5B55D,EAAIu5D,aAAe,GACnBv5D,EAAIw5D,KAAO,GACXx5D,EAAI05D,2BAA6B,GACjC15D,EAAIw1D,YAAc,KAClBx1D,EAAI25D,YAAc,GAEf35D,EAAIy4D,WAAWc,aAEhB,IADA,IAAIM,EAAQ75D,EAAIy4D,WAAWc,aAAarzE,MAChC+F,EAAI,EAAGA,EAAI4tE,EAAM1yE,SAAU8E,EACjC+T,EAAIu5D,aAAa7wE,KAAKk4C,EAAMiP,IAAIukB,oBAAoByF,EAAM5tE,IAK/D,EAED+sE,OAAQ,WAEFh5D,EAAIw1D,aACNx1D,EAAIqiB,OAIN,IADA,IAAIw3C,EAAQ,GACJ5tE,EAAI,EAAGA,EAAI+T,EAAIu5D,aAAapyE,SAAU8E,EAC5C4tE,EAAMnxE,KAAKk4C,EAAMiP,IAAImmB,kBAAkBh2D,EAAIu5D,aAAattE,KAG1D,IAAIutE,EAAO,GAIPJ,EAAa7wB,EAAK7+C,OAAO6+C,EAAKG,MAAMmB,iBAAkB,GAAG,EAAM,CACjEtB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAE1DN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKG,SAAS,EACnDR,EAAKsG,aAAa7uC,EAAInI,SAASqvC,YAEjCqB,EAAK7+C,OACH6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAK4B,KAAK,EACrCxqC,EAAI05D,4BAEN15D,EAAIw1D,gBAmBR,OAhBGqE,EAAM1yE,OAAS,GAEhBiyE,EAAWlzE,MAAM,GAAGA,MAAMwC,KACxB6/C,EAAK7+C,OAAO6+C,EAAKG,MAAMmB,iBAAkB,GAAG,EAAMgwB,IAEnDL,EAAKryE,OAAS,GAEfiyE,EAAWlzE,MAAM,GAAGA,MAAMwC,KACxB6/C,EAAK7+C,OAAO6+C,EAAKG,MAAMmB,iBAAkB,GAAG,EAAM2vB,IAGtDJ,EAAWlzE,MAAM,GAAGA,MAAMwC,KACxB6/C,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAK4B,KAAK,EAC/CxqC,EAAI25D,cAGDpxB,EAAK7+C,OACV6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAE9CN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAAS5sC,EAAI5W,MAAM89C,YAE1BkyB,GAEL,EA0CDU,UAAW,SAASC,GAClB,IAAI9C,EAAS8C,EAAO9C,OAChBE,EAAe4C,EAAO5C,aAC1B,GAAG4C,EAAOC,YAAa,CACrB,IAAI7F,EAAO4F,EAAOC,YACC,iBAAT7F,IACRA,EAAOvzB,EAAMiP,IAAIkmB,mBAAmB5B,IAEtC8C,EAAS9C,EAAK8C,OAAOr7B,WACrBu7B,EAAehD,EAAKgD,YACrB,CACD,IAAIlnE,EAAM8pE,EAAO9pE,IACjB,IAAIA,EACF,MAAM,IAAI7F,MACR,0DAEc,iBAAR6F,IACRA,EAAM2wC,EAAMiP,IAAIoqB,kBAAkBhqE,IAIpC,IAAI4nE,EAAkBkC,EAAOlC,iBAAmBj3B,EAAMiP,IAAIC,KAAK6d,KAC/D,OAAOkK,GACP,KAAKj3B,EAAMiP,IAAIC,KAAK6d,KACpB,KAAK/sB,EAAMiP,IAAIC,KAAKmlB,OACpB,KAAKr0B,EAAMiP,IAAIC,KAAKolB,OACpB,KAAKt0B,EAAMiP,IAAIC,KAAK8H,OACpB,KAAKhX,EAAMiP,IAAIC,KAAKkZ,IAClB,MACF,QACE,MAAM,IAAI5+D,MACR,kEACAytE,GAKJ,IAAIqC,EAA0BH,EAAOG,yBAA2B,GAChE,GAAGA,EAAwB/yE,OAAS,EAAG,CAGrC,IAFA,IAAI6rE,GAAc,EACdoF,GAAgB,EACZnsE,EAAI,EAAGA,EAAIiuE,EAAwB/yE,SAAU8E,EAAG,CACtD,IAAIisE,EAAOgC,EAAwBjuE,GACnC,GAAI+mE,GAAekF,EAAK9uE,OAASw3C,EAAMiP,IAAIC,KAAKkjB,aAOhD,GAAIoF,GAAiBF,EAAK9uE,OAASw3C,EAAMiP,IAAIC,KAAKsoB,oBAEhD,GADAA,GAAgB,EACbpF,EACD,WARF,GADAA,GAAc,EACXoF,EACD,KAWL,CAED,IAAIpF,IAAgBoF,EAClB,MAAM,IAAIhuE,MAAM,yLAKnB,CAED4V,EAAIy5D,QAAQ/wE,KAAK,CACfuH,IAAKA,EACL4H,QAAS,EACTo/D,OAAQA,EACRE,aAAcA,EACdU,gBAAiBA,EACjBE,mBAAoBn3B,EAAMiP,IAAIC,KAAKqqB,cACnCjhB,UAAW,KACXghB,wBAAyBA,EACzBlC,0BAA2B,IAE9B,EAOD31C,KAAM,SAAS1lB,GAcT,IAAIJ,GAbRI,EAAUA,GAAW,CAAC,EAEI,iBAAhBqD,EAAIzD,SAA4C,OAApByD,EAAIw1D,eAExCx1D,EAAIw1D,YAAcjtB,EAAK7+C,OACrB6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAE9CN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAAShM,EAAMiP,IAAIC,KAAKzmD,MAAM69C,cAItC,YAAalnC,IAEXA,EAAIzD,mBAAmBqkC,EAAMqB,KAAK2C,WACnCroC,EAAUyD,EAAIzD,QAAQnU,QACS,iBAAhB4X,EAAIzD,UACnBA,EAAUqkC,EAAMqB,KAAKpjB,WAAW7e,EAAIzD,UAGlCI,EAAQy9D,SACVp6D,EAAIq6D,gBAAkB9xB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKM,aAAa,EAAO3sC,GAEtFyD,EAAIw1D,YAAYtvE,MAAMwC,KAEpB6/C,EAAK7+C,OAAO6+C,EAAKG,MAAMmB,iBAAkB,GAAG,EAAM,CAChDtB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKM,aAAa,EACvD3sC,QAOc,IAAvByD,EAAIy5D,QAAQtyE,QA6EnB,SAAwBmzE,GACtB,IAAI/9D,EAIFA,EAFEyD,EAAIq6D,gBAEIr6D,EAAIq6D,iBAMd99D,EAAUyD,EAAIw1D,YAAYtvE,MAAM,IAEdA,MAAM,GAG1B,IAAIqW,EACF,MAAM,IAAInS,MACR,+DAIJ,IAAI4oE,EAAczqB,EAAKwE,SAAS/sC,EAAIw1D,YAAYtvE,MAAM,GAAGA,OAGrDkC,EAAQmgD,EAAKgE,MAAMhwC,GAUvB,IAAI,IAAIswC,KANRzkD,EAAMmjD,UAENhD,EAAK+C,kBAAkBljD,GACvBA,EAAQA,EAAM8+C,WAGCozB,EACbA,EAAIztB,GAAKv9B,QAAQ4hB,OAAO9oC,GAK1B,IADA,IAAIiwE,EAAc,IAAI1tE,KACdsB,EAAI,EAAGA,EAAI+T,EAAIy5D,QAAQtyE,SAAU8E,EAAG,CAC1C,IAAI8tE,EAAS/5D,EAAIy5D,QAAQxtE,GAEzB,GAA6C,IAA1C8tE,EAAOG,wBAAwB/yE,QAGhC,GAAG6rE,IAAgBpyB,EAAMiP,IAAIC,KAAKzmD,KAChC,MAAM,IAAIe,MACR,qHAGC,CAGL2vE,EAAOjC,4BAA8BvvB,EAAK7+C,OACxC6+C,EAAKG,MAAMmB,iBAAkB,GAAG,EAAM,IAOxC,IAHA,IAAIouB,EAAY1vB,EAAK7+C,OACnB6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAK4B,KAAK,EAAM,IAErC+vB,EAAK,EAAGA,EAAKR,EAAOG,wBAAwB/yE,SAAUozE,EAAI,CAChE,IAAIrC,EAAO6B,EAAOG,wBAAwBK,GACvCrC,EAAK9uE,OAASw3C,EAAMiP,IAAIC,KAAKsoB,cAE9BF,EAAKhyE,MAAQo0E,EAAIP,EAAOlC,iBAAiBtwB,SACjC2wB,EAAK9uE,OAASw3C,EAAMiP,IAAIC,KAAKuoB,cAEjCH,EAAKhyE,QACPgyE,EAAKhyE,MAAQmyE,IAOjBJ,EAAU/xE,MAAMwC,KAAKyvE,EAAiBD,IACtC6B,EAAOjC,4BAA4B5xE,MAAMwC,KAAKyvE,EAAiBD,GAChE,CAGD9vE,EAAQmgD,EAAKgE,MAAM0rB,GAAW/wB,WAC9B6yB,EAAO/iB,GAAG1nC,QAAQ4hB,OAAO9oC,EAC1B,CAGD2xE,EAAO7gB,UAAY6gB,EAAO9pE,IAAIoyB,KAAK03C,EAAO/iB,GAAI,oBAC/C,CAGDh3C,EAAI25D,YA8eR,SAAwBF,GAEtB,IADA,IAAI9iD,EAAM,GACF1qB,EAAI,EAAGA,EAAIwtE,EAAQtyE,SAAU8E,EACnC0qB,EAAIjuB,KAAKkvE,EAAc6B,EAAQxtE,KAEjC,OAAO0qB,CACR,CApfqB6jD,CAAex6D,EAAIy5D,QACtC,CAlKGgB,CA+BJ,WAGE,IAFA,IAAIH,EAAM,CAAC,EAEHruE,EAAI,EAAGA,EAAI+T,EAAIy5D,QAAQtyE,SAAU8E,EAAG,CAC1C,IAAI8tE,EAAS/5D,EAAIy5D,QAAQxtE,IACrB4gD,EAAMktB,EAAOlC,mBACLyC,IAEVA,EAAIztB,GAAOjM,EAAMoW,GAAGpW,EAAMiP,IAAIC,KAAKjD,IAAMnjD,UAEE,IAA1CqwE,EAAOG,wBAAwB/yE,OAEhC4yE,EAAO/iB,GAAKsjB,EAAIztB,GAKhBktB,EAAO/iB,GAAKpW,EAAMoW,GAAGpW,EAAMiP,IAAIC,KAAKjD,IAAMnjD,QAE7C,CAID,IAAI,IAAImjD,KADR7sC,EAAI05D,2BAA6B,GAClBY,EACbt6D,EAAI05D,2BAA2BhxE,KAE7B6/C,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAE1DN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAASC,GAAK3F,YAErBqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKoB,MAAM,EAAO,OAI/D,OAAOswB,CACR,CAtEaI,GAIX,EAEDt5C,OAAQ,WACN,MAAM,IAAIh3B,MAAM,qDACjB,EAODuwE,eAAgB,SAASxG,GAEJ,iBAATA,IACRA,EAAOvzB,EAAMiP,IAAIkmB,mBAAmB5B,IAEtCn0D,EAAIu5D,aAAa7wE,KAAKyrE,EACvB,EAODyG,6BAA8B,SAASC,GACrC,MAAM,IAAIzwE,MAAM,0CACjB,EAwIJ,EAOD0sE,EAAGqC,oBAAsB,WACvB,IAAIn5D,EAAM,KA8BV,OA7BAA,EAAM,CACJ5W,KAAMw3C,EAAMiP,IAAIC,KAAK4b,cACrB7zD,QAAS,EACTy/D,iBAAkB,CAChB7yB,UAAW7D,EAAMiP,IAAIC,KAAK,eAQ5BwpB,SAAU,SAAS9pC,GAEjBgpC,EAAUx4D,EAAKwvB,EAAKsnC,EAAGvuB,KAAKwqB,uBAC7B,EAOD3xB,QAAS,SAASnxC,QACLxI,IAARwI,IACD+P,EAAIs3D,iBAAiBrnE,IAAMA,GAE7ByoE,EAAgB14D,EACjB,EAGJ,EAOD82D,EAAGoC,oBAAsB,WACvB,IAAIl5D,EAAM,KAkOV,OAjOAA,EAAM,CACJ5W,KAAMw3C,EAAMiP,IAAIC,KAAKmpB,cACrBphE,QAAS,EACT6/D,WAAY,GACZJ,iBAAkB,CAChB7yB,UAAW7D,EAAMiP,IAAIC,KAAK,eAQ5BwpB,SAAU,SAAS9pC,GAEjB,IAAIwZ,EAAUwvB,EAAUx4D,EAAKwvB,EAAKsnC,EAAGvuB,KAAKuyB,wBAC1C96D,EAAI03D,WA2RV,SAA6BqD,GAE3B,IADA,IAAIpkD,EAAM,GACF1qB,EAAI,EAAGA,EAAI8uE,EAAM5zE,SAAU8E,EACjC0qB,EAAIjuB,KAAKquE,EAAmBgE,EAAM9uE,KAEpC,OAAO0qB,CACR,CAjSsBqkD,CAAoBhyB,EAAQiyB,eAAe/0E,MAC7D,EAED8yE,OAAQ,WAEN,OAAOzwB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAEjEN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAAS5sC,EAAI5W,MAAM89C,YAE1BqB,EAAK7+C,OAAO6+C,EAAKG,MAAMmB,iBAAkB,GAAG,EAAM,CAChDtB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAE1DN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKG,SAAS,EACnDR,EAAKsG,aAAa7uC,EAAInI,SAASqvC,YAEjCqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAK4B,KAAK,EAC/CitB,EAAkBz3D,EAAI03D,aAExBnvB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,GA6ejCqyB,EA5eKl7D,EAAIs3D,iBA6ejC,CAEL/uB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAAShM,EAAMiP,IAAIC,KAAKzmD,MAAM69C,YAErCqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAE1DN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAASsuB,EAAGz2B,WAAWyC,YAE7Bg0B,EAAG3D,UAEFhvB,EAAK7+C,OACH6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKM,aAAa,EAC7CgyB,EAAG3D,UAAUrwB,iBAHfz/C,IAMJ8gD,EAAK7+C,OAAO6+C,EAAKG,MAAMmB,iBAAkB,GAAG,EAAM,CAChDtB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKM,aAAa,EACvDgyB,EAAG3+D,QAAQ2qC,uBApBnB,IAAiCg0B,CAxe5B,EASDC,cAAe,SAAShH,GAGtB,IAFA,IAAIiH,EAAQjH,EAAK8C,OAAOr7B,WAEhB3vC,EAAI,EAAGA,EAAI+T,EAAI03D,WAAWvwE,SAAU8E,EAAG,CAC7C,IAAIm3B,EAAIpjB,EAAI03D,WAAWzrE,GACnBovE,EAAQj4C,EAAE6zC,OAEd,GAAG7zC,EAAE+zC,eAAiBhD,EAAKgD,cAIxBkE,EAAMl0E,SAAWi0E,EAAMj0E,OAA1B,CAKA,IADA,IAAI+V,GAAQ,EACJ3L,EAAI,EAAGA,EAAI6pE,EAAMj0E,SAAUoK,EACjC,GAAG8pE,EAAM9pE,GAAGnI,OAASgyE,EAAM7pE,GAAGnI,MAC5BiyE,EAAM9pE,GAAGrL,QAAUk1E,EAAM7pE,GAAGrL,MAAO,CACnCgX,GAAQ,EACR,KACD,CAGH,GAAGA,EACD,OAAOkmB,CAZR,CAcF,CAED,OAAO,IACR,EAQDge,QAAS,SAASk6B,EAAWC,GAC3B,QAAgC9zE,IAA7BuY,EAAIs3D,iBAAiBrnE,UAAmCxI,IAAd6zE,QAC/B7zE,IAAZ8zE,EACA,OAAOD,EAAUhE,iBAAiB7yB,WAChC,KAAK7D,EAAMiP,IAAIC,KAAKqqB,cACpB,KAAKv5B,EAAMiP,IAAIC,KAAK0rB,OAClB,IAAIvrE,EAAMsrE,EAAQn6B,QAAQk6B,EAAUhE,iBAAiB/6D,SACrDyD,EAAIs3D,iBAAiBrnE,IAAM2wC,EAAMqB,KAAKC,aAAajyC,GACnD,MAEF,QACE,MAAM,IAAI7F,MAAM,sCACLkxE,EAAUhE,iBAAiB7yB,WAI5Ci0B,EAAgB14D,EACjB,EAODy7D,aAAc,SAAStH,GACrBn0D,EAAI03D,WAAWhvE,KAAK,CAClBmP,QAAS,EACTo/D,OAAQ9C,EAAK8C,OAAOr7B,WACpBu7B,aAAchD,EAAKgD,aACnBG,iBAAkB,CAIhB7yB,UAAW7D,EAAMiP,IAAIC,KAAKqqB,cAC1BlqE,IAAKkkE,EAAKnc,YAGf,EAeDrW,QAAS,SAAS1xC,EAAK6wC,GAErB,QAAoCr5C,IAAjCuY,EAAIs3D,iBAAiB/6D,QAAuB,CAI7C,IAAIm/D,EAAQ9P,EAAO+P,EACnB,OAJA76B,EAASA,GAAU9gC,EAAIs3D,iBAAiB7yB,UACxCx0C,EAAMA,GAAO+P,EAAIs3D,iBAAiBrnE,IAG3B6wC,GACL,KAAKF,EAAMiP,IAAIC,KAAK,cAClB4rB,EAAS,GACT9P,EAAQ,GACR+P,EAAS/6B,EAAMG,IAAIM,uBACnB,MAEF,KAAKT,EAAMiP,IAAIC,KAAK,cAClB4rB,EAAS,GACT9P,EAAQ,GACR+P,EAAS/6B,EAAMG,IAAIM,uBACnB,MAEF,KAAKT,EAAMiP,IAAIC,KAAK,cAClB4rB,EAAS,GACT9P,EAAQ,GACR+P,EAAS/6B,EAAMG,IAAIM,uBACnB,MAEF,KAAKT,EAAMiP,IAAIC,KAAK,gBAClB4rB,EAAS,GACT9P,EAAQ,EACR+P,EAAS/6B,EAAM4T,IAAInT,uBACnB,MAEF,QACE,MAAM,IAAIj3C,MAAM,qCAAuC02C,GAG3D,QAAWr5C,IAARwI,EACDA,EAAM2wC,EAAMqB,KAAKC,aAAatB,EAAMnvC,OAAOy1C,SAASw0B,SAC/C,GAAGzrE,EAAI9I,UAAYu0E,EACxB,MAAM,IAAItxE,MAAM,uCACL6F,EAAI9I,SAAW,oBAAsBu0E,EAAS,KAK3D17D,EAAIs3D,iBAAiB7yB,UAAY3D,EACjC9gC,EAAIs3D,iBAAiBrnE,IAAMA,EAC3B+P,EAAIs3D,iBAAiBC,UAAY32B,EAAMqB,KAAKC,aAC1CtB,EAAMnvC,OAAOy1C,SAAS0kB,IAExB,IAAI+M,EAAOgD,EAAO1rE,GAMlB,GALA0oE,EAAKrpD,MAAMtP,EAAIs3D,iBAAiBC,UAAUvsB,QAC1C2tB,EAAKznC,OAAOlxB,EAAIzD,UAIZo8D,EAAKnjC,SACP,MAAM,IAAIprC,MAAM,gCAGlB4V,EAAIs3D,iBAAiB/6D,QAAUo8D,EAAK7wE,MACrC,CAGD,IAAI,IAAImE,EAAI,EAAGA,EAAI+T,EAAI03D,WAAWvwE,SAAU8E,EAAG,CAC7C,IAAIqvE,EAAYt7D,EAAI03D,WAAWzrE,GAG/B,QAA0CxE,IAAvC6zE,EAAUhE,iBAAiB/6D,QAA9B,CAIA,GAAO++D,EAAUhE,iBAAiB7yB,YAC3B7D,EAAMiP,IAAIC,KAAKqqB,cAOlB,MAAM,IAAI/vE,MAAM,sCACdkxE,EAAUhE,iBAAiB7yB,WAP7B62B,EAAUhE,iBAAiB/6D,QACzB++D,EAAUhE,iBAAiBrnE,IAAI0xC,QAC7B3hC,EAAIs3D,iBAAiBrnE,IAAI5G,KANhC,CAaF,CACF,EAGJ,kBChsBD,IAAIu3C,EAAQrqB,EAAQ,OACpBA,EAAQ,OACRA,EAAQ,OAGR,IAAIgyB,EAAO3H,EAAM2H,KAGbqzB,EAAM/kD,EAAOiE,QAAU8lB,EAAMi7B,UAAYj7B,EAAMi7B,WAAa,CAAC,EACjEj7B,EAAMkyB,MAAQlyB,EAAMkyB,OAAS,CAAC,EAC9BlyB,EAAMkyB,MAAMvqB,KAAOqzB,EAEnB,IAAI5J,EAAuB,CACzB9nE,KAAM,cACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,0BACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKK,IAChBH,aAAa,EACbE,QAAS,eACR,CACD9+C,KAAM,sBACNu+C,SAAUF,EAAKG,MAAMmB,iBACrBzgD,KAAM,EACN0/C,aAAa,EACbsG,UAAU,EACVhG,YAAa,aAGjBwyB,EAAI5J,qBAAuBA,EAE3B,IAAI8J,EAAgC,CAClC5xE,KAAM,uBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,mCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKK,IAChBH,aAAa,EACbE,QAAS,eACR,CACD9+C,KAAM,kDACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,4DACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKK,IAChBH,aAAa,EACbE,QAAS,gBACR,CACD9+C,KAAM,4DACNu+C,SAAUF,EAAKG,MAAMC,UACrBS,YAAa,kBAEd,CACDl/C,KAAM,wCACNu+C,SAAUF,EAAKG,MAAMmB,iBACrBzgD,KAAM,EA2BN4/C,QAAS,mBACTI,YAAa,0BAIjBwyB,EAAId,uBAAyB,CAC3B5wE,KAAM,gBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,wBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKG,QAChBD,aAAa,EACbE,QAAS,WACR,CACD9+C,KAAM,+BACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAK4B,IAChB1B,aAAa,EACbM,YAAa,mBACZv4C,OAAOirE,IAGZF,EAAI7I,uBAAyB,CAC3B7oE,KAAM,gBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,wBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKG,QAChBD,aAAa,EACbE,QAAS,YACRn4C,OAAOirE,IAGZ,IAAIC,EAAkB,CACpB7xE,KAAM,aACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,qBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKG,QAChBD,aAAa,GACZ,CACD5+C,KAAM,mCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,0CACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACbM,YAAa,UACZ,CACDl/C,KAAM,gDACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKG,QAChBD,aAAa,EACbE,QAAS,YAEV,CACD9+C,KAAM,6BACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,uCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKK,IAChBH,aAAa,EACbE,QAAS,mBACR,CACD9+C,KAAM,uCACNu+C,SAAUF,EAAKG,MAAMC,UACrBG,aAAa,EACbM,YAAa,kBACbgG,UAAU,KAEX,CACDllD,KAAM,qCACNu+C,SAAUF,EAAKG,MAAMmB,iBACrBzgD,KAAM,EACN0/C,aAAa,EACbsG,UAAU,EACVpG,QAAS,2BACR,CACD9+C,KAAM,uCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACbE,QAAS,sBACR,CACD9+C,KAAM,6BACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKM,YAChBJ,aAAa,EACbE,QAAS,aACR,CACD9+C,KAAM,uCACNu+C,SAAUF,EAAKG,MAAMmB,iBACrBzgD,KAAM,EACN0/C,aAAa,EACbsG,UAAU,EACVpG,QAAS,+BAIb4yB,EAAIhC,oBAAsB,CACxB1vE,KAAM,aACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,qBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKG,QAChBD,aAAa,EACbE,QAAS,WACR,CACD9+C,KAAM,8BACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAK4B,IAChB1B,aAAa,EACbM,YAAa,oBAEf4oB,EACA,CACE9nE,KAAM,0BACNu+C,SAAUF,EAAKG,MAAMmB,iBACrBzgD,KAAM,EACNgmD,UAAU,EACVhG,YAAa,gBACZ,CACDl/C,KAAM,wCACNu+C,SAAUF,EAAKG,MAAMmB,iBACrBzgD,KAAM,EACNgmD,UAAU,EACVhG,YAAa,QACZ,CACDl/C,KAAM,yBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAK4B,IAChBxB,QAAS,cACToG,UAAU,EACVlpD,MAAO,CAAC61E,MAIZH,EAAI5E,uBAAyB,CAC3B9sE,KAAM,gBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,wBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKG,QAChBD,aAAa,EACbE,QAAS,WACR,CACD9+C,KAAM,gCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,uCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACbM,YAAa,UACZ,CACDl/C,KAAM,6CACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKG,QAChBD,aAAa,EACbE,QAAS,YAEV,CACD9+C,KAAM,uCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,iDACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKK,IAChBH,aAAa,EACbE,QAAS,gBACR,CACD9+C,KAAM,iDACNu+C,SAAUF,EAAKG,MAAMC,UACrBG,aAAa,EACbM,YAAa,eACbgG,UAAU,KAEX,CACDllD,KAAM,6BACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKM,YAChBJ,aAAa,EACbE,QAAS,6BC/Yb,IAAIpI,EAAQrqB,EAAQ,OACpBA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OAGR,IAAIgyB,EAAO3H,EAAM2H,KAGbsH,EAAMh5B,EAAOiE,QAAU8lB,EAAMiP,IAAMjP,EAAMiP,KAAO,CAAC,EAWrDA,EAAImsB,SAAW,SAASpP,GACtB,IAAI5sD,EAAM4gC,EAAMgsB,IAAIxhE,OAAOwhE,GAAK,GAChC,GAAG5sD,EAAI+sD,UAAkC,cAAtB/sD,EAAI+sD,SAAS3jE,KAC9B,MAAM,IAAIgB,MAAM,mDAElB,OAAOw2C,EAAMqB,KAAKC,aAAaliC,EAAIyC,KACpC,EASDotC,EAAIoqB,kBAAoB,SAASrN,GAC/B,IAAI5sD,EAAM4gC,EAAMgsB,IAAIxhE,OAAOwhE,GAAK,GAEhC,GAAgB,gBAAb5sD,EAAI5W,MAAuC,oBAAb4W,EAAI5W,KAA4B,CAC/D,IAAI6Q,EAAQ,IAAI7P,MAAM,sGAGtB,MADA6P,EAAM6yD,WAAa9sD,EAAI5W,KACjB6Q,CACP,CACD,GAAG+F,EAAI+sD,UAAkC,cAAtB/sD,EAAI+sD,SAAS3jE,KAC9B,MAAM,IAAIgB,MAAM,6DAIlB,IAAIolC,EAAM+Y,EAAK6D,QAAQpsC,EAAIyC,MAE3B,OAAOotC,EAAIqI,mBAAmB1oB,EAC/B,EAUDqgB,EAAIosB,gBAAkB,SAAShsE,EAAKkgD,GAElC,IAAInwC,EAAM,CACR5W,KAAM,kBACNqZ,KAAM8lC,EAAKgE,MAAMsD,EAAIud,iBAAiBn9D,IAAMi3C,YAE9C,OAAOtG,EAAMgsB,IAAI1kE,OAAO8X,EAAK,CAACmwC,QAASA,GACxC,EAUDN,EAAIqsB,oBAAsB,SAASrsB,EAAKM,GAEtC,IAAInwC,EAAM,CACR5W,KAAM,cACNqZ,KAAM8lC,EAAKgE,MAAMsD,GAAK3I,YAExB,OAAOtG,EAAMgsB,IAAI1kE,OAAO8X,EAAK,CAACmwC,QAASA,GACxC,mBC9FD,IAAIvP,EAAQrqB,EAAQ,OACpBA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OAER,WAGA,GAAGqqB,EAAMu7B,MACPtlD,EAAOiE,QAAU8lB,EAAMu7B,UADzB,CAMA,IAAIA,EAAQtlD,EAAOiE,QAAU8lB,EAAMu7B,MAAQv7B,EAAMu7B,OAAS,CAAC,EAEvD/5C,EAAawe,EAAM+V,KAAKv0B,WAGxBg6C,EAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACrCC,EAAS,IAAIj6C,EAAW,MAC5Bi6C,EAAO9b,QAAQ,IACf,IAAIW,EAAQ,SAAS/mC,EAAGmK,GAAI,OAAOnK,EAAEmK,CAAG,EA+BxC63C,EAAMG,sBAAwB,SAASnzC,EAAMxsB,EAASoV,GAC9B,mBAAZpV,IACRoV,EAAWpV,EACXA,EAAU,CAAC,GAKb,IAAI8nC,GAHJ9nC,EAAUA,GAAW,CAAC,GAGE8nC,WAAa,WACb,iBAAdA,IACRA,EAAY,CAACv6C,KAAMu6C,IAErBA,EAAU9nC,QAAU8nC,EAAU9nC,SAAW,CAAC,EAG1C,IAAI4oD,EAAO5oD,EAAQ4oD,MAAQ3kB,EAAMnvC,OAC7Bi4B,EAAM,CAERq7B,UAAW,SAAS5qC,GAElB,IADA,IAAI3N,EAAI+4C,EAAK9e,aAAatsB,EAAEhzB,QACpB8E,EAAI,EAAGA,EAAIkuB,EAAEhzB,SAAU8E,EAC7BkuB,EAAEluB,GAAKugB,EAAEllB,WAAW2E,EAEvB,GAGH,GAAsB,aAAnBw4C,EAAUv6C,KACX,OAMJ,SAA2Bi/B,EAAMO,EAAK/sB,EAASoV,GAC7C,GAAG,YAAapV,EACd,OA0DJ,SAAsCwsB,EAAMO,EAAK/sB,EAASoV,GAExD,GAAqB,oBAAXwqD,OACR,OAAOC,EAAgCrzC,EAAMO,EAAK/sB,EAASoV,GAI7D,IAAI/T,EAAMy+D,EAAetzC,EAAMO,GAG3BgzC,EAAa//D,EAAQggE,QACrBC,EAAWjgE,EAAQigE,UAAY,IAC/B3vC,EAAmB,GAAX2vC,EAAgB,EACxBC,EAAelgE,EAAQkgE,cAAgB,wBAC3C,IAAmB,IAAhBH,EACD,OAAO97B,EAAMqB,KAAK66B,eAAc,SAASlvD,EAAKmvD,GACzCnvD,IAEDmvD,EAAQ,GAEVL,EAAaK,EAAQ,EACrBrW,GACD,IAIH,SAASA,IAEPgW,EAAat2E,KAAKq0B,IAAI,EAAGiiD,GAQzB,IADA,IAAIC,EAAU,GACN1wE,EAAI,EAAGA,EAAIywE,IAAczwE,EAE/B0wE,EAAQ1wE,GAAK,IAAIswE,OAAOM,GAK1B,IAAQ5wE,EAAI,EAAGA,EAAIywE,IAAczwE,EAC/B0wE,EAAQ1wE,GAAGyjB,iBAAiB,UAAWstD,GAiBzC,IAAIC,GAAQ,EACZ,SAASD,EAAc1qE,GAErB,IAAG2qE,EAAH,CAIA,EACA,IAAI5zE,EAAOiJ,EAAEjJ,KACb,GAAGA,EAAK4zE,MAAO,CAEb,IAAI,IAAIhxE,EAAI,EAAGA,EAAI0wE,EAAQx1E,SAAU8E,EACnC0wE,EAAQ1wE,GAAGixE,YAGb,OADAD,GAAQ,EACDlrD,EAAS,KAAM,IAAIqQ,EAAW/4B,EAAK8yE,MAAO,IAClD,CAGEn+D,EAAIorB,YAAcD,IACnBnrB,EAAMy+D,EAAetzC,EAAMO,IAI7B,IAAIyzC,EAAMn/D,EAAIzO,SAAS,IAGvB+C,EAAEgI,OAAO8iE,YAAY,CACnBD,IAAKA,EACLP,SAAUA,IAGZ5+D,EAAIomD,WAAWn3B,EAAO,EA3BrB,CA4BF,CACF,CAvEDy5B,GAwED,CA1JU2W,CAA6Bl0C,EAAMO,EAAK/sB,EAASoV,GAE1D,OAAOyqD,EAAgCrzC,EAAMO,EAAK/sB,EAASoV,EAC5D,CAXUurD,CAAkBn0C,EAAMO,EAAK+a,EAAU9nC,QAASoV,GAGzD,MAAM,IAAI3nB,MAAM,uCAAyCq6C,EAAUv6C,KACpE,CAzEA,CAkFD,SAASsyE,EAAgCrzC,EAAMO,EAAK/sB,EAASoV,GAE3D,IAAI/T,EAAMy+D,EAAetzC,EAAMO,GAS3B6zC,EA0KN,SAA6Bp0C,GAC3B,OAAGA,GAAQ,IAAY,GACpBA,GAAQ,IAAY,GACpBA,GAAQ,IAAY,GACpBA,GAAQ,IAAY,GACpBA,GAAQ,IAAY,EACpBA,GAAQ,IAAY,EACpBA,GAAQ,IAAY,EACpBA,GAAQ,IAAY,EACpBA,GAAQ,IAAY,EACpBA,GAAQ,IAAY,EACpBA,GAAQ,KAAa,EACjB,CACR,CAvLeq0C,CAAoBx/D,EAAIorB,aACnC,qBAAsBzsB,IACvB4gE,EAAU5gE,EAAQ8gE,kBAOpB,IAAIC,EAAe,GAChB,iBAAkB/gE,IACnB+gE,EAAe/gE,EAAQ+gE,cAGzBC,EAAU3/D,EAAKmrB,EAAMO,EAjBN,EAiBqB6zC,EAASG,EAAc3rD,EAC5D,CAED,SAAS4rD,EAAU3/D,EAAKmrB,EAAMO,EAAKk0C,EAAUL,EAASG,EAAc3rD,GAClE,IAAIzC,GAAS,IAAI3kB,KACjB,EAAG,CAMD,GAJGqT,EAAIorB,YAAcD,IACnBnrB,EAAMy+D,EAAetzC,EAAMO,IAG1B1rB,EAAIwrB,gBAAgB+zC,GACrB,OAAOxrD,EAAS,KAAM/T,GAGxBA,EAAIomD,WAAWgY,EAAawB,IAAa,GAAI,EAC9C,OAAOF,EAAe,IAAO,IAAI/yE,KAAS2kB,EAAQouD,GAGnD98B,EAAMqB,KAAKstB,cAAa,WACtBoO,EAAU3/D,EAAKmrB,EAAMO,EAAKk0C,EAAUL,EAASG,EAAc3rD,EAC5D,GACF,CAgHD,SAAS0qD,EAAetzC,EAAMO,GAC5B,IAAI1rB,EAAM,IAAIokB,EAAW+G,EAAMO,GAE3Bm0C,EAAQ10C,EAAO,EAMnB,OALInrB,EAAI6mD,QAAQgZ,IACd7/D,EAAI8mD,UAAU1iC,EAAWw/B,IAAIx9B,UAAUy5C,GAAQ3c,EAAOljD,GAGxDA,EAAIomD,WAAW,GAAKpmD,EAAIkoB,IAAIm2C,GAAQ7W,YAAa,GAC1CxnD,CACR,CAjQD,oCCDI4iC,EAAQrqB,EAAQ,OACpBA,EAAQ,OAER,IAAIunD,EAAU,MACXl9B,EAAMqB,KAAK6sB,UAAaluB,EAAMjkC,QAAQ6hD,mBACtC53D,EAAQoa,SAAS,iBAClB88D,EAAUvnD,EAAQ,SAITM,EAAOiE,QAAU8lB,EAAM2kB,KAAO3kB,EAAM2kB,MAAQ,CAAC,GAoBnD77D,OAAS,SAASq0E,GAiBrB,IAhBA,IAAIlf,EAAM,CACRkf,OAAQA,EACR9tE,IAAK,KACLunD,KAAM,KACNr4B,KAAM,KAEN6+C,QAAS,EAETC,UAAW,EAEXC,SAAU,IAIRlnB,EAAK+mB,EAAO/mB,GACZmnB,EAAQ,IAAIhvE,MAAM,IACdlD,EAAI,EAAGA,EAAI,KAAMA,EACvBkyE,EAAMlyE,GAAK+qD,EAAGttD,SAgJhB,SAAS00E,IACP,GAAGvf,EAAIsf,MAAM,GAAG3U,eAAiB,GAC/B,OAAO6U,IAGT,IAAIC,EAAU,GAAKzf,EAAIsf,MAAM,GAAG3U,eAAkB,EAClD3K,EAAI0f,QAAQ1f,EAAI2f,aAAaF,IAC7BD,GACD,CAKD,SAASA,IAEPxf,EAAImf,QAA2B,aAAhBnf,EAAImf,QAA0B,EAAInf,EAAImf,QAAU,EAO/D,IAAIhnB,EAAK6H,EAAIkf,OAAO/mB,GAAGttD,SAGvBstD,EAAG9lB,OAAO2tB,EAAIqf,UAKd,IADA,IAAIO,EAAS,EACL5rC,EAAI,EAAGA,EAAI,KAAMA,EACpBgsB,EAAImf,QAAUS,GAAW,IAC1BznB,EAAG9lB,OAAO2tB,EAAIsf,MAAMtrC,GAAG0U,SAASL,YAChC2X,EAAIsf,MAAMtrC,GAAGvjB,SAEfmvD,IAAmB,EAIrB5f,EAAIqf,SAAWlnB,EAAGzP,SAASL,WAM3B8P,EAAG1nC,QACH0nC,EAAG9lB,OAAO2tB,EAAIqf,UACd,IAAIQ,EAAY1nB,EAAGzP,SAASL,WAG5B2X,EAAI5uD,IAAM4uD,EAAIkf,OAAOY,UAAU9f,EAAIqf,UACnCrf,EAAIrH,KAAOqH,EAAIkf,OAAOa,WAAWF,GACjC7f,EAAIof,UAAY,CACjB,CAUD,SAASY,EAAgBP,GAEvB,IAAIQ,EAAkB,KAClBC,EAAcn+B,EAAMqB,KAAK88B,YACzBjB,EAAUiB,EAAYlQ,QAAUkQ,EAAYC,SAC7ClB,GAAWA,EAAQgB,kBACpBA,EAAkB,SAASrgD,GACzB,OAAOq/C,EAAQgB,gBAAgBrgD,EAChC,GAGH,IAAIjS,EAAIo0B,EAAMqB,KAAKC,eACnB,GAAG48B,EACD,KAAMtyD,EAAErlB,SAAWm3E,GAAQ,CAGzB,IAAIxuE,EAAQ1J,KAAKq0B,IAAI,EAAGr0B,KAAKoR,IAAI8mE,EAAS9xD,EAAErlB,SAAU,OAAS,GAC3D83E,EAAU,IAAI3mD,YAAYlyB,KAAKC,MAAMyJ,IACzC,IACEgvE,EAAgBG,GAChB,IAAI,IAAIhzE,EAAI,EAAGA,EAAIgzE,EAAQ93E,SAAU8E,EACnCugB,EAAEqlC,SAASotB,EAAQhzE,GAQtB,CANC,MAAMqG,GAEN,KAAmC,oBAAvB4sE,oBACV5sE,aAAa4sE,oBACb,MAAM5sE,CAET,CACF,CAIH,GAAGka,EAAErlB,SAAWm3E,EAMd,IAFA,IAAIa,EAAIC,EAAIzxD,EACR6pC,EAAOpxD,KAAKC,MAAsB,MAAhBD,KAAKqL,UACrB+a,EAAErlB,SAAWm3E,GAAQ,CACzBc,EAAK,OAAgB,MAAP5nB,GAEd4nB,IAAY,OADZD,EAAK,OAAS3nB,GAAQ,OACC,GAGvBA,EAAY,YADZ4nB,GAAW,YADXA,GAAMD,GAAM,MACcC,GAAM,KAIhC,IAAQnzE,EAAI,EAAGA,EAAI,IAAKA,EAEtB0hB,EAAO6pC,KAAUvrD,GAAK,GACtB0hB,GAAQvnB,KAAKC,MAAsB,IAAhBD,KAAKqL,UACxB+a,EAAE21B,QAAe,IAAPx0B,EAEb,CAGH,OAAOnB,EAAE06B,SAASo3B,EACnB,CA4FD,OApWAzf,EAAIsf,MAAQA,EAGZtf,EAAIwgB,KAAO,EAYXxgB,EAAI6H,SAAW,SAAS52D,EAAOiiB,GAE7B,IAAIA,EACF,OAAO8sC,EAAIygB,aAAaxvE,GAI1B,IAAIgxC,EAAS+d,EAAIkf,OAAOj9B,OACpBy+B,EAAY1gB,EAAIkf,OAAOwB,UACvBZ,EAAY9f,EAAIkf,OAAOY,UACvBC,EAAa/f,EAAIkf,OAAOa,WACxBpyD,EAAIo0B,EAAMqB,KAAKC,eAOnB2c,EAAI5uD,IAAM,KAIV,SAASy2D,EAAS94C,GAChB,GAAGA,EACD,OAAOmE,EAASnE,GAIlB,GAAGpB,EAAErlB,UAAY2I,EACf,OAAOiiB,EAAS,KAAMvF,EAAE06B,SAASp3C,IAIhC+uD,EAAIof,UAAY,UACjBpf,EAAI5uD,IAAM,MAGZ,GAAe,OAAZ4uD,EAAI5uD,IAEL,OAAO2wC,EAAMqB,KAAKu9B,UAAS,YAoEjC,SAAiBztD,GACf,GAAG8sC,EAAIsf,MAAM,GAAG3U,eAAiB,GAE/B,OADA6U,IACOtsD,IAGT,IAAIusD,EAAU,GAAKzf,EAAIsf,MAAM,GAAG3U,eAAkB,EAClD3K,EAAI4gB,SAASnB,GAAQ,SAAS1wD,EAAKxlB,GACjC,GAAGwlB,EACD,OAAOmE,EAASnE,GAElBixC,EAAI0f,QAAQn2E,GACZi2E,IACAtsD,GACD,GACF,CAlFO2tD,CAAQhZ,EACT,IAIH,IAAIt+D,EAAQ04C,EAAO+d,EAAI5uD,IAAK4uD,EAAIrH,MAChCqH,EAAIof,WAAa71E,EAAMjB,OACvBqlB,EAAE45B,SAASh+C,GAGXy2D,EAAI5uD,IAAM0uE,EAAU79B,EAAO+d,EAAI5uD,IAAKsvE,EAAU1gB,EAAIrH,QAClDqH,EAAIrH,KAAOonB,EAAW99B,EAAO+d,EAAI5uD,IAAK4uD,EAAIrH,OAE1C5W,EAAMqB,KAAKstB,aAAa7I,EACzB,CAlCDA,EAmCD,EASD7H,EAAIygB,aAAe,SAASxvE,GAE1B,IAAIgxC,EAAS+d,EAAIkf,OAAOj9B,OACpBy+B,EAAY1gB,EAAIkf,OAAOwB,UACvBZ,EAAY9f,EAAIkf,OAAOY,UACvBC,EAAa/f,EAAIkf,OAAOa,WAO5B/f,EAAI5uD,IAAM,KAGV,IADA,IAAIuc,EAAIo0B,EAAMqB,KAAKC,eACb11B,EAAErlB,SAAW2I,GAAO,CAErB+uD,EAAIof,UAAY,UACjBpf,EAAI5uD,IAAM,MAGG,OAAZ4uD,EAAI5uD,KACLmuE,IAIF,IAAIh2E,EAAQ04C,EAAO+d,EAAI5uD,IAAK4uD,EAAIrH,MAChCqH,EAAIof,WAAa71E,EAAMjB,OACvBqlB,EAAE45B,SAASh+C,GAGXy2D,EAAI5uD,IAAM0uE,EAAU79B,EAAO+d,EAAI5uD,IAAKsvE,EAAU1gB,EAAIrH,QAClDqH,EAAIrH,KAAOonB,EAAW99B,EAAO+d,EAAI5uD,IAAK4uD,EAAIrH,MAC3C,CAED,OAAOhrC,EAAE06B,SAASp3C,EACnB,EAuJEguE,GAEDjf,EAAI4gB,SAAW,SAASnB,EAAQvsD,GAC9B+rD,EAAQ6B,YAAYrB,GAAQ,SAAS1wD,EAAKxlB,GACxC,GAAGwlB,EACD,OAAOmE,EAASnE,GAElBmE,EAAS,KAAM3pB,EAAMmH,WACtB,GACF,EAEDsvD,EAAI2f,aAAe,SAASF,GAC1B,OAAOR,EAAQ6B,YAAYrB,GAAQ/uE,UACpC,IAEDsvD,EAAI4gB,SAAW,SAASnB,EAAQvsD,GAC9B,IACEA,EAAS,KAAM8sD,EAAgBP,GAGhC,CAFC,MAAMhsE,GACNyf,EAASzf,EACV,CACF,EACDusD,EAAI2f,aAAeK,GAQrBhgB,EAAI0f,QAAU,SAASn2E,GAGrB,IADA,IAAI0H,EAAQ1H,EAAMjB,OACV8E,EAAI,EAAGA,EAAI6D,IAAS7D,EAC1B4yD,EAAIsf,MAAMtf,EAAIwgB,MAAMnuC,OAAO9oC,EAAM6V,OAAOhS,EAAG,IAC3C4yD,EAAIwgB,KAAqB,KAAbxgB,EAAIwgB,KAAe,EAAIxgB,EAAIwgB,KAAO,CAEjD,EAQDxgB,EAAI+gB,WAAa,SAAS3zE,EAAGy2B,GAE3B,IADA,IAAIt6B,EAAQ,GACJ+xB,EAAI,EAAGA,EAAIuI,EAAGvI,GAAK,EACzB/xB,GAASU,OAAOC,aAAckD,GAAKkuB,EAAK,KAE1C0kC,EAAI0f,QAAQn2E,EACb,EAUDy2D,EAAIghB,eAAiB,SAASC,GAE5B,GAAGA,IAAWtiE,KACZqhD,EAAI4gB,SAAW,SAASnB,EAAQvsD,GAQ9BvU,KAAKkS,iBAAiB,WAPtB,SAASqwD,EAASztE,GAChB,IAAIjJ,EAAOiJ,EAAEjJ,KACVA,EAAKu3C,OAASv3C,EAAKu3C,MAAM2kB,OAC1B/nD,KAAKsV,oBAAoB,UAAWitD,GACpChuD,EAAS1oB,EAAKu3C,MAAM2kB,KAAK33C,IAAKvkB,EAAKu3C,MAAM2kB,KAAKn9D,OAEjD,IAEDoV,KAAK4/D,YAAY,CAACx8B,MAAO,CAAC2kB,KAAM,CAAC+Y,OAAQA,KAC1C,MACI,CAWLwB,EAAOpwD,iBAAiB,WATT,SAASpd,GACtB,IAAIjJ,EAAOiJ,EAAEjJ,KACVA,EAAKu3C,OAASv3C,EAAKu3C,MAAM2kB,MAC1B1G,EAAI4gB,SAASp2E,EAAKu3C,MAAM2kB,KAAK+Y,QAAQ,SAAS1wD,EAAKxlB,GACjD03E,EAAO1C,YAAY,CAACx8B,MAAO,CAAC2kB,KAAM,CAAC33C,IAAKA,EAAKxlB,MAAOA,KACrD,GAEJ,GAGF,CACF,EAEMy2D,CACR,mBC3ZD,IAAIje,EAAQrqB,EAAQ,OACpBA,EAAQ,OACRA,EAAQ,QAGEM,EAAOiE,QAAU8lB,EAAMo/B,IAAMp/B,EAAMo/B,KAAO,CAAC,GAqBjDt2E,OAAS,SAASiT,GAEI,IAArBvC,UAAUjT,SACXwV,EAAU,CACRq6C,GAAI58C,UAAU,GACdkwD,IAAKlwD,UAAU,GACf6lE,WAAY7lE,UAAU,KAI1B,IAUI8lE,EAVArgD,EAAOljB,EAAQq6C,GACfsT,EAAM3tD,EAAQ2tD,IACd0E,EAAOnvC,EAAK4mC,aAEZ0Z,EAAQxjE,EAAQ+iB,MAAQ,KAO5B,GANoB,iBAAVygD,IAERA,EAAQv/B,EAAMqB,KAAKC,aAAai+B,IAI/B,eAAgBxjE,EACjBujE,EAAOvjE,EAAQsjE,eACV,IAAa,OAAVE,EAGR,MAAM,IAAI/1E,MAAM,yDAFhB81E,EAAOC,EAAMh5E,QAGd,CAED,GAAa,OAAVg5E,GAAkBA,EAAMh5E,WAAa+4E,EACtC,MAAM,IAAI91E,MAAM,0DAGlB,IAAIm7D,EAAO5oD,EAAQ4oD,MAAQ3kB,EAAMnvC,OAE7B2uE,EAAS,CAabA,OAAgB,SAASppB,EAAIqpB,GAC3B,IAAIp0E,EAcAyzB,EAbA4gD,EAASD,EAAU,EACnBE,EAAQn6E,KAAKg4B,KAAKkiD,EAAS,GAG3BE,EAAQxpB,EAAGzP,SAASL,WAGxB,GAAGq5B,EAAQvR,EAAOkR,EAAO,EACvB,MAAM,IAAI91E,MAAM,mCAOhBs1B,EADW,OAAVygD,EACM5a,EAAK9e,aAAay5B,GAElBC,EAAM/3E,QAIf,IAAIq4E,EAAK,IAAI7/B,EAAMqB,KAAK2C,WACxB67B,EAAG55B,aAAa,EAAG,GACnB45B,EAAGr6B,SAASo6B,GACZC,EAAGr6B,SAAS1mB,GAGZG,EAAKvQ,QACLuQ,EAAKqR,OAAOuvC,EAAGv5B,YACf,IAAI6M,EAAIl0B,EAAK0nB,SAASL,WAIlBw5B,EAAK,IAAI9/B,EAAMqB,KAAK2C,WACxB87B,EAAG75B,aAAa,EAAG05B,EAAQL,EAAOlR,EAAO,GAIzC0R,EAAGv+B,QAAQ,GACXu+B,EAAGt6B,SAAS1mB,GACZ,IAAI+xC,EAAKiP,EAAGx5B,WAGRsjB,EAAU+V,EAAQvR,EAAO,EACzBkC,EAAS5G,EAAI5D,SAAS3S,EAAGyW,GAGzB2G,EAAW,GACf,IAAIllE,EAAI,EAAGA,EAAIu+D,EAASv+D,IACtBklE,GAAYroE,OAAOC,aAAa0oE,EAAGnqE,WAAW2E,GAAKilE,EAAO5pE,WAAW2E,IAKvE,IAAI00E,EAAQ,OAAW,EAAIJ,EAAQD,EAAW,IAM9C,OALAnP,EAAWroE,OAAOC,aAAaooE,EAAS7pE,WAAW,IAAMq5E,GACvDxP,EAASlzD,OAAO,IAIA81C,EAAIjrD,OAAOC,aAAa,IAC3C,EAeDq3E,OAAgB,SAASI,EAAOjP,EAAI8O,GAClC,IAAIp0E,EACAq0E,EAASD,EAAU,EACnBE,EAAQn6E,KAAKg4B,KAAKkiD,EAAS,GAQ/B,GAHA/O,EAAKA,EAAGtzD,QAAQsiE,GAGbA,EAAQvR,EAAOkR,EAAO,EACvB,MAAM,IAAI91E,MAAM,0DAKlB,GAAgC,MAA7BmnE,EAAGjqE,WAAWi5E,EAAQ,GACvB,MAAM,IAAIn2E,MAAM,yCAKlB,IAAIogE,EAAU+V,EAAQvR,EAAO,EACzBmC,EAAWI,EAAGtzD,OAAO,EAAGusD,GACxBzW,EAAIwd,EAAGtzD,OAAOusD,EAASwE,GAIvB2R,EAAQ,OAAW,EAAIJ,EAAQD,EAAW,IAC9C,GAAuC,IAAnCnP,EAAS7pE,WAAW,GAAKq5E,GAC3B,MAAM,IAAIv2E,MAAM,6CAIlB,IAAI8mE,EAAS5G,EAAI5D,SAAS3S,EAAGyW,GAGzBiH,EAAK,GACT,IAAIxlE,EAAI,EAAGA,EAAIu+D,EAASv+D,IACtBwlE,GAAM3oE,OAAOC,aAAaooE,EAAS7pE,WAAW2E,GAAKilE,EAAO5pE,WAAW2E,IAKvEwlE,EAAK3oE,OAAOC,aAAa0oE,EAAGnqE,WAAW,IAAMq5E,GAAQlP,EAAGxzD,OAAO,GAM/D,IAAI2iE,EAAWL,EAAQvR,EAAOkR,EAAO,EACrC,IAAIj0E,EAAI,EAAGA,EAAI20E,EAAU30E,IACvB,GAAwB,IAArBwlE,EAAGnqE,WAAW2E,GACf,MAAM,IAAI7B,MAAM,wCAIpB,GAA+B,IAA5BqnE,EAAGnqE,WAAWs5E,GACf,MAAM,IAAIx2E,MAAM,qDAIlB,IAAIs1B,EAAO+xC,EAAGxzD,QAAQiiE,GAGlBO,EAAK,IAAI7/B,EAAMqB,KAAK2C,WAWxB,OAVA67B,EAAG55B,aAAa,EAAG,GACnB45B,EAAGr6B,SAASo6B,GACZC,EAAGr6B,SAAS1mB,GAGZG,EAAKvQ,QACLuQ,EAAKqR,OAAOuvC,EAAGv5B,YAIR6M,IAHEl0B,EAAK0nB,SAASL,UAIxB,GAED,OAAOk5B,CACR,mBCjOD,IAAIx/B,EAAQrqB,EAAQ,OACpBA,EAAQ,OACRA,EAAQ,MACRA,EAAQ,OACRA,EAAQ,OAKLqqB,EAAMnvC,QAAUmvC,EAAMnvC,OAAOy1C,SAC9BrwB,EAAOiE,QAAU8lB,EAAMnvC,OAIzB,SAAUovE,GAGV,IAAIC,EAAW,CAAC,EACZC,EAAmB,IAAI5xE,MAAM,GAC7B6xE,EAAmBpgC,EAAMqB,KAAKC,eAyClC,SAAS++B,IACP,IAAIpiB,EAAMje,EAAM2kB,KAAK77D,OAAOo3E,GAgC5B,OAlBAjiB,EAAI3X,SAAW,SAASp3C,EAAOiiB,GAC7B,OAAO8sC,EAAI6H,SAAS52D,EAAOiiB,EAC5B,EAYD8sC,EAAIpY,aAAe,SAAS32C,GAC1B,OAAO+uD,EAAI6H,SAAS52D,EACrB,EAEM+uD,CACR,CA1EDiiB,EAASnC,UAAY,SAAS1uE,GAE5B,IAAIw7B,EAAMmV,EAAMqB,KAAKC,aAAajyC,GAQlC,OAPAA,EAAM,IAAId,MAAM,IACZ,GAAKs8B,EAAIhlC,WACbwJ,EAAI,GAAKw7B,EAAIhlC,WACbwJ,EAAI,GAAKw7B,EAAIhlC,WACbwJ,EAAI,GAAKw7B,EAAIhlC,WAGNm6C,EAAMG,IAAIsB,WAAWpyC,GAAK,EAClC,EACD6wE,EAASlC,WAAa,SAASpnB,GAE7B,IAAI/rB,EAAMmV,EAAMqB,KAAKC,aAAasV,GAMlC,OALAA,EAAO,IAAIroD,MAAM,IACZ,GAAKs8B,EAAIhlC,WACd+wD,EAAK,GAAK/rB,EAAIhlC,WACd+wD,EAAK,GAAK/rB,EAAIhlC,WACd+wD,EAAK,GAAK/rB,EAAIhlC,WACP+wD,CACR,EACDspB,EAAShgC,OAAS,SAAS7wC,EAAKunD,GAM9B,OALA5W,EAAMG,IAAIe,aAAa7xC,EAAKunD,EAAMupB,GAAkB,GACpDC,EAAiBnvB,SAASkvB,EAAiB,IAC3CC,EAAiBnvB,SAASkvB,EAAiB,IAC3CC,EAAiBnvB,SAASkvB,EAAiB,IAC3CC,EAAiBnvB,SAASkvB,EAAiB,IACpCC,EAAiB95B,UACzB,EACD45B,EAASvB,UAAY,SAAS/nB,GAG5B,QADEA,EAAK,GACAA,CACR,EACDspB,EAAS9pB,GAAKpW,EAAMoW,GAAGie,OA0CvB,IAAIiM,EAAOD,IAIPnC,EAAkB,KAClBC,EAAcn+B,EAAMqB,KAAK88B,YACzBjB,EAAUiB,EAAYlQ,QAAUkQ,EAAYC,SAOhD,GANGlB,GAAWA,EAAQgB,kBACpBA,EAAkB,SAASrgD,GACzB,OAAOq/C,EAAQgB,gBAAgBrgD,EAChC,GAGAmiB,EAAMjkC,QAAQ6hD,oBACb5d,EAAMqB,KAAK6sB,WAAagQ,EAAkB,CAW5C,GARqB,oBAAXzhE,QAA0BA,OAAOC,SAK3C4jE,EAAKtB,YAAY,IAAIj1E,KAAQ,IAGJ,oBAAf60D,UAA4B,CACpC,IAAI2hB,EAAY,GAChB,IAAI,IAAIlxE,KAAOuvD,UACb,IAC+B,iBAAnBA,UAAUvvD,KAClBkxE,GAAa3hB,UAAUvvD,GAS1B,CAPC,MAAMqC,GAOP,CAEH4uE,EAAK3C,QAAQ4C,GACbA,EAAY,IACb,CAGEN,IAEDA,IAASO,WAAU,SAAS9uE,GAE1B4uE,EAAKtB,WAAWttE,EAAE+uE,QAAS,IAC3BH,EAAKtB,WAAWttE,EAAEgvE,QAAS,GAC5B,IAGDT,IAASU,UAAS,SAASjvE,GACzB4uE,EAAKtB,WAAWttE,EAAEusC,SAAU,EAC7B,IAEJ,CAGD,GAAI+B,EAAMnvC,OAIR,IAAI,IAAIxB,KAAOixE,EACbtgC,EAAMnvC,OAAOxB,GAAOixE,EAAKjxE,QAJ3B2wC,EAAMnvC,OAASyvE,EASjBtgC,EAAMnvC,OAAO+vE,eAAiBP,EAE9BpqD,EAAOiE,QAAU8lB,EAAMnvC,MA7JvB,EA+JsB,oBAAZovE,OAA0BA,OAAS,uBClL7C,IAAIjgC,EAAQrqB,EAAQ,OACpBA,EAAQ,OAER,IAAIkrD,EAAU,CACZ,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAC1F,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAC1F,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,EAAM,IAAM,IAAM,GAC1F,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,GAAM,IAC1F,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAC1F,GAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAC1F,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,EAC1F,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,EAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAC1F,EAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAC1F,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,EAAM,GAAM,IAAM,IAC1F,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAC1F,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,EAAM,GAAM,GAAM,GAAM,GAAM,IAAM,GAC1F,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,EAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,EAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,EAAM,GAAM,GAAM,IAAM,IAAM,IAC1F,GAAM,GAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAC1F,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,KAGxFr2D,EAAI,CAAC,EAAG,EAAG,EAAG,GAYds2D,EAAM,SAASpqC,EAAMnO,GACvB,OAASmO,GAAQnO,EAAQ,OAAmB,MAAPmO,IAAmB,GAAKnO,CAC9D,EAYGw4C,EAAM,SAASrqC,EAAMnO,GACvB,OAAgB,MAAPmO,IAAkBnO,EAAUmO,GAAS,GAAKnO,EAAS,KAC7D,EAGDtS,EAAOiE,QAAU8lB,EAAM6sB,IAAM7sB,EAAM6sB,KAAO,CAAC,EAS3C7sB,EAAM6sB,IAAImU,UAAY,SAAS3xE,EAAK4xE,GAChB,iBAAR5xE,IACRA,EAAM2wC,EAAMqB,KAAKC,aAAajyC,IAEhC4xE,EAAaA,GAAc,IAG3B,IAKI51E,EALA4uD,EAAI5qD,EACJ6xE,EAAI7xE,EAAI9I,SACR46E,EAAKF,EACLG,EAAK57E,KAAKg4B,KAAK2jD,EAAK,GACpBE,EAAK,MAAc,EAALF,GAGlB,IAAI91E,EAAI61E,EAAG71E,EAAI,IAAKA,IAClB4uD,EAAE1Y,QAAQs/B,EAAS5mB,EAAE5T,GAAGh7C,EAAI,GAAK4uD,EAAE5T,GAAGh7C,EAAI61E,GAAM,MAKlD,IAFAjnB,EAAEsT,MAAM,IAAM6T,EAAIP,EAAQ5mB,EAAE5T,GAAG,IAAM+6B,GAAMC,IAEvCh2E,EAAI,IAAM+1E,EAAI/1E,GAAK,EAAGA,IACxB4uD,EAAEsT,MAAMliE,EAAGw1E,EAAQ5mB,EAAE5T,GAAGh7C,EAAI,GAAK4uD,EAAE5T,GAAGh7C,EAAI+1E,KAG5C,OAAOnnB,CACR,EAWD,IAAIlW,EAAe,SAAS10C,EAAKk5B,EAAMwY,GACrC,IACIugC,EAAUC,EACVl2E,EAAGsF,EAFHo/C,GAAU,EAAOC,EAAS,KAAMwxB,EAAU,KAAMrwB,EAAM,KAEhDswB,EAAI,GAId,IADApyE,EAAM2wC,EAAM6sB,IAAImU,UAAU3xE,EAAKk5B,GAC3Bl9B,EAAI,EAAGA,EAAI,GAAIA,IACjBo2E,EAAE35E,KAAKuH,EAAIqyE,cAGV3gC,GAMDugC,EAAW,SAASK,GAClB,IAAIt2E,EAAI,EAAGA,EAAI,EAAGA,IAChBs2E,EAAEt2E,IAAMo2E,EAAE9wE,IAAMgxE,GAAGt2E,EAAI,GAAK,GAAKs2E,GAAGt2E,EAAI,GAAK,MACxCs2E,GAAGt2E,EAAI,GAAK,GAAMs2E,GAAGt2E,EAAI,GAAK,IACnCs2E,EAAEt2E,GAAKy1E,EAAIa,EAAEt2E,GAAImf,EAAEnf,IACnBsF,GAEH,EAOD4wE,EAAY,SAASI,GACnB,IAAIt2E,EAAI,EAAGA,EAAI,EAAGA,IAChBs2E,EAAEt2E,IAAMo2E,EAAmB,GAAjBE,GAAGt2E,EAAI,GAAK,GAEzB,IAODi2E,EAAW,SAASK,GAClB,IAAIt2E,EAAI,EAAGA,GAAK,EAAGA,IACjBs2E,EAAEt2E,GAAK01E,EAAIY,EAAEt2E,GAAImf,EAAEnf,IACnBs2E,EAAEt2E,IAAMo2E,EAAE9wE,IAAMgxE,GAAGt2E,EAAI,GAAK,GAAKs2E,GAAGt2E,EAAI,GAAK,MACxCs2E,GAAGt2E,EAAI,GAAK,GAAMs2E,GAAGt2E,EAAI,GAAK,IACnCsF,GAEH,EAOD4wE,EAAY,SAASI,GACnB,IAAIt2E,EAAI,EAAGA,GAAK,EAAGA,IACjBs2E,EAAEt2E,IAAMo2E,EAAmB,GAAjBE,GAAGt2E,EAAI,GAAK,GAEzB,GAgBH,IAAIu2E,EAAU,SAASC,GACrB,IAAIF,EAAI,GAGR,IAAIt2E,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACrB,IAAIuM,EAAMo4C,EAAO0xB,aAEN,OAARvwB,IACEpQ,EAEDnpC,GAAOu5C,EAAIuwB,aAGXvwB,EAAI2wB,WAAWlqE,IAInB+pE,EAAE75E,KAAW,MAAN8P,EACR,CAGDjH,EAAIowC,EAAU,EAAI,GAGlB,IAAI,IAAI3lB,EAAM,EAAGA,EAAMymD,EAAKt7E,OAAQ60B,IAClC,IAAI,IAAI2mB,EAAM,EAAGA,EAAM8/B,EAAKzmD,GAAK,GAAI2mB,IACnC8/B,EAAKzmD,GAAK,GAAGumD,GAKjB,IAAIt2E,EAAI,EAAGA,EAAI,EAAGA,IACL,OAAR8lD,IACEpQ,EAGDoQ,EAAI2wB,WAAWH,EAAEt2E,IAEjBs2E,EAAEt2E,IAAM8lD,EAAIuwB,cAIhBF,EAAQM,WAAWH,EAAEt2E,GAExB,EAGG60C,EAAS,KAuGb,OAtGAA,EAAS,CAWPxxB,MAAO,SAAS4xB,EAAIp5C,GACfo5C,GAEgB,iBAAPA,IACRA,EAAKN,EAAMqB,KAAKC,aAAahB,IAIjCyP,GAAU,EACVC,EAAShQ,EAAMqB,KAAKC,eACpBkgC,EAAUt6E,GAAU,IAAI84C,EAAMqB,KAAKC,aACnC6P,EAAM7Q,EAENJ,EAAOh5C,OAASs6E,CACjB,EAODlxC,OAAQ,SAAS/5B,GAMf,IALIw5C,GAEFC,EAAOnE,UAAUt1C,GAGby5C,EAAOzpD,UAAY,GACvBq7E,EAAQ,CACJ,CAAE,EAAGN,GACL,CAAE,EAAGC,GACL,CAAE,EAAGD,GACL,CAAE,EAAGC,GACL,CAAE,EAAGD,IAGZ,EAUD1sC,OAAQ,SAASyb,GACf,IAAIlL,GAAO,EAEX,GAAGpE,EACD,GAAGsP,EACDlL,EAAOkL,EAAI,EAAGL,GAASjP,OAClB,CAGL,IAAIiF,EAA+B,IAApBgK,EAAOzpD,SAAkB,EAAK,EAAIypD,EAAOzpD,SACxDypD,EAAO/J,aAAaD,EAASA,EAC9B,CASH,GANGb,IAED4K,GAAU,EACV7P,EAAO5P,WAGLyQ,IAEFoE,EAA4B,IAApB6K,EAAOzpD,UAEb,GAAG8pD,EACDlL,EAAOkL,EAAI,EAAGmxB,GAAUzgC,OACnB,CAEL,IAAIvQ,EAAMgxC,EAAQj7E,SACd2I,EAAQsyE,EAAQn7B,GAAG7V,EAAM,GAE1BthC,EAAQshC,EACT2U,GAAO,EAGPq8B,EAAQr/C,SAASjzB,EAEpB,CAIL,OAAOi2C,CACR,EAIJ,EAgBDnF,EAAM6sB,IAAIxsB,gBAAkB,SAAShxC,EAAKixC,EAAIp5C,GAC5C,IAAIg5C,EAASF,EAAM6sB,IAAIpsB,uBAAuBpxC,EAAK,KAEnD,OADA6wC,EAAOxxB,MAAM4xB,EAAIp5C,GACVg5C,CACR,EAeDF,EAAM6sB,IAAIpsB,uBAAyB,SAASpxC,EAAKk5B,GAC/C,OAAOwb,EAAa10C,EAAKk5B,GAAM,EAChC,EAgBDyX,EAAM6sB,IAAInsB,gBAAkB,SAASrxC,EAAKixC,EAAIp5C,GAC5C,IAAIg5C,EAASF,EAAM6sB,IAAIlsB,uBAAuBtxC,EAAK,KAEnD,OADA6wC,EAAOxxB,MAAM4xB,EAAIp5C,GACVg5C,CACR,EAeDF,EAAM6sB,IAAIlsB,uBAAyB,SAAStxC,EAAKk5B,GAC/C,OAAOwb,EAAa10C,EAAKk5B,GAAM,EAChC,mBC1VD,IAAIyX,EAAQrqB,EAAQ,OASpB,GARAA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,MACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,YAEiB,IAAf6L,EACR,IAAIA,EAAawe,EAAM+V,KAAKv0B,WAG9B,IAAI07C,EAAUl9B,EAAMqB,KAAK6sB,SAAWv4C,EAAQ,OAAY,KAGpDgyB,EAAO3H,EAAM2H,KAGbtG,EAAOrB,EAAMqB,KAKjBrB,EAAMiP,IAAMjP,EAAMiP,KAAO,CAAC,EAC1Bh5B,EAAOiE,QAAU8lB,EAAMiP,IAAI8W,IAAM/lB,EAAM+lB,IAAM/lB,EAAM+lB,KAAO,CAAC,EAC3D,IAAI9W,EAAMjP,EAAMiP,IAGZusB,EAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGrC5zB,EAAsB,CAExBt+C,KAAM,iBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CAENgE,KAAM,yBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKG,QAChBD,aAAa,EACbE,QAAS,qBACR,CAED9+C,KAAM,qCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,gCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKK,IAChBH,aAAa,EACbE,QAAS,mBAEV,CAED9+C,KAAM,iBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKM,YAChBJ,aAAa,EACbE,QAAS,gBAKT25B,EAAyB,CAE3Bz4E,KAAM,gBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CAENgE,KAAM,wBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKG,QAChBD,aAAa,EACbE,QAAS,qBACR,CAED9+C,KAAM,wBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKG,QAChBD,aAAa,EACbE,QAAS,qBACR,CAED9+C,KAAM,+BACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKG,QAChBD,aAAa,EACbE,QAAS,4BACR,CAED9+C,KAAM,gCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKG,QAChBD,aAAa,EACbE,QAAS,6BACR,CAED9+C,KAAM,uBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKG,QAChBD,aAAa,EACbE,QAAS,oBACR,CAED9+C,KAAM,uBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKG,QAChBD,aAAa,EACbE,QAAS,oBACR,CAED9+C,KAAM,0BACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKG,QAChBD,aAAa,EACbE,QAAS,uBACR,CAED9+C,KAAM,0BACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKG,QAChBD,aAAa,EACbE,QAAS,uBACR,CAED9+C,KAAM,4BACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKG,QAChBD,aAAa,EACbE,QAAS,2BAKT45B,EAAwB,CAE1B14E,KAAM,eACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CAENgE,KAAM,uBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKG,QAChBD,aAAa,EACbE,QAAS,oBACR,CAED9+C,KAAM,wBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKG,QAChBD,aAAa,EACbE,QAAS,uBAMTG,EAAqBvI,EAAMiP,IAAI8W,IAAIxd,mBAAqB,CAC1Dj/C,KAAM,uBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACbM,YAAa,uBACbljD,MAAO,CAAC,CACNgE,KAAM,2CACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,gCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKK,IAChBH,aAAa,EACbE,QAAS,kBAEV,CAED9+C,KAAM,wCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKS,UAChBP,aAAa,EACb5iD,MAAO,CAAC,CAENgE,KAAM,qDACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACbsG,UAAU,EACVhG,YAAa,oBAMfy5B,EAAsB,CACxB34E,KAAM,aACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,6BACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,iDACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKK,IAChBH,aAAa,EACbE,QAAS,uBACR,CAED9+C,KAAM,wCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKoB,KAEhBhB,QAAS,aACToG,UAAU,EACVtG,aAAa,KAEd,CAED5+C,KAAM,oBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKM,YAChBJ,aAAa,EACbE,QAAS,YAqBT85B,EAAqB,SAAS9rB,GAEhC,IAAInK,EACJ,KAAGmK,EAAGvS,aAAaoL,EAAIC,MAEhB,CACL,IAAI71C,EAAQ,IAAI7P,MAAM,qCAEtB,MADA6P,EAAMwqC,UAAYuS,EAAGvS,UACfxqC,CACP,CALC4yC,EAAMgD,EAAIC,KAAKkH,EAAGvS,WAMpB,IAAIs+B,EAAWx6B,EAAKqE,SAASC,GAAK3F,WAG9B87B,EAAaz6B,EAAK7+C,OACpB6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,IAC9CgvB,EAAkBtvB,EAAK7+C,OACzB6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,IAClDgvB,EAAgB3xE,MAAMwC,KAAK6/C,EAAK7+C,OAC9B6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAAO85B,IAC9ClL,EAAgB3xE,MAAMwC,KAAK6/C,EAAK7+C,OAC9B6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKoB,MAAM,EAAO,KAC/C,IAAIzC,EAASgB,EAAK7+C,OAChB6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKM,aAChC,EAAO8N,EAAGzP,SAASL,YAKrB,OAJA87B,EAAW98E,MAAMwC,KAAKmvE,GACtBmL,EAAW98E,MAAMwC,KAAK6+C,GAGfgB,EAAKgE,MAAMy2B,GAAY97B,UAC/B,EAWG+7B,EAAU,SAAS9oD,EAAGlqB,EAAKizE,GAC7B,GAAGA,EACD,OAAO/oD,EAAE2M,OAAO72B,EAAIqC,EAAGrC,EAAIyyB,GAG7B,IAAIzyB,EAAIy7B,IAAMz7B,EAAI80B,EAEhB,OAAO5K,EAAE2M,OAAO72B,EAAIs0B,EAAGt0B,EAAIyyB,GAiG7B,IAAIU,EA7FAnzB,EAAIkzE,KACNlzE,EAAIkzE,GAAKlzE,EAAIs0B,EAAE2B,IAAIj2B,EAAIy7B,EAAEhI,SAAStB,EAAWw/B,OAE3C3xD,EAAImzE,KACNnzE,EAAImzE,GAAKnzE,EAAIs0B,EAAE2B,IAAIj2B,EAAI80B,EAAErB,SAAStB,EAAWw/B,OAE3C3xD,EAAIozE,OACNpzE,EAAIozE,KAAOpzE,EAAI80B,EAAEohC,WAAWl2D,EAAIy7B,IAuFlC,GACEtI,EAAI,IAAIhB,EACNwe,EAAMqB,KAAK8N,WAAWnP,EAAMnvC,OAAOy1C,SAASj3C,EAAIyyB,EAAE0G,YAAc,IAChE,UACIhG,EAAEkF,UAAUr4B,EAAIyyB,IAAM,IAAMU,EAAEuI,IAAI17B,EAAIyyB,GAAG4D,OAAOlE,EAAWw/B,MAQnE,IAJA,IAAI0hB,GAHJnpD,EAAIA,EAAEgN,SAAS/D,EAAE0D,OAAO72B,EAAIqC,EAAGrC,EAAIyyB,IAAIwD,IAAIj2B,EAAIyyB,IAGpCwD,IAAIj2B,EAAIy7B,GAAG5E,OAAO72B,EAAIkzE,GAAIlzE,EAAIy7B,GACrC63C,EAAKppD,EAAE+L,IAAIj2B,EAAI80B,GAAG+B,OAAO72B,EAAImzE,GAAInzE,EAAI80B,GAGnCu+C,EAAGh7C,UAAUi7C,GAAM,GACvBD,EAAKA,EAAGtgD,IAAI/yB,EAAIy7B,GAIlB,IAAIpH,EAAIg/C,EAAG5/C,SAAS6/C,GACjBp8C,SAASl3B,EAAIozE,MAAMn9C,IAAIj2B,EAAIy7B,GAC3BvE,SAASl3B,EAAI80B,GAAG/B,IAAIugD,GAKvB,OAFAj/C,EAAIA,EAAE6C,SAAS/D,EAAE+iC,WAAWl2D,EAAIyyB,IAAIwD,IAAIj2B,EAAIyyB,EAG7C,EAuiCD,SAAS8gD,EAAkB7wD,EAAG1iB,EAAKwzE,GACjC,IAAIC,EAAK9iC,EAAMqB,KAAKC,eAGhBrP,EAAIzsC,KAAKg4B,KAAKnuB,EAAIyyB,EAAE0G,YAAc,GAGtC,GAAGzW,EAAExrB,OAAU0rC,EAAI,GAAK,CACtB,IAAI54B,EAAQ,IAAI7P,MAAM,gDAGtB,MAFA6P,EAAM9S,OAASwrB,EAAExrB,OACjB8S,EAAMwgB,IAAMoY,EAAI,GACV54B,CACP,CAmBDypE,EAAGvhC,QAAQ,GACXuhC,EAAGvhC,QAAQshC,GAGX,IACIE,EADAC,EAAS/wC,EAAI,EAAIlgB,EAAExrB,OAGvB,GAAU,IAAPs8E,GAAsB,IAAPA,EAAa,CAC7BE,EAAkB,IAAPF,EAAe,EAAO,IACjC,IAAI,IAAIx3E,EAAI,EAAGA,EAAI23E,IAAU33E,EAC3By3E,EAAGvhC,QAAQwhC,EAEd,MAGC,KAAMC,EAAS,GAAG,CAChB,IAAIC,EAAW,EACXC,EAAWljC,EAAMnvC,OAAOy1C,SAAS08B,GACrC,IAAQ33E,EAAI,EAAGA,EAAI23E,IAAU33E,EAEZ,KADf03E,EAAUG,EAASx8E,WAAW2E,MAE1B43E,EAEFH,EAAGvhC,QAAQwhC,GAGfC,EAASC,CACV,CAOH,OAHAH,EAAGvhC,QAAQ,GACXuhC,EAAGt9B,SAASzzB,GAEL+wD,CACR,CAYD,SAASK,EAAkBxS,EAAIthE,EAAKizE,EAAKc,GAEvC,IAAInxC,EAAIzsC,KAAKg4B,KAAKnuB,EAAIyyB,EAAE0G,YAAc,GAalCs6C,EAAK9iC,EAAMqB,KAAKC,aAAaqvB,GAC7BnhB,EAAQszB,EAAGn4B,UACXk4B,EAAKC,EAAGn4B,UACZ,GAAa,IAAV6E,GACA8yB,GAAc,IAAPO,GAAsB,IAAPA,IACrBP,GAAa,GAANO,GACRP,GAAc,IAAPO,QAA8B,IAARO,EAC9B,MAAM,IAAI55E,MAAM,gCAGlB,IAAIw5E,EAAS,EACb,GAAU,IAAPH,EAAa,CAEdG,EAAS/wC,EAAI,EAAImxC,EACjB,IAAI,IAAI/3E,EAAI,EAAGA,EAAI23E,IAAU33E,EAC3B,GAAoB,IAAjBy3E,EAAGn4B,UACJ,MAAM,IAAInhD,MAAM,+BAGrB,MAAM,GAAU,IAAPq5E,EAGR,IADAG,EAAS,EACHF,EAAGv8E,SAAW,GAAG,CACrB,GAAoB,MAAjBu8E,EAAGn4B,UAAoB,GACtBm4B,EAAG3sD,KACL,KACD,GACC6sD,CACH,MACI,GAAU,IAAPH,EAGR,IADAG,EAAS,EACHF,EAAGv8E,SAAW,GAAG,CACrB,GAAoB,IAAjBu8E,EAAGn4B,UAAoB,GACtBm4B,EAAG3sD,KACL,KACD,GACC6sD,CACH,CAKH,GAAY,IADDF,EAAGn4B,WACMq4B,IAAY/wC,EAAI,EAAI6wC,EAAGv8E,SACzC,MAAM,IAAIiD,MAAM,gCAGlB,OAAOs5E,EAAGx8B,UACX,CAgBD,SAAS+8B,EAAiBpuE,EAAO8G,EAASoV,GAClB,mBAAZpV,IACRoV,EAAWpV,EACXA,EAAU,CAAC,GAIb,IAAIo0C,EAAO,CACTtM,UAAW,CACTv6C,MAJJyS,EAAUA,GAAW,CAAC,GAIJ8nC,WAAa,WAC3B9nC,QAAS,CACPggE,QAAShgE,EAAQggE,SAAW,EAC5BC,SAAUjgE,EAAQigE,UAAY,IAC9BC,aAAclgE,EAAQkgE,gBAU5B,SAASnW,IAEPwd,EAASruE,EAAMsuE,OAAO,SAASv2D,EAAK5P,GAClC,OAAG4P,EACMmE,EAASnE,IAElB/X,EAAM61B,EAAI1tB,EACK,OAAZnI,EAAMkvB,EACAyQ,EAAO5nB,EAAK/X,EAAMkvB,QAE3Bm/C,EAASruE,EAAMuuE,MAAO5uC,GACvB,GACF,CAED,SAAS0uC,EAAS/6C,EAAMpX,GACtB6uB,EAAMu7B,MAAMG,sBAAsBnzC,EAAM4nB,EAAMh/B,EAC/C,CAED,SAASyjB,EAAO5nB,EAAK5P,GACnB,GAAG4P,EACD,OAAOmE,EAASnE,GAOlB,GAHA/X,EAAMkvB,EAAI/mB,EAGPnI,EAAM61B,EAAEpD,UAAUzyB,EAAMkvB,GAAK,EAAG,CACjC,IAAI0G,EAAM51B,EAAM61B,EAChB71B,EAAM61B,EAAI71B,EAAMkvB,EAChBlvB,EAAMkvB,EAAI0G,CACX,CAGD,GACiC,IAD9B51B,EAAM61B,EAAEhI,SAAStB,EAAWw/B,KAAKj2B,IAAI91B,EAAMvD,GAC3Cg2B,UAAUlG,EAAWw/B,KAGtB,OAFA/rD,EAAM61B,EAAI,UACVg7B,IAKF,GACiC,IAD9B7wD,EAAMkvB,EAAErB,SAAStB,EAAWw/B,KAAKj2B,IAAI91B,EAAMvD,GAC3Cg2B,UAAUlG,EAAWw/B,KAGtB,OAFA/rD,EAAMkvB,EAAI,UACVm/C,EAASruE,EAAMuuE,MAAO5uC,GAUxB,GALA3/B,EAAMwuE,GAAKxuE,EAAM61B,EAAEhI,SAAStB,EAAWw/B,KACvC/rD,EAAMyuE,GAAKzuE,EAAMkvB,EAAErB,SAAStB,EAAWw/B,KACvC/rD,EAAM0uE,IAAM1uE,EAAMwuE,GAAGl9C,SAAStxB,EAAMyuE,IAGoB,IAArDzuE,EAAM0uE,IAAI54C,IAAI91B,EAAMvD,GAAGg2B,UAAUlG,EAAWw/B,KAI7C,OAFA/rD,EAAM61B,EAAI71B,EAAMkvB,EAAI,UACpB2hC,IAMF,GADA7wD,EAAM6sB,EAAI7sB,EAAM61B,EAAEvE,SAAStxB,EAAMkvB,GAC9BlvB,EAAM6sB,EAAE0G,cAAgBvzB,EAAMszB,KAI/B,OAFAtzB,EAAMkvB,EAAI,UACVm/C,EAASruE,EAAMuuE,MAAO5uC,GAKxB,IAAIjR,EAAI1uB,EAAMvD,EAAE6zD,WAAWtwD,EAAM0uE,KACjC1uE,EAAMhG,KAAO,CACXooD,WAAYpI,EAAI8W,IAAI6d,cAClB3uE,EAAM6sB,EAAG7sB,EAAMvD,EAAGiyB,EAAG1uB,EAAM61B,EAAG71B,EAAMkvB,EACpCR,EAAE2B,IAAIrwB,EAAMwuE,IAAK9/C,EAAE2B,IAAIrwB,EAAMyuE,IAC7BzuE,EAAMkvB,EAAEohC,WAAWtwD,EAAM61B,IAC3BssB,UAAWnI,EAAI8W,IAAI8d,aAAa5uE,EAAM6sB,EAAG7sB,EAAMvD,IAGjDyf,EAAS,KAAMlc,EAAMhG,KACtB,CAxFE,SAAU8M,IACXo0C,EAAKwU,KAAO5oD,EAAQ4oD,MAGtBmB,GAqFD,CASD,SAASge,EAAWl4D,GAElB,IAAI2wD,EAAM3wD,EAAEjd,SAAS,IAClB4tE,EAAI,IAAM,MACXA,EAAM,KAAOA,GAEf,IAAI/0E,EAAQw4C,EAAMqB,KAAK6kB,WAAWqW,GAGlC,OAAG/0E,EAAMjB,OAAS,IAEU,IAAxBiB,EAAMd,WAAW,IACc,IAAV,IAAtBc,EAAMd,WAAW,KAEO,MAAxBc,EAAMd,WAAW,IACe,MAAV,IAAtBc,EAAMd,WAAW,KACXc,EAAM6V,OAAO,GAEf7V,CACR,CAYD,SAASu8E,EAAqBx7C,GAC5B,OAAGA,GAAQ,IAAY,GACpBA,GAAQ,IAAY,GACpBA,GAAQ,IAAY,GACpBA,GAAQ,IAAY,GACpBA,GAAQ,IAAY,EACpBA,GAAQ,IAAY,EACpBA,GAAQ,IAAY,EACpBA,GAAQ,IAAY,EACpBA,GAAQ,IAAY,EACpBA,GAAQ,IAAY,EACpBA,GAAQ,KAAa,EACjB,CACR,CASD,SAASy7C,EAAkBr6C,GACzB,OAAOqW,EAAMqB,KAAK6sB,UAAmC,mBAAhBgP,EAAQvzC,EAC9C,CASD,SAASs6C,EAAoBt6C,GAC3B,YAAoC,IAArB0X,EAAK88B,aACiB,iBAA5B98B,EAAK88B,YAAYlQ,QACkB,iBAAnC5sB,EAAK88B,YAAYlQ,OAAOiW,QACe,mBAAvC7iC,EAAK88B,YAAYlQ,OAAOiW,OAAOv6C,EACzC,CAWD,SAASw6C,EAAsBx6C,GAC7B,YAAoC,IAArB0X,EAAK88B,aACmB,iBAA9B98B,EAAK88B,YAAYC,UACoB,iBAArC/8B,EAAK88B,YAAYC,SAAS8F,QACe,mBAAzC7iC,EAAK88B,YAAYC,SAAS8F,OAAOv6C,EAC3C,CAED,SAASy6C,EAAiB7qD,GAGxB,IAFA,IAAI/xB,EAAQw4C,EAAMqB,KAAK6kB,WAAW3sC,EAAE5qB,SAAS,KACzCxE,EAAS,IAAIF,WAAWzC,EAAMjB,QAC1B8E,EAAI,EAAGA,EAAI7D,EAAMjB,SAAU8E,EACjClB,EAAOkB,GAAK7D,EAAMd,WAAW2E,GAE/B,OAAOlB,CACR,CA33CD8kD,EAAI8W,IAAIhlB,QAAU,SAAShvB,EAAG1iB,EAAKwzE,GACjC,IACIC,EADAR,EAAMO,EAIN5wC,EAAIzsC,KAAKg4B,KAAKnuB,EAAIyyB,EAAE0G,YAAc,IAE5B,IAAPq6C,IAAuB,IAAPA,GAEjBP,EAAc,IAAPO,EACPC,EAAKF,EAAkB7wD,EAAG1iB,EAAKwzE,KAE/BC,EAAK9iC,EAAMqB,KAAKC,gBACbkE,SAASzzB,GAgBd,IAXA,IAAIwH,EAAI,IAAIiI,EAAWshD,EAAGrM,QAAS,IAQ/B4N,EALIhC,EAAQ9oD,EAAGlqB,EAAKizE,GAKX3zE,SAAS,IAClB21E,EAAKtkC,EAAMqB,KAAKC,eAChB2kB,EAAQh0B,EAAIzsC,KAAKg4B,KAAK6mD,EAAK99E,OAAS,GAClC0/D,EAAQ,GACZqe,EAAG/iC,QAAQ,KACT0kB,EAGJ,OADAqe,EAAG9+B,SAASxF,EAAMqB,KAAK6kB,WAAWme,IAC3BC,EAAGh+B,UACX,EAoBD2I,EAAI8W,IAAIvlB,QAAU,SAAS8jC,EAAIj1E,EAAKizE,EAAKc,GAEvC,IAAInxC,EAAIzsC,KAAKg4B,KAAKnuB,EAAIyyB,EAAE0G,YAAc,GAGtC,GAAG87C,EAAG/9E,SAAW0rC,EAAG,CAClB,IAAI54B,EAAQ,IAAI7P,MAAM,wCAGtB,MAFA6P,EAAM9S,OAAS+9E,EAAG/9E,OAClB8S,EAAMkrE,SAAWtyC,EACX54B,CACP,CAID,IAAIqqB,EAAI,IAAIlC,EAAWwe,EAAMqB,KAAKC,aAAagjC,GAAI7N,QAAS,IAI5D,GAAG/yC,EAAEgE,UAAUr4B,EAAIyyB,IAAM,EACvB,MAAM,IAAIt4B,MAAM,iCAYlB,IARA,IAKIg7E,EALInC,EAAQ3+C,EAAGr0B,EAAKizE,GAKX3zE,SAAS,IAClBm0E,EAAK9iC,EAAMqB,KAAKC,eAChB2kB,EAAQh0B,EAAIzsC,KAAKg4B,KAAKgnD,EAAKj+E,OAAS,GAClC0/D,EAAQ,GACZ6c,EAAGvhC,QAAQ,KACT0kB,EAIJ,OAFA6c,EAAGt9B,SAASxF,EAAMqB,KAAK6kB,WAAWse,KAExB,IAAPpB,EAEMD,EAAkBL,EAAGx8B,WAAYj3C,EAAKizE,GAIxCQ,EAAGx8B,UACX,EAgBD2I,EAAI8W,IAAI0e,6BAA+B,SAASl8C,EAAM72B,EAAGqK,GAInC,iBAAVwsB,IACRA,EAAOyD,SAASzD,EAAM,KAExBA,EAAOA,GAAQ,KAIf,IAcI4c,EAdAwf,GADJ5oD,EAAUA,GAAW,CAAC,GACH4oD,MAAQ3kB,EAAMnvC,OAC7Bi4B,EAAM,CAERq7B,UAAW,SAAS5qC,GAElB,IADA,IAAI3N,EAAI+4C,EAAK9e,aAAatsB,EAAEhzB,QACpB8E,EAAI,EAAGA,EAAIkuB,EAAEhzB,SAAU8E,EAC7BkuB,EAAEluB,GAAKugB,EAAEllB,WAAW2E,EAEvB,GAGCw4C,EAAY9nC,EAAQ8nC,WAAa,WAIrC,GAAiB,aAAdA,EAkBD,MAAM,IAAIr6C,MAAM,qCAAuCq6C,GAGzD,OApBEsB,EAAO,CACLtB,UAAWA,EACX5uC,MAAO,EACPszB,KAAMA,EACNO,IAAKA,EACL47C,KAAMhzE,GAAK,MACXA,EAAG,IAAI8vB,EAAW,MAClBsJ,EAAG,KACH3G,EAAG,KACHq/C,MAAOj7C,GAAQ,EACfg7C,MAAOh7C,GAAQA,GAAQ,GACvBo8C,QAAS,EACTvnE,IAAK,KACLnO,KAAM,OAEHyC,EAAEiuD,QAAQxa,EAAKu/B,MAKfv/B,CACR,EA+BD8J,EAAI8W,IAAI6e,2BAA6B,SAAS3vE,EAAO6sB,GAE9C,cAAe7sB,IAClBA,EAAM4uC,UAAY,YAUpB,IAAI43B,EAAS,IAAIj6C,EAAW,MAC5Bi6C,EAAO9b,QAAQ,IAQf,IAPA,IAKI1E,EALA+hB,EAAW,EACX1c,EAAQ,SAAS/mC,EAAGmK,GAAI,OAAOnK,EAAImK,CAAG,EAGtCs3B,GAAM,IAAIjxD,KAEV86E,EAAQ,EACS,OAAf5vE,EAAMhG,OAAkB6yB,GAAK,GAAK+iD,EAAQ/iD,IAAI,CAElD,GAAmB,IAAhB7sB,EAAMA,MAAa,CAQpB,IAAIszB,EAAoB,OAAZtzB,EAAM61B,EAAc71B,EAAMsuE,MAAQtuE,EAAMuuE,MAChDvG,EAAQ10C,EAAO,EAGE,IAAlBtzB,EAAM0vE,SACP1vE,EAAMmI,IAAM,IAAIokB,EAAW+G,EAAMtzB,EAAM6zB,KAEnC7zB,EAAMmI,IAAI6mD,QAAQgZ,IACpBhoE,EAAMmI,IAAI8mD,UACR1iC,EAAWw/B,IAAIx9B,UAAUy5C,GAAQ3c,EAAOrrD,EAAMmI,KAGlDnI,EAAMmI,IAAIomD,WAAW,GAAKvuD,EAAMmI,IAAIkoB,IAAIm2C,GAAQ7W,YAAa,GAC7DoY,EAAW,IAET/nE,EAAM0vE,SACkB,IAAlB1vE,EAAM0vE,QAEX1vE,EAAMmI,IAAIorB,YAAcD,EAEzBtzB,EAAM0vE,QAAU,EAER1vE,EAAMmI,IAAIwrB,gBAClBm7C,EAAqB9uE,EAAMmI,IAAIorB,gBAC7BvzB,EAAM0vE,QAGR1vE,EAAMmI,IAAIomD,WAAWgY,EAAawB,IAAa,GAAI,GAE3B,IAAlB/nE,EAAM0vE,QAEd1vE,EAAM0vE,QAE6B,IADhC1vE,EAAMmI,IAAI0lB,SAAStB,EAAWw/B,KAAKj2B,IAAI91B,EAAMvD,GAC3Cg2B,UAAUlG,EAAWw/B,KAAc,EAAI,EAClB,IAAlB/rD,EAAM0vE,UAEd1vE,EAAM0vE,QAAU,EACD,OAAZ1vE,EAAM61B,EACP71B,EAAM61B,EAAI71B,EAAMmI,IAEhBnI,EAAMkvB,EAAIlvB,EAAMmI,IAIH,OAAZnI,EAAM61B,GAA0B,OAAZ71B,EAAMkvB,KACzBlvB,EAAMA,MAEVA,EAAMmI,IAAM,KAEf,MAAM,GAAmB,IAAhBnI,EAAMA,MAEXA,EAAM61B,EAAEpD,UAAUzyB,EAAMkvB,GAAK,IAC9BlvB,EAAMmI,IAAMnI,EAAM61B,EAClB71B,EAAM61B,EAAI71B,EAAMkvB,EAChBlvB,EAAMkvB,EAAIlvB,EAAMmI,OAEhBnI,EAAMA,WACH,GAAmB,IAAhBA,EAAMA,MAEdA,EAAMwuE,GAAKxuE,EAAM61B,EAAEhI,SAAStB,EAAWw/B,KACvC/rD,EAAMyuE,GAAKzuE,EAAMkvB,EAAErB,SAAStB,EAAWw/B,KACvC/rD,EAAM0uE,IAAM1uE,EAAMwuE,GAAGl9C,SAAStxB,EAAMyuE,MAClCzuE,EAAMA,WACH,GAAmB,IAAhBA,EAAMA,MAE0C,IAArDA,EAAM0uE,IAAI54C,IAAI91B,EAAMvD,GAAGg2B,UAAUlG,EAAWw/B,OAE3C/rD,EAAMA,OAGRA,EAAM61B,EAAI,KACV71B,EAAMkvB,EAAI,KACVlvB,EAAMA,MAAQ,QAEX,GAAmB,IAAhBA,EAAMA,MAEdA,EAAM6sB,EAAI7sB,EAAM61B,EAAEvE,SAAStxB,EAAMkvB,GAG9BlvB,EAAM6sB,EAAE0G,cAAgBvzB,EAAMszB,OAE7BtzB,EAAMA,OAGRA,EAAMkvB,EAAI,KACVlvB,EAAMA,MAAQ,QAEX,GAAmB,IAAhBA,EAAMA,MAAa,CAE3B,IAAI0uB,EAAI1uB,EAAMvD,EAAE6zD,WAAWtwD,EAAM0uE,KACjC1uE,EAAMhG,KAAO,CACXooD,WAAYpI,EAAI8W,IAAI6d,cAClB3uE,EAAM6sB,EAAG7sB,EAAMvD,EAAGiyB,EAAG1uB,EAAM61B,EAAG71B,EAAMkvB,EACpCR,EAAE2B,IAAIrwB,EAAMwuE,IAAK9/C,EAAE2B,IAAIrwB,EAAMyuE,IAC7BzuE,EAAMkvB,EAAEohC,WAAWtwD,EAAM61B,IAC3BssB,UAAWnI,EAAI8W,IAAI8d,aAAa5uE,EAAM6sB,EAAG7sB,EAAMvD,GAElD,CAIDmzE,IADA5pB,GAAM,IAAIlxD,MACIixD,EACdA,EAAKC,CACN,CAED,OAAsB,OAAfhmD,EAAMhG,IACd,EAgCDggD,EAAI8W,IAAIpP,gBAAkB,SAASpuB,EAAM72B,EAAGqK,EAASoV,GAgDnD,GA9CwB,IAArB3X,UAAUjT,OACQ,iBAATgiC,GACRxsB,EAAUwsB,EACVA,OAAO1hC,GACiB,mBAAT0hC,IACfpX,EAAWoX,EACXA,OAAO1hC,GAEoB,IAArB2S,UAAUjT,OAEC,iBAATgiC,EACQ,mBAAN72B,GACRyf,EAAWzf,EACXA,OAAI7K,GACiB,iBAAN6K,IACfqK,EAAUrK,EACVA,OAAI7K,IAGNkV,EAAUwsB,EACVpX,EAAWzf,EACX62B,OAAO1hC,EACP6K,OAAI7K,GAEuB,IAArB2S,UAAUjT,SAEF,iBAANmL,EACc,mBAAZqK,IACRoV,EAAWpV,EACXA,OAAUlV,IAGZsqB,EAAWpV,EACXA,EAAUrK,EACVA,OAAI7K,IAGRkV,EAAUA,GAAW,CAAC,OACVlV,IAAT0hC,IACDA,EAAOxsB,EAAQwsB,MAAQ,WAEhB1hC,IAAN6K,IACDA,EAAIqK,EAAQrK,GAAK,QAIfsuC,EAAMjkC,QAAQ6hD,oBAAsB7hD,EAAQ4oD,MAC9Cp8B,GAAQ,KAAOA,GAAQ,QAAgB,QAAN72B,GAAuB,IAANA,GAClD,GAAGyf,EAAU,CAEX,GAAG6yD,EAAkB,mBACnB,OAAO9G,EAAQvmB,gBAAgB,MAAO,CACpCmuB,cAAev8C,EACfw8C,eAAgBrzE,EAChBszE,kBAAmB,CACjBx8E,KAAM,OACNilD,OAAQ,OAEVw3B,mBAAoB,CAClBz8E,KAAM,QACNilD,OAAQ,SAET,SAASzgC,EAAKs1D,EAAK4C,GACpB,GAAGl4D,EACD,OAAOmE,EAASnE,GAElBmE,EAAS,KAAM,CACbkmC,WAAYpI,EAAIoqB,kBAAkB6L,GAClC9tB,UAAWnI,EAAIk2B,iBAAiB7C,IAEnC,IAEH,GAAG2B,EAAoB,gBACrBA,EAAoB,aAEpB,OAAO5iC,EAAK88B,YAAYlQ,OAAOiW,OAAOzP,YAAY,CAChDnrE,KAAM,oBACNw7E,cAAev8C,EACfw8C,eAAgBX,EAAiB1yE,GACjCutB,KAAM,CAAC31B,KAAM,aACZ,EAA+B,CAAC,OAAQ,WAC1CgnB,MAAK,SAAS80D,GACb,OAAO/jC,EAAK88B,YAAYlQ,OAAOiW,OAAOmB,UACpC,QAASD,EAAK/tB,WAEjB,IAAE/mC,UAAKzpB,GAAW,SAASmmB,GAC1BmE,EAASnE,EACV,IAAEsD,MAAK,SAASg1D,GACf,GAAGA,EAAO,CACR,IAAIjuB,EAAapI,EAAIqI,mBACnB3P,EAAK6D,QAAQxL,EAAMqB,KAAKC,aAAagkC,KACvCn0D,EAAS,KAAM,CACbkmC,WAAYA,EACZD,UAAWnI,EAAIs2B,gBAAgBluB,EAAWv1B,EAAGu1B,EAAW3lD,IAE3D,CACF,IAEH,GAAGyyE,EAAsB,gBACvBA,EAAsB,aAAc,CACpC,IAAIqB,EAAQnkC,EAAK88B,YAAYC,SAAS8F,OAAOzP,YAAY,CACvDnrE,KAAM,oBACNw7E,cAAev8C,EACfw8C,eAAgBX,EAAiB1yE,GACjCutB,KAAM,CAAC31B,KAAM,aACZ,EAA+B,CAAC,OAAQ,WAqB3C,OApBAk8E,EAAMC,WAAa,SAAS/zE,GAC1B,IAAI0zE,EAAO1zE,EAAEgI,OAAO9R,OAChB89E,EAAWrkC,EAAK88B,YAAYC,SAAS8F,OAAOmB,UAC9C,QAASD,EAAK/tB,YAChBquB,EAASD,WAAa,SAAS/zE,GAC7B,IAAI4zE,EAAQ5zE,EAAEgI,OAAO9R,OACjByvD,EAAapI,EAAIqI,mBACnB3P,EAAK6D,QAAQxL,EAAMqB,KAAKC,aAAagkC,KACvCn0D,EAAS,KAAM,CACbkmC,WAAYA,EACZD,UAAWnI,EAAIs2B,gBAAgBluB,EAAWv1B,EAAGu1B,EAAW3lD,IAE3D,EACDg0E,EAASliE,QAAU,SAASwJ,GAC1BmE,EAASnE,EACV,CACF,OACDw4D,EAAMhiE,QAAU,SAASwJ,GACvBmE,EAASnE,EACV,EAEF,CACF,MAEC,GAAGg3D,EAAkB,uBAAwB,CAC3C,IAAI2B,EAAUzI,EAAQ0I,oBAAoB,MAAO,CAC/Cd,cAAev8C,EACfw8C,eAAgBrzE,EAChBszE,kBAAmB,CACjBx8E,KAAM,OACNilD,OAAQ,OAEVw3B,mBAAoB,CAClBz8E,KAAM,QACNilD,OAAQ,SAGZ,MAAO,CACL4J,WAAYpI,EAAIoqB,kBAAkBsM,EAAQtuB,YAC1CD,UAAWnI,EAAIk2B,iBAAiBQ,EAAQvuB,WAE3C,CAKL,IAAIniD,EAAQg6C,EAAI8W,IAAI0e,6BAA6Bl8C,EAAM72B,EAAGqK,GAC1D,IAAIoV,EAEF,OADA89B,EAAI8W,IAAI6e,2BAA2B3vE,EAAO,GACnCA,EAAMhG,KAEfo0E,EAAiBpuE,EAAO8G,EAASoV,EAClC,EAUD89B,EAAIs2B,gBAAkBt2B,EAAI8W,IAAI8d,aAAe,SAAS/hD,EAAGpwB,GACvD,IAAIrC,EAAM,CACRyyB,EAAGA,EACHpwB,EAAGA,EAoBLrC,QAAc,SAAS5G,EAAMo9E,EAAQC,GAOnC,GANqB,iBAAXD,EACRA,EAASA,EAAO5xC,mBACGptC,IAAXg/E,IACRA,EAAS,oBAGG,qBAAXA,EACDA,EAAS,CACPv+E,OAAQ,SAASyqB,EAAG1iB,EAAKizE,GACvB,OAAOM,EAAkB7wD,EAAG1iB,EAAK,GAAMi3C,UACxC,QAEE,GAAc,aAAXu/B,GAAoC,eAAXA,EACjCA,EAAS,CACPv+E,OAAQ,SAASyqB,EAAG1iB,GAClB,OAAO2wC,EAAM4vB,MAAMG,gBAAgB1gE,EAAK0iB,EAAG+zD,EAC5C,QAEE,IAAsD,IAAnD,CAAC,MAAO,OAAQ,OAAQ,MAAMrnE,QAAQonE,GAC9CA,EAAS,CAACv+E,OAAQ,SAASoK,GAAI,OAAOA,CAAG,QACpC,GAAqB,iBAAXm0E,EACf,MAAM,IAAIr8E,MAAM,mCAAqCq8E,EAAS,MAIhE,IAAIn0E,EAAIm0E,EAAOv+E,OAAOmB,EAAM4G,GAAK,GACjC,OAAO4/C,EAAI8W,IAAIhlB,QAAQrvC,EAAGrC,GAAK,EAChC,EAqCDA,OAAa,SAASs3C,EAAQ2R,EAAWutB,EAAQ9pE,GAC1B,iBAAX8pE,EACRA,EAASA,EAAO5xC,mBACGptC,IAAXg/E,IACRA,EAAS,0BAEIh/E,IAAZkV,IACDA,EAAU,CACRgqE,sBAAsB,IAGrB,yBAA0BhqE,IAC7BA,EAAQgqE,sBAAuB,GAGnB,sBAAXF,EACDA,EAAS,CACPrlD,OAAQ,SAASmmB,EAAQhjB,GAEvBA,EAAIw/C,EAAkBx/C,EAAGt0B,GAAK,GAE9B,IAAIu/B,EAAM+Y,EAAK6D,QAAQ7nB,EAAG,CACxB8nB,cAAe1vC,EAAQgqE,uBAIrB39B,EAAU,CAAC,EACXmG,EAAS,GACb,IAAI5G,EAAK2G,SAAS1f,EAAKqzC,EAAqB75B,EAASmG,GAKnD,MAJIl1C,EAAQ,IAAI7P,MACd,8EAEI+kD,OAASA,EACTl1C,EAKR,IAUMA,EAVF4yC,EAAMtE,EAAKwE,SAAS/D,EAAQ49B,qBAChC,GAAK/5B,IAAQjM,EAAMkP,KAAK+2B,KACtBh6B,IAAQjM,EAAMkP,KAAKkZ,KACnBnc,IAAQjM,EAAMkP,KAAK6d,MACnB9gB,IAAQjM,EAAMkP,KAAKg3B,QACnBj6B,IAAQjM,EAAMkP,KAAKmlB,QACnBpoB,IAAQjM,EAAMkP,KAAKolB,QACnBroB,IAAQjM,EAAMkP,KAAK8H,QACnB/K,IAAQjM,EAAMkP,KAAK,eACnBjD,IAAQjM,EAAMkP,KAAK,cAInB,MAHI71C,EAAQ,IAAI7P,MACd,0DACIyiD,IAAMA,EACN5yC,EAIR,IAAG4yC,IAAQjM,EAAMkP,KAAK+2B,KAAOh6B,IAAQjM,EAAMkP,KAAKkZ,QACzC,eAAgBhgB,GACnB,MAAM,IAAI5+C,MACR,0HAON,OAAOm9C,IAAWyB,EAAQzB,MAC3B,GAEgB,SAAXk/B,GAAgC,SAAXA,GAAgC,OAAXA,IAClDA,EAAS,CACPrlD,OAAQ,SAASmmB,EAAQhjB,GAGvB,OAAOgjB,KADPhjB,EAAIw/C,EAAkBx/C,EAAGt0B,GAAK,GAE/B,IAKL,IAAIs0B,EAAIsrB,EAAI8W,IAAIvlB,QAAQ8X,EAAWjpD,GAAK,GAAM,GAC9C,OAAOw2E,EAAOrlD,OAAOmmB,EAAQhjB,EAAGt0B,EAAIyyB,EAAE0G,YACvC,GAED,OAAOn5B,CACR,EAiBD4/C,EAAIk3B,iBAAmBl3B,EAAI8W,IAAI6d,cAAgB,SAC7C9hD,EAAGpwB,EAAGiyB,EAAGmH,EAAG3G,EAAGo+C,EAAIC,EAAIC,GACvB,IAAIpzE,EAAM,CACRyyB,EAAGA,EACHpwB,EAAGA,EACHiyB,EAAGA,EACHmH,EAAGA,EACH3G,EAAGA,EACHo+C,GAAIA,EACJC,GAAIA,EACJC,KAAMA,EAgBRpzE,QAAc,SAAS5G,EAAMo9E,EAAQC,GACd,iBAAXD,EACRA,EAASA,EAAO5xC,mBACGptC,IAAXg/E,IACRA,EAAS,oBAIX,IAAIliD,EAAIsrB,EAAI8W,IAAIvlB,QAAQ/3C,EAAM4G,GAAK,GAAO,GAE1C,GAAc,qBAAXw2E,EACDA,EAAS,CAACr7E,OAAQ24E,QACb,GAAc,aAAX0C,GAAoC,eAAXA,EACjCA,EAAS,CACPr7E,OAAQ,SAASm5B,EAAGt0B,GAClB,OAAO2wC,EAAM4vB,MAAMc,gBAAgBrhE,EAAKs0B,EAAGmiD,EAC5C,OAEE,KAAsD,IAAnD,CAAC,MAAO,OAAQ,OAAQ,MAAMrnE,QAAQonE,GAG9C,MAAM,IAAIr8E,MAAM,mCAAqCq8E,EAAS,MAF9DA,EAAS,CAACr7E,OAAQ,SAASm5B,GAAI,OAAOA,CAAG,EAG1C,CAGD,OAAOkiD,EAAOr7E,OAAOm5B,EAAGt0B,GAAK,EAC9B,EAqBDA,KAAW,SAAS+mD,EAAIyvB,GAOtB,IAAIhD,GAAK,EAEY,iBAAXgD,IACRA,EAASA,EAAO5xC,oBAGJptC,IAAXg/E,GAAmC,sBAAXA,GACzBA,EAAS,CAACv+E,OAAQ46E,GAClBW,EAAK,GACc,SAAXgD,GAAgC,SAAXA,GAAgC,OAAXA,IAClDA,EAAS,CAACv+E,OAAQ,WAAY,OAAO8uD,CAAI,GACzCysB,EAAK,GAIP,IAAIl/C,EAAIkiD,EAAOv+E,OAAO8uD,EAAI/mD,EAAIyyB,EAAE0G,aAChC,OAAOymB,EAAI8W,IAAIhlB,QAAQpd,EAAGt0B,EAAKwzE,EAChC,GAED,OAAOxzE,CACR,EASD4/C,EAAIsd,kBAAoB,SAASF,GAE/B,OAAO1kB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAEjEN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKG,SAAS,EACnDR,EAAKsG,aAAa,GAAG3H,YAEvBqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAC1DN,EAAK7+C,OACH6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EACrCV,EAAKqE,SAASiD,EAAIC,KAAKqqB,eAAejzB,YACxCqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKoB,MAAM,EAAO,MAG3DzB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKM,aAAa,EACvDX,EAAKgE,MAAM0gB,GAAQ/lB,aAExB,EAUD2I,EAAIqI,mBAAqB,SAAS1oB,GAEhC,IAmBI9M,EAAGpwB,EAAGiyB,EAAGmH,EAAG3G,EAAGo+C,EAAIC,EAAIC,EAnBvBr6B,EAAU,CAAC,EACXmG,EAAS,GAQb,GAPG5G,EAAK2G,SAAS1f,EAAKgZ,EAAqBQ,EAASmG,KAClD3f,EAAM+Y,EAAK6D,QAAQxL,EAAMqB,KAAKC,aAAa8G,EAAQiP,cAIrDjP,EAAU,CAAC,EACXmG,EAAS,IACL5G,EAAK2G,SAAS1f,EAAKmzC,EAAwB35B,EAASmG,GAAS,CAC/D,IAAIl1C,EAAQ,IAAI7P,MAAM,4EAGtB,MADA6P,EAAMk1C,OAASA,EACTl1C,CACP,CAgBD,OAVAyoB,EAAIke,EAAMqB,KAAKC,aAAa8G,EAAQg+B,mBAAmB3P,QACvD/kE,EAAIsuC,EAAMqB,KAAKC,aAAa8G,EAAQi+B,0BAA0B5P,QAC9D9yC,EAAIqc,EAAMqB,KAAKC,aAAa8G,EAAQk+B,2BAA2B7P,QAC/D3rC,EAAIkV,EAAMqB,KAAKC,aAAa8G,EAAQm+B,kBAAkB9P,QACtDtyC,EAAI6b,EAAMqB,KAAKC,aAAa8G,EAAQo+B,kBAAkB/P,QACtD8L,EAAKviC,EAAMqB,KAAKC,aAAa8G,EAAQq+B,qBAAqBhQ,QAC1D+L,EAAKxiC,EAAMqB,KAAKC,aAAa8G,EAAQs+B,qBAAqBjQ,QAC1DgM,EAAOziC,EAAMqB,KAAKC,aAAa8G,EAAQu+B,uBAAuBlQ,QAGvDxnB,EAAIk3B,iBACT,IAAI3kD,EAAWM,EAAG,IAClB,IAAIN,EAAW9vB,EAAG,IAClB,IAAI8vB,EAAWmC,EAAG,IAClB,IAAInC,EAAWsJ,EAAG,IAClB,IAAItJ,EAAW2C,EAAG,IAClB,IAAI3C,EAAW+gD,EAAI,IACnB,IAAI/gD,EAAWghD,EAAI,IACnB,IAAIhhD,EAAWihD,EAAM,IACxB,EASDxzB,EAAIud,iBAAmBvd,EAAI23B,0BAA4B,SAASv3E,GAE9D,OAAOs4C,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAEjEN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKG,SAAS,EACnDR,EAAKsG,aAAa,GAAG3H,YAEvBqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKG,SAAS,EACnD27B,EAAWz0E,EAAIyyB,IAEjB6lB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKG,SAAS,EACnD27B,EAAWz0E,EAAIqC,IAEjBi2C,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKG,SAAS,EACnD27B,EAAWz0E,EAAIs0B,IAEjBgkB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKG,SAAS,EACnD27B,EAAWz0E,EAAIy7B,IAEjB6c,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKG,SAAS,EACnD27B,EAAWz0E,EAAI80B,IAEjBwjB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKG,SAAS,EACnD27B,EAAWz0E,EAAIkzE,KAEjB56B,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKG,SAAS,EACnD27B,EAAWz0E,EAAImzE,KAEjB76B,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKG,SAAS,EACnD27B,EAAWz0E,EAAIozE,QAEpB,EASDxzB,EAAI0I,kBAAoB,SAAS/oB,GAE/B,IAAIwZ,EAAU,CAAC,EACXmG,EAAS,GACb,GAAG5G,EAAK2G,SAAS1f,EAAK2Z,EAAoBH,EAASmG,GAAS,CAE1D,IAEMl1C,EAFF4yC,EAAMtE,EAAKwE,SAAS/D,EAAQwP,cAChC,GAAG3L,IAAQgD,EAAIC,KAAKqqB,cAGlB,MAFIlgE,EAAQ,IAAI7P,MAAM,yCAChByiD,IAAMA,EACN5yC,EAERu1B,EAAMwZ,EAAQy+B,YACf,CAID,GADAt4B,EAAS,IACL5G,EAAK2G,SAAS1f,EAAKozC,EAAuB55B,EAASmG,GAIrD,MAHIl1C,EAAQ,IAAI7P,MAAM,2EAEhB+kD,OAASA,EACTl1C,EAIR,IAAIyoB,EAAIke,EAAMqB,KAAKC,aAAa8G,EAAQ0+B,kBAAkBrQ,QACtD/kE,EAAIsuC,EAAMqB,KAAKC,aAAa8G,EAAQ2+B,mBAAmBtQ,QAG3D,OAAOxnB,EAAIs2B,gBACT,IAAI/jD,EAAWM,EAAG,IAClB,IAAIN,EAAW9vB,EAAG,IACrB,EASDu9C,EAAI+3B,gBAAkB/3B,EAAIg4B,gCAAkC,SAAS53E,GAEnE,OAAOs4C,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAEjEN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAE1DN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAASiD,EAAIC,KAAKqqB,eAAejzB,YAExCqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKoB,MAAM,EAAO,MAG3DzB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKS,WAAW,EAAO,CAC5DwG,EAAIi4B,wBAAwB73E,MAGjC,EASD4/C,EAAIi4B,wBAA0B,SAAS73E,GAErC,OAAOs4C,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAEjEN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKG,SAAS,EACnD27B,EAAWz0E,EAAIyyB,IAEjB6lB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKG,SAAS,EACnD27B,EAAWz0E,EAAIqC,KAEpB,mBC9/CD,IAAIsuC,EAAQrqB,EAAQ,OACpBA,EAAQ,OACRA,EAAQ,OAER,IAAIo3C,EAAO92C,EAAOiE,QAAU8lB,EAAM+sB,KAAO/sB,EAAM+sB,MAAQ,CAAC,EACxD/sB,EAAMoW,GAAG2W,KAAO/sB,EAAMoW,GAAGxG,WAAWmd,KAAOA,EAO3CA,EAAKjkE,OAAS,WAERu/D,IAgLJC,EAAWpgE,OAAOC,aAAa,KAC/BmgE,GAAYtoB,EAAMqB,KAAK8kB,WAAWj+D,OAAOC,aAAa,GAAO,IAG7DkgE,GAAe,GA/Kf,IAAIM,EAAS,KAGT3Y,EAAShQ,EAAMqB,KAAKC,eAGpBH,EAAK,IAAI5yC,MAAM,IAGf6nD,EAAK,CACPvS,UAAW,OACXsa,YAAa,GACb0H,aAAc,GAEd+C,cAAe,EAEfC,kBAAmB,KAEnBC,kBAAmB,EAQrB1S,MAAW,WAETA,EAAGwS,cAAgB,EAGnBxS,EAAGyS,kBAAoBzS,EAAG2S,gBAAkB,GAE5C,IADA,IAAIC,EAAS5S,EAAG0S,kBAAoB,EAC5Bz9D,EAAI,EAAGA,EAAI29D,IAAU39D,EAC3B+qD,EAAGyS,kBAAkB/gE,KAAK,GAU5B,OARAkoD,EAAShQ,EAAMqB,KAAKC,eACpBqnB,EAAS,CACPM,GAAI,WACJC,GAAI,WACJC,GAAI,WACJC,GAAI,UACJ+d,GAAI,YAEC/wB,CACR,GAkHD,OAhHAA,EAAG1nC,QAYH0nC,EAAG9lB,OAAS,SAASlxB,EAAK+2C,GACR,SAAbA,IACD/2C,EAAM4gC,EAAMqB,KAAKpjB,WAAW7e,IAI9B,IAAIoxB,EAAMpxB,EAAI7Y,OACd6vD,EAAGwS,eAAiBp4B,EACpBA,EAAM,CAAEA,EAAM,aAAiB,EAAGA,IAAQ,GAC1C,IAAI,IAAInlC,EAAI+qD,EAAGyS,kBAAkBtiE,OAAS,EAAG8E,GAAK,IAAKA,EACrD+qD,EAAGyS,kBAAkBx9D,IAAMmlC,EAAI,GAC/BA,EAAI,GAAKA,EAAI,IAAO4lB,EAAGyS,kBAAkBx9D,GAAK,aAAiB,GAC/D+qD,EAAGyS,kBAAkBx9D,GAAK+qD,EAAGyS,kBAAkBx9D,KAAO,EACtDmlC,EAAI,GAAOA,EAAI,GAAK,aAAiB,EAcvC,OAVAwf,EAAOxK,SAASpmC,GAGhBiqD,EAAQV,EAAQxnB,EAAI6O,IAGjBA,EAAO75B,KAAO,MAA4B,IAApB65B,EAAOzpD,WAC9BypD,EAAOI,UAGFgG,CACR,EAODA,EAAGzP,OAAS,WAqBV,IAAI2iB,EAAatpB,EAAMqB,KAAKC,eAC5BgoB,EAAW9jB,SAASwK,EAAOxoD,SAG3B,IAYIulB,EALAwjC,EANF6F,EAAGyS,kBAAkBzS,EAAGyS,kBAAkBtiE,OAAS,GACnD6vD,EAAG0S,kBAKuB1S,EAAG+H,YAAc,EAC7CmL,EAAW9jB,SAAS8iB,EAASjrD,OAAO,EAAG+4C,EAAG+H,YAAc5N,IAMxD,IADA,IAAIhoB,EAAiC,EAA1B6tB,EAAGyS,kBAAkB,GACxBx9D,EAAI,EAAGA,EAAI+qD,EAAGyS,kBAAkBtiE,OAAS,IAAK8E,EAGpDk9B,IAFAxb,EAAqC,EAA9BqpC,EAAGyS,kBAAkBx9D,EAAI,IAChB,aAAiB,EAEjCi+D,EAAWrY,SAAS1oB,IAAS,GAC7BA,EAAOxb,IAAS,EAElBu8C,EAAWrY,SAAS1oB,GAEpB,IAAIihC,EAAK,CACPP,GAAIN,EAAOM,GACXC,GAAIP,EAAOO,GACXC,GAAIR,EAAOQ,GACXC,GAAIT,EAAOS,GACX+d,GAAIxe,EAAOwe,IAEb9d,EAAQG,EAAIroB,EAAImoB,GAChB,IAAInkB,EAAOnF,EAAMqB,KAAKC,eAMtB,OALA6D,EAAK8L,SAASuY,EAAGP,IACjB9jB,EAAK8L,SAASuY,EAAGN,IACjB/jB,EAAK8L,SAASuY,EAAGL,IACjBhkB,EAAK8L,SAASuY,EAAGJ,IACjBjkB,EAAK8L,SAASuY,EAAG2d,IACVhiC,CACR,EAEMiR,CACR,EAGD,IAAIkS,EAAW,KACXD,GAAe,EAqBnB,SAASgB,EAAQ7+C,EAAGipB,EAAGjsC,GAIrB,IAFA,IAAImhC,EAAG7c,EAAGF,EAAGnJ,EAAGkhB,EAAGjyB,EAAMrG,EACrBmlC,EAAMhpC,EAAMjB,SACViqC,GAAO,IAAI,CAaf,IAPA1kB,EAAItB,EAAEy+C,GACNr9C,EAAIpB,EAAE0+C,GACNzmD,EAAI+H,EAAE2+C,GACNxlC,EAAInZ,EAAE4+C,GACN13D,EAAI8Y,EAAE28D,GAGF97E,EAAI,EAAGA,EAAI,KAAMA,EACnBs9B,EAAInhC,EAAM3B,WACV4tC,EAAEpoC,GAAKs9B,EAEPA,GAAM7c,GAAK,EAAMA,IAAM,KADnB6X,EAAK/X,GAAKnJ,EAAIkhB,IACgBjyB,EAAI,WAAai3B,EACnDj3B,EAAIiyB,EACJA,EAAIlhB,EAEJA,GAAMmJ,GAAK,GAAOA,IAAM,KAAQ,EAChCA,EAAIE,EACJA,EAAI6c,EAEN,KAAMt9B,EAAI,KAAMA,EAEds9B,GADAA,EAAK8K,EAAEpoC,EAAI,GAAKooC,EAAEpoC,EAAI,GAAKooC,EAAEpoC,EAAI,IAAMooC,EAAEpoC,EAAI,MACnC,EAAMs9B,IAAM,GACtB8K,EAAEpoC,GAAKs9B,EAEPA,GAAM7c,GAAK,EAAMA,IAAM,KADnB6X,EAAK/X,GAAKnJ,EAAIkhB,IACgBjyB,EAAI,WAAai3B,EACnDj3B,EAAIiyB,EACJA,EAAIlhB,EAEJA,GAAMmJ,GAAK,GAAOA,IAAM,KAAQ,EAChCA,EAAIE,EACJA,EAAI6c,EAGN,KAAMt9B,EAAI,KAAMA,EAEds9B,GADAA,EAAK8K,EAAEpoC,EAAI,GAAKooC,EAAEpoC,EAAI,GAAKooC,EAAEpoC,EAAI,IAAMooC,EAAEpoC,EAAI,MACnC,EAAMs9B,IAAM,GACtB8K,EAAEpoC,GAAKs9B,EAEPA,GAAM7c,GAAK,EAAMA,IAAM,KADnBF,EAAInJ,EAAIkhB,GACsBjyB,EAAI,WAAai3B,EACnDj3B,EAAIiyB,EACJA,EAAIlhB,EAEJA,GAAMmJ,GAAK,GAAOA,IAAM,KAAQ,EAChCA,EAAIE,EACJA,EAAI6c,EAEN,KAAMt9B,EAAI,KAAMA,EAEds9B,GADAA,EAAK8K,EAAEpoC,EAAI,GAAKooC,EAAEpoC,EAAI,IAAMooC,EAAEpoC,EAAI,IAAMooC,EAAEpoC,EAAI,MACpC,EAAMs9B,IAAM,GACtB8K,EAAEpoC,GAAKs9B,EAEPA,GAAM7c,GAAK,EAAMA,IAAM,KADnBF,EAAInJ,EAAIkhB,GACsBjyB,EAAI,WAAai3B,EACnDj3B,EAAIiyB,EACJA,EAAIlhB,EAEJA,GAAMmJ,GAAK,GAAOA,IAAM,KAAQ,EAChCA,EAAIE,EACJA,EAAI6c,EAGN,KAAMt9B,EAAI,KAAMA,EAEds9B,GADAA,EAAK8K,EAAEpoC,EAAI,GAAKooC,EAAEpoC,EAAI,IAAMooC,EAAEpoC,EAAI,IAAMooC,EAAEpoC,EAAI,MACpC,EAAMs9B,IAAM,GACtB8K,EAAEpoC,GAAKs9B,EAEPA,GAAM7c,GAAK,EAAMA,IAAM,KADlBF,EAAInJ,EAAMkhB,GAAK/X,EAAInJ,IACU/Q,EAAI,WAAai3B,EACnDj3B,EAAIiyB,EACJA,EAAIlhB,EAEJA,GAAMmJ,GAAK,GAAOA,IAAM,KAAQ,EAChCA,EAAIE,EACJA,EAAI6c,EAGN,KAAMt9B,EAAI,KAAMA,EAEds9B,GADAA,EAAK8K,EAAEpoC,EAAI,GAAKooC,EAAEpoC,EAAI,IAAMooC,EAAEpoC,EAAI,IAAMooC,EAAEpoC,EAAI,MACpC,EAAMs9B,IAAM,GACtB8K,EAAEpoC,GAAKs9B,EAEPA,GAAM7c,GAAK,EAAMA,IAAM,KADnBF,EAAInJ,EAAIkhB,GACsBjyB,EAAI,WAAai3B,EACnDj3B,EAAIiyB,EACJA,EAAIlhB,EAEJA,GAAMmJ,GAAK,GAAOA,IAAM,KAAQ,EAChCA,EAAIE,EACJA,EAAI6c,EAINne,EAAEy+C,GAAMz+C,EAAEy+C,GAAKn9C,EAAK,EACpBtB,EAAE0+C,GAAM1+C,EAAE0+C,GAAKt9C,EAAK,EACpBpB,EAAE2+C,GAAM3+C,EAAE2+C,GAAK1mD,EAAK,EACpB+H,EAAE4+C,GAAM5+C,EAAE4+C,GAAKzlC,EAAK,EACpBnZ,EAAE28D,GAAM38D,EAAE28D,GAAKz1E,EAAK,EAEpB8+B,GAAO,EACR,CACF,kBCrTD,IAAIwP,EAAQrqB,EAAQ,OACpBA,EAAQ,OACRA,EAAQ,OAER,IAAI0+C,EAASp+C,EAAOiE,QAAU8lB,EAAMq0B,OAASr0B,EAAMq0B,QAAU,CAAC,EAC9Dr0B,EAAMoW,GAAGie,OAASr0B,EAAMoW,GAAGxG,WAAWykB,OAASA,EAO/CA,EAAOvrE,OAAS,WAEVu/D,IA4LJC,EAAWpgE,OAAOC,aAAa,KAC/BmgE,GAAYtoB,EAAMqB,KAAK8kB,WAAWj+D,OAAOC,aAAa,GAAO,IAG7DsgE,EAAK,CACH,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,UAAY,UAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,YAGtCJ,GAAe,GA9Mf,IAAIM,EAAS,KAGT3Y,EAAShQ,EAAMqB,KAAKC,eAGpBH,EAAK,IAAI5yC,MAAM,IAGf6nD,EAAK,CACPvS,UAAW,SACXsa,YAAa,GACb0H,aAAc,GAEd+C,cAAe,EAEfC,kBAAmB,KAEnBC,kBAAmB,EAQrB1S,MAAW,WAETA,EAAGwS,cAAgB,EAGnBxS,EAAGyS,kBAAoBzS,EAAG2S,gBAAkB,GAE5C,IADA,IAAIC,EAAS5S,EAAG0S,kBAAoB,EAC5Bz9D,EAAI,EAAGA,EAAI29D,IAAU39D,EAC3B+qD,EAAGyS,kBAAkB/gE,KAAK,GAa5B,OAXAkoD,EAAShQ,EAAMqB,KAAKC,eACpBqnB,EAAS,CACPM,GAAI,WACJC,GAAI,WACJC,GAAI,WACJC,GAAI,WACJ+d,GAAI,WACJC,GAAI,WACJC,GAAI,UACJC,GAAI,YAEClxB,CACR,GAwHD,OAtHAA,EAAG1nC,QAYH0nC,EAAG9lB,OAAS,SAASlxB,EAAK+2C,GACR,SAAbA,IACD/2C,EAAM4gC,EAAMqB,KAAKpjB,WAAW7e,IAI9B,IAAIoxB,EAAMpxB,EAAI7Y,OACd6vD,EAAGwS,eAAiBp4B,EACpBA,EAAM,CAAEA,EAAM,aAAiB,EAAGA,IAAQ,GAC1C,IAAI,IAAInlC,EAAI+qD,EAAGyS,kBAAkBtiE,OAAS,EAAG8E,GAAK,IAAKA,EACrD+qD,EAAGyS,kBAAkBx9D,IAAMmlC,EAAI,GAC/BA,EAAI,GAAKA,EAAI,IAAO4lB,EAAGyS,kBAAkBx9D,GAAK,aAAiB,GAC/D+qD,EAAGyS,kBAAkBx9D,GAAK+qD,EAAGyS,kBAAkBx9D,KAAO,EACtDmlC,EAAI,GAAOA,EAAI,GAAK,aAAiB,EAcvC,OAVAwf,EAAOxK,SAASpmC,GAGhBiqD,EAAQV,EAAQxnB,EAAI6O,IAGjBA,EAAO75B,KAAO,MAA4B,IAApB65B,EAAOzpD,WAC9BypD,EAAOI,UAGFgG,CACR,EAODA,EAAGzP,OAAS,WAqBV,IAAI2iB,EAAatpB,EAAMqB,KAAKC,eAC5BgoB,EAAW9jB,SAASwK,EAAOxoD,SAG3B,IAYIulB,EALAwjC,EANF6F,EAAGyS,kBAAkBzS,EAAGyS,kBAAkBtiE,OAAS,GACnD6vD,EAAG0S,kBAKuB1S,EAAG+H,YAAc,EAC7CmL,EAAW9jB,SAAS8iB,EAASjrD,OAAO,EAAG+4C,EAAG+H,YAAc5N,IAMxD,IADA,IAAIhoB,EAAiC,EAA1B6tB,EAAGyS,kBAAkB,GACxBx9D,EAAI,EAAGA,EAAI+qD,EAAGyS,kBAAkBtiE,OAAS,IAAK8E,EAGpDk9B,IAFAxb,EAAqC,EAA9BqpC,EAAGyS,kBAAkBx9D,EAAI,IAChB,aAAiB,EAEjCi+D,EAAWrY,SAAS1oB,IAAS,GAC7BA,EAAOxb,IAAS,EAElBu8C,EAAWrY,SAAS1oB,GAEpB,IAAIihC,EAAK,CACPP,GAAIN,EAAOM,GACXC,GAAIP,EAAOO,GACXC,GAAIR,EAAOQ,GACXC,GAAIT,EAAOS,GACX+d,GAAIxe,EAAOwe,GACXC,GAAIze,EAAOye,GACXC,GAAI1e,EAAO0e,GACXC,GAAI3e,EAAO2e,IAEbje,EAAQG,EAAIroB,EAAImoB,GAChB,IAAInkB,EAAOnF,EAAMqB,KAAKC,eAStB,OARA6D,EAAK8L,SAASuY,EAAGP,IACjB9jB,EAAK8L,SAASuY,EAAGN,IACjB/jB,EAAK8L,SAASuY,EAAGL,IACjBhkB,EAAK8L,SAASuY,EAAGJ,IACjBjkB,EAAK8L,SAASuY,EAAG2d,IACjBhiC,EAAK8L,SAASuY,EAAG4d,IACjBjiC,EAAK8L,SAASuY,EAAG6d,IACjBliC,EAAK8L,SAASuY,EAAG8d,IACVniC,CACR,EAEMiR,CACR,EAGD,IAAIkS,EAAW,KACXD,GAAe,EAGfI,EAAK,KAwCT,SAASY,EAAQ7+C,EAAGipB,EAAGjsC,GAIrB,IAFA,IAAIwzD,EAAIC,EAAIssB,EAAYC,EAAKn8E,EAAGygB,EAAGF,EAAGnJ,EAAGkhB,EAAGjyB,EAAG0kB,EAAG+jC,EAAGhH,EACjD3iB,EAAMhpC,EAAMjB,SACViqC,GAAO,IAAI,CAGf,IAAInlC,EAAI,EAAGA,EAAI,KAAMA,EACnBooC,EAAEpoC,GAAK7D,EAAM3B,WAEf,KAAMwF,EAAI,KAAMA,EAGd2vD,IADAA,EAAKvnB,EAAEpoC,EAAI,MAEA,GAAO2vD,GAAM,KACpBA,IAAO,GAAOA,GAAM,IACrBA,IAAO,GAGVC,IADAA,EAAKxnB,EAAEpoC,EAAI,OAEA,EAAM4vD,GAAM,KACnBA,IAAO,GAAOA,GAAM,IACrBA,IAAO,EAEVxnB,EAAEpoC,GAAM2vD,EAAKvnB,EAAEpoC,EAAI,GAAK4vD,EAAKxnB,EAAEpoC,EAAI,IAAO,EAc5C,IAVAygB,EAAItB,EAAEy+C,GACNr9C,EAAIpB,EAAE0+C,GACNzmD,EAAI+H,EAAE2+C,GACNxlC,EAAInZ,EAAE4+C,GACN13D,EAAI8Y,EAAE28D,GACN/wD,EAAI5L,EAAE48D,GACNjtB,EAAI3vC,EAAE68D,GACNl0B,EAAI3oC,EAAE88D,GAGFj8E,EAAI,EAAGA,EAAI,KAAMA,EASnBk8E,GACIz7D,IAAM,EAAMA,GAAK,KACjBA,IAAM,GAAOA,GAAK,KAClBA,IAAM,GAAOA,GAAK,IAEtB07D,EAAO17D,EAAIF,EAAMnJ,GAAKqJ,EAAIF,GAG1BovC,EAAK7H,IAdDzhD,IAAM,EAAMA,GAAK,KACjBA,IAAM,GAAOA,GAAK,KAClBA,IAAM,GAAOA,GAAK,KAEjByoD,EAAKzoD,GAAK0kB,EAAI+jC,IAUAsO,EAAGp9D,GAAKooC,EAAEpoC,GAE7B8nD,EAAIgH,EACJA,EAAI/jC,EACJA,EAAI1kB,EAGJA,EAAKiyB,EAAIq3B,IAAQ,EACjBr3B,EAAIlhB,EACJA,EAAImJ,EACJA,EAAIE,EAGJA,EAAKkvC,GAZLC,EAAKssB,EAAKC,KAYQ,EAIpBh9D,EAAEy+C,GAAMz+C,EAAEy+C,GAAKn9C,EAAK,EACpBtB,EAAE0+C,GAAM1+C,EAAE0+C,GAAKt9C,EAAK,EACpBpB,EAAE2+C,GAAM3+C,EAAE2+C,GAAK1mD,EAAK,EACpB+H,EAAE4+C,GAAM5+C,EAAE4+C,GAAKzlC,EAAK,EACpBnZ,EAAE28D,GAAM38D,EAAE28D,GAAKz1E,EAAK,EACpB8Y,EAAE48D,GAAM58D,EAAE48D,GAAKhxD,EAAK,EACpB5L,EAAE68D,GAAM78D,EAAE68D,GAAKltB,EAAK,EACpB3vC,EAAE88D,GAAM98D,EAAE88D,GAAKn0B,EAAK,EACpB3iB,GAAO,EACR,CACF,kBC1TD,IAAIwP,EAAQrqB,EAAQ,OACpBA,EAAQ,OACRA,EAAQ,OAER,IAAIqhC,EAAS/gC,EAAOiE,QAAU8lB,EAAMgX,OAAShX,EAAMgX,QAAU,CAAC,EAG9DhX,EAAMoW,GAAGY,OAAShX,EAAMoW,GAAGxG,WAAWoH,OAASA,EAG/C,IAAIsd,EAASt0B,EAAMs0B,OAASt0B,EAAMgX,OAAOsd,OAASt0B,EAAMgX,OAAOsd,QAAU,CAAC,EAC1EA,EAAOxrE,OAAS,WACd,OAAOkuD,EAAOluD,OAAO,UACtB,EACDk3C,EAAMoW,GAAGke,OAASt0B,EAAMoW,GAAGxG,WAAW0kB,OAASA,EAG/Ct0B,EAAMgX,OAAOqd,OAASr0B,EAAMgX,OAAOqd,QAAU,CAC3CvrE,OAAQ,WACN,OAAOkuD,EAAOluD,OAAO,cACtB,GAEHk3C,EAAMoW,GAAG,cAAgBpW,EAAMoW,GAAGxG,WAAW,cAC3C5P,EAAMgX,OAAOqd,OAGfr0B,EAAMgX,OAAOkvB,OAASlmC,EAAMgX,OAAOkvB,QAAU,CAC3Cp9E,OAAQ,WACN,OAAOkuD,EAAOluD,OAAO,cACtB,GAEHk3C,EAAMoW,GAAG,cAAgBpW,EAAMoW,GAAGxG,WAAW,cAC3C5P,EAAMgX,OAAOkvB,OAUflvB,EAAOluD,OAAS,SAAS+6C,GAUvB,GARIwkB,IAoNJC,EAAWpgE,OAAOC,aAAa,KAC/BmgE,GAAYtoB,EAAMqB,KAAK8kB,WAAWj+D,OAAOC,aAAa,GAAO,KAG7DsgE,EAAK,CACH,CAAC,WAAY,YAAa,CAAC,WAAY,WACvC,CAAC,WAAY,YAAa,CAAC,WAAY,YACvC,CAAC,UAAY,YAAa,CAAC,WAAY,YACvC,CAAC,WAAY,YAAa,CAAC,WAAY,YACvC,CAAC,WAAY,YAAa,CAAC,UAAY,YACvC,CAAC,UAAY,YAAa,CAAC,WAAY,YACvC,CAAC,WAAY,YAAa,CAAC,WAAY,WACvC,CAAC,WAAY,WAAa,CAAC,WAAY,YACvC,CAAC,WAAY,YAAa,CAAC,WAAY,WACvC,CAAC,UAAY,YAAa,CAAC,UAAY,YACvC,CAAC,UAAY,YAAa,CAAC,WAAY,YACvC,CAAC,WAAY,YAAa,CAAC,WAAY,YACvC,CAAC,WAAY,YAAa,CAAC,WAAY,WACvC,CAAC,WAAY,YAAa,CAAC,WAAY,YACvC,CAAC,WAAY,YAAa,CAAC,WAAY,YACvC,CAAC,UAAY,YAAa,CAAC,UAAY,WACvC,CAAC,UAAY,YAAa,CAAC,UAAY,YACvC,CAAC,WAAY,YAAa,CAAC,WAAY,YACvC,CAAC,WAAY,YAAa,CAAC,WAAY,YACvC,CAAC,WAAY,YAAa,CAAC,WAAY,WACvC,CAAC,WAAY,YAAa,CAAC,WAAY,YACvC,CAAC,WAAY,YAAa,CAAC,WAAY,WACvC,CAAC,WAAY,YAAa,CAAC,WAAY,YACvC,CAAC,WAAY,YAAa,CAAC,UAAY,WACvC,CAAC,UAAY,YAAa,CAAC,UAAY,YACvC,CAAC,UAAY,YAAa,CAAC,UAAY,YACvC,CAAC,UAAY,YAAa,CAAC,WAAY,YACvC,CAAC,WAAY,YAAa,CAAC,WAAY,YACvC,CAAC,WAAY,YAAa,CAAC,WAAY,YACvC,CAAC,WAAY,YAAa,CAAC,WAAY,WACvC,CAAC,WAAY,WAAa,CAAC,WAAY,YACvC,CAAC,WAAY,YAAa,CAAC,WAAY,YACvC,CAAC,WAAY,YAAa,CAAC,WAAY,WACvC,CAAC,WAAY,YAAa,CAAC,WAAY,YACvC,CAAC,UAAY,YAAa,CAAC,UAAY,YACvC,CAAC,UAAY,YAAa,CAAC,UAAY,WACvC,CAAC,UAAY,WAAa,CAAC,UAAY,YACvC,CAAC,WAAY,WAAa,CAAC,WAAY,YACvC,CAAC,WAAY,YAAa,CAAC,WAAY,YACvC,CAAC,WAAY,WAAa,CAAC,WAAY,cAIzCgf,EAAU,CAAC,GACH,WAAa,CACnB,CAAC,WAAY,YACb,CAAC,WAAY,YACb,CAAC,WAAY,YACb,CAAC,WAAY,YACb,CAAC,WAAY,YACb,CAAC,WAAY,WACb,CAAC,UAAY,YACb,CAAC,WAAY,YAEfA,EAAQ,WAAa,CACnB,CAAC,WAAY,YACb,CAAC,WAAY,WACb,CAAC,WAAY,WACb,CAAC,UAAY,YACb,CAAC,WAAY,YACb,CAAC,WAAY,YACb,CAAC,WAAY,YACb,CAAC,WAAY,aAEfA,EAAQ,eAAiB,CACvB,CAAC,UAAY,YACb,CAAC,WAAY,YACb,CAAC,UAAY,YACb,CAAC,WAAY,YACb,CAAC,WAAY,YACb,CAAC,WAAY,YACb,CAAC,UAAY,WACb,CAAC,UAAY,aAEfA,EAAQ,eAAiB,CACvB,CAAC,WAAY,WACb,CAAC,WAAY,YACb,CAAC,UAAY,WACb,CAAC,WAAY,YACb,CAAC,UAAY,YACb,CAAC,WAAY,UACb,CAAC,WAAY,YACb,CAAC,UAAY,aAIfpf,GAAe,QA3SS,IAAdxkB,IACRA,EAAY,aAGTA,KAAa4jC,GAChB,MAAM,IAAIj+E,MAAM,8BAAgCq6C,GAYlD,IARA,IAAI8kB,EAAS8e,EAAQ5jC,GACjB6jC,EAAK,KAGL13B,EAAShQ,EAAMqB,KAAKC,eAGpBH,EAAK,IAAI5yC,MAAM,IACXg1C,EAAK,EAAGA,EAAK,KAAMA,EACzBpC,EAAGoC,GAAM,IAAIh1C,MAAM,GAIrB,IAAIs3D,EAAe,GACnB,OAAOhiB,GACL,IAAK,UACHgiB,EAAe,GACf,MACF,IAAK,cACHA,EAAe,GACf,MACF,IAAK,cACHA,EAAe,GAKnB,IAAIzP,EAAK,CAEPvS,UAAWA,EAAUt9B,QAAQ,IAAK,IAAIwK,cACtCotC,YAAa,IACb0H,aAAcA,EAEd+C,cAAe,EAEfC,kBAAmB,KAEnBC,kBAAmB,GAQrB1S,MAAW,WAETA,EAAGwS,cAAgB,EAGnBxS,EAAGyS,kBAAoBzS,EAAGuxB,iBAAmB,GAE7C,IADA,IAAI3e,EAAS5S,EAAG0S,kBAAoB,EAC5Bz9D,EAAI,EAAGA,EAAI29D,IAAU39D,EAC3B+qD,EAAGyS,kBAAkB/gE,KAAK,GAE5BkoD,EAAShQ,EAAMqB,KAAKC,eACpBomC,EAAK,IAAIn5E,MAAMo6D,EAAOpiE,QACtB,IAAQ8E,EAAI,EAAGA,EAAIs9D,EAAOpiE,SAAU8E,EAClCq8E,EAAGr8E,GAAKs9D,EAAOt9D,GAAG8F,MAAM,GAE1B,OAAOilD,CACR,GAwHD,OAtHAA,EAAG1nC,QAYH0nC,EAAG9lB,OAAS,SAASlxB,EAAK+2C,GACR,SAAbA,IACD/2C,EAAM4gC,EAAMqB,KAAKpjB,WAAW7e,IAI9B,IAAIoxB,EAAMpxB,EAAI7Y,OACd6vD,EAAGwS,eAAiBp4B,EACpBA,EAAM,CAAEA,EAAM,aAAiB,EAAGA,IAAQ,GAC1C,IAAI,IAAInlC,EAAI+qD,EAAGyS,kBAAkBtiE,OAAS,EAAG8E,GAAK,IAAKA,EACrD+qD,EAAGyS,kBAAkBx9D,IAAMmlC,EAAI,GAC/BA,EAAI,GAAKA,EAAI,IAAO4lB,EAAGyS,kBAAkBx9D,GAAK,aAAiB,GAC/D+qD,EAAGyS,kBAAkBx9D,GAAK+qD,EAAGyS,kBAAkBx9D,KAAO,EACtDmlC,EAAI,GAAOA,EAAI,GAAK,aAAiB,EAcvC,OAVAwf,EAAOxK,SAASpmC,GAGhBiqD,EAAQqe,EAAIvmC,EAAI6O,IAGbA,EAAO75B,KAAO,MAA4B,IAApB65B,EAAOzpD,WAC9BypD,EAAOI,UAGFgG,CACR,EAODA,EAAGzP,OAAS,WAqBV,IAAI2iB,EAAatpB,EAAMqB,KAAKC,eAC5BgoB,EAAW9jB,SAASwK,EAAOxoD,SAG3B,IAYIulB,EALAwjC,EANF6F,EAAGyS,kBAAkBzS,EAAGyS,kBAAkBtiE,OAAS,GACnD6vD,EAAG0S,kBAKuB1S,EAAG+H,YAAc,EAC7CmL,EAAW9jB,SAAS8iB,EAASjrD,OAAO,EAAG+4C,EAAG+H,YAAc5N,IAMxD,IADA,IAAIhoB,EAAiC,EAA1B6tB,EAAGyS,kBAAkB,GACxBx9D,EAAI,EAAGA,EAAI+qD,EAAGyS,kBAAkBtiE,OAAS,IAAK8E,EAGpDk9B,IAFAxb,EAAqC,EAA9BqpC,EAAGyS,kBAAkBx9D,EAAI,IAChB,aAAiB,EAEjCi+D,EAAWrY,SAAS1oB,IAAS,GAC7BA,EAAOxb,IAAS,EAElBu8C,EAAWrY,SAAS1oB,GAEpB,IAAI4qB,EAAI,IAAI5kD,MAAMm5E,EAAGnhF,QACrB,IAAQ8E,EAAI,EAAGA,EAAIq8E,EAAGnhF,SAAU8E,EAC9B8nD,EAAE9nD,GAAKq8E,EAAGr8E,GAAG8F,MAAM,GAErBk4D,EAAQlW,EAAGhS,EAAImoB,GACf,IACIse,EADAziC,EAAOnF,EAAMqB,KAAKC,eAGpBsmC,EADe,YAAd/jC,EACMsP,EAAE5sD,OACa,YAAds9C,EACDsP,EAAE5sD,OAAS,EAEX4sD,EAAE5sD,OAAS,EAEpB,IAAQ8E,EAAI,EAAGA,EAAIu8E,IAAQv8E,EACzB85C,EAAK8L,SAASkC,EAAE9nD,GAAG,IAChBA,IAAMu8E,EAAO,GAAmB,gBAAd/jC,GACnBsB,EAAK8L,SAASkC,EAAE9nD,GAAG,IAGvB,OAAO85C,CACR,EAEMiR,CACR,EAGD,IAAIkS,EAAW,KACXD,GAAe,EAGfI,EAAK,KAGLgf,EAAU,KA4Gd,SAASpe,EAAQ7+C,EAAGipB,EAAGjsC,GAkBrB,IAhBA,IAAIqgF,EAAOC,EACPC,EAAOC,EACPC,EAAOC,EACPC,EACAC,EACAC,EAAQC,EACRC,EAAMC,EACNC,EAAMC,EACNC,EAAMC,EACNC,EAAMC,EACNC,EAAMC,EACNC,EAAMC,EACNC,EAAMC,EACNC,EAAMC,EACNj+E,EAAGkzE,EAAIC,EAAI+K,EAAIC,EAAIC,EAAKC,EACxBl5C,EAAMhpC,EAAMjB,SACViqC,GAAO,KAAK,CAGhB,IAAInlC,EAAI,EAAGA,EAAI,KAAMA,EACnBooC,EAAEpoC,GAAG,GAAK7D,EAAM3B,aAAe,EAC/B4tC,EAAEpoC,GAAG,GAAK7D,EAAM3B,aAAe,EAEjC,KAAMwF,EAAI,KAAMA,EAOdw8E,KAJAtJ,GADAgL,EAAK91C,EAAEpoC,EAAI,IACH,MAKG,IAJXmzE,EAAK+K,EAAG,KAIgB,KACpB/K,IAAO,GAAOD,GAAM,GACrBA,IAAO,KAAQ,EAElBuJ,IACIvJ,GAAM,GAAOC,IAAO,KACpBA,GAAM,EAAMD,IAAO,KACnBA,GAAM,GAAOC,IAAO,MAAS,EAQjCuJ,KAJAxJ,GADAkL,EAAMh2C,EAAEpoC,EAAI,KACH,MAKE,GAJXmzE,EAAKiL,EAAI,KAIc,KACnBlL,IAAO,EAAMC,GAAM,IACpBD,IAAO,KAAQ,EAElByJ,IACIzJ,GAAM,GAAOC,IAAO,IACpBD,GAAM,GAAOC,IAAO,IACpBD,GAAM,GAAOC,IAAO,MAAS,EAGjCgL,EAAK/1C,EAAEpoC,EAAI,GACXq+E,EAAMj2C,EAAEpoC,EAAI,IACZmzE,EAAMsJ,EAAQ0B,EAAG,GAAKxB,EAAQ0B,EAAI,GAClCj2C,EAAEpoC,GAAG,GAAMw8E,EAAQ2B,EAAG,GAAKzB,EAAQ2B,EAAI,IACnClL,EAAK,aAAiB,KAAQ,EAClC/qC,EAAEpoC,GAAG,GAAKmzE,IAAO,EAsBnB,IAlBA+J,EAAO/9D,EAAE,GAAG,GACZg+D,EAAOh+D,EAAE,GAAG,GACZi+D,EAAOj+D,EAAE,GAAG,GACZk+D,EAAOl+D,EAAE,GAAG,GACZm+D,EAAOn+D,EAAE,GAAG,GACZo+D,EAAOp+D,EAAE,GAAG,GACZq+D,EAAOr+D,EAAE,GAAG,GACZs+D,EAAOt+D,EAAE,GAAG,GACZu+D,EAAOv+D,EAAE,GAAG,GACZw+D,EAAOx+D,EAAE,GAAG,GACZy+D,EAAOz+D,EAAE,GAAG,GACZ0+D,EAAO1+D,EAAE,GAAG,GACZ2+D,EAAO3+D,EAAE,GAAG,GACZ4+D,EAAO5+D,EAAE,GAAG,GACZ6+D,EAAO7+D,EAAE,GAAG,GACZ8+D,EAAO9+D,EAAE,GAAG,GAGRnf,EAAI,EAAGA,EAAI,KAAMA,EAEnB88E,IACIY,IAAS,GAAOC,GAAQ,KACxBD,IAAS,GAAOC,GAAQ,KACxBA,IAAS,EAAMD,GAAQ,OAAU,EAOrCX,GAASe,EAAQJ,GAAQE,EAAOE,MAAY,EAI5ClB,IACIM,IAAS,GAAOC,GAAQ,IACxBA,IAAS,EAAMD,GAAQ,KACvBC,IAAS,EAAMD,GAAQ,OAAU,EACrCL,IACIK,GAAQ,EAAMC,IAAS,KACvBA,GAAQ,GAAOD,IAAS,IACxBC,GAAQ,GAAOD,IAAS,MAAS,EAGrCF,GAAWE,EAAOE,EAASE,GAAQJ,EAAOE,MAAY,EACtDH,GAAWE,EAAOE,EAASE,GAAQJ,EAAOE,MAAY,EAItDlK,EAAM8K,KAxBFP,GAAQ,GAAOC,IAAS,KACxBD,GAAQ,GAAOC,IAAS,KACxBA,GAAQ,GAAOD,IAAS,MAAS,KAI5BK,EAAQJ,GAAQE,EAAOE,MAAY,GAkBf3gB,EAAGp9D,GAAG,GAAKooC,EAAEpoC,GAAG,GAC7Cw8E,EAASwB,EAAOlB,EAAQC,EAAQ3f,EAAGp9D,GAAG,GAAKooC,EAAEpoC,GAAG,IAC5CmzE,EAAK,aAAiB,KAAQ,EAClCsJ,EAAQtJ,IAAO,EAIfuJ,EAASE,EAAQI,IADjB7J,EAAK0J,EAAQI,GACoB,aAAiB,KAAQ,EAC1DN,EAAQxJ,IAAO,EAEf6K,EAAOF,EACPG,EAAOF,EAEPD,EAAOF,EACPG,EAAOF,EAEPD,EAAOF,EACPG,EAAOF,EAIPD,EAAQF,EAAOhB,IADfrJ,EAAKsK,EAAOhB,GACkB,aAAiB,KAAQ,EACvDkB,EAAOxK,IAAO,EAEdqK,EAAOF,EACPG,EAAOF,EAEPD,EAAOF,EACPG,EAAOF,EAEPD,EAAOF,EACPG,EAAOF,EAIPD,EAAQV,EAAQE,IADhBvJ,EAAKsJ,EAAQE,GACkB,aAAiB,KAAQ,EACxDQ,EAAOhK,IAAO,EAIhBA,EAAKh0D,EAAE,GAAG,GAAKg+D,EACfh+D,EAAE,GAAG,GAAMA,EAAE,GAAG,GAAK+9D,GAAS/J,EAAK,aAAiB,KAAQ,EAC5Dh0D,EAAE,GAAG,GAAKg0D,IAAO,EAEjBA,EAAKh0D,EAAE,GAAG,GAAKk+D,EACfl+D,EAAE,GAAG,GAAMA,EAAE,GAAG,GAAKi+D,GAASjK,EAAK,aAAiB,KAAQ,EAC5Dh0D,EAAE,GAAG,GAAKg0D,IAAO,EAEjBA,EAAKh0D,EAAE,GAAG,GAAKo+D,EACfp+D,EAAE,GAAG,GAAMA,EAAE,GAAG,GAAKm+D,GAASnK,EAAK,aAAiB,KAAQ,EAC5Dh0D,EAAE,GAAG,GAAKg0D,IAAO,EAEjBA,EAAKh0D,EAAE,GAAG,GAAKs+D,EACft+D,EAAE,GAAG,GAAMA,EAAE,GAAG,GAAKq+D,GAASrK,EAAK,aAAiB,KAAQ,EAC5Dh0D,EAAE,GAAG,GAAKg0D,IAAO,EAEjBA,EAAKh0D,EAAE,GAAG,GAAKw+D,EACfx+D,EAAE,GAAG,GAAMA,EAAE,GAAG,GAAKu+D,GAASvK,EAAK,aAAiB,KAAQ,EAC5Dh0D,EAAE,GAAG,GAAKg0D,IAAO,EAEjBA,EAAKh0D,EAAE,GAAG,GAAK0+D,EACf1+D,EAAE,GAAG,GAAMA,EAAE,GAAG,GAAKy+D,GAASzK,EAAK,aAAiB,KAAQ,EAC5Dh0D,EAAE,GAAG,GAAKg0D,IAAO,EAEjBA,EAAKh0D,EAAE,GAAG,GAAK4+D,EACf5+D,EAAE,GAAG,GAAMA,EAAE,GAAG,GAAK2+D,GAAS3K,EAAK,aAAiB,KAAQ,EAC5Dh0D,EAAE,GAAG,GAAKg0D,IAAO,EAEjBA,EAAKh0D,EAAE,GAAG,GAAK8+D,EACf9+D,EAAE,GAAG,GAAMA,EAAE,GAAG,GAAK6+D,GAAS7K,EAAK,aAAiB,KAAQ,EAC5Dh0D,EAAE,GAAG,GAAKg0D,IAAO,EAEjBhuC,GAAO,GACR,CACF,mBCtiBD,IAAIwP,EAAQrqB,EAAQ,OACpBA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OAER,IAAIg0D,EAAM1zD,EAAOiE,QAAU8lB,EAAM2pC,IAAM3pC,EAAM2pC,KAAO,CAAC,EAwLrD,SAASC,EAAuBz/E,EAAQyN,GACtC,IAAIiyE,EAASjyE,EAAIjJ,SAAS,IAEvBk7E,EAAO,IAAM,MACdA,EAAS,KAAOA,GAElB,IAAIriF,EAAQw4C,EAAMqB,KAAK6kB,WAAW2jB,GAClC1/E,EAAO8mD,SAASzpD,EAAMjB,QACtB4D,EAAOq7C,SAASh+C,EACjB,CAQD,SAASsiF,EAAmB3/E,EAAQyN,GAClCzN,EAAO8mD,SAASr5C,EAAIrR,QACpB4D,EAAO4/E,UAAUnyE,EAClB,CAOD,SAASoyE,IAGP,IAFA,IAAIC,EAAMjqC,EAAMoW,GAAG2W,KAAKjkE,SACpBsU,EAAM5D,UAAUjT,OACX8E,EAAI,EAAGA,EAAI+R,IAAO/R,EACzB4+E,EAAI35C,OAAO92B,UAAUnO,IAEvB,OAAO4+E,EAAItjC,QACZ,CA/MDgjC,EAAIO,kBAAoB,SAAS7yB,EAAY8yB,EAAYC,GAGvD,IAAIvmC,EAAY,UACZgnB,EAAsC,MAF1Csf,EAAaA,GAAc,IAEqB,OAAS,aAErDE,EAAM,qCACVA,GAAO,eAAiBxf,EAAsB,OAC9Cwf,GAAO,aAPPD,EAAUA,GAAW,IAOU,OAG/B,IAAIE,EAAYtqC,EAAMqB,KAAKC,eAC3BwoC,EAAmBQ,EAAWzmC,GAC9B+lC,EAAuBU,EAAWjzB,EAAW3lD,GAC7Ck4E,EAAuBU,EAAWjzB,EAAWv1B,GAG7C,IAAIwgD,EAAMtiC,EAAMqB,KAAK6tB,SAASob,EAAU9iF,QAAS,IAC7CjB,EAASf,KAAKC,MAAM68E,EAAI/7E,OAAS,IAAM,EAC3C8jF,GAAO,iBAAmB9jF,EAAS,OACnC8jF,GAAO/H,EAGP,IAOI4C,EAPAqF,EAAavqC,EAAMqB,KAAKC,eAQ5B,GAPAsoC,EAAuBW,EAAYlzB,EAAW1zB,GAC9CimD,EAAuBW,EAAYlzB,EAAWvsB,GAC9C8+C,EAAuBW,EAAYlzB,EAAWlzB,GAC9CylD,EAAuBW,EAAYlzB,EAAWorB,MAI1C0H,EAGG,CAEL,IAAIK,EAASD,EAAWhkF,SAAW,GAAK,EACxCikF,GAAUA,EAAS,GAGnB,IAAIxkC,EAAUgkC,EAAMO,EAAW/iF,SAE/Bw+C,EAAQ7jB,SAAS6jB,EAAQz/C,SAAWikF,EAASD,EAAWhkF,UACxDgkF,EAAW1+B,UAAU7F,GAErB,IAAIykC,EAASzqC,EAAMqB,KAAKC,eACxBmpC,EAAO5+B,UAAUm+B,EAAM,WAAoBG,IAC3CM,EAAO5+B,UAAUm+B,EAAM,UAAoBG,IAI3C,IAAIjqC,EAASF,EAAMG,IAAIM,uBAAuBgqC,EAAOtoD,SAAS,GAAI,OAClE+d,EAAOxxB,MAAMsxB,EAAMqB,KAAKC,eAAe2E,aAAa,EAAG,KACvD/F,EAAO5P,OAAOi6C,EAAWngC,QACzBlK,EAAOtL,SACP,IAAIi3B,EAAY3rB,EAAOh5C,OAIvB2kE,EAAU1pC,SAAS,IAEnB+iD,EAAOllC,EAAMqB,KAAK6tB,SAASrD,EAAUrkE,QAAS,GAC/C,MA7BC09E,EAAOllC,EAAMqB,KAAK6tB,SAASqb,EAAW/iF,QAAS,IAiCjD6iF,GAAO,uBADP9jF,EAASf,KAAKC,MAAMy/E,EAAK3+E,OAAS,IAAM,GACA,OACxC8jF,GAAOnF,EAGP,IAAIwF,EAASV,EAAM,iCAAkCG,GAEjDQ,EAAY3qC,EAAMqB,KAAKC,eAC3BwoC,EAAmBa,EAAW9mC,GAC9BimC,EAAmBa,EAAW9f,GAC9Bif,EAAmBa,EAAWP,GAC9BO,EAAU15B,SAASq5B,EAAU/jF,UAC7BokF,EAAU9+B,UAAUy+B,GACpBK,EAAU15B,SAASs5B,EAAWhkF,UAC9BokF,EAAU9+B,UAAU0+B,GAEpB,IAAI7jC,EAAO1G,EAAM0G,KAAK59C,SAMtB,OALA49C,EAAKh4B,MAAM,OAAQg8D,GACnBhkC,EAAKpW,OAAOq6C,EAAUnjF,SAEtB6iF,GAAO,oBAAsB3jC,EAAKC,SAAS8vB,QAAU,MAGtD,EAUDkT,EAAIiB,mBAAqB,SAASv7E,EAAK+6E,GACrC,IAAI5hF,EAAO,UACX4hF,EAAUA,GAAW,GAErB,IAAIjgF,EAAS61C,EAAMqB,KAAKC,eAKxB,OAJAwoC,EAAmB3/E,EAAQ3B,GAC3BohF,EAAuBz/E,EAAQkF,EAAIqC,GACnCk4E,EAAuBz/E,EAAQkF,EAAIyyB,GAE5Bt5B,EAAO,IAAMw3C,EAAMqB,KAAK6tB,SAAS/kE,EAAO3C,SAAW,IAAM4iF,CACjE,EAUDT,EAAIkB,oBAAsB,SAASxzB,EAAY8yB,GAC7C,OAAIA,EAIGnqC,EAAMiP,IAAImd,qBAAqB/U,EAAY8yB,EAChD,CAAC7d,QAAQ,EAAMzoB,UAAW,WAJnB7D,EAAMiP,IAAIosB,gBAAgBhkB,EAKpC,EAcDsyB,EAAImB,wBAA0B,SAASz7E,EAAK0M,GAE1C,IAAIq6C,GADJr6C,EAAUA,GAAW,CAAC,GACLq6C,IAAMpW,EAAMoW,GAAGgS,IAAIt/D,SAGhCqB,EAAS61C,EAAMqB,KAAKC,eACxBwoC,EAAmB3/E,EAFR,WAGXy/E,EAAuBz/E,EAAQkF,EAAIqC,GACnCk4E,EAAuBz/E,EAAQkF,EAAIyyB,GAGnCs0B,EAAG1nC,QACH0nC,EAAG9lB,OAAOnmC,EAAOm8C,YACjB,IAAIK,EAASyP,EAAGzP,SAChB,GAAwB,QAArB5qC,EAAQo6C,SAAoB,CAC7B,IAAIomB,EAAM51B,EAAO8vB,QACjB,OAAG16D,EAAQgvE,UACFxO,EAAIjgE,MAAM,SAASoG,KAAK3G,EAAQgvE,WAElCxO,CACR,CAAM,GAAwB,WAArBxgE,EAAQo6C,SAChB,OAAOxP,EAAOL,WACT,GAAGvqC,EAAQo6C,SAChB,MAAM,IAAI3sD,MAAM,qBAAuBuS,EAAQo6C,SAAW,MAE5D,OAAOxP,CACR,mBCuCD,IAAI3G,EAAQrqB,EAAQ,OACpBA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OAiDR,IAAIq1D,EAAW,SAAS7rD,EAAQiS,EAAOwlB,EAAMrwD,GAC3C,IAAI4+C,EAAOnF,EAAMqB,KAAKC,eAMlB/lB,EAAO4D,EAAO54B,QAAU,EACxB0kF,EAAO1vD,GAAuB,EAAhB4D,EAAO54B,QACrB2kF,EAAK/rD,EAAO9hB,OAAO,EAAG4tE,GACtBzhB,EAAKrqC,EAAO9hB,OAAOke,EAAK0vD,GACxBtR,EAAK35B,EAAMqB,KAAKC,eAChBoF,EAAO1G,EAAM0G,KAAK59C,SACtB8tD,EAAOxlB,EAAQwlB,EAIf,IAAIu0B,EAAS3lF,KAAKg4B,KAAKj3B,EAAS,IAC5B6kF,EAAU5lF,KAAKg4B,KAAKj3B,EAAS,IAGjCmgD,EAAKh4B,MAAM,MAAOw8D,GAClB,IAAIG,EAAWrrC,EAAMqB,KAAKC,eAC1Bq4B,EAAGn0B,SAASoR,GACZ,IAAI,IAAIvrD,EAAI,EAAGA,EAAI8/E,IAAU9/E,EAE3Bq7C,EAAKh4B,MAAM,KAAM,MACjBg4B,EAAKpW,OAAOqpC,EAAGrzB,YACfqzB,EAAG9tB,UAAUnF,EAAKC,UAGlBD,EAAKh4B,MAAM,KAAM,MACjBg4B,EAAKpW,OAAOqpC,EAAGnyE,QAAUovD,GACzBy0B,EAASx/B,UAAUnF,EAAKC,UAI1BD,EAAKh4B,MAAM,OAAQ86C,GACnB,IAAI8hB,EAAYtrC,EAAMqB,KAAKC,eAC3Bq4B,EAAGloB,QACHkoB,EAAGn0B,SAASoR,GACZ,IAAQvrD,EAAI,EAAGA,EAAI+/E,IAAW//E,EAE5Bq7C,EAAKh4B,MAAM,KAAM,MACjBg4B,EAAKpW,OAAOqpC,EAAGrzB,YACfqzB,EAAG9tB,UAAUnF,EAAKC,UAGlBD,EAAKh4B,MAAM,KAAM,MACjBg4B,EAAKpW,OAAOqpC,EAAGnyE,QAAUovD,GACzB00B,EAAUz/B,UAAUnF,EAAKC,UAO3B,OAHAxB,EAAKK,SAASxF,EAAMqB,KAAKotB,SACvB4c,EAAS/kC,WAAYglC,EAAUhlC,WAAY//C,IAEtC4+C,CACR,EA0DGomC,EAAU,SAAS9oE,EAAGhS,EAAQ+Z,GAChC,IAAI26B,GAAO,EAEX,IACE,IAAI39C,EAAQib,EAAE8oE,QAAQ96E,EAAO80C,SAASe,YACtC71C,EAAO80C,SAAWvF,EAAMqB,KAAKC,aAAa95C,GAC1CiJ,EAAOlK,OAASiB,EAAMjB,OACtB4+C,GAAO,CAGR,CAFC,MAAMh7B,GAEP,CAED,OAAOg7B,CACR,EAYGqmC,EAAU,SAAS/oE,EAAGhS,EAAQ+Z,GAChC,IAAI26B,GAAO,EAEX,IACE,IAAI39C,EAAQib,EAAE+oE,QAAQ/6E,EAAO80C,SAASe,YACtC71C,EAAO80C,SAAWvF,EAAMqB,KAAKC,aAAa95C,GAC1CiJ,EAAOlK,OAASiB,EAAMjB,OACtB4+C,GAAO,CAGR,CAFC,MAAMh7B,GAEP,CAED,OAAOg7B,CACR,EAkBGsmC,EAAa,SAAS7/D,EAAGmgC,GAC3B,IAAIvb,EAAM,EACV,OAAOub,GACP,KAAK,EACHvb,EAAM5kB,EAAE++B,UACR,MACF,KAAK,EACHna,EAAM5kB,EAAE3V,WACR,MACF,KAAK,EACHu6B,EAAM5kB,EAAE8/D,WACR,MACF,KAAK,EACHl7C,EAAM5kB,EAAE/lB,WAKV,OAAOm6C,EAAMqB,KAAKC,aAAa11B,EAAE06B,SAAS9V,GAC3C,EASGm7C,EAAc,SAAS//D,EAAGmgC,EAAU7qB,GAItCtV,EAAEggE,OAAO1qD,EAAE36B,SAAUwlD,GAAY,GACjCngC,EAAEigC,UAAU3qB,EACb,EAKG+iB,EAAM,CAOVA,SAAe,CACb2B,QAAS,CAACimC,MAAO,EAAGnmC,MAAO,GAC3BI,QAAS,CAAC+lC,MAAO,EAAGnmC,MAAO,GAC3BomC,QAAS,CAACD,MAAO,EAAGnmC,MAAO,KAE7BzB,EAAI8nC,kBAAoB,CACtB9nC,EAAI0B,SAASG,QACb7B,EAAI0B,SAASC,SAEf3B,EAAI+nC,QAAU/nC,EAAI8nC,kBAAkB,GAMpC9nC,EAAIgoC,YAAc,MAMlBhoC,EAAIK,cAAgB,CAClB4nC,OAAQ,EACR9nC,OAAQ,GAQVH,EAAIkoC,aAAe,CACjBC,eAAgB,GAOlBnoC,EAAI+C,oBAAsB,CACxBpzB,KAAM,KACNy4D,IAAK,EACLC,KAAM,EACNnsC,IAAK,GAOP8D,EAAIiD,WAAa,CACfh0C,OAAQ,EACRi0C,MAAO,EACPolC,KAAM,GAQRtoC,EAAIwD,aAAe,CACjB7zB,KAAM,KACN44D,SAAU,EACVtnC,UAAW,EACXunC,YAAa,EACbC,YAAa,EACbC,YAAa,GAOf1oC,EAAI2oC,kBAAoB,CACtBh5D,KAAM,EACN23D,QAAS,GAUXtnC,EAAI4oC,YAAc,CAChBC,mBAAoB,GACpBC,MAAO,GACPC,UAAW,GACXC,iBAAkB,GAClBC,UAAW,IAabjpC,EAAIkpC,cAAgB,CAClBC,cAAe,EACfC,aAAc,EACdC,aAAc,EACdlU,YAAa,GACbmU,oBAAqB,GACrBC,oBAAqB,GACrBC,kBAAmB,GACnBC,mBAAoB,GACpBC,oBAAqB,GACrBC,SAAU,IAwCZ3pC,EAAI4pC,MAAQ,CAAC,EACb5pC,EAAI4pC,MAAMC,MAAQ,CAChBp6D,QAAS,EACTq6D,MAAO,GAET9pC,EAAI4pC,MAAMG,YAAc,CACtBC,aAAc,EACdC,mBAAoB,GACpBC,eAAgB,GAChBC,kBAAmB,GACnBC,gBAAiB,GACjBC,sBAAuB,GACvBC,kBAAmB,GACnBC,gBAAiB,GACjBC,wBAAyB,GACzBC,oBAAqB,GACrBC,oBAAqB,GACrBC,oBAAqB,GACrBC,kBAAmB,GACnBC,WAAY,GACZC,cAAe,GACfC,aAAc,GACdC,cAAe,GACfC,mBAAoB,GACpBC,iBAAkB,GAClBC,sBAAuB,GACvBC,eAAgB,GAChBC,cAAe,GACfC,iBAAkB,KAWpBtrC,EAAIurC,qBAAuB,CACzBC,kBAAmB,EACnBC,mBAAoB,GAMtBzrC,EAAI4C,aAAe,CAAC,EASpB5C,EAAI0rC,eAAiB,SAASC,GAC5B,IAAIzqC,EAAO,KACX,IAAI,IAAI91C,KAAO40C,EAAI4C,aAAc,CAC/B,IAAIid,EAAK7f,EAAI4C,aAAax3C,GAC1B,GAAGy0D,EAAG9wC,GAAG,KAAO48D,EAASlpF,WAAW,IAClCo9D,EAAG9wC,GAAG,KAAO48D,EAASlpF,WAAW,GAAI,CACrCy+C,EAAO2e,EACP,KACD,CACF,CACD,OAAO3e,CACR,EAQDlB,EAAI4rC,iBAAmB,SAASptE,EAAGhS,IAElBgS,EAAEU,MAAQV,EAAE4hC,SAAWJ,EAAIK,cAAcF,QAEtD3hC,EAAEpJ,MAAMoJ,EAAG,CACT/Z,QAAS,wDACTsT,MAAM,EACN+wE,MAAO,CACLn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YAAa7rC,EAAI4pC,MAAMG,YAAYE,qBAI1C,EASDjqC,EAAI8rC,mBAAqB,SAASttE,EAAGhS,EAAQlK,IAGvCkc,EAAEutE,aAAevtE,EAAEwtE,WAAa,IAElChsC,EAAIisC,MAAMztE,EAAGwhC,EAAIksC,YAAY1tE,EAAG,CAC7BmsC,MAAO3K,EAAI4pC,MAAMC,MAAMp6D,QACvBo8D,YAAa7rC,EAAI4pC,MAAMG,YAAYuB,oBAEtCtrC,EAAImsC,MAAM3tE,IAIZA,EAAEzc,SACH,EASDi+C,EAAIosC,kBAAoB,SAAS5tE,EAAGhS,EAAQlK,GAC1C,IAAI6Y,EAAM,KAENglC,EAAU3hC,EAAE4hC,SAAWJ,EAAIK,cAAcF,OAG7C,GAAG79C,EAAS,GACVkc,EAAEpJ,MAAMoJ,EAAG,CACT/Z,QAAS07C,EACP,kDACA,kDACFpoC,MAAM,EACN+wE,MAAO,CACLn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YAAa7rC,EAAI4pC,MAAMG,YAAYa,yBAGlC,CAEL,IAAIjjE,EAAInb,EAAO80C,SACXsD,EAAYj9B,EAAErlB,SAoBlB,GAnBA6Y,EAAM,CACJnI,QAAS,CACP40E,MAAOjgE,EAAE++B,UACTjF,MAAO95B,EAAE++B,WAEX95C,OAAQmvC,EAAMqB,KAAKC,aAAa11B,EAAE06B,SAAS,KAC3CgqC,WAAY7E,EAAW7/D,EAAG,GAC1B2kE,WAAY,IAEXnsC,GACDhlC,EAAIoxE,aAAe5kE,EAAE06B,SAAS,GAC9BlnC,EAAIqxE,mBAAqB7kE,EAAE++B,YAE3BvrC,EAAIsxE,cAAgBjF,EAAW7/D,EAAG,GAClCxM,EAAIuxE,oBAAsBlF,EAAW7/D,EAAG,KAI1Ci9B,EAAYtiD,GAAUsiD,EAAYj9B,EAAErlB,WACrB,EAAG,CAGhB,IADA,IAAIqqF,EAAOnF,EAAW7/D,EAAG,GACnBglE,EAAKrqF,SAAW,GACpB6Y,EAAImxE,WAAWzoF,KAAK,CAClBU,KAAM,CAACooF,EAAKjmC,UAAWimC,EAAKjmC,WAC5BliD,KAAMgjF,EAAWmF,EAAM,KAK3B,IAAIxsC,EACF,IAAI,IAAI/4C,EAAI,EAAGA,EAAI+T,EAAImxE,WAAWhqF,SAAU8E,EAAG,CAC7C,IAAI+C,EAAMgR,EAAImxE,WAAWllF,GAGzB,GAAmB,IAAhB+C,EAAI5F,KAAK,IAA+B,IAAhB4F,EAAI5F,KAAK,GAGlC,IADA,IAAIqoF,EAAMpF,EAAWr9E,EAAI3F,KAAM,GACzBooF,EAAItqF,SAAW,GAAG,CAMtB,GAAc,IAJDsqF,EAAIlmC,UAKf,MAIFloC,EAAEquE,QAAQP,WAAWQ,YAAYC,eAAelpF,KAC9C2jF,EAAWoF,EAAK,GAAGvqC,WACtB,CAEJ,CAEJ,CAGD,GAAG7jC,EAAEquE,QAAQ75E,UACRmI,EAAInI,QAAQ40E,QAAUppE,EAAEquE,QAAQ75E,QAAQ40E,OACzCzsE,EAAInI,QAAQyuC,QAAUjjC,EAAEquE,QAAQ75E,QAAQyuC,OACxC,OAAOjjC,EAAEpJ,MAAMoJ,EAAG,CAChB/Z,QAAS,yDACTsT,MAAM,EACN+wE,MAAO,CACLn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YAAa7rC,EAAI4pC,MAAMG,YAAYmB,oBAO3C,GAAG/qC,EAED3hC,EAAEquE,QAAQG,YAAchtC,EAAI0rC,eAAevwE,EAAIoxE,mBAK/C,IADA,IAAI3lD,EAAMmV,EAAMqB,KAAKC,aAAaliC,EAAIsxE,cAAclpF,SAC9CqjC,EAAItkC,SAAW,IAGnBkc,EAAEquE,QAAQG,YAAchtC,EAAI0rC,eAAe9kD,EAAIyb,SAAS,IAC3B,OAA1B7jC,EAAEquE,QAAQG,eAOjB,GAA6B,OAA1BxuE,EAAEquE,QAAQG,YACX,OAAOxuE,EAAEpJ,MAAMoJ,EAAG,CAChB/Z,QAAS,8BACTsT,MAAM,EACN+wE,MAAO,CACLn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YAAa7rC,EAAI4pC,MAAMG,YAAYO,mBAErC0C,YAAajxC,EAAMqB,KAAK8N,WAAW/vC,EAAIoxE,gBAMzC/tE,EAAEquE,QAAQI,kBADT9sC,EAC6BhlC,EAAIqxE,mBAGJxsC,EAAI2oC,kBAAkBh5D,IAEvD,CAED,OAAOxU,CACR,EASD6kC,EAAIktC,yBAA2B,SAAS1uE,EAAGrD,GAQzC,IAAIglC,EAAU3hC,EAAE4hC,SAAWJ,EAAIK,cAAcF,OACzCgtC,EAAYhyE,EAAIvO,OAAOrJ,QACvB6pF,EAAUjtC,EAAS3hC,EAAEquE,QAAQ3sC,GAAGmtC,cAAgBF,EAChDG,EAAUntC,EAASgtC,EAAYntC,EAAIutC,eAAelrC,WAGtD7jC,EAAEquE,QAAQ3sC,GAAK,CACbE,OAAQ5hC,EAAE4hC,OACVotC,cAAextC,EAAIkoC,aAAaC,eAChCrlC,sBAAuB,KACvBE,YAAa,KACbG,eAAgB,KAChBC,aAAc,KACdC,gBAAiB,KACjBC,iBAAkB,KAClBC,cAAe,KACfxC,WAAY,KACZ0C,eAAgB,KAChBgqC,sBAAuBjvE,EAAEquE,QAAQI,kBACjCS,kBAAmB,KACnBC,cAAe,KACfN,cAAeD,EACfQ,cAAeN,EAElB,EA6BDttC,EAAI6tC,kBAAoB,SAASrvE,EAAGhS,EAAQlK,GAC1C,IAAI6Y,EAAM6kC,EAAIosC,kBAAkB5tE,EAAGhS,EAAQlK,GAC3C,IAAGkc,EAAEsvE,KAAL,CAKA,KAAG3yE,EAAInI,QAAQyuC,OAASjjC,EAAExL,QAAQyuC,OAGhC,OAAOjjC,EAAEpJ,MAAMoJ,EAAG,CAChB/Z,QAAS,4BACTsT,MAAM,EACN+wE,MAAO,CACLn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YAAa7rC,EAAI4pC,MAAMG,YAAYmB,oBAPvC1sE,EAAExL,QAAQyuC,MAAQtmC,EAAInI,QAAQyuC,MAahCjjC,EAAEquE,QAAQ75E,QAAUwL,EAAExL,QAGtB,IAAI+6E,EAAY5yE,EAAIkxE,WAAW9oF,QAI5BwqF,EAAUzrF,OAAS,GAAKyrF,IAAcvvE,EAAEquE,QAAQ99D,IAEjDvQ,EAAEwvE,OAASC,EACXzvE,EAAEquE,QAAQqB,UAAW,EAGrB1vE,EAAEquE,QAAQ3sC,GAAG0tC,cAAgBzyE,EAAIvO,OAAOrJ,UAGxCib,EAAEwvE,OAASG,EACX3vE,EAAEquE,QAAQqB,UAAW,EAGrBluC,EAAIktC,yBAAyB1uE,EAAGrD,IAIlCqD,EAAEquE,QAAQ99D,GAAKg/D,EAGfvvE,EAAEzc,SA5CD,CA6CF,EAeDi+C,EAAIouC,kBAAoB,SAAS5vE,EAAGhS,EAAQlK,GAC1C,IAAI6Y,EAAM6kC,EAAIosC,kBAAkB5tE,EAAGhS,EAAQlK,GAC3C,IAAGkc,EAAEsvE,KAAL,CAKA,IAAIC,EAAY5yE,EAAIkxE,WAAW9oF,QAG3BspF,EAAU,KAuBd,GAtBGruE,EAAE6vE,eAEY,QADfxB,EAAUruE,EAAE6vE,aAAaC,WAAWP,IAGlCA,EAAY,IACJlB,EAAQ75E,QAAQ40E,QAAUzsE,EAAInI,QAAQ40E,OAC9CiF,EAAQ75E,QAAQyuC,MAAQtmC,EAAInI,QAAQyuC,SAEpCorC,EAAU,KACVkB,EAAY,KAKQ,IAArBA,EAAUzrF,SACXyrF,EAAYhyC,EAAMnvC,OAAOy1C,SAAS,KAIpC7jC,EAAEquE,QAAQ99D,GAAKg/D,EACfvvE,EAAEquE,QAAQ0B,mBAAqBpzE,EAAInI,QACnCwL,EAAEquE,QAAQ3sC,GAAK,CAAC,EACb2sC,EAEDruE,EAAExL,QAAUwL,EAAEquE,QAAQ75E,QAAU65E,EAAQ75E,QACxCwL,EAAEquE,QAAQ3sC,GAAK2sC,EAAQ3sC,OAClB,CAGL,IADA,IAAIltC,EACI5L,EAAI,EAAGA,EAAI44C,EAAI8nC,kBAAkBxlF,WACvC0Q,EAAUgtC,EAAI8nC,kBAAkB1gF,IACrBq6C,OAAStmC,EAAInI,QAAQyuC,SAFiBr6C,GAMnDoX,EAAExL,QAAU,CAAC40E,MAAO50E,EAAQ40E,MAAOnmC,MAAOzuC,EAAQyuC,OAClDjjC,EAAEquE,QAAQ75E,QAAUwL,EAAExL,OACvB,CAGc,OAAZ65E,GAEDruE,EAAEwvE,OAASQ,EACXhwE,EAAEquE,QAAQqB,UAAW,EAGrB1vE,EAAEquE,QAAQ3sC,GAAGmtC,cAAgBlyE,EAAIvO,OAAOrJ,UAGxCib,EAAEwvE,QAA6B,IAAnBxvE,EAAEiwE,aAA0BC,EAAMC,EAC9CnwE,EAAEquE,QAAQqB,UAAW,EAGrBluC,EAAIktC,yBAAyB1uE,EAAGrD,IAIlCqD,EAAEU,MAAO,EAGT8gC,EAAIisC,MAAMztE,EAAGwhC,EAAI4uC,aAAapwE,EAAG,CAC/Bja,KAAMy7C,EAAI4oC,YAAYG,UACtBvkF,KAAMw7C,EAAI6uC,kBAAkBrwE,MAG3BA,EAAEquE,QAAQqB,UAEXluC,EAAIisC,MAAMztE,EAAGwhC,EAAI4uC,aAAapwE,EAAG,CAC/Bja,KAAMy7C,EAAI4oC,YAAYC,mBACtBrkF,KAAMw7C,EAAI8uC,4BAIZtwE,EAAExN,MAAM+9E,QAAU/uC,EAAIgvC,sBAAsBxwE,GAG5CA,EAAExN,MAAMi+E,QAAQ16E,MAAQiK,EAAExN,MAAM+9E,QAAQx6E,MAGxCyrC,EAAIisC,MAAMztE,EAAGwhC,EAAI4uC,aAAapwE,EAAG,CAC/Bja,KAAMy7C,EAAI4oC,YAAYG,UACtBvkF,KAAMw7C,EAAIkvC,eAAe1wE,QAI3BwhC,EAAIisC,MAAMztE,EAAGwhC,EAAI4uC,aAAapwE,EAAG,CAC/Bja,KAAMy7C,EAAI4oC,YAAYG,UACtBvkF,KAAMw7C,EAAImvC,kBAAkB3wE,MAG1BA,EAAEsvE,OAEJ9tC,EAAIisC,MAAMztE,EAAGwhC,EAAI4uC,aAAapwE,EAAG,CAC/Bja,KAAMy7C,EAAI4oC,YAAYG,UACtBvkF,KAAMw7C,EAAIovC,wBAAwB5wE,OAId,IAAnBA,EAAEiwE,cAEHzuC,EAAIisC,MAAMztE,EAAGwhC,EAAI4uC,aAAapwE,EAAG,CAC/Bja,KAAMy7C,EAAI4oC,YAAYG,UACtBvkF,KAAMw7C,EAAIqvC,yBAAyB7wE,MAKvCwhC,EAAIisC,MAAMztE,EAAGwhC,EAAI4uC,aAAapwE,EAAG,CAC/Bja,KAAMy7C,EAAI4oC,YAAYG,UACtBvkF,KAAMw7C,EAAIsvC,sBAAsB9wE,QAMtCwhC,EAAImsC,MAAM3tE,GAGVA,EAAEzc,SA7HD,CA8HF,EA2BDi+C,EAAIuvC,kBAAoB,SAAS/wE,EAAGhS,EAAQlK,GAE1C,GAAGA,EAAS,EACV,OAAOkc,EAAEpJ,MAAMoJ,EAAG,CAChB/Z,QAAS,kDACTsT,MAAM,EACN+wE,MAAO,CACLn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YAAa7rC,EAAI4pC,MAAMG,YAAYa,qBAKzC,IASItb,EAAM5rB,EATN/7B,EAAInb,EAAO80C,SACXnmC,EAAM,CACRq0E,iBAAkBhI,EAAW7/D,EAAG,IAQ9BqtD,EAAQ,GACZ,IACE,KAAM75D,EAAIq0E,iBAAiBltF,SAAW,GAEpCgtE,EAAOkY,EAAWrsE,EAAIq0E,iBAAkB,GACxC9rC,EAAO3H,EAAM2H,KAAK6D,QAAQ+nB,GAC1BA,EAAOvzB,EAAMiP,IAAIukB,oBAAoB7rB,GAAM,GAC3CsxB,EAAMnxE,KAAKyrE,EAYd,CAVC,MAAMppD,GACN,OAAO1H,EAAEpJ,MAAMoJ,EAAG,CAChB/Z,QAAS,oCACTgrF,MAAOvpE,EACPnO,MAAM,EACN+wE,MAAO,CACLn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YAAa7rC,EAAI4pC,MAAMG,YAAYQ,kBAGxC,CAKD,IAAIpqC,EAAU3hC,EAAE4hC,SAAWJ,EAAIK,cAAcF,QACzCA,IAA6B,IAAnB3hC,EAAEiwE,cAA2C,IAAjBzZ,EAAM1yE,OAYrB,IAAjB0yE,EAAM1yE,OAGdkc,EAAEwvE,OAAS7tC,EAASuvC,EAAMf,GAGvBxuC,EACD3hC,EAAEquE,QAAQ8C,kBAAoB3a,EAAM,GAEpCx2D,EAAEquE,QAAQ+C,kBAAoB5a,EAAM,GAGnCh1B,EAAI6vC,uBAAuBrxE,EAAGw2D,KAE/Bx2D,EAAEwvE,OAAS7tC,EAASuvC,EAAMf,IAxB5BnwE,EAAEpJ,MAAMoJ,EAAG,CACT/Z,QAAS07C,EACP,kCACA,kCACFpoC,MAAM,EACN+wE,MAAO,CACLn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YAAa7rC,EAAI4pC,MAAMG,YAAYa,qBAsBzCpsE,EAAEzc,SACH,EAsDDi+C,EAAI8vC,wBAA0B,SAAStxE,EAAGhS,EAAQlK,GAGhD,GAAGA,EAAS,EACV,OAAOkc,EAAEpJ,MAAMoJ,EAAG,CAChB/Z,QAAS,iDACTsT,MAAM,EACN+wE,MAAO,CACLn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YAAa7rC,EAAI4pC,MAAMG,YAAYS,2BAMzChsE,EAAEwvE,OAAS+B,EAGXvxE,EAAEzc,SACH,EASDi+C,EAAIgwC,wBAA0B,SAASxxE,EAAGhS,EAAQlK,GAGhD,GAAGA,EAAS,GACV,OAAOkc,EAAEpJ,MAAMoJ,EAAG,CAChB/Z,QAAS,iDACTsT,MAAM,EACN+wE,MAAO,CACLn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YAAa7rC,EAAI4pC,MAAMG,YAAYS,2BAKzC,IAAI7iE,EAAInb,EAAO80C,SACXnmC,EAAM,CACR80E,sBAAuBzI,EAAW7/D,EAAG,GAAG06B,YAItC+Q,EAAa,KACjB,GAAG50C,EAAE0xE,cACH,IACE98B,EAAa50C,EAAE0xE,cAAc1xE,EAAGA,EAAEquE,QAAQ8C,mBAC1Cv8B,EAAarX,EAAMiP,IAAIoqB,kBAAkBhiB,EAW1C,CAVC,MAAMltC,GACN1H,EAAEpJ,MAAMoJ,EAAG,CACT/Z,QAAS,6BACTgrF,MAAOvpE,EACPnO,MAAM,EACN+wE,MAAO,CACLn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YAAa7rC,EAAI4pC,MAAMG,YAAYqB,iBAGxC,CAGH,GAAkB,OAAfh4B,EACD,OAAO50C,EAAEpJ,MAAMoJ,EAAG,CAChB/Z,QAAS,sBACTsT,MAAM,EACN+wE,MAAO,CACLn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YAAa7rC,EAAI4pC,MAAMG,YAAYqB,kBAKzC,IAEE,IAAIlrC,EAAK1hC,EAAEquE,QAAQ3sC,GACnBA,EAAGwtC,kBAAoBt6B,EAAW7W,QAAQphC,EAAI80E,uBAG9C,IAAIj9E,EAAUwL,EAAEquE,QAAQ0B,mBACxB,GAAGv7E,EAAQ40E,QAAU1nC,EAAGwtC,kBAAkBjrF,WAAW,IACnDuQ,EAAQyuC,QAAUvB,EAAGwtC,kBAAkBjrF,WAAW,GAElD,MAAM,IAAI8C,MAAM,wCAQnB,CANC,MAAM2gB,GAKNg6B,EAAGwtC,kBAAoB3xC,EAAMnvC,OAAOy1C,SAAS,GAC9C,CAKD7jC,EAAEwvE,OAASQ,EACwB,OAAhChwE,EAAEquE,QAAQ+C,oBAGXpxE,EAAEwvE,OAASmC,GAIb3xE,EAAEzc,SACH,EA6BDi+C,EAAIowC,yBAA2B,SAAS5xE,EAAGhS,EAAQlK,GAEjD,GAAGA,EAAS,EACV,OAAOkc,EAAEpJ,MAAMoJ,EAAG,CAChB/Z,QAAS,iDACTsT,MAAM,EACN+wE,MAAO,CACLn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YAAa7rC,EAAI4pC,MAAMG,YAAYa,qBAOzC,IAAIjjE,EAAInb,EAAO80C,SACXnmC,EAAM,CACRk1E,kBAAmB7I,EAAW7/D,EAAG,GACjC2oE,wBAAyB9I,EAAW7/D,EAAG,IAIzCnJ,EAAEquE,QAAQ0D,mBAAqBp1E,EAG/BqD,EAAEwvE,OAASwC,EAGXhyE,EAAEzc,SACH,EASDi+C,EAAIywC,wBAA0B,SAASjyE,EAAGhS,EAAQlK,GAChD,GAAGA,EAAS,EACV,OAAOkc,EAAEpJ,MAAMoJ,EAAG,CAChB/Z,QAAS,gDACTsT,MAAM,EACN+wE,MAAO,CACLn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YAAa7rC,EAAI4pC,MAAMG,YAAYa,qBAQzC,IAAIjjE,EAAInb,EAAO80C,SACf35B,EAAEuK,MAAQ,EACV,IAAIw+D,EAAW/oE,EAAEpkB,QACjBokB,EAAEuK,MAAQ,EAEV,IAAI/W,EAAM,CACRk5C,UAAWmzB,EAAW7/D,EAAG,GAAG06B,YAM1B9lB,EAASwf,EAAMqB,KAAKC,eACxB9gB,EAAOqrB,UAAUppC,EAAEquE,QAAQ1oB,IAAIzhB,UAC/BnmB,EAAOqrB,UAAUppC,EAAEquE,QAAQ/jB,KAAKpmB,UAChCnmB,EAASA,EAAO8lB,WAEhB,IAKE,IAJW7jC,EAAEquE,QAAQ+C,kBAIZz8B,UAAU52B,OAAOA,EAAQphB,EAAIk5C,UAAW,QAC/C,MAAM,IAAI9uD,MAAM,+CAIlBiZ,EAAEquE,QAAQ1oB,IAAI93B,OAAOqkD,GACrBlyE,EAAEquE,QAAQ/jB,KAAKz8B,OAAOqkD,EAUvB,CATC,MAAMxqE,GACN,OAAO1H,EAAEpJ,MAAMoJ,EAAG,CAChB/Z,QAAS,sCACTsT,MAAM,EACN+wE,MAAO,CACLn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YAAa7rC,EAAI4pC,MAAMG,YAAYO,oBAGxC,CAGD9rE,EAAEwvE,OAASQ,EAGXhwE,EAAEzc,SACH,EAyBDi+C,EAAI2wC,sBAAwB,SAASnyE,EAAGhS,EAAQlK,GAE9C,GAAGA,EAAS,EACV,OAAOkc,EAAEpJ,MAAMoJ,EAAG,CAChB/Z,QAAS,mDACTsT,MAAM,EACN+wE,MAAO,CACLn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YAAa7rC,EAAI4pC,MAAMG,YAAYK,mBAKzC,GAA2B,OAAxB5rE,EAAEmxE,kBAA4B,CAE/B,IAAIv6E,EAAQ,CACV3Q,QAAS,uDACTsT,MAAM,EACN+wE,MAAO,CACLn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YAAa7rC,EAAI4pC,MAAMG,YAAYoB,wBAMnCr5D,EAAMtT,EAAE+d,OAAO/d,EAAGpJ,EAAM0zE,MAAM+C,YADtB,EAC0C,IACtD,IAAW,IAAR/5D,EAkBD,OAhBGA,GAAe,IAARA,KAEU,iBAARA,GAAqBiqB,EAAMqB,KAAK7yC,QAAQunB,GAOzB,iBAARA,IAEf1c,EAAM0zE,MAAM+C,YAAc/5D,IARvBA,EAAIrtB,UACL2Q,EAAM3Q,QAAUqtB,EAAIrtB,SAEnBqtB,EAAIg3D,QACL1zE,EAAM0zE,MAAM+C,YAAc/5D,EAAIg3D,SAS7BtqE,EAAEpJ,MAAMoJ,EAAGpJ,EAErB,CAGmC,OAAjCoJ,EAAEquE,QAAQ0D,qBACX/jF,EAASwzC,EAAI4uC,aAAapwE,EAAG,CAC3Bja,KAAMy7C,EAAI4oC,YAAYG,UACtBvkF,KAAMw7C,EAAImvC,kBAAkB3wE,KAE9BwhC,EAAIisC,MAAMztE,EAAGhS,IAIfA,EAASwzC,EAAI4uC,aAAapwE,EAAG,CAC1Bja,KAAMy7C,EAAI4oC,YAAYG,UACtBvkF,KAAMw7C,EAAI4wC,wBAAwBpyE,KAErCwhC,EAAIisC,MAAMztE,EAAGhS,GAGbgS,EAAEwvE,OAAS6C,EAGX,IAAI3jE,EAAW,SAAS1O,EAAG61C,GACW,OAAjC71C,EAAEquE,QAAQ0D,oBACqB,OAAhC/xE,EAAEquE,QAAQ+C,mBAEV5vC,EAAIisC,MAAMztE,EAAGwhC,EAAI4uC,aAAapwE,EAAG,CAC/Bja,KAAMy7C,EAAI4oC,YAAYG,UACtBvkF,KAAMw7C,EAAI8wC,wBAAwBtyE,EAAG61C,MAKzCrU,EAAIisC,MAAMztE,EAAGwhC,EAAI4uC,aAAapwE,EAAG,CAC/Bja,KAAMy7C,EAAI4oC,YAAYC,mBACtBrkF,KAAMw7C,EAAI8uC,4BAIZtwE,EAAExN,MAAM+9E,QAAU/uC,EAAIgvC,sBAAsBxwE,GAG5CA,EAAExN,MAAMi+E,QAAQ16E,MAAQiK,EAAExN,MAAM+9E,QAAQx6E,MAGxCyrC,EAAIisC,MAAMztE,EAAGwhC,EAAI4uC,aAAapwE,EAAG,CAC/Bja,KAAMy7C,EAAI4oC,YAAYG,UACtBvkF,KAAMw7C,EAAIkvC,eAAe1wE,MAI3BA,EAAEwvE,OAASC,EAGXjuC,EAAImsC,MAAM3tE,GAGVA,EAAEzc,SACH,EAID,GAAoC,OAAjCyc,EAAEquE,QAAQ0D,oBACqB,OAAhC/xE,EAAEquE,QAAQ+C,kBACV,OAAO1iE,EAAS1O,EAAG,MAIrBwhC,EAAI+wC,mBAAmBvyE,EAAG0O,EAC3B,EAQD8yB,EAAIgxC,uBAAyB,SAASxyE,EAAGhS,GACvC,GAAiC,IAA9BA,EAAO80C,SAASoF,UACjB,OAAOloC,EAAEpJ,MAAMoJ,EAAG,CAChB/Z,QAAS,6CACTsT,MAAM,EACN+wE,MAAO,CACLn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YAAa7rC,EAAI4pC,MAAMG,YAAYa,qBAQzC,IAAIzqC,EAAU3hC,EAAE4hC,SAAWJ,EAAIK,cAAcF,QACzC3hC,EAAEquE,QAAQqB,UAAY/tC,IAAa3hC,EAAEquE,QAAQqB,WAAa/tC,KAC5D3hC,EAAExN,MAAM+9E,QAAU/uC,EAAIgvC,sBAAsBxwE,IAI9CA,EAAExN,MAAMi+E,QAAQ/8D,KAAO1T,EAAExN,MAAM+9E,QAAQ78D,OAKlC1T,EAAEquE,QAAQqB,UAAY/tC,GAAY3hC,EAAEquE,QAAQqB,WAAa/tC,KAC5D3hC,EAAExN,MAAM+9E,QAAU,MAIpBvwE,EAAEwvE,OAAS7tC,EAAS8wC,EAAMC,EAG1B1yE,EAAEzc,SACH,EAyCDi+C,EAAImxC,eAAiB,SAAS3yE,EAAGhS,EAAQlK,GAIvC,IAAIqlB,EAAInb,EAAO80C,SACf35B,EAAEuK,MAAQ,EACV,IAAIw+D,EAAW/oE,EAAEpkB,QACjBokB,EAAEuK,MAAQ,EAGV,IAAIk/D,EAAK5kF,EAAO80C,SAASe,YAGzB16B,EAAIo0B,EAAMqB,KAAKC,gBACbuK,UAAUppC,EAAEquE,QAAQ1oB,IAAIzhB,UAC1B/6B,EAAEigC,UAAUppC,EAAEquE,QAAQ/jB,KAAKpmB,UAG3B,IAAIvC,EAAU3hC,EAAE4hC,SAAWJ,EAAIK,cAAcF,OACzChT,EAAQgT,EAAS,kBAAoB,kBAGrCD,EAAK1hC,EAAEquE,QAAQ3sC,GAInB,IADAv4B,EADUo/D,EACF7mC,EAAGytC,cAAexgD,EAAOxlB,EAAE06B,WAFzB,KAGLA,aAAe+uC,EAClB,OAAO5yE,EAAEpJ,MAAMoJ,EAAG,CAChB/Z,QAAS,2CACTsT,MAAM,EACN+wE,MAAO,CACLn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YAAa7rC,EAAI4pC,MAAMG,YAAYiB,iBAMzCxsE,EAAEquE,QAAQ1oB,IAAI93B,OAAOqkD,GACrBlyE,EAAEquE,QAAQ/jB,KAAKz8B,OAAOqkD,IAGlBlyE,EAAEquE,QAAQqB,UAAY/tC,IAAa3hC,EAAEquE,QAAQqB,WAAa/tC,KAE5DH,EAAIisC,MAAMztE,EAAGwhC,EAAI4uC,aAAapwE,EAAG,CAC/Bja,KAAMy7C,EAAI4oC,YAAYC,mBACtBrkF,KAAMw7C,EAAI8uC,4BAIZtwE,EAAExN,MAAMi+E,QAAQ16E,MAAQiK,EAAExN,MAAM+9E,QAAQx6E,MACxCiK,EAAExN,MAAM+9E,QAAU,KAGlB/uC,EAAIisC,MAAMztE,EAAGwhC,EAAI4uC,aAAapwE,EAAG,CAC/Bja,KAAMy7C,EAAI4oC,YAAYG,UACtBvkF,KAAMw7C,EAAIkvC,eAAe1wE,OAK7BA,EAAEwvE,OAAS7tC,EAASkxC,EAAMC,EAG1B9yE,EAAEutE,aAAc,IACdvtE,EAAEwtE,WAGJxtE,EAAE+yE,gBAAkBpxC,EAClB3hC,EAAEquE,QAAQ8C,kBAAoBnxE,EAAEquE,QAAQ+C,kBAG1C5vC,EAAImsC,MAAM3tE,GAGVA,EAAEgzE,aAAc,EAChBhzE,EAAEizE,UAAUjzE,GAGZA,EAAEzc,SACH,EAQDi+C,EAAI0xC,YAAc,SAASlzE,EAAGhS,GAE5B,IAQI2O,EARAwM,EAAInb,EAAO80C,SACXwnC,EAAQ,CACVn+B,MAAOhjC,EAAE++B,UACTmlC,YAAalkE,EAAE++B,WAMjB,OAAOoiC,EAAM+C,aACb,KAAK7rC,EAAI4pC,MAAMG,YAAYC,aACzB7uE,EAAM,qBACN,MACF,KAAK6kC,EAAI4pC,MAAMG,YAAYE,mBACzB9uE,EAAM,sBACN,MACF,KAAK6kC,EAAI4pC,MAAMG,YAAYG,eACzB/uE,EAAM,kBACN,MACF,KAAK6kC,EAAI4pC,MAAMG,YAAYI,kBACzBhvE,EAAM,qBACN,MACF,KAAK6kC,EAAI4pC,MAAMG,YAAYK,gBACzBjvE,EAAM,mBACN,MACF,KAAK6kC,EAAI4pC,MAAMG,YAAYM,sBACzBlvE,EAAM,wBACN,MACF,KAAK6kC,EAAI4pC,MAAMG,YAAYO,kBACzBnvE,EAAM,qBACN,MACF,KAAK6kC,EAAI4pC,MAAMG,YAAYQ,gBACzBpvE,EAAM,mBACN,MACF,KAAK6kC,EAAI4pC,MAAMG,YAAYS,wBACzBrvE,EAAM,2BACN,MACF,KAAK6kC,EAAI4pC,MAAMG,YAAYU,oBACzBtvE,EAAM,uBACN,MACF,KAAK6kC,EAAI4pC,MAAMG,YAAYW,oBACzBvvE,EAAM,uBACN,MACF,KAAK6kC,EAAI4pC,MAAMG,YAAYY,oBACzBxvE,EAAM,uBACN,MACF,KAAK6kC,EAAI4pC,MAAMG,YAAYa,kBACzBzvE,EAAM,qBACN,MACF,KAAK6kC,EAAI4pC,MAAMG,YAAYc,WACzB1vE,EAAM,iCACN,MACF,KAAK6kC,EAAI4pC,MAAMG,YAAYe,cACzB3vE,EAAM,iBACN,MACF,KAAK6kC,EAAI4pC,MAAMG,YAAYgB,aACzB5vE,EAAM,gBACN,MACF,KAAK6kC,EAAI4pC,MAAMG,YAAYiB,cACzB7vE,EAAM,iBACN,MACF,KAAK6kC,EAAI4pC,MAAMG,YAAYkB,mBACzB9vE,EAAM,sBACN,MACF,KAAK6kC,EAAI4pC,MAAMG,YAAYmB,iBACzB/vE,EAAM,gCACN,MACF,KAAK6kC,EAAI4pC,MAAMG,YAAYoB,sBACzBhwE,EAAM,yBACN,MACF,KAAK6kC,EAAI4pC,MAAMG,YAAYqB,eACzBjwE,EAAM,kBACN,MACF,KAAK6kC,EAAI4pC,MAAMG,YAAYsB,cACzBlwE,EAAM,iBACN,MACF,KAAK6kC,EAAI4pC,MAAMG,YAAYuB,iBACzBnwE,EAAM,+BACN,MACF,QACEA,EAAM,iBAKR,GAAG2tE,EAAM+C,cAAgB7rC,EAAI4pC,MAAMG,YAAYC,aAC7C,OAAOxrE,EAAEuD,QAIXvD,EAAEpJ,MAAMoJ,EAAG,CACT/Z,QAAS0W,EACTpD,MAAM,EAEN45E,OAASnzE,EAAE4hC,SAAWJ,EAAIK,cAAcF,OAAU,SAAW,SAC7D2oC,MAAOA,IAITtqE,EAAEzc,SACH,EAQDi+C,EAAI4xC,gBAAkB,SAASpzE,EAAGhS,GAEhC,IAAImb,EAAInb,EAAO80C,SACX/8C,EAAOojB,EAAE++B,UACTpkD,EAASqlB,EAAE8/D,WAGf,GAAGnlF,EAASqlB,EAAErlB,SAQZ,OALAkc,EAAEqzE,WAAarlF,EACfA,EAAO80C,SAAWvF,EAAMqB,KAAKC,eAC7B11B,EAAEuK,MAAQ,EAGH1T,EAAEzc,UAKXyc,EAAEqzE,WAAa,KACflqE,EAAEuK,MAAQ,EAIV,IAAI3uB,EAAQokB,EAAEpkB,MAAMjB,EAAS,GAG7BqlB,EAAEuK,MAAQ,EAGP3tB,KAAQutF,EAAQtzE,EAAE4hC,QAAQ5hC,EAAEwvE,SAE1BxvE,EAAE4hC,SAAWJ,EAAIK,cAAc4nC,QAAWzpE,EAAEU,MAASV,EAAEsvE,OACxDtvE,EAAEutE,aAAc,EAChBvtE,EAAEquE,QAAU,CACV75E,QAAS,KACTs5E,WAAY,CACVQ,YAAa,CACXC,eAAgB,KAGpBC,YAAa,KACbC,kBAAmB,KACnB0C,kBAAmB,KACnBC,kBAAmB,KACnBzrB,IAAKpoB,EAAMoW,GAAGgS,IAAIt/D,SAClBikE,KAAM/sB,EAAMoW,GAAG2W,KAAKjkE,WASrBN,IAASy7C,EAAIkpC,cAAcC,eAC5B5kF,IAASy7C,EAAIkpC,cAAcO,oBAC3BllF,IAASy7C,EAAIkpC,cAAcS,WAC3BnrE,EAAEquE,QAAQ1oB,IAAI93B,OAAO9oC,GACrBib,EAAEquE,QAAQ/jB,KAAKz8B,OAAO9oC,IAIxBuuF,EAAQtzE,EAAE4hC,QAAQ5hC,EAAEwvE,QAAQzpF,GAAMia,EAAGhS,EAAQlK,IAG7C09C,EAAI4rC,iBAAiBptE,EAAGhS,EAE3B,EAQDwzC,EAAI+xC,sBAAwB,SAASvzE,EAAGhS,GAEtCgS,EAAEha,KAAKojD,UAAUp7C,EAAO80C,UACxB9iC,EAAEwzE,UAAUxzE,GAGZA,EAAEzc,SACH,EAQDi+C,EAAIiyC,gBAAkB,SAASzzE,EAAGhS,GAEhC,IAAImb,EAAInb,EAAO80C,SACX/8C,EAAOojB,EAAE++B,UACTpkD,EAASqlB,EAAE3V,WACX4D,EAAU+R,EAAE06B,SAAS//C,GAEzB,GAAGiC,IAASy7C,EAAIurC,qBAAqBC,kBAAmB,CAEtD,GAAGhtE,EAAEutE,aAAezpF,EAASsT,EAAQtT,OAEnC,OAAOkc,EAAEzc,UAGXi+C,EAAIisC,MAAMztE,EAAGwhC,EAAI4uC,aAAapwE,EAAG,CAC/Bja,KAAMy7C,EAAI4oC,YAAYK,UACtBzkF,KAAMw7C,EAAIkyC,gBACRlyC,EAAIurC,qBAAqBE,mBAAoB71E,MAEjDoqC,EAAImsC,MAAM3tE,EACX,MAAM,GAAGja,IAASy7C,EAAIurC,qBAAqBE,mBAAoB,CAE9D,GAAG71E,IAAY4I,EAAE2zE,yBAEf,OAAO3zE,EAAEzc,UAIRyc,EAAE4zE,mBACH5zE,EAAE4zE,kBAAkB5zE,EAAGu9B,EAAMqB,KAAKC,aAAaznC,GAElD,CAGD4I,EAAEzc,SACH,EAyDD,IACIosF,EAAM,EACNuB,EAAM,EACNK,EAAM,EACNS,EAAM,EACNvC,EAAM,EACNgD,EAAM,EACNI,EAAM,EACNR,EAAM,EAINnC,EAAM,EACNC,EAAM,EACNwB,EAAM,EACN3B,EAAM,EACN0C,EAAM,EACNI,EAAM,EAINe,EAAKryC,EAAI4rC,iBACT0G,EAAKtyC,EAAIgxC,uBACTuB,EAAKvyC,EAAI0xC,YACTc,EAAKxyC,EAAI4xC,gBACTa,EAAKzyC,EAAI+xC,sBACTW,EAAK1yC,EAAIiyC,gBACTU,EAAU,GACdA,EAAQ3yC,EAAIK,cAAcF,QAAU,CAE7B,CAACkyC,EAAGE,EAAGC,EAAGH,EAAGK,GACb,CAACL,EAAGE,EAAGC,EAAGH,EAAGK,GACb,CAACL,EAAGE,EAAGC,EAAGH,EAAGK,GACb,CAACL,EAAGE,EAAGC,EAAGH,EAAGK,GACb,CAACL,EAAGE,EAAGC,EAAGH,EAAGK,GACb,CAACJ,EAAGC,EAAGF,EAAGA,EAAGK,GACb,CAACL,EAAGE,EAAGC,EAAGH,EAAGK,GACb,CAACL,EAAGE,EAAGC,EAAGC,EAAGC,GACb,CAACL,EAAGE,EAAGC,EAAGH,EAAGK,IAIpBC,EAAQ3yC,EAAIK,cAAc4nC,QAAU,CAE7B,CAACoK,EAAGE,EAAGC,EAAGH,EAAGK,GACb,CAACL,EAAGE,EAAGC,EAAGH,EAAGK,GACb,CAACL,EAAGE,EAAGC,EAAGH,EAAGK,GACb,CAACL,EAAGE,EAAGC,EAAGH,EAAGK,GACb,CAACJ,EAAGC,EAAGF,EAAGA,EAAGK,GACb,CAACL,EAAGE,EAAGC,EAAGH,EAAGK,GACb,CAACL,EAAGE,EAAGC,EAAGC,EAAGC,GACb,CAACL,EAAGE,EAAGC,EAAGH,EAAGK,IAIpB,IAAIE,EAAK5yC,EAAI8rC,mBACT+G,EAAK7yC,EAAI6tC,kBACTiF,EAAK9yC,EAAIuvC,kBACTwD,EAAK/yC,EAAI8vC,wBACTkD,EAAKhzC,EAAIowC,yBACT6C,EAAKjzC,EAAI2wC,sBACTuC,EAAKlzC,EAAImxC,eACTW,EAAU,GACdA,EAAQ9xC,EAAIK,cAAcF,QAAU,CAE7B,CAACkyC,EAAGA,EAAGQ,EAAGR,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,GAC7D,CAACO,EAAGP,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGS,EAAGC,EAAGC,EAAGC,EAAGZ,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,GAC7D,CAACO,EAAGP,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGU,EAAGC,EAAGC,EAAGZ,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,GAC7D,CAACO,EAAGP,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGW,EAAGC,EAAGZ,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,GAC7D,CAACO,EAAGP,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGY,EAAGZ,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,GAC7D,CAACO,EAAGP,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,GAC7D,CAACO,EAAGP,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGa,GAC7D,CAACN,EAAGP,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,GAC7D,CAACO,EAAGP,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,IAKpE,IAAIc,EAAKnzC,EAAIouC,kBACTgF,EAAKpzC,EAAIgwC,wBACTqD,EAAKrzC,EAAIywC,wBACbqB,EAAQ9xC,EAAIK,cAAc4nC,QAAU,CAE7B,CAACoK,EAAGc,EAAGd,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,GAC7D,CAACA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGS,EAAGT,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,GAC7D,CAACA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGe,EAAGf,EAAGA,EAAGA,EAAGA,GAC7D,CAACA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGgB,EAAGhB,EAAGA,EAAGA,EAAGA,EAAGA,GAC7D,CAACA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,GAC7D,CAACA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGa,GAC7D,CAACb,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,GAC7D,CAACA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,IA8EpEryC,EAAIszC,aAAe,SAAS90E,EAAG0hC,GAwB7B,IAAIkqB,EAAM2c,EAGNn6E,EAASszC,EAAGmtC,cAAgBntC,EAAG0tC,cAG/BpvE,EAAEquE,QAAQqB,WAEZhuC,EAAGytC,cAAgBvjB,EACjBlqB,EAAGwtC,kBAAmB,gBAAiB9gF,EAAQ,IAAIrJ,QACrD28C,EAAGwtC,kBAAoB,MAIzB9gF,EAASszC,EAAG0tC,cAAgB1tC,EAAGmtC,cAC/B,IAAI/qF,EAAS,EAAI49C,EAAGuD,eAAiB,EAAIvD,EAAGiD,eAGxCowC,EAAS/0E,EAAExL,QAAQ40E,QAAU5nC,EAAI0B,SAASC,QAAQimC,OACpDppE,EAAExL,QAAQyuC,QAAUzB,EAAI0B,SAASC,QAAQF,MACxC8xC,IACDjxF,GAAU,EAAI49C,EAAGmD,iBAEnB,IAAI8b,EAAKiL,EAAIlqB,EAAGytC,cAAe,gBAAiB/gF,EAAQtK,GAGpD4+C,EAAO,CACTsyC,qBAAsBr0B,EAAG9c,SAASnC,EAAGuD,gBACrCgwC,qBAAsBt0B,EAAG9c,SAASnC,EAAGuD,gBACrCjD,iBAAkB2e,EAAG9c,SAASnC,EAAGiD,gBACjC5C,iBAAkB4e,EAAG9c,SAASnC,EAAGiD,iBASnC,OALGowC,IACDryC,EAAKR,gBAAkBye,EAAG9c,SAASnC,EAAGmD,iBACtCnC,EAAKT,gBAAkB0e,EAAG9c,SAASnC,EAAGmD,kBAGjCnC,CACR,EAgCDlB,EAAIgvC,sBAAwB,SAASxwE,GACnC,IAAI2hC,EAAU3hC,EAAE4hC,SAAWJ,EAAIK,cAAcF,OAEzCuzC,EAAa,WACf,IAAI31E,EAAO,CAETsjC,eAAgB,CAAC,EAAG,GACpBD,OAAQ,KACRN,UAAW,EACXE,YAAa,KACbV,YAAa,KACbK,eAAgB,SAASn0C,GAAS,OAAO,CAAM,EAC/CmnF,iBAAkB,KAClBC,iBAAkB,SAASpnF,GAAS,OAAO,CAAM,EACjDg1C,qBAAsB,WACU,aAA3BzjC,EAAKsjC,eAAe,IACrBtjC,EAAKsjC,eAAe,GAAK,IACvBtjC,EAAKsjC,eAAe,MAEpBtjC,EAAKsjC,eAAe,EAEzB,GAEH,OAAOtjC,CACR,EACG/M,EAAQ,CACVkhB,KAAMwhE,IACNn/E,MAAOm/E,KA2DT,GAvDA1iF,EAAMkhB,KAAKma,OAAS,SAAS7tB,EAAGhS,GAuB9B,OAtBIwE,EAAMkhB,KAAKyuB,eAAen0C,EAAQwE,EAAMkhB,MAYjClhB,EAAMkhB,KAAK0hE,iBAAiBp1E,EAAGhS,EAAQwE,EAAMkhB,OACtD1T,EAAEpJ,MAAMoJ,EAAG,CACT/Z,QAAS,+BACTsT,MAAM,EACN+wE,MAAO,CACLn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YAAa7rC,EAAI4pC,MAAMG,YAAYM,yBAjBvC7rE,EAAEpJ,MAAMoJ,EAAG,CACT/Z,QAAS,uCACTsT,MAAM,EACN+wE,MAAO,CACLn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MAIvB+B,YAAa7rC,EAAI4pC,MAAMG,YAAYG,mBAajC1rE,EAAEsvE,IACX,EAGD98E,EAAMuD,MAAM83B,OAAS,SAAS7tB,EAAGhS,GAwB/B,OAvBIwE,EAAMuD,MAAMq/E,iBAAiBp1E,EAAGhS,EAAQwE,EAAMuD,OAWvCvD,EAAMuD,MAAMosC,eAAen0C,EAAQwE,EAAMuD,QAGlDiK,EAAEpJ,MAAMoJ,EAAG,CACT/Z,QAAS,4BACTsT,MAAM,EACN+wE,MAAO,CACLn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YAAa7rC,EAAI4pC,MAAMG,YAAYqB,kBAhBvC5sE,EAAEpJ,MAAMoJ,EAAG,CACT/Z,QAAS,6BACTsT,MAAM,EACN+wE,MAAO,CACLn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YAAa7rC,EAAI4pC,MAAMG,YAAYqB,mBAejC5sE,EAAEsvE,IACX,EAGEtvE,EAAEquE,QAAS,CACZ,IAAI3sC,EAAK1hC,EAAEquE,QAAQ3sC,GAcnB,OAbA1hC,EAAEquE,QAAQG,YAAYnqC,uBAAuB3C,GAG7CA,EAAGl1C,KAAOg1C,EAAIszC,aAAa90E,EAAG0hC,GAC9BlvC,EAAMkhB,KAAKkvB,OAASjB,EAClBD,EAAGl1C,KAAKyoF,qBAAuBvzC,EAAGl1C,KAAKwoF,qBACzCxiF,EAAMuD,MAAM6sC,OAASjB,EACnBD,EAAGl1C,KAAKwoF,qBAAuBtzC,EAAGl1C,KAAKyoF,qBAGzCj1E,EAAEquE,QAAQG,YAAY/sC,oBAAoBjvC,EAAOwN,EAAG0hC,GAG7CA,EAAGutC,uBACV,KAAKztC,EAAI2oC,kBAAkBh5D,KACzB,MACF,KAAKqwB,EAAI2oC,kBAAkBrB,QACzBt2E,EAAMkhB,KAAK0hE,iBAAmBrM,EAC9Bv2E,EAAMuD,MAAMq/E,iBAAmBtM,EAC/B,MACF,QACE,MAAM,IAAI/hF,MAAM,sCAEnB,CAED,OAAOyL,CACR,EAuBDgvC,EAAIutC,aAAe,WAEjB,IAAI7tD,EAAI,IAAI55B,KACRsiD,GAAO1oB,EAA4B,IAAxBA,EAAEm0D,oBACb3yC,EAAOnF,EAAMqB,KAAKC,eAGtB,OAFA6D,EAAK8L,SAAS5E,GACdlH,EAAKK,SAASxF,EAAMnvC,OAAOy1C,SAAS,KAC7BnB,CACR,EAYDlB,EAAI4uC,aAAe,SAASpwE,EAAG1G,GAC7B,OAAIA,EAAQtT,KAGC,CACXD,KAAMuT,EAAQvT,KACdyO,QAAS,CACP40E,MAAOppE,EAAExL,QAAQ40E,MACjBnmC,MAAOjjC,EAAExL,QAAQyuC,OAEnBn/C,OAAQwV,EAAQtT,KAAKlC,SACrBg/C,SAAUxpC,EAAQtT,MATX,IAYV,EAYDw7C,EAAIksC,YAAc,SAAS1tE,EAAGsqE,GAC5B,IAAInhE,EAAIo0B,EAAMqB,KAAKC,eAGnB,OAFA11B,EAAE21B,QAAQwrC,EAAMn+B,OAChBhjC,EAAE21B,QAAQwrC,EAAM+C,aACT7rC,EAAI4uC,aAAapwE,EAAG,CACzBja,KAAMy7C,EAAI4oC,YAAYE,MACtBtkF,KAAMmjB,GAET,EAoEDq4B,EAAI8zC,kBAAoB,SAASt1E,GAE/BA,EAAEquE,QAAQ0B,mBAAqB,CAC7B3G,MAAOppE,EAAExL,QAAQ40E,MACjBnmC,MAAOjjC,EAAExL,QAAQyuC,OAKnB,IADA,IAAIsyC,EAAeh4C,EAAMqB,KAAKC,eACtBj2C,EAAI,EAAGA,EAAIoX,EAAEu1E,aAAazxF,SAAU8E,EAAG,CAC7C,IAAIy4D,EAAKrhD,EAAEu1E,aAAa3sF,GACxB2sF,EAAaz2C,QAAQuiB,EAAG9wC,GAAG,IAC3BglE,EAAaz2C,QAAQuiB,EAAG9wC,GAAG,GAC5B,CACD,IAAIilE,EAAUD,EAAazxF,SAIvB2xF,EAAqBl4C,EAAMqB,KAAKC,eACpC42C,EAAmB32C,QAAQ0C,EAAI2oC,kBAAkBh5D,MAQjD,IAAIukE,EAAWD,EAAmB3xF,SAI9BgqF,EAAavwC,EAAMqB,KAAKC,eAC5B,GAAG7+B,EAAE21E,YAAa,CAEhB,IAAIhqF,EAAM4xC,EAAMqB,KAAKC,eACrBlzC,EAAImzC,QAAQ,GACZnzC,EAAImzC,QAAQ,GAwBZ,IAAI82C,EAAar4C,EAAMqB,KAAKC,eAC5B+2C,EAAW92C,QAAQ,GACnBoqC,EAAY0M,EAAY,EAAGr4C,EAAMqB,KAAKC,aAAa7+B,EAAE21E,cAGrD,IAAIE,EAASt4C,EAAMqB,KAAKC,eACxBqqC,EAAY2M,EAAQ,EAAGD,GACvB1M,EAAYv9E,EAAK,EAAGkqF,GACpB/H,EAAW1kC,UAAUz9C,EACtB,CACD,IAAImqF,EAAYhI,EAAWhqF,SACxBgyF,EAAY,IAEbA,GAAa,GAMf,IAAIvG,EAAYvvE,EAAEquE,QAAQ99D,GACtBzsB,EACFyrF,EAAUzrF,OAAS,EACnB,EACA,EAAI,GACJ,EAAI0xF,EACJ,EAAIE,EACJI,EAGEpzC,EAAOnF,EAAMqB,KAAKC,eAYtB,OAXA6D,EAAK5D,QAAQ0C,EAAIkpC,cAAcE,cAC/BloC,EAAKqzC,SAASjyF,GACd4+C,EAAK5D,QAAQ9+B,EAAExL,QAAQ40E,OACvB1mC,EAAK5D,QAAQ9+B,EAAExL,QAAQyuC,OACvBP,EAAKK,SAAS/iC,EAAEquE,QAAQ3sC,GAAGmtC,eAC3B3F,EAAYxmC,EAAM,EAAGnF,EAAMqB,KAAKC,aAAa0wC,IAC7CrG,EAAYxmC,EAAM,EAAG6yC,GACrBrM,EAAYxmC,EAAM,EAAG+yC,GAClBK,EAAY,GACb5M,EAAYxmC,EAAM,EAAGorC,GAEhBprC,CACR,EASDlB,EAAI6uC,kBAAoB,SAASrwE,GAE/B,IAAIuvE,EAAYvvE,EAAEquE,QAAQ99D,GACtBzsB,EACFyrF,EAAUzrF,OAAS,EACnB,EACA,EAAI,GACJ,EACA,EAGE4+C,EAAOnF,EAAMqB,KAAKC,eAUtB,OATA6D,EAAK5D,QAAQ0C,EAAIkpC,cAAcG,cAC/BnoC,EAAKqzC,SAASjyF,GACd4+C,EAAK5D,QAAQ9+B,EAAExL,QAAQ40E,OACvB1mC,EAAK5D,QAAQ9+B,EAAExL,QAAQyuC,OACvBP,EAAKK,SAAS/iC,EAAEquE,QAAQ3sC,GAAG0tC,eAC3BlG,EAAYxmC,EAAM,EAAGnF,EAAMqB,KAAKC,aAAa0wC,IAC7C7sC,EAAK5D,QAAQ9+B,EAAEquE,QAAQG,YAAYj+D,GAAG,IACtCmyB,EAAK5D,QAAQ9+B,EAAEquE,QAAQG,YAAYj+D,GAAG,IACtCmyB,EAAK5D,QAAQ9+B,EAAEquE,QAAQI,mBAChB/rC,CACR,EAwBDlB,EAAImvC,kBAAoB,SAAS3wE,GAI/B,IAGMg2E,EAHFr0C,EAAU3hC,EAAE4hC,SAAWJ,EAAIK,cAAcF,OACzCmvB,EAAO,KACR9wD,EAAEi2E,iBAGDD,EADCr0C,EACM3hC,EAAEquE,QAAQ0D,mBAEV/xE,EAAEquE,QAAQP,WAAWQ,YAAYC,eAE1Czd,EAAO9wD,EAAEi2E,eAAej2E,EAAGg2E,IAI7B,IAAIE,EAAW34C,EAAMqB,KAAKC,eAC1B,GAAY,OAATiyB,EACD,IAEMvzB,EAAMqB,KAAK7yC,QAAQ+kE,KACrBA,EAAO,CAACA,IAGV,IADA,IAAI5rB,EAAO,KACHt8C,EAAI,EAAGA,EAAIkoE,EAAKhtE,SAAU8E,EAAG,CACnC,IAAI+T,EAAM4gC,EAAMgsB,IAAIxhE,OAAO+oE,EAAKloE,IAAI,GACpC,GAAgB,gBAAb+T,EAAI5W,MACQ,qBAAb4W,EAAI5W,MACS,wBAAb4W,EAAI5W,KAAgC,CACpC,IAAI6Q,EAAQ,IAAI7P,MAAM,+HAItB,MADA6P,EAAM6yD,WAAa9sD,EAAI5W,KACjB6Q,CACP,CACD,GAAG+F,EAAI+sD,UAAkC,cAAtB/sD,EAAI+sD,SAAS3jE,KAC9B,MAAM,IAAIgB,MAAM,6DAGlB,IAAIovF,EAAM54C,EAAMqB,KAAKC,aAAaliC,EAAIyC,MAC1B,OAAT8lC,IACDA,EAAO3H,EAAM2H,KAAK6D,QAAQotC,EAAIpxF,SAAS,IAIzC,IAAIqxF,EAAa74C,EAAMqB,KAAKC,eAC5BqqC,EAAYkN,EAAY,EAAGD,GAG3BD,EAAS9sC,UAAUgtC,EACpB,CAGDtlB,EAAOvzB,EAAMiP,IAAIukB,oBAAoB7rB,GAClCvD,EACD3hC,EAAEquE,QAAQ+C,kBAAoBtgB,EAE9B9wD,EAAEquE,QAAQ8C,kBAAoBrgB,CAYjC,CAVC,MAAMppD,GACN,OAAO1H,EAAEpJ,MAAMoJ,EAAG,CAChB/Z,QAAS,mCACTgrF,MAAOvpE,EACPnO,MAAM,EACN+wE,MAAO,CACLn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YAAa7rC,EAAI4pC,MAAMG,YAAYQ,kBAGxC,CAIH,IAAIjoF,EAAS,EAAIoyF,EAASpyF,SAGtB4+C,EAAOnF,EAAMqB,KAAKC,eAItB,OAHA6D,EAAK5D,QAAQ0C,EAAIkpC,cAAc/T,aAC/Bj0B,EAAKqzC,SAASjyF,GACdolF,EAAYxmC,EAAM,EAAGwzC,GACdxzC,CACR,EAmDDlB,EAAI4wC,wBAA0B,SAASpyE,GAErC,IAAImJ,EAAIo0B,EAAMqB,KAAKC,eAInB11B,EAAE21B,QAAQ9+B,EAAEquE,QAAQ0B,mBAAmB3G,OACvCjgE,EAAE21B,QAAQ9+B,EAAEquE,QAAQ0B,mBAAmB9sC,OAGvC95B,EAAE45B,SAASxF,EAAMnvC,OAAOy1C,SAAS,KAGjC,IAAInC,EAAK1hC,EAAEquE,QAAQ3sC,GACnBA,EAAGwtC,kBAAoB/lE,EAAE06B,WAYzB,IAAI//C,GARJqlB,EADUnJ,EAAEquE,QAAQ8C,kBAAkBx8B,UAC9BrW,QAAQoD,EAAGwtC,oBAQJprF,OAAS,EAGpB4+C,EAAOnF,EAAMqB,KAAKC,eAMtB,OALA6D,EAAK5D,QAAQ0C,EAAIkpC,cAAcQ,qBAC/BxoC,EAAKqzC,SAASjyF,GAEd4+C,EAAK2G,SAASlgC,EAAErlB,QAChB4+C,EAAKK,SAAS55B,GACPu5B,CACR,EASDlB,EAAIovC,wBAA0B,SAAS5wE,GAKrC,IAGI0iC,EAAOnF,EAAMqB,KAAKC,eAKtB,OAAO6D,CACR,EASDlB,EAAI+wC,mBAAqB,SAASvyE,EAAG0O,GAEnC,IAAIvF,EAAIo0B,EAAMqB,KAAKC,eACnB11B,EAAEigC,UAAUppC,EAAEquE,QAAQ1oB,IAAIzhB,UAC1B/6B,EAAEigC,UAAUppC,EAAEquE,QAAQ/jB,KAAKpmB,UAC3B/6B,EAAIA,EAAE06B,WAGN7jC,EAAEq2E,aAAer2E,EAAEq2E,cAAgB,SAASr2E,EAAGmJ,EAAGuF,GAEhD,IAAIkmC,EAAa,KACjB,GAAG50C,EAAE0xE,cACH,IACE98B,EAAa50C,EAAE0xE,cAAc1xE,EAAGA,EAAEquE,QAAQ+C,mBAC1Cx8B,EAAarX,EAAMiP,IAAIoqB,kBAAkBhiB,EAW1C,CAVC,MAAMltC,GACN1H,EAAEpJ,MAAMoJ,EAAG,CACT/Z,QAAS,6BACTgrF,MAAOvpE,EACPnO,MAAM,EACN+wE,MAAO,CACLn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YAAa7rC,EAAI4pC,MAAMG,YAAYqB,iBAGxC,CAEe,OAAfh4B,EACD50C,EAAEpJ,MAAMoJ,EAAG,CACT/Z,QAAS,sBACTsT,MAAM,EACN+wE,MAAO,CACLn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YAAa7rC,EAAI4pC,MAAMG,YAAYqB,kBAIvCzjE,EAAIyrC,EAAW51B,KAAK7V,EAAG,MAEzBuF,EAAS1O,EAAGmJ,EACb,EAGDnJ,EAAEq2E,aAAar2E,EAAGmJ,EAAGuF,EACtB,EAgED8yB,EAAI8wC,wBAA0B,SAAStyE,EAAG61C,GAOxC,IAAI/xD,EAAS+xD,EAAU/xD,OAAS,EAG5B4+C,EAAOnF,EAAMqB,KAAKC,eAMtB,OALA6D,EAAK5D,QAAQ0C,EAAIkpC,cAAcO,oBAC/BvoC,EAAKqzC,SAASjyF,GAEd4+C,EAAK2G,SAASwM,EAAU/xD,QACxB4+C,EAAKK,SAAS8S,GACPnT,CACR,EASDlB,EAAIqvC,yBAA2B,SAAS7wE,GAEtC,IAAIs2E,EAAY/4C,EAAMqB,KAAKC,eAG3By3C,EAAUx3C,QAAQ,GAGlB,IAAIy3C,EAAMh5C,EAAMqB,KAAKC,eACrB,IAAI,IAAIjyC,KAAOoT,EAAEw2E,QAAQhgB,MAAO,CAC9B,IAAI1F,EAAO9wD,EAAEw2E,QAAQhgB,MAAM5pE,GACvB6pF,EAAKl5C,EAAMiP,IAAI8nB,wBAAwBxD,EAAKp1D,SAC5Cg7E,EAAan5C,EAAM2H,KAAKgE,MAAMutC,GAClCF,EAAIltC,SAASqtC,EAAW5yF,UACxByyF,EAAIntC,UAAUstC,EACf,CAKD,IAAI5yF,EACF,EAAIwyF,EAAUxyF,SACd,EAAIyyF,EAAIzyF,SAGN4+C,EAAOnF,EAAMqB,KAAKC,eAKtB,OAJA6D,EAAK5D,QAAQ0C,EAAIkpC,cAAcK,qBAC/BroC,EAAKqzC,SAASjyF,GACdolF,EAAYxmC,EAAM,EAAG4zC,GACrBpN,EAAYxmC,EAAM,EAAG6zC,GACd7zC,CACR,EASDlB,EAAIsvC,sBAAwB,SAAS9wE,GAEnC,IAAI0iC,EAAOnF,EAAMqB,KAAKC,eAGtB,OAFA6D,EAAK5D,QAAQ0C,EAAIkpC,cAAcM,mBAC/BtoC,EAAKqzC,SAAS,GACPrzC,CACR,EAgBDlB,EAAI8uC,uBAAyB,WAC3B,IAAI5tC,EAAOnF,EAAMqB,KAAKC,eAEtB,OADA6D,EAAK5D,QAAQ,GACN4D,CACR,EA6BDlB,EAAIkvC,eAAiB,SAAS1wE,GAE5B,IAAImJ,EAAIo0B,EAAMqB,KAAKC,eACnB11B,EAAEigC,UAAUppC,EAAEquE,QAAQ1oB,IAAIzhB,UAC1B/6B,EAAEigC,UAAUppC,EAAEquE,QAAQ/jB,KAAKpmB,UAG3B,IAAIvC,EAAU3hC,EAAE4hC,SAAWJ,EAAIK,cAAcF,OACzCD,EAAK1hC,EAAEquE,QAAQ3sC,GAGf/S,EAAQgT,EAAS,kBAAoB,kBACzCx4B,EAFUo/D,EAEF7mC,EAAGytC,cAAexgD,EAAOxlB,EAAE06B,WAHzB,IAMV,IAAInB,EAAOnF,EAAMqB,KAAKC,eAItB,OAHA6D,EAAK5D,QAAQ0C,EAAIkpC,cAAcS,UAC/BzoC,EAAKqzC,SAAS5sE,EAAErlB,UAChB4+C,EAAK0G,UAAUjgC,GACRu5B,CACR,EA6CDlB,EAAIkyC,gBAAkB,SAAS3tF,EAAMqR,EAASu/E,QAChB,IAAlBA,IACRA,EAAgBv/E,EAAQtT,QAG1B,IAAI4+C,EAAOnF,EAAMqB,KAAKC,eACtB6D,EAAK5D,QAAQ/4C,GACb28C,EAAK2G,SAASstC,GACdj0C,EAAKK,SAAS3rC,GAEd,IAAIw/E,EAAkBl0C,EAAK5+C,SACvB4/C,EAAgB3gD,KAAKq0B,IAAI,GAAIw/D,EAAkBD,EAAgB,GAEnE,OADAj0C,EAAKK,SAASxF,EAAMnvC,OAAOy1C,SAASH,IAC7BhB,CACR,EAQDlB,EAAIisC,MAAQ,SAASztE,EAAGhS,GAEtB,GAAIA,IAI4B,IAA7BA,EAAO80C,SAASh/C,UACdkK,EAAOjI,OAASy7C,EAAI4oC,YAAYG,WACjCv8E,EAAOjI,OAASy7C,EAAI4oC,YAAYE,OAChCt8E,EAAOjI,OAASy7C,EAAI4oC,YAAYC,oBAHpC,CAUA,GAAGr8E,EAAOjI,OAASy7C,EAAI4oC,YAAYG,UAAW,CAC5C,IAAIxlF,EAAQiJ,EAAO80C,SAAS/9C,QAC5Bib,EAAEquE,QAAQ1oB,IAAI93B,OAAO9oC,GACrBib,EAAEquE,QAAQ/jB,KAAKz8B,OAAO9oC,GACtBA,EAAQ,IACT,CAGD,IAAIoJ,EACJ,GAAGH,EAAO80C,SAASh/C,UAAY09C,EAAIgoC,YACjCr7E,EAAU,CAACH,OACN,CAELG,EAAU,GAEV,IADA,IAAInI,EAAOgI,EAAO80C,SAAS/9C,QACrBiB,EAAKlC,OAAS09C,EAAIgoC,aACtBr7E,EAAQ9I,KAAKm8C,EAAI4uC,aAAapwE,EAAG,CAC/Bja,KAAMiI,EAAOjI,KACbC,KAAMu3C,EAAMqB,KAAKC,aAAa74C,EAAK0I,MAAM,EAAG8yC,EAAIgoC,iBAElDxjF,EAAOA,EAAK0I,MAAM8yC,EAAIgoC,aAGrBxjF,EAAKlC,OAAS,GACfqK,EAAQ9I,KAAKm8C,EAAI4uC,aAAapwE,EAAG,CAC/Bja,KAAMiI,EAAOjI,KACbC,KAAMu3C,EAAMqB,KAAKC,aAAa74C,KAGnC,CAGD,IAAI,IAAI4C,EAAI,EAAGA,EAAIuF,EAAQrK,SAAWkc,EAAEsvE,OAAQ1mF,EAAG,CAEjD,IAAIiuF,EAAM1oF,EAAQvF,GACVoX,EAAExN,MAAMi+E,QAAQ16E,MACnB83B,OAAO7tB,EAAG62E,IAEb72E,EAAE7R,QAAQ9I,KAAKwxF,EAElB,CA3CA,CA4CF,EAUDr1C,EAAImsC,MAAQ,SAAS3tE,GACnB,IAAI,IAAIpX,EAAI,EAAGA,EAAIoX,EAAE7R,QAAQrK,SAAU8E,EAAG,CACxC,IAAIoF,EAASgS,EAAE7R,QAAQvF,GAGvBoX,EAAE82E,QAAQh4C,QAAQ9wC,EAAOjI,MACzBia,EAAE82E,QAAQh4C,QAAQ9wC,EAAOwG,QAAQ40E,OACjCppE,EAAE82E,QAAQh4C,QAAQ9wC,EAAOwG,QAAQyuC,OACjCjjC,EAAE82E,QAAQztC,SAASr7C,EAAO80C,SAASh/C,UACnCkc,EAAE82E,QAAQ1tC,UAAUppC,EAAE7R,QAAQvF,GAAGk6C,SAClC,CAED,OADA9iC,EAAE7R,QAAU,GACL6R,EAAE+2E,aAAa/2E,EACvB,EASD,IAAIg3E,EAAwB,SAASpgF,GACnC,OAAOA,GACP,KAAK,EACH,OAAO,EACT,KAAK2mC,EAAMiP,IAAIyqC,iBAAiBlL,gBAC9B,OAAOvqC,EAAI4pC,MAAMG,YAAYQ,gBAC/B,KAAKxuC,EAAMiP,IAAIyqC,iBAAiBjL,wBAC9B,OAAOxqC,EAAI4pC,MAAMG,YAAYS,wBAC/B,KAAKzuC,EAAMiP,IAAIyqC,iBAAiBhL,oBAC9B,OAAOzqC,EAAI4pC,MAAMG,YAAYU,oBAC/B,KAAK1uC,EAAMiP,IAAIyqC,iBAAiB/K,oBAC9B,OAAO1qC,EAAI4pC,MAAMG,YAAYW,oBAC/B,KAAK3uC,EAAMiP,IAAIyqC,iBAAiB9K,oBAC9B,OAAO3qC,EAAI4pC,MAAMG,YAAYY,oBAC/B,KAAK5uC,EAAMiP,IAAIyqC,iBAAiB5K,WAC9B,OAAO7qC,EAAI4pC,MAAMG,YAAYc,WAC/B,QACE,OAAO7qC,EAAI4pC,MAAMG,YAAYQ,gBAEhC,EAqqBD,IAAI,IAAIn/E,KA7nBR40C,EAAI6vC,uBAAyB,SAASrxE,EAAG6yD,GACvC,IAGE,IAAIv5D,EAAU,CAAC,EACf,IAAK,IAAI1M,KAAOoT,EAAEk3E,cAChB59E,EAAQ1M,GAAOoT,EAAEk3E,cAActqF,GAGjC0M,EAAQykB,OAAS,SAASo5D,EAAKptF,EAAO8oE,GAEzBmkB,EAAsBG,GAAjC,IAGI7jE,EAAMtT,EAAE+d,OAAO/d,EAAGm3E,EAAKptF,EAAO8oE,GAClC,IAAW,IAARv/C,EAAc,CACf,GAAkB,iBAARA,IAAqBiqB,EAAMqB,KAAK7yC,QAAQunB,GAAM,CAEtD,IAAI1c,EAAQ,IAAI7P,MAAM,6CAYtB,MAXA6P,EAAM2C,MAAO,EACb3C,EAAM0zE,MAAQ,CACZn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YAAa7rC,EAAI4pC,MAAMG,YAAYQ,iBAElCz4D,EAAIrtB,UACL2Q,EAAM3Q,QAAUqtB,EAAIrtB,SAEnBqtB,EAAIg3D,QACL1zE,EAAM0zE,MAAM+C,YAAc/5D,EAAIg3D,OAE1B1zE,CACP,CAGE0c,IAAQ6jE,IACT7jE,EAlEkB,SAAS8jE,GACnC,OAAOA,GACP,KAAK,EACH,OAAO,EACT,KAAK51C,EAAI4pC,MAAMG,YAAYQ,gBACzB,OAAOxuC,EAAMiP,IAAIyqC,iBAAiBlL,gBACpC,KAAKvqC,EAAI4pC,MAAMG,YAAYS,wBACzB,OAAOzuC,EAAMiP,IAAIyqC,iBAAiBjL,wBACpC,KAAKxqC,EAAI4pC,MAAMG,YAAYU,oBACzB,OAAO1uC,EAAMiP,IAAIyqC,iBAAiBhL,oBACpC,KAAKzqC,EAAI4pC,MAAMG,YAAYW,oBACzB,OAAO3uC,EAAMiP,IAAIyqC,iBAAiB/K,oBACpC,KAAK1qC,EAAI4pC,MAAMG,YAAYY,oBACzB,OAAO5uC,EAAMiP,IAAIyqC,iBAAiB9K,oBACpC,KAAK3qC,EAAI4pC,MAAMG,YAAYc,WACzB,OAAO9uC,EAAMiP,IAAIyqC,iBAAiB5K,WACpC,QACE,OAAO9uC,EAAMiP,IAAIyqC,iBAAiBlL,gBAErC,CA+CesL,CAAsB/jE,GAE/B,CAED,OAAOA,CACR,EAGDiqB,EAAMiP,IAAI6kC,uBAAuBrxE,EAAEw2E,QAAS3jB,EAAOv5D,EAyBpD,CAxBC,MAAMoO,GAEN,IAAI6C,EAAM7C,GACQ,iBAAR6C,GAAoBgzB,EAAMqB,KAAK7yC,QAAQwe,MAC/CA,EAAM,CACJhR,MAAM,EACN+wE,MAAO,CACLn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YAAa2J,EAAsBtvE,MAIpC,SAAU6C,IACbA,EAAIhR,MAAO,GAER,UAAWgR,IACdA,EAAI+/D,MAAQ,CACVn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YAAa2J,EAAsBzsE,EAAI3T,SAK3CoJ,EAAEpJ,MAAMoJ,EAAGuK,EACZ,CAED,OAAQvK,EAAEsvE,IACX,EAUD9tC,EAAI81C,mBAAqB,SAASj4E,EAAOk4E,GACvC,IAAI70C,EAAO,KAGX,GAAGrjC,GAASA,EAAMywE,YAAczwE,EAAMm4E,YAAcn4E,EAAMo4E,MACxD/0C,EAAOrjC,MACF,CAQL,IAAI,IAAIzS,KANR81C,EAAO,CAAC,GACHrjC,MAAQA,GAAS,CAAC,EACvBqjC,EAAK60C,SAAWx0F,KAAKq0B,IAAImgE,GAAY,IAAK,GAC1C70C,EAAK+0C,MAAQ,GAGEp4E,EACVqjC,EAAK+0C,MAAM3zF,QAAUyzF,EACtB70C,EAAK+0C,MAAMpyF,KAAKuH,UAETyS,EAAMzS,GAKjB81C,EAAKotC,WAAa,SAASP,GACzB,IAAIlB,EAAU,KACVzhF,EAAM,KAUV,GAPG2iF,EACD3iF,EAAM2wC,EAAMqB,KAAK8N,WAAW6iC,GACpB7sC,EAAK+0C,MAAM3zF,OAAS,IAE5B8I,EAAM81C,EAAK+0C,MAAM,IAGR,OAAR7qF,GAAgBA,KAAO81C,EAAKrjC,MAI7B,IAAI,IAAIzW,KAFRylF,EAAU3rC,EAAKrjC,MAAMzS,UACd81C,EAAKrjC,MAAMzS,GACL81C,EAAK+0C,MAChB,GAAG/0C,EAAK+0C,MAAM7uF,KAAOgE,EAAK,CACxB81C,EAAK+0C,MAAMx7E,OAAOrT,EAAG,GACrB,KACD,CAIL,OAAOylF,CACR,EAGD3rC,EAAK80C,WAAa,SAASjI,EAAWlB,GAEpC,GAAG3rC,EAAK+0C,MAAM3zF,SAAW4+C,EAAK60C,SAAU,CACtC,IAAI3qF,EAAM81C,EAAK+0C,MAAMphE,eACdqsB,EAAKrjC,MAAMzS,EACnB,CAEGA,EAAM2wC,EAAMqB,KAAK8N,WAAW6iC,GAChC7sC,EAAK+0C,MAAMpyF,KAAKuH,GAChB81C,EAAKrjC,MAAMzS,GAAOyhF,CACnB,CACF,CAED,OAAO3rC,CACR,EAWDlB,EAAIk2C,iBAAmB,SAASp+E,GAC9B,IAAIk9E,EAAU,KAIVA,EAHDl9E,EAAQk9E,QAENj5C,EAAMqB,KAAK7yC,QAAQuN,EAAQk9E,SAClBj5C,EAAMiP,IAAImrC,cAAcr+E,EAAQk9E,SAEhCl9E,EAAQk9E,QAIVj5C,EAAMiP,IAAImrC,gBAItB,IAAIpC,EAAej8E,EAAQi8E,cAAgB,KAC3C,GAAoB,OAAjBA,EAED,IAAI,IAAI3oF,KADR2oF,EAAe,GACA/zC,EAAI4C,aACjBmxC,EAAalwF,KAAKm8C,EAAI4C,aAAax3C,IAKvC,IAAIg1C,EAAUtoC,EAAQmwE,OACpBjoC,EAAIK,cAAc4nC,OAASjoC,EAAIK,cAAcF,OAG3CkuC,EAAev2E,EAAQu2E,aACzBruC,EAAI81C,mBAAmBh+E,EAAQu2E,cAAgB,KAG7C7vE,EAAI,CACNxL,QAAS,CAAC40E,MAAO5nC,EAAI+nC,QAAQH,MAAOnmC,MAAOzB,EAAI+nC,QAAQtmC,OACvDrB,OAAQA,EACR2tC,UAAWj2E,EAAQi2E,UACnBiH,QAASA,EACT3G,aAAcA,EACd0F,aAAcA,EACdtC,UAAW35E,EAAQ25E,UACnB0C,YAAar8E,EAAQq8E,aAAe,KACpC1F,aAAc32E,EAAQ22E,eAAgB,EACtClyD,OAAQzkB,EAAQykB,QAAU,SAAS65D,EAAIT,EAAKU,EAAMC,GAAM,OAAOX,CAAK,EACpED,cAAe59E,EAAQ49E,eAAiB,CAAC,EACzCjB,eAAgB38E,EAAQ28E,gBAAkB,KAC1CvE,cAAep4E,EAAQo4E,eAAiB,KACxC2E,aAAc/8E,EAAQ+8E,cAAgB,KACtCviF,MAAOypC,EAAMqB,KAAKC,eAClBi4C,QAASv5C,EAAMqB,KAAKC,eACpB74C,KAAMu3C,EAAMqB,KAAKC,eACjBk4C,aAAcz9E,EAAQy9E,aACtBvD,UAAWl6E,EAAQk6E,UACnBI,kBAAmBt6E,EAAQs6E,kBAC3BmE,OAAQz+E,EAAQy+E,OAChBnhF,MAAO,SAASoJ,EAAG0H,GAEjBA,EAAGyrE,OAASzrE,EAAGyrE,SACXnzE,EAAE4hC,SAAWJ,EAAIK,cAAcF,OAAU,SAAW,UAGrDj6B,EAAGnO,OACJioC,EAAIisC,MAAMztE,EAAGwhC,EAAIksC,YAAY1tE,EAAG0H,EAAG4iE,QACnC9oC,EAAImsC,MAAM3tE,IAIZ,IAAIsrE,GAAsB,IAAb5jE,EAAG4jE,MACbA,IAEDtrE,EAAEsvE,MAAO,GAIXh2E,EAAQ1C,MAAMoJ,EAAG0H,GAEd4jE,GAEDtrE,EAAEuD,OAAM,EAEX,EACDulE,QAASxvE,EAAQwvE,SAAW,KAC5BC,QAASzvE,EAAQyvE,SAAW,KAQ9B/oE,MAAU,SAASg4E,GACjBh4E,EAAExL,QAAU,CAAC40E,MAAO5nC,EAAI+nC,QAAQH,MAAOnmC,MAAOzB,EAAI+nC,QAAQtmC,OAC1DjjC,EAAEhS,OAAS,KACXgS,EAAEquE,QAAU,KACZruE,EAAE+yE,gBAAkB,KACpB/yE,EAAExN,MAAQ,CACR+9E,QAAS,KACTE,QAAS,MAEXzwE,EAAEwvE,QAAUxvE,EAAE4hC,OAAWJ,EAAIK,cAAcF,OAhkDrC,GAikDN3hC,EAAEqzE,WAAa,KACfrzE,EAAE7R,QAAU,GACZ6R,EAAEU,MAAO,EACTV,EAAEwtE,WAAa,EACfxtE,EAAEutE,aAAc,EAChBvtE,EAAEgzE,aAAc,EAChBhzE,EAAEsvE,OAAS0I,QAAmC,IAAfA,GAC/Bh4E,EAAElM,MAAMk7C,QACRhvC,EAAE82E,QAAQ9nC,QACVhvC,EAAEha,KAAKgpD,QACPhvC,EAAExN,MAAMi+E,QAAUjvC,EAAIgvC,sBAAsBxwE,EAC7C,GAGDA,EAAE0vB,QAwWF,OA7NA1vB,EAAEuqE,UAAY,SAASgF,GAErB,GAAGvvE,EAAE4hC,SAAWJ,EAAIK,cAAcF,OAEhC3hC,EAAEpJ,MAAMoJ,EAAG,CACT/Z,QAAS,yCACTqlF,OAAO,SAEJ,GAAGtrE,EAAEutE,YAEVvtE,EAAEpJ,MAAMoJ,EAAG,CACT/Z,QAAS,iCACTqlF,OAAO,QAEJ,CAEFtrE,EAAEsvE,OAAStvE,EAAEU,MAAyB,IAAjBV,EAAEwtE,aACxBxtE,EAAEsvE,MAAO,GAIXtvE,EAAEutE,aAAc,EAMhB,IAAIc,EAAU,MAHdkB,EAAYA,GAAa,IAIZzrF,OAAS,IACjBkc,EAAE6vE,eACHxB,EAAUruE,EAAE6vE,aAAaC,WAAWP,IAIvB,OAAZlB,IACDkB,EAAY,KAKQ,IAArBA,EAAUzrF,QAAgBkc,EAAE6vE,cAEd,QADfxB,EAAUruE,EAAE6vE,aAAaC,gBAEvBP,EAAYlB,EAAQ99D,IAKxBvQ,EAAEquE,QAAU,CACV99D,GAAIg/D,EACJ/6E,QAAS,KACTg6E,YAAa,KACbC,kBAAmB,KACnB0C,kBAAmB,KACnBY,mBAAoB,KACpBX,kBAAmB,KACnB1vC,GAAI,CAAC,EACLikB,IAAKpoB,EAAMoW,GAAGgS,IAAIt/D,SAClBikE,KAAM/sB,EAAMoW,GAAG2W,KAAKjkE,UAInBgoF,IAEDruE,EAAExL,QAAU65E,EAAQ75E,QACpBwL,EAAEquE,QAAQ3sC,GAAK2sC,EAAQ3sC,IAIzB1hC,EAAEquE,QAAQ3sC,GAAGmtC,cAAgBrtC,EAAIutC,eAAelrC,WAGhD7jC,EAAEU,MAAO,EAGT8gC,EAAIisC,MAAMztE,EAAGwhC,EAAI4uC,aAAapwE,EAAG,CAC/Bja,KAAMy7C,EAAI4oC,YAAYG,UACtBvkF,KAAMw7C,EAAI8zC,kBAAkBt1E,MAE9BwhC,EAAImsC,MAAM3tE,EACX,CACF,EAWDA,EAAEzc,QAAU,SAASyC,GACnB,IAAI08C,EAAO,EAgCX,OA7BG18C,GACDga,EAAElM,MAAMivC,SAAS/8C,GAKfga,EAAEsvE,OAEY,OAAbtvE,EAAEhS,QACHgS,EAAEhS,OAAOiqF,OAASj4E,EAAEhS,OAAO80C,SAASo1C,YACpCl4E,EAAEhS,OAAS,MAIG,OAAbgS,EAAEhS,SACH00C,EA7NkB,SAAS1iC,GAC/B,IAAI0iC,EAAO,EAGPv5B,EAAInJ,EAAElM,MACNi6B,EAAM5kB,EAAErlB,SAGZ,GAAGiqC,EAAM,EACP2U,EAAO,EAAI3U,MACN,CAGL/tB,EAAEhS,OAAS,CACTjI,KAAMojB,EAAE++B,UACR1zC,QAAS,CACP40E,MAAOjgE,EAAE++B,UACTjF,MAAO95B,EAAE++B,WAEXpkD,OAAQqlB,EAAE3V,WACVsvC,SAAUvF,EAAMqB,KAAKC,eACrBo5C,OAAO,GAIT,IAAIE,EAAqBn4E,EAAEhS,OAAOwG,QAAQ40E,QAAUppE,EAAExL,QAAQ40E,MAC3D+O,GAAqBn4E,EAAEquE,SAAWruE,EAAEquE,QAAQ75E,UAE7C2jF,EAAqBn4E,EAAEhS,OAAOwG,QAAQyuC,QAAUjjC,EAAExL,QAAQyuC,OAExDk1C,GACFn4E,EAAEpJ,MAAMoJ,EAAG,CACT/Z,QAAS,4BACTsT,MAAM,EACN+wE,MAAO,CACLn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YAAa7rC,EAAI4pC,MAAMG,YAAYmB,mBAI1C,CAED,OAAOhqC,CACR,CAkLY01C,CAAkBp4E,IAIvBA,EAAEsvE,MAAqB,OAAbtvE,EAAEhS,QAAoBgS,EAAEhS,OAAOiqF,QAC3Cv1C,EA5KY,SAAS1iC,GACzB,IAAI0iC,EAAO,EAGPv5B,EAAInJ,EAAElM,MACNi6B,EAAM5kB,EAAErlB,SAyCZ,OAxCGiqC,EAAM/tB,EAAEhS,OAAOlK,OAEhB4+C,EAAO1iC,EAAEhS,OAAOlK,OAASiqC,GAIzB/tB,EAAEhS,OAAO80C,SAASC,SAAS55B,EAAE06B,SAAS7jC,EAAEhS,OAAOlK,SAC/CqlB,EAAEwkC,UAGM3tC,EAAExN,MAAMi+E,QAAQ/8D,KACnBma,OAAO7tB,EAAGA,EAAEhS,UAGK,OAAjBgS,EAAEqzE,aAGArzE,EAAEqzE,WAAWttF,OAASia,EAAEhS,OAAOjI,MAEhCia,EAAEqzE,WAAWvwC,SAASsG,UAAUppC,EAAEhS,OAAO80C,UACzC9iC,EAAEhS,OAASgS,EAAEqzE,YAGbrzE,EAAEpJ,MAAMoJ,EAAG,CACT/Z,QAAS,6BACTsT,MAAM,EACN+wE,MAAO,CACLn+B,MAAO3K,EAAI4pC,MAAMC,MAAMC,MACvB+B,YACE7rC,EAAI4pC,MAAMG,YAAYE,uBAOhCzrE,EAAEhS,OAAOiqF,OAAQ,IAIdv1C,CACR,CA6HY21C,CAAYr4E,KAIjBA,EAAEsvE,MAAqB,OAAbtvE,EAAEhS,QAAmBgS,EAAEhS,OAAOiqF,OA3PlC,SAASj4E,EAAGhS,GAExB,IAAIsqF,EAAUtqF,EAAOjI,KAAOy7C,EAAI4oC,YAAYC,mBACxC77D,EAAW2lE,EAAQn0E,EAAE4hC,QAAQ5hC,EAAEwvE,QAChC8I,KAAW9pE,EACZA,EAAS8pE,GAASt4E,EAAGhS,GAGrBwzC,EAAI4rC,iBAAiBptE,EAAGhS,EAE3B,CAkPK44D,CAAQ5mD,EAAGA,EAAEhS,SAIV00C,CACR,EAaD1iC,EAAEu4E,QAAU,SAASvyF,GAKnB,OAJAw7C,EAAIisC,MAAMztE,EAAGwhC,EAAI4uC,aAAapwE,EAAG,CAC/Bja,KAAMy7C,EAAI4oC,YAAYI,iBACtBxkF,KAAMu3C,EAAMqB,KAAKC,aAAa74C,MAEzBw7C,EAAImsC,MAAM3tE,EAClB,EAiBDA,EAAEw4E,wBAA0B,SAASphF,EAASu/E,GAa5C,OAZGv/E,aAAmBmmC,EAAMqB,KAAK2C,aAC/BnqC,EAAUA,EAAQrS,cAEQ,IAAlB4xF,IACRA,EAAgBv/E,EAAQtT,QAE1Bkc,EAAE2zE,yBAA2Bv8E,EAC7BoqC,EAAIisC,MAAMztE,EAAGwhC,EAAI4uC,aAAapwE,EAAG,CAC/Bja,KAAMy7C,EAAI4oC,YAAYK,UACtBzkF,KAAMw7C,EAAIkyC,gBACRlyC,EAAIurC,qBAAqBC,kBAAmB51E,EAASu/E,MAElDn1C,EAAImsC,MAAM3tE,EAClB,EAODA,EAAEuD,MAAQ,SAASy0E,GAEjB,IAAIh4E,EAAEsvE,MAAQtvE,EAAE6vE,cAAgB7vE,EAAEquE,QAAS,CAEzC,IAAIA,EAAU,CACZ99D,GAAIvQ,EAAEquE,QAAQ99D,GACd/b,QAASwL,EAAEquE,QAAQ75E,QACnBktC,GAAI1hC,EAAEquE,QAAQ3sC,IAEhB2sC,EAAQ3sC,GAAGl1C,KAAO,KAClBwT,EAAE6vE,aAAa2H,WAAWnJ,EAAQ99D,GAAI89D,EACvC,CAEEruE,EAAEU,OAEHV,EAAEU,MAAO,EACTV,EAAElM,MAAMk7C,SAGLhvC,EAAEgzE,aAAehzE,EAAEutE,eACpBvtE,EAAEgzE,YAAchzE,EAAEutE,aAAc,EAGhC/rC,EAAIisC,MAAMztE,EAAGwhC,EAAIksC,YAAY1tE,EAAG,CAC9BmsC,MAAO3K,EAAI4pC,MAAMC,MAAMp6D,QACvBo8D,YAAa7rC,EAAI4pC,MAAMG,YAAYC,gBAErChqC,EAAImsC,MAAM3tE,IAIZA,EAAE+3E,OAAO/3E,IAIXA,EAAE0vB,MAAMsoD,EACT,EAEMh4E,CACR,EAGDwT,EAAOiE,QAAU8lB,EAAMiE,IAAMjE,EAAMiE,KAAO,CAAC,EAG5BA,EACU,mBAAbA,EAAI50C,KACZ2wC,EAAMiE,IAAI50C,GAAO40C,EAAI50C,IAKzB2wC,EAAMiE,IAAIi3C,SAAWlQ,EAGrBhrC,EAAMiE,IAAIiB,UA3tHM,SAAS71C,EAAK8rF,EAAQ1qF,GASpC,IAAIi2C,EAAO1G,EAAM0G,KAAK59C,SACtB49C,EAAKh4B,MAAM,OAAQrf,GACnB,IAAIuc,EAAIo0B,EAAMqB,KAAKC,eASnB,OARA11B,EAAEqlC,SAASkqC,EAAO,IAClBvvE,EAAEqlC,SAASkqC,EAAO,IAClBvvE,EAAE21B,QAAQ9wC,EAAOjI,MACjBojB,EAAE21B,QAAQ9wC,EAAOwG,QAAQ40E,OACzBjgE,EAAE21B,QAAQ9wC,EAAOwG,QAAQyuC,OACzB95B,EAAEkgC,SAASr7C,EAAOlK,QAClBqlB,EAAE45B,SAAS/0C,EAAO80C,SAAS/9C,SAC3Bk/C,EAAKpW,OAAO1kB,EAAE06B,YACPI,EAAKC,SAASL,UACtB,EAysHDtG,EAAMiE,IAAI81C,mBAAqB91C,EAAI81C,mBAuGnC/5C,EAAMiE,IAAIk2C,iBAAmBl2C,EAAIk2C,iDClrI7Bn6C,EAAQrqB,EAAQ,OAChBylE,EAAQzlE,EAAQ,OAGhB0rB,EAAOprB,EAAOiE,QAAU8lB,EAAMqB,KAAOrB,EAAMqB,MAAQ,CAAC,EA0IxD,SAASg6C,EAAgBv5D,GACvB,GAAW,IAANA,GAAiB,KAANA,GAAkB,KAANA,GAAkB,KAANA,EACtC,MAAM,IAAIt4B,MAAM,yCAA2Cs4B,EAE9D,CAaD,SAASw5D,EAAiB1vE,GAQxB,GAJArU,KAAK9O,KAAO,GAEZ8O,KAAK4e,KAAO,EAEI,iBAANvK,EACRrU,KAAK9O,KAAOmjB,OACP,GAAGy1B,EAAKnkC,cAAc0O,IAAMy1B,EAAKk6C,kBAAkB3vE,GACxD,GAAqB,oBAAXsS,QAA0BtS,aAAasS,OAC/C3mB,KAAK9O,KAAOmjB,EAAEjd,SAAS,cAClB,CAGL,IAAIkvB,EAAM,IAAI5zB,WAAW2hB,GACzB,IACErU,KAAK9O,KAAOP,OAAOC,aAAaC,MAAM,KAAMy1B,EAK7C,CAJC,MAAMnsB,GACN,IAAI,IAAIrG,EAAI,EAAGA,EAAIwyB,EAAIt3B,SAAU8E,EAC/BkM,KAAKgqC,QAAQ1jB,EAAIxyB,GAEpB,CACF,MACOugB,aAAa0vE,GACP,iBAAN1vE,GAAoC,iBAAXA,EAAEnjB,MACjB,iBAAXmjB,EAAEuK,QAET5e,KAAK9O,KAAOmjB,EAAEnjB,KACd8O,KAAK4e,KAAOvK,EAAEuK,MAIhB5e,KAAKikF,yBAA2B,CACjC,EA3LD,WAIE,QAAsB,IAAZx1F,GAA2BA,EAAQ44E,WAAa54E,EAAQy1F,QAShE,OARAp6C,EAAKu9B,SAAW54E,EAAQ44E,cACG,mBAAjBjQ,aACRttB,EAAKstB,aAAeA,aAIpBttB,EAAKstB,aAAettB,EAAKu9B,UAM7B,GAA2B,mBAAjBjQ,aAKR,OAJAttB,EAAKstB,aAAe,WAAa,OAAOA,aAAavmE,WAAMvB,EAAW2S,UAAa,OACnF6nC,EAAKu9B,SAAW,SAASztD,GACvB,OAAOw9C,aAAax9C,EACrB,GAeH,GALAkwB,EAAKstB,aAAe,SAASx9C,GAC3BvP,WAAWuP,EAAU,EACtB,EAGoB,oBAAX1U,QACsB,mBAAvBA,OAAO+/D,YAA4B,CAC1C,IAAIp9D,EAAM,qBACNsT,EAAY,GAChB2uB,EAAKstB,aAAe,SAASx9C,GAC3BuB,EAAU5qB,KAAKqpB,GAGS,IAArBuB,EAAUnsB,QACXkW,OAAO+/D,YAAYp9D,EAAK,IAE3B,EAWD3C,OAAOqS,iBAAiB,WAVxB,SAAiBnI,GACf,GAAGA,EAAM+0E,SAAWj/E,QAAUkK,EAAMle,OAAS2W,EAAK,CAChDuH,EAAMg1E,kBACN,IAAIvxC,EAAO13B,EAAUvhB,QACrBuhB,EAAUnsB,OAAS,EACnB6jD,EAAKjtC,SAAQ,SAASgU,GACpBA,GACD,GACF,CACF,IAC2C,EAC7C,CAGD,GAA+B,oBAArByqE,iBAAkC,CAE1C,IAAI/2E,EAAM9a,KAAK8a,MACXyyD,GAAO,EACPukB,EAAMn/E,SAASiO,cAAc,OAC7B+H,EAAY,GAChB,IAAIkpE,kBAAiB,WACnB,IAAIxxC,EAAO13B,EAAUvhB,QACrBuhB,EAAUnsB,OAAS,EACnB6jD,EAAKjtC,SAAQ,SAASgU,GACpBA,GACD,GACF,IAAE2qE,QAAQD,EAAK,CAAC7gD,YAAY,IAC7B,IAAI+gD,EAAkB16C,EAAKstB,aAC3BttB,EAAKstB,aAAe,SAASx9C,GACxBpnB,KAAK8a,MAAQA,EAAM,IACpBA,EAAM9a,KAAK8a,MACXk3E,EAAgB5qE,KAEhBuB,EAAU5qB,KAAKqpB,GAGS,IAArBuB,EAAUnsB,QACXs1F,EAAIG,aAAa,IAAK1kB,GAAQA,GAGnC,CACF,CAEDj2B,EAAKu9B,SAAWv9B,EAAKstB,YA3FvB,IA+FAttB,EAAK6sB,cACgB,IAAZloE,GAA2BA,EAAQoa,UAAYpa,EAAQoa,SAASC,KAOzEghC,EAAK88B,YACA98B,EAAK6sB,SACCltD,EAAAA,EAGc,oBAATpE,KAAuBH,OAASG,KAIhDykC,EAAK7yC,QAAUD,MAAMC,SAAW,SAAS+qB,GACvC,MAA6C,mBAAtC1wB,OAAOG,UAAU2F,SAASyC,KAAKmoB,EACvC,EAGD8nB,EAAKnkC,cAAgB,SAASqc,GAC5B,MAA8B,oBAAhB7tB,aAA+B6tB,aAAa7tB,WAC3D,EAGD21C,EAAKk6C,kBAAoB,SAAShiE,GAChC,OAAOA,GAAK8nB,EAAKnkC,cAAcqc,EAAEpvB,cAA4BtD,IAAjB0yB,EAAE/yB,UAC/C,EAkBD66C,EAAK2C,WAAas3C,EA8ClBj6C,EAAKi6C,iBAAmBA,EAaxBj6C,EAAKi6C,iBAAiBtyF,UAAUizF,2BAA6B,SAAS1iE,GACpEhiB,KAAKikF,0BAA4BjiE,EAC9BhiB,KAAKikF,yBAH2B,OAKjCjkF,KAAK9O,KAAK4U,OAAO,EAAG,GACpB9F,KAAKikF,yBAA2B,EAEnC,EAODn6C,EAAKi6C,iBAAiBtyF,UAAUzC,OAAS,WACvC,OAAOgR,KAAK9O,KAAKlC,OAASgR,KAAK4e,IAChC,EAODkrB,EAAKi6C,iBAAiBtyF,UAAU2xF,QAAU,WACxC,OAAOpjF,KAAKhR,UAAY,CACzB,EASD86C,EAAKi6C,iBAAiBtyF,UAAUu4C,QAAU,SAAS31B,GACjD,OAAOrU,KAAKiuC,SAASt9C,OAAOC,aAAayjB,GAC1C,EAUDy1B,EAAKi6C,iBAAiBtyF,UAAUi9C,aAAe,SAASr6B,EAAGkW,GACzDlW,EAAI1jB,OAAOC,aAAayjB,GAExB,IADA,IAAI+X,EAAIpsB,KAAK9O,KACPq5B,EAAI,GACD,EAAJA,IACD6B,GAAK/X,IAEPkW,KAAO,GACA,IACLlW,GAAKA,GAKT,OAFArU,KAAK9O,KAAOk7B,EACZpsB,KAAK0kF,2BAA2Bn6D,GACzBvqB,IACR,EASD8pC,EAAKi6C,iBAAiBtyF,UAAUw8C,SAAW,SAASh+C,GAGlD,OAFA+P,KAAK9O,MAAQjB,EACb+P,KAAK0kF,2BAA2Bz0F,EAAMjB,QAC/BgR,IACR,EASD8pC,EAAKi6C,iBAAiBtyF,UAAU+gF,UAAY,SAAS1jF,GACnD,OAAOkR,KAAKiuC,SAASnE,EAAKpjB,WAAW53B,GACtC,EASDg7C,EAAKi6C,iBAAiBtyF,UAAU8iD,SAAW,SAASzgD,GAClD,OAAOkM,KAAKiuC,SACVt9C,OAAOC,aAAakD,GAAK,EAAI,KAC7BnD,OAAOC,aAAiB,IAAJkD,GACvB,EASDg2C,EAAKi6C,iBAAiBtyF,UAAUwvF,SAAW,SAASntF,GAClD,OAAOkM,KAAKiuC,SACVt9C,OAAOC,aAAakD,GAAK,GAAK,KAC9BnD,OAAOC,aAAakD,GAAK,EAAI,KAC7BnD,OAAOC,aAAiB,IAAJkD,GACvB,EASDg2C,EAAKi6C,iBAAiBtyF,UAAUioD,SAAW,SAAS5lD,GAClD,OAAOkM,KAAKiuC,SACVt9C,OAAOC,aAAakD,GAAK,GAAK,KAC9BnD,OAAOC,aAAakD,GAAK,GAAK,KAC9BnD,OAAOC,aAAakD,GAAK,EAAI,KAC7BnD,OAAOC,aAAiB,IAAJkD,GACvB,EASDg2C,EAAKi6C,iBAAiBtyF,UAAU84E,WAAa,SAASz2E,GACpD,OAAOkM,KAAKiuC,SACVt9C,OAAOC,aAAiB,IAAJkD,GACpBnD,OAAOC,aAAakD,GAAK,EAAI,KAChC,EASDg2C,EAAKi6C,iBAAiBtyF,UAAUkzF,WAAa,SAAS7wF,GACpD,OAAOkM,KAAKiuC,SACVt9C,OAAOC,aAAiB,IAAJkD,GACpBnD,OAAOC,aAAakD,GAAK,EAAI,KAC7BnD,OAAOC,aAAakD,GAAK,GAAK,KACjC,EASDg2C,EAAKi6C,iBAAiBtyF,UAAUugE,WAAa,SAASl+D,GACpD,OAAOkM,KAAKiuC,SACVt9C,OAAOC,aAAiB,IAAJkD,GACpBnD,OAAOC,aAAakD,GAAK,EAAI,KAC7BnD,OAAOC,aAAakD,GAAK,GAAK,KAC9BnD,OAAOC,aAAakD,GAAK,GAAK,KACjC,EAUDg2C,EAAKi6C,iBAAiBtyF,UAAU4iF,OAAS,SAASvgF,EAAGy2B,GACnDu5D,EAAgBv5D,GAChB,IAAIt6B,EAAQ,GACZ,GACEs6B,GAAK,EACLt6B,GAASU,OAAOC,aAAckD,GAAKy2B,EAAK,WAClCA,EAAI,GACZ,OAAOvqB,KAAKiuC,SAASh+C,EACtB,EAWD65C,EAAKi6C,iBAAiBtyF,UAAUklD,aAAe,SAAS7iD,EAAGy2B,GAKzD,OAHGz2B,EAAI,IACLA,GAAK,GAAMy2B,EAAI,GAEVvqB,KAAKq0E,OAAOvgF,EAAGy2B,EACvB,EASDuf,EAAKi6C,iBAAiBtyF,UAAU6iD,UAAY,SAAS1hD,GACnD,OAAOoN,KAAKiuC,SAASr7C,EAAOm8C,WAC7B,EAODjF,EAAKi6C,iBAAiBtyF,UAAU2hD,QAAU,WACxC,OAAOpzC,KAAK9O,KAAK/B,WAAW6Q,KAAK4e,OAClC,EAQDkrB,EAAKi6C,iBAAiBtyF,UAAUiN,SAAW,WACzC,IAAIkvC,EACF5tC,KAAK9O,KAAK/B,WAAW6Q,KAAK4e,OAAS,EACnC5e,KAAK9O,KAAK/B,WAAW6Q,KAAK4e,KAAO,GAEnC,OADA5e,KAAK4e,MAAQ,EACNgvB,CACR,EAQD9D,EAAKi6C,iBAAiBtyF,UAAU0iF,SAAW,WACzC,IAAIvmC,EACF5tC,KAAK9O,KAAK/B,WAAW6Q,KAAK4e,OAAS,GACnC5e,KAAK9O,KAAK/B,WAAW6Q,KAAK4e,KAAO,IAAM,EACvC5e,KAAK9O,KAAK/B,WAAW6Q,KAAK4e,KAAO,GAEnC,OADA5e,KAAK4e,MAAQ,EACNgvB,CACR,EAQD9D,EAAKi6C,iBAAiBtyF,UAAUnD,SAAW,WACzC,IAAIs/C,EACF5tC,KAAK9O,KAAK/B,WAAW6Q,KAAK4e,OAAS,GACnC5e,KAAK9O,KAAK/B,WAAW6Q,KAAK4e,KAAO,IAAM,GACvC5e,KAAK9O,KAAK/B,WAAW6Q,KAAK4e,KAAO,IAAM,EACvC5e,KAAK9O,KAAK/B,WAAW6Q,KAAK4e,KAAO,GAEnC,OADA5e,KAAK4e,MAAQ,EACNgvB,CACR,EAQD9D,EAAKi6C,iBAAiBtyF,UAAU04E,WAAa,WAC3C,IAAIv8B,EACF5tC,KAAK9O,KAAK/B,WAAW6Q,KAAK4e,MAC1B5e,KAAK9O,KAAK/B,WAAW6Q,KAAK4e,KAAO,IAAM,EAEzC,OADA5e,KAAK4e,MAAQ,EACNgvB,CACR,EAQD9D,EAAKi6C,iBAAiBtyF,UAAUmzF,WAAa,WAC3C,IAAIh3C,EACF5tC,KAAK9O,KAAK/B,WAAW6Q,KAAK4e,MAC1B5e,KAAK9O,KAAK/B,WAAW6Q,KAAK4e,KAAO,IAAM,EACvC5e,KAAK9O,KAAK/B,WAAW6Q,KAAK4e,KAAO,IAAM,GAEzC,OADA5e,KAAK4e,MAAQ,EACNgvB,CACR,EAQD9D,EAAKi6C,iBAAiBtyF,UAAUygE,WAAa,WAC3C,IAAItkB,EACF5tC,KAAK9O,KAAK/B,WAAW6Q,KAAK4e,MAC1B5e,KAAK9O,KAAK/B,WAAW6Q,KAAK4e,KAAO,IAAM,EACvC5e,KAAK9O,KAAK/B,WAAW6Q,KAAK4e,KAAO,IAAM,GACvC5e,KAAK9O,KAAK/B,WAAW6Q,KAAK4e,KAAO,IAAM,GAEzC,OADA5e,KAAK4e,MAAQ,EACNgvB,CACR,EAUD9D,EAAKi6C,iBAAiBtyF,UAAU4hD,OAAS,SAAS9oB,GAChDu5D,EAAgBv5D,GAChB,IAAIqjB,EAAO,EACX,GAEEA,GAAQA,GAAQ,GAAK5tC,KAAK9O,KAAK/B,WAAW6Q,KAAK4e,QAC/C2L,GAAK,QACCA,EAAI,GACZ,OAAOqjB,CACR,EAUD9D,EAAKi6C,iBAAiBtyF,UAAUqlD,aAAe,SAASvsB,GAEtD,IAAIvI,EAAIhiB,KAAKqzC,OAAO9oB,GAChBjI,EAAM,GAAMiI,EAAI,EAIpB,OAHGvI,GAAKM,IACNN,GAAKM,GAAO,GAEPN,CACR,EAWD8nB,EAAKi6C,iBAAiBtyF,UAAUs9C,SAAW,SAASp3C,GAClD,IAAIi2C,EAaJ,OAZGj2C,GAEDA,EAAQ1J,KAAKoR,IAAIW,KAAKhR,SAAU2I,GAChCi2C,EAAO5tC,KAAK9O,KAAK0I,MAAMoG,KAAK4e,KAAM5e,KAAK4e,KAAOjnB,GAC9CqI,KAAK4e,MAAQjnB,GACK,IAAVA,EACRi2C,EAAO,IAGPA,EAAsB,IAAd5tC,KAAK4e,KAAc5e,KAAK9O,KAAO8O,KAAK9O,KAAK0I,MAAMoG,KAAK4e,MAC5D5e,KAAKk6C,SAEAtM,CACR,EAUD9D,EAAKi6C,iBAAiBtyF,UAAUxB,MAAQ,SAAS0H,GAC/C,YAA0B,IAAXA,EACbqI,KAAK9O,KAAK0I,MAAMoG,KAAK4e,MACrB5e,KAAK9O,KAAK0I,MAAMoG,KAAK4e,KAAM5e,KAAK4e,KAAOjnB,EAC1C,EASDmyC,EAAKi6C,iBAAiBtyF,UAAUq9C,GAAK,SAASh7C,GAC5C,OAAOkM,KAAK9O,KAAK/B,WAAW6Q,KAAK4e,KAAO9qB,EACzC,EAUDg2C,EAAKi6C,iBAAiBtyF,UAAUukE,MAAQ,SAASliE,EAAGugB,GAIlD,OAHArU,KAAK9O,KAAO8O,KAAK9O,KAAK4U,OAAO,EAAG9F,KAAK4e,KAAO9qB,GAC1CnD,OAAOC,aAAayjB,GACpBrU,KAAK9O,KAAK4U,OAAO9F,KAAK4e,KAAO9qB,EAAI,GAC5BkM,IACR,EAOD8pC,EAAKi6C,iBAAiBtyF,UAAUo9C,KAAO,WACrC,OAAO7uC,KAAK9O,KAAK/B,WAAW6Q,KAAK9O,KAAKlC,OAAS,EAChD,EAOD86C,EAAKi6C,iBAAiBtyF,UAAUohD,KAAO,WACrC,IAAI3nC,EAAI4+B,EAAKC,aAAa/pC,KAAK9O,MAE/B,OADAga,EAAE0T,KAAO5e,KAAK4e,KACP1T,CACR,EAOD4+B,EAAKi6C,iBAAiBtyF,UAAUonD,QAAU,WAKxC,OAJG74C,KAAK4e,KAAO,IACb5e,KAAK9O,KAAO8O,KAAK9O,KAAK0I,MAAMoG,KAAK4e,MACjC5e,KAAK4e,KAAO,GAEP5e,IACR,EAOD8pC,EAAKi6C,iBAAiBtyF,UAAUyoD,MAAQ,WAGtC,OAFAl6C,KAAK9O,KAAO,GACZ8O,KAAK4e,KAAO,EACL5e,IACR,EASD8pC,EAAKi6C,iBAAiBtyF,UAAUm5B,SAAW,SAASjzB,GAClD,IAAIshC,EAAMhrC,KAAKq0B,IAAI,EAAGtiB,KAAKhR,SAAW2I,GAGtC,OAFAqI,KAAK9O,KAAO8O,KAAK9O,KAAK4U,OAAO9F,KAAK4e,KAAMqa,GACxCj5B,KAAK4e,KAAO,EACL5e,IACR,EAOD8pC,EAAKi6C,iBAAiBtyF,UAAUytE,MAAQ,WAEtC,IADA,IAAItxB,EAAO,GACH95C,EAAIkM,KAAK4e,KAAM9qB,EAAIkM,KAAK9O,KAAKlC,SAAU8E,EAAG,CAChD,IAAIugB,EAAIrU,KAAK9O,KAAK/B,WAAW2E,GAC1BugB,EAAI,KACLu5B,GAAQ,KAEVA,GAAQv5B,EAAEjd,SAAS,GACpB,CACD,OAAOw2C,CACR,EAOD9D,EAAKi6C,iBAAiBtyF,UAAU2F,SAAW,WACzC,OAAO0yC,EAAK+N,WAAW73C,KAAK/P,QAC7B,EAuED65C,EAAK+6C,WArCL,SAAoBxwE,EAAG7P,GAErBA,EAAUA,GAAW,CAAC,EAGtBxE,KAAK4e,KAAOpa,EAAQsgF,YAAc,EAClC9kF,KAAK+kF,SAAWvgF,EAAQugF,UAAY,KAEpC,IAAIp/E,EAAgBmkC,EAAKnkC,cAAc0O,GACnC2vE,EAAoBl6C,EAAKk6C,kBAAkB3vE,GAC/C,GAAG1O,GAAiBq+E,EAYlB,OATEhkF,KAAK9O,KADJyU,EACW,IAAIhT,SAAS0hB,GAKb,IAAI1hB,SAAS0hB,EAAEzhB,OAAQyhB,EAAElhB,WAAYkhB,EAAEplB,iBAErD+Q,KAAKiB,MAAS,gBAAiBuD,EAC7BA,EAAQwgF,YAAchlF,KAAK9O,KAAKjC,YAKpC+Q,KAAK9O,KAAO,IAAIyB,SAAS,IAAIwB,YAAY,IACzC6L,KAAKiB,MAAQ,EAEVoT,SACDrU,KAAKiuC,SAAS55B,GAGb,gBAAiB7P,IAClBxE,KAAKiB,MAAQuD,EAAQwgF,YAExB,EAQDl7C,EAAK+6C,WAAWpzF,UAAUzC,OAAS,WACjC,OAAOgR,KAAKiB,MAAQjB,KAAK4e,IAC1B,EAODkrB,EAAK+6C,WAAWpzF,UAAU2xF,QAAU,WAClC,OAAOpjF,KAAKhR,UAAY,CACzB,EAaD86C,EAAK+6C,WAAWpzF,UAAUwzF,YAAc,SAASC,EAAQH,GACvD,GAAG/kF,KAAKhR,UAAYk2F,EAClB,OAAOllF,KAET+kF,EAAW92F,KAAKq0B,IAAIyiE,GAAY/kF,KAAK+kF,SAAUG,GAG/C,IAAI7lE,EAAM,IAAI3sB,WACZsN,KAAK9O,KAAK0B,OAAQoN,KAAK9O,KAAKiC,WAAY6M,KAAK9O,KAAKjC,YAChDk2F,EAAM,IAAIzyF,WAAWsN,KAAKhR,SAAW+1F,GAIzC,OAHAI,EAAIr1F,IAAIuvB,GACRrf,KAAK9O,KAAO,IAAIyB,SAASwyF,EAAIvyF,QAEtBoN,IACR,EASD8pC,EAAK+6C,WAAWpzF,UAAUu4C,QAAU,SAAS31B,GAG3C,OAFArU,KAAKilF,YAAY,GACjBjlF,KAAK9O,KAAK6G,SAASiI,KAAKiB,QAASoT,GAC1BrU,IACR,EAUD8pC,EAAK+6C,WAAWpzF,UAAUi9C,aAAe,SAASr6B,EAAGkW,GACnDvqB,KAAKilF,YAAY16D,GACjB,IAAI,IAAIz2B,EAAI,EAAGA,EAAIy2B,IAAKz2B,EACtBkM,KAAK9O,KAAK6G,SAASsc,GAErB,OAAOrU,IACR,EAYD8pC,EAAK+6C,WAAWpzF,UAAUw8C,SAAW,SAASh+C,EAAO2uD,GACnD,GAAG9U,EAAKk6C,kBAAkB/zF,GAAQ,CAChC,IACIgpC,GADA5Z,EAAM,IAAI3sB,WAAWzC,EAAM2C,OAAQ3C,EAAMkD,WAAYlD,EAAMhB,aACjDA,WAAaowB,EAAIlsB,WAK/B,OAJA6M,KAAKilF,YAAYhsD,GACP,IAAIvmC,WAAWsN,KAAK9O,KAAK0B,OAAQoN,KAAKiB,OAC5CnR,IAAIuvB,GACRrf,KAAKiB,OAASg4B,EACPj5B,IACR,CAED,GAAG8pC,EAAKnkC,cAAc1V,GAAQ,CAC5B,IAAIovB,EAAM,IAAI3sB,WAAWzC,GAKzB,OAJA+P,KAAKilF,YAAY5lE,EAAIpwB,YACX,IAAIyD,WAAWsN,KAAK9O,KAAK0B,QAC/B9C,IAAIuvB,EAAKrf,KAAKiB,OAClBjB,KAAKiB,OAASoe,EAAIpwB,WACX+Q,IACR,CAGD,GAAG/P,aAAiB65C,EAAK+6C,YACL,iBAAV50F,GACc,iBAAfA,EAAM2uB,MAA4C,iBAAhB3uB,EAAMgR,OAC/C6oC,EAAKk6C,kBAAkB/zF,EAAMiB,MAAQ,CACjCmuB,EAAM,IAAI3sB,WAAWzC,EAAMiB,KAAKjC,WAAYgB,EAAM2uB,KAAM3uB,EAAMjB,UAKlE,OAJAgR,KAAKilF,YAAY5lE,EAAIpwB,YACX,IAAIyD,WAAWzC,EAAMiB,KAAKjC,WAAY+Q,KAAKiB,OACjDnR,IAAIuvB,GACRrf,KAAKiB,OAASoe,EAAIpwB,WACX+Q,IACR,CAUD,GARG/P,aAAiB65C,EAAKi6C,mBAEvB9zF,EAAQA,EAAMiB,KACd0tD,EAAW,UAIbA,EAAWA,GAAY,SACH,iBAAV3uD,EAAoB,CAC5B,IAAIpC,EAGJ,GAAgB,QAAb+wD,EAID,OAHA5+C,KAAKilF,YAAYh3F,KAAKg4B,KAAKh2B,EAAMjB,OAAS,IAC1CnB,EAAO,IAAI6E,WAAWsN,KAAK9O,KAAK0B,OAAQoN,KAAKiB,OAC7CjB,KAAKiB,OAAS6oC,EAAKvrB,OAAOymD,IAAI/xE,OAAOhD,EAAOpC,EAAMmS,KAAKiB,OAChDjB,KAET,GAAgB,WAAb4+C,EAID,OAHA5+C,KAAKilF,YAA0C,EAA9Bh3F,KAAKg4B,KAAKh2B,EAAMjB,OAAS,IAC1CnB,EAAO,IAAI6E,WAAWsN,KAAK9O,KAAK0B,OAAQoN,KAAKiB,OAC7CjB,KAAKiB,OAAS6oC,EAAKvrB,OAAOoH,OAAO1yB,OAAOhD,EAAOpC,EAAMmS,KAAKiB,OACnDjB,KAWT,GAPgB,SAAb4+C,IAED3uD,EAAQ65C,EAAKpjB,WAAWz2B,GACxB2uD,EAAW,UAIG,WAAbA,GAAsC,QAAbA,EAK1B,OAHA5+C,KAAKilF,YAAYh1F,EAAMjB,QACvBnB,EAAO,IAAI6E,WAAWsN,KAAK9O,KAAK0B,OAAQoN,KAAKiB,OAC7CjB,KAAKiB,OAAS6oC,EAAKvrB,OAAO6mE,IAAInyF,OAAOpF,GAC9BmS,KAIT,GAAgB,UAAb4+C,EAKD,OAHA5+C,KAAKilF,YAA2B,EAAfh1F,EAAMjB,QACvBnB,EAAO,IAAIqyB,YAAYlgB,KAAK9O,KAAK0B,OAAQoN,KAAKiB,OAC9CjB,KAAKiB,OAAS6oC,EAAKz+B,KAAKg6E,MAAMt1F,OAAOlC,GAC9BmS,KAGT,MAAM,IAAI/N,MAAM,qBAAuB2sD,EACxC,CAED,MAAM3sD,MAAM,sBAAwBhC,EACrC,EASD65C,EAAK+6C,WAAWpzF,UAAU6iD,UAAY,SAAS1hD,GAG7C,OAFAoN,KAAKiuC,SAASr7C,GACdA,EAAOsnD,QACAl6C,IACR,EAUD8pC,EAAK+6C,WAAWpzF,UAAU+gF,UAAY,SAAS1jF,GAC7C,OAAOkR,KAAKiuC,SAASn/C,EAAK,QAC3B,EASDg7C,EAAK+6C,WAAWpzF,UAAU8iD,SAAW,SAASzgD,GAI5C,OAHAkM,KAAKilF,YAAY,GACjBjlF,KAAK9O,KAAKiH,SAAS6H,KAAKiB,MAAOnN,GAC/BkM,KAAKiB,OAAS,EACPjB,IACR,EASD8pC,EAAK+6C,WAAWpzF,UAAUwvF,SAAW,SAASntF,GAK5C,OAJAkM,KAAKilF,YAAY,GACjBjlF,KAAK9O,KAAKiH,SAAS6H,KAAKiB,MAAOnN,GAAK,EAAI,OACxCkM,KAAK9O,KAAK+G,QAAQ+H,KAAKiB,MAAOnN,GAAK,GAAK,KACxCkM,KAAKiB,OAAS,EACPjB,IACR,EASD8pC,EAAK+6C,WAAWpzF,UAAUioD,SAAW,SAAS5lD,GAI5C,OAHAkM,KAAKilF,YAAY,GACjBjlF,KAAK9O,KAAKkH,SAAS4H,KAAKiB,MAAOnN,GAC/BkM,KAAKiB,OAAS,EACPjB,IACR,EASD8pC,EAAK+6C,WAAWpzF,UAAU84E,WAAa,SAASz2E,GAI9C,OAHAkM,KAAKilF,YAAY,GACjBjlF,KAAK9O,KAAKiH,SAAS6H,KAAKiB,MAAOnN,GAAG,GAClCkM,KAAKiB,OAAS,EACPjB,IACR,EASD8pC,EAAK+6C,WAAWpzF,UAAUkzF,WAAa,SAAS7wF,GAK9C,OAJAkM,KAAKilF,YAAY,GACjBjlF,KAAK9O,KAAK+G,QAAQ+H,KAAKiB,MAAOnN,GAAK,GAAK,KACxCkM,KAAK9O,KAAKiH,SAAS6H,KAAKiB,MAAOnN,GAAK,EAAI,OAAQ,GAChDkM,KAAKiB,OAAS,EACPjB,IACR,EASD8pC,EAAK+6C,WAAWpzF,UAAUugE,WAAa,SAASl+D,GAI9C,OAHAkM,KAAKilF,YAAY,GACjBjlF,KAAK9O,KAAKkH,SAAS4H,KAAKiB,MAAOnN,GAAG,GAClCkM,KAAKiB,OAAS,EACPjB,IACR,EAUD8pC,EAAK+6C,WAAWpzF,UAAU4iF,OAAS,SAASvgF,EAAGy2B,GAC7Cu5D,EAAgBv5D,GAChBvqB,KAAKilF,YAAY16D,EAAI,GACrB,GACEA,GAAK,EACLvqB,KAAK9O,KAAK+G,QAAQ+H,KAAKiB,QAAUnN,GAAKy2B,EAAK,WACrCA,EAAI,GACZ,OAAOvqB,IACR,EAWD8pC,EAAK+6C,WAAWpzF,UAAUklD,aAAe,SAAS7iD,EAAGy2B,GAMnD,OALAu5D,EAAgBv5D,GAChBvqB,KAAKilF,YAAY16D,EAAI,GAClBz2B,EAAI,IACLA,GAAK,GAAMy2B,EAAI,GAEVvqB,KAAKq0E,OAAOvgF,EAAGy2B,EACvB,EAODuf,EAAK+6C,WAAWpzF,UAAU2hD,QAAU,WAClC,OAAOpzC,KAAK9O,KAAKgJ,QAAQ8F,KAAK4e,OAC/B,EAQDkrB,EAAK+6C,WAAWpzF,UAAUiN,SAAW,WACnC,IAAIkvC,EAAO5tC,KAAK9O,KAAKwN,SAASsB,KAAK4e,MAEnC,OADA5e,KAAK4e,MAAQ,EACNgvB,CACR,EAQD9D,EAAK+6C,WAAWpzF,UAAU0iF,SAAW,WACnC,IAAIvmC,EACF5tC,KAAK9O,KAAKwN,SAASsB,KAAK4e,OAAS,EACjC5e,KAAK9O,KAAKgJ,QAAQ8F,KAAK4e,KAAO,GAEhC,OADA5e,KAAK4e,MAAQ,EACNgvB,CACR,EAQD9D,EAAK+6C,WAAWpzF,UAAUnD,SAAW,WACnC,IAAIs/C,EAAO5tC,KAAK9O,KAAK5C,SAAS0R,KAAK4e,MAEnC,OADA5e,KAAK4e,MAAQ,EACNgvB,CACR,EAQD9D,EAAK+6C,WAAWpzF,UAAU04E,WAAa,WACrC,IAAIv8B,EAAO5tC,KAAK9O,KAAKwN,SAASsB,KAAK4e,MAAM,GAEzC,OADA5e,KAAK4e,MAAQ,EACNgvB,CACR,EAQD9D,EAAK+6C,WAAWpzF,UAAUmzF,WAAa,WACrC,IAAIh3C,EACF5tC,KAAK9O,KAAKgJ,QAAQ8F,KAAK4e,MACvB5e,KAAK9O,KAAKwN,SAASsB,KAAK4e,KAAO,GAAG,IAAS,EAE7C,OADA5e,KAAK4e,MAAQ,EACNgvB,CACR,EAQD9D,EAAK+6C,WAAWpzF,UAAUygE,WAAa,WACrC,IAAItkB,EAAO5tC,KAAK9O,KAAK5C,SAAS0R,KAAK4e,MAAM,GAEzC,OADA5e,KAAK4e,MAAQ,EACNgvB,CACR,EAUD9D,EAAK+6C,WAAWpzF,UAAU4hD,OAAS,SAAS9oB,GAC1Cu5D,EAAgBv5D,GAChB,IAAIqjB,EAAO,EACX,GAEEA,GAAQA,GAAQ,GAAK5tC,KAAK9O,KAAKgJ,QAAQ8F,KAAK4e,QAC5C2L,GAAK,QACCA,EAAI,GACZ,OAAOqjB,CACR,EAUD9D,EAAK+6C,WAAWpzF,UAAUqlD,aAAe,SAASvsB,GAEhD,IAAIvI,EAAIhiB,KAAKqzC,OAAO9oB,GAChBjI,EAAM,GAAMiI,EAAI,EAIpB,OAHGvI,GAAKM,IACNN,GAAKM,GAAO,GAEPN,CACR,EAUD8nB,EAAK+6C,WAAWpzF,UAAUs9C,SAAW,SAASp3C,GAI5C,IAAIi2C,EAaJ,OAZGj2C,GAEDA,EAAQ1J,KAAKoR,IAAIW,KAAKhR,SAAU2I,GAChCi2C,EAAO5tC,KAAK9O,KAAK0I,MAAMoG,KAAK4e,KAAM5e,KAAK4e,KAAOjnB,GAC9CqI,KAAK4e,MAAQjnB,GACK,IAAVA,EACRi2C,EAAO,IAGPA,EAAsB,IAAd5tC,KAAK4e,KAAc5e,KAAK9O,KAAO8O,KAAK9O,KAAK0I,MAAMoG,KAAK4e,MAC5D5e,KAAKk6C,SAEAtM,CACR,EAUD9D,EAAK+6C,WAAWpzF,UAAUxB,MAAQ,SAAS0H,GAEzC,YAA0B,IAAXA,EACbqI,KAAK9O,KAAK0I,MAAMoG,KAAK4e,MACrB5e,KAAK9O,KAAK0I,MAAMoG,KAAK4e,KAAM5e,KAAK4e,KAAOjnB,EAC1C,EASDmyC,EAAK+6C,WAAWpzF,UAAUq9C,GAAK,SAASh7C,GACtC,OAAOkM,KAAK9O,KAAKsN,SAASwB,KAAK4e,KAAO9qB,EACvC,EAUDg2C,EAAK+6C,WAAWpzF,UAAUukE,MAAQ,SAASliE,EAAGugB,GAE5C,OADArU,KAAK9O,KAAK6G,SAASjE,EAAGugB,GACfrU,IACR,EAOD8pC,EAAK+6C,WAAWpzF,UAAUo9C,KAAO,WAC/B,OAAO7uC,KAAK9O,KAAKsN,SAASwB,KAAKiB,MAAQ,EACxC,EAOD6oC,EAAK+6C,WAAWpzF,UAAUohD,KAAO,WAC/B,OAAO,IAAI/I,EAAK+6C,WAAW7kF,KAC5B,EAOD8pC,EAAK+6C,WAAWpzF,UAAUonD,QAAU,WAClC,GAAG74C,KAAK4e,KAAO,EAAG,CAChB,IAAIS,EAAM,IAAI3sB,WAAWsN,KAAK9O,KAAK0B,OAAQoN,KAAK4e,MAC5CumE,EAAM,IAAIzyF,WAAW2sB,EAAIpwB,YAC7Bk2F,EAAIr1F,IAAIuvB,GACRrf,KAAK9O,KAAO,IAAIyB,SAASwyF,GACzBnlF,KAAKiB,OAASjB,KAAK4e,KACnB5e,KAAK4e,KAAO,CACb,CACD,OAAO5e,IACR,EAOD8pC,EAAK+6C,WAAWpzF,UAAUyoD,MAAQ,WAGhC,OAFAl6C,KAAK9O,KAAO,IAAIyB,SAAS,IAAIwB,YAAY,IACzC6L,KAAK4e,KAAO5e,KAAKiB,MAAQ,EAClBjB,IACR,EASD8pC,EAAK+6C,WAAWpzF,UAAUm5B,SAAW,SAASjzB,GAG5C,OAFAqI,KAAKiB,MAAQhT,KAAKq0B,IAAI,EAAGtiB,KAAKhR,SAAW2I,GACzCqI,KAAK4e,KAAO3wB,KAAKoR,IAAIW,KAAK4e,KAAM5e,KAAKiB,OAC9BjB,IACR,EAOD8pC,EAAK+6C,WAAWpzF,UAAUytE,MAAQ,WAEhC,IADA,IAAItxB,EAAO,GACH95C,EAAIkM,KAAK4e,KAAM9qB,EAAIkM,KAAK9O,KAAKjC,aAAc6E,EAAG,CACpD,IAAIugB,EAAIrU,KAAK9O,KAAKsN,SAAS1K,GACxBugB,EAAI,KACLu5B,GAAQ,KAEVA,GAAQv5B,EAAEjd,SAAS,GACpB,CACD,OAAOw2C,CACR,EAWD9D,EAAK+6C,WAAWpzF,UAAU2F,SAAW,SAASwnD,GAC5C,IAAI/wD,EAAO,IAAI6E,WAAWsN,KAAK9O,KAAM8O,KAAK4e,KAAM5e,KAAKhR,UAIrD,GAAgB,YAHhB4vD,EAAWA,GAAY,SAGkB,QAAbA,EAC1B,OAAO9U,EAAKvrB,OAAO6mE,IAAIr1F,OAAOlC,GAEhC,GAAgB,QAAb+wD,EACD,OAAO9U,EAAKvrB,OAAOymD,IAAIj1E,OAAOlC,GAEhC,GAAgB,WAAb+wD,EACD,OAAO9U,EAAKvrB,OAAOoH,OAAO51B,OAAOlC,GAInC,GAAgB,SAAb+wD,EACD,OAAO9U,EAAKz+B,KAAKi6E,KAAKryF,OAAOpF,GAE/B,GAAgB,UAAb+wD,EACD,OAAO9U,EAAKz+B,KAAKg6E,MAAMpyF,OAAOpF,GAGhC,MAAM,IAAIoE,MAAM,qBAAuB2sD,EACxC,EAcD9U,EAAKC,aAAe,SAAS/qC,EAAO4/C,GAMlC,OAJAA,EAAWA,GAAY,WACVtvD,IAAV0P,GAAoC,SAAb4/C,IACxB5/C,EAAQ8qC,EAAKpjB,WAAW1nB,IAEnB,IAAI8qC,EAAK2C,WAAWztC,EAC5B,EAYD8qC,EAAK8kB,WAAa,SAAS1jD,EAAGqf,GAE5B,IADA,IAAItX,EAAI,GACFsX,EAAI,GACD,EAAJA,IACDtX,GAAK/H,IAEPqf,KAAO,GACA,IACLrf,GAAKA,GAGT,OAAO+H,CACR,EAYD62B,EAAKotB,SAAW,SAASyc,EAAI1hB,EAAI1nC,GAM/B,IALA,IAAIg7D,EAAK,GACLlxE,EAAI,GACJ+c,EAAI,GACJt9B,EAAI,EACJoX,EAAI,EACFqf,EAAI,IAAKA,IAAKz2B,EAClBugB,EAAIs/D,EAAGxkF,WAAW2E,GAAKm+D,EAAG9iE,WAAW2E,GAClCoX,GAAK,KACNq6E,GAAMn0D,EACNA,EAAI,GACJlmB,EAAI,GAENkmB,GAAKzgC,OAAOC,aAAayjB,KACvBnJ,EAGJ,OADAq6E,GAAMn0D,CAEP,EASD0Y,EAAK6kB,WAAa,SAASqW,GAEzB,IAAIp3B,EAAO,GACP95C,EAAI,EAOR,KANgB,EAAbkxE,EAAIh2E,SAEL8E,EAAI,EACJ85C,GAAQj9C,OAAOC,aAAa6jC,SAASuwC,EAAI,GAAI,MAGzClxE,EAAIkxE,EAAIh2E,OAAQ8E,GAAK,EACzB85C,GAAQj9C,OAAOC,aAAa6jC,SAASuwC,EAAIl/D,OAAOhS,EAAG,GAAI,KAEzD,OAAO85C,CACR,EASD9D,EAAK8N,WAAa,SAAS3nD,GAEzB,OAAO65C,EAAKC,aAAa95C,GAAOivE,OACjC,EASDp1B,EAAKmtB,aAAe,SAASnjE,GAC3B,OACEnD,OAAOC,aAAakD,GAAK,GAAK,KAC9BnD,OAAOC,aAAakD,GAAK,GAAK,KAC9BnD,OAAOC,aAAakD,GAAK,EAAI,KAC7BnD,OAAOC,aAAiB,IAAJkD,EACvB,EAGD,IAAI0xF,EACF,oEACEC,EAAa,CAGd,IAAK,GAAI,GAAI,EAAG,GAGhB,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGpC,GAAI,GAAI,EAAG,IAAK,GAAI,GAAI,EAIxB,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAI,GAG/C,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAIhD,GAAI,GAAI,GAAI,GAAI,GAAI,EAIpB,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAGhD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAI/CC,EAAU,6DAWd57C,EAAK6tB,SAAW,SAAS34D,EAAOg5C,GAM9B,IAJA,IAEI2tC,EAAMC,EAAMC,EAFZ3tB,EAAO,GACPvoE,EAAS,GAETmE,EAAI,EACFA,EAAIkL,EAAMhQ,QACd22F,EAAO3mF,EAAM7P,WAAW2E,KACxB8xF,EAAO5mF,EAAM7P,WAAW2E,KACxB+xF,EAAO7mF,EAAM7P,WAAW2E,KAGxBokE,GAAQstB,EAAQlsD,OAAOqsD,GAAQ,GAC/BztB,GAAQstB,EAAQlsD,QAAgB,EAAPqsD,IAAa,EAAMC,GAAQ,GACjDp9C,MAAMo9C,GACP1tB,GAAQ,MAERA,GAAQstB,EAAQlsD,QAAgB,GAAPssD,IAAc,EAAMC,GAAQ,GACrD3tB,GAAQ1vB,MAAMq9C,GAAQ,IAAML,EAAQlsD,OAAc,GAAPusD,IAG1C7tC,GAAWkgB,EAAKlpE,OAASgpD,IAC1BroD,GAAUuoE,EAAKpyD,OAAO,EAAGkyC,GAAW,OACpCkgB,EAAOA,EAAKpyD,OAAOkyC,IAIvB,OADAroD,GAAUuoE,CAEX,EASDpuB,EAAKiuB,SAAW,SAAS/4D,GAIvBA,EAAQA,EAAMgQ,QAAQ,sBAAuB,IAM7C,IAJA,IACI82E,EAAMC,EAAMC,EAAMC,EADlBt2F,EAAS,GAETmE,EAAI,EAEFA,EAAIkL,EAAMhQ,QACd82F,EAAOL,EAAWzmF,EAAM7P,WAAW2E,KAAO,IAC1CiyF,EAAON,EAAWzmF,EAAM7P,WAAW2E,KAAO,IAC1CkyF,EAAOP,EAAWzmF,EAAM7P,WAAW2E,KAAO,IAC1CmyF,EAAOR,EAAWzmF,EAAM7P,WAAW2E,KAAO,IAE1CnE,GAAUgB,OAAOC,aAAck1F,GAAQ,EAAMC,GAAQ,GACzC,KAATC,IAEDr2F,GAAUgB,OAAOC,cAAsB,GAAPm1F,IAAc,EAAMC,GAAQ,GAChD,KAATC,IAEDt2F,GAAUgB,OAAOC,cAAsB,EAAPo1F,IAAa,EAAKC,KAKxD,OAAOt2F,CACR,EAYDm6C,EAAKpjB,WAAa,SAAS53B,GACzB,OAAOo3F,SAASn4E,mBAAmBjf,GACpC,EAWDg7C,EAAK+N,WAAa,SAAS/oD,GACzB,OAAOq3F,mBAAmBC,OAAOt3F,GAClC,EAIDg7C,EAAKvrB,OAAS,CACZ6mE,IAAK,CAAC,EACNpgB,IAAK,CAAC,EACNr/C,OAAQ,CAAC,EACT0gE,OAAQ,CAAC,EACTxC,MAAQ,CACN9zF,OAAQ8zF,EAAM9zF,OACdkD,OAAQ4wF,EAAM5wF,SAYlB62C,EAAKvrB,OAAO6mE,IAAIr1F,OAAS,SAASE,GAChC,OAAOU,OAAOC,aAAaC,MAAM,KAAMZ,EACxC,EAaD65C,EAAKvrB,OAAO6mE,IAAInyF,OAAS,SAASnE,EAAKa,EAAQ7B,GAC7C,IAAI4Z,EAAM/X,EACN+X,IACFA,EAAM,IAAIhV,WAAW5D,EAAIE,SAI3B,IADA,IAAIoK,EADJtL,EAASA,GAAU,EAEXgG,EAAI,EAAGA,EAAIhF,EAAIE,SAAU8E,EAC/B4T,EAAItO,KAAOtK,EAAIK,WAAW2E,GAE5B,OAAOnE,EAAUyJ,EAAItL,EAAU4Z,CAChC,EAUDoiC,EAAKvrB,OAAOymD,IAAIj1E,OAAS+5C,EAAK8N,WAY9B9N,EAAKvrB,OAAOymD,IAAI/xE,OAAS,SAAS+xE,EAAKr1E,EAAQ7B,GAC7C,IAAI4Z,EAAM/X,EACN+X,IACFA,EAAM,IAAIhV,WAAWzE,KAAKg4B,KAAK++C,EAAIh2E,OAAS,KAG9C,IAAI8E,EAAI,EAAGsF,EADXtL,EAASA,GAAU,EAQnB,IANgB,EAAbk3E,EAAIh2E,SAEL8E,EAAI,EACJ4T,EAAItO,KAAOq7B,SAASuwC,EAAI,GAAI,KAGxBlxE,EAAIkxE,EAAIh2E,OAAQ8E,GAAK,EACzB4T,EAAItO,KAAOq7B,SAASuwC,EAAIl/D,OAAOhS,EAAG,GAAI,IAExC,OAAOnE,EAAUyJ,EAAItL,EAAU4Z,CAChC,EAWDoiC,EAAKvrB,OAAOoH,OAAO51B,OAAS,SAASiP,EAAOg5C,GAK1C,IAJA,IAEI2tC,EAAMC,EAAMC,EAFZ3tB,EAAO,GACPvoE,EAAS,GAETmE,EAAI,EACFA,EAAIkL,EAAM/P,YACd02F,EAAO3mF,EAAMlL,KACb8xF,EAAO5mF,EAAMlL,KACb+xF,EAAO7mF,EAAMlL,KAGbokE,GAAQstB,EAAQlsD,OAAOqsD,GAAQ,GAC/BztB,GAAQstB,EAAQlsD,QAAgB,EAAPqsD,IAAa,EAAMC,GAAQ,GACjDp9C,MAAMo9C,GACP1tB,GAAQ,MAERA,GAAQstB,EAAQlsD,QAAgB,GAAPssD,IAAc,EAAMC,GAAQ,GACrD3tB,GAAQ1vB,MAAMq9C,GAAQ,IAAML,EAAQlsD,OAAc,GAAPusD,IAG1C7tC,GAAWkgB,EAAKlpE,OAASgpD,IAC1BroD,GAAUuoE,EAAKpyD,OAAO,EAAGkyC,GAAW,OACpCkgB,EAAOA,EAAKpyD,OAAOkyC,IAIvB,OADAroD,GAAUuoE,CAEX,EAYDpuB,EAAKvrB,OAAOoH,OAAO1yB,OAAS,SAAS+L,EAAOrP,EAAQ7B,GAClD,IASIg4F,EAAMC,EAAMC,EAAMC,EATlBv+E,EAAM/X,EACN+X,IACFA,EAAM,IAAIhV,WAAyC,EAA9BzE,KAAKg4B,KAAKjnB,EAAMhQ,OAAS,KAIhDgQ,EAAQA,EAAMgQ,QAAQ,sBAAuB,IAM7C,IAFA,IAAIlb,EAAI,EAAGsF,EAFXtL,EAASA,GAAU,EAIbgG,EAAIkL,EAAMhQ,QACd82F,EAAOL,EAAWzmF,EAAM7P,WAAW2E,KAAO,IAC1CiyF,EAAON,EAAWzmF,EAAM7P,WAAW2E,KAAO,IAC1CkyF,EAAOP,EAAWzmF,EAAM7P,WAAW2E,KAAO,IAC1CmyF,EAAOR,EAAWzmF,EAAM7P,WAAW2E,KAAO,IAE1C4T,EAAItO,KAAQ0sF,GAAQ,EAAMC,GAAQ,EACtB,KAATC,IAEDt+E,EAAItO,MAAgB,GAAP2sF,IAAc,EAAMC,GAAQ,EAC7B,KAATC,IAEDv+E,EAAItO,MAAgB,EAAP4sF,IAAa,EAAKC,IAMrC,OAAOt2F,EAAUyJ,EAAItL,EAAU4Z,EAAI7X,SAAS,EAAGuJ,EAChD,EAGD0wC,EAAKvrB,OAAO8nE,OAAOt2F,OAAS,SAASiP,EAAOg5C,GAC1C,OAAOlO,EAAKvrB,OAAOslE,MAAM9zF,OAAOiP,EAAO0mF,EAAS1tC,EACjD,EACDlO,EAAKvrB,OAAO8nE,OAAOpzF,OAAS,SAAS+L,EAAOg5C,GAC1C,OAAOlO,EAAKvrB,OAAOslE,MAAM5wF,OAAO+L,EAAO0mF,EAAS1tC,EACjD,EAIDlO,EAAKz+B,KAAO,CACVi6E,KAAM,CAAC,EACPD,MAAO,CAAC,GAaVv7C,EAAKz+B,KAAKi6E,KAAKv1F,OAAS,SAASjB,EAAKa,EAAQ7B,GAC5CgB,EAAMg7C,EAAKpjB,WAAW53B,GACtB,IAAI4Y,EAAM/X,EACN+X,IACFA,EAAM,IAAIhV,WAAW5D,EAAIE,SAI3B,IADA,IAAIoK,EADJtL,EAASA,GAAU,EAEXgG,EAAI,EAAGA,EAAIhF,EAAIE,SAAU8E,EAC/B4T,EAAItO,KAAOtK,EAAIK,WAAW2E,GAE5B,OAAOnE,EAAUyJ,EAAItL,EAAU4Z,CAChC,EASDoiC,EAAKz+B,KAAKi6E,KAAKryF,OAAS,SAAShD,GAC/B,OAAO65C,EAAK+N,WAAWlnD,OAAOC,aAAaC,MAAM,KAAMZ,GACxD,EAYD65C,EAAKz+B,KAAKg6E,MAAMt1F,OAAS,SAASjB,EAAKa,EAAQ7B,GAC7C,IAAI4Z,EAAM/X,EACN+X,IACFA,EAAM,IAAIhV,WAAwB,EAAb5D,EAAIE,SAM3B,IAJA,IAAInB,EAAO,IAAIqyB,YAAYxY,EAAI9U,QAE3BwG,EADJtL,EAASA,GAAU,EAEf4sC,EAAI5sC,EACAgG,EAAI,EAAGA,EAAIhF,EAAIE,SAAU8E,EAC/BjG,EAAK6sC,KAAO5rC,EAAIK,WAAW2E,GAC3BsF,GAAK,EAEP,OAAOzJ,EAAUyJ,EAAItL,EAAU4Z,CAChC,EASDoiC,EAAKz+B,KAAKg6E,MAAMpyF,OAAS,SAAShD,GAChC,OAAOU,OAAOC,aAAaC,MAAM,KAAM,IAAIqvB,YAAYjwB,EAAM2C,QAC9D,EAYDk3C,EAAKkqC,QAAU,SAASl8B,EAAK7nD,EAAOm1F,GAIlC,GAHAn1F,EAAQ65C,EAAKiuB,SAASjgB,EAAIk8B,QAAQlqC,EAAK6tB,SAAS1nE,IAAQ29C,MAGrDw3C,EAAK,CAIN,IAAIjuE,EAAQ,EAEH,GADClnB,EAAMd,WAAW,KAEzBgoB,EAAQ,GAGVlnB,EAAQA,EAAMqjB,UAAU6D,EAAOlnB,EAAMjB,OAAS,EAC/C,CAED,OAAOiB,CACR,EAYD65C,EAAKmqC,QAAU,SAASn8B,EAAK7nD,EAAOm1F,GAElC,IAAIx3C,EAAOkK,EAAIm8B,QAAQnqC,EAAK6tB,SAAS1nE,IAAQ29C,KAC7C,OAAiB,OAATA,EAAiB,KAAO9D,EAAKiuB,SAASnqB,EAC/C,EASD,IAAI04C,EAAoB,SAASxuC,EAAKr8B,EAAI4b,GACxC,IAAIygB,EACF,MAAM,IAAI7lD,MAAM,6BAGlB,IAAI27C,EAUJ,GATW,OAARvW,EACDuW,EAAOkK,EAAIyuC,WAAW9qE,IAGtB4b,EAAMyS,EAAK6tB,SAAS/lD,KAAKoD,UAAUqiB,IACnCuW,EAAOkK,EAAI0uC,QAAQ/qE,EAAI4b,SAIL,IAAVuW,IAAuC,IAAdA,EAAKA,KAAe,CACrD,IAAI9rC,EAAQ,IAAI7P,MAAM27C,EAAK9rC,MAAM3Q,SAGjC,MAFA2Q,EAAM2Z,GAAKmyB,EAAK9rC,MAAM2Z,GACtB3Z,EAAM/P,KAAO67C,EAAK9rC,MAAM/P,KAClB+P,CACP,CACF,EAUG2kF,EAAoB,SAAS3uC,EAAKr8B,GACpC,IAAIq8B,EACF,MAAM,IAAI7lD,MAAM,6BAIlB,IAAI27C,EAAOkK,EAAI4uC,QAAQjrE,GAQvB,GAAGq8B,EAAIzO,KACL,GAAiB,OAAduE,EAAKA,KAAe,CACrB,GAAGA,EAAK9rC,MAAO,CACb,IAAIA,EAAQ,IAAI7P,MAAM27C,EAAK9rC,MAAM3Q,SAGjC,MAFA2Q,EAAM2Z,GAAKmyB,EAAK9rC,MAAM2Z,GACtB3Z,EAAM/P,KAAO67C,EAAK9rC,MAAM/P,KAClB+P,CACP,CAED8rC,EAAO,IACR,MACCA,EAAOA,EAAKA,KAUhB,OALY,OAATA,IAEDA,EAAOh8B,KAAKpR,MAAMspC,EAAKiuB,SAASnqB,KAG3BA,CACR,EAUG+4C,EAAW,SAAS7uC,EAAKr8B,EAAI3jB,EAAK5G,GAEpC,IAAImmC,EAAMovD,EAAkB3uC,EAAKr8B,GACtB,OAAR4b,IAEDA,EAAM,CAAC,GAGTA,EAAIv/B,GAAO5G,EAGXo1F,EAAkBxuC,EAAKr8B,EAAI4b,EAC5B,EAWGuvD,EAAW,SAAS9uC,EAAKr8B,EAAI3jB,GAE/B,IAAI81C,EAAO64C,EAAkB3uC,EAAKr8B,GAMlC,OALY,OAATmyB,IAEDA,EAAQ91C,KAAO81C,EAAQA,EAAK91C,GAAO,MAG9B81C,CACR,EASGi5C,EAAc,SAAS/uC,EAAKr8B,EAAI3jB,GAElC,IAAIu/B,EAAMovD,EAAkB3uC,EAAKr8B,GACjC,GAAW,OAAR4b,GAAgBv/B,KAAOu/B,EAAK,QAEtBA,EAAIv/B,GAGX,IAAIwgC,GAAQ,EACZ,IAAI,IAAIwuD,KAAQzvD,EAAK,CACnBiB,GAAQ,EACR,KACD,CACEA,IAEDjB,EAAM,MAIRivD,EAAkBxuC,EAAKr8B,EAAI4b,EAC5B,CACF,EAQG0vD,EAAc,SAASjvC,EAAKr8B,GAC9B6qE,EAAkBxuC,EAAKr8B,EAAI,KAC5B,EAWGurE,EAAuB,SAASxlE,EAAMjJ,EAAM4G,GAC9C,IAQIluB,EARA28C,EAAO,UAGa,IAAdzuB,IACRA,EAAW,CAAC,MAAO,UAKrB,IAAI8nE,GAAO,EACPC,EAAY,KAChB,IAAI,IAAIljE,KAAO7E,EAAU,CACvBluB,EAAOkuB,EAAS6E,GAChB,IACE,GAAY,UAAT/yB,GAA6B,SAATA,EAAiB,CACtC,GAAe,OAAZsnB,EAAK,GACN,MAAM,IAAItmB,MAAM,sCAElB27C,EAAOpsB,EAAK3wB,MAAMmP,KAAMuY,GACxB0uE,EAAiB,UAATh2F,CACT,CACW,QAATA,GAA2B,SAATA,IACnBsnB,EAAK,GAAK4uE,aACVv5C,EAAOpsB,EAAK3wB,MAAMmP,KAAMuY,GACxB0uE,GAAO,EAIV,CAFC,MAAMr0E,GACNs0E,EAAYt0E,CACb,CACD,GAAGq0E,EACD,KAEH,CAED,IAAIA,EACF,MAAMC,EAGR,OAAOt5C,CACR,EA8BD9D,EAAK08C,QAAU,SAAS1uC,EAAKr8B,EAAI3jB,EAAK5G,EAAMiuB,GAC1C6nE,EAAqBL,EAAU1kF,UAAWkd,EAC3C,EAcD2qB,EAAK48C,QAAU,SAAS5uC,EAAKr8B,EAAI3jB,EAAKqnB,GACpC,OAAO6nE,EAAqBJ,EAAU3kF,UAAWkd,EAClD,EAYD2qB,EAAKy8C,WAAa,SAASzuC,EAAKr8B,EAAI3jB,EAAKqnB,GACvC6nE,EAAqBH,EAAa5kF,UAAWkd,EAC9C,EAWD2qB,EAAKs9C,WAAa,SAAStvC,EAAKr8B,EAAI0D,GAClC6nE,EAAqBD,EAAa9kF,UAAWkd,EAC9C,EAUD2qB,EAAKs5C,QAAU,SAAS/rD,GACtB,IAAI,IAAIyvD,KAAQzvD,EACd,GAAGA,EAAI9Z,eAAeupE,GACpB,OAAO,EAGX,OAAO,CACR,EAWDh9C,EAAKoM,OAAS,SAASA,GAarB,IAZA,IAEInxC,EAEA4oB,EAJA2O,EAAK,MAML+qD,EAAO,EAEPC,EAAQ,GAERz4C,EAAO,EAEJ9pC,EAAQu3B,EAAGM,KAAKsZ,IAAU,EAC/BvoB,EAAOuoB,EAAO5iC,UAAUu7B,EAAMvS,EAAGirD,UAAY,IAErCv4F,OAAS,GACfs4F,EAAM/2F,KAAKo9B,GAEbkhB,EAAOvS,EAAGirD,UAEV,IAAI73E,EAAO3K,EAAM,GAAG,GACpB,OAAO2K,GACP,IAAK,IACL,IAAK,IAEA23E,EAAOplF,UAAUjT,OAClBs4F,EAAM/2F,KAAK0R,UAAmB,EAATolF,MAErBC,EAAM/2F,KAAK,OAEb,MAIF,IAAK,IACH+2F,EAAM/2F,KAAK,KACX,MACF,QACE+2F,EAAM/2F,KAAK,KAAOmf,EAAO,MAE5B,CAGD,OADA43E,EAAM/2F,KAAK2lD,EAAO5iC,UAAUu7B,IACrBy4C,EAAMn8E,KAAK,GACnB,EAOD2+B,EAAK09C,aAAe,SAAS9jD,EAAQ+jD,EAAUC,EAAWC,GAWxD,IAAIp9D,EAAImZ,EAAQx4B,EAAIs9B,MAAMi/C,EAAWx5F,KAAK0K,IAAI8uF,IAAa,EAAIA,EAC3Dr7D,OAAkB98B,IAAdo4F,EAA0B,IAAMA,EACpCt2D,OAAsB9hC,IAAlBq4F,EACP,IAAMA,EAAe10E,EAAIsX,EAAI,EAAI,IAAM,GACpCz2B,EAAI2gC,SAAUlK,EAAIt8B,KAAK0K,KAAK4xB,GAAK,GAAGq9D,QAAQ18E,GAAK,IAAM,GACvD9R,EAAKtF,EAAE9E,OAAS,EAAK8E,EAAE9E,OAAS,EAAI,EACxC,OAAOikB,GAAK7Z,EAAItF,EAAEgS,OAAO,EAAG1M,GAAKg4B,EAAI,IACnCt9B,EAAEgS,OAAO1M,GAAG4V,QAAQ,iBAAkB,KAAOoiB,IAC5ClmB,EAAIkhB,EAAIn+B,KAAK0K,IAAI4xB,EAAIz2B,GAAG8zF,QAAQ18E,GAAGtR,MAAM,GAAK,GAClD,EAODkwC,EAAK+9C,WAAa,SAASvwF,GAUzB,OAREA,EADCA,GAAQ,WACFwyC,EAAK09C,aAAalwF,EAAO,WAAY,EAAG,IAAK,IAAM,OAClDA,GAAQ,QACTwyC,EAAK09C,aAAalwF,EAAO,QAAS,EAAG,IAAK,IAAM,OAC/CA,GAAQ,KACTwyC,EAAK09C,aAAalwF,EAAO,KAAM,GAAK,OAEpCwyC,EAAK09C,aAAalwF,EAAM,GAAK,QAGvC,EAUDwyC,EAAKg+C,YAAc,SAASC,GAC1B,OAAwB,IAArBA,EAAG7gF,QAAQ,KACL4iC,EAAKk+C,cAAcD,IAEJ,IAArBA,EAAG7gF,QAAQ,KACL4iC,EAAKm+C,cAAcF,GAErB,IACR,EASDj+C,EAAKk+C,cAAgB,SAASD,GAE5B,GAAiB,KADjBA,EAAKA,EAAGp/E,MAAM,MACR3Z,OACJ,OAAO,KAGT,IADA,IAAIqlB,EAAIy1B,EAAKC,eACLj2C,EAAI,EAAGA,EAAIi0F,EAAG/4F,SAAU8E,EAAG,CACjC,IAAI+R,EAAM4uB,SAASszD,EAAGj0F,GAAI,IAC1B,GAAG00C,MAAM3iC,GACP,OAAO,KAETwO,EAAE21B,QAAQnkC,EACX,CACD,OAAOwO,EAAE06B,UACV,EASDjF,EAAKm+C,cAAgB,SAASF,GAQ5B,IAPA,IAAIG,EAAS,EAKTx5B,EAAmC,GAA1B,GAJbq5B,EAAKA,EAAGp/E,MAAM,KAAK2zD,QAAO,SAASniE,GAEjC,OADgB,IAAbA,EAAEnL,UAAgBk5F,GACd,CACR,KACmBl5F,OAASk5F,GACzB7zE,EAAIy1B,EAAKC,eACLj2C,EAAI,EAAGA,EAAI,IAAKA,EACtB,GAAIi0F,EAAGj0F,IAAuB,IAAjBi0F,EAAGj0F,GAAG9E,OAAnB,CAKA,IAAIiB,EAAQ65C,EAAK6kB,WAAWo5B,EAAGj0F,IAC5B7D,EAAMjB,OAAS,GAChBqlB,EAAE21B,QAAQ,GAEZ31B,EAAE45B,SAASh+C,EALV,MAHCokB,EAAEq6B,aAAa,EAAGggB,GAClBA,EAAQ,EASZ,OAAOr6C,EAAE06B,UACV,EAWDjF,EAAKq+C,UAAY,SAASl4F,GACxB,OAAoB,IAAjBA,EAAMjB,OACA86C,EAAKs+C,YAAYn4F,GAEN,KAAjBA,EAAMjB,OACA86C,EAAKu+C,YAAYp4F,GAEnB,IACR,EAUD65C,EAAKs+C,YAAc,SAASn4F,GAC1B,GAAoB,IAAjBA,EAAMjB,OACP,OAAO,KAGT,IADA,IAAI+4F,EAAK,GACDj0F,EAAI,EAAGA,EAAI7D,EAAMjB,SAAU8E,EACjCi0F,EAAGx3F,KAAKN,EAAMd,WAAW2E,IAE3B,OAAOi0F,EAAG58E,KAAK,IAChB,EAUD2+B,EAAKu+C,YAAc,SAASp4F,GAC1B,GAAoB,KAAjBA,EAAMjB,OACP,OAAO,KAKT,IAHA,IAAI+4F,EAAK,GACLO,EAAa,GACbC,EAAe,EACXz0F,EAAI,EAAGA,EAAI7D,EAAMjB,OAAQ8E,GAAK,EAAG,CAGvC,IAFA,IAAIkxE,EAAMl7B,EAAK8N,WAAW3nD,EAAM6D,GAAK7D,EAAM6D,EAAI,IAE9B,MAAXkxE,EAAI,IAAsB,MAARA,GACtBA,EAAMA,EAAIl/D,OAAO,GAEnB,GAAW,MAARk/D,EAAa,CACd,IAAIn2B,EAAOy5C,EAAWA,EAAWt5F,OAAS,GACtCg1B,EAAM+jE,EAAG/4F,OACT6/C,GAAQ7qB,IAAQ6qB,EAAK1+C,IAAM,GAG7B0+C,EAAK1+C,IAAM6zB,EACP6qB,EAAK1+C,IAAM0+C,EAAK13B,MACjBmxE,EAAWC,GAAcp4F,IAAMm4F,EAAWC,GAAcpxE,QACzDoxE,EAAeD,EAAWt5F,OAAS,IALrCs5F,EAAW/3F,KAAK,CAAC4mB,MAAO6M,EAAK7zB,IAAK6zB,GAQrC,CACD+jE,EAAGx3F,KAAKy0E,EACT,CACD,GAAGsjB,EAAWt5F,OAAS,EAAG,CACxB,IAAIw5F,EAAQF,EAAWC,GAEpBC,EAAMr4F,IAAMq4F,EAAMrxE,MAAQ,IAC3B4wE,EAAG5gF,OAAOqhF,EAAMrxE,MAAOqxE,EAAMr4F,IAAMq4F,EAAMrxE,MAAQ,EAAG,IACjC,IAAhBqxE,EAAMrxE,OACP4wE,EAAGnlE,QAAQ,IAEI,IAAd4lE,EAAMr4F,KACP43F,EAAGx3F,KAAK,IAGb,CACD,OAAOw3F,EAAG58E,KAAK,IAChB,EAWD2+B,EAAK66B,cAAgB,SAASngE,EAASoV,GAMrC,GALsB,mBAAZpV,IACRoV,EAAWpV,EACXA,EAAU,CAAC,GAEbA,EAAUA,GAAW,CAAC,EACnB,UAAWslC,IAAStlC,EAAQu0B,OAC7B,OAAOnf,EAAS,KAAMkwB,EAAK86B,OAE7B,GAAwB,oBAAdvd,WACR,wBAAyBA,WACzBA,UAAUohC,oBAAsB,EAEhC,OADA3+C,EAAK86B,MAAQvd,UAAUohC,oBAChB7uE,EAAS,KAAMkwB,EAAK86B,OAE7B,GAAqB,oBAAXR,OAGR,OADAt6B,EAAK86B,MAAQ,EACNhrD,EAAS,KAAMkwB,EAAK86B,OAE7B,GAAmB,oBAAT8jB,KAGR,OADA5+C,EAAK86B,MAAQ,EACNhrD,EAAS,KAAMkwB,EAAK86B,OAI7B,IAAI+jB,EAAUl4B,IAAIm4B,gBAAgB,IAAIF,KAAK,CAAC,IAC1C,WACErjF,KAAKkS,iBAAiB,WAAW,SAASpd,GAIxC,IAFA,IAAI0uF,EAAKr2F,KAAK8a,MACVw7E,EAAKD,EAAK,EACRr2F,KAAK8a,MAAQw7E,IACnBzjF,KAAK4/D,YAAY,CAAC4jB,GAAIA,EAAIC,GAAIA,GAC/B,GACF,EAAC1xF,WACJ,OAAQ,CAACnG,KAAM,6BAKf,SAAS83F,EAAOzmE,EAAK0mE,EAASzkB,GAC5B,GAAe,IAAZykB,EAAe,CAEhB,IAAIC,EAAMh7F,KAAKC,MAAMo0B,EAAIhO,QAAO,SAAS20E,EAAKjnE,GAC5C,OAAOinE,EAAMjnE,CACd,GAAE,GAAKM,EAAItzB,QAGZ,OAFA86C,EAAK86B,MAAQ32E,KAAKq0B,IAAI,EAAG2mE,GACzBx4B,IAAIy4B,gBAAgBP,GACb/uE,EAAS,KAAMkwB,EAAK86B,MAC5B,EAOH,SAAaL,EAAY3qD,GAGvB,IAFA,IAAI4qD,EAAU,GACVpiC,EAAU,GACNtuC,EAAI,EAAGA,EAAIywE,IAAczwE,EAAG,CAClC,IAAI6zE,EAAS,IAAIvD,OAAOukB,GACxBhhB,EAAOpwD,iBAAiB,WAAW,SAASpd,GAE1C,GADAioC,EAAQ7xC,KAAK4J,EAAEjJ,MACZkxC,EAAQpzC,SAAWu1E,EAAY,CAChC,IAAI,IAAIzwE,EAAI,EAAGA,EAAIywE,IAAczwE,EAC/B0wE,EAAQ1wE,GAAGixE,YAEbnrD,EAAS,KAAMwoB,EAChB,CACF,IACDoiC,EAAQj0E,KAAKo3E,EACd,CACD,IAAQ7zE,EAAI,EAAGA,EAAIywE,IAAczwE,EAC/B0wE,EAAQ1wE,GAAGmxE,YAAYnxE,EAE1B,CAzBCiK,CAAIwmE,GAAY,SAAS9uD,EAAK2sB,GAC5B9f,EAAI/xB,KA0BR,SAAgBg0E,EAAYniC,GAG1B,IADA,IAAI+mD,EAAW,GACP5+D,EAAI,EAAGA,EAAIg6C,IAAch6C,EAG/B,IAFA,IAAI6+D,EAAKhnD,EAAQ7X,GACb8+D,EAAUF,EAAS5+D,GAAK,GACpBz2B,EAAI,EAAGA,EAAIywE,IAAczwE,EAC/B,GAAGy2B,IAAMz2B,EAAT,CAGA,IAAIy1D,EAAKnnB,EAAQtuC,IACbs1F,EAAGP,GAAKt/B,EAAGs/B,IAAMO,EAAGP,GAAKt/B,EAAGu/B,IAC7Bv/B,EAAGs/B,GAAKO,EAAGP,IAAMt/B,EAAGs/B,GAAKO,EAAGN,KAC7BO,EAAQ94F,KAAKuD,EAJd,CAWL,OAAOq1F,EAAS70E,QAAO,SAASgO,EAAK+mE,GACnC,OAAOp7F,KAAKq0B,IAAIA,EAAK+mE,EAAQr6F,OAC9B,GAAE,EACJ,CAjDYslB,CAAOiwD,EAAYniC,IAC5B2mD,EAAOzmE,EAAK0mE,EAAU,EAAGzkB,EAC1B,GACF,CAhBDwkB,CAAO,GAAI,EAAG,GA+Df,mBC9+ED,IAAItgD,EAAQrqB,EAAQ,OACpBA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OACRA,EAAQ,OAGR,IAAIgyB,EAAO3H,EAAM2H,KAGbsH,EAAMh5B,EAAOiE,QAAU8lB,EAAMiP,IAAMjP,EAAMiP,KAAO,CAAC,EACjDC,EAAOD,EAAIC,KAGX2xC,EAAc,CAAC,EACnBA,EAAW,GAAS3xC,EAAI,WACxB2xC,EAAW,WAAiB,KAC5BA,EAAW,EAAQ3xC,EAAI,YACvB2xC,EAAW,YAAkB,IAC7BA,EAAW,EAAQ3xC,EAAI,aACvB2xC,EAAW,aAAmB,IAC9BA,EAAW,GAAS3xC,EAAI,oBACxB2xC,EAAW,oBAA0B,KACrCA,EAAW,EAAQ3xC,EAAI,iBACvB2xC,EAAW,iBAAuB,IAClCA,EAAW,GAAS3xC,EAAI,uBACxB2xC,EAAW,uBAA6B,KACxCA,EAAW,EAAQ3xC,EAAI,aACvB2xC,EAAW,aAAmB,IAI9B,IAAIt4C,EAAqBvI,EAAMiP,IAAI8W,IAAIxd,mBAGnCu4C,EAA2B,CAC7Bx3F,KAAM,cACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,6BACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACbM,YAAa,iBACbljD,MAAO,CAAC,CACNgE,KAAM,qCACNu+C,SAAUF,EAAKG,MAAMmB,iBACrBzgD,KAAM,EACN0/C,aAAa,EACbsG,UAAU,EACVlpD,MAAO,CAAC,CACNgE,KAAM,6CACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKG,QAChBD,aAAa,EACbE,QAAS,iBAEV,CACD9+C,KAAM,0CACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKG,QAChBD,aAAa,EACbE,QAAS,oBACR,CACD9+C,KAAM,uCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,iDACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKK,IAChBH,aAAa,EACbE,QAAS,wBACR,CACD9+C,KAAM,kDACNu+C,SAAUF,EAAKG,MAAMC,UACrByG,UAAU,EACVhG,YAAa,6BAEd,CACDl/C,KAAM,oCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACbM,YAAa,cACZ,CACDl/C,KAAM,sCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EAKb5iD,MAAO,CAAC,CAENgE,KAAM,sDACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAK+B,QAChB7B,aAAa,EACbsG,UAAU,EACVpG,QAAS,wBACR,CAED9+C,KAAM,8DACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKgC,gBAChB9B,aAAa,EACbsG,UAAU,EACVpG,QAAS,gCACR,CAED9+C,KAAM,qDACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAK+B,QAChB7B,aAAa,EACbsG,UAAU,EACVpG,QAAS,wBACR,CAED9+C,KAAM,6DACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKgC,gBAChB9B,aAAa,EACbsG,UAAU,EACVpG,QAAS,kCAEV,CAED9+C,KAAM,qCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACbM,YAAa,eAGfD,EACA,CAEEj/C,KAAM,4CACNu+C,SAAUF,EAAKG,MAAMmB,iBACrBzgD,KAAM,EACN0/C,aAAa,EACbsG,UAAU,EACVlpD,MAAO,CAAC,CACNgE,KAAM,+CACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKS,UAChBP,aAAa,EAEbS,sBAAuB,wBAExB,CAEDr/C,KAAM,6CACNu+C,SAAUF,EAAKG,MAAMmB,iBACrBzgD,KAAM,EACN0/C,aAAa,EACbsG,UAAU,EACVlpD,MAAO,CAAC,CACNgE,KAAM,gDACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKS,UAChBP,aAAa,EAEbS,sBAAuB,yBAExB,CAEDr/C,KAAM,wCACNu+C,SAAUF,EAAKG,MAAMmB,iBACrBzgD,KAAM,EACN0/C,aAAa,EACbM,YAAa,iBACbgG,UAAU,KAEX,CAEDllD,KAAM,iCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CAENgE,KAAM,2CACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKK,IAChBH,aAAa,EACbE,QAAS,oBACR,CACD9+C,KAAM,kDACNu+C,SAAUF,EAAKG,MAAMC,UACrByG,UAAU,EACVhG,YAAa,yBAEd,CAEDl/C,KAAM,6BACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKS,UAChBP,aAAa,EACbS,sBAAuB,mBAIvBo4C,EAA8B,CAChCz3F,KAAM,SACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,uBACNu+C,SAAUF,EAAKG,MAAMmB,iBACrBzgD,KAAM,EACN0/C,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,2CACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKG,MAAMG,SACjBC,aAAa,EACbsG,UAAU,EACVlpD,MAAO,CAAC,CACNgE,KAAM,qDACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKK,IAChBH,aAAa,EACbE,QAAS,eAIZ,CACD9+C,KAAM,0BACNu+C,SAAUF,EAAKG,MAAMmB,iBACrBzgD,KAAM,EACN0/C,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,8CACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKG,MAAMG,SACjBC,aAAa,EACbsG,UAAU,EACVlpD,MAAO,CAAC,CACNgE,KAAM,wDACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKK,IAChBH,aAAa,EACbE,QAAS,cACR,CACD9+C,KAAM,qDACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,+DACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKK,IAChBH,aAAa,EACbE,QAAS,wBAKd,CACD9+C,KAAM,oBACNu+C,SAAUF,EAAKG,MAAMmB,iBACrBzgD,KAAM,EACNgmD,UAAU,EACVlpD,MAAO,CAAC,CACNgE,KAAM,+BACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKG,MAAMK,QACjBD,aAAa,EACbE,QAAS,gBAEV,CACD9+C,KAAM,sBACNu+C,SAAUF,EAAKG,MAAMmB,iBACrBzgD,KAAM,EACNgmD,UAAU,EACVlpD,MAAO,CAAC,CACNgE,KAAM,yBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKG,MAAMK,QACjBD,aAAa,EACbE,QAAS,eAMX44C,EAAoC,CACtC13F,KAAM,2BACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACbM,YAAa,2BACbljD,MAAO,CAAC,CACNgE,KAAM,mCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKG,QAChBD,aAAa,EACbE,QAAS,mCACR,CAED9+C,KAAM,mCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACbM,YAAa,mCAGfD,EACA,CACEj/C,KAAM,sCACNu+C,SAAUF,EAAKG,MAAMmB,iBACrBzgD,KAAM,EACN0/C,aAAa,EACbsG,UAAU,EACVpG,QAAS,qCACT9iD,MAAO,CAAC,CACNgE,KAAM,sCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CACNgE,KAAM,2CACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKK,IAChBH,aAAa,GACZ,CACD5+C,KAAM,4CACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAK4B,IAChB1B,aAAa,SAOjB+4C,EAAgC,CAClC33F,KAAM,uBACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACbM,YAAa,MACbljD,MAAO,CACL07F,EAAmC,CAEjC13F,KAAM,0CACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKC,SAChBC,aAAa,EACb5iD,MAAO,CAAC,CAENgE,KAAM,oDACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKK,IAChBH,aAAa,EACbE,QAAS,mBACR,CACD9+C,KAAM,qDACNu+C,SAAUF,EAAKG,MAAMC,UACrByG,UAAU,EACVhG,YAAa,wBAEd,CAEDl/C,KAAM,iCACNu+C,SAAUF,EAAKG,MAAMC,UACrBv/C,KAAMm/C,EAAKK,KAAKS,UAChBP,aAAa,EACbS,sBAAuB,kBAuG7B,SAASu4C,EAActyD,EAAK7yB,GACJ,iBAAZA,IACRA,EAAU,CAAColF,UAAWplF,IAKxB,IAFA,IACIu7D,EADAnyB,EAAO,KAEH95C,EAAI,EAAY,OAAT85C,GAAiB95C,EAAIujC,EAAIoM,WAAWz0C,SAAU8E,EAC3DisE,EAAO1oC,EAAIoM,WAAW3vC,IACnB0Q,EAAQvT,MAAQuT,EAAQvT,OAAS8uE,EAAK9uE,MAE/BuT,EAAQzS,MAAQyS,EAAQzS,OAASguE,EAAKhuE,MAEtCyS,EAAQolF,WAAaplF,EAAQolF,YAAc7pB,EAAK6pB,aAHxDh8C,EAAOmyB,GAOX,OAAOnyB,CACR,CA7GD8J,EAAIqnB,qBAAuB,SAAS8qB,EAAKhrC,GAKvC,IAJA,IAGI/uD,EAAKiwE,EAAM1oC,EAHXuW,EAAO,GAIHk8C,EAAK,EAAGA,EAAKD,EAAI97F,MAAMiB,SAAU86F,EAAI,CAE3Ch6F,EAAM+5F,EAAI97F,MAAM+7F,GAKhB,IAAI,IAAIh2F,EAAI,EAAGA,EAAIhE,EAAI/B,MAAMiB,SAAU8E,EACrCujC,EAAM,CAAC,EACP0oC,EAAOjwE,EAAI/B,MAAM+F,GACjBujC,EAAIpmC,KAAOm/C,EAAKwE,SAASmrB,EAAKhyE,MAAM,GAAGA,OACvCspC,EAAItpC,MAAQgyE,EAAKhyE,MAAM,GAAGA,MAC1BspC,EAAI0yD,cAAgBhqB,EAAKhyE,MAAM,GAAGkD,KAE/BomC,EAAIpmC,QAAQ0mD,IACbtgB,EAAItlC,KAAO4lD,EAAKtgB,EAAIpmC,MACjBomC,EAAItlC,QAAQu3F,IACbjyD,EAAIuyD,UAAYN,EAAYjyD,EAAItlC,QAGjC8sD,IACDA,EAAG9lB,OAAO1B,EAAIpmC,MACd4tD,EAAG9lB,OAAO1B,EAAItpC,QAEhB6/C,EAAKr9C,KAAK8mC,EAEb,CAED,OAAOuW,CACR,EAQD8J,EAAIsyC,qBAAuB,SAASvmD,GAIlC,IAHA,IAAImK,EAAO,GAGHk8C,EAAK,EAAGA,EAAKrmD,EAAWz0C,SAAU86F,EAQxC,IANA,IAAIG,EAAMxmD,EAAWqmD,GAIjB74F,EAAOm/C,EAAKwE,SAASq1C,EAAIl8F,MAAM,GAAGA,OAClCiK,EAASiyF,EAAIl8F,MAAM,GAAGA,MAClBqqE,EAAK,EAAGA,EAAKpgE,EAAOhJ,SAAUopE,EAAI,CACxC,IAAI/gC,EAAM,CAAC,EAYX,GAXAA,EAAIpmC,KAAOA,EACXomC,EAAItpC,MAAQiK,EAAOogE,GAAIrqE,MACvBspC,EAAI0yD,cAAgB/xF,EAAOogE,GAAInnE,KAE5BomC,EAAIpmC,QAAQ0mD,IACbtgB,EAAItlC,KAAO4lD,EAAKtgB,EAAIpmC,MACjBomC,EAAItlC,QAAQu3F,IACbjyD,EAAIuyD,UAAYN,EAAYjyD,EAAItlC,QAIjCslC,EAAIpmC,OAAS0mD,EAAKuyC,iBAAkB,CACrC7yD,EAAI2hD,WAAa,GACjB,IAAI,IAAIztC,EAAK,EAAGA,EAAKlU,EAAItpC,MAAMiB,SAAUu8C,EACvClU,EAAI2hD,WAAWzoF,KAAKmnD,EAAIyyC,6BAA6B9yD,EAAItpC,MAAMw9C,IAElE,CACDqC,EAAKr9C,KAAK8mC,EACX,CAGH,OAAOuW,CACR,EA8DD,IAAIw8C,EAA2B,SAAS11C,EAAKrd,EAAKgzD,GAChD,IAAIxjE,EAAS,CAAC,EAEd,GAAG6tB,IAAQiD,EAAK,cACd,OAAO9wB,EAGNwjE,IACDxjE,EAAS,CACPa,KAAM,CACJ4iE,aAAc3yC,EAAI,MAEpBwa,IAAK,CACHm4B,aAAc3yC,EAAI,KAClBjwB,KAAM,CACJ4iE,aAAc3yC,EAAI,OAGtBmwB,WAAY,KAIhB,IAAIj3B,EAAU,CAAC,EACXmG,EAAS,GACb,IAAI5G,EAAK2G,SAAS1f,EAAKmyD,EAA6B34C,EAASmG,GAAS,CACpE,IAAIl1C,EAAQ,IAAI7P,MAAM,2CAEtB,MADA6P,EAAMk1C,OAASA,EACTl1C,CACP,CAkBD,YAhBuBxS,IAApBuhD,EAAQ05C,UACT1jE,EAAOa,KAAOb,EAAOa,MAAQ,CAAC,EAC9Bb,EAAOa,KAAK4iE,aAAel6C,EAAKwE,SAAS/D,EAAQ05C,eAGzBj7F,IAAvBuhD,EAAQ25C,aACT3jE,EAAOsrC,IAAMtrC,EAAOsrC,KAAO,CAAC,EAC5BtrC,EAAOsrC,IAAIm4B,aAAel6C,EAAKwE,SAAS/D,EAAQ25C,YAChD3jE,EAAOsrC,IAAIzqC,KAAOb,EAAOsrC,IAAIzqC,MAAQ,CAAC,EACtCb,EAAOsrC,IAAIzqC,KAAK4iE,aAAel6C,EAAKwE,SAAS/D,EAAQ45C,sBAG7Bn7F,IAAvBuhD,EAAQi3B,aACTjhD,EAAOihD,WAAaj3B,EAAQi3B,WAAW34E,WAAW,IAG7C03B,CACR,EAUG6jE,EAAyB,SAASlmF,GACpC,OAAOmzC,EAAKnzC,EAAQmmF,eAClB,IAAK,wBAEL,IAAK,uBACH,OAAOliD,EAAMoW,GAAG2W,KAAKjkE,SACvB,IAAK,uBACH,OAAOk3C,EAAMoW,GAAGgS,IAAIt/D,SACtB,IAAK,0BAML,IAAK,aACH,OAAOk3C,EAAMoW,GAAGie,OAAOvrE,SALzB,IAAK,0BACH,OAAOk3C,EAAMoW,GAAGke,OAAOxrE,SACzB,IAAK,0BACH,OAAOk3C,EAAMoW,GAAGY,OAAOluD,SAGzB,QACE,IAAIuQ,EAAQ,IAAI7P,MACd,qBAAuBuS,EAAQvT,KAA/B,mCAGF,MADA6Q,EAAM6oF,aAAenmF,EAAQmmF,aACvB7oF,EAEX,EAWG8oF,EAAmB,SAASpmF,GAC9B,IACI8pE,EADAtS,EAAOx3D,EAAQq9D,YAGnB,OAAO7F,EAAK2uB,cACV,KAAKhzC,EAAKkzC,sBAEV,KAAKlzC,EAAKmzC,qBAER,MACF,KAAKnzC,EAAK,cACR,IAAIjwB,EAAMyqC,EAwBJrwD,EApBN,QAAYxS,KADZo4B,EAAOiwB,EAAKqkB,EAAK+uB,oBAAoB54B,IAAIzqC,KAAK4iE,qBACFh7F,IAAnBm5C,EAAMoW,GAAGn3B,GAIhC,MAHI5lB,EAAQ,IAAI7P,MAAM,mCAChByiD,IAAMsnB,EAAK+uB,oBAAoB54B,IAAIzqC,KAAK4iE,aAC9CxoF,EAAM/P,KAAO21B,EACP5lB,EAIR,QAAWxS,KADX6iE,EAAMxa,EAAKqkB,EAAK+uB,oBAAoB54B,IAAIm4B,qBACGh7F,IAAnBm5C,EAAM0pB,IAAIA,GAIhC,MAHIrwD,EAAQ,IAAI7P,MAAM,8BAChByiD,IAAMsnB,EAAK+uB,oBAAoB54B,IAAIm4B,aACzCxoF,EAAM/P,KAAOogE,EACPrwD,EAOR,GAJAqwD,EAAM1pB,EAAM0pB,IAAIA,GAAK5gE,OAAOk3C,EAAMoW,GAAGn3B,GAAMn2B,eAI/BjC,KADZo4B,EAAOiwB,EAAKqkB,EAAK+uB,oBAAoBrjE,KAAK4iE,qBACEh7F,IAAnBm5C,EAAMoW,GAAGn3B,GAIhC,MAHI5lB,EAAQ,IAAI7P,MAAM,0CAChByiD,IAAMsnB,EAAK+uB,oBAAoBrjE,KAAK4iE,aAC1CxoF,EAAM/P,KAAO21B,EACP5lB,EAGRwsE,EAAS7lC,EAAMo/B,IAAIt2E,OACjBk3C,EAAMoW,GAAGn3B,GAAMn2B,SAAU4gE,EAAK6J,EAAK+uB,oBAAoBjjB,YAM7D,OAAO9L,EAAKnc,UAAU52B,OACpBzkB,EAAQq6C,GAAGzP,SAASL,WAAYvqC,EAAQu8C,UAAWutB,EAEtD,EAmjCD,SAAS0c,EAAU3zD,GAQjB,IANA,IAII0oC,EAAMjwE,EAJN89C,EAAOwC,EAAK7+C,OACd6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,IAI9C9Q,EAAQvI,EAAIoM,WACR3vC,EAAI,EAAGA,EAAI8rC,EAAM5wC,SAAU8E,EAAG,CAEpC,IAAI/F,GADJgyE,EAAOngC,EAAM9rC,IACI/F,MAGbg8F,EAAgB35C,EAAKK,KAAK6B,gBAC3B,kBAAmBytB,IACpBgqB,EAAgBhqB,EAAKgqB,iBAEA35C,EAAKK,KAAK0B,OAC7BpkD,EAAQ06C,EAAMqB,KAAKpjB,WAAW34B,IAQlC+B,EAAMsgD,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAK4B,KAAK,EAAM,CAC3DjC,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAE1DN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAASsrB,EAAK9uE,MAAM89C,YAE3BqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWu5C,GAAe,EAAOh8F,OAG5D6/C,EAAK7/C,MAAMwC,KAAKT,EACjB,CAED,OAAO89C,CACR,CAuCD,SAASq9C,EAAmBrrD,GAE1B,IADA,IAAImgC,EACIjsE,EAAI,EAAGA,EAAI8rC,EAAM5wC,SAAU8E,EAAG,CAapC,QATwB,KAHxBisE,EAAOngC,EAAM9rC,IAGE/B,OACVguE,EAAK9uE,MAAQ8uE,EAAK9uE,QAAQymD,EAAIC,KAC/BooB,EAAKhuE,KAAO2lD,EAAIC,KAAKooB,EAAK9uE,MAClB8uE,EAAK6pB,WAAa7pB,EAAK6pB,aAAaN,IAC5CvpB,EAAKhuE,KAAO2lD,EAAIC,KAAK2xC,EAAYvpB,EAAK6pB,mBAKlB,IAAd7pB,EAAK9uE,KAAsB,CACnC,IAAG8uE,EAAKhuE,QAAQguE,EAAKhuE,QAAQ2lD,EAAIC,MAK/B,MAFI71C,EAAQ,IAAI7P,MAAM,kCAChBi5F,UAAYnrB,EACZj+D,EAJNi+D,EAAK9uE,KAAOymD,EAAIC,KAAKooB,EAAKhuE,KAM7B,CAUD,QAP6B,IAAnBguE,EAAK6pB,WACV7pB,EAAKhuE,MAAQguE,EAAKhuE,QAAQu3F,IAC3BvpB,EAAK6pB,UAAYN,EAAYvpB,EAAKhuE,OAKnCguE,EAAK9uE,OAAS0mD,EAAKuyC,mBACpBnqB,EAAKorB,kBAAmB,EACxBprB,EAAKgqB,cAAgB35C,EAAKK,KAAKC,UAC3BqvB,EAAKhyE,OAASgyE,EAAKiZ,YAAY,CACjCjZ,EAAKhyE,MAAQ,GACb,IAAI,IAAIw9C,EAAK,EAAGA,EAAKw0B,EAAKiZ,WAAWhqF,SAAUu8C,EAC7Cw0B,EAAKhyE,MAAMwC,KAAKmnD,EAAI0zC,2BAClBC,EAA4BtrB,EAAKiZ,WAAWztC,KAEjD,CAID,IAAIzpC,EADN,QAAyB,IAAfi+D,EAAKhyE,MAGb,MAFI+T,EAAQ,IAAI7P,MAAM,mCAChBi5F,UAAYnrB,EACZj+D,CAET,CACF,CAWD,SAASupF,EAA4BlxF,EAAGqK,GAWtC,GAVAA,EAAUA,GAAW,CAAC,OAGD,IAAXrK,EAAEpI,MACPoI,EAAEshB,IAAMthB,EAAEshB,MAAMi8B,EAAIC,OACrBx9C,EAAEpI,KAAO2lD,EAAIC,KAAKx9C,EAAEshB,UAKL,IAATthB,EAAEshB,GAAoB,CAC9B,IAAGthB,EAAEpI,QAAQoI,EAAEpI,QAAQ2lD,EAAIC,MAKzB,MAFI71C,EAAQ,IAAI7P,MAAM,gCAChBq5F,UAAYnxF,EACZ2H,EAJN3H,EAAEshB,GAAKi8B,EAAIC,KAAKx9C,EAAEpI,KAMrB,CAED,QAAsB,IAAZoI,EAAEpM,MACV,OAAOoM,EAMT,GAAc,aAAXA,EAAEpI,KAAqB,CAExB,IAAI8hD,EAAS,EACT1H,EAAK,EACLqZ,EAAK,EACNrrD,EAAEoxF,mBACHp/C,GAAM,IACN0H,EAAS,GAER15C,EAAEqxF,iBACHr/C,GAAM,GACN0H,EAAS,GAER15C,EAAEsxF,kBACHt/C,GAAM,GACN0H,EAAS,GAER15C,EAAEuxF,mBACHv/C,GAAM,GACN0H,EAAS,GAER15C,EAAEwxF,eACHx/C,GAAM,EACN0H,EAAS,GAER15C,EAAEyxF,cACHz/C,GAAM,EACN0H,EAAS,GAER15C,EAAE0xF,UACH1/C,GAAM,EACN0H,EAAS,GAER15C,EAAE2xF,eACH3/C,GAAM,EACN0H,EAAS,GAER15C,EAAE4xF,eACHvmC,GAAM,IACN3R,EAAS,GAIX,IAAI9lD,EAAQ4C,OAAOC,aAAaijD,GACtB,IAAP2R,EACDz3D,GAAS4C,OAAOC,aAAau7C,GAAMx7C,OAAOC,aAAa40D,GACxC,IAAPrZ,IACRp+C,GAAS4C,OAAOC,aAAau7C,IAE/BhyC,EAAEpM,MAAQqiD,EAAK7+C,OACb6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKS,WAAW,EAAOnjD,EACrD,MAAM,GAAc,qBAAXoM,EAAEpI,KAEVoI,EAAEpM,MAAQqiD,EAAK7+C,OACb6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,IAE/Cv2C,EAAE6xF,IACH7xF,EAAEpM,MAAMA,MAAMwC,KAAK6/C,EAAK7+C,OACtB6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKmB,SAAS,EACzCjhD,OAAOC,aAAa,OAErB,sBAAuBuJ,GACxBA,EAAEpM,MAAMA,MAAMwC,KAAK6/C,EAAK7+C,OACtB6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKG,SAAS,EACzCR,EAAKsG,aAAav8C,EAAE8xF,mBAAmBl9C,kBAEtC,GAAc,gBAAX50C,EAAEpI,KAAwB,CAElCoI,EAAEpM,MAAQqiD,EAAK7+C,OACb6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,IAClD,IAAIu5C,EAAM9vF,EAAEpM,MAAMA,MAClB,IAAI,IAAI+J,KAAOqC,GACC,IAAXA,EAAErC,KAIFA,KAAO6/C,EACRsyC,EAAI15F,KAAK6/C,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KACnD,EAAOV,EAAKqE,SAASkD,EAAK7/C,IAAMi3C,cACJ,IAAtBj3C,EAAIoP,QAAQ,MAEpB+iF,EAAI15F,KAAK6/C,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KACnD,EAAOV,EAAKqE,SAAS38C,GAAKi3C,aAGjC,MAAM,GAAc,eAAX50C,EAAEpI,KAAuB,CAG7B8hD,EAAS,EACT1H,EAAK,EAENhyC,EAAE0yC,SACHV,GAAM,IACN0H,EAAS,GAER15C,EAAEw6E,SACHxoC,GAAM,GACN0H,EAAS,GAER15C,EAAE+xF,QACH//C,GAAM,GACN0H,EAAS,GAER15C,EAAEgyF,UACHhgD,GAAM,GACN0H,EAAS,GAER15C,EAAEiyF,WACHjgD,GAAM,EACN0H,EAAS,GAER15C,EAAEkyF,QACHlgD,GAAM,EACN0H,EAAS,GAER15C,EAAEmyF,UACHngD,GAAM,EACN0H,EAAS,GAER15C,EAAEoyF,QACHpgD,GAAM,EACN0H,EAAS,GAIP9lD,EAAQ4C,OAAOC,aAAaijD,GACtB,IAAP1H,IACDp+C,GAAS4C,OAAOC,aAAau7C,IAE/BhyC,EAAEpM,MAAQqiD,EAAK7+C,OACb6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKS,WAAW,EAAOnjD,EACrD,MAAM,GAAc,mBAAXoM,EAAEpI,MAAwC,kBAAXoI,EAAEpI,KAA0B,CAEnEoI,EAAEpM,MAAQqiD,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,IAGtE,IAAI,IAAInmB,EAAI,EAAGA,EAAIpwB,EAAEqyF,SAASx9F,SAAUu7B,EAAG,CAErCx8B,GADJ0+F,EAAUtyF,EAAEqyF,SAASjiE,IACDx8B,MAEpB,GAAoB,IAAjB0+F,EAAQx7F,MAAcw7F,EAAQ1E,IAE/B,GAAa,QADbh6F,EAAQ06C,EAAMqB,KAAKg+C,YAAY2E,EAAQ1E,KAKrC,MAHIjmF,EAAQ,IAAI7P,MACd,8DACIq5F,UAAYnxF,EACZ2H,OAEiB,IAAjB2qF,EAAQx7F,OAGdlD,EADC0+F,EAAQ/3C,IACDtE,EAAKqE,SAASrE,EAAKqE,SAASg4C,EAAQ/3C,MAGpCtE,EAAKqE,SAAS1mD,IAG1BoM,EAAEpM,MAAMA,MAAMwC,KAAK6/C,EAAK7+C,OACtB6+C,EAAKG,MAAMmB,iBAAkB+6C,EAAQx7F,MAAM,EAC3ClD,GACH,CACF,MAAM,GAAc,cAAXoM,EAAEpI,MAAwByS,EAAQw3D,KAAM,CAEhD,IAAK,iBAAiB3nC,KAAKl6B,EAAE04E,UAC1B14E,EAAE04E,QAAQ7jF,OAAS,GAAOmL,EAAE04E,QAAQ7jF,OAAS,IAC9C,MAAM,IAAIiD,MAAM,gCAGlBkI,EAAEpM,MAAQqiD,EAAK7+C,OACb6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAK8B,WAAW,EAAOp4C,EAAE04E,QACvD,MAAM,GAAc,yBAAX14E,EAAEpI,MAAmCyS,EAAQw3D,KAAM,CAC3D,IAAI0wB,EAAMloF,EAAQw3D,KAAK2wB,+BACvBxyF,EAAEyyF,qBAAuBF,EAAIxtB,QAE7B/kE,EAAEpM,MAAQqiD,EAAK7+C,OACb6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKM,aAAa,EAAO27C,EAAI39C,WAC3D,MAAM,GAAc,2BAAX50C,EAAEpI,MAAqCyS,EAAQw3D,KAAM,CAE7D7hE,EAAEpM,MAAQqiD,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,IAClEu5C,EAAM9vF,EAAEpM,MAAMA,MAElB,GAAGoM,EAAE0yF,cAAe,CAClB,IAAIA,GAAqC,IAApB1yF,EAAE0yF,cACrBroF,EAAQw3D,KAAK2wB,+BAA+B59C,WAC5C50C,EAAE0yF,cACJ5C,EAAI15F,KACF6/C,EAAK7+C,OAAO6+C,EAAKG,MAAMmB,iBAAkB,GAAG,EAAOm7C,GACtD,CAED,GAAG1yF,EAAE2yF,oBAAqB,CACxB,IAAIA,EAAsB,CACxB18C,EAAK7+C,OAAO6+C,EAAKG,MAAMmB,iBAAkB,GAAG,EAAM,CAChDs5C,GAAoC,IAA1B7wF,EAAE2yF,oBACVtoF,EAAQw3D,KAAK8C,OAAS3kE,EAAE2yF,wBAG9B7C,EAAI15F,KACF6/C,EAAK7+C,OAAO6+C,EAAKG,MAAMmB,iBAAkB,GAAG,EAAMo7C,GACrD,CAED,GAAG3yF,EAAE6kE,aAAc,CACjB,IAAIA,EAAev2B,EAAMqB,KAAK6kB,YAA8B,IAAnBx0D,EAAE6kE,aACzCx6D,EAAQw3D,KAAKgD,aAAe7kE,EAAE6kE,cAChCirB,EAAI15F,KACF6/C,EAAK7+C,OAAO6+C,EAAKG,MAAMmB,iBAAkB,GAAG,EAAOstB,GACtD,CACF,MAAM,GAAc,0BAAX7kE,EAAEpI,KAAkC,CAC5CoI,EAAEpM,MAAQqiD,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,IAClEu5C,EAAM9vF,EAAEpM,MAAMA,MAAlB,IASI0+F,EANAM,EAAS38C,EAAK7+C,OAChB6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,IAG9Cs8C,EAAuB58C,EAAK7+C,OAC9B6+C,EAAKG,MAAMmB,iBAAkB,GAAG,EAAM,IAExC,IAAQnnB,EAAI,EAAGA,EAAIpwB,EAAEqyF,SAASx9F,SAAUu7B,EAAG,CAErCx8B,GADJ0+F,EAAUtyF,EAAEqyF,SAASjiE,IACDx8B,MAEpB,GAAoB,IAAjB0+F,EAAQx7F,MAAcw7F,EAAQ1E,IAE/B,GAAa,QADbh6F,EAAQ06C,EAAMqB,KAAKg+C,YAAY2E,EAAQ1E,KAKrC,MAHIjmF,EAAQ,IAAI7P,MACd,8DACIq5F,UAAYnxF,EACZ2H,OAEiB,IAAjB2qF,EAAQx7F,OAGdlD,EADC0+F,EAAQ/3C,IACDtE,EAAKqE,SAASrE,EAAKqE,SAASg4C,EAAQ/3C,MAGpCtE,EAAKqE,SAAS1mD,IAG1Bi/F,EAAqBj/F,MAAMwC,KAAK6/C,EAAK7+C,OACnC6+C,EAAKG,MAAMmB,iBAAkB+6C,EAAQx7F,MAAM,EAC3ClD,GACH,CAGDg/F,EAAOh/F,MAAMwC,KAAK6/C,EAAK7+C,OACrB6+C,EAAKG,MAAMmB,iBAAkB,GAAG,EAAM,CAACs7C,KACzC/C,EAAI15F,KAAKw8F,EACV,CAIC,IAAIjrF,EADN,QAAsB,IAAZ3H,EAAEpM,MAGV,MAFI+T,EAAQ,IAAI7P,MAAM,mCAChBq5F,UAAYnxF,EACZ2H,EAGR,OAAO3H,CACR,CASD,SAAS8yF,EAA2Bv4C,EAAK7tB,GACvC,GAAO6tB,IACAiD,EAAK,cAAV,CACE,IAAI2vC,EAAQ,GAiCZ,YA/BgCh4F,IAA7Bu3B,EAAOa,KAAK4iE,cACbhD,EAAM/2F,KAAK6/C,EAAK7+C,OAAO6+C,EAAKG,MAAMmB,iBAAkB,GAAG,EAAM,CAC3DtB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAC1DN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAAS5tB,EAAOa,KAAK4iE,cAAcv7C,YAC1CqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKoB,MAAM,EAAO,cAKhCviD,IAA5Bu3B,EAAOsrC,IAAIm4B,cACZhD,EAAM/2F,KAAK6/C,EAAK7+C,OAAO6+C,EAAKG,MAAMmB,iBAAkB,GAAG,EAAM,CAC3DtB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAC1DN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAAS5tB,EAAOsrC,IAAIm4B,cAAcv7C,YACzCqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAC1DN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAAS5tB,EAAOsrC,IAAIzqC,KAAK4iE,cAAcv7C,YAC9CqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKoB,MAAM,EAAO,gBAMxCviD,IAAtBu3B,EAAOihD,YACRwf,EAAM/2F,KAAK6/C,EAAK7+C,OAAO6+C,EAAKG,MAAMmB,iBAAkB,GAAG,EAAM,CAC3DtB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKG,SAAS,EACnDR,EAAKsG,aAAa7vB,EAAOihD,YAAY/4B,eAIpCqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM42C,EAAnE,CAGA,OAAOl3C,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKoB,MAAM,EAAO,GAErE,CAUD,SAASq7C,EAAqBC,GAE5B,IAAIv/C,EAAOwC,EAAK7+C,OAAO6+C,EAAKG,MAAMmB,iBAAkB,GAAG,EAAM,IAG7D,GAA6B,IAA1By7C,EAAI1pD,WAAWz0C,OAChB,OAAO4+C,EAKT,IADA,IAAIhO,EAAQutD,EAAI1pD,WACR3vC,EAAI,EAAGA,EAAI8rC,EAAM5wC,SAAU8E,EAAG,CACpC,IAAIisE,EAAOngC,EAAM9rC,GACb/F,EAAQgyE,EAAKhyE,MAGbg8F,EAAgB35C,EAAKK,KAAK0B,KAC3B,kBAAmB4tB,IACpBgqB,EAAgBhqB,EAAKgqB,eAEpBA,IAAkB35C,EAAKK,KAAK0B,OAC7BpkD,EAAQ06C,EAAMqB,KAAKpjB,WAAW34B,IAEhC,IAAIo9F,GAAmB,EACpB,qBAAsBprB,IACvBorB,EAAmBprB,EAAKorB,kBAO1B,IAAIlB,EAAM75C,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAEpEN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAASsrB,EAAK9uE,MAAM89C,YAC3BqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAK4B,KAAK,EAAM,CAErDjC,EAAK7+C,OACH6+C,EAAKG,MAAMC,UAAWu5C,EAAeoB,EAAkBp9F,OAG7D6/C,EAAK7/C,MAAMwC,KAAK05F,EACjB,CAED,OAAOr8C,CACR,CAtjDD8J,EAAIkmB,mBAAqB,SAASnJ,EAAK24B,EAAar8D,GAClD,IAAIlpB,EAAM4gC,EAAMgsB,IAAIxhE,OAAOwhE,GAAK,GAEhC,GAAgB,gBAAb5sD,EAAI5W,MACQ,qBAAb4W,EAAI5W,MACS,wBAAb4W,EAAI5W,KAAgC,CACpC,IAAI6Q,EAAQ,IAAI7P,MACd,+HAGF,MADA6P,EAAM6yD,WAAa9sD,EAAI5W,KACjB6Q,CACP,CACD,GAAG+F,EAAI+sD,UAAkC,cAAtB/sD,EAAI+sD,SAAS3jE,KAC9B,MAAM,IAAIgB,MACR,6DAIJ,IAAIolC,EAAM+Y,EAAK6D,QAAQpsC,EAAIyC,KAAMymB,GAEjC,OAAO2mB,EAAIukB,oBAAoB5kC,EAAK+1D,EACrC,EAUD11C,EAAI21C,iBAAmB,SAASrxB,EAAMhkB,GAEpC,IAAInwC,EAAM,CACR5W,KAAM,cACNqZ,KAAM8lC,EAAKgE,MAAMsD,EAAImmB,kBAAkB7B,IAAOjtB,YAEhD,OAAOtG,EAAMgsB,IAAI1kE,OAAO8X,EAAK,CAACmwC,QAASA,GACxC,EASDN,EAAIk2B,iBAAmB,SAASnZ,GAC9B,IAAI5sD,EAAM4gC,EAAMgsB,IAAIxhE,OAAOwhE,GAAK,GAEhC,GAAgB,eAAb5sD,EAAI5W,MAAsC,mBAAb4W,EAAI5W,KAA2B,CAC7D,IAAI6Q,EAAQ,IAAI7P,MAAM,mGAGtB,MADA6P,EAAM6yD,WAAa9sD,EAAI5W,KACjB6Q,CACP,CACD,GAAG+F,EAAI+sD,UAAkC,cAAtB/sD,EAAI+sD,SAAS3jE,KAC9B,MAAM,IAAIgB,MAAM,4DAIlB,IAAIolC,EAAM+Y,EAAK6D,QAAQpsC,EAAIyC,MAE3B,OAAOotC,EAAI0I,kBAAkB/oB,EAC9B,EAUDqgB,EAAI41C,eAAiB,SAASx1F,EAAKkgD,GAEjC,IAAInwC,EAAM,CACR5W,KAAM,aACNqZ,KAAM8lC,EAAKgE,MAAMsD,EAAI+3B,gBAAgB33E,IAAMi3C,YAE7C,OAAOtG,EAAMgsB,IAAI1kE,OAAO8X,EAAK,CAACmwC,QAASA,GACxC,EAUDN,EAAI61C,2BAA6B,SAASz1F,EAAKkgD,GAE7C,IAAInwC,EAAM,CACR5W,KAAM,iBACNqZ,KAAM8lC,EAAKgE,MAAMsD,EAAIi4B,wBAAwB73E,IAAMi3C,YAErD,OAAOtG,EAAMgsB,IAAI1kE,OAAO8X,EAAK,CAACmwC,QAASA,GACxC,EAgBDN,EAAI67B,wBAA0B,SAASz7E,EAAK0M,GAE1C,IAGIvU,EAHA4uD,GADJr6C,EAAUA,GAAW,CAAC,GACLq6C,IAAMpW,EAAMoW,GAAG2W,KAAKjkE,SAIrC,OAHWiT,EAAQvT,MAAQ,gBAIzB,IAAK,eACHhB,EAAQmgD,EAAKgE,MAAMsD,EAAIi4B,wBAAwB73E,IAAMi3C,WACrD,MACF,IAAK,uBACH9+C,EAAQmgD,EAAKgE,MAAMsD,EAAI+3B,gBAAgB33E,IAAMi3C,WAC7C,MACF,QACE,MAAM,IAAI98C,MAAM,6BAA+BuS,EAAQvT,KAAO,MAIlE4tD,EAAG1nC,QACH0nC,EAAG9lB,OAAO9oC,GACV,IAAIm/C,EAASyP,EAAGzP,SAChB,GAAwB,QAArB5qC,EAAQo6C,SAAoB,CAC7B,IAAIomB,EAAM51B,EAAO8vB,QACjB,OAAG16D,EAAQgvE,UACFxO,EAAIjgE,MAAM,SAASoG,KAAK3G,EAAQgvE,WAElCxO,CACR,CAAM,GAAwB,WAArBxgE,EAAQo6C,SAChB,OAAOxP,EAAOL,WACT,GAAGvqC,EAAQo6C,SAChB,MAAM,IAAI3sD,MAAM,qBAAuBuS,EAAQo6C,SAAW,MAE5D,OAAOxP,CACR,EAiBDsI,EAAI81C,4BAA8B,SAAS/4B,EAAK24B,EAAar8D,GAC3D,IAAIlpB,EAAM4gC,EAAMgsB,IAAIxhE,OAAOwhE,GAAK,GAEhC,GAAgB,wBAAb5sD,EAAI5W,KAAgC,CACrC,IAAI6Q,EAAQ,IAAI7P,MAAM,mGAGtB,MADA6P,EAAM6yD,WAAa9sD,EAAI5W,KACjB6Q,CACP,CACD,GAAG+F,EAAI+sD,UAAkC,cAAtB/sD,EAAI+sD,SAAS3jE,KAC9B,MAAM,IAAIgB,MAAM,uEAKlB,IAAIolC,EAAM+Y,EAAK6D,QAAQpsC,EAAIyC,KAAMymB,GAEjC,OAAO2mB,EAAI+1C,6BAA6Bp2D,EAAK+1D,EAC9C,EAUD11C,EAAIg2C,0BAA4B,SAASP,EAAKn1C,GAE5C,IAAInwC,EAAM,CACR5W,KAAM,sBACNqZ,KAAM8lC,EAAKgE,MAAMsD,EAAIi2C,2BAA2BR,IAAMp+C,YAExD,OAAOtG,EAAMgsB,IAAI1kE,OAAO8X,EAAK,CAACmwC,QAASA,GACxC,EAODN,EAAImkC,kBAAoB,WACtB,IAAI7f,EAAO,CACXA,QAAe,EACfA,aAAoB,KACpBA,aAAoB,KACpBA,UAAiB,KACjBA,QAAe,CAAC,GAgRhB,OA/QAA,EAAK4xB,QAAQtD,aAAe,KAC5BtuB,EAAK6xB,SAAW,CAAC,EACjB7xB,EAAK6xB,SAASC,UAAY,IAAIt7F,KAC9BwpE,EAAK6xB,SAASE,SAAW,IAAIv7F,KAE7BwpE,EAAK8C,OAAS,CAAC,EACf9C,EAAK8C,OAAOkvB,SAAW,SAASC,GAC9B,OAAOtE,EAAc3tB,EAAK8C,OAAQmvB,EACnC,EACDjyB,EAAK8C,OAAOovB,SAAW,SAASnuB,GAC9BkrB,EAAmB,CAAClrB,IACpB/D,EAAK8C,OAAOr7B,WAAWlzC,KAAKwvE,EAC7B,EACD/D,EAAK8C,OAAOr7B,WAAa,GACzBu4B,EAAK8C,OAAOp3C,KAAO,KAEnBs0C,EAAKp1D,QAAU,CAAC,EAChBo1D,EAAKp1D,QAAQonF,SAAW,SAASC,GAC/B,OAAOtE,EAAc3tB,EAAKp1D,QAASqnF,EACpC,EACDjyB,EAAKp1D,QAAQsnF,SAAW,SAASnuB,GAC/BkrB,EAAmB,CAAClrB,IACpB/D,EAAKp1D,QAAQ68B,WAAWlzC,KAAKwvE,EAC9B,EACD/D,EAAKp1D,QAAQ68B,WAAa,GAC1Bu4B,EAAKp1D,QAAQ8gB,KAAO,KAEpBs0C,EAAKgd,WAAa,GAClBhd,EAAKnc,UAAY,KACjBmc,EAAKnd,GAAK,KAQVmd,EAAKmyB,WAAa,SAASvuD,EAAOwuD,GAEhCnD,EAAmBrrD,GACnBo8B,EAAKp1D,QAAQ68B,WAAa7D,SACnBo8B,EAAKp1D,QAAQwnF,SACjBA,IAEDpyB,EAAKp1D,QAAQwnF,SAAWA,GAE1BpyB,EAAKp1D,QAAQ8gB,KAAO,IACrB,EAQDs0C,EAAKqyB,UAAY,SAASzuD,EAAOwuD,GAE/BnD,EAAmBrrD,GACnBo8B,EAAK8C,OAAOr7B,WAAa7D,SAClBo8B,EAAK8C,OAAOsvB,SAChBA,IAEDpyB,EAAK8C,OAAOsvB,SAAWA,GAEzBpyB,EAAK8C,OAAOp3C,KAAO,IACpB,EAODs0C,EAAKsyB,cAAgB,SAASjV,GAC5B,IAAI,IAAIvlF,EAAI,EAAGA,EAAIulF,EAAKrqF,SAAU8E,EAChCu3F,EAA4BhS,EAAKvlF,GAAI,CAACkoE,KAAMA,IAG9CA,EAAKgd,WAAaK,CACnB,EAWDrd,EAAKuyB,aAAe,SAAS/pF,GACL,iBAAZA,IACRA,EAAU,CAACzS,KAAMyS,IAKnB,IAFA,IACI3N,EADA+2C,EAAO,KAEH95C,EAAI,EAAY,OAAT85C,GAAiB95C,EAAIkoE,EAAKgd,WAAWhqF,SAAU8E,EAC5D+C,EAAMmlE,EAAKgd,WAAWllF,IACnB0Q,EAAQiX,IAAM5kB,EAAI4kB,KAAOjX,EAAQiX,IAE1BjX,EAAQzS,MAAQ8E,EAAI9E,OAASyS,EAAQzS,QAD7C67C,EAAO/2C,GAKX,OAAO+2C,CACR,EAQDouB,EAAK9xC,KAAO,SAASpyB,EAAK+mD,GAExBmd,EAAKnd,GAAKA,GAAMpW,EAAMoW,GAAG2W,KAAKjkE,SAC9B,IAAI+4F,EAAe3yC,EAAKqkB,EAAKnd,GAAGvS,UAAY,qBAC5C,IAAIg+C,EAAc,CAChB,IAAIxoF,EAAQ,IAAI7P,MAAM,+EAGtB,MADA6P,EAAMwqC,UAAY0vB,EAAKnd,GAAGvS,UACpBxqC,CACP,CACDk6D,EAAK2uB,aAAe3uB,EAAK4xB,QAAQtD,aAAeA,EAGhDtuB,EAAKwyB,eAAiB92C,EAAI+2C,kBAAkBzyB,GAC5C,IAAI/rE,EAAQmgD,EAAKgE,MAAM4nB,EAAKwyB,gBAG5BxyB,EAAKnd,GAAG9lB,OAAO9oC,EAAM8+C,YACrBitB,EAAKjb,UAAYjpD,EAAIoyB,KAAK8xC,EAAKnd,GAChC,EAUDmd,EAAK/yC,OAAS,SAASqW,GACrB,IAAIsO,GAAO,EAEX,IAAIouB,EAAK0yB,OAAOpvD,GAAQ,CACtB,IAAIw/B,EAASx/B,EAAMw/B,OACfl4D,EAAUo1D,EAAKp1D,QACf9E,EAAQ,IAAI7P,MACd,yIAKF,MAFA6P,EAAM6sF,eAAiB/nF,EAAQ68B,WAC/B3hC,EAAM8sF,aAAe9vB,EAAOr7B,WACtB3hC,CACP,CAED,IAAI+8C,EAAKvf,EAAMuf,GACf,GAAU,OAAPA,EAAa,CAEdA,EAAK6rC,EAAuB,CAC1BC,aAAcrrD,EAAMqrD,aACpB15F,KAAM,gBAIR,IAAIu9F,EAAiBlvD,EAAMkvD,gBAAkB92C,EAAI+2C,kBAAkBnvD,GAC/DrvC,EAAQmgD,EAAKgE,MAAMo6C,GACvB3vC,EAAG9lB,OAAO9oC,EAAM8+C,WACjB,CAQD,OANU,OAAP8P,IACDjR,EAAOg9C,EAAiB,CACtB/oB,YAAa7F,EAAMnd,GAAIA,EAAIkC,UAAWzhB,EAAMyhB,aAIzCnT,CACR,EAWDouB,EAAK6yB,SAAW,SAASrvD,GACvB,IAAIoO,GAAO,EAEP95C,EAAIkoE,EAAK8C,OACT7rD,EAAIusB,EAAO54B,QAGf,GAAG9S,EAAE4zB,MAAQzU,EAAEyU,KACbkmB,EAAQ95C,EAAE4zB,OAASzU,EAAEyU,UAChB,GAAG5zB,EAAE2vC,WAAWz0C,SAAWikB,EAAEwwB,WAAWz0C,OAAQ,CAGrD,IAAI8/F,EAAOC,EADXnhD,GAAO,EAEP,IAAI,IAAIrjB,EAAI,EAAGqjB,GAAQrjB,EAAIz2B,EAAE2vC,WAAWz0C,SAAUu7B,EAChDukE,EAAQh7F,EAAE2vC,WAAWlZ,GACrBwkE,EAAQ97E,EAAEwwB,WAAWlZ,GAClBukE,EAAM79F,OAAS89F,EAAM99F,MAAQ69F,EAAM/gG,QAAUghG,EAAMhhG,QAEpD6/C,GAAO,EAGZ,CAED,OAAOA,CACR,EAWDouB,EAAK0yB,OAAS,SAASpvD,GACrB,OAAOA,EAAMuvD,SAAS7yB,EACvB,EAODA,EAAK2wB,6BAA+B,WAgBlC,OAAOj1C,EAAI67B,wBAAwBvX,EAAKnc,UAAW,CAAC5uD,KAAM,gBAC3D,EASD+qE,EAAKgzB,2BAA6B,WAEhC,IADA,IAAIt6C,EAAMiD,EAAI,qBACN7jD,EAAI,EAAGA,EAAIkoE,EAAKgd,WAAWhqF,SAAU8E,EAAG,CAC9C,IAAI+C,EAAMmlE,EAAKgd,WAAWllF,GAC1B,GAAG+C,EAAI4kB,KAAOi5B,EAAK,CACjB,IAAIg4C,EAAM1wB,EAAK2wB,+BAA+B59C,WAC9C,OAAQtG,EAAMqB,KAAK6kB,WAAW93D,EAAI+1F,wBAA0BF,CAC7D,CACF,CACD,OAAO,CACR,EAEM1wB,CACR,EAeDtkB,EAAIukB,oBAAsB,SAAS5kC,EAAK+1D,GAEtC,IAAIv8C,EAAU,CAAC,EACXmG,EAAS,GACb,IAAI5G,EAAK2G,SAAS1f,EAAKkyD,EAA0B14C,EAASmG,GAAS,CACjE,IAAIl1C,EAAQ,IAAI7P,MAAM,6EAGtB,MADA6P,EAAMk1C,OAASA,EACTl1C,CACP,CAID,GADUsuC,EAAKwE,SAAS/D,EAAQwP,gBACrB3I,EAAIC,KAAKqqB,cAClB,MAAM,IAAI/vE,MAAM,2CAIlB,IAAI+pE,EAAOtkB,EAAImkC,oBACf7f,EAAKt8D,QAAUmxC,EAAQo+C,YACrBp+C,EAAQo+C,YAAY9/F,WAAW,GAAK,EACtC,IAAI8vE,EAASx2B,EAAMqB,KAAKC,aAAa8G,EAAQq+C,kBAC7ClzB,EAAKgD,aAAeC,EAAOC,QAC3BlD,EAAK2uB,aAAeliD,EAAM2H,KAAKwE,SAAS/D,EAAQs+C,kBAChDnzB,EAAK+uB,oBAAsBX,EACzBpuB,EAAK2uB,aAAc95C,EAAQu+C,qBAAqB,GAClDpzB,EAAK4xB,QAAQtD,aAAe7hD,EAAM2H,KAAKwE,SAAS/D,EAAQw+C,sBACxDrzB,EAAK4xB,QAAQx4B,WAAag1B,EAAyBpuB,EAAK4xB,QAAQtD,aAC9Dz5C,EAAQy+C,yBAAyB,GACnCtzB,EAAKjb,UAAYlQ,EAAQ0+C,cAEzB,IAAI1B,EAAW,GAef,QAdoCv+F,IAAjCuhD,EAAQ2+C,sBACT3B,EAASt9F,KAAK6/C,EAAKyE,cAAchE,EAAQ2+C,4BAEClgG,IAAzCuhD,EAAQ4+C,8BACT5B,EAASt9F,KAAK6/C,EAAKqF,sBACjB5E,EAAQ4+C,oCAEwBngG,IAAjCuhD,EAAQ6+C,sBACT7B,EAASt9F,KAAK6/C,EAAKyE,cAAchE,EAAQ6+C,4BAECpgG,IAAzCuhD,EAAQ8+C,8BACT9B,EAASt9F,KAAK6/C,EAAKqF,sBACjB5E,EAAQ8+C,+BAET9B,EAAS7+F,OAAS,EACnB,MAAM,IAAIiD,MAAM,wGAGlB,GAAG47F,EAAS7+F,OAAS,EACnB,MAAM,IAAIiD,MAAM,+GASlB,GANA+pE,EAAK6xB,SAASC,UAAYD,EAAS,GACnC7xB,EAAK6xB,SAASE,SAAWF,EAAS,GAGlC7xB,EAAKwyB,eAAiB39C,EAAQ29C,eAE3BpB,EAAa,CAEdpxB,EAAKnd,GAAK6rC,EAAuB,CAC/BC,aAAc3uB,EAAK2uB,aACnB15F,KAAM,gBAIR,IAAIhB,EAAQmgD,EAAKgE,MAAM4nB,EAAKwyB,gBAC5BxyB,EAAKnd,GAAG9lB,OAAO9oC,EAAM8+C,WACtB,CAGD,IAAI6gD,EAAMnnD,EAAMoW,GAAG2W,KAAKjkE,SACpBs+F,EAASz/C,EAAKgE,MAAMvD,EAAQi/C,YAChCF,EAAI72D,OAAO82D,EAAO9gD,YAClBitB,EAAK8C,OAAOkvB,SAAW,SAASC,GAC9B,OAAOtE,EAAc3tB,EAAK8C,OAAQmvB,EACnC,EACDjyB,EAAK8C,OAAOovB,SAAW,SAASnuB,GAC9BkrB,EAAmB,CAAClrB,IACpB/D,EAAK8C,OAAOr7B,WAAWlzC,KAAKwvE,EAC7B,EACD/D,EAAK8C,OAAOr7B,WAAaiU,EAAIqnB,qBAAqBluB,EAAQi/C,YACvDj/C,EAAQk/C,qBACT/zB,EAAK8C,OAAOsvB,SAAWv9C,EAAQk/C,oBAEjC/zB,EAAK8C,OAAOp3C,KAAOkoE,EAAIxgD,SAAS8vB,QAGhC,IAAI8wB,EAAMvnD,EAAMoW,GAAG2W,KAAKjkE,SACpB0+F,EAAS7/C,EAAKgE,MAAMvD,EAAQq/C,aAyBhC,OAxBAF,EAAIj3D,OAAOk3D,EAAOlhD,YAClBitB,EAAKp1D,QAAQonF,SAAW,SAASC,GAC/B,OAAOtE,EAAc3tB,EAAKp1D,QAASqnF,EACpC,EACDjyB,EAAKp1D,QAAQsnF,SAAW,SAASnuB,GAC/BkrB,EAAmB,CAAClrB,IACpB/D,EAAKp1D,QAAQ68B,WAAWlzC,KAAKwvE,EAC9B,EACD/D,EAAKp1D,QAAQ68B,WAAaiU,EAAIqnB,qBAAqBluB,EAAQq/C,aACxDr/C,EAAQs/C,sBACTn0B,EAAKp1D,QAAQwnF,SAAWv9C,EAAQs/C,qBAElCn0B,EAAKp1D,QAAQ8gB,KAAOsoE,EAAI5gD,SAAS8vB,QAG9BruB,EAAQu/C,eACTp0B,EAAKgd,WAAathC,EAAI24C,8BAA8Bx/C,EAAQu/C,gBAE5Dp0B,EAAKgd,WAAa,GAIpBhd,EAAKnc,UAAYnI,EAAI0I,kBAAkBvP,EAAQy/C,sBAExCt0B,CACR,EAyDDtkB,EAAI24C,8BAAgC,SAAShX,GAE3C,IADA,IAAIzrC,EAAO,GACH95C,EAAI,EAAGA,EAAIulF,EAAKtrF,MAAMiB,SAAU8E,EAGtC,IADA,IAAIy8F,EAASlX,EAAKtrF,MAAM+F,GAChBy3C,EAAK,EAAGA,EAAKglD,EAAOxiG,MAAMiB,SAAUu8C,EAC1CqC,EAAKr9C,KAAKmnD,EAAIyyC,6BAA6BoG,EAAOxiG,MAAMw9C,KAI5D,OAAOqC,CACR,EASD8J,EAAIyyC,6BAA+B,SAAStzF,GAK1C,IAAIsD,EAAI,CAAC,EAUT,GATAA,EAAEshB,GAAK20B,EAAKwE,SAAS/9C,EAAI9I,MAAM,GAAGA,OAClCoM,EAAEiiB,UAAW,EACVvlB,EAAI9I,MAAM,GAAGkD,OAASm/C,EAAKK,KAAKmB,SACjCz3C,EAAEiiB,SAAiD,IAArCvlB,EAAI9I,MAAM,GAAGA,MAAMoB,WAAW,GAC5CgL,EAAEpM,MAAQ8I,EAAI9I,MAAM,GAAGA,OAEvBoM,EAAEpM,MAAQ8I,EAAI9I,MAAM,GAAGA,MAGtBoM,EAAEshB,MAAMk8B,EAIT,GAHAx9C,EAAEpI,KAAO4lD,EAAKx9C,EAAEshB,IAGF,aAAXthB,EAAEpI,KAAqB,CAExB,IACIo6C,EAAK,EACLqZ,EAAK,GAFLgrC,EAAKpgD,EAAK6D,QAAQ95C,EAAEpM,QAGlBA,MAAMiB,OAAS,IAInBm9C,EAAKqkD,EAAGziG,MAAMoB,WAAW,GACzBq2D,EAAKgrC,EAAGziG,MAAMiB,OAAS,EAAIwhG,EAAGziG,MAAMoB,WAAW,GAAK,GAGtDgL,EAAEoxF,iBAAmC,MAAV,IAALp/C,GACtBhyC,EAAEqxF,eAAiC,KAAV,GAALr/C,GACpBhyC,EAAEsxF,gBAAkC,KAAV,GAALt/C,GACrBhyC,EAAEuxF,iBAAmC,KAAV,GAALv/C,GACtBhyC,EAAEwxF,aAA+B,IAAV,EAALx/C,GAClBhyC,EAAEyxF,YAA8B,IAAV,EAALz/C,GACjBhyC,EAAE0xF,QAA0B,IAAV,EAAL1/C,GACbhyC,EAAE2xF,aAA+B,IAAV,EAAL3/C,GAClBhyC,EAAE4xF,aAA+B,MAAV,IAALvmC,EACnB,MAAM,GAAc,qBAAXrrD,EAAEpI,KAA6B,EAGnCy+F,EAAKpgD,EAAK6D,QAAQ95C,EAAEpM,QAElBA,MAAMiB,OAAS,GAAKwhG,EAAGziG,MAAM,GAAGkD,OAASm/C,EAAKK,KAAKmB,QACvDz3C,EAAE6xF,GAA0C,IAApCwE,EAAGziG,MAAM,GAAGA,MAAMoB,WAAW,GAErCgL,EAAE6xF,IAAK,EAGT,IAAIj+F,EAAQ,KACTyiG,EAAGziG,MAAMiB,OAAS,GAAKwhG,EAAGziG,MAAM,GAAGkD,OAASm/C,EAAKK,KAAKG,QACvD7iD,EAAQyiG,EAAGziG,MAAM,GAAGA,MACZyiG,EAAGziG,MAAMiB,OAAS,IAC1BjB,EAAQyiG,EAAGziG,MAAM,GAAGA,OAET,OAAVA,IACDoM,EAAE8xF,kBAAoB77C,EAAKyG,aAAa9oD,GAE3C,MAAM,GAAc,gBAAXoM,EAAEpI,KAIV,IADA,IAAIy+F,EAAKpgD,EAAK6D,QAAQ95C,EAAEpM,OAChBqqE,EAAK,EAAGA,EAAKo4B,EAAGziG,MAAMiB,SAAUopE,EAAI,CAC1C,IAAI1jB,EAAMtE,EAAKwE,SAAS47C,EAAGziG,MAAMqqE,GAAIrqE,OAClC2mD,KAAOiD,EACRx9C,EAAEw9C,EAAKjD,KAAQ,EAEfv6C,EAAEu6C,IAAO,CAEZ,MACI,GAAc,eAAXv6C,EAAEpI,KAAuB,CAI7Bo6C,EAAK,GADLqkD,EAAKpgD,EAAK6D,QAAQ95C,EAAEpM,QAElBA,MAAMiB,OAAS,IAInBm9C,EAAKqkD,EAAGziG,MAAMoB,WAAW,IAG3BgL,EAAE0yC,OAAyB,MAAV,IAALV,GACZhyC,EAAEw6E,OAAyB,KAAV,GAALxoC,GACZhyC,EAAE+xF,MAAwB,KAAV,GAAL//C,GACXhyC,EAAEgyF,QAA0B,KAAV,GAALhgD,GACbhyC,EAAEiyF,SAA2B,IAAV,EAALjgD,GACdhyC,EAAEkyF,MAAwB,IAAV,EAALlgD,GACXhyC,EAAEmyF,QAA0B,IAAV,EAALngD,GACbhyC,EAAEoyF,MAAwB,IAAV,EAALpgD,EACZ,MAAM,GACM,mBAAXhyC,EAAEpI,MACS,kBAAXoI,EAAEpI,KAA0B,CAK5B,IAAI0+F,EAHJt2F,EAAEqyF,SAAW,GAITgE,EAAKpgD,EAAK6D,QAAQ95C,EAAEpM,OACxB,IADA,IACQw8B,EAAI,EAAGA,EAAIimE,EAAGziG,MAAMiB,SAAUu7B,EAAG,CAIvC,IAAIkiE,EAAU,CACZx7F,MAHFw/F,EAAKD,EAAGziG,MAAMw8B,IAGHt5B,KACTlD,MAAO0iG,EAAG1iG,OAKZ,OAHAoM,EAAEqyF,SAASj8F,KAAKk8F,GAGTgE,EAAGx/F,MAER,KAAK,EAEL,KAAK,EAEL,KAAK,EACH,MAEF,KAAK,EAEHw7F,EAAQ1E,GAAKt/C,EAAMqB,KAAKq+C,UAAUsI,EAAG1iG,OACrC,MAEF,KAAK,EACH0+F,EAAQ/3C,IAAMtE,EAAKwE,SAAS67C,EAAG1iG,OAKpC,CACF,MAAM,GAAc,yBAAXoM,EAAEpI,KAAiC,CAGvCy+F,EAAKpgD,EAAK6D,QAAQ95C,EAAEpM,OACxBoM,EAAEyyF,qBAAuBnkD,EAAMqB,KAAK8N,WAAW44C,EAAGziG,MACnD,CAEH,OAAOoM,CACR,EAeDu9C,EAAI+1C,6BAA+B,SAASp2D,EAAK+1D,GAE/C,IAAIv8C,EAAU,CAAC,EACXmG,EAAS,GACb,IAAI5G,EAAK2G,SAAS1f,EAAKqyD,EAA+B74C,EAASmG,GAAS,CACtE,IAAIl1C,EAAQ,IAAI7P,MAAM,gGAGtB,MADA6P,EAAMk1C,OAASA,EACTl1C,CACP,CAID,GADUsuC,EAAKwE,SAAS/D,EAAQwP,gBACrB3I,EAAIC,KAAKqqB,cAClB,MAAM,IAAI/vE,MAAM,2CAIlB,IAAIk7F,EAAMz1C,EAAIg5C,6BAad,GAZAvD,EAAIztF,QAAUmxC,EAAQ8/C,WAAa9/C,EAAQ8/C,WAAWxhG,WAAW,GAAK,EACtEg+F,EAAIxC,aAAeliD,EAAM2H,KAAKwE,SAAS/D,EAAQ+/C,iBAC/CzD,EAAIpC,oBAAsBX,EACxB+C,EAAIxC,aAAc95C,EAAQggD,oBAAoB,GAChD1D,EAAIS,QAAQtD,aAAe7hD,EAAM2H,KAAKwE,SAAS/D,EAAQ+/C,iBACvDzD,EAAIS,QAAQx4B,WAAag1B,EACvB+C,EAAIS,QAAQtD,aAAcz5C,EAAQggD,oBAAoB,GACxD1D,EAAIpsC,UAAYlQ,EAAQigD,aAGxB3D,EAAI4D,yBAA2BlgD,EAAQkgD,yBAEpC3D,EAAa,CAEdD,EAAItuC,GAAK6rC,EAAuB,CAC9BC,aAAcwC,EAAIxC,aAClB15F,KAAM,0BAIR,IAAIhB,EAAQmgD,EAAKgE,MAAM+4C,EAAI4D,0BAC3B5D,EAAItuC,GAAG9lB,OAAO9oC,EAAM8+C,WACrB,CAGD,IAAIihD,EAAMvnD,EAAMoW,GAAG2W,KAAKjkE,SA0BxB,OAzBA47F,EAAIvmF,QAAQonF,SAAW,SAASC,GAC9B,OAAOtE,EAAcwD,EAAIvmF,QAASqnF,EACnC,EACDd,EAAIvmF,QAAQsnF,SAAW,SAASnuB,GAC9BkrB,EAAmB,CAAClrB,IACpBotB,EAAIvmF,QAAQ68B,WAAWlzC,KAAKwvE,EAC7B,EACDotB,EAAIvmF,QAAQ68B,WAAaiU,EAAIqnB,qBAC3BluB,EAAQmgD,gCAAiChB,GAC3C7C,EAAIvmF,QAAQ8gB,KAAOsoE,EAAI5gD,SAAS8vB,QAGhCiuB,EAAIttC,UAAYnI,EAAI0I,kBAAkBvP,EAAQy/C,sBAG9CnD,EAAI8D,aAAe,SAAShD,GAC1B,OAAOtE,EAAcwD,EAAKc,EAC3B,EACDd,EAAI+D,aAAe,SAASnxB,GAC1BkrB,EAAmB,CAAClrB,IACpBotB,EAAI1pD,WAAWlzC,KAAKwvE,EACrB,EACDotB,EAAI1pD,WAAaiU,EAAIsyC,qBACnBn5C,EAAQsgD,oCAAsC,IAEzChE,CACR,EASDz1C,EAAIg5C,2BAA6B,WAC/B,IAAIvD,EAAM,CACVA,QAAc,EACdA,aAAmB,KACnBA,UAAgB,KAChBA,QAAc,CAAC,GAgHf,OA/GAA,EAAIS,QAAQtD,aAAe,KAE3B6C,EAAIvmF,QAAU,CAAC,EACfumF,EAAIvmF,QAAQonF,SAAW,SAASC,GAC9B,OAAOtE,EAAcwD,EAAIvmF,QAASqnF,EACnC,EACDd,EAAIvmF,QAAQsnF,SAAW,SAASnuB,GAC9BkrB,EAAmB,CAAClrB,IACpBotB,EAAIvmF,QAAQ68B,WAAWlzC,KAAKwvE,EAC7B,EACDotB,EAAIvmF,QAAQ68B,WAAa,GACzB0pD,EAAIvmF,QAAQ8gB,KAAO,KAEnBylE,EAAIttC,UAAY,KAChBstC,EAAI1pD,WAAa,GACjB0pD,EAAI8D,aAAe,SAAShD,GAC1B,OAAOtE,EAAcwD,EAAKc,EAC3B,EACDd,EAAI+D,aAAe,SAASnxB,GAC1BkrB,EAAmB,CAAClrB,IACpBotB,EAAI1pD,WAAWlzC,KAAKwvE,EACrB,EACDotB,EAAItuC,GAAK,KAOTsuC,EAAIgB,WAAa,SAASvuD,GAExBqrD,EAAmBrrD,GACnButD,EAAIvmF,QAAQ68B,WAAa7D,EACzButD,EAAIvmF,QAAQ8gB,KAAO,IACpB,EAODylE,EAAIiE,cAAgB,SAASxxD,GAE3BqrD,EAAmBrrD,GACnButD,EAAI1pD,WAAa7D,CAClB,EAQDutD,EAAIjjE,KAAO,SAASpyB,EAAK+mD,GAEvBsuC,EAAItuC,GAAKA,GAAMpW,EAAMoW,GAAG2W,KAAKjkE,SAC7B,IAAI+4F,EAAe3yC,EAAKw1C,EAAItuC,GAAGvS,UAAY,qBAC3C,IAAIg+C,EAAc,CAChB,IAAIxoF,EAAQ,IAAI7P,MAAM,yFAGtB,MADA6P,EAAMwqC,UAAY6gD,EAAItuC,GAAGvS,UACnBxqC,CACP,CACDqrF,EAAIxC,aAAewC,EAAIS,QAAQtD,aAAeA,EAG9C6C,EAAI4D,yBAA2Br5C,EAAI25C,4BAA4BlE,GAC/D,IAAIl9F,EAAQmgD,EAAKgE,MAAM+4C,EAAI4D,0BAG3B5D,EAAItuC,GAAG9lB,OAAO9oC,EAAM8+C,YACpBo+C,EAAIpsC,UAAYjpD,EAAIoyB,KAAKijE,EAAItuC,GAC9B,EAaDsuC,EAAIlkE,OAAS,WACX,IAAI2kB,GAAO,EAEPiR,EAAKsuC,EAAItuC,GACb,GAAU,OAAPA,EAAa,CACdA,EAAK6rC,EAAuB,CAC1BC,aAAcwC,EAAIxC,aAClB15F,KAAM,0BAIR,IAAIqgG,EAAMnE,EAAI4D,0BACZr5C,EAAI25C,4BAA4BlE,GAC9Bl9F,EAAQmgD,EAAKgE,MAAMk9C,GACvBzyC,EAAG9lB,OAAO9oC,EAAM8+C,WACjB,CAQD,OANU,OAAP8P,IACDjR,EAAOg9C,EAAiB,CACtB/oB,YAAasrB,EAAKtuC,GAAIA,EAAIkC,UAAWosC,EAAIpsC,aAItCnT,CACR,EAEMu/C,CACR,EA+hBD,IAAIhtB,EAAa,IAAI3tE,KAAK,wBACtB4tE,EAAa,IAAI5tE,KAAK,wBAU1B,SAAS++F,EAAYx8C,GACnB,OAAGA,GAAQorB,GAAcprB,EAAOqrB,EACvBhwB,EAAK7+C,OACV6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAK+B,SAAS,EACzCpC,EAAK6F,cAAclB,IAEd3E,EAAK7+C,OACV6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKgC,iBAAiB,EACjDrC,EAAKqG,sBAAsB1B,GAEhC,CASD2C,EAAI+2C,kBAAoB,SAASzyB,GAE/B,IAAI8xB,EAAYyD,EAAYv1B,EAAK6xB,SAASC,WACtCC,EAAWwD,EAAYv1B,EAAK6xB,SAASE,UACrCyD,EAAMphD,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAEpEN,EAAK7+C,OAAO6+C,EAAKG,MAAMmB,iBAAkB,GAAG,EAAM,CAEhDtB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKG,SAAS,EACnDR,EAAKsG,aAAaslB,EAAKt8D,SAASqvC,cAGpCqB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKG,SAAS,EACnDnI,EAAMqB,KAAK6kB,WAAWqN,EAAKgD,eAE7B5uB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAE1DN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAASunB,EAAK4xB,QAAQtD,cAAcv7C,YAE3Ck+C,EACEjxB,EAAK4xB,QAAQtD,aAActuB,EAAK4xB,QAAQx4B,cAG5C41B,EAAUhvB,EAAK8C,QAEf1uB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAC1Do9C,EACAC,IAGF/C,EAAUhvB,EAAKp1D,SAEf8wC,EAAI+3B,gBAAgBzT,EAAKnc,aAiC3B,OA9BGmc,EAAK8C,OAAOsvB,UAEboD,EAAIzjG,MAAMwC,KACR6/C,EAAK7+C,OAAO6+C,EAAKG,MAAMmB,iBAAkB,GAAG,EAAM,CAChDtB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKS,WAAW,EAErDvgD,OAAOC,aAAa,GACpBorE,EAAK8C,OAAOsvB,aAKjBpyB,EAAKp1D,QAAQwnF,UAEdoD,EAAIzjG,MAAMwC,KACR6/C,EAAK7+C,OAAO6+C,EAAKG,MAAMmB,iBAAkB,GAAG,EAAM,CAChDtB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKS,WAAW,EAErDvgD,OAAOC,aAAa,GACpBorE,EAAKp1D,QAAQwnF,aAMlBpyB,EAAKgd,WAAWhqF,OAAS,GAE1BwiG,EAAIzjG,MAAMwC,KAAKmnD,EAAI+5C,4BAA4Bz1B,EAAKgd,aAG/CwY,CACR,EAUD95C,EAAI25C,4BAA8B,SAASlE,GAczC,OAZU/8C,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAEpEN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKG,SAAS,EACnDR,EAAKsG,aAAay2C,EAAIztF,SAASqvC,YAEjCi8C,EAAUmC,EAAIvmF,SAEd8wC,EAAI+3B,gBAAgB0d,EAAIttC,WAExBqtC,EAAqBC,IAIxB,EASDz1C,EAAI8nB,wBAA0B,SAASmiB,GACrC,OAAOqJ,EAAUrJ,EAClB,EASDjqC,EAAImmB,kBAAoB,SAAS7B,GAE/B,IAAIwyB,EAAiBxyB,EAAKwyB,gBAAkB92C,EAAI+2C,kBAAkBzyB,GAGlE,OAAO5rB,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAEjE89C,EAEAp+C,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAE1DN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAASunB,EAAK2uB,cAAc57C,YAEnCk+C,EAA2BjxB,EAAK2uB,aAAc3uB,EAAK+uB,uBAGrD36C,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKS,WAAW,EACrDvgD,OAAOC,aAAa,GAAQorE,EAAKjb,YAEtC,EASDrJ,EAAI+5C,4BAA8B,SAASpY,GAEzC,IAAIzrC,EAAOwC,EAAK7+C,OAAO6+C,EAAKG,MAAMmB,iBAAkB,GAAG,EAAM,IAGzDu4C,EAAM75C,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,IACtE9C,EAAK7/C,MAAMwC,KAAK05F,GAEhB,IAAI,IAAIn2F,EAAI,EAAGA,EAAIulF,EAAKrqF,SAAU8E,EAChCm2F,EAAIl8F,MAAMwC,KAAKmnD,EAAI0zC,2BAA2B/R,EAAKvlF,KAGrD,OAAO85C,CACR,EASD8J,EAAI0zC,2BAA6B,SAASv0F,GAExC,IAAI05F,EAASngD,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,IAGzE6/C,EAAOxiG,MAAMwC,KAAK6/C,EAAK7+C,OACrB6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EACrCV,EAAKqE,SAAS59C,EAAI4kB,IAAIszB,aAGrBl4C,EAAIulB,UAELm0E,EAAOxiG,MAAMwC,KAAK6/C,EAAK7+C,OACrB6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKmB,SAAS,EACzCjhD,OAAOC,aAAa,OAGxB,IAAI7C,EAAQ8I,EAAI9I,MAUhB,MATwB,iBAAd8I,EAAI9I,QAEZA,EAAQqiD,EAAKgE,MAAMrmD,GAAOghD,YAI5BwhD,EAAOxiG,MAAMwC,KAAK6/C,EAAK7+C,OACrB6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKM,aAAa,EAAOhjD,IAE/CwiG,CACR,EASD74C,EAAIi2C,2BAA6B,SAASR,GAExC,IAAImE,EAAMnE,EAAI4D,0BACZr5C,EAAI25C,4BAA4BlE,GAGlC,OAAO/8C,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAEjE4gD,EAEAlhD,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKC,UAAU,EAAM,CAE1DN,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKK,KAAK,EAC/CV,EAAKqE,SAAS04C,EAAIxC,cAAc57C,YAElCk+C,EAA2BE,EAAIxC,aAAcwC,EAAIpC,uBAGnD36C,EAAK7+C,OAAO6+C,EAAKG,MAAMC,UAAWJ,EAAKK,KAAKS,WAAW,EACrDvgD,OAAOC,aAAa,GAAQu8F,EAAIpsC,YAErC,EAUDrJ,EAAImrC,cAAgB,SAASnhB,GAE3B,IAAIggB,EAAU,CAEZhgB,MAAO,CAAC,GA4JV,SAASgwB,EAAa9qF,GAEpB,OADA+qF,EAAqB/qF,GACd86E,EAAQhgB,MAAM96D,EAAQ8gB,OAAS,IACvC,CAED,SAASiqE,EAAqB/qF,GAE5B,IAAIA,EAAQ8gB,KAAM,CAChB,IAAIm3B,EAAKpW,EAAMoW,GAAG2W,KAAKjkE,SACvBqV,EAAQ68B,WAAaiU,EAAIqnB,qBAAqBisB,EAAUpkF,GAAUi4C,GAClEj4C,EAAQ8gB,KAAOm3B,EAAGzP,SAAS8vB,OAC5B,CACF,CAGD,GAhKAwiB,EAAQkQ,UAAY,SAAS51B,GAY3B,OAXW01B,EAAa11B,EAAK8C,OAY9B,EAQD4iB,EAAQlf,eAAiB,SAASxG,GAQhC,GANmB,iBAATA,IACRA,EAAOvzB,EAAMiP,IAAIkmB,mBAAmB5B,IAGtC21B,EAAqB31B,EAAKp1D,UAEtB86E,EAAQmQ,eAAe71B,GACzB,GAAGA,EAAKp1D,QAAQ8gB,QAAQg6D,EAAQhgB,MAAO,CAErC,IAAIpuC,EAAMouD,EAAQhgB,MAAM1F,EAAKp1D,QAAQ8gB,MACjC+gB,EAAMqB,KAAK7yC,QAAQq8B,KACrBA,EAAM,CAACA,IAETA,EAAI/iC,KAAKyrE,GACT0lB,EAAQhgB,MAAM1F,EAAKp1D,QAAQ8gB,MAAQ4L,CACpC,MACCouD,EAAQhgB,MAAM1F,EAAKp1D,QAAQ8gB,MAAQs0C,CAGxC,EAUD0lB,EAAQmQ,eAAiB,SAAS71B,GAEb,iBAATA,IACRA,EAAOvzB,EAAMiP,IAAIkmB,mBAAmB5B,IAGtC,IAAIj3D,EAAQ2sF,EAAa11B,EAAKp1D,SAC9B,IAAI7B,EACF,OAAO,EAEL0jC,EAAMqB,KAAK7yC,QAAQ8N,KACrBA,EAAQ,CAACA,IAIX,IADA,IAAI+sF,EAAO1hD,EAAKgE,MAAMsD,EAAImmB,kBAAkB7B,IAAOjtB,WAC3Cj7C,EAAI,EAAGA,EAAIiR,EAAM/V,SAAU8E,EAAG,CAEpC,GAAGg+F,IADQ1hD,EAAKgE,MAAMsD,EAAImmB,kBAAkB94D,EAAMjR,KAAKi7C,WAErD,OAAO,CAEV,CACD,OAAO,CACR,EAOD2yC,EAAQqQ,oBAAsB,WAC5B,IAAI3Q,EAAW,GAEf,IAAI,IAAI15D,KAAQg6D,EAAQhgB,MACtB,GAAGggB,EAAQhgB,MAAMnkD,eAAemK,GAAO,CACrC,IAAI35B,EAAQ2zF,EAAQhgB,MAAMh6C,GAC1B,GAAI+gB,EAAMqB,KAAK7yC,QAAQlJ,GAGrB,IAAI,IAAI+F,EAAI,EAAGA,EAAI/F,EAAMiB,SAAU8E,EACjCstF,EAAS7wF,KAAKxC,EAAM+F,SAHtBstF,EAAS7wF,KAAKxC,EAMjB,CAGH,OAAOqzF,CACR,EAWDM,EAAQsQ,kBAAoB,SAASh2B,GACnC,IAAI3rE,EAOJ,GAJmB,iBAAT2rE,IACRA,EAAOvzB,EAAMiP,IAAIkmB,mBAAmB5B,IAEtC21B,EAAqB31B,EAAKp1D,UACtB86E,EAAQmQ,eAAe71B,GACzB,OAAO,KAGT,IAAIj3D,EAAQ2sF,EAAa11B,EAAKp1D,SAE9B,IAAI6hC,EAAMqB,KAAK7yC,QAAQ8N,GAGrB,OAFA1U,EAASqxF,EAAQhgB,MAAM1F,EAAKp1D,QAAQ8gB,aAC7Bg6D,EAAQhgB,MAAM1F,EAAKp1D,QAAQ8gB,MAC3Br3B,EAKT,IADA,IAAIyhG,EAAO1hD,EAAKgE,MAAMsD,EAAImmB,kBAAkB7B,IAAOjtB,WAC3Cj7C,EAAI,EAAGA,EAAIiR,EAAM/V,SAAU8E,EAAG,CAEjCg+F,IADQ1hD,EAAKgE,MAAMsD,EAAImmB,kBAAkB94D,EAAMjR,KAAKi7C,aAErD1+C,EAAS0U,EAAMjR,GACfiR,EAAMoC,OAAOrT,EAAG,GAEnB,CAKD,OAJoB,IAAjBiR,EAAM/V,eACA0yF,EAAQhgB,MAAM1F,EAAKp1D,QAAQ8gB,MAG7Br3B,CACR,EAiBEqxE,EAED,IAAI,IAAI5tE,EAAI,EAAGA,EAAI4tE,EAAM1yE,SAAU8E,EAAG,CACpC,IAAIkoE,EAAO0F,EAAM5tE,GACjB4tF,EAAQlf,eAAexG,EACxB,CAGH,OAAO0lB,CACR,EAKDhqC,EAAIyqC,iBAAmB,CACrBlL,gBAAiB,2BACjBC,wBAAyB,mCACzBC,oBAAqB,+BACrBC,oBAAqB,+BACrBC,oBAAqB,+BACrBE,WAAY,yCAgCd7/B,EAAI6kC,uBAAyB,SAASmF,EAAS3jB,EAAOv5D,GAqI9B,mBAAZA,IACRA,EAAU,CAACykB,OAAQzkB,IAErBA,EAAUA,GAAW,CAAC,EAKtB,IAAIk9D,GADJ3D,EAAQA,EAAMnkE,MAAM,IACFA,MAAM,GAEpBq4F,EAAoBztF,EAAQytF,uBAIA,IAAtBA,IACRA,EAAoB,IAAIz/F,MAK1B,IAAIylD,GAAQ,EACRn2C,EAAQ,KACR7M,EAAQ,EACZ,EAAG,CACD,IAAI+mE,EAAO+B,EAAMx8C,QACbie,EAAS,KACT0yD,GAAa,EAmBjB,GAjBGD,IAEEA,EAAoBj2B,EAAK6xB,SAASC,WAClCmE,EAAoBj2B,EAAK6xB,SAASE,YACnCjsF,EAAQ,CACN3Q,QAAS,+CACT2Q,MAAO41C,EAAIyqC,iBAAiB/K,oBAC5B0W,UAAW9xB,EAAK6xB,SAASC,UACzBC,SAAU/xB,EAAK6xB,SAASE,SAGxBzgF,IAAK2kF,IAME,OAAVnwF,EAAgB,CAUjB,GARc,QADd09B,EAASu+B,EAAM,IAAM2jB,EAAQkQ,UAAU51B,KAGlCA,EAAK6yB,SAAS7yB,KACfk2B,GAAa,EACb1yD,EAASw8B,GAIVx8B,EAAQ,CAST,IAAI2yD,EAAU3yD,EACViJ,EAAMqB,KAAK7yC,QAAQk7F,KACrBA,EAAU,CAACA,IAKb,IADA,IAAIC,GAAW,GACRA,GAAYD,EAAQnjG,OAAS,GAAG,CACrCwwC,EAAS2yD,EAAQ5wE,QACjB,IACE6wE,EAAW5yD,EAAOvW,OAAO+yC,EAG1B,CAFC,MAAMppD,GAEP,CACF,CAEGw/E,IACFtwF,EAAQ,CACN3Q,QAAS,oCACT2Q,MAAO41C,EAAIyqC,iBAAiBlL,iBAGjC,CAEY,OAAVn1E,GAAoB09B,IAAU0yD,GAC9BxQ,EAAQmQ,eAAe71B,KAExBl6D,EAAQ,CACN3Q,QAAS,8BACT2Q,MAAO41C,EAAIyqC,iBAAiB5K,YAGjC,CAkBD,GAba,OAAVz1E,GAAkB09B,IAAWw8B,EAAK6yB,SAASrvD,KAE5C19B,EAAQ,CACN3Q,QAAS,iCACT2Q,MAAO41C,EAAIyqC,iBAAiBlL,kBASnB,OAAVn1E,EAMD,IAJA,IAAIuwF,EAAK,CACPC,UAAU,EACVC,kBAAkB,GAEZz+F,EAAI,EAAa,OAAVgO,GAAkBhO,EAAIkoE,EAAKgd,WAAWhqF,SAAU8E,EAAG,CAChE,IAAI+C,EAAMmlE,EAAKgd,WAAWllF,GACvB+C,EAAIulB,YAAcvlB,EAAI9E,QAAQsgG,KAC/BvwF,EAAQ,CACN3Q,QACE,qDACF2Q,MAAO41C,EAAIyqC,iBAAiBjL,yBAGjC,CAKH,GAAa,OAAVp1E,KACCm2C,GAA2B,IAAjB8lB,EAAM/uE,UAAkBwwC,GAAU0yD,IAAe,CAE7D,IAAIM,EAAQx2B,EAAKuyB,aAAa,oBAC1BkE,EAAcz2B,EAAKuyB,aAAa,YA8BpC,GA7BmB,OAAhBkE,IAGGA,EAAY7G,aAAyB,OAAV4G,IAE7B1wF,EAAQ,CACN3Q,QACE,8MAKF2Q,MAAO41C,EAAIyqC,iBAAiBlL,mBAKrB,OAAVn1E,GAA4B,OAAV0wF,GAAmBA,EAAMxG,KAE5ClqF,EAAQ,CACN3Q,QACE,sEAEF2Q,MAAO41C,EAAIyqC,iBAAiBlL,kBAMnB,OAAVn1E,GAAkC,OAAhB2wF,GACnB,sBAAuBD,EAKTv9F,EAAQ,EACTu9F,EAAMvG,oBAEjBnqF,EAAQ,CACN3Q,QACE,2DACF2Q,MAAO41C,EAAIyqC,iBAAiBlL,iBAInC,CAGD,IAAIoL,EAAiB,OAAVvgF,GAAyBA,EAAMA,MACtC0c,EAAMha,EAAQykB,OAASzkB,EAAQykB,OAAOo5D,EAAKptF,EAAOysE,GAAS2gB,EAC/D,IAAW,IAAR7jE,EA6BD,MAxBW,IAAR6jE,IACDvgF,EAAQ,CACN3Q,QAAS,4CACT2Q,MAAO41C,EAAIyqC,iBAAiBlL,mBAK7Bz4D,GAAe,IAARA,KAEU,iBAARA,GAAqBiqB,EAAMqB,KAAK7yC,QAAQunB,GAOzB,iBAARA,IAEf1c,EAAMA,MAAQ0c,IARXA,EAAIrtB,UACL2Q,EAAM3Q,QAAUqtB,EAAIrtB,SAEnBqtB,EAAI1c,QACLA,EAAMA,MAAQ0c,EAAI1c,SASlBA,EA3BNA,EAAQ,KA+BVm2C,GAAQ,IACNhjD,CACH,OAAO8oE,EAAM/uE,OAAS,GAEvB,OAAO,CACR,qBCzqGD,UAMqD01B,EAAO,GAAD,EAAgG,SAASzR,IAAI,aAAa,IAAI4L,EAAE,oBAAoBxZ,KAAKA,KAAK,oBAAoBH,OAAOA,YAAO,IAAS2Z,EAAEA,EAAE,CAAC,EAAM0L,GAAG1L,EAAE1Z,YAAY0Z,EAAEomD,YAAY1jB,EAAEh3B,GAAG,SAAS8J,MAAMxV,EAAEM,UAAU,CAAC,GAAGrJ,UAAUvB,EAAE,CAAC,EAAEqnC,EAAE,EAAEvnC,EAAE,CAAC7T,MAAM,SAASrG,EAAEi3B,GAAG,IAAIt9B,GAAGs9B,EAAEA,GAAG,CAAC,GAAGshE,gBAAe,EAA0C,GAAvChxC,EAAE5tD,KAAKs9B,EAAEuhE,sBAAsB7+F,EAAEA,EAAE,CAAC,GAAMs9B,EAAEshE,cAAc5+F,EAAEs9B,EAAEwhE,YAAYlxC,EAAEtwB,EAAEwhE,YAAYxhE,EAAEwhE,UAAUxhE,EAAEu2C,QAAQtzD,EAAEw+E,kBAAkB,CAAC,IAAI5nE,EAAE,WAAW,IAAI5W,EAAEw+E,kBAAkB,OAAM,EAAG,IAAsK/+F,EAAEm3B,EAApK9wB,GAAGrG,EAAE+qB,EAAE4xC,KAAK5xC,EAAEi0E,WAAW,KAAK7nE,EAAEhY,EAAE7b,WAAWid,EAAE0+E,WAAW1+E,EAAE0+E,SAASj/F,EAAE80F,gBAAgB,IAAIF,KAAK,CAAC,IAAIz9D,EAAE,QAAQ,CAACh6B,KAAK,uBAAuBmgC,EAAE,IAAIvS,EAAEulD,OAAOjqE,GAAW,OAAOi3B,EAAEhjB,UAAU9G,EAAE8pB,EAAE3V,GAAGmgC,IAAIrnC,EAAE6c,EAAE3V,IAAI2V,CAAE,CAA9P,GAAiQ,OAAOnG,EAAE+nE,SAAS5hE,EAAE6hE,KAAKhoE,EAAEioE,UAAU9hE,EAAE2kC,MAAM9qC,EAAEkoE,aAAa/hE,EAAEh1B,SAAS6uB,EAAEmoE,UAAUhiE,EAAEtvB,MAAMsvB,EAAE6hE,KAAKvxC,EAAEtwB,EAAE6hE,MAAM7hE,EAAE2kC,MAAMrU,EAAEtwB,EAAE2kC,OAAO3kC,EAAEh1B,SAASslD,EAAEtwB,EAAEh1B,UAAUg1B,EAAEtvB,MAAM4/C,EAAEtwB,EAAEtvB,cAAcsvB,EAAEu2C,YAAY18C,EAAEg6C,YAAY,CAACjmE,MAAM7E,EAAEw8B,OAAOvF,EAAEiiE,SAASpoE,EAAExP,IAAK,KAAI8O,EAAE,KAAyL,OAApLlW,EAAEi/E,kBAAkB,iBAAiBn5F,EAAEowB,EAAE6G,EAAEmiE,SAAS,IAAIjoE,EAAE8F,GAAG,IAAImC,EAAEnC,IAAG,IAAKj3B,EAAEq5F,UAAU9xC,EAAEvnD,EAAEykB,OAAO8iC,EAAEvnD,EAAEmf,IAAIiR,EAAE,IAAIq4B,EAAExxB,IAAIvS,EAAE40E,MAAMt5F,aAAas5F,MAAMt5F,aAAa7I,UAAUi5B,EAAE,IAAIrf,EAAEkmB,IAAW7G,EAAE5uB,OAAOxB,EAAG,EAACu5F,QAAQ,SAASv5F,EAAEi3B,GAAG,IAAI7G,GAAE,EAAGjjB,GAAE,EAAGkT,EAAE,IAAI2R,EAAE,OAAOlZ,EAAE,IAAIsB,EAAEtB,EAAEA,EAAEnf,GAAE,EAAGm3B,EAAE,KAAKs2B,GAAE,GAAI,WAAW,GAAG,iBAAiBnwB,EAApB,CAAyd,GAA5b,iBAAiBA,EAAEoiD,WAAWn/D,EAAEs/E,eAAer3B,QAAO,SAASniE,GAAG,OAAO,IAAIi3B,EAAEoiD,UAAUtsE,QAAQ/M,EAAG,IAAEnL,SAASwrB,EAAE4W,EAAEoiD,YAAY,kBAAkBpiD,EAAEwiE,QAAQ,mBAAmBxiE,EAAEwiE,QAAQ58F,MAAMC,QAAQm6B,EAAEwiE,WAAWrpE,EAAE6G,EAAEwiE,QAAQ,kBAAkBxiE,EAAEyiE,gBAAgB,iBAAiBziE,EAAEyiE,iBAAiB//F,EAAEs9B,EAAEyiE,gBAAgB,iBAAiBziE,EAAE0iE,UAAU3nE,EAAEiF,EAAE0iE,SAAS,iBAAiB1iE,EAAE2iE,YAAY9gF,EAAEme,EAAE2iE,WAAW,kBAAkB3iE,EAAEtlB,SAASxE,EAAE8pB,EAAEtlB,QAAW9U,MAAMC,QAAQm6B,EAAE4iE,SAAS,CAAC,GAAG,IAAI5iE,EAAE4iE,QAAQhlG,OAAO,MAAM,IAAIiD,MAAM,2BAA2Bg5B,EAAEmG,EAAE4iE,OAAQ,UAAS5iE,EAAE6iE,aAAa1/E,EAAE6c,EAAE6iE,WAAWhhF,IAAI,kBAAkBme,EAAE8iE,gBAAgB9iE,EAAE8iE,0BAA0Bj4D,UAAUslB,EAAEnwB,EAAE8iE,0BAA0Bj4D,OAAO7K,EAAE8iE,eAAe,kBAAptB,CAAuuB,CAA9wB,GAAixB,IAAIt4C,EAAE,IAAI3f,OAAO7iC,EAAE6Z,GAAG,KAA2C,GAAtC,iBAAiB9Y,IAAIA,EAAEyX,KAAKpR,MAAMrG,IAAOnD,MAAMC,QAAQkD,GAAG,CAAC,IAAIA,EAAEnL,QAAQgI,MAAMC,QAAQkD,EAAE,IAAI,OAAO8zD,EAAE,KAAK9zD,EAAErG,GAAG,GAAG,iBAAiBqG,EAAE,GAAG,OAAO8zD,EAAEhjC,GAAG35B,OAAOoG,KAAKyC,EAAE,IAAIA,EAAErG,EAAG,MAAK,GAAG,iBAAiBqG,EAAE,MAAM,iBAAiBA,EAAEjJ,OAAOiJ,EAAEjJ,KAAK0gB,KAAKpR,MAAMrG,EAAEjJ,OAAO8F,MAAMC,QAAQkD,EAAEjJ,QAAQiJ,EAAE6lC,SAAS7lC,EAAE6lC,OAAO7lC,EAAEg6F,MAAMh6F,EAAEg6F,KAAKn0D,QAAQ/U,GAAG9wB,EAAE6lC,SAAS7lC,EAAE6lC,OAAOhpC,MAAMC,QAAQkD,EAAEjJ,KAAK,IAAIiJ,EAAE6lC,OAAO,iBAAiB7lC,EAAEjJ,KAAK,GAAGI,OAAOoG,KAAKyC,EAAEjJ,KAAK,IAAI,IAAI8F,MAAMC,QAAQkD,EAAEjJ,KAAK,KAAK,iBAAiBiJ,EAAEjJ,KAAK,KAAKiJ,EAAEjJ,KAAK,CAACiJ,EAAEjJ,QAAQ+8D,EAAE9zD,EAAE6lC,QAAQ,GAAG7lC,EAAEjJ,MAAM,GAAG4C,GAAG,MAAM,IAAI7B,MAAM,0CAA0C,SAASg8D,EAAE9zD,EAAEi3B,EAAEt9B,GAAG,IAAIm3B,EAAE,GAAG,iBAAiB9wB,IAAIA,EAAEyX,KAAKpR,MAAMrG,IAAI,iBAAiBi3B,IAAIA,EAAExf,KAAKpR,MAAM4wB,IAAI,IAAI7G,EAAEvzB,MAAMC,QAAQkD,IAAI,EAAEA,EAAEnL,OAAOikB,GAAGjc,MAAMC,QAAQm6B,EAAE,IAAI,GAAG7G,GAAGjjB,EAAE,CAAC,IAAI,IAAIiN,EAAE,EAAEA,EAAEpa,EAAEnL,OAAOulB,IAAI,EAAEA,IAAI0W,GAAGzQ,GAAGyQ,GAAGtB,EAAExvB,EAAEoa,GAAGA,GAAG,EAAE6c,EAAEpiC,SAASi8B,GAAGkB,EAAG,KAAI,IAAIo1B,EAAE,EAAEA,EAAEnwB,EAAEpiC,OAAOuyD,IAAI,CAAC,IAAI3F,EAAErxB,EAAEpwB,EAAEnL,OAAOoiC,EAAEmwB,GAAGvyD,OAAOi/D,GAAE,EAAGpvC,EAAE0L,EAAE,IAAIj5B,OAAOoG,KAAK05B,EAAEmwB,IAAIvyD,OAAO,IAAIoiC,EAAEmwB,GAAGvyD,OAAO,GAAG8E,IAAIy2B,IAAI0jC,EAAE,WAAWn6D,EAAE,KAAKs9B,EAAEmwB,GAAGp2C,KAAK,IAAIsf,OAAO,IAAI2G,EAAEmwB,GAAGvyD,QAAQ,IAAIoiC,EAAEmwB,GAAG,GAAGvyD,QAAQ,WAAW8E,GAAGy2B,EAAE,CAAC,IAAI,IAAI6B,EAAE,GAAGd,EAAE,EAAEA,EAAEswB,EAAEtwB,IAAI,CAAC,IAAIpgB,EAAE+H,EAAE9Y,EAAEmxB,GAAGA,EAAEc,EAAE77B,KAAK6gC,EAAEmwB,GAAGr2C,GAAI,CAAA+iD,EAAE,KAAK7hC,EAAEjhB,KAAK,IAAIsf,MAAO,KAAIwjC,EAAE,CAAC,IAAI,IAAI16B,EAAE,EAAEA,EAAEqoB,EAAEroB,IAAI,CAAC,EAAEA,IAAI1U,IAAIoM,GAAGzQ,GAAG,IAAIooC,EAAEr4B,GAAGtX,EAAE9Y,EAAEo5B,GAAGA,EAAEtI,GAAGtB,EAAEyH,EAAEmwB,GAAGqB,GAAGrvB,EAAG,CAAAguB,EAAEnwB,EAAEpiC,OAAO,KAAK8E,GAAG,EAAE8nD,IAAI/8B,KAAKoM,GAAGkB,EAAG,CAAC,QAAOlB,CAAE,UAAStB,EAAExvB,EAAEi3B,GAAG,GAAG,MAAMj3B,EAAE,MAAM,GAAG,GAAGA,EAAEC,cAAc5H,KAAK,OAAOof,KAAKoD,UAAU7a,GAAGP,MAAM,EAAE,IAAI,IAAI9F,GAAE,EAAGytD,GAAG,iBAAiBpnD,GAAGonD,EAAEltB,KAAKl6B,KAAKA,EAAE,IAAIA,EAAErG,GAAE,GAAI,IAAIm3B,EAAE9wB,EAAE/C,WAAW4X,QAAQ4sC,EAAErnC,GAAG,OAAOzgB,EAAEA,IAAG,IAAKy2B,GAAG,mBAAmBA,GAAGA,EAAEpwB,EAAEi3B,IAAIp6B,MAAMC,QAAQszB,IAAIA,EAAE6G,IAAI,SAASj3B,EAAEi3B,GAAG,IAAI,IAAIt9B,EAAE,EAAEA,EAAEs9B,EAAEpiC,OAAO8E,IAAI,IAAI,EAAEqG,EAAE+M,QAAQkqB,EAAEt9B,IAAI,OAAM,EAAG,OAAM,CAAG,CAAjF,CAAkFm3B,EAAE5W,EAAEs/E,kBAAkB,EAAE1oE,EAAE/jB,QAAQsT,IAAI,MAAMyQ,EAAEqO,OAAO,IAAI,MAAMrO,EAAEqO,OAAOrO,EAAEj8B,OAAO,IAAIikB,EAAEgY,EAAEhY,EAAEgY,CAAE,CAAC,GAAE,GAAG5W,EAAE+/E,WAAWzjG,OAAOC,aAAa,IAAIyjB,EAAEggF,SAAS1jG,OAAOC,aAAa,IAAIyjB,EAAEigF,gBAAgB,SAASjgF,EAAEs/E,eAAe,CAAC,KAAK,KAAK,IAAIt/E,EAAEigF,iBAAiBjgF,EAAEw+E,mBAAmBtoE,KAAK1L,EAAEulD,OAAO/vD,EAAEi/E,kBAAkB,EAAEj/E,EAAEkgF,eAAe,SAASlgF,EAAEmgF,gBAAgB,QAAQngF,EAAEogF,iBAAiB,IAAIpgF,EAAEqgF,OAAOC,EAAEtgF,EAAEugF,aAAa9gG,EAAEugB,EAAEwgF,gBAAgBvpE,EAAEjX,EAAEygF,aAAa5pF,EAAEmJ,EAAE0gF,eAAexhE,EAAElf,EAAE2gF,uBAAuBpyC,EAAE/jC,EAAE6pD,OAAO,CAAC,IAAIt8C,EAAEvN,EAAE6pD,OAAOt8C,EAAEgG,GAAG5xB,MAAM,SAAS+gD,GAAG,IAAIztD,EAAEytD,EAAE5qB,QAAQ,CAAC,EAAEilB,EAAE,GAAG,OAAO57C,KAAKi1F,MAAK,SAAS96F,GAAG,GAAK,UAAUiyB,EAAEpsB,MAAM8mF,KAAK,WAAWpqD,eAAe,SAAStQ,EAAEpsB,MAAM+/D,KAAK,QAAQvmD,gBAAeqF,EAAEq2E,aAAcl1F,KAAKm1F,OAAO,IAAIn1F,KAAKm1F,MAAMnmG,OAAO,OAAM,EAAG,IAAI,IAAIoiC,EAAE,EAAEA,EAAEpxB,KAAKm1F,MAAMnmG,OAAOoiC,IAAIwqB,EAAErrD,KAAK,CAAC8wB,KAAKrhB,KAAKm1F,MAAM/jE,GAAGgkE,UAAUp1F,KAAKq1F,eAAejpE,EAAEkpE,OAAO,CAAC,EAAExhG,IAAK,IAAEqG,IAAI6F,KAAK,SAAS7F,IAAI,GAAG,IAAIyhD,EAAE5sD,OAAO,CAAC,IAAImL,EAAEi3B,EAAEt9B,EAAEm3B,EAAEV,EAAEqxB,EAAE,GAAG,GAAG8F,EAAEH,EAAEjnB,QAAQ,CAAC,IAAIrnB,EAAEsuC,EAAEjnB,OAAO/P,EAAElJ,KAAKkJ,EAAE6qE,WAAW,GAAG,iBAAiBniF,EAAE,CAAC,GAAG,UAAUA,EAAEsiF,OAAO,OAAOp7F,EAAE,aAAai3B,EAAE7G,EAAElJ,KAAKvtB,EAAEy2B,EAAE6qE,UAAUnqE,EAAEhY,EAAEtD,YAAY+xC,EAAEH,EAAEz/C,QAAQy/C,EAAEz/C,MAAM,CAAC/P,KAAKoI,GAAGi3B,EAAEt9B,EAAEm3B,IAAI,GAAG,SAAShY,EAAEsiF,OAAO,YAAYtnC,IAAI,iBAAiBh7C,EAAE0jB,SAASpM,EAAE8qE,eAAejpE,EAAEkpE,OAAO/qE,EAAE8qE,eAAepiF,EAAE0jB,QAAS,MAAK,GAAG,SAAS1jB,EAAE,YAAYg7C,GAAI,KAAI15C,EAAEgW,EAAE8qE,eAAej5F,SAASmuB,EAAE8qE,eAAej5F,SAAS,SAASjC,GAAGunD,EAAEntC,IAAIA,EAAEpa,EAAEowB,EAAElJ,KAAKkJ,EAAE6qE,WAAWnnC,GAAI,EAAC55C,EAAE7T,MAAM+pB,EAAElJ,KAAKkJ,EAAE8qE,eAAgB,MAAK3zC,EAAEH,EAAEnlD,WAAWmlD,EAAEnlD,UAAW,UAAS6xD,IAAIrS,EAAEz0C,OAAO,EAAE,GAAGhN,GAAI,CAAC,CAAC,UAAS8zD,EAAE9zD,GAAG6F,KAAKw1F,QAAQ,KAAKx1F,KAAKy1F,WAAU,EAAGz1F,KAAK01F,YAAW,EAAG11F,KAAK21F,SAAQ,EAAG31F,KAAKy4C,OAAO,KAAKz4C,KAAK41F,WAAW,EAAE51F,KAAK61F,aAAa,GAAG71F,KAAK81F,UAAU,EAAE91F,KAAK+1F,OAAO,EAAE/1F,KAAKg2F,WAAW,KAAKh2F,KAAKi2F,cAAa,EAAGj2F,KAAKk2F,iBAAiB,CAAChlG,KAAK,GAAG8lD,OAAO,GAAGm9C,KAAK,CAAC,GAAG,SAASh6F,GAAG,IAAIi3B,EAAE8K,EAAE/hC,GAAGi3B,EAAEg7B,UAAU33B,SAASrD,EAAEg7B,WAAWjyD,EAAE84F,MAAM94F,EAAE47D,QAAQ3kC,EAAEg7B,UAAU,MAAMpsD,KAAKw1F,QAAQ,IAAI1hG,EAAEs9B,IAAIpxB,KAAKw1F,QAAQW,SAASn2F,MAAMo2F,QAAQhlE,CAAE,EAACv3B,KAAKmG,KAAK7F,GAAG6F,KAAKq2F,WAAW,SAASl8F,EAAEi3B,GAAG,GAAGpxB,KAAKi2F,cAAcv0C,EAAE1hD,KAAKo2F,QAAQE,kBAAkB,CAAC,IAAIxiG,EAAEkM,KAAKo2F,QAAQE,iBAAiBn8F,QAAG,IAASrG,IAAIqG,EAAErG,EAAG,CAAAkM,KAAKi2F,cAAa,EAAGj2F,KAAK21F,SAAQ,EAAG,IAAI1qE,EAAEjrB,KAAK61F,aAAa17F,EAAE6F,KAAK61F,aAAa,GAAG,IAAItrE,EAAEvqB,KAAKw1F,QAAQh1F,MAAMyqB,EAAEjrB,KAAK41F,YAAY51F,KAAKy1F,WAAW,IAAIz1F,KAAKw1F,QAAQe,WAAWv2F,KAAKw1F,QAAQzrF,UAAU,CAAC,IAAIkJ,EAAEsX,EAAE4pE,KAAKqC,OAAOx2F,KAAKy1F,YAAYz1F,KAAK61F,aAAa5qE,EAAE3X,UAAUL,EAAEjT,KAAK41F,YAAY51F,KAAK41F,WAAW3iF,GAAGsX,GAAGA,EAAEr5B,OAAO8O,KAAK81F,WAAWvrE,EAAEr5B,KAAKlC,QAAQ,IAAIulB,EAAEvU,KAAKy1F,WAAWz1F,KAAKo2F,QAAQK,SAASz2F,KAAK81F,WAAW91F,KAAKo2F,QAAQK,QAAQ,GAAGl1C,EAAE1iC,EAAEomD,YAAY,CAAC7iC,QAAQ7X,EAAE8oE,SAASh/E,EAAEqiF,UAAUrgB,SAAS9hE,SAAS,GAAGmtC,EAAE1hD,KAAKo2F,QAAQrgC,SAAS3kC,EAAE,CAAC,GAAGpxB,KAAKo2F,QAAQrgC,MAAMxrC,EAAEvqB,KAAKw1F,SAASx1F,KAAKw1F,QAAQe,UAAUv2F,KAAKw1F,QAAQzrF,UAAU,YAAY/J,KAAK21F,SAAQ,GAAIprE,OAAE,EAAOvqB,KAAKk2F,sBAAiB,CAAO,QAAOl2F,KAAKo2F,QAAQnD,MAAMjzF,KAAKo2F,QAAQrgC,QAAQ/1D,KAAKk2F,iBAAiBhlG,KAAK8O,KAAKk2F,iBAAiBhlG,KAAKwH,OAAO6xB,EAAEr5B,MAAM8O,KAAKk2F,iBAAiBl/C,OAAOh3C,KAAKk2F,iBAAiBl/C,OAAOt+C,OAAO6xB,EAAEysB,QAAQh3C,KAAKk2F,iBAAiB/B,KAAK5pE,EAAE4pE,MAAMn0F,KAAK01F,aAAanhF,IAAImtC,EAAE1hD,KAAKo2F,QAAQh6F,WAAWmuB,GAAGA,EAAE4pE,KAAKpqF,UAAU/J,KAAKo2F,QAAQh6F,SAAS4D,KAAKk2F,iBAAiBl2F,KAAKy4C,QAAQz4C,KAAK01F,YAAW,GAAInhF,GAAGgW,GAAGA,EAAE4pE,KAAKoC,QAAQv2F,KAAKg2F,aAAazrE,CAAE,CAAAvqB,KAAK21F,SAAQ,CAAG,EAAC31F,KAAK22F,WAAW,SAASx8F,GAAGunD,EAAE1hD,KAAKo2F,QAAQt0F,OAAO9B,KAAKo2F,QAAQt0F,MAAM3H,GAAGonD,GAAGvhD,KAAKo2F,QAAQt0F,OAAO+c,EAAEomD,YAAY,CAACouB,SAASh/E,EAAEqiF,UAAU50F,MAAM3H,EAAEk8E,UAAS,GAAK,CAAC,UAAS/qD,EAAEnxB,GAAG,IAAI8wB,GAAG9wB,EAAEA,GAAG,CAAC,GAAGiyD,YAAYjyD,EAAEiyD,UAAU/3C,EAAEmgF,iBAAiBvmC,EAAEp0D,KAAKmG,KAAK7F,GAAG6F,KAAKg2F,WAAWzrE,EAAE,WAAWvqB,KAAK42F,aAAa52F,KAAK62F,cAAe,EAAC,WAAW72F,KAAK42F,YAAa,EAAC52F,KAAKrE,OAAO,SAASxB,GAAG6F,KAAKy4C,OAAOt+C,EAAE6F,KAAKg2F,YAAa,EAACh2F,KAAK42F,WAAW,WAAW,GAAG52F,KAAKy1F,UAAUz1F,KAAK62F,mBAAmB,CAAC,GAAG5rE,EAAE,IAAItf,eAAe3L,KAAKo2F,QAAQ1vF,kBAAkBukB,EAAEvkB,gBAAgB1G,KAAKo2F,QAAQ1vF,iBAAiB6jB,IAAIU,EAAElf,OAAO4d,EAAE3pB,KAAK62F,aAAa72F,MAAMirB,EAAEhf,QAAQ0d,EAAE3pB,KAAK82F,YAAY92F,OAAOirB,EAAErf,KAAK5L,KAAKo2F,QAAQW,oBAAoB,OAAO,MAAM/2F,KAAKy4C,QAAQluB,GAAGvqB,KAAKo2F,QAAQY,uBAAuB,CAAC,IAAI78F,EAAE6F,KAAKo2F,QAAQY,uBAAuB,IAAI,IAAI5lE,KAAKj3B,EAAE8wB,EAAEpf,iBAAiBulB,EAAEj3B,EAAEi3B,GAAI,IAAGpxB,KAAKo2F,QAAQhqC,UAAU,CAAC,IAAIt4D,EAAEkM,KAAK+1F,OAAO/1F,KAAKo2F,QAAQhqC,UAAU,EAAEnhC,EAAEpf,iBAAiB,QAAQ,SAAS7L,KAAK+1F,OAAO,IAAIjiG,EAAG,KAAIm3B,EAAExmB,KAAKzE,KAAKo2F,QAAQW,oBAA0D,CAArC,MAAM58F,GAAG6F,KAAK82F,YAAY38F,EAAEhJ,QAAS,CAAAo5B,GAAG,IAAIU,EAAElgB,QAAQ/K,KAAK82F,aAAc,CAAC,EAAC92F,KAAK62F,aAAa,WAAW,IAAI5rE,EAAE3b,aAAa2b,EAAElgB,OAAO,KAAK,KAAKkgB,EAAElgB,OAAO/K,KAAK82F,eAAe92F,KAAK+1F,QAAQ/1F,KAAKo2F,QAAQhqC,UAAUpsD,KAAKo2F,QAAQhqC,UAAUnhC,EAAEjf,aAAahd,OAAOgR,KAAKy1F,WAAWz1F,KAAKo2F,QAAQhqC,WAAWpsD,KAAK+1F,QAAQ,SAAS57F,GAAG,IAAIi3B,EAAEj3B,EAAE88F,kBAAkB,iBAAiB,OAAG,OAAO7lE,GAAS,EAASqD,SAASrD,EAAE9d,UAAU8d,EAAEle,YAAY,KAAK,GAAI,CAA/H,CAAgI+X,GAAGjrB,KAAKq2F,WAAWprE,EAAEjf,eAAgB,EAAChM,KAAK82F,YAAY,SAAS38F,GAAG,IAAIi3B,EAAEnG,EAAE9mB,YAAYhK,EAAE6F,KAAK22F,WAAW,IAAI1kG,MAAMm/B,GAAI,CAAC,UAASlmB,EAAE/Q,GAAG,IAAI8wB,EAAEV,GAAGpwB,EAAEA,GAAG,CAAC,GAAGiyD,YAAYjyD,EAAEiyD,UAAU/3C,EAAEkgF,gBAAgBtmC,EAAEp0D,KAAKmG,KAAK7F,GAAG,IAAI8Y,EAAE,oBAAoBiiF,WAAWl1F,KAAKrE,OAAO,SAASxB,GAAG6F,KAAKy4C,OAAOt+C,EAAEowB,EAAEpwB,EAAEP,OAAOO,EAAE+8F,aAAa/8F,EAAEg9F,SAASlkF,IAAIgY,EAAE,IAAIiqE,YAAYnpF,OAAO4d,EAAE3pB,KAAK62F,aAAa72F,MAAMirB,EAAEhf,QAAQ0d,EAAE3pB,KAAK82F,YAAY92F,OAAOirB,EAAE,IAAImsE,eAAep3F,KAAKg2F,YAAa,EAACh2F,KAAKg2F,WAAW,WAAWh2F,KAAKy1F,WAAWz1F,KAAKo2F,QAAQK,WAAWz2F,KAAK81F,UAAU91F,KAAKo2F,QAAQK,UAAUz2F,KAAK42F,YAAa,EAAC52F,KAAK42F,WAAW,WAAW,IAAIz8F,EAAE6F,KAAKy4C,OAAO,GAAGz4C,KAAKo2F,QAAQhqC,UAAU,CAAC,IAAIh7B,EAAEnjC,KAAKoR,IAAIW,KAAK+1F,OAAO/1F,KAAKo2F,QAAQhqC,UAAUpsD,KAAKy4C,OAAOnhD,MAAM6C,EAAEowB,EAAE1wB,KAAKM,EAAE6F,KAAK+1F,OAAO3kE,EAAG,KAAIt9B,EAAEm3B,EAAEosE,WAAWl9F,EAAE6F,KAAKo2F,QAAQx3C,UAAU3rC,GAAGjT,KAAK62F,aAAa,CAAC10F,OAAO,CAAC9R,OAAOyD,IAAK,EAACkM,KAAK62F,aAAa,SAAS18F,GAAG6F,KAAK+1F,QAAQ/1F,KAAKo2F,QAAQhqC,UAAUpsD,KAAKy1F,WAAWz1F,KAAKo2F,QAAQhqC,WAAWpsD,KAAK+1F,QAAQ/1F,KAAKy4C,OAAOnhD,KAAK0I,KAAKq2F,WAAWl8F,EAAEgI,OAAO9R,OAAQ,EAAC2P,KAAK82F,YAAY,WAAW92F,KAAK22F,WAAW1rE,EAAEnpB,MAAO,CAAC,UAASyxB,EAAEp5B,GAAG,IAAIrG,EAAEm6D,EAAEp0D,KAAKmG,KAAK7F,EAAEA,GAAG,CAAC,GAAG6F,KAAKrE,OAAO,SAASxB,GAAG,OAAOrG,EAAEqG,EAAE6F,KAAKg2F,YAAa,EAACh2F,KAAKg2F,WAAW,WAAW,IAAIh2F,KAAKy1F,UAAU,CAAC,IAAIt7F,EAAEi3B,EAAEpxB,KAAKo2F,QAAQhqC,UAAU,OAAOh7B,GAAGj3B,EAAErG,EAAEwf,UAAU,EAAE8d,GAAGt9B,EAAEA,EAAEwf,UAAU8d,KAAKj3B,EAAErG,EAAEA,EAAE,IAAIkM,KAAKy1F,WAAW3hG,EAAEkM,KAAKq2F,WAAWl8F,EAAG,CAAC,CAAC,UAASyoD,EAAEzoD,GAAG8zD,EAAEp0D,KAAKmG,KAAK7F,EAAEA,GAAG,CAAC,GAAG,IAAIi3B,EAAE,GAAGt9B,GAAE,EAAGm3B,GAAE,EAAGjrB,KAAKs3F,MAAM,WAAWrpC,EAAEx8D,UAAU6lG,MAAMzmG,MAAMmP,KAAKiC,WAAWjC,KAAKy4C,OAAO6+C,OAAQ,EAACt3F,KAAKu3F,OAAO,WAAWtpC,EAAEx8D,UAAU8lG,OAAO1mG,MAAMmP,KAAKiC,WAAWjC,KAAKy4C,OAAO8+C,QAAS,EAACv3F,KAAKrE,OAAO,SAASxB,GAAG6F,KAAKy4C,OAAOt+C,EAAE6F,KAAKy4C,OAAOn/B,GAAG,OAAOtZ,KAAKw3F,aAAax3F,KAAKy4C,OAAOn/B,GAAG,MAAMtZ,KAAKy3F,YAAYz3F,KAAKy4C,OAAOn/B,GAAG,QAAQtZ,KAAK03F,aAAc,EAAC13F,KAAK23F,iBAAiB,WAAW1sE,GAAG,IAAImG,EAAEpiC,SAASgR,KAAKy1F,WAAU,EAAI,EAACz1F,KAAKg2F,WAAW,WAAWh2F,KAAK23F,mBAAmBvmE,EAAEpiC,OAAOgR,KAAKq2F,WAAWjlE,EAAE7P,SAASztB,GAAE,CAAG,EAACkM,KAAKw3F,YAAY7tE,GAAE,SAASxvB,GAAG,IAAIi3B,EAAE7gC,KAAK,iBAAiB4J,EAAEA,EAAEA,EAAE/C,SAAS4I,KAAKo2F,QAAQx3C,WAAW9qD,IAAIA,GAAE,EAAGkM,KAAK23F,mBAAmB33F,KAAKq2F,WAAWjlE,EAAE7P,SAAwC,CAA9B,MAAMpnB,GAAG6F,KAAK03F,aAAav9F,EAAG,CAAC,GAAC6F,MAAMA,KAAK03F,aAAa/tE,GAAE,SAASxvB,GAAG6F,KAAK43F,iBAAiB53F,KAAK22F,WAAWx8F,EAAG,GAAC6F,MAAMA,KAAKy3F,WAAW9tE,GAAE,WAAW3pB,KAAK43F,iBAAiB3sE,GAAE,EAAGjrB,KAAKw3F,YAAY,GAAI,GAACx3F,MAAMA,KAAK43F,eAAejuE,GAAE,WAAW3pB,KAAKy4C,OAAOo/C,eAAe,OAAO73F,KAAKw3F,aAAax3F,KAAKy4C,OAAOo/C,eAAe,MAAM73F,KAAKy3F,YAAYz3F,KAAKy4C,OAAOo/C,eAAe,QAAQ73F,KAAK03F,aAAc,GAAC13F,KAAM,UAASlM,EAAE0mB,GAAG,IAAIjG,EAAEgtC,EAAE3F,EAAE3wB,EAAEh9B,KAAKshC,IAAI,EAAE,IAAIhF,GAAGU,EAAEhY,EAAE,mDAAmDg7C,EAAE,mNAAmN78B,EAAEpxB,KAAKlM,EAAE,EAAE+qB,EAAE,EAAEuN,GAAE,EAAGjyB,GAAE,EAAGmxB,EAAE,GAAGpgB,EAAE,CAACha,KAAK,GAAG8lD,OAAO,GAAGm9C,KAAK,CAAC,GAAG,GAAGzyC,EAAElnC,EAAEy4E,MAAM,CAAC,IAAI1/D,EAAE/Y,EAAEy4E,KAAKz4E,EAAEy4E,KAAK,SAAS94F,GAAG,GAAG+Q,EAAE/Q,EAAEmN,IAAIs7C,QAAQ,CAAC,GAAGA,IAAI,IAAI13C,EAAEha,KAAKlC,OAAO,OAAO8E,GAAGqG,EAAEjJ,KAAKlC,OAAOwrB,EAAEi8E,SAAS3iG,EAAE0mB,EAAEi8E,QAAQl1C,EAAEr3C,SAASgB,EAAEha,KAAKga,EAAEha,KAAK,GAAGqiC,EAAEroB,EAAEkmB,GAAI,CAAC,CAAC,UAASjF,EAAEhyB,GAAG,MAAM,WAAWqgB,EAAEq5E,eAAe,KAAK15F,EAAEgR,KAAK,IAAIsf,OAAO,IAAItwB,EAAEnL,QAAQ,IAAImL,EAAE,GAAGnL,MAAO,UAAS4zD,IAAI,OAAO13C,GAAG0wC,IAAIlhB,EAAE,YAAY,wBAAwB,6DAA6DrmB,EAAEogF,iBAAiB,KAAK74C,GAAE,GAAIphC,EAAEq5E,iBAAiB3oF,EAAEha,KAAKga,EAAEha,KAAKorE,QAAO,SAASniE,GAAG,OAAOgyB,EAAEhyB,EAAG,KAAGmN,KAAK,WAAW,GAAI4D,EAAoF,GAAGlU,MAAMC,QAAQiU,EAAEha,KAAK,IAAI,CAAC,IAAI,IAAIkgC,EAAE,EAAE9pB,KAAK8pB,EAAElmB,EAAEha,KAAKlC,OAAOoiC,IAAIlmB,EAAEha,KAAKkgC,GAAGxrB,QAAQzL,GAAG+Q,EAAEha,KAAKiW,OAAO,EAAE,EAAG,MAAK+D,EAAEha,KAAK0U,QAAQzL,GAAzM,SAASA,EAAEA,EAAEi3B,GAAGswB,EAAElnC,EAAEs9E,mBAAmB39F,EAAEqgB,EAAEs9E,gBAAgB39F,EAAEi3B,IAAI9F,EAAE/6B,KAAK4J,EAAG,CAAiI,CAApO,GAAuO,WAAW,IAAI+Q,IAAIsP,EAAE1O,SAAS0O,EAAEk4E,gBAAgBl4E,EAAEo4E,UAAU,OAAO1nF,EAAE,SAAS/Q,EAAEA,EAAEi3B,GAAG,IAAIt9B,EAAEm3B,EAAEzQ,EAAE1O,OAAO,CAAC,EAAE,GAAG,IAAIhY,EAAE,EAAEA,EAAEqG,EAAEnL,OAAO8E,IAAI,CAAC,IAAIy2B,EAAEz2B,EAAEmf,EAAE9Y,EAAErG,GAAG0mB,EAAE1O,SAASye,EAAEz2B,GAAGw3B,EAAEt8B,OAAO,iBAAiBs8B,EAAEx3B,IAAI0mB,EAAEo4E,YAAY3/E,EAAEuH,EAAEo4E,UAAU3/E,EAAEsX,IAAItX,EAAE0W,EAAEY,EAAEtX,GAAG,mBAAmBsX,GAAGU,EAAEV,GAAGU,EAAEV,IAAI,GAAGU,EAAEV,GAAGh6B,KAAK0iB,IAAIgY,EAAEV,GAAGtX,CAAE,QAAOuH,EAAE1O,SAAShY,EAAEw3B,EAAEt8B,OAAO0rC,EAAE,gBAAgB,gBAAgB,6BAA6BpP,EAAEt8B,OAAO,sBAAsB8E,EAAE+qB,EAAEuS,GAAGt9B,EAAEw3B,EAAEt8B,QAAQ0rC,EAAE,gBAAgB,eAAe,4BAA4BpP,EAAEt8B,OAAO,sBAAsB8E,EAAE+qB,EAAEuS,IAAInG,CAAE,KAAImG,EAAE,EAAyI,OAAtIlmB,EAAEha,KAAKlC,QAAQgI,MAAMC,QAAQiU,EAAEha,KAAK,KAAKga,EAAEha,KAAKga,EAAEha,KAAK6M,IAAI5D,GAAGi3B,EAAElmB,EAAEha,KAAKlC,QAAQkc,EAAEha,KAAKiJ,EAAE+Q,EAAEha,KAAK,GAAGspB,EAAE1O,QAAQZ,EAAEipF,OAAOjpF,EAAEipF,KAAKn0D,OAAO1U,GAAUzM,GAAGuS,EAAElmB,CAAE,CAAxrB,EAA2rB,UAAS5D,IAAI,OAAOkT,EAAE1O,QAAQ,IAAIwf,EAAEt8B,MAAO,UAAS26B,EAAExvB,EAAEi3B,GAAG,OAAOt9B,EAAEqG,EAAEqgB,EAAEm4E,4BAAuB,IAASn4E,EAAEk4E,cAAc5+F,KAAK0mB,EAAEk4E,cAAc5+F,GAAG0mB,EAAEm4E,sBAAsB7+F,KAAI,KAAM0mB,EAAEk4E,cAAc5+F,IAAI0mB,EAAEk4E,eAAe,SAASthE,GAAG,SAASA,GAAG,UAAUA,GAAG,UAAUA,IAAI,SAASj3B,GAAG,GAAG8Y,EAAEohB,KAAKl6B,GAAG,CAAC,IAAIi3B,EAAE0kB,WAAW37C,GAAG,GAAGowB,EAAE6G,GAAGA,EAAEnG,EAAE,OAAM,CAAG,QAAM,CAAG,CAA5E,CAA6EmG,GAAG0kB,WAAW1kB,GAAG68B,EAAE55B,KAAKjD,GAAG,IAAI5+B,KAAK4+B,GAAG,KAAKA,EAAE,KAAKA,GAAGA,EAAE,IAAIt9B,CAAE,UAAS4mC,EAAEvgC,EAAEi3B,EAAEt9B,EAAEm3B,GAAG,IAAIV,EAAE,CAACt5B,KAAKkJ,EAAEuV,KAAK0hB,EAAEjgC,QAAQ2C,QAAG,IAASm3B,IAAIV,EAAEwtE,IAAI9sE,GAAG/f,EAAE8rC,OAAOzmD,KAAKg6B,EAAG,CAAAvqB,KAAKQ,MAAM,SAASrG,EAAEi3B,EAAEt9B,GAAG,IAAIm3B,EAAEzQ,EAAEu5E,WAAW,IAAI,GAAGv5E,EAAEs5E,UAAUt5E,EAAEs5E,QAAQ,SAAS35F,EAAEi3B,GAAGj3B,EAAEA,EAAEmZ,UAAU,EAAE,SAAS,IAAIxf,EAAE,IAAImoC,OAAO7iC,EAAEg4B,GAAG,UAAUh4B,EAAEg4B,GAAG,MAAMnG,GAAG9wB,EAAEA,EAAE6U,QAAQlb,EAAE,KAAK6U,MAAM,MAAM4hB,EAAEpwB,EAAEwO,MAAM,MAAMsK,EAAE,EAAEsX,EAAEv7B,QAAQu7B,EAAE,GAAGv7B,OAAOi8B,EAAE,GAAGj8B,OAAO,GAAG,IAAIi8B,EAAEj8B,QAAQikB,EAAE,MAAM,KAAK,IAAI,IAAIsB,EAAE,EAAEgtC,EAAE,EAAEA,EAAEt2B,EAAEj8B,OAAOuyD,IAAI,OAAOt2B,EAAEs2B,GAAG,IAAIhtC,IAAI,OAAOA,GAAG0W,EAAEj8B,OAAO,EAAE,OAAO,IAAK,CAA5R,CAA6RmL,EAAE8wB,IAAI2wB,GAAE,EAAGphC,EAAEg5D,UAAU9xB,EAAElnC,EAAEg5D,aAAah5D,EAAEg5D,UAAUh5D,EAAEg5D,UAAUr5E,GAAG+Q,EAAEipF,KAAK3gB,UAAUh5D,EAAEg5D,eAAe,CAAC,IAAIjpD,EAAE,SAASpwB,EAAEi3B,EAAEt9B,EAAEm3B,EAAEV,GAAG,IAAItX,EAAEsB,EAAEgtC,EAAE3F,EAAErxB,EAAEA,GAAG,CAAC,IAAI,KAAK,IAAI,IAAIlW,EAAE+/E,WAAW//E,EAAEggF,UAAU,IAAI,IAAIpmC,EAAE,EAAEA,EAAE1jC,EAAEv7B,OAAOi/D,IAAI,CAAC,IAAIpvC,EAAE0L,EAAE0jC,GAAG7hC,EAAE,EAAEd,EAAE,EAAEpgB,EAAE,EAAEq2C,OAAE,EAAO,IAAI,IAAIhuB,EAAE,IAAIohE,EAAE,CAACqD,SAAS/sE,EAAEuoD,UAAU30D,EAAEi1E,QAAQ1iE,EAAEqlE,QAAQ,KAAKj2F,MAAMrG,GAAGyoD,EAAE,EAAEA,EAAErvB,EAAEriC,KAAKlC,OAAO4zD,IAAI,GAAG9uD,GAAGq4B,EAAEoH,EAAEriC,KAAK0xD,IAAI13C,QAAQ,CAAC,IAAI5D,EAAEisB,EAAEriC,KAAK0xD,GAAG5zD,OAAOs8B,GAAGhkB,OAAE,IAASi6C,EAAE,EAAEj6C,IAAI8kB,GAAGn+B,KAAK0K,IAAI2O,EAAEi6C,GAAGA,EAAEj6C,GAAGi6C,EAAEj6C,CAAE,GAAEisB,EAAEriC,KAAKlC,SAASs8B,GAAGiI,EAAEriC,KAAKlC,OAAOkc,SAAI,IAASqJ,GAAG6X,GAAG7X,UAAK,IAASqnC,GAAGA,EAAEtwB,IAAI,KAAKA,IAAI/W,EAAE6X,EAAEnZ,EAAE4L,EAAE+8B,EAAEtwB,EAAG,OAAM,CAAC2sE,cAAcz9E,EAAEg5D,UAAUvgE,GAAGilF,cAAcjlF,EAAG,CAAve,CAAwe9Y,EAAEqgB,EAAEs5E,QAAQt5E,EAAEq5E,eAAer5E,EAAEw9E,SAASx9E,EAAE29E,mBAAmB5tE,EAAE0tE,WAAWz9E,EAAEg5D,UAAUjpD,EAAE2tE,eAAet8C,GAAE,EAAGphC,EAAEg5D,UAAUn/D,EAAEogF,kBAAkBvpF,EAAEipF,KAAK3gB,UAAUh5D,EAAEg5D,SAAU,KAAIvgE,EAAEipB,EAAE1hB,GAAG,OAAOA,EAAEi8E,SAASj8E,EAAE1O,QAAQmH,EAAEwjF,UAAUliF,EAAEpa,EAAEonD,EAAE,IAAIozC,EAAE1hF,GAAG/H,EAAEq2C,EAAE/gD,MAAM+T,EAAE6c,EAAEt9B,GAAG8uD,IAAIx2B,EAAE,CAAC+nE,KAAK,CAACoC,QAAO,IAAKrrF,GAAG,CAACipF,KAAK,CAACoC,QAAO,GAAK,EAACv2F,KAAKu2F,OAAO,WAAW,OAAOnqE,CAAE,EAACpsB,KAAKs3F,MAAM,WAAWlrE,GAAE,EAAGm1B,EAAEr3C,QAAQqK,EAAEmtC,EAAElnC,EAAEu7C,OAAO,GAAGxhD,EAAEjB,UAAUiuC,EAAE62C,eAAgB,EAACp4F,KAAKu3F,OAAO,WAAWnmE,EAAE+kE,SAASR,SAASvpE,GAAE,EAAGgF,EAAE+kE,SAASE,WAAW9hF,GAAE,IAAKlK,WAAW+mB,EAAEmmE,OAAO,EAAG,EAACv3F,KAAK+J,QAAQ,WAAW,OAAO5P,CAAE,EAAC6F,KAAKkK,MAAM,WAAW/P,GAAE,EAAGonD,EAAEr3C,QAAQgB,EAAEipF,KAAKpqF,SAAQ,EAAG23C,EAAElnC,EAAEpe,WAAWoe,EAAEpe,SAAS8O,GAAGqJ,EAAE,EAAG,CAAC,UAASnb,EAAEe,GAAG,OAAOA,EAAE6U,QAAQ,sBAAsB,OAAQ,UAAS2lF,EAAEx6F,GAAG,IAAIsnD,EAAE42C,GAAGl+F,EAAEA,GAAG,CAAC,GAAGq5E,UAAUxxD,EAAE7nB,EAAE25F,QAAQ9xC,EAAE7nD,EAAE69F,SAASruB,EAAExvE,EAAE84F,KAAKtxC,EAAExnD,EAAEs8F,QAAQ50C,EAAE1nD,EAAEm+F,SAAS51C,EAAEjB,OAAE,IAAStnD,EAAE45F,WAAW,OAAO55F,EAAE45F,UAAU,IAAI55F,EAAE45F,UAAU,QAAG,IAAS55F,EAAE85F,aAAavxC,EAAEvoD,EAAE85F,aAAa,iBAAiBoE,IAAI,EAAEhkF,EAAEs/E,eAAezsF,QAAQmxF,MAAMA,EAAE,KAAKr2C,IAAIq2C,EAAE,MAAM,IAAIpmG,MAAM,wCAAuC,IAAK+vD,EAAEA,EAAE,KAAK,iBAAiBA,IAAI,EAAE3tC,EAAEs/E,eAAezsF,QAAQ86C,MAAMA,GAAE,GAAI,OAAOhgC,GAAG,OAAOA,GAAG,SAASA,IAAIA,EAAE,MAAM,IAAIu2E,EAAE,EAAE98C,GAAE,EAAGz7C,KAAKQ,MAAM,SAASyqB,EAAEmG,EAAEt9B,GAAG,GAAG,iBAAiBm3B,EAAE,MAAM,IAAIh5B,MAAM,0BAA0B,IAAIs4B,EAAEU,EAAEj8B,OAAOmL,EAAEk+F,EAAErpG,OAAOikB,EAAE+O,EAAEhzB,OAAOulB,EAAEytC,EAAEhzD,OAAOuyD,EAAEG,EAAEioB,GAAG/tB,EAAE,GAAGqS,EAAE,GAAGpvC,EAAE,GAAGuN,EAAEmsE,EAAE,EAAE,IAAIttE,EAAE,OAAOmK,IAAI,GAAGysB,IAAG,IAAKA,IAAI,IAAI52B,EAAE/jB,QAAQu6C,GAAG,CAAC,IAAI,IAAIn2B,EAAEL,EAAEtiB,MAAMqZ,GAAG9W,EAAE,EAAEA,EAAEogB,EAAEt8B,OAAOkc,IAAI,CAAC,GAAG2T,EAAEyM,EAAEpgB,GAAGqtF,GAAG15E,EAAE7vB,OAAOkc,IAAIogB,EAAEt8B,OAAO,EAAEupG,GAAGv2E,EAAEhzB,YAAY,GAAG8E,EAAE,OAAOshC,IAAI,IAAI4sB,GAAGnjC,EAAEvL,UAAU,EAAEiB,KAAKytC,EAAE,CAAC,GAAGT,GAAG,GAAG3F,EAAE,GAAGlhB,EAAE7b,EAAElW,MAAM0vF,IAAIjuB,IAAI3uB,EAAE,OAAOrmB,SAASsF,EAAE7b,EAAElW,MAAM0vF,IAAI,GAAG12C,GAAGA,GAAGz2C,EAAE,OAAO0wC,EAAEA,EAAEhiD,MAAM,EAAE+nD,GAAGvsB,GAAE,EAAI,CAAC,QAAOA,GAAI,KAAI,IAAI7B,EAAEtI,EAAE/jB,QAAQmxF,EAAEE,GAAG31C,EAAE33B,EAAE/jB,QAAQ8a,EAAEu2E,GAAGjxF,EAAE,IAAI20B,OAAO7iC,EAAEspD,GAAGtpD,EAAEqoD,GAAG,KAAKjnC,EAAEyQ,EAAE/jB,QAAQu6C,EAAE82C,KAAK,GAAGttE,EAAEstE,KAAK92C,EAAE,GAAGO,GAAG,IAAInjC,EAAE7vB,QAAQi8B,EAAE3X,UAAUilF,EAAEA,EAAEhkF,KAAKytC,EAAE,CAAC,IAAI,IAAIY,EAAE,OAAOxtB,IAAImjE,EAAE31C,EAAE3vC,EAAE2vC,EAAE33B,EAAE/jB,QAAQ8a,EAAEu2E,GAAGhlE,EAAEtI,EAAE/jB,QAAQmxF,EAAEE,EAAG,MAAK,IAAI,IAAIhlE,IAAIA,EAAEqvB,IAAI,IAAIA,GAAG/jC,EAAEtuB,KAAK06B,EAAE3X,UAAUilF,EAAEhlE,IAAIglE,EAAEhlE,EAAEp5B,EAAEo5B,EAAEtI,EAAE/jB,QAAQmxF,EAAEE,OAAO,CAAC,IAAI,IAAI31C,EAAE,MAAM,GAAG/jC,EAAEtuB,KAAK06B,EAAE3X,UAAUilF,EAAE31C,IAAI1mB,EAAE0mB,EAAE3vC,GAAGsuC,IAAI6oB,IAAI3uB,GAAG,OAAOrmB,IAAI,GAAGusB,GAAG/F,EAAE5sD,QAAQ2yD,EAAE,OAAOvsB,GAAE,EAAI,MAAK,IAAI5a,EAAE+9E,EAAEA,MAAM,CAAC,IAAI,KAAK/9E,EAAEyQ,EAAE/jB,QAAQu6C,EAAEjnC,EAAE,IAAI,OAAO1mB,GAAGm6D,EAAE19D,KAAK,CAACU,KAAK,SAASye,KAAK,gBAAgBve,QAAQ,4BAA4B4mG,IAAIn8C,EAAE5sD,OAAO0E,MAAM6kG,IAAI5D,IAAI,GAAGn6E,IAAI+P,EAAE,EAAE,OAAOoqE,EAAE1pE,EAAE3X,UAAUilF,EAAE/9E,GAAGxL,QAAQ1H,EAAEm6C,IAAI,GAAGA,IAAIiB,GAAGz3B,EAAEzQ,EAAE,KAAKkoC,GAAG,GAAGjB,IAAIiB,GAAG,IAAIloC,GAAGyQ,EAAEzQ,EAAE,KAAKkoC,EAAE,EAAE,IAAInvB,GAAGA,EAAE/Y,EAAE,IAAI+Y,EAAEtI,EAAE/jB,QAAQmxF,EAAE79E,EAAE,KAAK,IAAIooC,GAAGA,EAAEpoC,EAAE,IAAIooC,EAAE33B,EAAE/jB,QAAQ8a,EAAExH,EAAE,IAAI,IAAI2R,EAAE9X,GAAG,IAAIuuC,EAAErvB,EAAEtlC,KAAKoR,IAAIk0B,EAAEqvB,IAAI,GAAG33B,EAAEnlB,OAAO0U,EAAE,EAAE2R,EAAEhyB,KAAKk+F,EAAE,CAACx5E,EAAEtuB,KAAK06B,EAAE3X,UAAUilF,EAAE/9E,GAAGxL,QAAQ1H,EAAEm6C,IAAIx2B,EAAEstE,EAAE/9E,EAAE,EAAE2R,EAAEhyB,KAAKsnD,IAAIjnC,EAAEyQ,EAAE/jB,QAAQu6C,EAAE82C,IAAIhlE,EAAEtI,EAAE/jB,QAAQmxF,EAAEE,GAAG31C,EAAE33B,EAAE/jB,QAAQ8a,EAAEu2E,GAAG,KAAM,KAAI5uE,EAAEtV,EAAEuuC,GAAG,GAAG33B,EAAE3X,UAAUkH,EAAE,EAAEmP,EAAEnP,EAAE,EAAEmP,EAAE1W,KAAK+O,EAAE,CAAC,GAAGnD,EAAEtuB,KAAK06B,EAAE3X,UAAUilF,EAAE/9E,GAAGxL,QAAQ1H,EAAEm6C,IAAIvlB,EAAE1hB,EAAE,EAAEmP,EAAE1W,GAAGsgB,EAAEtI,EAAE/jB,QAAQmxF,EAAEE,GAAG/9E,EAAEyQ,EAAE/jB,QAAQu6C,EAAE82C,GAAGh3C,IAAI6oB,IAAI3uB,GAAG,OAAOrmB,IAAI,GAAGusB,GAAG/F,EAAE5sD,QAAQ2yD,EAAE,OAAOvsB,GAAE,GAAI,KAAM,CAAA64B,EAAE19D,KAAK,CAACU,KAAK,SAASye,KAAK,gBAAgBve,QAAQ,8CAA8C4mG,IAAIn8C,EAAE5sD,OAAO0E,MAAM6kG,IAAI/9E,GAAI,OAAMA,GAAI,QAAOm6E,IAAI,SAASj6D,EAAEvgC,GAAGyhD,EAAErrD,KAAK4J,GAAGiyB,EAAEmsE,CAAE,UAASlkF,EAAEla,GAAG,IAAIi3B,EAAE,EAAE,IAAI,IAAIj3B,EAAE,CAAC,IAAIrG,EAAEm3B,EAAE3X,UAAUkH,EAAE,EAAErgB,GAAGrG,GAAG,KAAKA,EAAE22B,SAAS2G,EAAEt9B,EAAE9E,OAAQ,QAAOoiC,CAAE,UAASujE,EAAEx6F,GAAG,OAAOrG,SAAI,IAASqG,IAAIA,EAAE8wB,EAAE3X,UAAUilF,IAAI15E,EAAEtuB,KAAK4J,GAAGo+F,EAAEhuE,EAAEmQ,EAAE7b,GAAG0iC,GAAG6oB,KAAKh1C,GAAI,UAAS8G,EAAE/hC,GAAGo+F,EAAEp+F,EAAEugC,EAAE7b,GAAGA,EAAE,GAAG+jC,EAAE33B,EAAE/jB,QAAQ8a,EAAEu2E,EAAG,UAASnjE,EAAEj7B,GAAG,MAAM,CAACjJ,KAAK0qD,EAAE5E,OAAOiX,EAAEkmC,KAAK,CAAC3gB,UAAU6kB,EAAEG,UAAUx2E,EAAEjY,QAAQ0xC,EAAEg9C,YAAYt+F,EAAEq8F,OAAOpqE,GAAGgF,GAAG,IAAK,UAASg5C,IAAIT,EAAEv0C,KAAKwmB,EAAE,GAAGqS,EAAE,EAAG,CAAC,EAACjuD,KAAKkK,MAAM,WAAWuxC,GAAE,CAAG,EAACz7C,KAAKo4F,aAAa,WAAW,OAAOG,CAAE,CAAC,UAASjxF,EAAEnN,GAAG,IAAIi3B,EAAEj3B,EAAEjJ,KAAK4C,EAAEygB,EAAE6c,EAAEiiE,UAAUpoE,GAAE,EAAG,GAAGmG,EAAEtvB,MAAMhO,EAAEs/F,UAAUhiE,EAAEtvB,MAAMsvB,EAAE/P,WAAW,GAAG+P,EAAEgR,SAAShR,EAAEgR,QAAQlxC,KAAK,CAAC,IAAIq5B,EAAE,CAACrgB,MAAM,WAAW+gB,GAAE,EAAGzQ,EAAE4W,EAAEiiE,SAAS,CAACniG,KAAK,GAAG8lD,OAAO,GAAGm9C,KAAK,CAACpqF,SAAQ,IAAM,EAACutF,MAAMnrE,EAAEorE,OAAOprE,GAAG,GAAGu1B,EAAE5tD,EAAEk/F,UAAU,CAAC,IAAI,IAAI//E,EAAE,EAAEA,EAAEme,EAAEgR,QAAQlxC,KAAKlC,SAAS8E,EAAEk/F,SAAS,CAAC9hG,KAAKkgC,EAAEgR,QAAQlxC,KAAK+hB,GAAG+jC,OAAO5lB,EAAEgR,QAAQ4U,OAAOm9C,KAAK/iE,EAAEgR,QAAQ+xD,MAAM5pE,IAAIU,GAAGhY,YAAYme,EAAEgR,OAAQ,MAAKsf,EAAE5tD,EAAEo/F,aAAap/F,EAAEo/F,UAAU9hE,EAAEgR,QAAQ7X,EAAE6G,EAAE/P,aAAa+P,EAAEgR,QAAS,CAAAhR,EAAEilD,WAAWprD,GAAGzQ,EAAE4W,EAAEiiE,SAASjiE,EAAEgR,QAAS,UAAS5nB,EAAErgB,EAAEi3B,GAAG,IAAIt9B,EAAEygB,EAAEpa,GAAGunD,EAAE5tD,EAAEq/F,eAAer/F,EAAEq/F,aAAa/hE,GAAGt9B,EAAEixE,mBAAmBxwD,EAAEpa,EAAG,UAASgyB,IAAI,MAAM,IAAIl6B,MAAM,mBAAoB,UAASiqC,EAAE/hC,GAAG,GAAG,iBAAiBA,GAAG,OAAOA,EAAE,OAAOA,EAAE,IAAIi3B,EAAEp6B,MAAMC,QAAQkD,GAAG,GAAG,CAAC,EAAE,IAAI,IAAIrG,KAAKqG,EAAEi3B,EAAEt9B,GAAGooC,EAAE/hC,EAAErG,IAAI,OAAOs9B,CAAE,UAASzH,EAAExvB,EAAEi3B,GAAG,OAAO,WAAWj3B,EAAEtJ,MAAMugC,EAAEnvB,UAAW,CAAC,UAASy/C,EAAEvnD,GAAG,MAAM,mBAAmBA,CAAE,QAAOonD,IAAI1iC,EAAEzQ,UAAU,SAASjU,GAAG,IAAIi3B,EAAEj3B,EAAEjJ,KAAuD,QAAlD,IAASmjB,EAAEqiF,WAAWtlE,IAAI/c,EAAEqiF,UAAUtlE,EAAEiiE,UAAa,iBAAiBjiE,EAAEpyB,MAAM6f,EAAEomD,YAAY,CAACouB,SAASh/E,EAAEqiF,UAAUt0D,QAAQ/tB,EAAE7T,MAAM4wB,EAAEpyB,MAAMoyB,EAAEuF,QAAQ0/C,UAAS,SAAU,GAAGx3D,EAAE40E,MAAMriE,EAAEpyB,iBAAiBy0F,MAAMriE,EAAEpyB,iBAAiB1N,OAAO,CAAC,IAAIwC,EAAEugB,EAAE7T,MAAM4wB,EAAEpyB,MAAMoyB,EAAEuF,QAAQ7iC,GAAG+qB,EAAEomD,YAAY,CAACouB,SAASh/E,EAAEqiF,UAAUt0D,QAAQtuC,EAAEuiF,UAAS,GAAK,CAAC,IAAG/qD,EAAE75B,UAAUH,OAAOC,OAAO08D,EAAEx8D,YAAY2I,YAAYkxB,GAAGpgB,EAAEzZ,UAAUH,OAAOC,OAAO08D,EAAEx8D,YAAY2I,YAAY8Q,GAAGqoB,EAAE9hC,UAAUH,OAAOC,OAAOgiC,EAAE9hC,YAAY2I,YAAYm5B,GAAGqvB,EAAEnxD,UAAUH,OAAOC,OAAO08D,EAAEx8D,YAAY2I,YAAYwoD,EAAEvuC,CAAE,OAA70kB,wGCoB3D,SAASqkF,EAAWx3E,GAClB,GAAoB,iBAATA,EACT,MAAM,IAAIqW,UAAU,mCAAqC3lB,KAAKoD,UAAUkM,GAE3E,CAGD,SAASy3E,EAAqBz3E,EAAM03E,GAMlC,IALA,IAIIlpF,EAJA0Y,EAAM,GACNywE,EAAoB,EACpBC,GAAa,EACbC,EAAO,EAEFjlG,EAAI,EAAGA,GAAKotB,EAAKlyB,SAAU8E,EAAG,CACrC,GAAIA,EAAIotB,EAAKlyB,OACX0gB,EAAOwR,EAAK/xB,WAAW2E,OACpB,IAAa,KAAT4b,EACP,MAEAA,EAAO,EAAP,CACF,GAAa,KAATA,EAAmB,CACrB,GAAIopF,IAAchlG,EAAI,GAAc,IAATilG,QAEpB,GAAID,IAAchlG,EAAI,GAAc,IAATilG,EAAY,CAC5C,GAAI3wE,EAAIp5B,OAAS,GAA2B,IAAtB6pG,GAA8D,KAAnCzwE,EAAIj5B,WAAWi5B,EAAIp5B,OAAS,IAAsD,KAAnCo5B,EAAIj5B,WAAWi5B,EAAIp5B,OAAS,GAC1H,GAAIo5B,EAAIp5B,OAAS,EAAG,CAClB,IAAIgqG,EAAiB5wE,EAAIlV,YAAY,KACrC,GAAI8lF,IAAmB5wE,EAAIp5B,OAAS,EAAG,EACb,IAApBgqG,GACF5wE,EAAM,GACNywE,EAAoB,GAGpBA,GADAzwE,EAAMA,EAAIxuB,MAAM,EAAGo/F,IACKhqG,OAAS,EAAIo5B,EAAIlV,YAAY,KAEvD4lF,EAAYhlG,EACZilG,EAAO,EACP,QACD,CACF,MAAM,GAAmB,IAAf3wE,EAAIp5B,QAA+B,IAAfo5B,EAAIp5B,OAAc,CAC/Co5B,EAAM,GACNywE,EAAoB,EACpBC,EAAYhlG,EACZilG,EAAO,EACP,QACD,CAECH,IACExwE,EAAIp5B,OAAS,EACfo5B,GAAO,MAEPA,EAAM,KACRywE,EAAoB,EAEvB,MACKzwE,EAAIp5B,OAAS,EACfo5B,GAAO,IAAMlH,EAAKtnB,MAAMk/F,EAAY,EAAGhlG,GAEvCs0B,EAAMlH,EAAKtnB,MAAMk/F,EAAY,EAAGhlG,GAClC+kG,EAAoB/kG,EAAIglG,EAAY,EAEtCA,EAAYhlG,EACZilG,EAAO,CACR,MAAmB,KAATrpF,IAA+B,IAAVqpF,IAC5BA,EAEFA,GAAQ,CAEX,CACD,OAAO3wE,CACR,CAcD,IAAI6wE,EAAQ,CAEVxtF,QAAS,WAKP,IAJA,IAEIytF,EAFAC,EAAe,GACfC,GAAmB,EAGdtlG,EAAImO,UAAUjT,OAAS,EAAG8E,IAAM,IAAMslG,EAAkBtlG,IAAK,CACpE,IAAIotB,EACAptB,GAAK,EACPotB,EAAOjf,UAAUnO,SAELxE,IAAR4pG,IACFA,EAAMzqG,EAAQyqG,OAChBh4E,EAAOg4E,GAGTR,EAAWx3E,GAGS,IAAhBA,EAAKlyB,SAITmqG,EAAej4E,EAAO,IAAMi4E,EAC5BC,EAA0C,KAAvBl4E,EAAK/xB,WAAW,GACpC,CAQD,OAFAgqG,EAAeR,EAAqBQ,GAAeC,GAE/CA,EACED,EAAanqG,OAAS,EACjB,IAAMmqG,EAEN,IACAA,EAAanqG,OAAS,EACxBmqG,EAEA,GAEV,EAEDE,UAAW,SAAmBn4E,GAG5B,GAFAw3E,EAAWx3E,GAES,IAAhBA,EAAKlyB,OAAc,MAAO,IAE9B,IAAIsqG,EAAoC,KAAvBp4E,EAAK/xB,WAAW,GAC7BoqG,EAAyD,KAArCr4E,EAAK/xB,WAAW+xB,EAAKlyB,OAAS,GAQtD,OAHoB,KAFpBkyB,EAAOy3E,EAAqBz3E,GAAOo4E,IAE1BtqG,QAAiBsqG,IAAYp4E,EAAO,KACzCA,EAAKlyB,OAAS,GAAKuqG,IAAmBr4E,GAAQ,KAE9Co4E,EAAmB,IAAMp4E,EACtBA,CACR,EAEDo4E,WAAY,SAAoBp4E,GAE9B,OADAw3E,EAAWx3E,GACJA,EAAKlyB,OAAS,GAA4B,KAAvBkyB,EAAK/xB,WAAW,EAC3C,EAEDgc,KAAM,WACJ,GAAyB,IAArBlJ,UAAUjT,OACZ,MAAO,IAET,IADA,IAAIwqG,EACK1lG,EAAI,EAAGA,EAAImO,UAAUjT,SAAU8E,EAAG,CACzC,IAAI0nB,EAAMvZ,UAAUnO,GACpB4kG,EAAWl9E,GACPA,EAAIxsB,OAAS,SACAM,IAAXkqG,EACFA,EAASh+E,EAETg+E,GAAU,IAAMh+E,EAErB,CACD,YAAelsB,IAAXkqG,EACK,IACFP,EAAMI,UAAUG,EACxB,EAEDC,SAAU,SAAkBplG,EAAMqlG,GAIhC,GAHAhB,EAAWrkG,GACXqkG,EAAWgB,GAEPrlG,IAASqlG,EAAI,MAAO,GAKxB,IAHArlG,EAAO4kG,EAAMxtF,QAAQpX,OACrBqlG,EAAKT,EAAMxtF,QAAQiuF,IAEF,MAAO,GAIxB,IADA,IAAIC,EAAY,EACTA,EAAYtlG,EAAKrF,QACa,KAA/BqF,EAAKlF,WAAWwqG,KADYA,GASlC,IALA,IAAIC,EAAUvlG,EAAKrF,OACf6qG,EAAUD,EAAUD,EAGpBG,EAAU,EACPA,EAAUJ,EAAG1qG,QACa,KAA3B0qG,EAAGvqG,WAAW2qG,KADUA,GAW9B,IAPA,IACIC,EADQL,EAAG1qG,OACK8qG,EAGhB9qG,EAAS6qG,EAAUE,EAAQF,EAAUE,EACrCC,GAAiB,EACjBlmG,EAAI,EACDA,GAAK9E,IAAU8E,EAAG,CACvB,GAAIA,IAAM9E,EAAQ,CAChB,GAAI+qG,EAAQ/qG,EAAQ,CAClB,GAAmC,KAA/B0qG,EAAGvqG,WAAW2qG,EAAUhmG,GAG1B,OAAO4lG,EAAG9/F,MAAMkgG,EAAUhmG,EAAI,GACzB,GAAU,IAANA,EAGT,OAAO4lG,EAAG9/F,MAAMkgG,EAAUhmG,EAE7B,MAAU+lG,EAAU7qG,IACoB,KAAnCqF,EAAKlF,WAAWwqG,EAAY7lG,GAG9BkmG,EAAgBlmG,EACD,IAANA,IAGTkmG,EAAgB,IAGpB,KACD,CACD,IAAIC,EAAW5lG,EAAKlF,WAAWwqG,EAAY7lG,GAE3C,GAAImmG,IADSP,EAAGvqG,WAAW2qG,EAAUhmG,GAEnC,MACoB,KAAbmmG,IACPD,EAAgBlmG,EACnB,CAED,IAAI4T,EAAM,GAGV,IAAK5T,EAAI6lG,EAAYK,EAAgB,EAAGlmG,GAAK8lG,IAAW9lG,EAClDA,IAAM8lG,GAAkC,KAAvBvlG,EAAKlF,WAAW2E,KAChB,IAAf4T,EAAI1Y,OACN0Y,GAAO,KAEPA,GAAO,OAMb,OAAIA,EAAI1Y,OAAS,EACR0Y,EAAMgyF,EAAG9/F,MAAMkgG,EAAUE,IAEhCF,GAAWE,EACoB,KAA3BN,EAAGvqG,WAAW2qG,MACdA,EACGJ,EAAG9/F,MAAMkgG,GAEnB,EAEDI,UAAW,SAAmBh5E,GAC5B,OAAOA,CACR,EAEDi5E,QAAS,SAAiBj5E,GAExB,GADAw3E,EAAWx3E,GACS,IAAhBA,EAAKlyB,OAAc,MAAO,IAK9B,IAJA,IAAI0gB,EAAOwR,EAAK/xB,WAAW,GACvBirG,EAAmB,KAAT1qF,EACVvf,GAAO,EACPkqG,GAAe,EACVvmG,EAAIotB,EAAKlyB,OAAS,EAAG8E,GAAK,IAAKA,EAEtC,GAAa,MADb4b,EAAOwR,EAAK/xB,WAAW2E,KAEnB,IAAKumG,EAAc,CACjBlqG,EAAM2D,EACN,KACD,OAGHumG,GAAe,EAInB,OAAa,IAATlqG,EAAmBiqG,EAAU,IAAM,IACnCA,GAAmB,IAARjqG,EAAkB,KAC1B+wB,EAAKtnB,MAAM,EAAGzJ,EACtB,EAEDmqG,SAAU,SAAkBp5E,EAAMrqB,GAChC,QAAYvH,IAARuH,GAAoC,iBAARA,EAAkB,MAAM,IAAI0gC,UAAU,mCACtEmhE,EAAWx3E,GAEX,IAGIptB,EAHAqjB,EAAQ,EACRhnB,GAAO,EACPkqG,GAAe,EAGnB,QAAY/qG,IAARuH,GAAqBA,EAAI7H,OAAS,GAAK6H,EAAI7H,QAAUkyB,EAAKlyB,OAAQ,CACpE,GAAI6H,EAAI7H,SAAWkyB,EAAKlyB,QAAU6H,IAAQqqB,EAAM,MAAO,GACvD,IAAIq5E,EAAS1jG,EAAI7H,OAAS,EACtBwrG,GAAoB,EACxB,IAAK1mG,EAAIotB,EAAKlyB,OAAS,EAAG8E,GAAK,IAAKA,EAAG,CACrC,IAAI4b,EAAOwR,EAAK/xB,WAAW2E,GAC3B,GAAa,KAAT4b,GAGA,IAAK2qF,EAAc,CACjBljF,EAAQrjB,EAAI,EACZ,KACD,OAEuB,IAAtB0mG,IAGFH,GAAe,EACfG,EAAmB1mG,EAAI,GAErBymG,GAAU,IAER7qF,IAAS7Y,EAAI1H,WAAWorG,IACR,KAAZA,IAGJpqG,EAAM2D,IAKRymG,GAAU,EACVpqG,EAAMqqG,GAIb,CAGD,OADIrjF,IAAUhnB,EAAKA,EAAMqqG,GAAmC,IAATrqG,IAAYA,EAAM+wB,EAAKlyB,QACnEkyB,EAAKtnB,MAAMud,EAAOhnB,EAC1B,CACC,IAAK2D,EAAIotB,EAAKlyB,OAAS,EAAG8E,GAAK,IAAKA,EAClC,GAA2B,KAAvBotB,EAAK/xB,WAAW2E,IAGhB,IAAKumG,EAAc,CACjBljF,EAAQrjB,EAAI,EACZ,KACD,OACiB,IAAT3D,IAGXkqG,GAAe,EACflqG,EAAM2D,EAAI,GAId,OAAa,IAAT3D,EAAmB,GAChB+wB,EAAKtnB,MAAMud,EAAOhnB,EAE5B,EAEDsqG,QAAS,SAAiBv5E,GACxBw3E,EAAWx3E,GAQX,IAPA,IAAIw5E,GAAY,EACZC,EAAY,EACZxqG,GAAO,EACPkqG,GAAe,EAGfO,EAAc,EACT9mG,EAAIotB,EAAKlyB,OAAS,EAAG8E,GAAK,IAAKA,EAAG,CACzC,IAAI4b,EAAOwR,EAAK/xB,WAAW2E,GAC3B,GAAa,KAAT4b,GASS,IAATvf,IAGFkqG,GAAe,EACflqG,EAAM2D,EAAI,GAEC,KAAT4b,GAEkB,IAAdgrF,EACFA,EAAW5mG,EACY,IAAhB8mG,IACPA,EAAc,IACK,IAAdF,IAGTE,GAAe,QArBb,IAAKP,EAAc,CACjBM,EAAY7mG,EAAI,EAChB,KACD,CAoBN,CAED,OAAkB,IAAd4mG,IAA4B,IAATvqG,GAEH,IAAhByqG,GAEgB,IAAhBA,GAAqBF,IAAavqG,EAAM,GAAKuqG,IAAaC,EAAY,EACjE,GAEFz5E,EAAKtnB,MAAM8gG,EAAUvqG,EAC7B,EAED+lD,OAAQ,SAAgB2kD,GACtB,GAAmB,OAAfA,GAA6C,iBAAfA,EAChC,MAAM,IAAItjE,UAAU,0EAA4EsjE,GAElG,OAvVJ,SAAiBC,EAAKD,GACpB,IAAIE,EAAMF,EAAWE,KAAOF,EAAWv9D,KACnCnS,EAAO0vE,EAAW1vE,OAAS0vE,EAAW9oG,MAAQ,KAAO8oG,EAAWhkG,KAAO,IAC3E,OAAKkkG,EAGDA,IAAQF,EAAWv9D,KACdy9D,EAAM5vE,EAER4vE,EAAMD,EAAM3vE,EALVA,CAMV,CA6UU6vE,CAAQ,IAAKH,EACrB,EAEDr6F,MAAO,SAAe0gB,GACpBw3E,EAAWx3E,GAEX,IAAI1C,EAAM,CAAE8e,KAAM,GAAIy9D,IAAK,GAAI5vE,KAAM,GAAIt0B,IAAK,GAAI9E,KAAM,IACxD,GAAoB,IAAhBmvB,EAAKlyB,OAAc,OAAOwvB,EAC9B,IAEIrH,EAFAzH,EAAOwR,EAAK/xB,WAAW,GACvBmqG,EAAsB,KAAT5pF,EAEb4pF,GACF96E,EAAI8e,KAAO,IACXnmB,EAAQ,GAERA,EAAQ,EAaV,IAXA,IAAIujF,GAAY,EACZC,EAAY,EACZxqG,GAAO,EACPkqG,GAAe,EACfvmG,EAAIotB,EAAKlyB,OAAS,EAIlB4rG,EAAc,EAGX9mG,GAAKqjB,IAASrjB,EAEnB,GAAa,MADb4b,EAAOwR,EAAK/xB,WAAW2E,KAUV,IAAT3D,IAGFkqG,GAAe,EACflqG,EAAM2D,EAAI,GAEC,KAAT4b,GAEkB,IAAdgrF,EAAiBA,EAAW5mG,EAA2B,IAAhB8mG,IAAmBA,EAAc,IACrD,IAAdF,IAGXE,GAAe,QAlBb,IAAKP,EAAc,CACjBM,EAAY7mG,EAAI,EAChB,KACD,CAwCP,OArBkB,IAAd4mG,IAA4B,IAATvqG,GAEP,IAAhByqG,GAEgB,IAAhBA,GAAqBF,IAAavqG,EAAM,GAAKuqG,IAAaC,EAAY,GACvD,IAATxqG,IACiCquB,EAAI2M,KAAO3M,EAAIzsB,KAAhC,IAAd4oG,GAAmBrB,EAAkCp4E,EAAKtnB,MAAM,EAAGzJ,GAAgC+wB,EAAKtnB,MAAM+gG,EAAWxqG,KAG7G,IAAdwqG,GAAmBrB,GACrB96E,EAAIzsB,KAAOmvB,EAAKtnB,MAAM,EAAG8gG,GACzBl8E,EAAI2M,KAAOjK,EAAKtnB,MAAM,EAAGzJ,KAEzBquB,EAAIzsB,KAAOmvB,EAAKtnB,MAAM+gG,EAAWD,GACjCl8E,EAAI2M,KAAOjK,EAAKtnB,MAAM+gG,EAAWxqG,IAEnCquB,EAAI3nB,IAAMqqB,EAAKtnB,MAAM8gG,EAAUvqG,IAG7BwqG,EAAY,EAAGn8E,EAAIu8E,IAAM75E,EAAKtnB,MAAM,EAAG+gG,EAAY,GAAYrB,IAAY96E,EAAIu8E,IAAM,KAElFv8E,CACR,EAEDs8E,IAAK,IACLtnB,UAAW,IACXynB,MAAO,KACPhC,MAAO,MAGTA,EAAMA,MAAQA,EAEdv6E,EAAOiE,QAAUs2E,aC/gBjB,IAOIiC,EACAC,EARA1sG,EAAUiwB,EAAOiE,QAAU,CAAC,EAUhC,SAASy4E,IACL,MAAM,IAAInpG,MAAM,kCACnB,CACD,SAASopG,IACL,MAAM,IAAIppG,MAAM,oCACnB,CAqBD,SAASqpG,EAAWC,GAChB,GAAIL,IAAqB7wF,WAErB,OAAOA,WAAWkxF,EAAK,GAG3B,IAAKL,IAAqBE,IAAqBF,IAAqB7wF,WAEhE,OADA6wF,EAAmB7wF,WACZA,WAAWkxF,EAAK,GAE3B,IAEI,OAAOL,EAAiBK,EAAK,EAShC,CARC,MAAMphG,GACJ,IAEI,OAAO+gG,EAAiBrhG,KAAK,KAAM0hG,EAAK,EAI3C,CAHC,MAAMphG,GAEJ,OAAO+gG,EAAiBrhG,KAAKmG,KAAMu7F,EAAK,EAC3C,CACJ,CAGJ,EA5CA,WACG,IAEQL,EADsB,mBAAf7wF,WACYA,WAEA+wF,CAI1B,CAFC,MAAOjhG,GACL+gG,EAAmBE,CACtB,CACD,IAEQD,EADwB,mBAAjBvwF,aACcA,aAEAywF,CAI5B,CAFC,MAAOlhG,GACLghG,EAAqBE,CACxB,CAlBJ,IAwED,IAEIG,EAFA7iB,EAAQ,GACR8iB,GAAW,EAEXC,GAAc,EAElB,SAASC,IACAF,GAAaD,IAGlBC,GAAW,EACPD,EAAaxsG,OACb2pF,EAAQ6iB,EAAa9iG,OAAOigF,GAE5B+iB,GAAc,EAEd/iB,EAAM3pF,QACN4sG,IAEP,CAED,SAASA,IACL,IAAIH,EAAJ,CAGA,IAAIh1F,EAAU60F,EAAWK,GACzBF,GAAW,EAGX,IADA,IAAIxiE,EAAM0/C,EAAM3pF,OACViqC,GAAK,CAGP,IAFAuiE,EAAe7iB,EACfA,EAAQ,KACC+iB,EAAaziE,GACduiE,GACAA,EAAaE,GAAYn4E,MAGjCm4E,GAAc,EACdziE,EAAM0/C,EAAM3pF,MACf,CACDwsG,EAAe,KACfC,GAAW,EAnEf,SAAyBI,GACrB,GAAIV,IAAuBvwF,aAEvB,OAAOA,aAAaixF,GAGxB,IAAKV,IAAuBE,IAAwBF,IAAuBvwF,aAEvE,OADAuwF,EAAqBvwF,aACdA,aAAaixF,GAExB,IAEWV,EAAmBU,EAU7B,CATC,MAAO1hG,GACL,IAEI,OAAOghG,EAAmBthG,KAAK,KAAMgiG,EAKxC,CAJC,MAAO1hG,GAGL,OAAOghG,EAAmBthG,KAAKmG,KAAM67F,EACxC,CACJ,CAIJ,CA0CGC,CAAgBr1F,EAlBf,CAmBJ,CAgBD,SAASs1F,EAAKR,EAAK59F,GACfqC,KAAKu7F,IAAMA,EACXv7F,KAAKrC,MAAQA,CAChB,CAWD,SAASq+F,IAAS,CA5BlBvtG,EAAQ44E,SAAW,SAAUk0B,GACzB,IAAIhjF,EAAO,IAAIvhB,MAAMiL,UAAUjT,OAAS,GACxC,GAAIiT,UAAUjT,OAAS,EACnB,IAAK,IAAI8E,EAAI,EAAGA,EAAImO,UAAUjT,OAAQ8E,IAClCykB,EAAKzkB,EAAI,GAAKmO,UAAUnO,GAGhC6kF,EAAMpoF,KAAK,IAAIwrG,EAAKR,EAAKhjF,IACJ,IAAjBogE,EAAM3pF,QAAiBysG,GACvBH,EAAWM,EAElB,EAODG,EAAKtqG,UAAU8xB,IAAM,WACjBvjB,KAAKu7F,IAAI1qG,MAAM,KAAMmP,KAAKrC,MAC7B,EACDlP,EAAQwtG,MAAQ,UAChBxtG,EAAQy1F,SAAU,EAClBz1F,EAAQytG,IAAM,CAAC,EACfztG,EAAQ0tG,KAAO,GACf1tG,EAAQiR,QAAU,GAClBjR,EAAQoa,SAAW,CAAC,EAIpBpa,EAAQ6qB,GAAK0iF,EACbvtG,EAAQ2tG,YAAcJ,EACtBvtG,EAAQ4tG,KAAOL,EACfvtG,EAAQgrB,IAAMuiF,EACdvtG,EAAQopG,eAAiBmE,EACzBvtG,EAAQ6tG,mBAAqBN,EAC7BvtG,EAAQ03C,KAAO61D,EACfvtG,EAAQ8tG,gBAAkBP,EAC1BvtG,EAAQ+tG,oBAAsBR,EAE9BvtG,EAAQguG,UAAY,SAAU1qG,GAAQ,MAAO,EAAI,EAEjDtD,EAAQiuG,QAAU,SAAU3qG,GACxB,MAAM,IAAIE,MAAM,mCACnB,EAEDxD,EAAQyqG,IAAM,WAAc,MAAO,GAAK,EACxCzqG,EAAQkuG,MAAQ,SAAU5B,GACtB,MAAM,IAAI9oG,MAAM,iCACnB,EACDxD,EAAQmuG,MAAQ,WAAa,OAAO,CAAI,wBCvLxC,iBACE,SAASt/D,GAGsC3a,GAC9CA,EAAQk6E,SACoCn+E,GAC5CA,EAAOm+E,SAHT,IAIIC,EAA8B,iBAAVrzF,EAAAA,GAAsBA,EAAAA,EAE7CqzF,EAAWrzF,SAAWqzF,GACtBA,EAAW53F,SAAW43F,GACtBA,EAAWz3F,KAUZ,IAAI03F,EAGJC,EAAS,WAGT7xE,EAAO,GAUP8xE,EAAgB,QAChBC,EAAgB,eAChBC,EAAkB,4BAGlBnmD,EAAS,CACR,SAAY,kDACZ,YAAa,iDACb,gBAAiB,iBAKlB9oD,EAAQD,KAAKC,MACbkvG,EAAqBzsG,OAAOC,aAa5B,SAASkR,EAAM7Q,GACd,MAAM,IAAIuK,WAAWw7C,EAAO/lD,GAC5B,CAUD,SAAS8M,EAAIJ,EAAOy0B,GAGnB,IAFA,IAAIpjC,EAAS2O,EAAM3O,OACfqB,EAAS,GACNrB,KACNqB,EAAOrB,GAAUojC,EAAGz0B,EAAM3O,IAE3B,OAAOqB,CACP,CAYD,SAASgtG,EAAUC,EAAQlrE,GAC1B,IAAIk1D,EAAQgW,EAAO30F,MAAM,KACrBtY,EAAS,GAWb,OAVIi3F,EAAMt4F,OAAS,IAGlBqB,EAASi3F,EAAM,GAAK,IACpBgW,EAAShW,EAAM,IAMTj3F,EADO0N,GAFdu/F,EAASA,EAAOtuF,QAAQmuF,EAAiB,MACrBx0F,MAAM,KACAypB,GAAIjnB,KAAK,IAEnC,CAeD,SAASoyF,EAAWD,GAMnB,IALA,IAGIvvG,EACAqB,EAJAO,EAAS,GACT6tG,EAAU,EACVxuG,EAASsuG,EAAOtuG,OAGbwuG,EAAUxuG,IAChBjB,EAAQuvG,EAAOnuG,WAAWquG,OACb,OAAUzvG,GAAS,OAAUyvG,EAAUxuG,EAG3B,QAAX,OADbI,EAAQkuG,EAAOnuG,WAAWquG,OAEzB7tG,EAAOY,OAAe,KAARxC,IAAkB,KAAe,KAARqB,GAAiB,QAIxDO,EAAOY,KAAKxC,GACZyvG,KAGD7tG,EAAOY,KAAKxC,GAGd,OAAO4B,CACP,CAUD,SAAS8tG,EAAW9/F,GACnB,OAAOI,EAAIJ,GAAO,SAAS5P,GAC1B,IAAI4B,EAAS,GAOb,OANI5B,EAAQ,QAEX4B,GAAUytG,GADVrvG,GAAS,SAC8B,GAAK,KAAQ,OACpDA,EAAQ,MAAiB,KAARA,GAElB4B,GAAUytG,EAAmBrvG,EAE7B,IAAEod,KAAK,GACR,CAmCD,SAASuyF,EAAazpE,EAAO0pE,GAG5B,OAAO1pE,EAAQ,GAAK,IAAMA,EAAQ,MAAgB,GAAR0pE,IAAc,EACxD,CAOD,SAASC,EAAMC,EAAOC,EAAWC,GAChC,IAAIrjE,EAAI,EAGR,IAFAmjE,EAAQE,EAAY7vG,EAAM2vG,EA1LpB,KA0LoCA,GAAS,EACnDA,GAAS3vG,EAAM2vG,EAAQC,GACOD,EAAQG,IAA2BtjE,GAAKvP,EACrE0yE,EAAQ3vG,EAAM2vG,EA3KA1yE,IA6Kf,OAAOj9B,EAAMwsC,EAAI,GAAsBmjE,GAASA,EAhM1C,IAiMN,CASD,SAAS5qG,EAAO+L,GAEf,IAEI0I,EAIAu2F,EACA7kG,EACA1F,EACAwqG,EACAhiE,EACAxB,EACAzG,EACA7C,EAEA+sE,EArEiBC,EAsDjBzuG,EAAS,GACTqqD,EAAch7C,EAAMhQ,OAEpB8E,EAAI,EACJy2B,EA7MM,IA8MN8zE,EA/MS,GAoOb,KALAJ,EAAQj/F,EAAMkU,YA7NH,MA8NC,IACX+qF,EAAQ,GAGJ7kG,EAAI,EAAGA,EAAI6kG,IAAS7kG,EAEpB4F,EAAM7P,WAAWiK,IAAM,KAC1B0I,EAAM,aAEPnS,EAAOY,KAAKyO,EAAM7P,WAAWiK,IAM9B,IAAK1F,EAAQuqG,EAAQ,EAAIA,EAAQ,EAAI,EAAGvqG,EAAQsmD,GAAwC,CAOvF,IAAKkkD,EAAOpqG,EAAGooC,EAAI,EAAGxB,EAAIvP,EAErBz3B,GAASsmD,GACZl4C,EAAM,mBAGPmyB,GAxGmBmqE,EAwGEp/F,EAAM7P,WAAWuE,MAvGxB,GAAK,GACb0qG,EAAY,GAEhBA,EAAY,GAAK,GACbA,EAAY,GAEhBA,EAAY,GAAK,GACbA,EAAY,GAEbjzE,IAgGQA,GAAQ8I,EAAQ/lC,GAAO8uG,EAASlpG,GAAKooC,KACjDp6B,EAAM,YAGPhO,GAAKmgC,EAAQiI,IAGTjI,GAFJ7C,EAAIsJ,GAAK2jE,EAvQL,EAuQoB3jE,GAAK2jE,EAtQzB,MAsQ8C3jE,EAAI2jE,IAbH3jE,GAAKvP,EAoBpD+Q,EAAIhuC,EAAM8uG,GADdmB,EAAahzE,EAAOiG,KAEnBtvB,EAAM,YAGPo6B,GAAKiiE,EAKNE,EAAOT,EAAM9pG,EAAIoqG,EADjBx2F,EAAM/X,EAAOX,OAAS,EACc,GAARkvG,GAIxBhwG,EAAM4F,EAAI4T,GAAOs1F,EAASzyE,GAC7BzoB,EAAM,YAGPyoB,GAAKr8B,EAAM4F,EAAI4T,GACf5T,GAAK4T,EAGL/X,EAAOwX,OAAOrT,IAAK,EAAGy2B,EAEtB,CAED,OAAOkzE,EAAW9tG,EAClB,CASD,SAASI,EAAOiP,GACf,IAAIurB,EACAszE,EACAS,EACAC,EACAF,EACAjlG,EACAohB,EACAoS,EACA8N,EACAtJ,EACAotE,EAGAxkD,EAEAykD,EACAN,EACAO,EANA/uG,EAAS,GAoBb,IARAqqD,GAHAh7C,EAAQu+F,EAAWv+F,IAGChQ,OAGpBu7B,EAvUU,IAwUVszE,EAAQ,EACRQ,EA1Ua,GA6URjlG,EAAI,EAAGA,EAAI4gD,IAAe5gD,GAC9BolG,EAAex/F,EAAM5F,IACF,KAClBzJ,EAAOY,KAAK6sG,EAAmBoB,IAejC,IAXAF,EAAiBC,EAAc5uG,EAAOX,OAMlCuvG,GACH5uG,EAAOY,KAzVG,KA6VJ+tG,EAAiBtkD,GAAa,CAIpC,IAAKx/B,EAAIwiF,EAAQ5jG,EAAI,EAAGA,EAAI4gD,IAAe5gD,GAC1ColG,EAAex/F,EAAM5F,KACDmxB,GAAKi0E,EAAehkF,IACvCA,EAAIgkF,GAcN,IAPIhkF,EAAI+P,EAAIr8B,GAAO8uG,EAASa,IAD5BY,EAAwBH,EAAiB,KAExCx8F,EAAM,YAGP+7F,IAAUrjF,EAAI+P,GAAKk0E,EACnBl0E,EAAI/P,EAECphB,EAAI,EAAGA,EAAI4gD,IAAe5gD,EAO9B,IANAolG,EAAex/F,EAAM5F,IAEFmxB,KAAOszE,EAAQb,GACjCl7F,EAAM,YAGH08F,GAAgBj0E,EAAG,CAEtB,IAAKqC,EAAIixE,EAAOnjE,EAAIvP,IAEfyB,GADJwE,EAAIsJ,GAAK2jE,EAlYP,EAkYsB3jE,GAAK2jE,EAjY3B,MAiYgD3jE,EAAI2jE,IADT3jE,GAAKvP,EAKlDuzE,EAAU9xE,EAAIwE,EACd+sE,EAAahzE,EAAOiG,EACpBzhC,EAAOY,KACN6sG,EAAmBM,EAAatsE,EAAIstE,EAAUP,EAAY,KAE3DvxE,EAAI1+B,EAAMwwG,EAAUP,GAGrBxuG,EAAOY,KAAK6sG,EAAmBM,EAAa9wE,EAAG,KAC/CyxE,EAAOT,EAAMC,EAAOY,EAAuBH,GAAkBC,GAC7DV,EAAQ,IACNS,CACF,GAGAT,IACAtzE,CAEF,CACD,OAAO56B,EAAOwb,KAAK,GACnB,CA2CD4xF,EAAW,CAMV,QAAW,QAQX,KAAQ,CACP,OAAUQ,EACV,OAAUE,GAEX,OAAUxqG,EACV,OAAUlD,EACV,QA/BD,SAAiBiP,GAChB,OAAOq+F,EAAUr+F,GAAO,SAASs+F,GAChC,OAAOJ,EAAc7oE,KAAKipE,GACvB,OAASvtG,EAAOutG,GAChBA,CACH,GACD,EA0BA,UAnDD,SAAmBt+F,GAClB,OAAOq+F,EAAUr+F,GAAO,SAASs+F,GAChC,OAAOL,EAAc5oE,KAAKipE,GACvBrqG,EAAOqqG,EAAO1jG,MAAM,GAAG4f,eACvB8jF,CACH,GACD,QAwDM,KAAN54E,EAAAA,WACC,OAAOq4E,CADF,+BAjgBN,4BCyBF,SAASx/E,EAAe8Z,EAAKyvD,GAC3B,OAAOx1F,OAAOG,UAAU8rB,eAAe1jB,KAAKw9B,EAAKyvD,EAClD,CAEDpoE,EAAOiE,QAAU,SAASg8E,EAAI7D,EAAK1qE,EAAI5rB,GACrCs2F,EAAMA,GAAO,IACb1qE,EAAKA,GAAM,IACX,IAAIiH,EAAM,CAAC,EAEX,GAAkB,iBAAPsnE,GAAiC,IAAdA,EAAG3vG,OAC/B,OAAOqoC,EAGT,IAAIunE,EAAS,MACbD,EAAKA,EAAGh2F,MAAMmyF,GAEd,IAAI+D,EAAU,IACVr6F,GAAsC,iBAApBA,EAAQq6F,UAC5BA,EAAUr6F,EAAQq6F,SAGpB,IAAI5lE,EAAM0lE,EAAG3vG,OAET6vG,EAAU,GAAK5lE,EAAM4lE,IACvB5lE,EAAM4lE,GAGR,IAAK,IAAI/qG,EAAI,EAAGA,EAAImlC,IAAOnlC,EAAG,CAC5B,IAEIgrG,EAAMC,EAAMrkE,EAAG/Q,EAFf3H,EAAI28E,EAAG7qG,GAAGkb,QAAQ4vF,EAAQ,OAC1B56E,EAAMhC,EAAE9a,QAAQkpB,GAGhBpM,GAAO,GACT86E,EAAO98E,EAAElc,OAAO,EAAGke,GACnB+6E,EAAO/8E,EAAElc,OAAOke,EAAM,KAEtB86E,EAAO98E,EACP+8E,EAAO,IAGTrkE,EAAIyrD,mBAAmB2Y,GACvBn1E,EAAIw8D,mBAAmB4Y,GAElBxhF,EAAe8Z,EAAKqD,GAEd1jC,MAAMC,QAAQogC,EAAIqD,IAC3BrD,EAAIqD,GAAGnqC,KAAKo5B,GAEZ0N,EAAIqD,GAAK,CAACrD,EAAIqD,GAAI/Q,GAJlB0N,EAAIqD,GAAK/Q,CAMZ,CAED,OAAO0N,CACR,0BCxDD,IAAI2nE,EAAqB,SAASr1E,GAChC,cAAeA,GACb,IAAK,SACH,OAAOA,EAET,IAAK,UACH,OAAOA,EAAI,OAAS,QAEtB,IAAK,SACH,OAAOs1E,SAASt1E,GAAKA,EAAI,GAE3B,QACE,MAAO,GAEZ,EAEDjL,EAAOiE,QAAU,SAAS0U,EAAKyjE,EAAK1qE,EAAIr+B,GAOtC,OANA+oG,EAAMA,GAAO,IACb1qE,EAAKA,GAAM,IACC,OAARiH,IACFA,OAAM/nC,GAGW,iBAAR+nC,EACF/lC,OAAOoG,KAAK2/B,GAAKt5B,KAAI,SAAS28B,GACnC,IAAIwkE,EAAKnxF,mBAAmBixF,EAAmBtkE,IAAMtK,EACrD,OAAIp5B,MAAMC,QAAQogC,EAAIqD,IACbrD,EAAIqD,GAAG38B,KAAI,SAAS4rB,GACzB,OAAOu1E,EAAKnxF,mBAAmBixF,EAAmBr1E,GACnD,IAAExe,KAAK2vF,GAEDoE,EAAKnxF,mBAAmBixF,EAAmB3nE,EAAIqD,IAEzD,IAAEvvB,KAAK2vF,GAIL/oG,EACEgc,mBAAmBixF,EAAmBjtG,IAASq+B,EAC/CriB,mBAAmBixF,EAAmB3nE,IAF3B,EAGnB,gCC7DD1U,EAAQ1vB,OAAS0vB,EAAQniB,MAAQ,EAAhBmiB,OACjBA,EAAQ5yB,OAAS4yB,EAAQ3N,UAAY,EAApB2N,qECOjB,cACE,WAAoBw8E,GAApB,MACE/tG,EAAAA,KAAAA,OAAO,YADWO,EAAAA,OAAAA,GAEnB,CAyBH,OA5BwCK,EAAAA,EAAAA,IAAAA,EAAAA,GAKtCV,OAAAA,eAAI8tG,EAAAA,UAAA,QAAK,KAAT,WACE,OAAO,KAAKC,UACb,kCAGSD,EAAAA,UAAAA,WAAV,SAAqBE,GACnB,IAAMC,EAAenuG,EAAAA,UAAMouG,WAAU3lG,KAAA,KAACylG,GAEtC,OADCC,EAAatc,QAAUqc,EAAW9pF,KAAK,KAAK2pF,QACtCI,CACR,EAEDH,EAAAA,UAAAA,SAAAA,WACQ,MAAoC,KAAlCK,EAAQ,WAAEC,EAAW,cAAEP,EAAM,SACrC,GAAIM,EACF,MAAMC,EAGR,OADA,KAAKC,iBACER,CACR,EAEDC,EAAAA,UAAAA,KAAAA,SAAKrxG,GACHqD,EAAAA,UAAMokB,KAAI3b,KAAA,KAAE,KAAKslG,OAASpxG,EAC3B,EACH,CAAC,CA5BD,UAAwCwnB,kICMxC,aAkBE,WAAYG,GACNA,IACF,KAAK8pF,WAAa9pF,EAErB,CAybH,OA7ZEkqF,EAAAA,UAAAA,KAAAA,SAAQC,GACN,IAAMC,EAAa,IAAIF,EAGvB,OAFAE,EAAW3b,OAAS,KACpB2b,EAAWD,SAAWA,EACfC,CACR,EA8IDF,EAAAA,UAAAA,UAAAA,SACEG,EACAj+F,EACA1F,GAHF,IA2RuBrO,EA3RvB,OAKQuxG,GAsRevxG,EAtRWgyG,IAuRjBhyG,aAAiBiyG,EAAAA,IALpC,SAAuBjyG,GACrB,OAAOA,IAASkyG,EAAAA,EAAAA,GAAWlyG,EAAMynB,QAASyqF,EAAAA,EAAAA,GAAWlyG,EAAM+T,SAAUm+F,EAAAA,EAAAA,GAAWlyG,EAAMqO,SACvF,CAGmD8jG,CAAWnyG,KAAUoyG,EAAAA,EAAAA,IAAepyG,GAvRlCgyG,EAAiB,IAAIK,EAAAA,GAAeL,EAAgBj+F,EAAO1F,GAoB7G,OAlBAikG,EAAAA,EAAAA,IAAa,WACL,MAAuB1uG,EAArBkuG,EAAQ,WAAE1b,EAAM,SACxBmb,EAAWz0E,IACTg1E,EAGIA,EAAShmG,KAAKylG,EAAYnb,GAC1BA,EAIAxyF,EAAK6tG,WAAWF,GAGhB3tG,EAAK2uG,cAAchB,GAE1B,IAEMA,CACR,EAGSM,EAAAA,UAAAA,cAAV,SAAwBW,GACtB,IACE,OAAO,KAAKf,WAAWe,EAMxB,CALC,MAAO9qF,GAIP8qF,EAAKz+F,MAAM2T,EACZ,CACF,EA6DDmqF,EAAAA,UAAAA,QAAAA,SAAQpqF,EAA0BgrF,GAAlC,WAGE,OAAO,IAFPA,EAAcC,EAAeD,KAEA,SAAC/0F,EAASD,GACrC,IAAM8zF,EAAa,IAAIc,EAAAA,GAAkB,CACvC5qF,KAAM,SAACznB,GACL,IACEynB,EAAKznB,EAIN,CAHC,MAAO0nB,GACPjK,EAAOiK,GACP6pF,EAAWoB,aACZ,CACF,EACD5+F,MAAO0J,EACPpP,SAAUqP,IAEZ9Z,EAAK+jB,UAAU4pF,EAChB,GACF,EAGSM,EAAAA,UAAAA,WAAV,SAAqBN,SACnB,OAAkB,QAAX,OAAKnb,cAAMz1F,IAAAA,OAAA,EAAAA,EAAEgnB,UAAU4pF,EAC/B,EAODM,EAAAA,UAACe,EAAAA,GAAD,WACE,OAAO,IACR,EA4FDf,EAAAA,UAAAA,KAAAA,eAAK,oCAAAgB,EAAAA,GAAAA,UAAAA,GACH,OAAOC,EAAAA,EAAAA,GAAcD,EAAdC,CAA0B,KAClC,EA6BDjB,EAAAA,UAAAA,UAAAA,SAAUY,GAAV,WAGE,OAAO,IAFPA,EAAcC,EAAeD,KAEN,SAAC/0F,EAASD,GAC/B,IAAIzd,EACJ4D,EAAK+jB,WACH,SAACsM,GAAS,OAACj0B,EAAQi0B,CAAE,IACrB,SAACvM,GAAa,SAAOA,EAAI,IACzB,WAAM,SAAQ1nB,EAAM,GAEvB,GACF,EA3aM6xG,EAAAA,OAAkC,SAAIlqF,GAC3C,OAAO,IAAIkqF,EAAclqF,EAC1B,EA0aH,CAAC,CA/cD,GAwdA,SAAS+qF,EAAeD,SACtB,OAAoC,QAA7B,YAAe7pE,EAAAA,EAAAA,eAAcjoC,IAAAA,EAAAA,EAAI6c,OACzC,oFCtcD,cAUE,WACUu1F,EACAC,EACAC,QAFA,QAAAF,EAAAA,UACA,QAAAC,EAAAA,UACA,QAAAC,EAAAA,EAAAA,GAHV,MAKE5vG,EAAAA,KAAAA,OAAO,YAJCO,EAAAA,YAAAA,EACAA,EAAAA,YAAAA,EACAA,EAAAA,mBAAAA,EAZFA,EAAAA,QAA0B,GAC1BA,EAAAA,qBAAsB,EAc5BA,EAAKsvG,oBAAsBF,IAAgB7wE,IAC3Cv+B,EAAKmvG,YAAc7yG,KAAKq0B,IAAI,EAAGw+E,GAC/BnvG,EAAKovG,YAAc9yG,KAAKq0B,IAAI,EAAGy+E,IAChC,CAsDH,OAzEsC/uG,EAAAA,EAAAA,IAAAA,EAAAA,GAqBpCkvG,EAAAA,UAAAA,KAAAA,SAAKnzG,GACG,MAA+E,KAA7EozG,EAAS,YAAE3tF,EAAO,UAAEytF,EAAmB,sBAAED,EAAkB,qBAAED,EAAW,cAC3EI,IACH3tF,EAAQjjB,KAAKxC,IACZkzG,GAAuBztF,EAAQjjB,KAAKywG,EAAmB1zF,MAAQyzF,IAElE,KAAKK,cACLhwG,EAAAA,UAAMokB,KAAI3b,KAAA,KAAC9L,EACZ,EAGSmzG,EAAAA,UAAAA,WAAV,SAAqB5B,GACnB,KAAKK,iBACL,KAAKyB,cAQL,IANA,IAAM7B,EAAe,KAAK8B,gBAAgB/B,GAElC2B,EAAiC,KAAd,oBAGrBpuD,EAHmC,KAAL,QAGfj5C,QACZ9F,EAAI,EAAGA,EAAI++C,EAAK7jD,SAAWswG,EAAWrc,OAAQnvF,GAAKmtG,EAAsB,EAAI,EACpF3B,EAAW9pF,KAAKq9B,EAAK/+C,IAKvB,OAFA,KAAKwtG,wBAAwBhC,GAEtBC,CACR,EAEO2B,EAAAA,UAAAA,YAAR,WACQ,MAAoE,KAAlEJ,EAAW,cAAEE,EAAkB,qBAAExtF,EAAO,UAAEytF,EAAmB,sBAK/DM,GAAsBN,EAAsB,EAAI,GAAKH,EAK3D,GAJAA,EAAc5wE,KAAYqxE,EAAqB/tF,EAAQxkB,QAAUwkB,EAAQrM,OAAO,EAAGqM,EAAQxkB,OAASuyG,IAI/FN,EAAqB,CAKxB,IAJA,IAAM3zF,EAAM0zF,EAAmB1zF,MAC3BuhC,EAAO,EAGF/6C,EAAI,EAAGA,EAAI0f,EAAQxkB,QAAWwkB,EAAQ1f,IAAiBwZ,EAAKxZ,GAAK,EACxE+6C,EAAO/6C,EAET+6C,GAAQr7B,EAAQrM,OAAO,EAAG0nC,EAAO,EAClC,CACF,EACH,CAAC,CAzED,CAAsCt5B,EAAAA,uFCfzBisF,GAAuDC,UAAAA,IAClE,SAACrwG,GACC,kBACEA,EAAO,MACP,KAAKW,KAAO,0BACZ,KAAKZ,QAAU,qBAChB,2BCXL,cAwBE,mBAEEC,EAAAA,KAAAA,OAAO,YAzBTO,EAAAA,QAAS,EAEDA,EAAAA,iBAAyC,KAGjDA,EAAAA,UAA2B,GAE3BA,EAAAA,WAAY,EAEZA,EAAAA,UAAW,EAEXA,EAAAA,YAAmB,MAelB,CAkHH,OA7IgCK,EAAAA,EAAAA,IAAAA,EAAAA,GA8B9BujB,EAAAA,UAAAA,KAAAA,SAAQsqF,GACN,IAAMj5F,EAAU,IAAI86F,EAAiB,KAAM,MAE3C,OADA96F,EAAQi5F,SAAWA,EACZj5F,CACR,EAGS2O,EAAAA,UAAAA,eAAV,WACE,GAAI,KAAK0tE,OACP,MAAM,IAAIue,CAEb,EAEDjsF,EAAAA,UAAAA,KAAAA,SAAKxnB,GAAL,YACEsyG,EAAAA,EAAAA,IAAa,mBAEX,GADA1uG,EAAKguG,kBACAhuG,EAAKwvG,UAAW,CACdxvG,EAAKgwG,mBACRhwG,EAAKgwG,iBAAmB3qG,MAAM3C,KAAK1C,EAAKsV,gBAE1C,IAAuB,iBAAK06F,kBAAgB3wG,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAAE,CAA3B,QACRwkB,KAAKznB,EACf,mGACF,CACF,GACF,EAEDwnB,EAAAA,UAAAA,MAAAA,SAAME,GAAN,YACE4qF,EAAAA,EAAAA,IAAa,WAEX,GADA1uG,EAAKguG,kBACAhuG,EAAKwvG,UAAW,CACnBxvG,EAAK8tG,SAAW9tG,EAAKwvG,WAAY,EACjCxvG,EAAK+tG,YAAcjqF,EAEnB,IADQ,MAAc9jB,EAAI,UACnBsV,EAAUjY,QACfiY,EAAUsa,QAASzf,MAAM2T,EAE5B,CACF,GACF,EAEDF,EAAAA,UAAAA,SAAAA,WAAA,YACE8qF,EAAAA,EAAAA,IAAa,WAEX,GADA1uG,EAAKguG,kBACAhuG,EAAKwvG,UAAW,CACnBxvG,EAAKwvG,WAAY,EAEjB,IADQ,MAAcxvG,EAAI,UACnBsV,EAAUjY,QACfiY,EAAUsa,QAASnlB,UAEtB,CACF,GACF,EAEDmZ,EAAAA,UAAAA,YAAAA,WACE,KAAK4rF,UAAY,KAAKle,QAAS,EAC/B,KAAKh8E,UAAY,KAAK06F,iBAAmB,IAC1C,EAEDrwG,OAAAA,eAAIikB,EAAAA,UAAA,WAAQ,KAAZ,iBACE,OAAqB,QAAd,OAAKtO,iBAASvY,IAAAA,OAAA,EAAAA,EAAEM,QAAS,CACjC,kCAGSumB,EAAAA,UAAAA,cAAV,SAAwB+pF,GAEtB,OADA,KAAKK,iBACEvuG,EAAAA,UAAMkvG,cAAazmG,KAAA,KAACylG,EAC5B,EAGS/pF,EAAAA,UAAAA,WAAV,SAAqB+pF,GAGnB,OAFA,KAAKK,iBACL,KAAK2B,wBAAwBhC,GACtB,KAAK+B,gBAAgB/B,EAC7B,EAGS/pF,EAAAA,UAAAA,gBAAV,SAA0B+pF,GAA1B,WACQ,EAAqC,KAAnCG,EAAQ,WAAE0B,EAAS,YAAEl6F,EAAS,YACtC,OAAIw4F,GAAY0B,EACPS,EAAAA,IAET,KAAKD,iBAAmB,KACxB16F,EAAU1W,KAAK+uG,GACR,IAAIuC,EAAAA,IAAa,WACtBlwG,EAAKgwG,iBAAmB,MACxBG,EAAAA,EAAAA,GAAU76F,EAAWq4F,EACtB,IACF,EAGS/pF,EAAAA,UAAAA,wBAAV,SAAkC+pF,GAC1B,MAAuC,KAArCG,EAAQ,WAAEC,EAAW,cAAEyB,EAAS,YACpC1B,EACFH,EAAWx9F,MAAM49F,GACRyB,GACT7B,EAAWljG,UAEd,EAQDmZ,EAAAA,UAAAA,aAAAA,WACE,IAAMuqF,EAAkB,IAAIF,EAAAA,EAE5B,OADAE,EAAW3b,OAAS,KACb2b,CACR,EAxHMvqF,EAAAA,OAAkC,SAAIwsF,EAA0B5d,GACrE,OAAO,IAAIud,EAAoBK,EAAa5d,EAC7C,EAuHH,CAAC,CA7ID,CAAgCyb,EAAAA,GAkJhC,cACE,WAESmC,EACP5d,GAHF,MAKE/yF,EAAAA,KAAAA,OAAO,YAHAO,EAAAA,YAAAA,EAIPA,EAAKwyF,OAASA,GACf,CAkBH,OA1ByCnyF,EAAAA,EAAAA,IAAAA,EAAAA,GAUvC0vG,EAAAA,UAAAA,KAAAA,SAAK3zG,WACmB,QAAtB,EAAgB,QAAhB,OAAKg0G,mBAAWrzG,IAAAA,OAAA,EAAAA,EAAE8mB,YAAIhmB,IAAAA,GAAAA,EAAAA,KAAAA,EAAGzB,EAC1B,EAED2zG,EAAAA,UAAAA,MAAAA,SAAMjsF,WACmB,QAAvB,EAAgB,QAAhB,OAAKssF,mBAAWrzG,IAAAA,OAAA,EAAAA,EAAEoT,aAAKtS,IAAAA,GAAAA,EAAAA,KAAAA,EAAGimB,EAC3B,EAEDisF,EAAAA,UAAAA,SAAAA,mBAC4B,QAA1B,EAAgB,QAAhB,OAAKK,mBAAWrzG,IAAAA,OAAA,EAAAA,EAAE0N,gBAAQ5M,IAAAA,GAAAA,EAAAA,KAAAA,EAC3B,EAGSkyG,EAAAA,UAAAA,WAAV,SAAqBpC,WACnB,OAAyC,QAAlC,EAAW,QAAX,OAAKnb,cAAMz1F,IAAAA,OAAA,EAAAA,EAAEgnB,UAAU4pF,UAAW9vG,IAAAA,EAAAA,EAAIoyG,EAAAA,EAC9C,EACH,CAAC,CA1BD,CAAyCrsF,iIC3J5BysF,EAA+B,EAAmB,SAAK1yG,OAAWA,GA0BzE,SAAU2yG,EAAmBC,EAAuBn0G,EAAY+T,GACpE,MAAO,CACLogG,KAAI,EACJn0G,MAAK,EACL+T,MAAK,EAER,2BCnBD,cA6BE,WAAYigG,GAAZ,MACE3wG,EAAAA,KAAAA,OAAO,YATCO,EAAAA,WAAqB,EAUzBowG,GACFpwG,EAAKowG,YAAcA,GAGf5B,EAAAA,EAAAA,IAAe4B,IACjBA,EAAYl3E,IAAIl5B,IAGlBA,EAAKowG,YAAcI,GAEtB,CA2EH,OApHmCnwG,EAAAA,EAAAA,IAAAA,EAAAA,GAgB1BguG,EAAAA,OAAP,SAAiBxqF,EAAwB1T,EAA2B1F,GAClE,OAAO,IAAIgkG,EAAe5qF,EAAM1T,EAAO1F,EACxC,EAgCD4jG,EAAAA,UAAAA,KAAAA,SAAKjyG,GACC,KAAKozG,UACPiB,EDjDA,SAA8Br0G,GAClC,OAAOk0G,EAAmB,IAAKl0G,OAAOuB,EACvC,CC+C+B+yG,CAAiBt0G,GAAQ,MAEnD,KAAKu0G,MAAMv0G,EAEd,EASDiyG,EAAAA,UAAAA,MAAAA,SAAMvqF,GACA,KAAK0rF,UACPiB,EDxEGH,EAAmB,SAAK3yG,ECwEiBmmB,GAAM,OAElD,KAAK0rF,WAAY,EACjB,KAAKoB,OAAO9sF,GAEf,EAQDuqF,EAAAA,UAAAA,SAAAA,WACM,KAAKmB,UACPiB,EAA0BJ,EAAuB,OAEjD,KAAKb,WAAY,EACjB,KAAKqB,YAER,EAEDxC,EAAAA,UAAAA,YAAAA,WACO,KAAK/c,SACR,KAAKke,WAAY,EACjB/vG,EAAAA,UAAMsvG,YAAW7mG,KAAA,MACjB,KAAKkoG,YAAc,KAEtB,EAES/B,EAAAA,UAAAA,MAAV,SAAgBjyG,GACd,KAAKg0G,YAAYvsF,KAAKznB,EACvB,EAESiyG,EAAAA,UAAAA,OAAV,SAAiBvqF,GACf,IACE,KAAKssF,YAAYjgG,MAAM2T,EAGxB,CAJD,QAGE,KAAKirF,aACN,CACF,EAESV,EAAAA,UAAAA,UAAV,WACE,IACE,KAAK+B,YAAY3lG,UAGlB,CAJD,QAGE,KAAKskG,aACN,CACF,EACH,CAAC,CApHD,CAAmCmB,EAAAA,IA2H7BY,EAAQC,SAASjxG,UAAU8X,KAEjC,SAASA,EAAyC6oB,EAAQuwE,GACxD,OAAOF,EAAM5oG,KAAKu4B,EAAIuwE,EACvB,CAMD,iBACE,WAAoBC,GAAA,sBAAyC,CAoC/D,OAlCEC,EAAAA,UAAAA,KAAAA,SAAK90G,GACK,MAAoB,KAAI60G,gBAChC,GAAIA,EAAgBptF,KAClB,IACEotF,EAAgBptF,KAAKznB,EAGtB,CAFC,MAAO+T,GACPghG,EAAqBhhG,EACtB,CAEJ,EAED+gG,EAAAA,UAAAA,MAAAA,SAAMptF,GACI,MAAoB,KAAImtF,gBAChC,GAAIA,EAAgB9gG,MAClB,IACE8gG,EAAgB9gG,MAAM2T,EAGvB,CAFC,MAAO3T,GACPghG,EAAqBhhG,EACtB,MAEDghG,EAAqBrtF,EAExB,EAEDotF,EAAAA,UAAAA,SAAAA,WACU,MAAoB,KAAID,gBAChC,GAAIA,EAAgBxmG,SAClB,IACEwmG,EAAgBxmG,UAGjB,CAFC,MAAO0F,GACPghG,EAAqBhhG,EACtB,CAEJ,EACH,CAAC,CArCD,GAuCA,cACE,WACEi+F,EACAj+F,EACA1F,GAHF,IAOMwmG,EAWEG,EAlBR,EAKE3xG,EAAAA,KAAAA,OAAO,MAGH6uG,EAAAA,EAAAA,GAAWF,KAAoBA,EAGjC6C,EAAkB,CAChBptF,KAAOuqF,QAAA,OAAkBzwG,EACzBwS,MAAOA,QAAA,OAASxS,EAChB8M,SAAUA,QAAA,OAAY9M,GAKpBqC,GAAQglC,EAAAA,EAAAA,2BAIVosE,EAAUzxG,OAAOC,OAAOwuG,IAChBW,YAAc,WAAM,SAAKA,aAAa,EAC9CkC,EAAkB,CAChBptF,KAAMuqF,EAAevqF,MAAQjM,EAAKw2F,EAAevqF,KAAMutF,GACvDjhG,MAAOi+F,EAAej+F,OAASyH,EAAKw2F,EAAej+F,MAAOihG,GAC1D3mG,SAAU2jG,EAAe3jG,UAAYmN,EAAKw2F,EAAe3jG,SAAU2mG,KAIrEH,EAAkB7C,SAMtBpuG,EAAKowG,YAAc,IAAIc,EAAiBD,IACzC,CACH,OAzCuC5wG,EAAAA,EAAAA,IAAAA,EAAAA,GAyCvC,CAAC,CAzCD,CAAuCguG,GA2CvC,SAAS8C,EAAqBhhG,GACxB60B,EAAAA,EAAAA,uCACFqsE,EAAAA,EAAAA,GAAalhG,IAIbmhG,EAAAA,EAAAA,GAAqBnhG,EAExB,CAiBD,SAASsgG,EAA0Bc,EAA2C5D,GACpE,MAA0B3oE,EAAAA,EAAAA,sBAClCwsE,GAAyBC,EAAAA,EAAAA,YAA2B,WAAM,SAAsBF,EAAc5D,EAAW,GAC1G,CAOM,IAAM6C,EAA6D,CACxElf,QAAQ,EACRztE,KAAMwmF,EAAAA,EACNl6F,MAtBF,SAA6B2T,GAC3B,MAAMA,CACP,EAqBCrZ,SAAU4/F,EAAAA,8FChQCqH,GAA+C5B,UAAAA,IAC1D,SAACrwG,GACC,gBAA4C4lD,GAC1C5lD,EAAO,MACP,KAAKD,QAAU6lD,EACRA,EAAOhoD,OAAM,4CACxBgoD,EAAOj5C,KAAI,SAAC0X,EAAK3hB,GAAM,OAAGA,EAAI,EAAC,KAAK2hB,EAAIre,UAAY,IAAE+T,KAAK,QACnD,GACJ,KAAKpZ,KAAO,sBACZ,KAAKilD,OAASA,CACf,gBCXL,aAyBE,WAAoBssD,GAAA,uBAdb,aAAS,EAER,gBAAmD,KAMnD,iBAAqD,IAMT,CAvB7B,IACfhrE,EAkLV,OApJEupE,EAAAA,UAAAA,YAAAA,uBACM7qD,EAEJ,IAAK,KAAKisC,OAAQ,CAChB,KAAKA,QAAS,EAGN,MAAe,KAAIsgB,WAC3B,GAAIA,EAEF,GADA,KAAKA,WAAa,KACdvsG,MAAMC,QAAQssG,OAChB,IAAqB,kBAAUC,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAAE,CAAhB,QACRjpE,OAAO,KACf,wGAEDgpE,EAAWhpE,OAAO,MAId,IAAiBkpE,EAAqB,KAAIH,gBAClD,IAAIrD,EAAAA,EAAAA,GAAWwD,GACb,IACEA,GAGD,CAFC,MAAOtpG,GACP68C,EAAS78C,aAAakpG,EAAsBlpG,EAAE68C,OAAS,CAAC78C,EACzD,CAGK,MAAgB,KAAIupG,YAC5B,GAAIA,EAAa,CACf,KAAKA,YAAc,SACnB,IAAwB,kBAAWC,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAAE,CAAhC,IAAMC,EAAS,QAClB,IACEC,EAAcD,EAQf,CAPC,MAAOnuF,GACPuhC,EAASA,QAAA,EAAU,GACfvhC,aAAe4tF,EACjBrsD,GAAM,6BAAOA,KAAM8sD,EAAAA,EAAAA,IAAKruF,EAAIuhC,SAE5BA,EAAOzmD,KAAKklB,EAEf,CACF,mGACF,CAED,GAAIuhC,EACF,MAAM,IAAIqsD,EAAoBrsD,EAEjC,CACF,EAoBD6qD,EAAAA,UAAAA,IAAAA,SAAIkC,SAGF,GAAIA,GAAYA,IAAa,KAC3B,GAAI,KAAK9gB,OAGP4gB,EAAcE,OACT,CACL,GAAIA,aAAoBlC,EAAc,CAGpC,GAAIkC,EAAS9gB,QAAU8gB,EAASC,WAAW,MACzC,OAEFD,EAASE,WAAW,KACrB,EACA,KAAKP,YAA8B,QAAhB,OAAKA,mBAAWh1G,IAAAA,EAAAA,EAAI,IAAI6B,KAAKwzG,EAClD,CAEJ,EAOOlC,EAAAA,UAAAA,WAAR,SAAmBriE,GACT,MAAe,KAAI+jE,WAC3B,OAAOA,IAAe/jE,GAAWxoC,MAAMC,QAAQssG,IAAeA,EAAWW,SAAS1kE,EACnF,EASOqiE,EAAAA,UAAAA,WAAR,SAAmBriE,GACT,MAAe,KAAI+jE,WAC3B,KAAKA,WAAavsG,MAAMC,QAAQssG,IAAeA,EAAWhzG,KAAKivC,GAAS+jE,GAAcA,EAAa,CAACA,EAAY/jE,GAAUA,CAC3H,EAMOqiE,EAAAA,UAAAA,cAAR,SAAsBriE,GACZ,MAAe,KAAI+jE,WACvBA,IAAe/jE,EACjB,KAAK+jE,WAAa,KACTvsG,MAAMC,QAAQssG,KACvBzB,EAAAA,EAAAA,GAAUyB,EAAY/jE,EAEzB,EAgBDqiE,EAAAA,UAAAA,OAAAA,SAAOkC,GACG,MAAgB,KAAIL,YAC5BA,IAAe5B,EAAAA,EAAAA,GAAU4B,EAAaK,GAElCA,aAAoBlC,GACtBkC,EAASI,cAAc,KAE1B,EAlLatC,EAAAA,QACNvpE,EAAQ,IAAIupE,GACZ5e,QAAS,EACR3qD,GAgLX,CAAC,CArLD,GAuLaspE,EAAqBC,EAAauC,MAEzC,SAAUjE,EAAepyG,GAC7B,OACEA,aAAiB8zG,GAChB9zG,GAAS,WAAYA,IAASkyG,EAAAA,EAAAA,GAAWlyG,EAAMwsC,UAAW0lE,EAAAA,EAAAA,GAAWlyG,EAAM88B,OAAQo1E,EAAAA,EAAAA,GAAWlyG,EAAM2yG,YAExG,CAED,SAASmD,EAAcD,IACjB3D,EAAAA,EAAAA,GAAW2D,GACbA,IAEAA,EAAUlD,aAEb,iDChNM,IAAM/pE,EAAuB,CAClC0tE,iBAAkB,KAClBlB,sBAAuB,KACvB53F,aAASjc,EACTg1G,uCAAuC,EACvCC,0BAA0B,4EC2CtB,SAAUC,EAAqBrgB,EAAuBxtD,GAC1D,IAAM8tE,EAA8B,iBAAX9tE,EACzB,OAAO,IAAIprB,SAAe,SAACE,EAASD,GAClC,IAAM8zF,EAAa,IAAIc,EAAAA,GAAkB,CACvC5qF,KAAM,SAACznB,GACL0d,EAAQ1d,GACRuxG,EAAWoB,aACZ,EACD5+F,MAAO0J,EACPpP,SAAU,WACJqoG,EACFh5F,EAAQkrB,EAAQ+tE,cAEhBl5F,EAAO,IAAIm5F,EAAAA,EAEd,IAEHxgB,EAAOzuE,UAAU4pF,EAClB,GACF,qDCTY8E,EAAQ,aAAIxE,IAAkB,SAACN,GAAe,SAAWljG,UAAU,kGCP1E,SAAUwoG,EAAaC,EAA0BC,GACrD,YADqD,QAAAA,EAAAA,IAC9CC,EAAAA,EAAAA,IAAQ,SAAC5gB,EAAQmb,GACtBnb,EAAOzuE,WACLsvF,EAAAA,EAAAA,GACE1F,GACA,SAACvxG,GAAU,cAAgBuxG,EAAYuF,GAAW,WAAM,SAAWrvF,KAAKznB,EAAM,GAAE+2G,EAAM,IACtF,WAAM,cAAgBxF,EAAYuF,GAAW,WAAM,SAAWzoG,UAAU,GAAE0oG,EAAM,IAChF,SAACrvF,GAAQ,cAAgB6pF,EAAYuF,GAAW,WAAM,SAAW/iG,MAAM2T,EAAI,GAAEqvF,EAAM,IAGxF,GACF,CCPK,SAAUG,EAAeJ,EAA0BC,GACvD,YADuD,QAAAA,EAAAA,IAChDC,EAAAA,EAAAA,IAAQ,SAAC5gB,EAAQmb,GACtBA,EAAWz0E,IAAIg6E,EAAUK,UAAS,WAAM,SAAOxvF,UAAU4pF,EAAW,GAAEwF,GACvE,GACF,yCC9DK,SAAUK,EAAyBnmG,EAAyB6lG,GAChE,IAAK7lG,EACH,MAAM,IAAI/M,MAAM,2BAElB,OAAO,IAAI2tG,EAAAA,GAAc,SAACN,IACxB8F,EAAAA,EAAAA,GAAgB9F,EAAYuF,GAAW,WACrC,IAAMQ,EAAWrmG,EAAMsmG,OAAOC,kBAC9BH,EAAAA,EAAAA,GACE9F,EACAuF,GACA,WACEQ,EAAS7vF,OAAOuD,MAAK,SAAC1oB,GAChBA,EAAO42F,KAGTqY,EAAWljG,WAEXkjG,EAAW9pF,KAAKnlB,EAAOtC,MAE1B,GACF,GACD,GACA,EAEH,GACF,GACF,kFCHK,SAAUy3G,EAAaxmG,EAA2B6lG,GACtD,GAAa,MAAT7lG,EAAe,CACjB,IAAIymG,EAAAA,EAAAA,GAAoBzmG,GACtB,OCzBA,SAAgCA,EAA6B6lG,GACjE,OAAOa,EAAAA,EAAAA,IAAU1mG,GAAO2mG,KAAKV,EAAYJ,GAAYD,EAAUC,GAChE,CDuBYe,CAAmB5mG,EAAO6lG,GAEnC,IAAIgB,EAAAA,EAAAA,GAAY7mG,GACd,OE9BA,SAA2BA,EAAqB6lG,GACpD,OAAO,IAAIjF,EAAAA,GAAc,SAACN,GAExB,IAAIxrG,EAAI,EAER,OAAO+wG,EAAUK,UAAS,WACpBpxG,IAAMkL,EAAMhQ,OAGdswG,EAAWljG,YAIXkjG,EAAW9pF,KAAKxW,EAAMlL,MAIjBwrG,EAAWrc,QACd,KAAKiiB,WAGV,GACF,GACF,CFOYY,CAAc9mG,EAAO6lG,GAE9B,IAAIkB,EAAAA,EAAAA,GAAU/mG,GACZ,OG/BA,SAA6BA,EAAuB6lG,GACxD,OAAOa,EAAAA,EAAAA,IAAU1mG,GAAO2mG,KAAKV,EAAYJ,GAAYD,EAAUC,GAChE,CH6BYmB,CAAgBhnG,EAAO6lG,GAEhC,IAAIoB,EAAAA,EAAAA,GAAgBjnG,GAClB,OAAOmmG,EAAsBnmG,EAAO6lG,GAEtC,IAAIqB,EAAAA,EAAAA,GAAWlnG,GACb,OI/BA,SAA8BA,EAAoB6lG,GACtD,OAAO,IAAIjF,EAAAA,GAAc,SAACN,GACxB,IAAI+F,EA4CJ,OAvCAD,EAAAA,EAAAA,GAAgB9F,EAAYuF,GAAW,WAErCQ,EAAYrmG,EAAcmnG,EAAAA,MAE1Bf,EAAAA,EAAAA,GACE9F,EACAuF,GACA,iBACM92G,EACAk5F,EACJ,IAEKl5F,GAAFW,EAAkB22G,EAAS7vF,QAApB,MAAEyxE,EAAI,MAKf,CAJC,MAAOxxE,GAGP,YADA6pF,EAAWx9F,MAAM2T,EAElB,CAEGwxE,EAKFqY,EAAWljG,WAGXkjG,EAAW9pF,KAAKznB,EAEnB,GACD,GACA,EAEH,IAMM,WAAM,cAAWs3G,aAAQ,EAAR,EAAUe,SAAWf,EAASe,QAAQ,CAC/D,GACF,CJjBYC,CAAiBrnG,EAAO6lG,GAEjC,IAAIyB,EAAAA,EAAAA,GAAqBtnG,GACvB,OKxCA,SAAwCA,EAA8B6lG,GAC1E,OAAOM,GAAsBoB,EAAAA,EAAAA,GAAmCvnG,GAAQ6lG,EACzE,CLsCY2B,CAA2BxnG,EAAO6lG,EAE5C,CACD,MAAM4B,EAAAA,EAAAA,GAAiCznG,EACxC,CMoDK,SAAU3K,EAAQ2K,EAA2B6lG,GACjD,OAAOA,EAAYW,EAAUxmG,EAAO6lG,IAAaa,EAAAA,EAAAA,IAAU1mG,EAC5D,gIC/FK0nG,EAA0B,CAAC,cAAe,kBAC1CC,EAAqB,CAAC,mBAAoB,uBAC1CC,EAAgB,CAAC,KAAM,OA8NvB,SAAUC,EACd1kG,EACA2kG,EACAtiG,EACAuiG,GAMA,IAJI9G,EAAAA,EAAAA,GAAWz7F,KACbuiG,EAAiBviG,EACjBA,OAAUlV,GAERy3G,EACF,OAAOF,EAAa1kG,EAAQ2kG,EAAWtiG,GAAiCmhG,MAAKqB,EAAAA,EAAAA,GAAiBD,IAU1F,eA4ER,SAAuB5kG,GACrB,OAAO89F,EAAAA,EAAAA,GAAW99F,EAAOoV,oBAAqB0oF,EAAAA,EAAAA,GAAW99F,EAAOwY,oBACjE,CA5EGssF,CAAc9kG,GACVwkG,EAAmB5oG,KAAI,SAACua,GAAe,gBAACk4C,GAAiB,SAAOl4C,GAAYwuF,EAAWt2C,EAAShsD,EAAgC,KAuDxI,SAAiCrC,GAC/B,OAAO89F,EAAAA,EAAAA,GAAW99F,EAAOi6F,eAAgB6D,EAAAA,EAAAA,GAAW99F,EAAO01F,eAC5D,CAvDKqP,CAAwB/kG,GACtBukG,EAAwB3oG,IAAIopG,EAAwBhlG,EAAQ2kG,IA6DpE,SAAmC3kG,GACjC,OAAO89F,EAAAA,EAAAA,GAAW99F,EAAOmX,MAAO2mF,EAAAA,EAAAA,GAAW99F,EAAOsX,IACnD,CA9DO2tF,CAA0BjlG,GAC1BykG,EAAc7oG,IAAIopG,EAAwBhlG,EAAQ2kG,IAClD,GAAE,GATDj8E,EAAG,KAAE0P,EAAM,KAgBlB,IAAK1P,IACCg7E,EAAAA,EAAAA,GAAY1jG,GACd,OAAOklG,EAAAA,EAAAA,IAAS,SAACC,GAAmB,SAAUA,EAAWR,EAAWtiG,EAAgC,GAA7F6iG,EACL3B,EAAAA,EAAAA,IAAUvjG,IAOhB,IAAK0oB,EACH,MAAM,IAAI0M,UAAU,wBAGtB,OAAO,IAAIqoE,EAAAA,GAAc,SAACN,GAIxB,IAAM9uC,EAAU,eAAC,oCAAAj4C,EAAAA,GAAAA,UAAAA,GAAmB,SAAW/C,KAAK,EAAI+C,EAAKvpB,OAASupB,EAAOA,EAAK,GAAG,EAIrF,OAFAsS,EAAI2lC,GAEG,WAAM,SAAQA,EAAQ,CAC9B,GACF,CASD,SAAS22C,EAAwBhlG,EAAa2kG,GAC5C,OAAO,SAACxuF,GAAuB,gBAACk4C,GAAiB,SAAOl4C,GAAYwuF,EAAWt2C,EAAQ,EACxF,wLCjSK,SAAUk1C,EAAa1mG,GAC3B,GAAIA,aAAiB4gG,EAAAA,EACnB,OAAO5gG,EAET,GAAa,MAATA,EAAe,CACjB,IAAIymG,EAAAA,EAAAA,GAAoBzmG,GACtB,OA0BmCq4B,EA1BNr4B,EA2B1B,IAAI4gG,EAAAA,GAAW,SAACN,GACrB,IAAMiI,EAAMlwE,EAAIspE,EAAAA,KAChB,IAAIV,EAAAA,EAAAA,GAAWsH,EAAI7xF,WACjB,OAAO6xF,EAAI7xF,UAAU4pF,GAGvB,MAAM,IAAI/nE,UAAU,iEACrB,IAhCC,IAAIsuE,EAAAA,EAAAA,GAAY7mG,GACd,OAyC2BrB,EAzCNqB,EA0ClB,IAAI4gG,EAAAA,GAAW,SAACN,GAUrB,IAAK,IAAIxrG,EAAI,EAAGA,EAAI6J,EAAM3O,SAAWswG,EAAWrc,OAAQnvF,IACtDwrG,EAAW9pF,KAAK7X,EAAM7J,IAExBwrG,EAAWljG,UACZ,IAtDC,IAAI2pG,EAAAA,EAAAA,GAAU/mG,GACZ,OAwDyBgV,EAxDNhV,EAyDhB,IAAI4gG,EAAAA,GAAW,SAACN,GACrBtrF,EACG+E,MACC,SAAChrB,GACMuxG,EAAWrc,SACdqc,EAAW9pF,KAAKznB,GAChBuxG,EAAWljG,WAEd,IACD,SAACqZ,GAAa,SAAW3T,MAAM2T,EAAI,IAEpCsD,KAAK,KAAMkqF,EAAAA,EACf,IAnEC,IAAIgD,EAAAA,EAAAA,GAAgBjnG,GAClB,OAAOwoG,EAAkBxoG,GAE3B,IAAIknG,EAAAA,EAAAA,GAAWlnG,GACb,OAkE0ByoG,EAlENzoG,EAmEjB,IAAI4gG,EAAAA,GAAW,SAACN,eACrB,IAAoB,kBAAQoI,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAAE,CAAzB,IAAM35G,EAAK,QAEd,GADAuxG,EAAW9pF,KAAKznB,GACZuxG,EAAWrc,OACb,MAEH,mGACDqc,EAAWljG,UACZ,IAzEC,IAAIkqG,EAAAA,EAAAA,GAAqBtnG,GACvB,OAiFoC2oG,EAjFN3oG,EAkF3BwoG,GAAkBjB,EAAAA,EAAAA,GAAmCoB,GAhF3D,CA+EG,IAAoCA,EAlBVF,EAhBDzzF,EAlBErW,EAlBQ05B,EAPvC,MAAMovE,EAAAA,EAAAA,GAAiCznG,EACxC,CAsEK,SAAUwoG,EAAqBI,GACnC,OAAO,IAAIhI,EAAAA,GAAW,SAACN,IASzB,SAA0BsI,EAAiCtI,qJAC/BuI,GAAAA,EAAAA,EAAAA,IAAAA,+EAIxB,GAJe95G,EAAK,QACpBuxG,EAAW9pF,KAAKznB,GAGZuxG,EAAWrc,OACb,4SAGJqc,EAAWljG,qBACZ,EAlBG3N,CAAQm5G,EAAetI,GAAYj4F,OAAM,SAACoO,GAAQ,SAAW3T,MAAM2T,EAAI,GACxE,GACF,2GC1BK,SAAUqyF,QAAM,oCAAAvvF,EAAAA,GAAAA,UAAAA,GACpB,IAAMssF,GAAYkD,EAAAA,EAAAA,IAAaxvF,GACzByvF,GAAaC,EAAAA,EAAAA,IAAU1vF,EAAM2X,KAC7Bg4E,EAAU3vF,EAChB,OAAQ2vF,EAAQl5G,OAGO,IAAnBk5G,EAAQl5G,QAER02G,EAAAA,EAAAA,IAAUwC,EAAQ,KAElBC,EAAAA,EAAAA,GAASH,EAATG,EAAqB9zG,EAAAA,EAAAA,GAAK6zG,EAASrD,IALnCT,EAAAA,CAML,4ECtBK,SAAUgE,QAAM,oCAAA7vF,EAAAA,GAAAA,UAAAA,GACpB,IAAMssF,GAAYkD,EAAAA,EAAAA,IAAaxvF,GAC/B,OAAOlkB,EAAAA,EAAAA,GAAKkkB,EAAassF,EAC1B,gECpEK,SAAUG,EACdjD,EACAsG,EACAC,EACAC,EACAC,GAEA,OAAO,IAAIC,EAAmB1G,EAAasG,EAAQC,EAAYC,EAASC,EACzE,CAMD,kBAiBE,WACEzG,EACAsG,EACAC,EACAC,EACQC,EACAE,GANV,MAoBEt3G,EAAAA,KAAAA,KAAM2wG,IAAY,YAfVpwG,EAAAA,WAAAA,EACAA,EAAAA,kBAAAA,EAeRA,EAAK2wG,MAAQ+F,EACT,SAAuCt6G,GACrC,IACEs6G,EAAOt6G,EAGR,CAFC,MAAO0nB,GACPssF,EAAYjgG,MAAM2T,EACnB,CACF,EACDrkB,EAAAA,UAAMkxG,MACV3wG,EAAK4wG,OAASgG,EACV,SAAuC9yF,GACrC,IACE8yF,EAAQ9yF,EAOT,CANC,MAAOA,GAEPssF,EAAYjgG,MAAM2T,EACnB,CALD,QAOE,KAAKirF,aACN,CACF,EACDtvG,EAAAA,UAAMmxG,OACV5wG,EAAK6wG,UAAY8F,EACb,WACE,IACEA,GAOD,CANC,MAAO7yF,GAEPssF,EAAYjgG,MAAM2T,EACnB,CALD,QAOE,KAAKirF,aACN,CACF,EACDtvG,EAAAA,UAAMoxG,WACX,CAUH,OAnF2CxwG,EAAAA,EAAAA,IAAAA,EAAAA,GA2EzCy2G,EAAAA,UAAAA,YAAAA,iBACE,IAAK,KAAKC,mBAAqB,KAAKA,oBAAqB,CAC/C,MAAW,KAAIzlB,OACvB7xF,EAAAA,UAAMsvG,YAAW7mG,KAAA,OAEhB8uG,IAAyB,QAAf,OAAKH,kBAAU95G,IAAAA,GAAAA,EAAAA,KAAf,MACZ,CACF,EACH,CAAC,CAnFD,UAA2CsxG,4ECkDrC,SAAU4I,EACdC,EACA9B,GAEA,OAAO9G,EAAAA,EAAAA,GAAW8G,IAAkBM,EAAAA,EAAAA,GAASwB,EAAS9B,EAAgB,IAAKM,EAAAA,EAAAA,GAASwB,EAAS,EAC9F,2EC5CK,SAAUC,EAAqBpE,GACnC,OAAOK,EAAAA,EAAAA,IAAQ,SAAC5gB,EAAQmb,GACtB,IAAIyJ,GAAW,EACf5kB,EAAOzuE,WACLsvF,EAAAA,EAAAA,GACE1F,GACA,SAACvxG,GACCg7G,GAAW,EACXzJ,EAAW9pF,KAAKznB,EACjB,IACD,WACOg7G,GACHzJ,EAAW9pF,KAAKkvF,GAElBpF,EAAWljG,UACZ,IAGN,GACF,2ECEK,SAAUkgE,EAAU0sC,EAAiDrG,GACzE,OAAOoC,EAAAA,EAAAA,IAAQ,SAAC5gB,EAAQmb,GAEtB,IAAI5rG,EAAQ,EAIZywF,EAAOzuE,WAILsvF,EAAAA,EAAAA,GAAyB1F,GAAY,SAACvxG,GAAU,SAAU8L,KAAK8oG,EAAS50G,EAAO2F,MAAY4rG,EAAW9pF,KAAKznB,EAAM,IAEpH,GACF,2EC3BK,SAAUgQ,EAAU8qG,EAAyClG,GACjE,OAAOoC,EAAAA,EAAAA,IAAQ,SAAC5gB,EAAQmb,GAEtB,IAAI5rG,EAAQ,EAGZywF,EAAOzuE,WACLsvF,EAAAA,EAAAA,GAAyB1F,GAAY,SAACvxG,GAGpCuxG,EAAW9pF,KAAKqzF,EAAQhvG,KAAK8oG,EAAS50G,EAAO2F,KAC9C,IAEJ,GACF,2ECEK,SAAUy0G,EAAyCH,GACvD,YADuD,QAAAA,EAAAA,MAChDX,EAAAA,EAAAA,GAAS4B,EAAAA,EAAUjB,EAC3B,yHCiBK,SAAUX,EACdwB,EACA9B,EACAiB,GAEA,YAFA,QAAAA,EAAAA,MAEI/H,EAAAA,EAAAA,GAAW8G,GAENM,GAAS,SAAC9yF,EAAGzgB,GAAM,eAAI,SAACugB,EAAQ60F,GAAe,SAAe30F,EAAGF,EAAGvgB,EAAGo1G,EAAG,GAAvD,EAAyDxD,EAAAA,EAAAA,IAAUmD,EAAQt0F,EAAGzgB,IAAI,GAAEk0G,IAC3E,iBAAnBjB,IAChBiB,EAAajB,IAGRhC,EAAAA,EAAAA,IAAQ,SAAC5gB,EAAQmb,GAAe,OC1EnC,SACJnb,EACAmb,EACAuJ,EACAb,EACAmB,EACAC,EACAC,EACAC,GAGA,IAAM12G,EAAc,GAEhB22G,EAAS,EAET71G,EAAQ,EAER81G,GAAa,EAKXC,EAAgB,YAIhBD,GAAe52G,EAAO5D,QAAWu6G,GACnCjK,EAAWljG,UAEd,EAGKstG,EAAY,SAAC37G,GAAa,OAACw7G,EAASvB,EAAa2B,EAAW57G,GAAS6E,EAAOrC,KAAKxC,EAAO,EAExF47G,EAAa,SAAC57G,GAIlBq7G,GAAU9J,EAAW9pF,KAAKznB,GAI1Bw7G,IAKA,IAAIK,GAAgB,GAGpBlE,EAAAA,EAAAA,IAAUmD,EAAQ96G,EAAO2F,MAAUgiB,WACjCsvF,EAAAA,EAAAA,GACE1F,GACA,SAACuK,GAGCV,SAAA,EAAeU,GAEXT,EAGFM,EAAUG,GAGVvK,EAAW9pF,KAAKq0F,EAEnB,IACD,WAGED,GAAgB,CACjB,QAEDt6G,GACA,WAIE,GAAIs6G,EAKF,IAIEL,IAKA,qBACE,IAAMO,EAAgBl3G,EAAO2uB,QAIzB8nF,GACFjE,EAAAA,EAAAA,GAAgB9F,EAAY+J,GAAmB,WAAM,SAAWS,EAAc,IAE9EH,EAAWG,IARRl3G,EAAO5D,QAAUu6G,EAASvB,OAYjCyB,GAGD,CAFC,MAAOh0F,GACP6pF,EAAWx9F,MAAM2T,EAClB,CAEJ,IAGN,EAaD,OAVA0uE,EAAOzuE,WACLsvF,EAAAA,EAAAA,GAAyB1F,EAAYoK,GAAW,WAE9CF,GAAa,EACbC,GACD,KAKI,WACLH,SAAA,GACD,CACF,CDtDwC,CAAenlB,EAAQmb,EAAYuJ,EAASb,EAAW,IAC/F,2GE+CK,SAAU+B,EAASvlG,QAAA,QAAAA,EAAAA,CAAAA,GACf,MAAgHA,EAAO,UAAvH,OAAS,MAAG,WAAM,WAAI+Q,EAAAA,CAAY,EAAA7mB,EAAEc,EAA4EgV,EAAO,aAAnFwlG,OAAY,OAAOx6G,EAAEwB,EAAuDwT,EAAO,gBAA9DylG,OAAe,OAAOj5G,EAAEk5G,EAA+B1lG,EAAO,oBAAtC2lG,OAAmB,OAAOD,EAUnH,OAAO,SAACE,GACN,IAAIv0F,EACAw0F,EACAzjG,EACA0jG,EAAW,EACXC,GAAe,EACfC,GAAa,EAEXC,EAAc,WAClBJ,SAAA,EAAiB3J,cACjB2J,OAAkB/6G,CACnB,EAGKsrC,EAAQ,WACZ6vE,IACA50F,EAAajP,OAAUtX,EACvBi7G,EAAeC,GAAa,CAC7B,EACKE,EAAsB,WAG1B,IAAMC,EAAO90F,EACb+kB,IACA+vE,SAAA,EAAMjK,aACP,EAED,OAAOqE,EAAAA,EAAAA,IAAc,SAAC5gB,EAAQmb,GAC5BgL,IACKE,GAAeD,GAClBE,IAOF,IAAM5oF,EAAQjb,EAAUA,QAAA,EAAWgkG,IAOnCtL,EAAWz0E,KAAI,WAMI,MALjBy/E,GAKuBE,GAAeD,IACpCF,EAAkBQ,EAAYH,EAAqBP,GAEtD,IAIDtoF,EAAKnM,UAAU4pF,IAGZzpF,GAIDy0F,EAAW,IAOXz0F,EAAa,IAAIuqF,EAAAA,GAAe,CAC9B5qF,KAAM,SAACznB,GAAU,SAAKynB,KAAKznB,EAAM,EACjC+T,MAAO,SAAC2T,GACN+0F,GAAa,EACbC,IACAJ,EAAkBQ,EAAYjwE,EAAOovE,EAAcv0F,GACnDoM,EAAK/f,MAAM2T,EACZ,EACDrZ,SAAU,WACRmuG,GAAe,EACfE,IACAJ,EAAkBQ,EAAYjwE,EAAOqvE,GACrCpoF,EAAKzlB,UACN,KAEHspG,EAAAA,EAAAA,IAAUvhB,GAAQzuE,UAAUG,GAE/B,GA7DMkvF,CA6DJqF,EACJ,CACF,CAED,SAASS,EACPjwE,EACAthB,OACA,oCAAAf,EAAAA,EAAAA,GAAAA,UAAAA,GAEA,IAAW,IAAPe,GAKJ,IAAW,IAAPA,EAAJ,CAIA,IAAMwxF,EAAe,IAAI1K,EAAAA,GAAe,CACtC5qF,KAAM,WACJs1F,EAAapK,cACb9lE,GACD,IAGH,OAAOthB,EAAE,cAAAyxF,EAAAA,EAAAA,IAAAA,IAAAA,EAAAA,EAAAA,IAAIxyF,KAAM7C,UAAUo1F,EAT5B,OANClwE,GAgBH,gECvOK,SAAUowE,EAAQrzG,GACtB,OAAO2kE,EAAAA,EAAAA,IAAO,SAACh1D,EAAG5T,GAAU,UAASA,CAAK,GAC3C,gGCOK,SAAUu3G,EAAaC,GAC3B,OAAOnG,EAAAA,EAAAA,IAAQ,SAAC5gB,EAAQmb,IACtBoG,EAAAA,EAAAA,IAAUwF,GAAUx1F,WAAUsvF,EAAAA,EAAAA,GAAyB1F,GAAY,WAAM,SAAWljG,UAAU,GAAE4/F,EAAAA,KAC/FsD,EAAWrc,QAAUkB,EAAOzuE,UAAU4pF,EACxC,GACF,gDC5CM,IAAM6L,EAA+C,CAC1D79F,IAAG,WAGD,OAAQ69F,EAAsBC,UAAY54G,MAAM8a,KACjD,EACD89F,cAAU97G,iECGC8zG,EAAmC,CAG9C/4F,WAAA,SAAWmmD,EAAqB/pD,OAAkB,oCAAA8R,EAAAA,EAAAA,GAAAA,UAAAA,GACxC,MAAa6qF,EAAe,SACpC,OAAIgI,aAAQ,EAAR,EAAU/gG,YACL+gG,EAAS/gG,WAAUxZ,MAAnB,GAAQk6G,EAAAA,EAAAA,IAAAA,CAAYv6C,EAAS/pD,IAAOq9F,EAAAA,EAAAA,IAAKvrF,KAE3ClO,WAAU,cAAA0gG,EAAAA,EAAAA,IAAAA,CAACv6C,EAAS/pD,IAAOq9F,EAAAA,EAAAA,IAAKvrF,IACxC,EACD3N,aAAA,SAAaygG,GACH,MAAajI,EAAe,SACpC,QAAQ,aAAQ,EAAR,EAAUx4F,eAAgBA,cAAcygG,EACjD,EACDD,cAAU97G,kDCrBL,IAAM+1G,EAPW,mBAAXC,QAA0BA,OAAOD,SAIrCC,OAAOD,SAHL,4DCDJ,IAAMvF,EAAwD,mBAAXwF,QAAyBA,OAAOxF,YAAe,kECuB5F6E,GAA6BlD,UAAAA,IAAiB,SAACrwG,GAAW,kBACrEA,EAAO,MACP,KAAKW,KAAO,aACZ,KAAKZ,QAAU,yBAChB,6ECxBD,SAAS09C,EAAQvoB,GACf,OAAOA,EAAIA,EAAIt3B,OAAS,EACzB,CAMK,SAAU+4G,EAAaxvF,GAC3B,OAAO+yF,EAAAA,EAAAA,GAAYz8D,EAAKt2B,IAASA,EAAK1a,WAAQvO,CAC/C,CAEK,SAAU24G,EAAU1vF,EAAamsF,GACrC,MAA6B,iBAAf71D,EAAKt2B,GAAqBA,EAAK1a,MAAS6mG,CACvD,gCCbK,SAAU5C,EAAax7E,EAA6B7uB,GACxD,GAAI6uB,EAAK,CACP,IAAM5yB,EAAQ4yB,EAAIpf,QAAQzP,GAC1B,GAAK/D,GAAS4yB,EAAInf,OAAOzT,EAAO,EACjC,CACF,+CCDK,SAAU+tG,EAAoB8J,GAClC,IAKMC,EAAWD,GALF,SAAC9oF,GACdxwB,MAAM4H,KAAK4oB,GACXA,EAASznB,OAAQ,IAAI/I,OAAQ+I,KAC9B,IAKD,OAFAwwG,EAAS/5G,UAAYH,OAAOC,OAAOU,MAAMR,WACzC+5G,EAAS/5G,UAAU2I,YAAcoxG,EAC1BA,CACR,wFCjBG33G,EAAuD,KASrD,SAAUwsG,EAAa39E,GAC3B,GAAIiU,EAAAA,EAAAA,sCAA8C,CAChD,IAAM80E,GAAU53G,EAKhB,GAJI43G,IACF53G,EAAU,CAAE63G,aAAa,EAAO5pG,MAAO,OAEzC4gB,IACI+oF,EAAQ,CACJ,MAAyB53G,EAAvB63G,EAAW,cAAE5pG,EAAK,QAE1B,GADAjO,EAAU,KACN63G,EACF,MAAM5pG,CAET,CACF,MAGC4gB,GAEH,CAMK,SAAUsgF,EAAavtF,GACvBkhB,EAAAA,EAAAA,uCAAgD9iC,IAClDA,EAAQ63G,aAAc,EACtB73G,EAAQiO,MAAQ2T,EAEnB,gCCvBK,SAAU2vF,EACduG,EACA9G,EACA+G,EACA9G,EACA+G,QADA,QAAA/G,EAAAA,QACA,QAAA+G,GAAAA,GAEA,IAAMC,EAAuBjH,EAAUK,UAAS,WAC9C0G,IACIC,EACFF,EAAmB9gF,IAAI,KAAKq6E,SAAS,KAAMJ,IAE3C,KAAKpE,aAER,GAAEoE,GAIH,GAFA6G,EAAmB9gF,IAAIihF,IAElBD,EAKH,OAAOC,CAEV,gDCDK,SAAU7C,EAAYjnF,GAC1B,OAAOA,CACR,iEC5CM,IAAM6jF,EAAe,SAAI7jF,GAA8B,UAAyB,iBAAbA,EAAEhzB,QAAoC,mBAANgzB,CAAgB,+DCEpH,SAAUikF,EAAmB5uE,GACjC,OAAOiuE,OAAOC,gBAAiBtF,EAAAA,EAAAA,GAAW5oE,aAAG,EAAH,EAAMiuE,OAAOC,eACxD,+BCAK,SAAUtF,EAAWlyG,GACzB,MAAwB,mBAAVA,CACf,0FCDK,SAAU03G,EAAoBzmG,GAClC,OAAOihG,EAAAA,EAAAA,GAAWjhG,EAAM2hG,EAAAA,GACzB,0ECHK,SAAUuF,EAAWlnG,GACzB,OAAOihG,EAAAA,EAAAA,GAAWjhG,aAAK,EAAL,EAAQmnG,EAAAA,GAC3B,+DCAK,SAAUJ,EAAUh4G,GACxB,OAAOkyG,EAAAA,EAAAA,GAAWlyG,aAAK,EAAL,EAAOgrB,KAC1B,kFCLK,SAAiBwtF,EAAsCoB,+GACrDoE,EAASpE,EAAeqE,qEAGF,kBAAMD,EAAOntF,uBAA/BlwB,EAAkBc,EAAAA,OAAhBzB,EAAK,QAAM,4BACfk5F,CAAAA,EAAAA,UACF,4CAEIl5F,WAAN,iCAAAyB,EAAAA,+CAGFu8G,EAAOE,0CAEV,CAEK,SAAU3F,EAAwBjvE,GAGtC,OAAO4oE,EAAAA,EAAAA,GAAW5oE,aAAG,EAAH,EAAK20E,UACxB,+DCnBK,SAAUV,EAAYv9G,GAC1B,OAAOA,IAASkyG,EAAAA,EAAAA,GAAWlyG,EAAMm3G,SAClC,+DCWK,SAAUH,EACd17D,GAEA,OAAO,SAAC86C,GACN,GAZE,SAAkBA,GACtB,OAAO8b,EAAAA,EAAAA,GAAW9b,aAAM,EAAN,EAAQ+nB,KAC3B,CAUOC,CAAQhoB,GACV,OAAOA,EAAO+nB,MAAK,SAA+BE,GAChD,IACE,OAAO/iE,EAAK+iE,EAAc,KAG3B,CAFC,MAAO32F,GACP,KAAK3T,MAAM2T,EACZ,CACF,IAEH,MAAM,IAAI8hB,UAAU,yCACrB,CACF,2EC5BO,EAAYvgC,MAAK,QAUnB,SAAUgwG,EAAuB50E,GACnC,OAAOr0B,EAAAA,EAAAA,IAAI,YAAQ,OATvB,SAA2Bq0B,EAA6B7Z,GACpD,OAAOthB,EAAQshB,GAAQ6Z,EAAE,cAAA24E,EAAAA,EAAAA,IAAAA,IAAAA,EAAAA,EAAAA,IAAIxyF,KAAQ6Z,EAAG7Z,EAC3C,CAOsB,CAAY6Z,EAAI7Z,EAAK,GAC3C,gCCdK,SAAUyjF,IAAU,gFCiFpB,SAAU6E,EAAoB3mE,GAClC,OAAmB,IAAfA,EAAIlrC,OACCi6G,EAAAA,EAGU,IAAf/uE,EAAIlrC,OACCkrC,EAAI,GAGN,SAAel7B,GACpB,OAAOk7B,EAAI5lB,QAAO,SAACma,EAAW2D,GAA4B,SAAG3D,EAAK,GAAEzvB,EACrE,CACF,2EClFK,SAAUikG,EAAqBxtF,GACnC2tF,EAAAA,EAAAA,YAA2B,WACjB,MAAqBzsE,EAAAA,EAAAA,iBAC7B,IAAI0tE,EAKF,MAAM5uF,EAHN4uF,EAAiB5uF,EAKpB,GACF,gCCnBK,SAAUgxF,EAAiCznG,GAE/C,OAAO,IAAIu4B,UACT,iBACY,OAAVv4B,GAAmC,iBAAVA,EAAqB,oBAAsB,IAAIA,EAAK,KAAG,2HAGrF,uKCLa,SAAUqtG,EAAuBC,EAAgBlwE,GAI7D,OAAOkwE,EAAO1yG,MAAM,GAAIwiC,EAAOptC,OAAS,EACzC,gDCiDa,SAAUu9G,EACtBnwE,EACAowE,EACAhoG,GAGA,GAA2B,OAAvBA,EAAQioG,WAAqB,CAC/B,MAAMA,EAAajoG,EAAQioG,WAC3B,IAAK,IAAI34G,EAAI,EAAGA,EAAI24G,EAAWz9G,OAAQ8E,GAAK,EAAG,CAC7C,MAAM44G,EAAQD,EAAW34G,GACzB,IAA+D,IAzDrE,SAA+B04G,EAAkBE,GAC/C,QAAIF,EAASG,SAASD,KAElBF,EAASx9G,SAAW09G,EAAM19G,QACuB,MAAjDw9G,EAASA,EAASx9G,OAAS09G,EAAM19G,OAAS,GAK/C,CAgDyB49G,CAAsBJ,EAAUE,GAClD,OAAOA,CAEV,CACF,CAMD,OAAItwE,EAAOptC,SAAWw9G,EAASx9G,OACtB,KAtDX,SACEw9G,EACAK,GAgBA,MAAMC,EAAoBN,EAASx9G,OAAS69G,EAAa79G,OAAS,EAC5D+9G,EAA2BP,EAASt5F,YAAY,IAAK45F,GAG3D,OAAkC,IAA9BC,EACKP,EAIFA,EAAS5yG,MAAMmzG,EAA2B,EAClD,CAkCC,CAA+CP,EAAUpwE,EAC1D,gDCtFa,SAAU4wE,EACtBzoG,EACA0oG,GAEA,IAAI91F,EAAgB,EAChBhnB,EAAcoU,EAAIvV,OAClBk+G,GAAoB,EAGxB,IAA2B,IAAvBD,EAA8B,CAEhC,IAAgC,IAA5B1oG,EAAIyc,WAAW,SACjB,OAAO,KAIT,KAAO7J,EAAQ5S,EAAIvV,QAAUuV,EAAIpV,WAAWgoB,IAAU,IACpDA,GAAS,EAIX,KAAOhnB,EAAMgnB,EAAQ,GAAK5S,EAAIpV,WAAWgB,EAAM,IAAM,IACnDA,GAAO,EAIT,GAC4B,KAA1BoU,EAAIpV,WAAWgoB,IACe,KAA9B5S,EAAIpV,WAAWgoB,EAAQ,GAEvBA,GAAS,MACJ,CACL,MAAMg2F,EAAkB5oG,EAAI2C,QAAQ,KAAMiQ,GAC1C,IAAyB,IAArBg2F,EAAwB,CAI1B,MAAMC,EAAeD,EAAkBh2F,EACjCk2F,EAAK9oG,EAAIpV,WAAWgoB,GACpBm2F,EAAK/oG,EAAIpV,WAAWgoB,EAAQ,GAC5Bi1B,EAAK7nC,EAAIpV,WAAWgoB,EAAQ,GAC5Bo2F,EAAKhpG,EAAIpV,WAAWgoB,EAAQ,GAC5Bq2F,EAAKjpG,EAAIpV,WAAWgoB,EAAQ,GAElC,GACmB,IAAjBi2F,GACO,MAAPC,GACO,MAAPC,GACO,MAAPlhE,GACO,MAAPmhE,GACO,MAAPC,QAGK,GACY,IAAjBJ,GACO,MAAPC,GACO,MAAPC,GACO,MAAPlhE,GACO,MAAPmhE,QAGK,GACY,IAAjBH,GACO,MAAPC,GACO,MAAPC,GACO,MAAPlhE,QAGK,GACY,IAAjBghE,GACO,MAAPC,GACO,MAAPC,QAKA,IAAK,IAAIx5G,EAAIqjB,EAAOrjB,EAAIq5G,EAAiBr5G,GAAK,EAAG,CAC/C,MAAM25G,EAAoC,GAApBlpG,EAAIpV,WAAW2E,GACrC,IAK8B,IAJ1B25G,GAAiB,IAAMA,GAAiB,KACzCA,GAAiB,IAAMA,GAAiB,IACvB,KAAlBA,GACkB,KAAlBA,GACoB,KAAlBA,GAEF,OAAO,IAEV,CAKH,IADAt2F,EAAQg2F,EAAkB,EACO,KAA1B5oG,EAAIpV,WAAWgoB,IACpBA,GAAS,CAEZ,CACF,CAKD,IAAIu2F,GAA6B,EAC7BC,GAAiC,EACjCC,GAAuB,EAC3B,IAAK,IAAI95G,EAAIqjB,EAAOrjB,EAAI3D,EAAK2D,GAAK,EAAG,CACnC,MAAM4b,EAAenL,EAAIpV,WAAW2E,GACpC,GACW,KAAT4b,GACS,KAATA,GACS,KAATA,EACA,CACAvf,EAAM2D,EACN,KACD,CAAmB,KAAT4b,EAETg+F,EAAoB55G,EACF,KAAT4b,EAETi+F,EAAwB75G,EACN,KAAT4b,EAETk+F,EAAc95G,EACL4b,GAAQ,IAAMA,GAAQ,KAC/Bw9F,GAAW,EAEd,CAYD,IARyB,IAAvBQ,GACAA,EAAoBv2F,GACpBu2F,EAAoBv9G,IAEpBgnB,EAAQu2F,EAAoB,GAIA,KAA1BnpG,EAAIpV,WAAWgoB,GACjB,OAA+B,IAA3Bw2F,EACKppG,EAAI3K,MAAMud,EAAQ,EAAGw2F,GAAuBn0F,cAE9C,MACmB,IAAjBo0F,GAAsBA,EAAcz2F,GAASy2F,EAAcz9G,IAEpEA,EAAMy9G,EAET,CAGD,KAAOz9G,EAAMgnB,EAAQ,GAAiC,KAA5B5S,EAAIpV,WAAWgB,EAAM,IAC7CA,GAAO,EAGT,MAAMq8G,EACM,IAAVr1F,GAAehnB,IAAQoU,EAAIvV,OAASuV,EAAI3K,MAAMud,EAAOhnB,GAAOoU,EAE9D,OAAI2oG,EACKV,EAAShzF,cAGXgzF,CACR,qKCjIK,SAAUqB,IACd,MAAO,CACLvB,OAAQ,KACRwB,oBAAqB,KACrBtB,SAAU,KACVuB,QAAS,KACTC,KAAM,KACNC,UAAW,KACXpB,aAAc,KACdqB,UAAW,KAEd,CAEK,SAAUC,EAAY99G,GAC1BA,EAAOi8G,OAAS,KAChBj8G,EAAOy9G,oBAAsB,KAC7Bz9G,EAAOm8G,SAAW,KAClBn8G,EAAO09G,QAAU,KACjB19G,EAAO29G,KAAO,KACd39G,EAAO49G,UAAY,KACnB59G,EAAOw8G,aAAe,KACtBx8G,EAAO69G,UAAY,IACpB,CAeK,SAAUE,EACd7pG,EACA0uF,EACAob,EAKAC,EACAj+G,GAEA,MAAMmU,GAAoC+pG,EAAAA,EAAAA,GAAYD,GAKtD,MAAmB,iBAAR/pG,EACFlU,IAauB,IAA5BmU,EAAQwoG,gBACV38G,EAAOm8G,SAAWjoG,GACe,IAAxBC,EAAQgqG,YACjBn+G,EAAOm8G,UAAWQ,EAAAA,EAAAA,GAAgBzoG,GAAKkqG,EAAAA,EAAAA,GAAgBlqG,IAEvDlU,EAAOm8G,UAAWQ,EAAAA,EAAAA,GAAgBzoG,GAAK,GAGjC,IAAJ0uF,GAA8C,OAApB5iG,EAAOm8G,WAKZ,IAArBhoG,EAAQkqG,WACVr+G,EAAO29G,MAAOA,EAAAA,EAAAA,GAAK39G,EAAOm8G,WACN,IAAhBn8G,EAAO29G,MANJ39G,GAcsB,IAA7BmU,EAAQmqG,mBACoB,IAA5BnqG,EAAQwoG,kBAC6B,KAArCyB,EAAAA,EAAAA,GAAgBp+G,EAAOm8G,WAEvBn8G,EAAOm8G,SAAW,KACXn8G,IAITg+G,EAAah+G,EAAOm8G,SAAUhoG,EAASnU,GAC/B,IAAJ4iG,GAAuD,OAAxB5iG,EAAOw8G,aACjCx8G,GAITA,EAAOi8G,QAASC,EAAAA,EAAAA,GAAUl8G,EAAOw8G,aAAcx8G,EAAOm8G,SAAUhoG,GACxD,IAAJyuF,GAA0C,OAAlB5iG,EAAOi8G,OAC1Bj8G,GAITA,EAAO69G,WAAYU,EAAAA,EAAAA,GAAav+G,EAAOm8G,SAAUn8G,EAAOi8G,QAChD,IAAJrZ,IAKJ5iG,EAAOy9G,qBAAsBzB,EAAAA,EAAAA,GAC3Bh8G,EAAOi8G,OACPj8G,EAAOw8G,eANAx8G,KAUV,gCC9Ea,SAAU29G,EAAKxB,GAC3B,OA7CF,SAAwBA,GACtB,GAAIA,EAASx9G,OAAS,EACpB,OAAO,EAGT,IAAImoB,EAAwB,MAAhBq1F,EAAS,GAAa,EAAI,EAClCr8G,EAAMq8G,EAASx9G,OASnB,GAP0B,MAAtBw9G,EAASr8G,EAAM,KACjBA,GAAO,GAMLA,EAAMgnB,EAAQ,GAChB,OAAO,EAGT,IAAI03F,GAAoB,EAExB,KAAO13F,EAAQhnB,EAAKgnB,GAAS,EAAG,CAC9B,MAAMzH,EAAO88F,EAASr9G,WAAWgoB,GAEjC,GAAa,KAATzH,EACFm/F,GAAW,OACN,GAIL,IAHEn/F,GAAQ,IAAMA,GAAQ,IACrBA,GAAQ,IAAMA,GAAQ,KACtBA,GAAQ,IAAMA,GAAQ,IAGzB,OAAO,CAEV,CAED,OAAOm/F,CACR,CAQQC,CAAetC,IA9ExB,SAAwBA,GAEtB,GAAIA,EAASx9G,OAAS,EACpB,OAAO,EAIT,GAAIw9G,EAASx9G,OAAS,GACpB,OAAO,EAGT,IAAI+/G,EAAe,EAEnB,IAAK,IAAIj7G,EAAI,EAAGA,EAAI04G,EAASx9G,OAAQ8E,GAAK,EAAG,CAC3C,MAAM4b,EAAO88F,EAASr9G,WAAW2E,GAEjC,GAAa,KAAT4b,EACFq/F,GAAgB,OACX,GAAIr/F,EAAO,IAAgBA,EAAO,GACvC,OAAO,CAEV,CAED,OACmB,IAAjBq/F,GAC2B,KAA3BvC,EAASr9G,WAAW,IACyB,KAA7Cq9G,EAASr9G,WAAWq9G,EAASx9G,OAAS,EAEzC,CAkDoCggH,CAAexC,EACnD,gDC9Da,WAAWA,GACvB,GAAIA,EAASx9G,OAAS,IACpB,OAAO,EAGT,GAAwB,IAApBw9G,EAASx9G,OACX,OAAO,EAGT,IAA6D,KArBzC0gB,EAqBa88F,EAASr9G,WAAW,KAnB1C,IAAMugB,GAAQ,KAASA,GAAQ,IAAMA,GAAQ,IAAOA,EAAO,KAoBpE,OAAO,EAtBX,IAAsBA,EA0BpB,IAAIu/F,GAAwB,EACxBC,GAAwB,EAC5B,MAAMj2E,EAAMuzE,EAASx9G,OAErB,IAAK,IAAI8E,EAAI,EAAGA,EAAImlC,EAAKnlC,GAAK,EAAG,CAC/B,MAAM4b,EAAO88F,EAASr9G,WAAW2E,GACjC,GAAa,KAAT4b,EAAuB,CACzB,GAEE5b,EAAIm7G,EAAe,IAEF,KAAjBC,GAEiB,KAAjBA,GAEiB,KAAjBA,EAEA,OAAO,EAGTD,EAAen7G,CAChB,MAAM,IAEL,KAjDN,SAAsB4b,GACpB,OACGA,GAAQ,IAAMA,GAAQ,KAASA,GAAQ,IAAMA,GAAQ,IAAOA,EAAO,GAEvE,CA4CsBy/F,CAAaz/F,IAAkB,KAATA,GAAwB,KAATA,GAItD,OAAO,EAGTw/F,EAAex/F,CAChB,CAED,OAEEupB,EAAMg2E,EAAe,GAAK,IAIT,KAAjBC,CAEH,gDCzEa,WACZ1C,EACAhoG,EACAkD,GAIA,IAAoC,IAAhClD,EAAQ4qG,qBAAiC5C,EAASx9G,OAAS,EAAG,CAChE,MAAM6/C,EAAe29D,EAASx9G,OAAS,EACjCu+G,EAAaf,EAASr9G,WAAW0/C,GACjCzC,EAAaogE,EAASr9G,WAAW0/C,EAAO,GACxCy+D,EAAad,EAASr9G,WAAW0/C,EAAO,GACxCw+D,EAAab,EAASr9G,WAAW0/C,EAAO,GAE9C,GACS,MAAP0+D,GACO,MAAPnhE,GACO,KAAPkhE,GACO,KAAPD,EAKA,OAHA3lG,EAAIqmG,SAAU,EACdrmG,EAAIumG,WAAY,EAChBvmG,EAAImlG,aAAe,OACZ,EACF,GACE,MAAPU,GACO,MAAPnhE,GACO,MAAPkhE,GACO,KAAPD,EAKA,OAHA3lG,EAAIqmG,SAAU,EACdrmG,EAAIumG,WAAY,EAChBvmG,EAAImlG,aAAe,OACZ,EACF,GACE,MAAPU,GACO,MAAPnhE,GACO,MAAPkhE,GACO,KAAPD,EAKA,OAHA3lG,EAAIqmG,SAAU,EACdrmG,EAAIumG,WAAY,EAChBvmG,EAAImlG,aAAe,OACZ,EACF,GACE,MAAPU,GACO,MAAPnhE,GACO,MAAPkhE,GACO,KAAPD,EAKA,OAHA3lG,EAAIqmG,SAAU,EACdrmG,EAAIumG,WAAY,EAChBvmG,EAAImlG,aAAe,OACZ,EACF,GACE,MAAPU,GACO,MAAPnhE,GACO,MAAPkhE,GACO,KAAPD,EAKA,OAHA3lG,EAAIqmG,SAAU,EACdrmG,EAAIumG,WAAY,EAChBvmG,EAAImlG,aAAe,OACZ,EACF,GACE,MAAPU,GACO,MAAPnhE,GACO,KAAPkhE,EAKA,OAHA5lG,EAAIqmG,SAAU,EACdrmG,EAAIumG,WAAY,EAChBvmG,EAAImlG,aAAe,MACZ,CAEV,CAED,OAAO,CACR,iECjDD,MAAMwC,EApBN,UAAyB,kBACvBC,GAAoB,EADG,oBAEvBF,GAAsB,EAFC,SAGvBV,GAAW,EAHY,gBAIvB1B,GAAkB,EAJK,YAKvBwB,GAAc,EALS,WAMvB/B,EAAa,KANU,iBAOvBkC,GAAmB,IAEnB,MAAO,CACLW,oBACAF,sBACAV,WACA1B,kBACAwB,cACA/B,aACAkC,mBAEH,CAEuCY,CAAgB,IAElD,SAAUhB,EAAY/pG,GAC1B,YAAgBlV,IAAZkV,EACK6qG,EAxBX,UAAyB,kBACvBC,GAAoB,EADG,oBAEvBF,GAAsB,EAFC,SAGvBV,GAAW,EAHY,gBAIvB1B,GAAkB,EAJK,YAKvBwB,GAAc,EALS,WAMvB/B,EAAa,KANU,iBAOvBkC,GAAmB,IAEnB,MAAO,CACLW,oBACAF,sBACAV,WACA1B,kBACAwB,cACA/B,aACAkC,mBAEH,CASC,CAAuCnqG,EACxC,gCCnCa,SAAUoqG,EAAapC,EAAkBF,GAErD,OAAIA,EAAOt9G,SAAWw9G,EAASx9G,OACtB,GAGFw9G,EAAS5yG,MAAM,GAAI0yG,EAAOt9G,OAAS,EAC3C,mGCID,MAAMwgH,GAAkB3B,EAAAA,EAAAA,MAElB,SAAUrtG,EAAM+D,EAAaC,EAA6B,IAC9D,OAAO4pG,EAAAA,EAAAA,IAAU7pG,EAAG,EAAY8pG,EAAAA,EAAc7pG,GAASqpG,EAAAA,EAAAA,MACxD,CAEK,SAAU4B,EACdlrG,EACAC,EAA6B,IAG7B,OADgB2pG,EAAAA,EAAAA,IAAYqB,IACrBpB,EAAAA,EAAAA,IAAU7pG,EAAG,EAAiB8pG,EAAAA,EAAc7pG,EAASgrG,GAAQhD,QACrE,wDCjBM,MAAMkD,EAAqB,WAChC,MAAMlgF,EAAG,CAAC,EAAI,EAAE,KAAO,IAAIC,EAAG,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOD,IAEpD,MADiB,CAAC,EAAI,EAAE,KAAO,CAAC,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,SAAWC,EAAG,WAAaA,EAAG,KAAOA,EAAG,OAASA,EAAG,QAAUA,EAAG,OAASA,EAAG,SAAWA,KAE5K,CAJiC,GAMrBkgF,EAAgB,WAC3B,MAAMjgF,EAAG,CAAC,EAAI,EAAE,KAAO,IAAIkgF,EAAG,CAAC,EAAI,EAAE,KAAO,IAAIC,EAAG,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMngF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAKogF,EAAG,CAAC,EAAI,EAAE,KAAO,CAAC,IAAIF,IAAKG,EAAG,CAAC,EAAI,EAAE,KAAO,CAAC,SAAWH,IAAKI,EAAG,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMtgF,IAAKugF,EAAG,CAAC,EAAI,EAAE,KAAO,CAAC,IAAIvgF,IAAKwgF,EAAG,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQN,IAAKO,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKP,IAAKQ,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQR,IAAKS,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKT,IAAKU,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,OAASV,IAAKW,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMX,EAAG,iBAAiBA,IAAKY,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,OAASD,IAAME,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,UAAYJ,EAAI,OAASE,IAAMG,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKd,EAAG,UAAYS,EAAI,aAAaT,EAAG,OAASW,IAAMI,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOf,IAAKgB,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOhB,IAAKiB,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMjB,IAAKkB,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKlB,IAAKmB,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOnB,IAAKoB,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQpB,IAAKqB,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMvhF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAKwhF,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,EAAItB,IAAKuB,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,SAAWvB,IAAKwB,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOxB,IAAKyB,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMzB,IAAK0B,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,KAAO1B,EAAG,QAAUA,IAAK2B,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,KAAO3B,IAAK4B,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,IAAM9hF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK+hF,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,IAAM/hF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,IAAKgiF,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMhiF,EAAG,SAAWkgF,IAAK+B,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,OAAS/B,IAAKgC,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQhC,IAAKiC,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,OAASjC,IAAKkC,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKpiF,IAAKqiF,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMriF,IAAKsiF,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMtiF,EAAG,GAAKA,EAAG,IAAMA,IAAKuiF,EAAI,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKviF,EAAG,IAAMA,IAEj8C,MADY,CAAC,EAAI,EAAE,KAAO,CAAC,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMkgF,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,SAAWkgF,IAAK,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,yBAAyBlgF,EAAG,sBAAsBA,EAAG,UAAYA,EAAG,SAAWA,EAAG,UAAYA,EAAG,OAASA,EAAG,SAAWA,EAAG,QAAUA,EAAG,QAAUA,EAAG,mBAAmBA,EAAG,WAAaA,EAAG,sBAAsBA,EAAG,UAAYA,EAAG,UAAYA,EAAG,YAAcA,EAAG,OAASA,EAAG,WAAaA,EAAG,OAASA,EAAG,IAAMA,EAAG,MAAQA,EAAG,SAAWA,EAAG,cAAgBA,EAAG,aAAeA,EAAG,QAAUA,EAAG,cAAgBA,EAAG,KAAOA,EAAG,WAAaA,EAAG,WAAaA,EAAG,WAAaA,EAAG,QAAUA,EAAG,QAAUA,EAAG,KAAOA,EAAG,OAASA,EAAG,KAAOA,EAAG,SAAWA,EAAG,UAAYA,EAAG,OAASA,EAAG,SAAWA,EAAG,cAAgBA,EAAG,UAAYA,EAAG,SAAWA,EAAG,QAAUA,EAAG,WAAaA,EAAG,OAASA,EAAG,KAAOA,EAAG,QAAUA,EAAG,WAAaA,EAAG,eAAiBA,EAAG,MAAQA,EAAG,YAAcA,EAAG,UAAYA,EAAG,UAAYA,EAAG,QAAUA,EAAG,WAAaA,EAAG,QAAUA,EAAG,UAAYA,EAAG,SAAWA,EAAG,YAAcA,EAAG,MAAQA,EAAG,WAAaA,EAAG,UAAYA,EAAG,WAAaA,EAAG,YAAcA,EAAG,YAAcA,EAAG,wBAAwBA,EAAG,MAAQA,EAAG,MAAQA,EAAG,WAAaA,EAAG,WAAaA,EAAG,QAAUA,EAAG,IAAMA,EAAG,SAAWA,EAAG,WAAaA,EAAG,OAASA,EAAG,UAAYA,EAAG,SAAWA,EAAG,KAAOA,EAAG,UAAYA,EAAG,SAAWA,EAAG,QAAUA,EAAG,OAASA,EAAG,QAAUA,EAAG,QAAUA,EAAG,MAAQA,EAAG,aAAeA,EAAG,MAAQA,IAAK,GAAKmgF,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMngF,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMkgF,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,SAAWkgF,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKlgF,EAAG,IAAMA,EAAG,QAAUA,EAAG,IAAMA,EAAG,IAAMA,EAAG,MAAQkgF,EAAG,SAAWA,EAAG,KAAOA,EAAG,KAAOA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKlgF,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,IAAK,GAAKA,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMqgF,EAAG,KAAOrgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,OAASA,EAAG,OAASA,EAAG,IAAMA,EAAG,IAAMA,EAAG,OAASA,EAAG,IAAMA,IAAK,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOA,EAAG,UAAUA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAKsgF,EAAG,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUJ,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,IAAK,GAAKqgF,EAAG,GAAKrgF,EAAG,GAAKA,EAAG,UAAY,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOkgF,IAAK,UAAY,CAAC,EAAI,EAAE,KAAO,CAAC,IAAIA,EAAG,GAAKE,EAAG,GAAKA,IAAK,cAAgBF,EAAG,cAAgBA,EAAG,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKE,EAAG,OAASA,IAAK,IAAMF,EAAG,KAAOA,EAAG,KAAOA,EAAG,aAAeA,EAAG,OAAOA,EAAG,MAAMA,EAAG,QAAQA,EAAG,YAAYA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,SAAWA,EAAG,UAAY,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,IAAK,aAAeA,IAAK,IAAMlgF,EAAG,IAAMA,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,SAAWA,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUA,IAAK,GAAKA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,IAAK,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,IAAK,IAAMA,EAAG,GAAKA,EAAG,KAAOA,EAAG,KAAOA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKkgF,EAAG,IAAMA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,GAAKA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKkgF,EAAG,SAAWA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,MAAQA,EAAG,GAAKA,IAAK,GAAKugF,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKvgF,EAAG,WAAakgF,EAAG,SAAWA,EAAG,mBAAqBM,EAAG,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUN,IAAK,aAAeA,EAAG,SAAWE,IAAK,GAAKE,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,EAAItgF,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAO,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,SAAWkgF,EAAG,MAAQA,IAAK,GAAKC,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKngF,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,IAAK,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUkgF,EAAG,KAAOA,EAAG,OAASA,EAAG,aAAaA,EAAG,WAAWA,EAAG,WAAWA,EAAG,UAAUA,EAAG,OAASA,EAAG,OAASA,EAAG,IAAMA,EAAG,OAASA,EAAG,MAAQA,EAAG,QAAQA,EAAG,QAAUA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOlgF,EAAG,QAAUA,EAAG,KAAOA,EAAG,SAAWkgF,IAAK,GAAKC,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMngF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKkgF,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,SAAWA,EAAG,KAAOA,EAAG,KAAOA,EAAG,KAAOA,EAAG,QAAUA,EAAG,QAAUA,EAAG,YAAcA,EAAG,WAAaA,EAAG,QAAUA,EAAG,SAAWA,EAAG,SAAWA,EAAG,QAAUA,EAAG,SAAWA,EAAG,UAAYA,EAAG,KAAOA,EAAG,SAAWA,EAAG,WAAaA,EAAG,OAASA,EAAG,QAAUA,EAAG,OAASA,EAAG,SAAWA,EAAG,OAASA,EAAG,SAAWA,EAAG,YAAcA,EAAG,cAAgBA,EAAG,OAASA,EAAG,QAAUA,EAAG,MAAQA,EAAG,WAAaA,EAAG,MAAQA,EAAG,WAAaA,EAAG,KAAOA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,SAASA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,MAAQA,EAAG,UAAYA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,EAAIA,EAAG,QAAUA,EAAG,MAAQA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,SAAWA,EAAG,IAAMA,EAAG,cAAgBA,EAAG,SAAWA,EAAG,OAASA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,SAAWkgF,EAAG,aAAe,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQA,QAAS,SAAWlgF,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,OAASA,EAAG,SAAWA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,MAAQA,EAAG,KAAOA,EAAG,QAAUA,EAAG,GAAKA,EAAG,IAAMA,EAAG,OAASA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,QAAUA,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,IAAK,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,MAAQA,EAAG,IAAMA,EAAG,UAAYA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKkgF,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,IAAK,IAAMlgF,EAAG,IAAMA,EAAG,SAAWA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,QAAUA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,OAASA,EAAG,GAAKA,EAAG,IAAMA,EAAG,MAAQA,EAAG,IAAMA,EAAG,QAAUA,EAAG,IAAMugF,EAAG,IAAMvgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,OAASA,EAAG,OAASA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,MAAQA,EAAG,IAAMA,EAAG,OAASA,EAAG,IAAMA,EAAG,SAAWA,EAAG,IAAMA,EAAG,UAAYA,EAAG,SAAWA,EAAG,SAAWA,EAAG,MAAQA,EAAG,WAAaA,EAAG,WAAaA,EAAG,YAAcA,EAAG,SAAWA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,SAAWA,EAAG,IAAMA,EAAG,KAAOA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,KAAOA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKkgF,IAAK,GAAKC,EAAG,GAAKngF,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMqgF,EAAG,GAAKrgF,EAAG,QAAUkgF,EAAG,UAAYA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKkgF,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKlgF,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,MAAQkgF,EAAG,MAAQE,EAAG,GAAKF,EAAG,SAAWA,EAAG,QAAQA,EAAG,aAAeA,IAAK,IAAMlgF,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUkgF,EAAG,UAAYA,EAAG,cAAcA,EAAG,SAAWA,EAAG,UAAYA,EAAG,OAASA,EAAG,IAAMA,EAAG,cAAgBA,EAAG,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,UAAYA,MAAO,GAAKI,EAAG,GAAKD,EAAG,GAAKrgF,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUkgF,EAAG,SAAWA,EAAG,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOA,IAAK,UAAYA,IAAK,iBAAiBA,EAAG,QAAUA,EAAG,OAASA,EAAG,aAAeA,EAAG,QAAU,CAAC,EAAI,EAAE,KAAO,CAAC,IAAIA,EAAG,IAAME,IAAK,OAAOF,EAAG,MAAMA,EAAG,QAAQA,EAAG,YAAYA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,GAAKA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAMA,EAAG,GAAKA,EAAG,KAAOA,EAAG,kBAAkBA,EAAG,SAAWA,EAAG,IAAMA,EAAG,OAASA,EAAG,GAAKA,EAAG,KAAOA,EAAG,IAAMkgF,EAAG,GAAKA,IAAK,GAAKK,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKvgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,SAAWkgF,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,UAAY,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUogF,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,aAAaF,EAAG,iBAAiBA,IAAK,IAAME,EAAG,aAAaO,MAAQ,IAAM3gF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,aAAaA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,aAAekgF,EAAG,aAAeU,IAAM,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,KAAO5gF,EAAG,IAAMqgF,EAAG,IAAMrgF,EAAG,KAAOA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,MAAQkgF,EAAG,IAAMA,EAAG,KAAOE,EAAG,UAAYF,EAAG,OAASA,EAAG,KAAOA,EAAG,IAAMA,EAAG,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,IAAK,SAAWA,IAAK,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,cAAgBE,EAAG,cAAgB,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,IAAK,WAAaF,EAAG,gBAAgBA,EAAG,WAAaA,EAAG,UAAYA,EAAG,UAAY,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUE,EAAG,YAAYA,EAAG,YAAY,CAAC,EAAI,EAAE,KAAO,CAAC,UAAYO,EAAI,OAASE,IAAM,IAAMT,EAAG,GAAKF,EAAG,oBAAoBA,EAAG,oBAAoBA,EAAG,gBAAgBA,EAAG,oBAAoBA,EAAG,oBAAoBA,EAAG,kBAAkBA,EAAG,kBAAkBA,EAAG,eAAeA,EAAG,eAAeA,EAAG,eAAeA,EAAG,gBAAgBA,EAAG,wBAAwBA,EAAG,eAAeA,EAAG,mBAAmBA,EAAG,eAAeA,EAAG,eAAeA,EAAG,eAAeA,EAAG,iBAAiBc,EAAI,aAAaA,EAAI,eAAeA,EAAI,eAAeA,EAAI,YAAYA,EAAI,YAAYA,EAAI,YAAYA,EAAI,iBAAiBD,EAAI,iBAAiBA,EAAI,iBAAiBA,EAAI,YAAYA,EAAI,YAAYA,EAAI,uBAAuBb,EAAG,uBAAuBA,EAAG,uBAAuBA,EAAG,4BAA4BA,EAAG,4BAA4BA,EAAG,4BAA4BA,EAAG,uBAAuBA,EAAG,uBAAuBA,EAAG,aAAaY,EAAI,YAAYA,EAAI,iBAAiBA,EAAI,aAAaA,EAAI,aAAaA,EAAI,aAAaA,EAAI,YAAYA,EAAI,YAAYA,IAAM,iBAAmB,CAAC,EAAI,EAAE,KAAO,CAAC,iBAAiBZ,EAAG,iBAAiBA,EAAG,iBAAiBA,EAAG,aAAaA,EAAG,iBAAiBA,EAAG,iBAAiBA,EAAG,eAAeA,EAAG,eAAeA,EAAG,YAAYA,EAAG,YAAYA,EAAG,YAAYA,EAAG,YAAYA,EAAG,YAAYA,EAAG,YAAYA,EAAG,gBAAgBA,EAAG,YAAYA,EAAG,YAAYA,IAAK,qBAAuBA,EAAG,QAAUA,EAAG,eAAiBA,EAAG,oBAAsBA,EAAG,aAAaA,EAAG,UAAYA,EAAG,iBAAiBA,EAAG,WAAaA,EAAG,OAASA,EAAG,QAAUA,EAAG,MAAQA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,OAASA,EAAG,GAAKA,EAAG,GAAKA,EAAG,UAAYA,EAAG,WAAaA,EAAG,gBAAkBA,EAAG,gBAAkBA,EAAG,cAAgBA,EAAG,eAAe,CAAC,EAAI,EAAE,KAAO,CAAC,IAAIA,EAAG,IAAME,EAAG,IAAMA,EAAG,IAAMA,IAAK,WAAaF,EAAG,WAAaA,EAAG,SAAWA,EAAG,QAAUA,EAAG,cAAgBA,EAAG,WAAa,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOA,EAAG,SAAWA,IAAK,MAAQA,EAAG,YAAcA,EAAG,WAAaA,EAAG,SAAWA,EAAG,aAAeA,EAAG,QAAUA,EAAG,iBAAiBA,EAAG,iBAAiBA,EAAG,cAAcA,EAAG,cAAcA,EAAG,cAAcA,EAAG,YAAYA,EAAG,cAAcA,EAAG,gBAAgBA,EAAG,cAAcA,EAAG,gBAAgBA,EAAG,gBAAgBA,EAAG,aAAaA,EAAG,cAAcA,EAAG,cAAcA,EAAG,QAAUA,EAAG,QAAUA,EAAG,SAAWA,EAAG,QAAUA,EAAG,YAAcA,EAAG,UAAYA,EAAG,QAAUA,EAAG,aAAaA,EAAG,SAAWA,EAAG,kBAAkBA,EAAG,kBAAkBA,EAAG,gBAAgBA,EAAG,mBAAmBA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,QAAUA,EAAG,OAASA,EAAG,aAAaA,EAAG,UAAYA,EAAG,SAAWA,EAAG,UAAYA,EAAG,iBAAiBA,EAAG,eAAeA,EAAG,kBAAkBA,EAAG,iBAAiBA,EAAG,eAAeA,EAAG,YAAYA,EAAG,oBAAoBA,EAAG,WAAWA,EAAG,qBAAqBA,EAAG,gBAAgBA,EAAG,gBAAgBA,EAAG,cAAcA,EAAG,wBAAwBA,EAAG,YAAYA,EAAG,aAAaA,EAAG,YAAYA,EAAG,mBAAmBA,EAAG,cAAcA,EAAG,kBAAkBA,EAAG,cAAcA,EAAG,eAAeA,EAAG,mBAAmBA,EAAG,aAAaA,EAAG,gBAAgBA,EAAG,iBAAiBA,EAAG,aAAaA,EAAG,eAAeA,EAAG,uBAAuBA,EAAG,oBAAoBA,EAAG,cAAcA,EAAG,kBAAkBA,EAAG,gBAAgBA,EAAG,iBAAiBA,EAAG,eAAeA,EAAG,eAAeA,EAAG,cAAcA,EAAG,iBAAiBA,EAAG,mBAAmBA,EAAG,cAAcA,EAAG,gBAAgBA,EAAG,kBAAkBA,EAAG,eAAeA,EAAG,iBAAiBA,EAAG,oBAAoBA,EAAG,eAAeA,EAAG,UAAUA,EAAG,gBAAgBA,EAAG,eAAeA,EAAG,mBAAmBA,EAAG,gBAAgBA,EAAG,UAAUA,EAAG,mBAAmBA,EAAG,WAAWA,EAAG,cAAcA,EAAG,kBAAkBA,EAAG,WAAWA,EAAG,gBAAgBA,EAAG,iBAAmBA,EAAG,YAAYA,EAAG,WAAaA,EAAG,WAAWA,EAAG,mBAAmBA,EAAG,OAASA,EAAG,iBAAiBA,EAAG,cAAcA,EAAG,SAAWA,EAAG,aAAaA,EAAG,gBAAgBA,EAAG,eAAeA,EAAG,eAAiBA,EAAG,mBAAqBE,EAAG,SAAWF,EAAG,SAAWA,EAAG,MAAQA,EAAG,OAASA,EAAG,MAAQA,EAAG,WAAaA,EAAG,MAAQA,EAAG,UAAYA,EAAG,SAAWA,EAAG,kBAAkBA,EAAG,UAAYA,EAAG,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,OAAOA,EAAG,OAAOA,EAAG,OAAOA,EAAG,OAAOA,EAAG,OAAOA,EAAG,OAAOA,EAAG,OAAOA,EAAG,OAAOA,IAAK,UAAYA,EAAG,MAAQe,EAAI,mBAAmBf,EAAG,iBAAiBA,EAAG,SAAWA,EAAG,YAAcA,EAAG,MAAQA,EAAG,YAAcA,EAAG,aAAeA,EAAG,aAAaA,EAAG,UAAYA,EAAG,SAAWA,EAAG,SAAWA,EAAG,aAAeA,EAAG,kBAAoBA,EAAG,OAAOE,EAAG,QAAU,CAAC,EAAI,EAAE,KAAO,CAAC,IAAS,SAAWF,EAAG,WAAaA,EAAG,WAAaA,EAAG,mBAAqBA,EAAG,aAAeA,EAAG,WAAaA,EAAG,YAAcA,EAAG,SAAWA,EAAG,QAAUA,EAAG,UAAYA,EAAG,UAAYA,EAAG,UAAYA,EAAG,aAAeA,EAAG,UAAYA,EAAG,SAAWA,EAAG,aAAeA,EAAG,QAAUA,EAAG,SAAWA,EAAG,WAAaA,EAAG,aAAeA,EAAG,OAASA,EAAG,OAASA,EAAG,qBAAqBgB,EAAI,QAAU,CAAC,EAAI,EAAE,KAAO,CAAC,YAAYhB,EAAG,eAAeA,IAAK,YAAY,CAAC,EAAI,EAAE,KAAO,CAAC,OAASA,EAAG,iBAAiBA,IAAK,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOA,IAAK,UAAYA,EAAG,YAAcgB,EAAI,WAAa,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMhB,EAAG,IAAMA,EAAG,IAAMA,IAAK,OAAS,CAAC,EAAI,EAAE,KAAO,CAAC,IAAME,IAAK,SAAWF,EAAG,cAAgBA,EAAG,KAAOiB,EAAI,OAAS,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUjB,EAAG,aAAeE,IAAK,cAAgBA,EAAG,kBAAoB,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKF,IAAK,YAAcA,EAAG,YAAcA,EAAG,SAAWA,EAAG,WAAaA,EAAG,UAAYkB,EAAI,SAAWlB,EAAG,gBAAgB,CAAC,EAAI,EAAE,KAAO,CAAC,SAAWA,EAAG,QAAUA,EAAG,SAAWA,EAAG,KAAOA,EAAG,OAASA,EAAG,QAAUA,EAAG,KAAOA,EAAG,OAASA,EAAG,GAAKA,EAAG,EAAIA,EAAG,KAAOA,IAAK,YAAcM,EAAG,KAAKN,EAAG,QAAUA,EAAG,SAASA,EAAG,SAAWA,EAAG,SAAWA,EAAG,SAAWA,EAAG,WAAaA,EAAG,WAAaA,EAAG,YAAcA,EAAG,WAAaA,EAAG,MAAQA,EAAG,WAAaA,EAAG,oBAAoBA,EAAG,gBAAkBA,EAAG,eAAiBA,EAAG,kBAAoBA,EAAG,iBAAmBA,EAAG,aAAaA,EAAG,UAAYA,EAAG,WAAaA,EAAG,WAAaA,EAAG,gBAAkBA,EAAG,cAAgBA,EAAG,YAAcA,EAAG,SAAWA,EAAG,aAAeA,EAAG,YAAcA,EAAG,cAAgBA,EAAG,aAAeA,EAAG,aAAaA,EAAG,SAAWA,EAAG,MAAQA,EAAG,UAAYA,EAAG,mBAAqBA,EAAG,SAAWA,EAAG,UAAYA,EAAG,cAAgBA,EAAG,UAAYA,EAAG,SAAWA,EAAG,SAAWA,EAAG,UAAYA,EAAG,WAAaA,EAAG,sBAAwB,CAAC,EAAI,EAAE,KAAO,CAAC,OAASA,IAAK,QAAUA,EAAG,WAAaA,EAAG,mBAAmBA,EAAG,aAAeA,EAAG,WAAaA,EAAG,gBAAkBA,EAAG,YAAcA,EAAG,MAAQA,EAAG,aAAeA,EAAG,OAASA,EAAG,SAAWE,EAAG,YAAcF,EAAG,cAAcA,EAAG,QAAUA,EAAG,eAAeA,EAAG,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,IAAK,eAAiBkB,EAAI,YAAclB,EAAG,OAASA,EAAG,IAAMA,EAAG,kBAAkBA,EAAG,oBAAoBA,EAAG,YAAcA,EAAG,aAAeE,EAAG,SAAWF,EAAG,QAAUA,EAAG,OAASiB,EAAI,SAAWjB,EAAG,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUE,EAAG,cAAcA,EAAG,cAAcA,IAAK,OAASF,EAAG,QAAUA,EAAG,mBAAmBA,EAAG,aAAeA,EAAG,UAAYA,EAAG,WAAaA,EAAG,QAAQA,EAAG,SAAWA,EAAG,SAAWA,EAAG,QAAUA,EAAG,WAAaA,EAAG,cAAc,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQA,EAAG,KAAOA,IAAK,aAAeA,EAAG,eAAeA,EAAG,oBAAoBA,EAAG,oBAAoBA,EAAG,aAAeA,EAAG,OAAS,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,IAAK,WAAWA,EAAG,QAAUA,EAAG,SAAWA,EAAG,aAAamB,EAAI,QAAUnB,EAAG,cAAgBA,EAAG,QAAUA,EAAG,mBAAmBA,EAAG,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,IAAK,GAAKA,EAAG,aAAeE,EAAG,WAAaF,EAAG,iBAAiBA,EAAG,gBAAkBA,EAAG,SAAWA,EAAG,SAAWoB,EAAI,YAAcpB,EAAG,eAAeA,EAAG,gBAAkB,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,IAAK,QAAUA,EAAG,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,WAAWA,IAAK,SAAWA,IAAK,KAAOlgF,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,SAAWkgF,IAAK,GAAKqB,EAAI,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMvhF,EAAG,IAAMkgF,EAAG,KAAOA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKlgF,EAAG,IAAMA,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,SAAWkgF,EAAG,WAAasB,IAAM,QAAUxhF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,MAAQA,EAAG,IAAMA,EAAG,GAAKA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKkgF,EAAG,MAAQA,EAAG,GAAKA,EAAG,SAAWA,EAAG,YAAc,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQE,EAAG,OAASF,IAAK,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,QAAS,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUA,EAAG,QAAUA,EAAG,IAAMA,EAAG,QAAU,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,IAAK,kBAAkBA,EAAG,WAAaA,EAAG,eAAeA,EAAG,YAAYA,EAAG,QAAUA,EAAG,gBAAkBA,EAAG,WAAaA,EAAG,QAAUA,EAAG,WAAaA,EAAG,WAAaA,EAAG,cAAgBA,EAAG,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,OAASA,IAAK,QAAUA,EAAG,WAAWA,EAAG,iBAAiB,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,IAAK,gBAAgBA,EAAG,OAASE,EAAG,KAAOF,EAAG,SAAWA,EAAG,0BAA0BA,EAAG,iBAAmBA,EAAG,wBAAwBA,EAAG,eAAiBA,EAAG,eAAe,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKoB,IAAM,aAAapB,EAAG,YAAYA,EAAG,SAASA,EAAG,YAAYA,EAAG,SAASA,EAAG,SAASA,EAAG,YAAcA,EAAG,aAAaA,EAAG,eAAiBA,EAAG,YAAcA,EAAG,aAAaA,EAAG,WAAaA,EAAG,YAAYA,EAAG,eAAeA,EAAG,YAAYA,EAAG,MAAQA,EAAG,OAASA,EAAG,mBAAmBA,EAAG,aAAaA,EAAG,YAAYA,EAAG,MAAQA,EAAG,aAAe,CAAC,EAAI,EAAE,KAAO,CAAC,SAAWA,IAAK,aAAeA,EAAG,aAAaA,EAAG,OAAOA,EAAG,MAAMA,EAAG,QAAQA,EAAG,YAAYA,EAAG,SAASA,EAAG,WAAWA,EAAG,QAAUA,EAAG,UAAUA,EAAG,OAASA,EAAG,aAAaA,EAAG,WAAWA,EAAG,SAASA,EAAG,UAAUA,EAAG,uBAAuBA,EAAG,cAAcA,EAAG,UAAYE,EAAG,YAAcF,EAAG,eAAeA,EAAG,gBAAgBA,EAAG,mBAAqBA,IAAK,GAAKlgF,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMkgF,EAAG,GAAKA,EAAG,KAAOA,EAAG,IAAMA,EAAG,MAAQA,EAAG,SAAWA,EAAG,aAAeA,IAAK,GAAKC,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMngF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOkgF,EAAG,SAAWA,IAAK,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,YAAYA,MAAO,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMqgF,EAAG,IAAMrgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMqgF,EAAG,IAAMrgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAKugF,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMF,EAAG,IAAMrgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,aAAekgF,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,KAAOA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,WAAakgF,EAAG,KAAOA,EAAG,QAAUA,EAAG,OAASuB,EAAI,MAAQvB,EAAG,cAAgBA,EAAG,MAAQA,EAAG,SAAWE,EAAG,YAAcF,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQlgF,EAAG,GAAKkgF,EAAG,SAAWA,EAAG,kBAAkBA,EAAG,SAAWA,EAAG,IAAMA,EAAG,cAAgB,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,IAAK,WAAa,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOA,EAAG,KAAOA,IAAK,MAAQA,EAAG,aAAeA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAKugF,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMvgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,MAAQkgF,IAAK,GAAKlgF,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,SAAWA,EAAG,OAASA,EAAG,OAASA,EAAG,IAAMA,EAAG,UAAYA,EAAG,wBAAwBA,EAAG,qBAAqBA,EAAG,kBAAkBA,EAAG,MAAQA,EAAG,mBAAmBA,EAAG,QAAUA,EAAG,SAAWA,EAAG,WAAaA,EAAG,KAAOA,EAAG,YAAcA,EAAG,UAAUkgF,EAAG,SAASA,EAAG,MAAQA,EAAG,aAAaA,EAAG,UAAYA,EAAG,SAAWA,EAAG,QAAUA,EAAG,SAASA,EAAG,kCAAkCA,EAAG,QAAUA,EAAG,aAAeA,EAAG,IAAMA,IAAK,GAAKlgF,EAAG,GAAKA,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAKA,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOkgF,EAAG,IAAMA,EAAG,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,OAASA,MAAO,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMkgF,EAAG,GAAKA,IAAK,GAAKlgF,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,IAAMA,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMkgF,IAAK,GAAKlgF,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,SAAWkgF,IAAK,GAAKlgF,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOkgF,EAAG,GAAKA,EAAG,GAAKA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAKA,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKkgF,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,aAAaA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,YAAYA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,YAAYA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,SAAWkgF,EAAG,OAASA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAKlgF,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKkgF,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKlgF,EAAG,KAAOA,EAAG,KAAOA,EAAG,IAAMA,EAAG,SAAWkgF,EAAG,KAAOA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,KAAOA,EAAG,KAAOA,EAAG,KAAOA,EAAG,MAAQA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,MAAQA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAOA,EAAG,GAAKA,EAAG,KAAOA,EAAG,IAAMA,EAAG,KAAOA,EAAG,MAAQA,EAAG,GAAKA,EAAG,MAAQA,EAAG,KAAOA,EAAG,OAASA,EAAG,KAAOA,EAAG,QAAUA,EAAG,QAAUA,EAAG,KAAOA,EAAG,MAAQA,EAAG,MAAQA,EAAG,MAAQA,EAAG,SAAWA,EAAG,OAASA,EAAG,SAAWA,EAAG,MAAQA,EAAG,MAAQA,EAAG,KAAOA,EAAG,OAASA,EAAG,IAAMA,EAAG,KAAOA,EAAG,KAAOA,EAAG,KAAOA,EAAG,OAASA,EAAG,OAASA,EAAG,MAAQA,EAAG,SAAWkgF,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKlgF,EAAG,IAAMA,EAAG,GAAKqgF,EAAG,KAAOrgF,EAAG,GAAKA,EAAG,IAAMA,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMogF,IAAK,IAAMpgF,EAAG,GAAKA,EAAG,OAASA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOkgF,EAAG,MAAQA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,SAAWkgF,EAAG,aAAeA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKlgF,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUkgF,EAAG,SAAWA,EAAG,WAAaA,IAAK,IAAMlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,IAAK,eAAe,CAAC,EAAI,EAAE,KAAO,CAAC,gBAAgBA,EAAG,cAAcA,EAAG,aAAaA,EAAG,cAAcA,IAAK,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,OAASA,EAAG,KAAOA,EAAG,IAAMA,EAAG,KAAOA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,IAAK,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKkgF,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,KAAKlgF,EAAG,KAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,MAAQA,EAAG,IAAMA,EAAG,SAAWA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAMA,EAAG,KAAOA,EAAG,GAAKA,EAAG,MAAQA,EAAG,GAAKA,EAAG,IAAMA,EAAG,GAAKA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,QAAUA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,SAAWA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,OAASA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAMkgF,EAAG,QAAUA,EAAG,SAAWA,EAAG,MAAQA,EAAG,SAAWA,IAAK,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUA,EAAG,cAAcA,EAAG,OAASA,EAAG,sBAAsBA,EAAG,uBAAuBA,EAAG,UAAUA,EAAG,YAAYA,EAAG,aAAaA,EAAG,gBAAgBA,EAAG,WAAaA,EAAG,OAASA,EAAG,OAASA,EAAG,MAAQA,EAAG,SAAWA,EAAG,OAASA,EAAG,SAAWA,EAAG,OAASA,EAAG,aAAeA,EAAG,QAAQA,EAAG,UAAYA,EAAG,SAASA,IAAK,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKlgF,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOkgF,EAAG,IAAMlgF,EAAG,OAASkgF,EAAG,SAASA,EAAG,aAAeA,EAAG,YAAc,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,UAAYE,IAAK,YAAcF,EAAG,UAAYA,EAAG,SAAWA,EAAG,QAAUA,EAAG,kBAAoBA,EAAG,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,IAAK,WAAaA,EAAG,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,OAASA,IAAK,MAAQA,EAAG,KAAOA,EAAG,SAAWA,EAAG,cAAcA,EAAG,IAAMA,EAAG,UAAY,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,IAAK,MAAQA,EAAG,OAASA,EAAG,OAASA,EAAG,QAAUA,EAAG,aAAaA,EAAG,aAAeA,EAAG,UAAYE,EAAG,QAAUc,EAAI,WAAa,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQhB,IAAK,KAAOA,EAAG,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,YAAYA,IAAK,UAAYA,EAAG,UAAYA,EAAG,MAAQA,EAAG,eAAiBE,EAAG,MAAQF,EAAG,QAAU,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQA,IAAK,IAAMA,EAAG,aAAeA,EAAG,MAAQA,EAAG,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOA,IAAK,SAAWA,EAAG,KAAOA,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,IAAME,IAAK,WAAaF,EAAG,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,EAAIA,IAAK,SAASE,EAAG,SAASA,EAAG,YAAcF,EAAG,YAAcA,EAAG,aAAe,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUA,IAAK,IAAMA,EAAG,SAAWA,EAAG,YAAcA,EAAG,UAAYA,EAAG,aAAaA,EAAG,SAAWA,EAAG,KAAOe,EAAI,OAASb,EAAG,SAAWF,EAAG,QAAUA,EAAG,IAAME,EAAG,OAASF,EAAG,QAAUA,EAAG,UAAY,CAAC,EAAI,EAAE,KAAO,CAAC,IAAM0B,EAAI,OAASA,EAAI,KAAOC,EAAI,QAAUD,IAAM,QAAU1B,EAAG,KAAOA,EAAG,SAAWA,EAAG,QAAUA,EAAG,YAAcA,EAAG,cAAgBA,IAAK,GAAK4B,EAAI,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAK9hF,EAAG,GAAKA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,kBAAkBA,EAAG,MAAQA,EAAG,iBAAiBA,EAAG,MAAQA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,QAAUkgF,EAAG,SAAWA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,QAAUA,EAAG,eAAeA,EAAG,YAAcA,EAAG,IAAMA,EAAG,WAAaA,EAAG,IAAMA,EAAG,SAAWA,EAAG,IAAMA,EAAG,SAAWA,EAAG,iBAAiBA,EAAG,cAAgBA,EAAG,IAAMA,EAAG,kBAAkBA,EAAG,mBAAmBA,EAAG,kBAAkBA,EAAG,wBAAwBA,EAAG,uBAAuBA,EAAG,iBAAiBA,EAAG,iBAAiBA,EAAG,kBAAkBA,EAAG,eAAiBA,EAAG,uBAAuBA,EAAG,oBAAsBA,EAAG,cAAgBA,EAAG,IAAMA,EAAG,IAAMA,EAAG,MAAQA,EAAG,IAAMA,EAAG,QAAUA,EAAG,IAAMA,EAAG,UAAYA,EAAG,SAAWA,EAAG,QAAUA,EAAG,IAAMA,EAAG,OAASA,EAAG,IAAMA,EAAG,OAASA,EAAG,SAAWA,EAAG,SAAWA,EAAG,IAAMA,EAAG,IAAMA,EAAG,OAASA,EAAG,IAAMA,EAAG,SAAWA,EAAG,SAAWA,EAAG,IAAMA,EAAG,QAAUA,EAAG,OAASA,EAAG,IAAMA,EAAG,IAAMA,EAAG,QAAUA,EAAG,oBAAoBA,EAAG,2BAA2BA,EAAG,oBAAoBA,EAAG,mBAAmBA,EAAG,0BAA0BA,EAAG,mBAAmBA,EAAG,qBAAqBA,EAAG,oBAAoBA,EAAG,mBAAmBA,EAAG,kBAAkBA,EAAG,sBAAsBA,EAAG,qBAAqBA,EAAG,mBAAmBA,EAAG,kBAAkBA,EAAG,qBAAqBA,EAAG,4BAA4BA,EAAG,qBAAqBA,EAAG,oBAAoBA,EAAG,2BAA2BA,EAAG,oBAAoBA,EAAG,sBAAsBA,EAAG,qBAAqBA,EAAG,SAAWA,EAAG,kBAAkBA,EAAG,eAAiBA,EAAG,qBAAqBA,EAAG,kBAAoBA,EAAG,kBAAkBA,EAAG,eAAiBA,EAAG,oBAAoBA,EAAG,2BAA2BA,EAAG,oBAAoBA,EAAG,iBAAmBA,EAAG,0BAA0BA,EAAG,iBAAmBA,EAAG,qBAAqBA,EAAG,kBAAoBA,EAAG,mBAAmBA,EAAG,0BAA0BA,EAAG,mBAAmBA,EAAG,gBAAkBA,EAAG,yBAAyBA,EAAG,gBAAkBA,EAAG,oBAAoBA,EAAG,iBAAmBA,EAAG,QAAUA,EAAG,IAAMA,EAAG,OAASA,EAAG,cAAcA,EAAG,aAAaA,EAAG,aAAaA,EAAG,UAAYA,EAAG,cAAcA,EAAG,gBAAgBA,EAAG,eAAeA,EAAG,WAAaA,EAAG,eAAeA,EAAG,YAAcA,EAAG,eAAeA,EAAG,sBAAsBA,EAAG,eAAeA,EAAG,iBAAiBA,EAAG,wBAAwBA,EAAG,iBAAiBA,EAAG,YAAcA,EAAG,qBAAqBA,EAAG,YAAcA,EAAG,aAAeA,EAAG,sBAAsBA,EAAG,aAAeA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,OAASA,EAAG,GAAKA,EAAG,UAAYA,EAAG,GAAKA,EAAG,YAAcA,EAAG,aAAaA,EAAG,UAAYA,EAAG,GAAKA,EAAG,OAASA,EAAG,wBAAwBA,EAAG,wBAAwBA,EAAG,oBAAsBA,EAAG,oBAAsBA,EAAG,GAAKA,EAAG,MAAQA,EAAG,MAAQA,EAAG,GAAKA,EAAG,GAAKA,EAAG,OAASA,EAAG,GAAKA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,aAAeA,EAAG,KAAOA,EAAG,GAAKA,EAAG,GAAKA,EAAG,SAAWA,EAAG,GAAKA,EAAG,kBAAkBA,EAAG,yBAAyBA,EAAG,kBAAkBA,EAAG,mBAAmBA,EAAG,OAASA,EAAG,KAAOA,EAAG,wBAAwBA,EAAG,oBAAsBA,EAAG,QAAUA,EAAG,UAAYA,EAAG,QAAUA,EAAG,GAAKA,EAAG,GAAKA,EAAG,OAASA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,QAAUA,EAAG,oBAAoBA,EAAG,QAAUA,EAAG,iBAAiBA,EAAG,wBAAwBA,EAAG,iBAAiBA,EAAG,kBAAkBA,EAAG,MAAQA,EAAG,GAAKA,EAAG,QAAUA,EAAG,SAAWA,EAAG,GAAKA,EAAG,GAAKA,EAAG,kBAAkBA,EAAG,yBAAyBA,EAAG,kBAAkBA,EAAG,mBAAmBA,EAAG,OAASA,EAAG,GAAKA,EAAG,GAAKA,EAAG,SAAWA,EAAG,cAAgBA,EAAG,kBAAkBA,EAAG,eAAiBA,EAAG,WAAaA,EAAG,oBAAoBA,EAAG,iBAAmBA,EAAG,gBAAgBA,EAAG,aAAeA,EAAG,QAAUA,EAAG,QAAUA,EAAG,UAAYA,EAAG,GAAKA,EAAG,GAAKA,EAAG,eAAeA,EAAG,sBAAsBA,EAAG,eAAeA,EAAG,YAAcA,EAAG,qBAAqBA,EAAG,YAAcA,EAAG,GAAKA,EAAG,OAASA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,KAAOA,EAAG,QAAUA,EAAG,GAAKA,EAAG,QAAUA,EAAG,QAAUA,EAAG,GAAKA,EAAG,GAAKA,EAAG,MAAQA,EAAG,GAAKA,EAAG,iBAAiBA,EAAG,cAAgBA,EAAG,GAAKA,EAAG,KAAOA,EAAG,GAAKA,EAAG,GAAKA,EAAG,MAAQA,EAAG,QAAUA,EAAG,GAAKA,EAAG,GAAKA,EAAG,QAAUA,EAAG,SAAWA,EAAG,GAAKA,EAAG,OAASA,EAAG,eAAeA,EAAG,sBAAsBA,EAAG,eAAeA,EAAG,YAAcA,EAAG,qBAAqBA,EAAG,YAAcA,EAAG,GAAKA,EAAG,UAAYA,EAAG,GAAKA,EAAG,MAAQA,EAAG,OAASA,EAAG,GAAKA,EAAG,QAAUA,EAAG,GAAKA,EAAG,SAAWA,EAAG,oBAAoBA,EAAG,iBAAmBA,EAAG,GAAKA,EAAG,QAAUA,EAAG,GAAKA,EAAG,QAAUA,EAAG,GAAKA,EAAG,YAAYA,EAAG,QAAUA,EAAG,SAAWA,EAAG,OAASA,EAAG,GAAKA,EAAG,GAAKA,EAAG,MAAQA,EAAG,MAAQA,EAAG,GAAKA,EAAG,QAAUA,EAAG,GAAKA,EAAG,KAAOA,EAAG,GAAKA,EAAG,GAAKA,EAAG,MAAQA,EAAG,SAAWA,EAAG,QAAUA,EAAG,gBAAgBA,EAAG,aAAeA,EAAG,OAASA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,kBAAkBA,EAAG,eAAiBA,EAAG,QAAUA,EAAG,GAAKA,EAAG,MAAQA,EAAG,OAASA,EAAG,GAAKA,EAAG,GAAKA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,wBAAwBA,EAAG,MAAQA,EAAG,aAAeA,EAAG,cAAgBA,EAAG,mBAAqBA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,OAASA,EAAG,OAASA,EAAG,GAAKA,EAAG,OAASA,EAAG,GAAKA,EAAG,MAAQA,EAAG,GAAKA,EAAG,UAAYA,EAAG,eAAeA,EAAG,YAAcA,EAAG,GAAKA,EAAG,SAAWA,EAAG,GAAKA,EAAG,GAAKA,EAAG,OAASA,EAAG,MAAQA,EAAG,QAAUA,EAAG,MAAQA,EAAG,MAAQA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,QAAUA,EAAG,gBAAgBA,EAAG,aAAeA,EAAG,QAAUA,EAAG,GAAKA,EAAG,GAAKA,EAAG,SAAWA,EAAG,KAAOA,EAAG,QAAUA,EAAG,GAAKA,EAAG,GAAKA,EAAG,UAAYA,EAAG,QAAUA,EAAG,GAAKA,EAAG,MAAQA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,OAASA,EAAG,QAAUA,EAAG,GAAKA,EAAG,GAAKA,EAAG,kBAAkBA,EAAG,gBAAgBA,EAAG,eAAiBA,EAAG,aAAeA,EAAG,GAAKA,EAAG,GAAKA,EAAG,MAAQA,EAAG,OAASA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,KAAOA,EAAG,KAAOA,EAAG,OAASA,EAAG,GAAKA,EAAG,QAAUA,EAAG,QAAUA,EAAG,OAASA,EAAG,GAAKA,EAAG,MAAQA,EAAG,SAAWA,EAAG,GAAKA,EAAG,QAAUA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,UAAYA,EAAG,kBAAkBA,EAAG,SAAWA,EAAG,GAAKA,EAAG,GAAKA,EAAG,QAAUA,EAAG,GAAKA,EAAG,eAAeA,EAAG,YAAcA,EAAG,OAASA,EAAG,MAAQA,EAAG,GAAKA,EAAG,GAAKA,EAAG,OAASA,EAAG,GAAKA,EAAG,GAAKA,EAAG,wBAAwBA,EAAG,wBAAwBA,EAAG,oBAAsBA,EAAG,oBAAsBA,EAAG,QAAUA,EAAG,OAASA,EAAG,QAAUA,EAAG,QAAUA,EAAG,GAAKA,EAAG,MAAQA,EAAG,GAAKA,EAAG,GAAKA,EAAG,MAAQA,EAAG,gBAAgBA,EAAG,aAAeA,EAAG,GAAKA,EAAG,OAASA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,QAAUA,EAAG,OAASA,EAAG,SAAWA,EAAG,SAAWA,EAAG,OAASA,EAAG,GAAKA,EAAG,gBAAgBA,EAAG,aAAeA,EAAG,QAAUA,EAAG,QAAUA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,SAAWkgF,EAAG,MAAQA,EAAG,WAAaA,EAAG,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,IAAK,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,SAAWM,MAAO,OAAON,EAAG,OAAOA,EAAG,OAAOA,EAAG,aAAeA,EAAG,SAAWA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKkgF,IAAK,GAAKK,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMvgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,IAAK,KAAOA,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,QAAU0hF,EAAI,OAASxB,IAAK,GAAKlgF,EAAG,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQA,EAAG,IAAMA,EAAG,KAAOA,EAAG,MAAQA,EAAG,OAASA,EAAG,MAAQA,EAAG,KAAOA,EAAG,SAAWA,EAAG,MAAQA,EAAG,KAAOA,EAAG,QAAUA,EAAG,WAAaA,EAAG,WAAaA,EAAG,QAAUA,EAAG,QAAUA,EAAG,QAAUA,EAAG,QAAUA,EAAG,MAAQA,EAAG,OAASA,EAAG,QAAUA,EAAG,KAAOA,EAAG,OAASA,EAAG,OAASA,EAAG,MAAQA,EAAG,KAAOA,EAAG,OAASA,EAAG,QAAUA,EAAG,OAASA,EAAG,QAAUA,EAAG,IAAMA,EAAG,OAASA,EAAG,MAAQA,EAAG,QAAUA,EAAG,WAAaA,EAAG,KAAOA,EAAG,SAAWA,EAAG,UAAYA,EAAG,QAAUA,EAAG,OAASA,EAAG,SAAWA,EAAG,UAAYA,EAAG,KAAOA,EAAG,KAAOA,EAAG,MAAQA,EAAG,SAAWA,EAAG,QAAUA,EAAG,UAAYA,EAAG,SAAWA,EAAG,OAASA,EAAG,OAASA,EAAG,SAAWA,EAAG,OAASA,IAAK,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQA,EAAG,OAASA,EAAG,SAAWA,EAAG,OAASA,EAAG,YAAcA,EAAG,OAASA,EAAG,cAAgBA,EAAG,MAAQA,EAAG,OAASA,EAAG,MAAQA,EAAG,UAAYA,EAAG,QAAUA,EAAG,SAAWA,EAAG,OAASA,EAAG,UAAYA,EAAG,OAASA,EAAG,MAAQA,EAAG,OAASA,EAAG,OAASA,EAAG,UAAYA,EAAG,OAASA,EAAG,QAAUA,EAAG,MAAQA,EAAG,IAAMA,EAAG,MAAQA,EAAG,QAAUA,EAAG,OAASA,EAAG,UAAYA,IAAK,OAAS,CAAC,EAAI,EAAE,KAAO,CAAC,OAASA,EAAG,OAASA,EAAG,UAAYA,EAAG,UAAYA,EAAG,QAAUA,EAAG,SAAWA,EAAG,UAAYA,EAAG,SAAWA,EAAG,OAASA,EAAG,MAAQA,EAAG,WAAaA,EAAG,OAASA,EAAG,OAASA,EAAG,MAAQA,EAAG,SAAWA,EAAG,QAAUA,EAAG,WAAaA,EAAG,OAASA,EAAG,MAAQA,EAAG,OAASA,EAAG,QAAUA,EAAG,QAAUA,IAAK,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQA,EAAG,MAAQA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,KAAOA,EAAG,UAAYA,EAAG,OAASA,EAAG,WAAaA,EAAG,SAAWA,EAAG,SAAWA,EAAG,WAAaA,EAAG,MAAQA,EAAG,MAAQA,EAAG,SAAWA,EAAG,SAAWA,EAAG,QAAUA,EAAG,OAASA,EAAG,SAAWA,EAAG,QAAUA,EAAG,SAAWA,EAAG,OAASA,EAAG,SAAWA,EAAG,OAASA,EAAG,QAAUA,EAAG,OAASA,EAAG,OAASA,EAAG,WAAaA,EAAG,OAASA,EAAG,UAAYA,EAAG,OAASA,EAAG,WAAaA,EAAG,UAAYA,EAAG,OAASA,EAAG,KAAOA,EAAG,cAAgBA,EAAG,QAAUA,EAAG,OAASA,EAAG,MAAQA,EAAG,MAAQA,EAAG,OAASA,EAAG,UAAYA,EAAG,QAAUA,EAAG,OAASA,EAAG,OAASA,EAAG,UAAYA,EAAG,KAAOA,EAAG,KAAOA,EAAG,SAAWA,EAAG,OAASA,EAAG,SAAWA,EAAG,SAAWA,EAAG,QAAUA,EAAG,UAAYA,EAAG,QAAUA,EAAG,WAAaA,EAAG,gBAAkBA,EAAG,WAAaA,IAAK,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQA,EAAG,MAAQA,EAAG,MAAQA,EAAG,QAAUA,EAAG,IAAMA,EAAG,SAAWA,EAAG,OAASA,EAAG,UAAYA,EAAG,OAASA,EAAG,QAAUA,EAAG,UAAYA,EAAG,SAAWA,EAAG,QAAUA,EAAG,IAAMA,EAAG,MAAQA,EAAG,MAAQA,EAAG,YAAcA,EAAG,KAAOA,EAAG,KAAOA,EAAG,OAASA,EAAG,QAAUA,EAAG,WAAaA,IAAK,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUA,EAAG,QAAUA,EAAG,MAAQA,EAAG,MAAQA,EAAG,UAAYA,EAAG,OAASA,EAAG,cAAgBA,EAAG,MAAQA,EAAG,IAAMA,EAAG,IAAMA,EAAG,MAAQA,EAAG,MAAQA,EAAG,SAAWA,EAAG,QAAUA,EAAG,OAASA,IAAK,QAAU,CAAC,EAAI,EAAE,KAAO,CAAC,OAASA,EAAG,MAAQA,EAAG,QAAUA,EAAG,QAAUA,EAAG,QAAUA,EAAG,WAAaA,EAAG,SAAWA,EAAG,KAAOA,EAAG,QAAUA,EAAG,QAAUA,EAAG,OAASA,EAAG,QAAUA,EAAG,SAAWA,EAAG,SAAWA,EAAG,OAASA,EAAG,SAAWA,EAAG,KAAOA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,KAAOA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,SAAWA,EAAG,SAAWA,EAAG,SAAWA,EAAG,SAAWA,EAAG,OAASA,EAAG,MAAQA,EAAG,OAASA,EAAG,MAAQA,EAAG,QAAUA,EAAG,MAAQA,EAAG,IAAMA,EAAG,MAAQA,EAAG,KAAOA,EAAG,MAAQA,EAAG,IAAMA,EAAG,QAAUA,EAAG,SAAWA,EAAG,OAASA,EAAG,cAAgBA,EAAG,OAASA,EAAG,MAAQA,EAAG,IAAMA,EAAG,UAAYA,EAAG,OAASA,EAAG,OAASA,EAAG,KAAOA,EAAG,QAAUA,EAAG,OAASA,EAAG,MAAQA,EAAG,IAAMA,EAAG,KAAOA,EAAG,OAASA,EAAG,KAAOA,EAAG,SAAWA,EAAG,UAAYA,IAAK,UAAY,CAAC,EAAI,EAAE,KAAO,CAAC,UAAYA,EAAG,WAAaA,EAAG,cAAgBA,EAAG,QAAUA,EAAG,OAASA,EAAG,KAAOA,EAAG,UAAYA,EAAG,SAAWA,EAAG,OAASA,EAAG,OAASA,EAAG,QAAUA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,WAAaA,EAAG,SAAWA,EAAG,MAAQA,EAAG,UAAYA,EAAG,WAAaA,EAAG,SAAWA,EAAG,SAAWA,EAAG,SAAWA,EAAG,aAAeA,EAAG,MAAQA,EAAG,SAAWA,EAAG,OAASA,EAAG,OAASA,EAAG,QAAUA,EAAG,MAAQA,EAAG,MAAQA,EAAG,UAAYA,EAAG,QAAUA,EAAG,MAAQA,EAAG,QAAUA,EAAG,IAAMA,EAAG,MAAQA,EAAG,SAAWA,EAAG,QAAUA,EAAG,UAAYA,EAAG,MAAQA,EAAG,KAAOA,EAAG,SAAWA,EAAG,QAAUA,EAAG,SAAWA,EAAG,SAAWA,EAAG,MAAQA,EAAG,OAASA,EAAG,OAASA,EAAG,UAAYA,EAAG,QAAUA,EAAG,OAASA,IAAK,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUA,EAAG,IAAMA,EAAG,KAAOA,EAAG,MAAQA,EAAG,KAAOA,EAAG,KAAOA,EAAG,QAAUA,EAAG,QAAUA,EAAG,KAAOA,EAAG,iBAAmBA,EAAG,QAAUA,EAAG,MAAQA,EAAG,aAAeA,EAAG,KAAOA,EAAG,SAAWA,EAAG,UAAYA,EAAG,OAASA,EAAG,SAAWA,EAAG,KAAOA,EAAG,SAAWA,EAAG,OAASA,EAAG,SAAWA,EAAG,OAASA,EAAG,YAAcA,EAAG,MAAQA,EAAG,SAAWA,EAAG,KAAOA,EAAG,WAAaA,EAAG,UAAYA,EAAG,OAASA,EAAG,SAAWA,EAAG,MAAQA,EAAG,KAAOA,EAAG,OAASA,EAAG,SAAWA,EAAG,SAAWA,EAAG,OAASA,EAAG,KAAOA,IAAK,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,OAASA,EAAG,QAAUA,EAAG,QAAUA,EAAG,gBAAkBA,EAAG,QAAUA,EAAG,QAAUA,EAAG,MAAQA,EAAG,MAAQA,EAAG,UAAYA,EAAG,OAASA,EAAG,MAAQA,EAAG,QAAUA,EAAG,SAAWA,EAAG,MAAQA,EAAG,OAASA,EAAG,SAAWA,EAAG,WAAaA,EAAG,SAAWA,EAAG,QAAUA,EAAG,OAASA,EAAG,OAASA,EAAG,IAAMA,EAAG,IAAMA,EAAG,UAAYA,EAAG,UAAYA,EAAG,OAASA,EAAG,MAAQA,EAAG,SAAWA,EAAG,SAAWA,EAAG,SAAWA,EAAG,YAAcA,EAAG,QAAUA,EAAG,UAAYA,EAAG,SAAWA,EAAG,KAAOA,EAAG,SAAWA,IAAK,UAAY,CAAC,EAAI,EAAE,KAAO,CAAC,UAAYA,EAAG,MAAQA,EAAG,QAAUA,EAAG,MAAQA,EAAG,SAAWA,EAAG,YAAcA,EAAG,iBAAmBA,EAAG,MAAQA,EAAG,aAAeA,EAAG,MAAQA,EAAG,IAAMA,EAAG,OAASA,EAAG,KAAOA,EAAG,OAASA,EAAG,QAAUA,EAAG,KAAOA,EAAG,SAAWA,EAAG,cAAgBA,EAAG,MAAQA,EAAG,KAAOA,EAAG,KAAOA,EAAG,UAAYA,EAAG,SAAWA,EAAG,QAAUA,EAAG,SAAWA,IAAK,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,SAAWA,EAAG,MAAQA,EAAG,QAAUA,EAAG,QAAUA,EAAG,QAAUA,EAAG,UAAYA,EAAG,UAAYA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,MAAQA,EAAG,KAAOA,EAAG,OAASA,EAAG,OAASA,EAAG,SAAWA,EAAG,YAAcA,EAAG,QAAUA,EAAG,KAAOA,EAAG,OAASA,EAAG,QAAUA,EAAG,MAAQA,EAAG,MAAQA,EAAG,KAAOA,EAAG,OAASA,EAAG,SAAWA,EAAG,UAAYA,EAAG,OAASA,EAAG,SAAWA,EAAG,OAASA,EAAG,SAAWA,EAAG,aAAeA,EAAG,OAASA,EAAG,cAAgBA,EAAG,YAAcA,EAAG,MAAQA,EAAG,QAAUA,EAAG,OAASA,EAAG,SAAWA,EAAG,UAAYA,EAAG,SAAWA,EAAG,MAAQA,EAAG,QAAUA,EAAG,SAAWA,EAAG,UAAYA,EAAG,OAASA,EAAG,WAAaA,EAAG,SAAWA,EAAG,YAAcA,EAAG,aAAeA,EAAG,SAAWA,EAAG,OAASA,EAAG,SAAWA,EAAG,QAAUA,EAAG,UAAYA,EAAG,cAAgBA,EAAG,OAASA,EAAG,SAAWA,EAAG,UAAYA,EAAG,SAAWA,EAAG,SAAWA,EAAG,aAAeA,EAAG,QAAUA,EAAG,QAAUA,EAAG,MAAQA,EAAG,QAAUA,EAAG,SAAWA,EAAG,OAASA,EAAG,aAAeA,EAAG,SAAWA,EAAG,SAAWA,EAAG,OAASA,EAAG,QAAUA,EAAG,KAAOA,EAAG,SAAWA,EAAG,aAAeA,EAAG,aAAeA,EAAG,MAAQA,EAAG,QAAUA,EAAG,OAASA,EAAG,OAASA,EAAG,SAAWA,EAAG,KAAOA,EAAG,YAAcA,EAAG,YAAcA,EAAG,OAASA,EAAG,QAAUA,EAAG,MAAQA,EAAG,MAAQA,EAAG,OAASA,EAAG,MAAQA,EAAG,MAAQA,EAAG,QAAUA,EAAG,UAAYA,EAAG,KAAOA,EAAG,MAAQA,EAAG,MAAQA,EAAG,SAAWA,EAAG,MAAQA,EAAG,UAAYA,EAAG,QAAUA,EAAG,YAAcA,EAAG,OAASA,EAAG,UAAYA,EAAG,SAAWA,EAAG,MAAQA,EAAG,SAAWA,EAAG,SAAWA,EAAG,QAAUA,EAAG,QAAUA,EAAG,UAAYA,EAAG,QAAUA,EAAG,UAAYA,EAAG,aAAeA,EAAG,SAAWA,EAAG,UAAYA,EAAG,QAAUA,EAAG,UAAYA,EAAG,QAAUA,EAAG,SAAWA,EAAG,MAAQA,EAAG,OAASA,EAAG,SAAWA,EAAG,SAAWA,EAAG,UAAYA,EAAG,QAAUA,EAAG,MAAQA,EAAG,UAAYA,EAAG,OAASA,EAAG,KAAOA,EAAG,OAASA,EAAG,SAAWA,EAAG,QAAUA,EAAG,SAAWA,EAAG,UAAYA,EAAG,QAAUA,EAAG,OAASA,EAAG,KAAOA,EAAG,UAAYA,EAAG,SAAWA,EAAG,QAAUA,EAAG,OAASA,EAAG,OAASA,IAAK,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOA,EAAG,OAASA,EAAG,IAAMA,EAAG,UAAYA,EAAG,OAASA,EAAG,MAAQA,EAAG,OAASA,EAAG,MAAQA,EAAG,SAAWA,EAAG,QAAUA,EAAG,OAASA,EAAG,OAASA,EAAG,SAAWA,EAAG,QAAUA,EAAG,MAAQA,EAAG,SAAWA,EAAG,SAAWA,EAAG,SAAWA,EAAG,MAAQA,EAAG,OAASA,EAAG,UAAYA,EAAG,KAAOA,EAAG,YAAcA,EAAG,YAAcA,EAAG,UAAYA,EAAG,IAAMA,EAAG,MAAQA,EAAG,OAASA,EAAG,SAAWA,EAAG,KAAOA,EAAG,OAASA,EAAG,UAAYA,EAAG,MAAQA,EAAG,OAASA,EAAG,OAASA,EAAG,KAAOA,EAAG,WAAaA,EAAG,SAAWA,EAAG,OAASA,EAAG,MAAQA,EAAG,QAAUA,EAAG,QAAUA,EAAG,KAAOA,EAAG,QAAUA,EAAG,KAAOA,EAAG,OAASA,IAAK,QAAU,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,MAAQA,EAAG,MAAQA,EAAG,SAAWA,EAAG,MAAQA,EAAG,UAAYA,EAAG,QAAUA,EAAG,YAAcA,EAAG,aAAeA,EAAG,WAAaA,EAAG,QAAUA,EAAG,IAAMA,EAAG,SAAWA,EAAG,MAAQA,EAAG,MAAQA,EAAG,KAAOA,EAAG,OAASA,EAAG,OAASA,EAAG,QAAUA,EAAG,YAAcA,EAAG,KAAOA,EAAG,KAAOA,EAAG,KAAOA,EAAG,OAASA,EAAG,KAAOA,EAAG,SAAWA,EAAG,MAAQA,EAAG,MAAQA,EAAG,QAAUA,EAAG,UAAYA,EAAG,MAAQA,EAAG,WAAaA,EAAG,UAAYA,EAAG,WAAaA,EAAG,UAAYA,EAAG,KAAOA,EAAG,MAAQA,EAAG,SAAWA,EAAG,YAAcA,EAAG,MAAQA,EAAG,OAASA,EAAG,KAAOA,EAAG,OAASA,EAAG,UAAYA,EAAG,QAAUA,EAAG,SAAWA,EAAG,OAASA,EAAG,QAAUA,EAAG,SAAWA,EAAG,OAASA,EAAG,KAAOA,IAAK,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUA,EAAG,MAAQA,EAAG,QAAUA,EAAG,KAAOA,EAAG,OAASA,EAAG,SAAWA,EAAG,SAAWA,EAAG,QAAUA,EAAG,SAAWA,EAAG,MAAQA,EAAG,KAAOA,EAAG,SAAWA,EAAG,KAAOA,EAAG,MAAQA,EAAG,KAAOA,EAAG,QAAUA,EAAG,QAAUA,EAAG,SAAWA,EAAG,OAASA,IAAK,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQA,EAAG,SAAWA,EAAG,SAAWA,EAAG,UAAYA,EAAG,OAASA,EAAG,SAAWA,EAAG,WAAaA,EAAG,SAAWA,EAAG,MAAQA,EAAG,OAASA,EAAG,SAAWA,EAAG,WAAaA,EAAG,QAAUA,EAAG,MAAQA,EAAG,SAAWA,EAAG,KAAOA,EAAG,OAASA,EAAG,SAAWA,EAAG,OAASA,EAAG,SAAWA,EAAG,QAAUA,EAAG,OAASA,EAAG,KAAOA,EAAG,QAAUA,EAAG,KAAOA,EAAG,QAAUA,EAAG,cAAgBA,EAAG,MAAQA,EAAG,YAAcA,EAAG,OAASA,EAAG,SAAWA,EAAG,KAAOA,EAAG,OAASA,EAAG,OAASA,IAAK,OAAS,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUA,EAAG,cAAgBA,EAAG,QAAUA,EAAG,SAAWA,EAAG,MAAQA,EAAG,SAAWA,EAAG,OAASA,EAAG,SAAWA,EAAG,OAASA,EAAG,QAAUA,EAAG,UAAYA,EAAG,QAAUA,EAAG,SAAWA,EAAG,MAAQA,EAAG,SAAWA,IAAK,UAAY,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQA,EAAG,MAAQA,EAAG,MAAQA,EAAG,IAAMA,EAAG,KAAOA,EAAG,MAAQA,EAAG,UAAYA,EAAG,OAASA,EAAG,SAAWA,EAAG,MAAQA,EAAG,QAAUA,EAAG,WAAaA,EAAG,UAAYA,EAAG,WAAaA,EAAG,SAAWA,EAAG,aAAeA,EAAG,cAAgBA,EAAG,IAAMA,EAAG,SAAWA,EAAG,MAAQA,IAAK,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,OAASA,EAAG,OAASA,EAAG,MAAQA,EAAG,UAAYA,EAAG,MAAQA,EAAG,SAAWA,EAAG,OAASA,EAAG,OAASA,EAAG,UAAYA,EAAG,QAAUA,EAAG,OAASA,EAAG,SAAWA,EAAG,SAAWA,EAAG,QAAUA,EAAG,eAAiBA,EAAG,MAAQA,EAAG,MAAQA,EAAG,SAAWA,EAAG,QAAUA,EAAG,GAAKA,EAAG,KAAOA,EAAG,WAAaA,EAAG,SAAWA,EAAG,OAASA,EAAG,SAAWA,EAAG,OAASA,EAAG,SAAWA,EAAG,SAAWA,EAAG,KAAOA,EAAG,MAAQA,IAAK,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,OAASA,EAAG,OAASA,EAAG,aAAeA,EAAG,IAAMA,EAAG,OAASA,EAAG,KAAOA,EAAG,SAAWA,EAAG,MAAQA,EAAG,OAASA,EAAG,SAAWA,EAAG,OAASA,EAAG,OAASA,EAAG,SAAWA,EAAG,QAAUA,EAAG,UAAYA,EAAG,WAAaA,EAAG,KAAOA,EAAG,MAAQA,EAAG,MAAQA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,KAAOA,EAAG,YAAcA,EAAG,KAAOA,EAAG,MAAQA,EAAG,MAAQA,EAAG,OAASA,EAAG,SAAWA,IAAK,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUA,EAAG,KAAOA,EAAG,IAAMA,EAAG,MAAQA,EAAG,QAAUA,EAAG,YAAcA,EAAG,QAAUA,EAAG,SAAWA,EAAG,QAAUA,EAAG,OAASA,EAAG,SAAWA,EAAG,YAAcA,EAAG,OAASA,EAAG,UAAYA,EAAG,MAAQA,EAAG,IAAMA,EAAG,OAASA,EAAG,SAAWA,EAAG,IAAMA,EAAG,IAAMA,EAAG,OAASA,EAAG,OAASA,EAAG,WAAaA,IAAK,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQA,EAAG,YAAcA,EAAG,YAAcA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,QAAUA,EAAG,KAAOA,EAAG,KAAOA,EAAG,KAAOA,EAAG,SAAWA,EAAG,SAAWA,EAAG,UAAYA,EAAG,SAAWA,EAAG,QAAUA,EAAG,OAASA,EAAG,gBAAkBA,EAAG,OAASA,EAAG,KAAOA,EAAG,WAAaA,EAAG,QAAUA,EAAG,OAASA,EAAG,UAAYA,EAAG,MAAQA,EAAG,MAAQA,EAAG,OAASA,EAAG,IAAMA,EAAG,UAAYA,EAAG,OAASA,EAAG,UAAYA,EAAG,OAASA,IAAK,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQA,EAAG,MAAQA,EAAG,IAAMA,EAAG,SAAWA,EAAG,QAAUA,EAAG,KAAOA,EAAG,SAAWA,EAAG,KAAOA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,UAAYA,EAAG,MAAQA,EAAG,OAASA,EAAG,UAAYA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,MAAQA,EAAG,OAASA,EAAG,KAAOA,EAAG,MAAQA,EAAG,KAAOA,EAAG,OAASA,EAAG,KAAOA,EAAG,IAAMA,EAAG,MAAQA,EAAG,SAAWA,EAAG,QAAUA,EAAG,UAAYA,IAAK,OAAS,CAAC,EAAI,EAAE,KAAO,CAAC,SAAWA,EAAG,kBAAoBA,EAAG,WAAaA,EAAG,QAAUA,EAAG,OAASA,EAAG,KAAOA,EAAG,SAAWA,EAAG,SAAWA,EAAG,WAAaA,EAAG,cAAgBA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,QAAUA,EAAG,MAAQA,EAAG,QAAUA,EAAG,MAAQA,EAAG,KAAOA,EAAG,OAASA,EAAG,QAAUA,EAAG,cAAgBA,EAAG,QAAUA,EAAG,SAAWA,EAAG,UAAYA,EAAG,OAASA,EAAG,MAAQA,EAAG,KAAOA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,SAAWA,EAAG,IAAMA,IAAK,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,MAAQA,EAAG,OAASA,EAAG,MAAQA,EAAG,SAAWA,EAAG,WAAaA,EAAG,KAAOA,EAAG,SAAWA,EAAG,SAAWA,EAAG,QAAUA,EAAG,UAAYA,EAAG,SAAWA,EAAG,QAAUA,EAAG,OAASA,EAAG,WAAaA,EAAG,SAAWA,EAAG,UAAYA,EAAG,SAAWA,EAAG,UAAYA,EAAG,QAAUA,EAAG,MAAQA,EAAG,OAASA,EAAG,SAAWA,EAAG,SAAWA,EAAG,SAAWA,EAAG,SAAWA,EAAG,MAAQA,IAAK,OAAS,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOA,EAAG,SAAWA,EAAG,KAAOA,EAAG,KAAOA,EAAG,MAAQA,EAAG,QAAUA,EAAG,UAAYA,EAAG,QAAUA,EAAG,MAAQA,EAAG,OAASA,EAAG,OAASA,EAAG,KAAOA,EAAG,OAASA,EAAG,KAAOA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,MAAQA,EAAG,QAAUA,EAAG,IAAMA,EAAG,UAAYA,EAAG,SAAWA,EAAG,KAAOA,EAAG,cAAgBA,EAAG,SAAWA,EAAG,SAAWA,EAAG,OAASA,EAAG,UAAYA,EAAG,UAAYA,EAAG,MAAQA,EAAG,WAAaA,EAAG,WAAaA,EAAG,aAAeA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,UAAYA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,SAAWA,EAAG,OAASA,EAAG,YAAcA,EAAG,MAAQA,EAAG,MAAQA,EAAG,MAAQA,EAAG,OAASA,EAAG,IAAMA,EAAG,OAASA,EAAG,QAAUA,EAAG,MAAQA,EAAG,MAAQA,EAAG,MAAQA,EAAG,OAASA,EAAG,KAAOA,EAAG,OAASA,EAAG,UAAYA,EAAG,aAAeA,EAAG,SAAWA,EAAG,KAAOA,EAAG,OAASA,EAAG,OAASA,EAAG,SAAWA,EAAG,SAAWA,EAAG,UAAYA,EAAG,QAAUA,EAAG,UAAYA,EAAG,OAASA,EAAG,KAAOA,EAAG,KAAOA,EAAG,KAAOA,EAAG,SAAWA,EAAG,WAAaA,EAAG,OAASA,EAAG,QAAUA,IAAK,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUA,EAAG,MAAQA,EAAG,KAAOA,EAAG,OAASA,EAAG,OAASA,EAAG,IAAMA,EAAG,QAAUA,EAAG,SAAWA,EAAG,WAAaA,EAAG,SAAWA,EAAG,SAAWA,EAAG,MAAQA,EAAG,MAAQA,EAAG,MAAQA,EAAG,OAASA,EAAG,OAASA,EAAG,MAAQA,EAAG,UAAYA,EAAG,aAAeA,EAAG,QAAUA,EAAG,SAAWA,EAAG,MAAQA,IAAK,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOA,EAAG,KAAOA,EAAG,OAASA,EAAG,eAAiBA,EAAG,QAAUA,EAAG,MAAQA,EAAG,aAAeA,EAAG,QAAUA,EAAG,QAAUA,EAAG,UAAYA,EAAG,UAAYA,EAAG,MAAQA,EAAG,SAAWA,EAAG,UAAYA,EAAG,MAAQA,EAAG,SAAWA,EAAG,OAASA,EAAG,OAASA,EAAG,KAAOA,EAAG,SAAWA,EAAG,IAAMA,EAAG,KAAOA,EAAG,MAAQA,EAAG,QAAUA,EAAG,MAAQA,EAAG,UAAYA,EAAG,cAAgBA,EAAG,OAASA,EAAG,KAAOA,EAAG,SAAWA,EAAG,WAAaA,EAAG,QAAUA,EAAG,MAAQA,EAAG,IAAMA,EAAG,eAAiBA,EAAG,aAAeA,EAAG,QAAUA,EAAG,QAAUA,IAAK,QAAU,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,MAAQA,EAAG,MAAQA,EAAG,SAAWA,EAAG,UAAYA,EAAG,OAASA,EAAG,KAAOA,EAAG,OAASA,EAAG,YAAcA,EAAG,aAAeA,EAAG,QAAUA,EAAG,MAAQA,EAAG,SAAWA,EAAG,MAAQA,EAAG,QAAUA,EAAG,QAAUA,EAAG,MAAQA,EAAG,IAAMA,EAAG,KAAOA,EAAG,MAAQA,EAAG,MAAQA,EAAG,OAASA,EAAG,SAAWA,EAAG,QAAUA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,UAAYA,EAAG,QAAUA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,MAAQA,EAAG,OAASA,IAAK,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQA,EAAG,SAAWA,EAAG,YAAcA,EAAG,OAASA,EAAG,KAAOA,EAAG,UAAYA,EAAG,KAAOA,EAAG,SAAWA,EAAG,QAAUA,EAAG,KAAOA,EAAG,SAAWA,EAAG,KAAOA,EAAG,KAAOA,EAAG,MAAQA,EAAG,OAASA,EAAG,QAAUA,EAAG,IAAMA,EAAG,MAAQA,EAAG,KAAOA,IAAK,QAAU,CAAC,EAAI,EAAE,KAAO,CAAC,OAASA,EAAG,SAAWA,EAAG,MAAQA,EAAG,UAAYA,EAAG,MAAQA,EAAG,SAAWA,EAAG,QAAUA,EAAG,SAAWA,EAAG,QAAUA,EAAG,UAAYA,EAAG,OAASA,EAAG,OAASA,EAAG,KAAOA,EAAG,MAAQA,EAAG,aAAeA,EAAG,QAAUA,EAAG,QAAUA,EAAG,SAAWA,EAAG,OAASA,EAAG,KAAOA,EAAG,KAAOA,EAAG,UAAYA,EAAG,OAASA,EAAG,QAAUA,EAAG,KAAOA,EAAG,OAASA,IAAK,QAAU,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQA,EAAG,QAAUA,EAAG,OAASA,EAAG,UAAYA,EAAG,QAAUA,EAAG,QAAUA,EAAG,OAASA,EAAG,MAAQA,EAAG,SAAWA,EAAG,SAAWA,EAAG,OAASA,EAAG,MAAQA,EAAG,OAASA,EAAG,IAAMA,EAAG,UAAYA,EAAG,eAAiBA,EAAG,SAAWA,EAAG,SAAWA,EAAG,YAAcA,EAAG,OAASA,EAAG,KAAOA,EAAG,KAAOA,EAAG,WAAaA,EAAG,QAAUA,EAAG,MAAQA,EAAG,UAAYA,EAAG,MAAQA,EAAG,QAAUA,EAAG,KAAOA,EAAG,QAAUA,EAAG,SAAWA,EAAG,OAASA,EAAG,UAAYA,EAAG,WAAaA,EAAG,OAASA,EAAG,OAASA,EAAG,MAAQA,EAAG,MAAQA,EAAG,QAAUA,EAAG,SAAWA,EAAG,SAAWA,EAAG,OAASA,IAAK,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQA,EAAG,eAAiBA,EAAG,KAAOA,EAAG,MAAQA,EAAG,UAAYA,EAAG,SAAWA,EAAG,OAASA,EAAG,aAAeA,EAAG,iBAAmBA,EAAG,gBAAkBA,EAAG,SAAWA,EAAG,QAAUA,EAAG,MAAQA,EAAG,MAAQA,EAAG,UAAYA,EAAG,UAAYA,EAAG,OAASA,EAAG,QAAUA,EAAG,MAAQA,EAAG,UAAYA,EAAG,OAASA,EAAG,cAAgBA,EAAG,UAAYA,EAAG,KAAOA,EAAG,SAAWA,EAAG,UAAYA,EAAG,OAASA,EAAG,MAAQA,EAAG,OAASA,EAAG,UAAYA,EAAG,SAAWA,EAAG,MAAQA,EAAG,KAAOA,EAAG,YAAcA,EAAG,MAAQA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,YAAcA,EAAG,UAAYA,EAAG,MAAQA,EAAG,QAAUA,EAAG,OAASA,EAAG,OAASA,EAAG,SAAWA,EAAG,UAAYA,EAAG,aAAeA,EAAG,SAAWA,EAAG,OAASA,EAAG,IAAMA,IAAK,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,OAASA,EAAG,MAAQA,EAAG,SAAWA,EAAG,OAASA,EAAG,SAAWA,EAAG,MAAQA,EAAG,MAAQA,EAAG,SAAWA,EAAG,QAAUA,EAAG,QAAUA,EAAG,QAAUA,EAAG,SAAWA,EAAG,SAAWA,EAAG,OAASA,EAAG,QAAUA,EAAG,QAAUA,EAAG,WAAaA,EAAG,IAAMA,EAAG,OAASA,EAAG,MAAQA,EAAG,KAAOA,EAAG,UAAYA,EAAG,KAAOA,EAAG,KAAOA,EAAG,KAAOA,EAAG,YAAcA,IAAK,QAAU,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUA,EAAG,MAAQA,EAAG,SAAWA,EAAG,OAASA,EAAG,SAAWA,EAAG,OAASA,EAAG,MAAQA,EAAG,MAAQA,EAAG,OAASA,EAAG,SAAWA,EAAG,SAAWA,EAAG,OAASA,EAAG,gBAAkBA,EAAG,iBAAmBA,EAAG,MAAQA,EAAG,IAAMA,EAAG,MAAQA,EAAG,SAAWA,EAAG,UAAYA,EAAG,SAAWA,EAAG,SAAWA,EAAG,SAAWA,EAAG,QAAUA,EAAG,UAAYA,EAAG,SAAWA,EAAG,KAAOA,EAAG,SAAWA,EAAG,UAAYA,EAAG,QAAUA,EAAG,KAAOA,EAAG,SAAWA,EAAG,WAAaA,EAAG,OAASA,EAAG,OAASA,EAAG,UAAYA,EAAG,QAAUA,EAAG,SAAWA,EAAG,SAAWA,EAAG,SAAWA,EAAG,MAAQA,EAAG,MAAQA,EAAG,MAAQA,EAAG,MAAQA,EAAG,QAAUA,EAAG,MAAQA,EAAG,MAAQA,EAAG,OAASA,EAAG,QAAUA,EAAG,QAAUA,EAAG,OAASA,EAAG,MAAQA,EAAG,OAASA,EAAG,MAAQA,EAAG,SAAWA,EAAG,KAAOA,EAAG,OAASA,EAAG,KAAOA,EAAG,SAAWA,EAAG,WAAaA,EAAG,aAAeA,EAAG,MAAQA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,KAAOA,EAAG,MAAQA,EAAG,QAAUA,EAAG,UAAYA,EAAG,QAAUA,IAAK,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQA,EAAG,KAAOA,EAAG,WAAaA,EAAG,OAASA,EAAG,KAAOA,EAAG,MAAQA,EAAG,MAAQA,EAAG,KAAOA,EAAG,QAAUA,EAAG,QAAUA,EAAG,SAAWA,EAAG,SAAWA,EAAG,UAAYA,EAAG,SAAWA,EAAG,YAAcA,EAAG,KAAOA,EAAG,MAAQA,EAAG,MAAQA,EAAG,UAAYA,EAAG,UAAYA,EAAG,SAAWA,EAAG,SAAWA,EAAG,KAAOA,IAAK,QAAU,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQA,EAAG,IAAMA,EAAG,MAAQA,EAAG,OAASA,EAAG,aAAeA,EAAG,OAASA,EAAG,OAASA,EAAG,MAAQA,EAAG,SAAWA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,aAAeA,EAAG,KAAOA,EAAG,WAAaA,EAAG,SAAWA,EAAG,QAAUA,EAAG,OAASA,EAAG,QAAUA,EAAG,MAAQA,EAAG,OAASA,EAAG,OAASA,EAAG,QAAUA,IAAK,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOA,EAAG,MAAQA,EAAG,KAAOA,EAAG,QAAUA,EAAG,SAAWA,EAAG,WAAaA,EAAG,QAAUA,EAAG,QAAUA,EAAG,QAAUA,EAAG,UAAYA,EAAG,WAAaA,EAAG,IAAMA,EAAG,MAAQA,EAAG,IAAMA,EAAG,UAAYA,EAAG,SAAWA,EAAG,QAAUA,EAAG,UAAYA,EAAG,OAASA,EAAG,SAAWA,EAAG,MAAQA,EAAG,WAAaA,EAAG,UAAYA,EAAG,UAAYA,EAAG,QAAUA,EAAG,UAAYA,EAAG,SAAWA,EAAG,OAASA,EAAG,SAAWA,EAAG,QAAUA,EAAG,QAAUA,EAAG,QAAUA,EAAG,SAAWA,EAAG,OAASA,EAAG,MAAQA,EAAG,QAAUA,IAAK,QAAU,CAAC,EAAI,EAAE,KAAO,CAAC,SAAWA,EAAG,KAAOA,EAAG,KAAOA,EAAG,QAAUA,EAAG,QAAUA,EAAG,WAAaA,EAAG,OAASA,EAAG,WAAaA,EAAG,QAAUA,EAAG,QAAUA,EAAG,KAAOA,EAAG,KAAOA,EAAG,OAASA,EAAG,KAAOA,EAAG,aAAeA,EAAG,MAAQA,EAAG,UAAYA,EAAG,KAAOA,EAAG,MAAQA,EAAG,SAAWA,EAAG,MAAQA,EAAG,OAASA,EAAG,KAAOA,EAAG,WAAaA,EAAG,OAASA,EAAG,WAAaA,EAAG,QAAUA,EAAG,MAAQA,EAAG,MAAQA,EAAG,WAAaA,EAAG,MAAQA,IAAK,UAAY,CAAC,EAAI,EAAE,KAAO,CAAC,OAASA,EAAG,KAAOA,EAAG,OAASA,EAAG,MAAQA,EAAG,OAASA,EAAG,aAAeA,EAAG,WAAaA,EAAG,KAAOA,EAAG,OAASA,EAAG,QAAUA,EAAG,KAAOA,EAAG,SAAWA,EAAG,OAASA,EAAG,UAAYA,EAAG,UAAYA,EAAG,UAAYA,EAAG,OAASA,IAAK,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,OAASA,EAAG,QAAUA,EAAG,SAAWA,EAAG,UAAYA,EAAG,QAAUA,EAAG,OAASA,EAAG,QAAUA,EAAG,MAAQA,EAAG,KAAOA,EAAG,QAAUA,EAAG,MAAQA,EAAG,MAAQA,EAAG,QAAUA,EAAG,SAAWA,EAAG,OAASA,EAAG,cAAgBA,EAAG,gBAAkBA,EAAG,cAAgBA,EAAG,KAAOA,EAAG,OAASA,EAAG,SAAWA,EAAG,MAAQA,EAAG,SAAWA,EAAG,WAAaA,EAAG,KAAOA,EAAG,OAASA,EAAG,QAAUA,EAAG,QAAUA,EAAG,UAAYA,EAAG,MAAQA,EAAG,KAAOA,EAAG,WAAaA,EAAG,UAAYA,EAAG,QAAUA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,gBAAkBA,EAAG,UAAYA,EAAG,OAASA,EAAG,OAASA,EAAG,UAAYA,EAAG,QAAUA,EAAG,IAAMA,EAAG,OAASA,EAAG,IAAMA,EAAG,SAAWA,EAAG,QAAUA,EAAG,UAAYA,EAAG,SAAWA,EAAG,SAAWA,EAAG,OAASA,EAAG,UAAYA,EAAG,MAAQA,EAAG,KAAOA,EAAG,QAAUA,IAAK,QAAU,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQA,EAAG,KAAOA,EAAG,SAAWA,EAAG,KAAOA,EAAG,QAAUA,EAAG,OAASA,EAAG,MAAQA,EAAG,SAAWA,EAAG,YAAcA,EAAG,QAAUA,EAAG,OAASA,EAAG,KAAOA,EAAG,OAASA,IAAK,OAAS,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQA,EAAG,MAAQA,EAAG,UAAYA,EAAG,UAAYA,EAAG,KAAOA,EAAG,MAAQA,EAAG,MAAQA,EAAG,OAASA,EAAG,SAAWA,EAAG,OAASA,EAAG,YAAcA,EAAG,WAAaA,EAAG,MAAQA,EAAG,OAASA,EAAG,MAAQA,EAAG,MAAQA,EAAG,QAAUA,EAAG,SAAWA,EAAG,KAAOA,EAAG,OAASA,EAAG,OAASA,EAAG,QAAUA,EAAG,KAAOA,EAAG,OAASA,IAAK,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQA,EAAG,UAAYA,EAAG,KAAOA,EAAG,UAAYA,EAAG,OAASA,EAAG,SAAWA,EAAG,MAAQA,EAAG,MAAQA,EAAG,OAASA,EAAG,UAAYA,EAAG,UAAYA,EAAG,OAASA,EAAG,SAAWA,EAAG,SAAWA,EAAG,KAAOA,EAAG,KAAOA,EAAG,SAAWA,EAAG,SAAWA,EAAG,UAAYA,EAAG,OAASA,EAAG,OAASA,EAAG,cAAgBA,EAAG,OAASA,EAAG,UAAYA,EAAG,MAAQA,EAAG,OAASA,EAAG,SAAWA,EAAG,MAAQA,EAAG,KAAOA,IAAK,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQA,EAAG,SAAWA,EAAG,UAAYA,EAAG,KAAOA,EAAG,OAASA,EAAG,WAAaA,EAAG,SAAWA,EAAG,UAAYA,EAAG,WAAaA,EAAG,OAASA,EAAG,SAAWA,EAAG,MAAQA,EAAG,SAAWA,EAAG,MAAQA,EAAG,UAAYA,EAAG,UAAYA,EAAG,GAAKA,EAAG,MAAQA,EAAG,OAASA,EAAG,QAAUA,EAAG,MAAQA,EAAG,OAASA,EAAG,SAAWA,EAAG,OAASA,EAAG,UAAYA,EAAG,OAASA,EAAG,SAAWA,EAAG,MAAQA,EAAG,OAASA,EAAG,SAAWA,EAAG,SAAWA,EAAG,SAAWA,EAAG,SAAWA,EAAG,KAAOA,IAAK,UAAY,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,KAAOA,EAAG,OAASA,EAAG,KAAOA,EAAG,QAAUA,EAAG,UAAYA,EAAG,MAAQA,EAAG,OAASA,EAAG,OAASA,EAAG,YAAcA,EAAG,OAASA,EAAG,OAASA,EAAG,SAAWA,EAAG,OAASA,EAAG,IAAMA,EAAG,IAAMA,IAAK,UAAY,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOA,EAAG,MAAQA,EAAG,QAAUA,EAAG,SAAWA,EAAG,gBAAkBA,EAAG,YAAcA,EAAG,SAAWA,EAAG,OAASA,EAAG,eAAiBA,EAAG,IAAMA,EAAG,KAAOA,EAAG,MAAQA,EAAG,OAASA,EAAG,cAAcA,EAAG,OAASA,EAAG,UAAYA,EAAG,MAAQA,EAAG,SAAWA,EAAG,SAAWA,EAAG,aAAeA,EAAG,OAASA,EAAG,OAASA,EAAG,MAAQA,EAAG,SAAWA,EAAG,MAAQA,EAAG,SAAWA,EAAG,WAAaA,EAAG,UAAYA,IAAK,YAAYA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,iBAAiBA,EAAG,IAAMA,EAAG,cAAcA,EAAG,GAAKA,EAAG,gBAAgBA,EAAG,IAAMA,EAAG,cAAcA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,YAAYA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,YAAYA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,iBAAiBA,EAAG,IAAMA,EAAG,cAAcA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,eAAeA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,iBAAiBA,EAAG,IAAMA,EAAG,SAAWugF,EAAG,WAAaA,EAAG,KAAOA,EAAG,OAASA,EAAG,QAAUA,EAAG,OAASA,EAAG,SAAWA,EAAG,QAAUL,EAAG,aAAeA,EAAG,YAAcA,EAAG,WAAaA,EAAG,UAAYA,EAAG,QAAUA,EAAG,YAAcA,EAAG,MAAQA,EAAG,SAAWA,EAAG,SAAWA,EAAG,SAAWA,EAAG,QAAUA,EAAG,OAASA,EAAG,MAAQA,EAAG,IAAMA,EAAG,IAAMA,EAAG,UAAYA,EAAG,IAAMA,EAAG,SAAWA,EAAG,MAAQA,EAAG,QAAUA,EAAG,MAAQA,EAAG,SAAWA,EAAG,SAAWA,EAAG,MAAQA,EAAG,QAAUA,EAAG,IAAMA,EAAG,KAAOA,EAAG,QAAUA,EAAG,SAAWA,EAAG,OAASA,EAAG,SAAWA,EAAG,IAAMA,EAAG,KAAOA,EAAG,KAAOA,EAAG,OAASA,EAAG,OAASA,EAAG,QAAUA,EAAG,IAAMA,EAAG,MAAQA,EAAG,OAASA,EAAG,KAAOA,EAAG,WAAaA,EAAG,WAAaA,EAAG,MAAQA,EAAG,OAASA,EAAG,MAAQA,EAAG,QAAUA,EAAG,MAAQA,EAAG,MAAQA,EAAG,IAAMA,EAAG,KAAOA,EAAG,MAAQA,EAAG,KAAOA,EAAG,OAASA,EAAG,OAASA,EAAG,MAAQA,EAAG,UAAYA,EAAG,SAAWA,EAAG,KAAOA,EAAG,KAAOA,EAAG,MAAQA,EAAG,WAAaA,EAAG,UAAYA,EAAG,WAAaA,EAAG,KAAOA,EAAG,QAAUA,EAAG,SAAWA,EAAG,KAAOA,EAAG,KAAOA,EAAG,KAAOA,EAAG,UAAYA,EAAG,IAAMA,EAAG,QAAUA,EAAG,OAASA,EAAG,QAAUA,EAAG,KAAOA,EAAG,KAAOA,EAAG,SAAWA,EAAG,SAAWA,EAAG,OAASA,EAAG,OAASA,EAAG,MAAQA,EAAG,OAASA,EAAG,MAAQA,EAAG,QAAUA,EAAG,OAASA,EAAG,MAAQA,EAAG,KAAOA,EAAG,SAAWA,EAAG,IAAMA,EAAG,SAAWA,EAAG,UAAYA,EAAG,OAASA,EAAG,UAAYA,EAAG,OAASA,EAAG,MAAQA,EAAG,SAAWA,EAAG,IAAMA,EAAG,SAAWA,EAAG,MAAQA,EAAG,SAAWA,EAAG,MAAQA,EAAG,MAAQA,EAAG,OAASA,EAAG,MAAQA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,QAAUA,EAAG,UAAYA,EAAG,OAASA,EAAG,SAAWA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKlgF,EAAG,GAAKqgF,EAAG,GAAKrgF,EAAG,KAAOA,EAAG,GAAKA,EAAG,KAAOA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOkgF,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,IAAK,GAAKK,EAAG,GAAKwB,EAAI,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAM/hF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,KAAOA,EAAG,OAASA,EAAG,QAAUA,EAAG,SAAWA,EAAG,YAAcA,EAAG,YAAcA,EAAG,KAAOA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAMA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,MAAQA,EAAG,SAAWA,EAAG,SAAWA,EAAG,MAAQA,EAAG,QAAUA,EAAG,QAAUA,EAAG,QAAUA,EAAG,UAAYA,EAAG,SAAWA,EAAG,UAAYA,EAAG,QAAUA,EAAG,KAAOA,EAAG,QAAUA,EAAG,QAAUA,EAAG,MAAQA,EAAG,MAAQA,EAAG,SAAWkgF,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAKuhF,EAAI,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMvhF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,OAASkgF,EAAG,YAAc,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQA,MAAO,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMkgF,EAAG,EAAIA,IAAK,GAAKC,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMngF,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKkgF,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,SAAWA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,MAAQA,EAAG,GAAKA,IAAK,GAAKmgF,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKngF,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,GAAKkgF,IAAK,GAAK8B,EAAI,GAAK3B,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMrgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,MAAQA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,KAAOA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,SAAWkgF,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMkgF,EAAG,OAAS,CAAC,EAAI,EAAE,KAAO,CAAC,UAAYA,IAAK,UAAYA,EAAG,SAAWA,EAAG,cAAcA,EAAG,cAAcA,EAAG,cAAcA,EAAG,cAAcA,EAAG,cAAcA,EAAG,cAAcA,EAAG,OAASA,EAAG,QAAUA,EAAG,OAASA,EAAG,MAAQA,EAAG,KAAOA,EAAG,MAAQA,EAAG,UAAYA,EAAG,KAAOA,EAAG,SAAWA,EAAG,KAAOA,EAAG,OAASA,EAAG,MAAQA,EAAG,QAAUA,EAAG,KAAOA,EAAG,OAASA,EAAG,IAAMA,EAAG,YAAcA,EAAG,QAAUA,EAAG,KAAOA,EAAG,KAAOA,EAAG,SAAWA,EAAG,MAAQA,EAAG,QAAUmB,EAAI,SAAWnB,EAAG,MAAQA,EAAG,OAASA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,IAAK,GAAKA,EAAG,IAAMA,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,SAAWkgF,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,OAASA,IAAK,GAAKugF,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMvgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMkgF,IAAK,GAAKC,EAAG,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQD,EAAG,QAAUA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,IAAK,GAAKlgF,EAAG,GAAKgiF,EAAI,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMhiF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMkgF,EAAG,SAAWA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMG,EAAG,IAAMrgF,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,IAAK,OAAS,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUA,EAAG,YAAcA,EAAG,IAAMA,EAAG,SAAWA,EAAG,QAAUA,EAAG,OAASA,EAAG,MAAQA,EAAG,UAAYA,EAAG,SAAWA,EAAG,UAAYA,EAAG,iBAAmBA,EAAG,YAAcA,EAAG,UAAYA,EAAG,IAAMA,EAAG,UAAYA,EAAG,OAASA,EAAG,aAAeA,EAAG,SAAWA,EAAG,SAAWA,EAAG,UAAYA,EAAG,eAAiBA,EAAG,YAAcA,EAAG,aAAeA,EAAG,IAAMA,EAAG,aAAeA,EAAG,UAAYA,EAAG,QAAUA,EAAG,aAAeA,EAAG,WAAaA,EAAG,KAAOA,EAAG,cAAgBA,EAAG,SAAWA,EAAG,cAAgBA,EAAG,OAASA,EAAG,YAAcA,EAAG,UAAYA,EAAG,QAAUA,EAAG,OAASA,EAAG,UAAYA,EAAG,WAAaA,EAAG,SAAWA,EAAG,KAAOA,EAAG,QAAUA,EAAG,QAAUA,EAAG,KAAOA,EAAG,KAAOA,EAAG,UAAYA,EAAG,UAAYA,EAAG,SAAWA,EAAG,MAAQA,EAAG,MAAQA,EAAG,OAASA,EAAG,UAAYA,EAAG,cAAgBA,EAAG,SAAWA,EAAG,QAAUA,EAAG,SAAWA,EAAG,OAASA,EAAG,KAAOA,EAAG,MAAQA,EAAG,OAASA,EAAG,KAAOA,EAAG,QAAUA,EAAG,WAAaA,EAAG,KAAOA,EAAG,OAASA,EAAG,UAAYA,EAAG,gBAAkBA,EAAG,cAAgBA,EAAG,OAASA,EAAG,iBAAmBA,EAAG,OAASA,EAAG,QAAUA,EAAG,QAAUA,EAAG,gBAAkBA,EAAG,UAAYA,EAAG,OAASA,EAAG,QAAUA,EAAG,SAAWA,EAAG,UAAYA,EAAG,SAAWA,EAAG,QAAUA,EAAG,IAAMA,EAAG,OAASA,EAAG,SAAWA,EAAG,WAAaA,EAAG,UAAYA,EAAG,IAAMA,EAAG,OAASA,EAAG,WAAaA,EAAG,QAAUA,EAAG,WAAaA,EAAG,eAAiBA,EAAG,OAASA,EAAG,QAAUA,EAAG,OAASA,EAAG,OAASA,EAAG,YAAcA,EAAG,WAAaA,EAAG,cAAgBA,EAAG,QAAUA,EAAG,SAAWA,EAAG,UAAYA,EAAG,gBAAkBA,EAAG,aAAeA,EAAG,UAAYA,EAAG,eAAiBA,EAAG,WAAaA,EAAG,OAASA,EAAG,OAASA,EAAG,aAAeA,EAAG,aAAeA,EAAG,SAAWA,EAAG,QAAUA,EAAG,MAAQA,EAAG,KAAOA,EAAG,eAAiBA,EAAG,KAAOA,EAAG,QAAUA,EAAG,WAAaA,EAAG,qBAAuBA,EAAG,gBAAkBA,EAAG,SAAWA,EAAG,SAAWA,EAAG,cAAgBA,EAAG,eAAiBA,EAAG,UAAYA,EAAG,SAAWA,EAAG,gBAAkBA,EAAG,uBAAuBA,EAAG,aAAeA,EAAG,aAAeA,EAAG,gBAAkBA,EAAG,QAAUA,EAAG,WAAaA,EAAG,YAAcA,EAAG,uCAAuCA,EAAG,8BAA8BA,EAAG,SAAWA,EAAG,QAAUA,EAAG,cAAgBA,EAAG,OAASA,EAAG,OAASA,EAAG,UAAYA,EAAG,SAAWA,EAAG,SAAWA,EAAG,eAAiBA,EAAG,QAAUA,EAAG,MAAQA,EAAG,MAAQA,EAAG,KAAOA,EAAG,OAASA,EAAG,SAAWA,EAAG,IAAMA,EAAG,eAAiBA,EAAG,SAAWA,EAAG,YAAcA,EAAG,QAAUA,EAAG,MAAQA,EAAG,OAASA,EAAG,QAAUA,EAAG,SAAWA,EAAG,UAAYA,EAAG,MAAQA,EAAG,SAAWA,EAAG,OAASA,EAAG,WAAaA,EAAG,UAAYA,EAAG,UAAYA,EAAG,YAAcA,EAAG,SAAWA,EAAG,UAAYA,EAAG,OAASA,EAAG,WAAaA,EAAG,WAAaA,EAAG,aAAeA,EAAG,QAAUA,EAAG,WAAaA,EAAG,YAAcA,EAAG,0BAA4BA,EAAG,SAAWA,EAAG,MAAQA,EAAG,OAASA,EAAG,UAAYA,EAAG,OAASA,EAAG,WAAaA,EAAG,OAASA,EAAG,KAAOA,EAAG,cAAgBA,EAAG,QAAUA,EAAG,UAAYA,EAAG,MAAQA,EAAG,SAAWA,EAAG,UAAYA,EAAG,KAAOA,EAAG,QAAUA,EAAG,SAAWA,EAAG,QAAUA,EAAG,SAAWA,EAAG,QAAUA,EAAG,MAAQA,EAAG,aAAeA,EAAG,UAAYA,EAAG,WAAaA,EAAG,UAAYA,EAAG,UAAYA,EAAG,aAAeA,EAAG,YAAcA,EAAG,SAAWA,EAAG,SAAWA,EAAG,KAAOA,EAAG,SAAWA,EAAG,UAAYA,EAAG,QAAUA,EAAG,OAASA,EAAG,QAAUA,EAAG,UAAYA,EAAG,YAAcA,EAAG,QAAUA,EAAG,QAAUA,EAAG,QAAUA,EAAG,KAAOA,EAAG,MAAQA,EAAG,MAAQA,EAAG,YAAcA,EAAG,KAAOA,EAAG,SAAWA,EAAG,WAAaA,EAAG,QAAUA,EAAG,QAAUA,EAAG,mBAAqBA,EAAG,OAASA,EAAG,OAASA,EAAG,eAAiBA,EAAG,OAASA,EAAG,SAAWA,EAAG,gBAAkBA,EAAG,SAAWA,EAAG,SAAWA,EAAG,WAAaA,EAAG,kBAAoBA,EAAG,eAAiBA,EAAG,WAAaA,EAAG,aAAeA,EAAG,QAAUA,EAAG,iBAAmBA,EAAG,SAAWA,EAAG,MAAQA,EAAG,WAAaA,EAAG,aAAeA,EAAG,cAAgBA,EAAG,OAASA,EAAG,QAAUA,EAAG,aAAeA,EAAG,aAAeA,EAAG,aAAeA,EAAG,YAAcA,EAAG,KAAOA,EAAG,KAAOA,EAAG,UAAYA,EAAG,QAAUA,EAAG,UAAYA,EAAG,UAAYA,EAAG,QAAUA,EAAG,OAASA,EAAG,UAAYA,EAAG,IAAMA,EAAG,WAAaA,EAAG,QAAUA,EAAG,YAAcA,EAAG,WAAaA,EAAG,KAAOA,EAAG,OAASA,EAAG,UAAYA,EAAG,KAAOA,EAAG,WAAaA,EAAG,MAAQA,EAAG,MAAQA,EAAG,cAAgBA,EAAG,eAAiBA,EAAG,MAAQA,EAAG,OAASA,EAAG,QAAUA,EAAG,WAAaA,EAAG,OAASA,EAAG,KAAOA,EAAG,cAAcA,EAAG,KAAOA,EAAG,QAAUA,EAAG,YAAcA,EAAG,QAAUA,EAAG,KAAOA,EAAG,OAASA,EAAG,cAAgBA,EAAG,aAAeA,EAAG,OAASA,EAAG,WAAaA,EAAG,OAASA,EAAG,SAAWA,EAAG,QAAUA,EAAG,WAAaA,EAAG,OAASA,EAAG,IAAMA,EAAG,OAASA,EAAG,SAAWA,EAAG,WAAaA,EAAG,QAAUA,EAAG,SAAWA,EAAG,KAAOA,EAAG,QAAUA,EAAG,SAAWA,EAAG,SAAWA,EAAG,SAAWA,EAAG,WAAaA,EAAG,MAAQA,EAAG,QAAUA,EAAG,oBAAsBA,EAAG,OAASA,EAAG,SAAWA,EAAG,UAAYA,EAAG,SAAWA,EAAG,YAAcA,EAAG,SAAWA,EAAG,KAAOA,EAAG,OAASA,EAAG,OAASA,EAAG,UAAYA,EAAG,QAAUA,EAAG,SAAWA,EAAG,OAASA,EAAG,KAAOA,EAAG,MAAQA,EAAG,SAAWA,EAAG,WAAaA,EAAG,SAAWA,EAAG,OAASA,EAAG,WAAaA,EAAG,SAAWA,EAAG,SAAWA,EAAG,SAAWA,EAAG,OAASA,EAAG,OAASA,EAAG,aAAeA,EAAG,iBAAmBA,EAAG,MAAQA,EAAG,SAAWA,EAAG,iBAAmBA,EAAG,iBAAmBA,EAAG,eAAiBA,EAAG,eAAiBA,EAAG,qBAAuBA,EAAG,gBAAkBA,EAAG,OAASA,EAAG,kBAAoBA,EAAG,oBAAsBA,EAAG,SAAWA,EAAG,MAAQA,EAAG,SAAWA,EAAG,MAAQA,EAAG,aAAeA,EAAG,UAAYA,EAAG,UAAYA,EAAG,QAAUA,EAAG,UAAYA,EAAG,QAAUA,EAAG,OAASA,EAAG,QAAUA,EAAG,MAAQA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,cAAgBA,EAAG,gBAAkBA,EAAG,MAAQA,EAAG,OAASA,EAAG,QAAUA,EAAG,QAAUA,EAAG,OAASA,EAAG,YAAcA,EAAG,MAAQA,EAAG,OAASA,EAAG,QAAUA,EAAG,UAAYA,EAAG,OAASA,EAAG,MAAQA,EAAG,YAAcA,EAAG,OAASA,EAAG,MAAQA,EAAG,SAAWA,EAAG,SAAWA,EAAG,aAAeA,EAAG,iBAAmBA,EAAG,UAAYA,EAAG,QAAUA,EAAG,YAAcA,EAAG,OAASA,EAAG,WAAaA,EAAG,YAAcA,EAAG,WAAaA,EAAG,OAASA,EAAG,MAAQA,EAAG,OAASA,EAAG,SAAWA,EAAG,WAAaA,EAAG,+BAA+BA,EAAG,aAAeA,EAAG,SAAWA,EAAG,MAAQA,EAAG,QAAUA,EAAG,OAASA,EAAG,MAAQA,EAAG,OAASA,EAAG,SAAWA,EAAG,QAAUA,EAAG,SAAWA,EAAG,WAAaA,EAAG,aAAeA,EAAG,UAAYA,EAAG,QAAUA,EAAG,KAAOA,EAAG,OAASA,EAAG,WAAaA,EAAG,MAAQA,EAAG,aAAeA,EAAG,SAAWA,EAAG,SAAWA,EAAG,aAAeA,EAAG,aAAeA,EAAG,UAAYA,EAAG,QAAUA,EAAG,aAAeA,EAAG,KAAOA,EAAG,WAAaA,EAAG,aAAeA,EAAG,YAAcA,EAAG,YAAcA,EAAG,OAASA,EAAG,QAAUA,EAAG,QAAUA,EAAG,kBAAoBA,EAAG,mBAAqBA,EAAG,cAAgBA,EAAG,eAAiBA,EAAG,kBAAkBA,EAAG,eAAiBA,EAAG,SAAWA,EAAG,mBAAqBA,EAAG,SAAWA,EAAG,QAAUA,EAAG,WAAaA,EAAG,SAAWA,EAAG,MAAQA,EAAG,WAAaA,EAAG,QAAUA,EAAG,KAAOA,EAAG,IAAMA,EAAG,MAAQA,EAAG,QAAUA,EAAG,QAAUA,EAAG,eAAiBA,EAAG,cAAgBA,EAAG,UAAYA,EAAG,MAAQA,EAAG,IAAMA,EAAG,OAASA,EAAG,MAAQA,EAAG,SAAWA,EAAG,UAAYA,EAAG,MAAQA,EAAG,gBAAkBA,EAAG,QAAUA,EAAG,MAAQA,EAAG,WAAaA,EAAG,OAASA,EAAG,UAAYA,EAAG,aAAeA,EAAG,UAAYA,EAAG,OAASA,EAAG,aAAeA,EAAG,OAASA,EAAG,SAAWA,EAAG,OAASA,EAAG,OAASA,EAAG,KAAOA,EAAG,IAAMA,EAAG,WAAaA,EAAG,kBAAoBA,EAAG,WAAaA,EAAG,MAAQA,EAAG,QAAUA,EAAG,QAAUA,EAAG,KAAOA,EAAG,YAAcA,EAAG,SAAWA,EAAG,OAASA,EAAG,MAAQA,EAAG,KAAOA,EAAG,UAAYA,EAAG,KAAOA,EAAG,QAAUA,EAAG,MAAQA,EAAG,QAAUA,EAAG,MAAQA,EAAG,IAAMA,EAAG,SAAWA,EAAG,WAAaA,EAAG,IAAMA,EAAG,WAAaA,EAAG,OAASA,EAAG,gBAAkBA,EAAG,UAAYA,EAAG,iBAAmBA,EAAG,SAAWA,EAAG,UAAYA,EAAG,QAAUA,EAAG,gBAAkBA,EAAG,KAAOA,EAAG,KAAOA,EAAG,OAASA,EAAG,OAASA,EAAG,WAAaA,EAAG,OAASA,EAAG,QAAUA,EAAG,SAAWA,EAAG,QAAUA,EAAG,QAAUA,EAAG,WAAaA,EAAG,YAAcA,EAAG,MAAQA,EAAG,SAAWA,EAAG,IAAMA,EAAG,aAAeA,EAAG,cAAgBA,EAAG,kBAAkBA,EAAG,QAAUA,EAAG,UAAYA,EAAG,QAAUA,EAAG,SAAWA,EAAG,aAAeA,EAAG,SAAWA,EAAG,SAAWA,EAAG,KAAOA,EAAG,UAAYA,EAAG,SAAWA,EAAG,MAAQA,EAAG,WAAaA,EAAG,QAAUA,EAAG,iBAAiBA,EAAG,QAAUA,EAAG,aAAaA,EAAG,KAAOA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,OAASA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,OAASA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,SAAWkgF,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,SAAWkgF,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKlgF,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOA,EAAG,IAAMA,EAAG,KAAOA,EAAG,OAASA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,KAAOA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,IAAK,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMmiF,EAAI,IAAMA,IAAM,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOniF,EAAG,IAAMA,IAAK,GAAKA,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,cAAgBkgF,EAAG,WAAaA,EAAG,WAAaA,EAAG,SAAWA,EAAG,OAASA,EAAG,gBAAgB,CAAC,EAAI,EAAE,KAAO,CAAC,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,MAAO,QAAUA,EAAG,UAAYA,EAAG,WAAaA,EAAG,aAAeA,EAAG,OAASA,EAAG,QAAUA,EAAG,QAAUA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,YAAcA,EAAG,YAAcA,EAAG,YAAYA,EAAG,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,EAAIA,IAAK,WAAWA,EAAG,aAAaA,EAAG,gBAAgBA,EAAG,YAAcE,EAAG,WAAaF,EAAG,QAAUA,EAAG,OAASA,EAAG,UAAYA,EAAG,eAAeA,EAAG,QAAUA,EAAG,WAAWA,EAAG,WAAaA,EAAG,SAAWA,EAAG,QAAUA,EAAG,UAAUA,EAAG,UAAYA,EAAG,SAAWA,EAAG,UAAYA,EAAG,cAAgBA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,UAAUA,EAAG,eAAeA,EAAG,QAAUA,EAAG,OAASA,EAAG,UAAYA,EAAG,SAAWA,EAAG,cAAcA,EAAG,YAAYA,EAAG,YAAYA,EAAG,WAAWA,EAAG,YAAYA,EAAG,gBAAgBA,EAAG,QAAUA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,WAAWA,EAAG,SAAWA,EAAG,SAAWA,EAAG,SAAWA,EAAG,OAASA,EAAG,SAAWA,EAAG,QAAUA,EAAG,KAAOA,EAAG,MAAQA,EAAG,OAASA,EAAG,GAAKA,EAAG,YAAc,CAAC,EAAI,EAAE,KAAO,CAAC,EAAIA,IAAK,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,IAAK,OAAS,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUA,EAAG,IAAMA,EAAG,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,EAAO,OAASA,IAAK,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,EAAO,EAAIA,EAAG,OAASA,MAAO,QAAUA,EAAG,aAAeA,EAAG,YAAYA,EAAG,OAASA,EAAG,eAAiBA,EAAG,UAAYA,EAAG,SAASA,EAAG,SAASA,EAAG,QAAUA,EAAG,KAAOA,EAAG,WAAa,CAAC,EAAI,EAAE,KAAO,CAAC,UAAUA,EAAG,WAAWA,IAAK,OAAS,CAAC,EAAI,EAAE,KAAO,CAAC,WAAWA,EAAG,WAAWA,EAAG,WAAWA,IAAK,WAAaA,EAAG,YAAc,CAAC,EAAI,EAAE,KAAO,CAAC,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,OAAOA,EAAG,QAAQA,EAAG,QAAQA,EAAG,OAAOA,EAAG,OAAOA,EAAG,OAAOA,MAAO,YAAc,CAAC,EAAI,EAAE,KAAO,CAAC,SAAWA,EAAG,eAAeA,IAAK,WAAasB,EAAI,SAAWC,EAAI,SAAWvB,EAAG,KAAOA,EAAG,SAAWA,EAAG,MAAQA,EAAG,OAASA,EAAG,cAAgBA,EAAG,eAAeA,EAAG,SAAWA,EAAG,gBAAkB,CAAC,EAAI,EAAE,KAAO,CAAC,EAAIA,EAAG,UAAYA,EAAG,SAAWA,EAAG,QAAUA,EAAG,WAAaA,EAAG,QAAUA,IAAK,MAAQA,EAAG,MAAQA,EAAG,UAAUA,EAAG,MAAQA,EAAG,OAASA,EAAG,iBAAiBA,EAAG,UAAYA,EAAG,SAAWA,EAAG,UAAYA,EAAG,MAAQA,EAAG,iBAAmBA,EAAG,OAASA,EAAG,QAAQA,EAAG,OAASA,EAAG,yBAA2BA,EAAG,SAAWA,EAAG,KAAOA,EAAG,WAAaA,EAAG,UAAYA,EAAG,eAAiBA,EAAG,MAAQA,EAAG,cAAgBA,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUE,EAAG,QAAUA,IAAK,KAAOF,EAAG,KAAOA,EAAG,KAAOA,EAAG,SAAWA,EAAG,WAAaA,EAAG,mBAAmBA,EAAG,OAASA,EAAG,WAAaA,EAAG,SAAWA,EAAG,WAAW,CAAC,EAAI,EAAE,KAAO,CAAC,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,MAAO,aAAeA,EAAG,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,KAAOA,IAAK,SAAWA,EAAG,QAAUA,EAAG,SAAWA,EAAG,UAAY,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOA,IAAK,GAAKA,EAAG,WAAa,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQA,IAAK,iBAAiBA,EAAG,gBAAgBA,EAAG,UAAYA,EAAG,YAAc,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUA,EAAG,QAAUA,IAAK,GAAKA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,KAAOA,EAAG,KAAOA,EAAG,MAAQA,EAAG,MAAQA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMqgF,EAAG,IAAMrgF,EAAG,IAAMA,EAAG,EAAIA,EAAG,IAAMA,EAAG,KAAOA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMkgF,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKlgF,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKkgF,EAAG,kBAAkBA,EAAG,SAAWA,EAAG,IAAMA,EAAG,OAASA,EAAG,aAAeA,EAAG,SAAWE,EAAG,QAAUF,EAAG,MAAQA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,IAAMA,EAAG,WAAaA,EAAG,UAAYA,EAAG,OAASA,EAAG,OAASA,EAAG,KAAOA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,QAAUA,EAAG,MAAQA,EAAG,GAAKoiF,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,YAAYA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,KAAOA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,SAAWA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,SAAWpiF,EAAG,kBAAkBA,EAAG,SAAWA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,KAAOA,EAAG,WAAaA,EAAG,MAAQA,EAAG,YAAcA,EAAG,qBAAqBA,EAAG,YAAcA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,SAAWA,EAAG,QAAUA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,YAAcA,EAAG,SAAWA,EAAG,SAAWA,EAAG,kBAAkBA,EAAG,SAAWA,EAAG,SAAWA,EAAG,UAAYA,EAAG,mBAAmBA,EAAG,UAAYA,EAAG,SAAWA,EAAG,SAAWA,EAAG,aAAeA,EAAG,SAAWA,EAAG,kBAAkBA,EAAG,SAAWA,EAAG,QAAUA,EAAG,UAAYA,EAAG,mBAAmBA,EAAG,UAAYA,EAAG,YAAYA,EAAG,QAAUA,EAAG,iBAAiBA,EAAG,QAAUA,EAAG,aAAeA,EAAG,SAAWA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,aAAeA,EAAG,sBAAsBA,EAAG,aAAeA,EAAG,cAAgBA,EAAG,QAAUA,EAAG,WAAaA,EAAG,UAAYA,EAAG,QAAUA,EAAG,gBAAkBA,EAAG,yBAAyBA,EAAG,gBAAkBA,EAAG,SAAWA,EAAG,OAASA,EAAG,YAAcA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,QAAUA,EAAG,GAAKA,EAAG,YAAYA,EAAG,GAAKA,EAAG,QAAUA,EAAG,iBAAiBA,EAAG,QAAUA,EAAG,UAAYA,EAAG,KAAOA,EAAG,cAAcA,EAAG,KAAOA,EAAG,UAAYA,EAAG,mBAAmBA,EAAG,UAAYA,EAAG,OAASA,EAAG,KAAOA,EAAG,cAAcA,EAAG,KAAOA,EAAG,KAAOA,EAAG,cAAcA,EAAG,KAAOA,EAAG,OAASA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,UAAYA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,QAAUA,EAAG,QAAUA,EAAG,YAAYA,EAAG,GAAKA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,MAAQA,EAAG,MAAQA,EAAG,QAAUA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,UAAYA,EAAG,MAAQA,EAAG,KAAOA,EAAG,QAAUA,EAAG,iBAAiBA,EAAG,wBAAwBA,EAAG,iBAAiBA,EAAG,UAAYA,EAAG,UAAYA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,WAAaA,EAAG,UAAYA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,UAAYA,EAAG,aAAeA,EAAG,sBAAsBA,EAAG,aAAeA,EAAG,OAASA,EAAG,MAAQA,EAAG,OAASA,EAAG,OAASA,EAAG,QAAUA,EAAG,iBAAiBA,EAAG,QAAUA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,KAAOA,EAAG,OAASA,EAAG,SAAWA,EAAG,kBAAkBA,EAAG,SAAWA,EAAG,YAAcA,EAAG,qBAAqBA,EAAG,YAAcA,EAAG,OAASA,EAAG,SAAWA,EAAG,QAAUA,EAAG,iBAAiBA,EAAG,QAAUA,EAAG,UAAYA,EAAG,MAAQA,EAAG,KAAOA,EAAG,cAAcA,EAAG,KAAOA,EAAG,SAAWA,EAAG,kBAAkBA,EAAG,SAAWA,EAAG,QAAUA,EAAG,KAAOA,EAAG,UAAYA,EAAG,QAAUA,EAAG,iBAAiBA,EAAG,QAAUA,EAAG,QAAUA,EAAG,MAAQA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,YAAYA,EAAG,GAAKA,IAAK,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,YAAYA,EAAG,GAAKA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,IAAK,OAASA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,UAAYA,EAAG,mBAAmBA,EAAG,UAAYA,EAAG,YAAcA,EAAG,qBAAqBA,EAAG,YAAcA,EAAG,MAAQA,EAAG,QAAUA,EAAG,UAAYA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,IAAMA,EAAG,SAAWA,EAAG,SAAWA,EAAG,QAAUA,EAAG,SAAWA,EAAG,UAAYA,EAAG,QAAUA,EAAG,QAAUA,EAAG,SAAWA,EAAG,KAAOA,EAAG,QAAUA,EAAG,OAASA,EAAG,SAAWA,EAAG,oBAAoBA,EAAG,SAAWA,EAAG,kBAAkBA,EAAG,QAAUA,EAAG,OAASA,EAAG,QAAUA,EAAG,QAAUA,EAAG,MAAQA,EAAG,IAAMA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,MAAQA,EAAG,SAAWA,EAAG,UAAYA,EAAG,YAAcA,EAAG,SAAWA,EAAG,MAAQA,EAAG,IAAMA,EAAG,aAAaA,EAAG,IAAMA,EAAG,QAAUA,EAAG,QAAUA,EAAG,OAASA,EAAG,KAAOA,EAAG,MAAQA,EAAG,QAAUA,EAAG,OAASA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,KAAOA,EAAG,SAAWA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,OAASA,EAAG,WAAaA,EAAG,sBAAsBA,EAAG,WAAaA,EAAG,OAASA,EAAG,QAAUA,EAAG,UAAYA,EAAG,mBAAmBA,EAAG,UAAYA,EAAG,MAAQA,EAAG,QAAUA,EAAG,SAAWA,EAAG,SAAWA,EAAG,QAAUA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,QAAUA,EAAG,IAAMA,EAAG,KAAOA,EAAG,MAAQA,EAAG,QAAUA,EAAG,UAAYA,EAAG,SAAWA,EAAG,MAAQA,EAAG,UAAYA,EAAG,mBAAmBA,EAAG,UAAYA,EAAG,KAAOA,EAAG,MAAQA,EAAG,OAASA,EAAG,OAASA,EAAG,MAAQA,EAAG,MAAQA,EAAG,QAAUA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,WAAaA,EAAG,aAAeA,EAAG,sBAAsBA,EAAG,aAAeA,EAAG,MAAQA,EAAG,OAASA,EAAG,QAAUA,EAAG,OAASA,EAAG,WAAaA,EAAG,sBAAsBA,EAAG,WAAaA,EAAG,aAAeA,EAAG,SAAWA,EAAG,UAAYA,EAAG,MAAQA,EAAG,OAASA,EAAG,SAAWA,EAAG,kBAAkB,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQA,EAAG,MAAQA,IAAK,yBAAyB,CAAC,EAAI,EAAE,KAAO,CAAC,eAAeA,EAAG,MAAQA,IAAK,kBAAkB,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQA,EAAG,MAAQA,IAAK,MAAQA,EAAG,SAAWA,EAAG,WAAaA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,YAAcA,EAAG,SAAWA,EAAG,kBAAkBA,EAAG,SAAWA,EAAG,UAAYA,EAAG,OAASA,EAAG,OAASA,EAAG,MAAQA,EAAG,OAASA,EAAG,UAAYA,EAAG,WAAaA,EAAG,oBAAoBA,EAAG,WAAaA,EAAG,SAAWA,EAAG,kBAAkBA,EAAG,SAAWA,EAAG,UAAYA,EAAG,mBAAmBA,EAAG,UAAYA,EAAG,GAAKA,EAAG,YAAYA,EAAG,GAAKA,EAAG,QAAUA,EAAG,QAAUA,EAAG,iBAAiBA,EAAG,QAAUA,EAAG,QAAUA,EAAG,SAAWA,EAAG,OAASA,EAAG,QAAUA,EAAG,iBAAiBA,EAAG,QAAUA,EAAG,SAAWA,EAAG,WAAaA,EAAG,sBAAsBA,EAAG,WAAaA,EAAG,QAAUA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,WAAaA,EAAG,cAAgBA,EAAG,MAAQA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,UAAYA,EAAG,YAAcA,EAAG,QAAUA,EAAG,iBAAiBA,EAAG,QAAUA,EAAG,aAAeA,EAAG,aAAeA,EAAG,WAAaA,EAAG,oBAAoBA,EAAG,WAAaA,EAAG,SAAWA,EAAG,YAAcA,EAAG,qBAAqBA,EAAG,YAAcA,EAAG,KAAOA,EAAG,UAAYA,EAAG,WAAaA,EAAG,UAAYA,EAAG,QAAUA,EAAG,iBAAiBA,EAAG,QAAUA,EAAG,SAAWA,EAAG,kBAAkBA,EAAG,SAAWA,EAAG,cAAgBA,EAAG,UAAYA,EAAG,mBAAmBA,EAAG,UAAYA,EAAG,SAAWA,EAAG,kBAAkBA,EAAG,SAAWA,EAAG,QAAUA,EAAG,iBAAiBA,EAAG,QAAUA,EAAG,UAAYA,EAAG,mBAAmBA,EAAG,UAAYA,EAAG,OAASA,EAAG,SAAWA,EAAG,QAAUA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,QAAUA,EAAG,WAAaA,EAAG,UAAYA,EAAG,UAAYA,EAAG,KAAOA,EAAG,QAAUA,EAAG,OAASA,EAAG,YAAcA,EAAG,qBAAqBA,EAAG,YAAcA,EAAG,MAAQA,EAAG,SAAWA,EAAG,KAAOA,EAAG,OAASA,EAAG,YAAcA,EAAG,UAAYA,EAAG,UAAYA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,IAAMA,EAAG,MAAQA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,KAAOA,EAAG,OAASA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,OAASA,EAAG,QAAUA,EAAG,OAASA,EAAG,KAAOA,EAAG,OAASA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,SAAWA,EAAG,kBAAkBA,EAAG,SAAWA,EAAG,UAAYA,EAAG,mBAAmBA,EAAG,UAAYA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,OAASA,EAAG,MAAQA,EAAG,gBAAgBA,EAAG,MAAQA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,UAAYA,EAAG,WAAaA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,QAAUA,EAAG,iBAAiBA,EAAG,QAAUA,EAAG,QAAUA,EAAG,iBAAiBA,EAAG,QAAUA,EAAG,QAAUA,EAAG,iBAAiBA,EAAG,QAAUA,EAAG,MAAQA,EAAG,MAAQA,EAAG,SAAWA,EAAG,KAAOA,EAAG,OAASA,EAAG,QAAUA,EAAG,iBAAiBA,EAAG,QAAUA,EAAG,YAAcA,EAAG,qBAAqBA,EAAG,YAAcA,EAAG,WAAaA,EAAG,OAASA,EAAG,OAASA,EAAG,WAAaA,EAAG,eAAiBA,EAAG,wBAAwBA,EAAG,eAAiBA,EAAG,aAAeA,EAAG,UAAYA,EAAG,OAASA,EAAG,SAAWA,EAAG,SAAWA,EAAG,cAAcA,EAAG,SAAWqiF,EAAI,SAAWA,EAAI,MAAQriF,EAAG,SAAWA,EAAG,QAAUA,EAAG,QAAUA,EAAG,iBAAiBA,EAAG,QAAUA,EAAG,OAASA,EAAG,SAAWA,EAAG,SAAWA,EAAG,cAAcA,EAAG,YAAYA,EAAG,YAAYA,EAAG,QAAUA,EAAG,SAAWA,EAAG,YAAcA,EAAG,qBAAqBA,EAAG,YAAcA,EAAG,cAAcA,EAAG,UAAYA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,gBAAgBA,EAAG,SAAWA,EAAG,MAAQA,EAAG,gBAAgBA,EAAG,MAAQA,EAAG,SAAWA,EAAG,kBAAkBA,EAAG,SAAWA,EAAG,KAAOA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,OAASA,EAAG,SAAWA,EAAG,kBAAkBA,EAAG,SAAWA,EAAG,OAASA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,QAAU,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,IAAK,UAAY,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,IAAK,KAAOA,EAAG,QAAUA,EAAG,iBAAiBA,EAAG,QAAUA,EAAG,cAAcA,EAAG,qBAAqBA,EAAG,cAAcA,EAAG,UAAYA,EAAG,aAAaA,EAAG,oBAAoBA,EAAG,aAAaA,EAAG,KAAOA,EAAG,cAAcA,EAAG,KAAOA,EAAG,SAAWA,EAAG,kBAAkBA,EAAG,SAAWA,EAAG,gBAAgBA,EAAG,uBAAuBA,EAAG,gBAAgBA,EAAG,UAAYA,EAAG,SAAWA,EAAG,oBAAoBA,EAAG,SAAWA,EAAG,UAAYA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,UAAYA,EAAG,KAAOA,EAAG,OAASA,EAAG,UAAYA,EAAG,MAAQA,EAAG,SAAWA,EAAG,QAAUA,EAAG,SAAWA,EAAG,kBAAkBA,EAAG,SAAWA,EAAG,OAASA,EAAG,QAAUA,EAAG,UAAYA,EAAG,UAAYA,EAAG,MAAQA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,KAAOA,EAAG,OAASA,EAAG,MAAQA,EAAG,SAAWA,EAAG,kBAAkBA,EAAG,SAAWA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,QAAUA,EAAG,iBAAiBA,EAAG,QAAUA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,KAAOA,EAAG,cAAcA,EAAG,KAAOA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,QAAUA,EAAG,iBAAiBA,EAAG,QAAUA,EAAG,KAAOA,EAAG,cAAcA,EAAG,KAAOA,EAAG,SAAWA,EAAG,QAAUA,EAAG,QAAUA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,UAAYA,EAAG,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQA,IAAK,WAAaA,EAAG,QAAUA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,UAAYA,EAAG,MAAQA,EAAG,SAAWA,EAAG,IAAMA,EAAG,MAAQA,EAAG,MAAQA,EAAG,QAAUA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,MAAQA,EAAG,QAAUA,EAAG,IAAMA,EAAG,MAAQA,EAAG,SAAWA,EAAG,SAAWA,EAAG,kBAAkBA,EAAG,SAAWA,EAAG,QAAUA,EAAG,iBAAiBA,EAAG,QAAUA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,OAASA,EAAG,SAAWA,EAAG,kBAAkBA,EAAG,SAAWA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,WAAaA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,OAASA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,QAAUA,EAAG,QAAUA,EAAG,KAAOA,EAAG,OAASA,EAAG,UAAYA,EAAG,SAAWA,EAAG,UAAYA,EAAG,OAASA,EAAG,UAAYA,EAAG,QAAUA,EAAG,UAAYA,EAAG,SAAWA,EAAG,kBAAkBA,EAAG,SAAWA,EAAG,OAASA,EAAG,cAAcA,EAAG,MAAQA,EAAG,QAAUA,EAAG,UAAYA,EAAG,WAAaA,EAAG,OAASA,EAAG,QAAUA,EAAG,MAAQA,EAAG,KAAOA,EAAG,OAASA,EAAG,KAAOA,EAAG,QAAUA,EAAG,SAAWA,EAAG,MAAQA,EAAG,QAAUA,EAAG,UAAYA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,cAAcA,EAAG,qBAAqBA,EAAG,cAAcA,EAAG,aAAaA,EAAG,oBAAoBA,EAAG,aAAaA,EAAG,WAAWA,EAAG,kBAAkBA,EAAG,WAAWA,EAAG,WAAWA,EAAG,kBAAkBA,EAAG,WAAWA,EAAG,eAAeA,EAAG,sBAAsBA,EAAG,eAAeA,EAAG,gBAAgBA,EAAG,uBAAuBA,EAAG,gBAAgBA,EAAG,QAAUA,EAAG,iBAAiBA,EAAG,QAAUA,EAAG,SAAWA,EAAG,kBAAkBA,EAAG,SAAWA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,KAAOA,EAAG,OAASA,EAAG,KAAOA,EAAG,SAAWA,EAAG,KAAOA,EAAG,UAAYA,EAAG,cAAgBA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,MAAQA,EAAG,MAAQA,EAAG,QAAUA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,OAASA,EAAG,MAAQA,EAAG,UAAYA,EAAG,SAAWA,EAAG,OAASA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,SAAWA,EAAG,kBAAkBA,EAAG,SAAWA,EAAG,YAAcA,EAAG,MAAQA,EAAG,OAASA,EAAG,SAAWA,EAAG,aAAeA,EAAG,cAAgBA,EAAG,OAASA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,SAAWA,EAAG,kBAAkBA,EAAG,SAAWA,EAAG,WAAaA,EAAG,WAAaA,EAAG,MAAQA,EAAG,OAASA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,WAAaA,EAAG,sBAAsBA,EAAG,WAAaA,EAAG,QAAUA,EAAG,MAAQA,EAAG,KAAOA,EAAG,SAAWA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,QAAUA,EAAG,iBAAiBA,EAAG,QAAUA,EAAG,MAAQA,EAAG,QAAUA,EAAG,KAAOA,EAAG,UAAYA,EAAG,mBAAmBA,EAAG,UAAYA,EAAG,SAAWA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,QAAUA,EAAG,gBAAgBA,EAAG,eAAeA,EAAG,UAAYA,EAAG,oBAAoBA,EAAG,UAAYA,EAAG,UAAYA,EAAG,IAAMA,EAAG,MAAQA,EAAG,WAAaA,EAAG,MAAQA,EAAG,KAAOA,EAAG,MAAQA,EAAG,gBAAgBA,EAAG,MAAQA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,OAASA,EAAG,OAASA,EAAG,iBAAiBA,EAAG,OAASA,EAAG,KAAOA,EAAG,cAAcA,EAAG,KAAOA,EAAG,QAAU,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQA,IAAK,iBAAiB,CAAC,EAAI,EAAE,KAAO,CAAC,eAAeA,IAAK,QAAU,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQA,IAAK,GAAKkgF,EAAG,SAAWA,EAAG,aAAeA,IAAK,GAAKK,EAAG,GAAKwB,EAAI,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,SAAW7B,EAAG,KAAOA,EAAG,SAAWA,EAAG,gBAAkBA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKlgF,EAAG,GAAKqgF,EAAG,IAAMrgF,EAAG,KAAOA,EAAG,IAAMA,EAAG,KAAOA,EAAG,OAASA,EAAG,IAAMA,EAAG,KAAOA,EAAG,MAAQA,EAAG,IAAMA,EAAG,eAAeA,EAAG,MAAQA,EAAG,IAAMA,EAAG,IAAMA,EAAG,WAAaA,EAAG,OAASA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,OAASA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,MAAQA,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,WAAakgF,EAAG,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOA,IAAK,SAAWA,EAAG,QAAUA,EAAG,QAAUA,EAAG,YAAcA,EAAG,GAAKA,EAAG,GAAKA,EAAG,QAAUA,EAAG,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,EAAIA,EAAG,IAAMA,IAAK,eAAe,CAAC,EAAI,EAAE,KAAO,CAAC,OAAS,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,MAAO,QAAUA,EAAG,QAAUA,EAAG,KAAOA,EAAG,OAAS,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,KAAOA,IAAK,QAAUA,EAAG,SAAWA,EAAG,mBAAqBA,EAAG,SAAWA,EAAG,QAAUA,EAAG,YAAcA,EAAG,UAAYA,EAAG,QAAUA,EAAG,OAASA,EAAG,SAAWA,EAAG,cAAgBA,EAAG,iBAAmBA,EAAG,UAAUA,EAAG,YAAYA,EAAG,OAASA,EAAG,aAAaA,EAAG,QAAUA,EAAG,QAAUA,EAAG,UAAYA,EAAG,SAAWA,EAAG,iBAAiBA,EAAG,iBAAiBA,EAAG,kBAAkBA,EAAG,YAAYA,EAAG,YAAYA,EAAG,cAAcA,EAAG,kBAAkBA,EAAG,eAAeA,EAAG,cAAcA,EAAG,WAAWA,EAAG,UAAUA,EAAG,WAAWA,EAAG,cAAcA,EAAG,eAAeA,EAAG,eAAeA,EAAG,eAAeA,EAAG,gBAAgBA,EAAG,WAAWA,EAAG,YAAYA,EAAG,YAAcA,EAAG,QAAUA,EAAG,WAAaA,EAAG,OAASA,EAAG,cAAgBA,EAAG,SAAWA,EAAG,SAAWA,EAAG,UAAYA,EAAG,eAAeA,EAAG,OAASA,EAAG,MAAQA,EAAG,UAAYA,EAAG,OAASA,EAAG,SAAWA,EAAG,OAASA,EAAG,YAAcA,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,KAAOA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAMA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAMA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAMA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,MAAQA,EAAG,GAAKA,EAAG,GAAKA,EAAG,MAAMA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,IAAK,OAASA,EAAG,iBAAmBA,EAAG,aAAeA,EAAG,cAAgB,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQA,EAAG,GAAKiB,EAAI,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,MAAQ,YAAcjB,EAAG,SAAWA,EAAG,SAASA,EAAG,SAASA,EAAG,GAAKA,EAAG,MAAQA,EAAG,SAAWA,EAAG,cAAcA,EAAG,eAAiBA,EAAG,QAAUA,EAAG,UAAUA,EAAG,cAAcA,EAAG,WAAaA,EAAG,iBAAmBA,EAAG,OAASA,EAAG,iBAAmBA,EAAG,OAASA,EAAG,aAAaA,EAAG,OAASA,EAAG,MAAQA,EAAG,MAAQA,EAAG,QAAQA,EAAG,MAAQA,EAAG,QAAUA,EAAG,OAASA,EAAG,cAAcA,EAAG,WAAaA,EAAG,MAAQA,EAAG,YAAYA,EAAG,QAAUA,EAAG,SAAWA,EAAG,QAAUS,EAAI,UAAYT,EAAG,YAAcA,EAAG,GAAKA,EAAG,QAAUA,EAAG,UAAYA,EAAG,QAAUA,EAAG,GAAKA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,SAAWkgF,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAKugF,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMvgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,EAAIA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,MAAQA,EAAG,IAAMA,EAAG,KAAOA,EAAG,KAAOA,EAAG,OAASA,EAAG,MAAQA,EAAG,IAAMA,EAAG,cAAgBA,EAAG,IAAMA,EAAG,GAAKA,EAAG,OAASA,EAAG,KAAOA,EAAG,WAAaA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,MAAQA,EAAG,IAAMA,EAAG,OAASA,EAAG,MAAQA,EAAG,GAAKA,EAAG,QAAUA,EAAG,OAASA,EAAG,UAAYA,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,MAAQA,EAAG,MAAQA,EAAG,MAAQA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,KAAOA,EAAG,KAAOA,EAAG,KAAOA,EAAG,GAAKA,EAAG,UAAYA,EAAG,GAAKA,EAAG,GAAKA,EAAG,KAAOA,EAAG,IAAMA,EAAG,KAAOA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,KAAOA,EAAG,KAAOA,EAAG,KAAOA,EAAG,KAAOA,EAAG,OAASA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,KAAOA,EAAG,IAAMA,EAAG,KAAOA,EAAG,SAAWA,EAAG,KAAOA,IAAK,SAAWA,EAAG,aAAaA,EAAG,OAASA,EAAG,QAAUA,EAAG,WAAaA,EAAG,UAAYA,EAAG,QAAUA,EAAG,WAAaA,EAAG,YAAcA,EAAG,UAAYA,EAAG,MAAQA,EAAG,QAAUA,EAAG,QAAUA,EAAG,MAAQA,EAAG,UAAYA,EAAG,OAASA,EAAG,IAAMA,EAAG,OAASA,EAAG,QAAUA,EAAG,QAAUA,EAAG,QAAUA,EAAG,MAAQA,EAAG,SAAWA,EAAG,eAAeA,EAAG,MAAQA,EAAG,OAASA,EAAG,kBAAkBA,EAAG,QAAUA,EAAG,QAAUA,EAAG,QAAUA,EAAG,SAAWA,EAAG,MAAQA,EAAG,QAAUA,EAAG,QAAUA,EAAG,WAAaA,EAAG,UAAYA,EAAG,MAAQA,EAAG,WAAaA,EAAG,MAAQA,EAAG,KAAOA,EAAG,OAASA,EAAG,QAAUA,EAAG,QAAUA,EAAG,SAAWA,EAAG,MAAQA,EAAG,OAASA,EAAG,MAAQA,EAAG,MAAQA,EAAG,QAAUA,EAAG,WAAaA,EAAG,SAAWA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,QAAUA,EAAG,MAAQA,EAAG,SAAWA,EAAG,KAAOA,EAAG,MAAQA,EAAG,OAASA,EAAG,OAASA,EAAG,QAAUA,EAAG,QAAUA,EAAG,MAAQA,EAAG,QAAUA,EAAG,UAAYA,EAAG,UAAYA,EAAG,WAAaA,EAAG,KAAOA,EAAG,KAAOA,EAAG,QAAUA,EAAG,SAAWA,EAAG,UAAYA,EAAG,QAAUA,EAAG,UAAYA,EAAG,WAAaA,EAAG,SAAWA,EAAG,UAAYA,EAAG,OAASA,EAAG,MAAQA,EAAG,WAAWA,EAAG,OAASA,EAAG,QAAUA,EAAG,MAAQA,EAAG,MAAQA,EAAG,MAAQA,EAAG,OAASA,EAAG,UAAYA,EAAG,eAAeA,EAAG,QAAUA,EAAG,aAAeA,EAAG,SAAWA,EAAG,QAAUA,EAAG,SAAWA,EAAG,WAAaA,EAAG,YAAcA,EAAG,SAAWA,EAAG,SAAWA,EAAG,WAAaA,EAAG,MAAQA,EAAG,MAAQA,EAAG,MAAQA,EAAG,MAAQA,EAAG,UAAYA,EAAG,OAASA,EAAG,SAAWA,EAAG,IAAMA,EAAG,OAASA,EAAG,OAASA,EAAG,MAAQA,EAAG,UAAYA,EAAG,UAAYA,EAAG,QAAUA,EAAG,QAAUA,EAAG,UAAYA,EAAG,MAAQA,EAAG,MAAQA,EAAG,MAAQA,EAAG,UAAYA,EAAG,KAAOkgF,EAAG,iBAAiBA,EAAG,UAAYA,EAAG,UAAYA,EAAG,SAAWA,EAAG,SAAWA,EAAG,QAAUA,EAAG,OAASA,EAAG,SAAWA,EAAG,OAASA,EAAG,UAAYA,EAAG,QAAUA,EAAG,GAAKA,EAAG,IAAMA,EAAG,QAAUA,EAAG,OAASA,EAAG,OAASA,EAAG,KAAOA,EAAG,SAAWA,EAAG,aAAeA,EAAG,IAAMA,EAAG,OAASA,EAAG,OAASA,EAAG,IAAMA,EAAG,MAAQA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,KAAOA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,KAAOA,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,KAAOA,EAAG,IAAMA,EAAG,KAAOA,EAAG,GAAKA,IAAK,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,OAASA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,MAAQA,EAAG,QAAUkgF,EAAG,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,IAAK,MAAQA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,KAAOA,EAAG,SAAWkgF,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKlgF,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,MAAQA,EAAG,QAAUkgF,EAAG,KAAOA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,SAAWkgF,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,SAAWkgF,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOlgF,EAAG,IAAMA,EAAG,KAAOA,EAAG,KAAOA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,MAAQA,EAAG,GAAKA,EAAG,IAAMA,EAAG,GAAKkgF,EAAG,KAAOA,EAAG,SAAWA,EAAG,MAAQA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKlgF,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,QAAU,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOkgF,IAAK,SAAWA,EAAG,GAAKA,EAAG,GAAKA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,QAAUA,EAAG,QAAUA,EAAG,UAAYA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,SAAWA,EAAG,OAASA,EAAG,SAAWA,EAAG,SAAWA,EAAG,OAASA,EAAG,SAAWA,EAAG,IAAMA,EAAG,MAAQA,EAAG,QAAUA,EAAG,IAAMA,EAAG,WAAaA,EAAG,IAAMA,EAAG,YAAcA,EAAG,SAAWA,EAAG,SAAWA,EAAG,KAAOA,EAAG,SAAWA,EAAG,aAAeuB,EAAI,OAAS,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUrB,EAAG,QAAUA,EAAG,SAAWA,EAAG,IAAMA,IAAK,QAAU,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKF,IAAK,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,IAAK,MAAQA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKlgF,EAAG,GAAKA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAKmgF,EAAG,GAAKA,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMngF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,KAAOA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,EAAIA,EAAG,GAAKA,EAAG,EAAIA,EAAG,GAAKA,EAAG,MAAQA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAO,EAAIA,EAAG,GAAKA,EAAG,KAAOA,EAAG,IAAMA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,QAAUA,EAAG,gBAAkBA,EAAG,OAASA,EAAG,EAAIA,EAAG,OAASA,EAAG,EAAIA,EAAG,EAAIA,EAAG,eAAiBA,EAAG,EAAIA,EAAG,IAAMA,EAAG,EAAIA,EAAG,MAAQA,EAAG,GAAKA,EAAG,MAAQA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,GAAKA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,EAAIA,EAAG,IAAMkgF,EAAG,SAAWA,EAAG,KAAOA,EAAG,OAASA,EAAG,aAAeA,EAAG,aAAeA,EAAG,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,MAAO,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,SAAWkgF,EAAG,SAAWA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMkgF,EAAG,SAAWA,EAAG,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,IAAMA,EAAG,GAAKA,EAAG,GAAKA,IAAK,IAAMA,EAAG,IAAMA,EAAG,SAAWA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,OAASA,EAAG,QAAUA,EAAG,SAAWA,IAAK,GAAKlgF,EAAG,GAAKqgF,EAAG,GAAKF,EAAG,GAAKngF,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,MAAQA,EAAG,KAAOA,EAAG,SAAWkgF,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMkgF,IAAK,GAAKlgF,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,IAAMA,EAAG,UAAYA,EAAG,IAAMA,EAAG,UAAYA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,SAAWA,EAAG,QAAUA,EAAG,MAAQA,EAAG,KAAOkgF,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,SAAWA,EAAG,QAAUA,EAAG,WAAaA,EAAG,YAAcA,EAAG,QAAUA,EAAG,SAAWA,EAAG,WAAaA,EAAG,SAAWA,EAAG,UAAYA,EAAG,QAAUA,EAAG,QAAUA,EAAG,SAAWA,EAAG,SAAWA,EAAG,kBAAkBA,EAAG,MAAQA,EAAG,QAAUA,EAAG,OAASA,EAAG,QAAUA,EAAG,OAASA,EAAG,SAAWA,EAAG,OAASA,EAAG,QAAUA,EAAG,UAAYA,EAAG,QAAUA,EAAG,UAAYA,EAAG,UAAYA,EAAG,OAASA,EAAG,SAAWA,EAAG,MAAQA,EAAG,WAAaA,EAAG,SAAWA,EAAG,IAAMA,EAAG,SAAWA,EAAG,QAAUA,EAAG,MAAQA,EAAG,mBAAmBA,EAAG,IAAMA,EAAG,QAAUA,EAAG,MAAQA,EAAG,SAAWA,EAAG,MAAQA,EAAG,IAAMA,EAAG,SAAWA,EAAG,OAASA,EAAG,UAAYA,EAAG,QAAUA,EAAG,YAAcA,EAAG,KAAOA,EAAG,KAAOA,EAAG,YAAcA,EAAG,SAAWA,EAAG,QAAUA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAKsgF,EAAG,GAAKwB,EAAI,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAK9hF,EAAG,GAAKA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKkgF,EAAG,GAAKA,EAAG,GAAKA,IAAK,GAAKG,EAAG,IAAMrgF,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMkgF,IAAK,GAAKlgF,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAMA,EAAG,GAAKA,EAAG,OAASkgF,EAAG,KAAOA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKlgF,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,IAAK,GAAKA,EAAG,GAAKsgF,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMtgF,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,KAAOA,EAAG,OAASA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,MAAQA,EAAG,QAAUA,EAAG,YAAckgF,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMkgF,EAAG,IAAMA,EAAG,QAAUA,EAAG,aAAeU,EAAI,KAAOV,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMqgF,EAAG,GAAKrgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,GAAKsgF,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKtgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,KAAOA,EAAG,KAAOA,EAAG,OAASA,EAAG,OAASA,EAAG,KAAOA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,OAASkgF,EAAG,cAAcA,EAAG,aAAaA,EAAG,aAAaA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,SAAWkgF,IAAK,IAAMlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,KAAOA,EAAG,KAAOA,EAAG,eAAeA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,IAAMkgF,EAAG,SAAWA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKlgF,EAAG,GAAKA,EAAG,GAAKA,EAAG,MAAQA,EAAG,KAAOA,EAAG,GAAKA,EAAG,IAAMA,EAAG,KAAOA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,UAAYA,EAAG,SAAWA,EAAG,UAAYA,EAAG,UAAYA,EAAG,WAAaA,EAAG,WAAaA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,OAASA,EAAG,GAAKA,EAAG,GAAKA,EAAG,eAAiBA,EAAG,eAAiBA,EAAG,QAAUA,EAAG,GAAKA,EAAG,GAAKA,EAAG,kBAAkBA,EAAG,GAAKA,EAAG,QAAUA,EAAG,QAAUA,EAAG,QAAUA,EAAG,aAAeA,EAAG,aAAeA,EAAG,KAAOA,EAAG,WAAaA,EAAG,GAAKA,EAAG,GAAKA,EAAG,KAAOA,EAAG,GAAKA,EAAG,GAAKA,EAAG,KAAOA,EAAG,GAAKA,EAAG,GAAKA,EAAG,QAAUA,EAAG,MAAQA,EAAG,GAAKA,EAAG,KAAOA,EAAG,GAAKA,EAAG,SAAWA,EAAG,SAAWA,EAAG,GAAKA,EAAG,MAAQA,EAAG,OAASA,EAAG,GAAKA,EAAG,QAAUA,EAAG,MAAQA,EAAG,MAAQA,EAAG,GAAKA,EAAG,GAAKA,EAAG,WAAaA,EAAG,WAAaA,EAAG,GAAKA,EAAG,KAAOA,EAAG,GAAKA,EAAG,SAAWA,EAAG,GAAKA,EAAG,SAAWA,EAAG,QAAUA,EAAG,UAAYA,EAAG,GAAKA,EAAG,MAAQA,EAAG,MAAQA,EAAG,YAAcA,EAAG,aAAeA,EAAG,SAAWA,EAAG,SAAWA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKkgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,GAAKA,EAAG,GAAKA,EAAG,EAAIA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKlgF,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,SAAWkgF,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKlgF,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKkgF,EAAG,GAAKA,IAAK,SAAWA,EAAG,WAAasB,EAAI,MAAQtB,EAAG,YAAcA,EAAG,UAAY2B,EAAI,UAAU3B,EAAG,QAAQA,EAAG,cAAgBA,EAAG,MAAQA,EAAG,aAAeA,EAAG,QAAUA,IAAK,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,SAAWA,EAAG,QAAUA,EAAG,IAAMA,EAAG,WAAaA,IAAK,IAAMlgF,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOkgF,EAAG,IAAMA,EAAG,KAAOA,EAAG,gBAAkBA,EAAG,YAAcA,EAAG,cAAgBA,IAAK,IAAMlgF,EAAG,OAASA,EAAG,IAAMugF,EAAG,KAAOL,EAAG,MAAQA,EAAG,KAAOA,EAAG,yBAAyBA,EAAG,sBAAsBA,EAAG,sBAAsBA,EAAG,oBAAoBA,EAAG,qBAAqBA,EAAG,iBAAiBA,EAAG,mBAAmBA,EAAG,MAAQA,EAAG,MAAQA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,GAAKsiF,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMtiF,EAAG,GAAKA,EAAG,IAAMkgF,IAAK,GAAKoC,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKC,EAAI,GAAKD,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMtiF,EAAG,KAAOA,EAAG,OAASA,IAAK,GAAKA,EAAG,IAAMA,IAAK,GAAKsiF,EAAI,GAAKA,EAAI,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMtiF,EAAG,GAAKA,EAAG,IAAMA,EAAG,YAAYA,EAAG,IAAMA,EAAG,IAAMA,EAAG,MAAQA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,UAAYA,IAAK,GAAKsiF,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKC,EAAI,GAAKD,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKC,EAAI,GAAKD,EAAI,GAAKC,EAAI,GAAKD,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKtiF,IAAK,GAAKsiF,EAAI,QAAUpC,EAAG,QAAUA,EAAG,KAAOA,EAAG,QAAQA,EAAG,cAAcA,EAAG,eAAeA,EAAG,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,IAAK,SAAWA,EAAG,SAAWA,EAAG,QAAUA,EAAG,KAAOA,EAAG,QAAUA,EAAG,SAAWA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMG,EAAG,IAAMrgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAKA,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,EAAIkgF,IAAK,KAAKA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOlgF,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,MAAQA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKkgF,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,KAAOA,EAAG,KAAOA,EAAG,IAAMA,EAAG,OAASA,EAAG,SAAWkgF,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKkgF,EAAG,KAAOA,EAAG,IAAMA,EAAG,GAAKA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,QAAUogF,EAAG,QAAUF,EAAG,OAASA,EAAG,OAASA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,IAAK,iBAAiBlgF,EAAG,OAASA,EAAG,aAAaA,EAAG,IAAMA,EAAG,iBAAiBA,EAAG,MAAQA,EAAG,WAAWA,EAAG,GAAKA,EAAG,mBAAmBA,EAAG,QAAUA,EAAG,YAAYA,EAAG,IAAMA,EAAG,aAAaA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,kBAAkBA,EAAG,QAAUA,EAAG,aAAaA,EAAG,IAAMA,EAAG,YAAYA,EAAG,GAAKA,EAAG,YAAYA,EAAG,GAAKA,EAAG,oBAAoBA,EAAG,UAAYA,EAAG,WAAWA,EAAG,GAAKA,EAAG,WAAWA,EAAG,GAAKA,EAAG,cAAc,CAAC,EAAI,EAAE,KAAO,CAAC,aAAaA,EAAG,cAAcA,EAAG,aAAaA,EAAG,aAAaA,EAAG,aAAaA,EAAG,aAAaA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,IAAK,cAAcA,EAAG,KAAOA,EAAG,cAAcA,EAAG,KAAOA,EAAG,eAAeA,EAAG,KAAOA,EAAG,iBAAiBA,EAAG,OAASA,EAAG,gBAAgBA,EAAG,MAAQA,EAAG,eAAeA,EAAG,KAAOA,EAAG,iBAAiBA,EAAG,MAAQA,EAAG,cAAcA,EAAG,KAAOA,EAAG,cAAcA,EAAG,KAAOA,EAAG,iBAAiBA,EAAG,MAAQA,EAAG,gBAAgBA,EAAG,MAAQA,EAAG,cAAcA,EAAG,KAAOA,EAAG,cAAcA,EAAG,KAAOA,EAAG,cAAcA,EAAG,KAAOA,EAAG,oBAAoBA,EAAG,QAAUA,EAAG,kBAAkBA,EAAG,MAAQA,EAAG,iBAAiBA,EAAG,MAAQA,EAAG,cAAcA,EAAG,KAAOA,EAAG,iBAAiBA,EAAG,OAASA,EAAG,eAAeA,EAAG,GAAKA,EAAG,cAAcA,EAAG,IAAMA,EAAG,aAAaA,EAAG,IAAMA,EAAG,gBAAgBA,EAAG,KAAOA,EAAG,mBAAmBA,EAAG,OAASA,EAAG,kBAAkBA,EAAG,OAASA,EAAG,YAAYA,EAAG,IAAMA,EAAG,YAAYA,EAAG,IAAMA,EAAG,cAAcA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,iBAAiBA,EAAG,OAASA,EAAG,eAAeA,EAAG,KAAOA,EAAG,oBAAoBA,EAAG,QAAUA,EAAG,qBAAqBA,EAAG,QAAUA,EAAG,gBAAgBA,EAAG,OAASA,EAAG,aAAa,CAAC,EAAI,EAAE,KAAO,CAAC,WAAWA,EAAG,YAAYA,EAAG,YAAYA,EAAG,WAAWA,EAAG,YAAYA,EAAG,WAAWA,IAAK,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,GAAKA,IAAK,WAAWA,EAAG,GAAKA,EAAG,aAAaA,EAAG,IAAMA,EAAG,oBAAoBA,EAAG,SAAWA,EAAG,sBAAsBA,EAAG,SAAWA,EAAG,sBAAsBA,EAAG,SAAWA,EAAG,mBAAmBA,EAAG,SAAWA,EAAG,eAAeA,EAAG,MAAQA,EAAG,gBAAgBA,EAAG,IAAMA,EAAG,yBAAyBA,EAAG,YAAcA,EAAG,eAAeA,EAAG,MAAQA,EAAG,eAAeA,EAAG,MAAQA,EAAG,aAAa,CAAC,EAAI,EAAE,KAAO,CAAC,gBAAgBA,EAAG,mBAAmBA,EAAG,gBAAgBA,EAAG,cAAcA,EAAG,eAAeA,EAAG,kBAAkBA,IAAK,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQA,EAAG,OAASA,EAAG,OAASA,EAAG,KAAOA,EAAG,KAAOA,EAAG,OAASA,IAAK,cAAcA,EAAG,KAAOA,EAAG,cAAcA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,YAAYA,EAAG,IAAMA,EAAG,eAAeA,EAAG,MAAQA,EAAG,IAAMA,EAAG,GAAK8hF,EAAI,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAK9hF,EAAG,MAAQA,EAAG,IAAMA,EAAG,GAAKqgF,EAAG,IAAMrgF,EAAG,IAAMA,EAAG,QAAUA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,OAASA,EAAG,GAAKA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,GAAK,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,IAAK,IAAMA,EAAG,KAAOA,EAAG,OAASA,EAAG,IAAMA,EAAG,OAASA,EAAG,OAASA,EAAG,IAAMA,EAAG,KAAOA,EAAG,QAAUA,EAAG,SAAWA,EAAG,QAAU,CAAC,EAAI,EAAE,KAAO,CAAC,SAAWkgF,IAAK,UAAYlgF,EAAG,WAAaA,EAAG,YAAcA,EAAG,IAAMA,EAAG,MAAQA,EAAG,KAAOA,EAAG,IAAMA,EAAG,MAAQA,EAAG,IAAMA,EAAG,MAAQA,EAAG,IAAMA,EAAG,OAASA,EAAG,QAAUA,EAAG,OAASA,EAAG,IAAMA,EAAG,OAASA,EAAG,SAAWA,EAAG,OAASA,EAAG,KAAOA,EAAG,UAAYA,EAAG,QAAUA,EAAG,OAASA,EAAG,UAAYA,EAAG,SAAWA,EAAG,KAAOA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,gBAAkBA,EAAG,eAAiBA,EAAG,KAAOA,EAAG,MAAQA,EAAG,MAAQA,EAAG,UAAYA,EAAG,UAAYA,EAAG,QAAUA,EAAG,OAASA,EAAG,IAAMA,EAAG,IAAMA,EAAG,WAAaA,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQogF,EAAG,MAAQF,EAAG,WAAaA,EAAG,MAAQA,EAAG,UAAYA,EAAG,KAAOA,EAAG,eAAiBA,EAAG,UAAYA,EAAG,KAAOA,EAAG,YAAcA,EAAG,QAAUA,EAAG,aAAeA,EAAG,OAASA,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,IAAS,IAAMA,EAAG,OAASA,EAAG,UAAYA,EAAG,SAAWA,EAAG,QAAUA,EAAG,UAAYE,EAAG,KAAOF,EAAG,WAAaE,EAAG,QAAUF,EAAG,UAAYA,EAAG,OAASA,EAAG,WAAaA,IAAK,MAAQlgF,EAAG,UAAYA,EAAG,KAAOA,EAAG,OAASA,EAAG,MAAQA,EAAG,KAAOA,EAAG,IAAMA,EAAG,KAAOA,EAAG,KAAOA,EAAG,WAAaA,EAAG,QAAUA,EAAG,SAAWA,EAAG,QAAUA,EAAG,KAAOA,EAAG,QAAUA,EAAG,MAAQA,EAAG,QAAUA,EAAG,OAASA,EAAG,KAAOA,EAAG,MAAQA,EAAG,QAAUA,EAAG,IAAMA,EAAG,IAAMA,EAAG,MAAQA,EAAG,KAAOA,EAAG,MAAQA,EAAG,QAAUA,EAAG,eAAiBA,EAAG,KAAOA,EAAG,KAAOA,EAAG,IAAMA,EAAG,UAAYA,EAAG,YAAcA,EAAG,SAAWA,EAAG,SAAWA,EAAG,SAAWA,EAAG,SAAWA,EAAG,WAAa,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMkgF,EAAG,GAAKA,IAAK,QAAUlgF,EAAG,OAASA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,MAAQA,EAAG,OAASA,EAAG,KAAOA,EAAG,QAAUA,EAAG,OAASA,EAAG,KAAOA,EAAG,QAAUA,EAAG,IAAMA,EAAG,OAASA,EAAG,MAAQA,EAAG,IAAMA,EAAG,KAAOA,EAAG,KAAOA,EAAG,MAAQA,EAAG,IAAMA,EAAG,MAAQA,EAAG,YAAcA,EAAG,YAAcA,EAAG,KAAOA,EAAG,UAAYA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,WAAaA,EAAG,MAAQA,EAAG,WAAaA,EAAG,KAAOA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,KAAOA,EAAG,QAAUA,EAAG,MAAQA,EAAG,OAASA,EAAG,OAASA,EAAG,IAAMA,EAAG,SAAWA,EAAG,IAAMA,EAAG,SAAWA,EAAG,YAAcA,EAAG,SAAWA,EAAG,OAASA,EAAG,QAAUA,EAAG,SAAWA,EAAG,QAAUA,EAAG,MAAQA,EAAG,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,UAAYkgF,IAAK,SAAWO,EAAI,IAAMzgF,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,KAAOA,EAAG,YAAcA,EAAG,IAAMA,EAAG,OAASA,EAAG,KAAOA,EAAG,eAAiBA,EAAG,MAAQA,EAAG,SAAWA,EAAG,QAAUA,EAAG,WAAaA,EAAG,IAAMA,EAAG,QAAUA,EAAG,MAAQA,EAAG,KAAOA,EAAG,OAASA,EAAG,QAAUA,EAAG,KAAOA,EAAG,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKkgF,MAAO,KAAOlgF,EAAG,KAAOA,EAAG,OAASA,EAAG,SAAWA,EAAG,SAAWA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,OAASA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,OAASA,EAAG,QAAUA,EAAG,QAAUA,EAAG,MAAQA,EAAG,KAAOA,EAAG,MAAQA,EAAG,QAAUA,EAAG,UAAYA,EAAG,OAASA,EAAG,OAASA,EAAG,SAAWA,EAAG,OAASA,EAAG,MAAQA,EAAG,QAAUA,EAAG,KAAOA,EAAG,MAAQA,EAAG,KAAOA,EAAG,SAAWA,EAAG,OAASA,EAAG,SAAWA,EAAG,MAAQA,EAAG,OAASA,EAAG,SAAWA,EAAG,SAAWA,EAAG,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,OAASogF,EAAG,UAAYF,EAAG,QAAU,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,IAAK,QAAUE,EAAG,QAAUF,EAAG,QAAU,CAAC,EAAI,EAAE,KAAO,CAAC,OAAOA,IAAK,OAASA,EAAG,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,IAAK,KAAOA,EAAG,aAAa,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,MAAO,IAAMA,IAAK,QAAU,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,IAAK,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,GAAKA,IAAK,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,IAAK,QAAU,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,GAAKA,EAAG,GAAKA,IAAK,aAAe,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,GAAKA,IAAK,SAAWA,EAAG,SAAWA,EAAG,SAAWA,EAAG,YAAcE,EAAG,UAAYF,EAAG,MAAQA,EAAG,aAAaE,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,UAAY,CAAC,EAAI,EAAE,KAAO,CAAC,WAAWF,EAAG,WAAWA,EAAG,WAAWA,IAAK,SAAS,CAAC,EAAI,EAAE,KAAO,CAAC,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,UAAYA,IAAK,IAAMQ,EAAI,GAAKR,EAAG,aAAaA,EAAG,IAAMA,IAAK,UAAY,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOA,EAAG,IAAMA,IAAK,IAAMA,EAAG,SAAS,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMQ,EAAI,GAAKR,EAAG,aAAaA,EAAG,IAAMA,IAAK,SAAS,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMQ,EAAI,GAAKR,EAAG,aAAaA,IAAK,UAAYA,EAAG,cAAgBA,IAAK,WAAaE,EAAG,YAAcF,EAAG,MAAQA,EAAG,UAAYA,IAAK,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUA,EAAG,KAAOA,EAAG,MAAQA,EAAG,KAAOA,IAAK,QAAUlgF,EAAG,MAAQA,EAAG,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMogF,IAAK,OAASpgF,EAAG,QAAUA,EAAG,QAAUA,EAAG,QAAUA,EAAG,SAAWA,EAAG,UAAY,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMkgF,EAAG,QAAUA,EAAG,QAAUA,IAAK,QAAUlgF,EAAG,QAAUA,EAAG,SAAWA,EAAG,OAASA,EAAG,OAASA,EAAG,aAAeA,EAAG,WAAaA,EAAG,QAAUA,EAAG,YAAcA,EAAG,QAAUA,EAAG,eAAiBA,EAAG,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,UAAYkgF,EAAG,GAAKA,IAAK,QAAUlgF,EAAG,QAAUA,EAAG,OAASA,EAAG,QAAUA,EAAG,QAAUA,EAAG,IAAMA,EAAG,OAASA,EAAG,WAAaA,EAAG,YAAcA,EAAG,QAAUA,EAAG,MAAQA,EAAG,IAAMA,EAAG,OAASA,EAAG,QAAUA,EAAG,WAAaA,EAAG,MAAQA,EAAG,KAAOA,EAAG,MAAQA,EAAG,IAAMA,EAAG,MAAQA,EAAG,KAAOA,EAAG,KAAOA,EAAG,OAASA,EAAG,OAASA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,KAAOA,EAAG,OAASA,EAAG,MAAQA,EAAG,OAASA,EAAG,SAAWA,EAAG,KAAOA,EAAG,SAAWA,EAAG,MAAQA,EAAG,SAAWA,EAAG,OAASA,EAAG,QAAUA,EAAG,KAAOA,EAAG,OAAS,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMkgF,IAAK,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,IAAME,EAAG,SAAWA,EAAG,IAAMA,EAAG,SAAWA,EAAG,MAAQF,EAAG,QAAUA,EAAG,KAAOA,EAAG,KAAOA,EAAG,eAAeA,EAAG,KAAOA,EAAG,IAAMA,EAAG,cAAgBA,EAAG,QAAUE,EAAG,MAAQF,EAAG,UAAY,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOE,IAAK,UAAYF,EAAG,UAAYA,EAAG,cAAcA,EAAG,YAAcA,EAAG,OAASA,EAAG,QAAUE,IAAK,IAAMpgF,EAAG,SAAWA,EAAG,KAAOA,EAAG,QAAU,CAAC,EAAI,EAAE,KAAO,CAAC,UAAY,CAAC,EAAI,EAAE,KAAO,CAAC,OAASkgF,MAAO,OAASlgF,EAAG,UAAYA,EAAG,SAAWA,EAAG,SAAWA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,OAASA,EAAG,IAAMA,EAAG,QAAUA,EAAG,IAAMA,EAAG,SAAWA,EAAG,MAAQA,EAAG,IAAMA,EAAG,MAAQA,EAAG,OAASA,EAAG,OAASA,EAAG,OAASA,EAAG,KAAOA,EAAG,IAAMA,EAAG,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,IAAIkgF,EAAG,IAAME,MAAO,IAAMpgF,EAAG,IAAMA,EAAG,MAAQA,EAAG,UAAYygF,EAAI,MAAQzgF,EAAG,OAASA,EAAG,OAASA,EAAG,SAAWA,EAAG,YAAcA,EAAG,YAAcA,EAAG,MAAQA,EAAG,UAAYA,EAAG,SAAWA,EAAG,KAAOA,EAAG,IAAMA,EAAG,OAAS,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUogF,IAAK,SAAWpgF,EAAG,WAAaA,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQ0hF,IAAM,OAAS,CAAC,EAAI,EAAE,KAAO,CAAC,OAASxB,EAAG,GAAKA,IAAK,SAAWlgF,EAAG,OAASA,EAAG,QAAUA,EAAG,QAAUA,EAAG,WAAaA,EAAG,KAAOA,EAAG,KAAOA,EAAG,UAAYA,EAAG,MAAQ2hF,EAAI,OAAS3hF,EAAG,IAAMA,EAAG,KAAOA,EAAG,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQkgF,IAAK,QAAUlgF,EAAG,QAAU,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKkgF,IAAK,KAAOlgF,EAAG,MAAQA,EAAG,SAAWA,EAAG,QAAUA,EAAG,QAAUA,EAAG,KAAOA,EAAG,SAAWA,EAAG,KAAOA,EAAG,KAAOA,EAAG,MAAQA,EAAG,QAAUA,EAAG,UAAYygF,EAAI,KAAOzgF,EAAG,UAAYA,EAAG,SAAWA,EAAG,KAAOA,EAAG,QAAUA,EAAG,IAAMA,EAAG,QAAUA,EAAG,OAASA,EAAG,QAAUA,EAAG,KAAOA,EAAG,QAAUA,EAAG,QAAUA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,YAAcA,EAAG,SAAWA,EAAG,KAAOA,EAAG,MAAQA,EAAG,QAAUA,EAAG,MAAQA,EAAG,WAAaA,EAAG,IAAMA,EAAG,KAAOA,EAAG,UAAYA,EAAG,IAAMA,EAAG,QAAUA,EAAG,UAAYA,EAAG,SAAWA,EAAG,IAAMA,EAAG,QAAUA,EAAG,IAAMA,EAAG,KAAOA,EAAG,UAAYA,EAAG,OAASA,EAAG,IAAMA,EAAG,IAAMA,EAAG,QAAUA,EAAG,MAAQA,EAAG,OAASA,EAAG,KAAOA,EAAG,MAAQA,EAAG,IAAMA,EAAG,OAASA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOkgF,IAAK,IAAMlgF,EAAG,KAAOA,EAAG,QAAUA,EAAG,OAASA,EAAG,KAAOA,EAAG,KAAOA,EAAG,MAAQA,EAAG,MAAQA,EAAG,OAASA,EAAG,MAAQA,EAAG,IAAMA,EAAG,OAASA,EAAG,MAAQA,EAAG,MAAQA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,QAAUA,EAAG,KAAOA,EAAG,UAAYA,EAAG,KAAOA,EAAG,IAAMA,EAAG,SAAWA,EAAG,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQkgF,EAAG,UAAYA,EAAG,YAAcE,IAAK,OAASpgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,SAAWA,EAAG,SAAWA,EAAG,OAASA,EAAG,MAAQA,EAAG,MAAQA,EAAG,QAAUA,EAAG,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,UAAYkgF,IAAK,SAAWlgF,EAAG,MAAQA,EAAG,KAAOA,EAAG,MAAQA,EAAG,QAAUA,EAAG,KAAOA,EAAG,KAAOA,EAAG,QAAUA,EAAG,QAAUA,EAAG,KAAOA,EAAG,IAAMA,EAAG,KAAOA,EAAG,SAAWA,EAAG,OAAS,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMkgF,IAAK,WAAalgF,EAAG,KAAOA,EAAG,SAAWA,EAAG,KAAOA,EAAG,OAASA,EAAG,KAAOA,EAAG,OAASA,EAAG,UAAYA,EAAG,QAAUA,EAAG,IAAMA,EAAG,IAAMA,EAAG,OAASA,EAAG,SAAWA,EAAG,QAAUA,EAAG,UAAYA,EAAG,UAAYA,EAAG,MAAQA,EAAG,UAAYA,EAAG,MAAQA,EAAG,MAAQA,EAAG,SAAWA,EAAG,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,YAAckgF,EAAG,SAAWA,EAAG,UAAYA,EAAG,QAAUA,EAAG,OAASA,EAAG,QAAUA,EAAG,QAAUA,EAAG,KAAOA,EAAG,SAAWA,EAAG,OAASA,EAAG,KAAOA,IAAK,QAAU,CAAC,EAAI,EAAE,KAAO,CAAC,UAAYA,IAAK,IAAMlgF,EAAG,QAAUA,EAAG,OAASA,EAAG,QAAUA,EAAG,MAAQA,EAAG,IAAMA,EAAG,KAAOA,EAAG,OAASA,EAAG,MAAQA,EAAG,QAAUA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,MAAQA,EAAG,OAASA,EAAG,KAAOA,EAAG,KAAOA,EAAG,WAAaA,EAAG,IAAMA,EAAG,WAAaA,EAAG,SAAWA,EAAG,IAAMA,EAAG,IAAMA,EAAG,UAAYA,EAAG,UAAYA,EAAG,OAASA,EAAG,cAAgBA,EAAG,OAASA,EAAG,YAAcA,EAAG,SAAWA,EAAG,MAAQA,EAAG,QAAUA,EAAG,IAAMA,EAAG,SAAWA,EAAG,KAAOA,EAAG,IAAMA,EAAG,OAASA,EAAG,KAAOA,EAAG,IAAMA,EAAG,KAAOA,EAAG,MAAQA,EAAG,QAAUA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,OAASA,EAAG,IAAMA,EAAG,IAAMA,EAAG,SAAWA,EAAG,KAAOA,EAAG,OAASA,EAAG,QAAUA,EAAG,OAASA,EAAG,KAAOA,EAAG,YAAcA,EAAG,eAAiBA,EAAG,gBAAkBA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,OAASA,EAAG,OAASA,EAAG,QAAUA,EAAG,KAAOA,EAAG,MAAQA,EAAG,QAAUA,EAAG,OAASA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKkgF,EAAG,IAAMA,IAAK,KAAOlgF,EAAG,UAAYA,EAAG,MAAQA,EAAG,QAAUA,EAAG,YAAcA,EAAG,MAAQA,EAAG,UAAYA,EAAG,OAASA,EAAG,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,OAAS,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMkgF,EAAG,MAAQA,MAAO,UAAYlgF,EAAG,QAAUA,EAAG,QAAUA,EAAG,IAAMA,EAAG,OAASA,EAAG,QAAUA,EAAG,IAAMA,EAAG,OAASA,EAAG,IAAMA,EAAG,MAAQA,EAAG,QAAUA,EAAG,OAASA,EAAG,MAAQA,EAAG,KAAOA,EAAG,MAAQA,EAAG,KAAOA,EAAG,KAAOA,EAAG,KAAOA,EAAG,cAAgBA,EAAG,UAAYA,EAAG,SAAWA,EAAG,KAAOA,EAAG,MAAQA,EAAG,QAAUA,EAAG,KAAOA,EAAG,QAAUA,EAAG,MAAQA,EAAG,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOkgF,EAAG,MAAQA,EAAG,KAAOE,IAAK,MAAQpgF,EAAG,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMkgF,IAAK,OAASlgF,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,MAAQA,EAAG,OAASA,EAAG,MAAQA,EAAG,KAAOA,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMkgF,IAAK,OAAS,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKA,EAAG,GAAKA,IAAK,MAAQlgF,EAAG,MAAQA,EAAG,KAAOA,EAAG,IAAMA,EAAG,aAAeA,EAAG,IAAMA,EAAG,KAAOA,EAAG,SAAWA,EAAG,KAAOA,EAAG,OAASA,EAAG,MAAQA,EAAG,OAASA,EAAG,KAAOA,EAAG,OAASA,EAAG,OAASA,EAAG,IAAMA,EAAG,WAAa,CAAC,EAAI,EAAE,KAAO,CAAC,OAASkgF,IAAK,MAAQlgF,EAAG,IAAMA,EAAG,OAASA,EAAG,UAAY,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOkgF,EAAG,KAAOA,IAAK,QAAUlgF,EAAG,SAAWA,EAAG,UAAYA,EAAG,SAAWA,EAAG,OAASA,EAAG,IAAMA,EAAG,SAAWA,EAAG,IAAMA,EAAG,MAAQiiF,EAAI,KAAOjiF,EAAG,UAAYA,EAAG,KAAOA,EAAG,SAAWA,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMkgF,EAAG,OAASA,IAAK,KAAOgC,EAAI,SAAWliF,EAAG,MAAQA,EAAG,UAAYA,EAAG,KAAOA,EAAG,KAAOA,EAAG,IAAMA,EAAG,WAAaA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,OAASA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMkgF,EAAG,IAAMA,IAAK,OAASlgF,EAAG,MAAQA,EAAG,QAAUA,EAAG,OAASA,EAAG,SAAWA,EAAG,OAASA,EAAG,KAAOA,EAAG,YAAcA,EAAG,IAAMA,EAAG,MAAQA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,MAAQA,EAAG,OAASA,EAAG,IAAMA,EAAG,OAASA,EAAG,OAASA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,QAAUA,EAAG,QAAUA,EAAG,QAAU,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQogF,EAAG,GAAKF,EAAG,KAAOA,EAAG,QAAUA,EAAG,KAAOA,IAAK,QAAUlgF,EAAG,IAAMA,EAAG,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,WAAakgF,IAAK,KAAOlgF,EAAG,WAAaA,EAAG,MAAQA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,KAAOA,EAAG,MAAQA,EAAG,MAAQA,EAAG,OAASA,EAAG,OAASA,EAAG,MAAQA,EAAG,mBAAqBA,EAAG,OAASA,EAAG,IAAMA,EAAG,OAASA,EAAG,MAAQA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,SAAWA,EAAG,OAASA,EAAG,QAAUA,EAAG,OAASA,EAAG,YAAcA,EAAG,QAAUA,EAAG,KAAOA,EAAG,MAAQA,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUkgF,IAAK,IAAMA,EAAG,MAAQA,EAAG,QAAUA,EAAG,SAAWA,IAAK,IAAMlgF,EAAG,IAAMA,EAAG,OAAS,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOkgF,EAAG,aAAaA,EAAG,MAAQA,IAAK,IAAMlgF,EAAG,KAAOA,EAAG,OAASA,EAAG,OAAS,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOkgF,IAAK,QAAUlgF,EAAG,QAAUA,EAAG,MAAQA,EAAG,OAASA,EAAG,IAAMA,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUkgF,IAAK,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,KAAOA,EAAG,WAAaA,EAAG,SAAWA,EAAG,KAAOA,EAAG,MAAQA,EAAG,MAAQA,EAAG,MAAQA,EAAG,OAASA,IAAK,UAAYlgF,EAAG,MAAQA,EAAG,KAAOA,EAAG,SAAWA,EAAG,MAAQA,EAAG,MAAQ2hF,EAAI,UAAY3hF,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,OAASA,EAAG,SAAWA,EAAG,IAAMA,EAAG,QAAUA,EAAG,MAAQA,EAAG,MAAQA,EAAG,YAAcA,EAAG,OAASiiF,EAAI,OAASjiF,EAAG,KAAOA,EAAG,OAASA,EAAG,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOkgF,IAAK,IAAMlgF,EAAG,IAAMA,EAAG,KAAOA,EAAG,KAAOA,EAAG,QAAUA,EAAG,MAAQA,EAAG,MAAQygF,EAAI,KAAOzgF,EAAG,YAAcA,EAAG,SAAWA,EAAG,KAAOA,EAAG,IAAMA,EAAG,KAAOA,EAAG,MAAQA,EAAG,QAAUA,EAAG,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQkgF,IAAK,UAAYlgF,EAAG,MAAQA,EAAG,MAAQA,EAAG,MAAQA,EAAG,KAAOA,EAAG,YAAcA,EAAG,KAAOA,EAAG,YAAcA,EAAG,MAAQA,EAAG,WAAaA,EAAG,SAAWA,EAAG,WAAaA,EAAG,IAAMA,EAAG,WAAaA,EAAG,IAAMkiF,EAAI,IAAMliF,EAAG,KAAOA,EAAG,OAASA,EAAG,MAAQA,EAAG,OAASA,EAAG,MAAQA,EAAG,KAAOA,EAAG,WAAaA,EAAG,QAAUA,EAAG,OAASA,EAAG,QAAUA,EAAG,IAAMA,EAAG,SAAWA,EAAG,YAAcA,EAAG,MAAQA,EAAG,MAAQA,EAAG,OAASA,EAAG,KAAOA,EAAG,SAAWA,EAAG,IAAMA,EAAG,KAAOA,EAAG,QAAUA,EAAG,OAASA,EAAG,OAASA,EAAG,WAAaA,EAAG,KAAOA,EAAG,WAAaA,EAAG,OAAS2hF,EAAI,QAAU3hF,EAAG,QAAUA,EAAG,KAAOA,EAAG,UAAYA,EAAG,MAAQA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOkgF,IAAK,OAASlgF,EAAG,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,OAASkgF,EAAG,YAAYA,EAAG,SAAWA,IAAK,MAAQlgF,EAAG,OAASA,EAAG,KAAOA,EAAG,KAAOA,EAAG,MAAQA,EAAG,KAAOA,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,GAAKkgF,EAAG,YAAcA,EAAG,QAAUA,EAAG,QAAUA,EAAG,MAAQE,EAAG,KAAOA,EAAG,SAAWA,EAAG,UAAYA,EAAG,SAAWF,EAAG,KAAOA,IAAK,IAAMlgF,EAAG,OAASA,EAAG,SAAWA,EAAG,KAAOA,EAAG,OAASA,EAAG,OAASA,EAAG,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMkgF,IAAK,MAAQlgF,EAAG,SAAWA,EAAG,QAAUA,EAAG,QAAUA,EAAG,gBAAkBA,EAAG,OAASA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,KAAOA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,WAAaA,EAAG,QAAUA,EAAG,aAAeA,EAAG,OAASA,EAAG,OAASA,EAAG,QAAUA,EAAG,QAAU2hF,EAAI,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMzB,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUA,MAAO,OAASlgF,EAAG,KAAOA,EAAG,OAASA,EAAG,SAAWA,EAAG,KAAOA,EAAG,OAASA,EAAG,MAAQA,EAAG,SAAW,CAAC,EAAI,EAAE,KAAO,CAAC,UAAYkgF,IAAK,IAAMlgF,EAAG,MAAQA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,UAAYA,EAAG,MAAQA,EAAG,KAAOA,EAAG,MAAQA,EAAG,KAAOA,EAAG,QAAUA,EAAG,MAAQA,EAAG,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOkgF,EAAG,OAASA,EAAG,MAAQA,IAAK,SAAWlgF,EAAG,OAASA,EAAG,KAAOA,EAAG,SAAWA,EAAG,KAAOA,EAAG,KAAOA,EAAG,QAAUA,EAAG,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,SAAWogF,EAAG,KAAOF,EAAG,KAAOA,EAAG,aAAeA,EAAG,QAAUA,EAAG,KAAOA,EAAG,MAAQA,EAAG,UAAYA,EAAG,MAAQA,EAAG,QAAUA,EAAG,OAASA,EAAG,WAAaA,EAAG,WAAaE,EAAG,IAAMA,EAAG,KAAOF,EAAG,KAAOA,EAAG,SAAWA,IAAK,IAAMlgF,EAAG,KAAOA,EAAG,IAAMA,EAAG,MAAQA,EAAG,MAAQA,EAAG,MAAQA,EAAG,MAAQA,EAAG,KAAOA,EAAG,OAASA,EAAG,OAASA,EAAG,SAAWA,EAAG,SAAWA,EAAG,KAAOA,EAAG,MAAQA,EAAG,UAAY,CAAC,EAAI,EAAE,KAAO,CAAC,MAAQogF,IAAK,KAAOpgF,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,OAASkgF,EAAG,KAAOA,EAAG,OAASA,IAAK,MAAQlgF,EAAG,KAAOA,EAAG,IAAMA,EAAG,MAAQA,EAAG,QAAUA,EAAG,KAAOA,EAAG,UAAYA,EAAG,UAAYA,EAAG,IAAMA,EAAG,SAAWA,EAAG,UAAYA,EAAG,QAAUA,EAAG,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,OAASkgF,EAAG,SAAWA,EAAG,UAAYA,IAAK,OAASlgF,EAAG,OAASA,EAAG,MAAQA,EAAG,MAAQA,EAAG,MAAQA,EAAG,SAAWA,EAAG,OAASA,EAAG,QAAUkiF,EAAI,KAAOliF,EAAG,QAAUA,EAAG,OAASA,EAAG,OAASA,EAAG,MAAQA,EAAG,OAASA,EAAG,QAAU,CAAC,EAAI,EAAE,KAAO,CAAC,YAAckgF,IAAK,IAAMlgF,EAAG,OAASA,EAAG,KAAOA,EAAG,OAASA,EAAG,OAASA,EAAG,WAAaA,EAAG,MAAQA,EAAG,OAASA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,UAAYkgF,EAAG,SAAWA,IAAK,KAAOlgF,EAAG,WAAaygF,EAAI,QAAUzgF,EAAG,OAASA,EAAG,KAAOA,EAAG,IAAMA,EAAG,QAAUA,EAAG,QAAUA,EAAG,KAAOA,EAAG,QAAUA,EAAG,OAASA,EAAG,QAAUA,EAAG,KAAOA,EAAG,MAAQA,EAAG,MAAQA,EAAG,OAASA,EAAG,IAAMA,EAAG,OAASA,EAAG,MAAQA,EAAG,MAAQ,CAAC,EAAI,EAAE,KAAO,CAAC,aAAekgF,IAAK,MAAQlgF,EAAG,MAAQA,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,UAAUkgF,EAAG,MAAQA,IAAK,MAAQlgF,EAAG,QAAUA,EAAG,MAAQA,EAAG,MAAQA,EAAG,KAAOA,EAAG,OAASA,EAAG,KAAOA,EAAG,MAAQ2hF,EAAI,QAAU3hF,EAAG,SAAWA,EAAG,OAASA,EAAG,cAAgBA,EAAG,UAAYA,EAAG,mBAAqBA,EAAG,MAAQA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,MAAQA,EAAG,MAAQA,EAAG,IAAMA,EAAG,MAAQA,EAAG,IAAMA,EAAG,OAASA,EAAG,WAAaA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,UAAYA,EAAG,KAAOA,EAAG,SAAWA,EAAG,MAAQA,EAAG,SAAWA,EAAG,SAAWA,EAAG,aAAeA,EAAG,IAAMA,EAAG,OAASA,EAAG,MAAQA,EAAG,IAAMA,EAAG,OAASA,EAAG,OAASA,EAAG,IAAMA,EAAG,IAAMA,EAAG,OAASA,EAAG,KAAOA,EAAG,OAASA,EAAG,KAAOA,EAAG,KAAOA,EAAG,WAAaA,EAAG,MAAQA,EAAG,WAAaA,EAAG,MAAQA,EAAG,KAAOA,EAAG,OAASA,EAAG,KAAOA,EAAG,OAASA,EAAG,OAASA,EAAG,MAAQA,EAAG,QAAUA,EAAG,OAASA,EAAG,KAAOA,EAAG,QAAUA,EAAG,MAAQA,EAAG,QAAUA,EAAG,QAAUA,EAAG,eAAiBA,EAAG,OAASA,EAAG,MAAQA,EAAG,QAAUiiF,EAAI,QAAUjiF,EAAG,MAAQA,EAAG,KAAOA,EAAG,QAAUA,EAAG,KAAOA,EAAG,KAAOiiF,EAAI,YAAcjiF,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOkgF,IAAK,QAAUlgF,EAAG,KAAOA,EAAG,QAAUA,EAAG,IAAMA,EAAG,cAAgBA,EAAG,SAAWA,EAAG,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,KAAOkgF,EAAG,GAAKA,IAAK,MAAQlgF,EAAG,MAAQA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,MAAQA,EAAG,QAAUA,EAAG,OAASA,EAAG,IAAMA,EAAG,cAAcA,EAAG,IAAMA,EAAG,cAAcA,EAAG,IAAMA,EAAG,cAAcA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,cAAcA,EAAG,IAAMA,EAAG,aAAaA,EAAG,GAAKA,EAAG,aAAaA,EAAG,KAAOA,EAAG,cAAcA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,oBAAoBA,EAAG,KAAOA,EAAG,aAAaA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,iBAAiBA,EAAG,IAAMA,EAAG,eAAeA,EAAG,OAASA,EAAG,iBAAiBA,EAAG,QAAUA,EAAG,eAAeA,EAAG,OAASA,EAAG,aAAaA,EAAG,KAAOA,EAAG,eAAeA,EAAG,GAAKA,EAAG,aAAaA,EAAG,IAAMA,EAAG,aAAaA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,iBAAiBA,EAAG,IAAMA,EAAG,oBAAoBA,EAAG,OAASA,EAAG,YAAYA,EAAG,IAAMA,EAAG,aAAaA,EAAG,IAAMA,EAAG,cAAcA,EAAG,IAAMA,EAAG,gBAAgBA,EAAG,KAAOA,EAAG,aAAaA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,cAAcA,EAAG,KAAOA,EAAG,gBAAgBA,EAAG,KAAOA,EAAG,cAAcA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,YAAYA,EAAG,IAAMA,EAAG,iBAAiBA,EAAG,IAAMA,EAAG,aAAaA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,mBAAmBA,EAAG,KAAOA,EAAG,cAAcA,EAAG,GAAKA,EAAG,eAAeA,EAAG,KAAOA,EAAG,cAAcA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,kBAAkBA,EAAG,MAAQA,EAAG,cAAcA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,YAAYA,EAAG,IAAMA,EAAG,iBAAiBA,EAAG,IAAMA,EAAG,iBAAiBA,EAAG,IAAMA,EAAG,cAAcA,EAAG,GAAKA,EAAG,kBAAkBA,EAAG,IAAMA,EAAG,aAAaA,EAAG,GAAKA,EAAG,iBAAiBA,EAAG,OAASA,EAAG,mBAAmBA,EAAG,QAAUA,EAAG,kBAAkBA,EAAG,QAAUA,EAAG,eAAeA,EAAG,MAAQA,EAAG,iBAAiBA,EAAG,OAASA,EAAG,iBAAiBA,EAAG,QAAUA,EAAG,eAAeA,EAAG,MAAQA,EAAG,eAAeA,EAAG,GAAKA,EAAG,aAAaA,EAAG,GAAKA,EAAG,eAAeA,EAAG,KAAOA,EAAG,eAAeA,EAAG,KAAOA,EAAG,YAAYA,EAAG,IAAMA,EAAG,YAAYA,EAAG,GAAKA,EAAG,kBAAkBA,EAAG,KAAOA,EAAG,cAAcA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,YAAY,CAAC,EAAI,EAAE,KAAO,CAAC,YAAYkgF,EAAG,YAAYA,EAAG,cAAcA,EAAG,YAAYA,EAAG,YAAYA,EAAG,YAAYA,EAAG,iBAAiBA,EAAG,aAAaA,EAAG,aAAaA,EAAG,UAAUA,IAAK,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,IAAMA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,OAASA,EAAG,KAAOA,EAAG,IAAMA,EAAG,EAAIA,IAAK,aAAalgF,EAAG,GAAKA,EAAG,cAAcA,EAAG,IAAMA,EAAG,eAAeA,EAAG,KAAOA,EAAG,cAAcA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,YAAYA,EAAG,GAAKA,EAAG,gBAAgBA,EAAG,IAAMA,EAAG,aAAaA,EAAG,GAAKA,EAAG,0BAA0BA,EAAG,iBAAmBA,EAAG,2BAA2BA,EAAG,kBAAoBA,EAAG,YAAYA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,uBAAuBA,EAAG,MAAQA,EAAG,cAAcA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,cAAcA,EAAG,GAAKA,EAAG,IAAM,CAAC,EAAI,EAAE,KAAO,CAAC,SAAWkgF,EAAG,UAAYA,EAAG,SAAWA,EAAG,MAAQA,EAAG,QAAUE,IAAK,OAASpgF,EAAG,MAAQA,EAAG,QAAUA,EAAG,OAASA,EAAG,UAAYA,EAAG,KAAOA,EAAG,SAAWA,EAAG,IAAMA,EAAG,QAAUA,EAAG,IAAMA,EAAG,OAASA,EAAG,KAAOA,EAAG,KAAOA,EAAG,IAAMA,EAAG,KAAO,CAAC,EAAI,EAAE,KAAO,CAAC,QAAUkgF,EAAG,GAAKA,EAAG,OAASE,EAAG,KAAOF,IAAK,QAAUlgF,GAEj52H,CAJ4B,yECO7B,SAASwiF,EACP5qB,EACA6qB,EACAz+G,EACA0+G,GAEA,IAAI/hH,EAAwB,KACxByY,EAA0BqpG,EAC9B,UAAgB7iH,IAATwZ,IAE0B,IAA1BA,EAAKupG,EAAID,KACZ/hH,EAAS,CACPqD,MAAOA,EAAQ,EACfq6G,QAAe,IAANjlG,EAAKupG,EACdpE,UAAiB,IAANnlG,EAAKupG,KAKL,IAAX3+G,IAXqB,CAezB,MAAM4+G,EAEFxpG,EAAKwpG,KACTxpG,EAAOwpG,IAASA,EAAKhrB,EAAM5zF,KAAW4+G,EAAK,MAC3C5+G,GAAS,CACV,CAED,OAAOrD,CACR,CAKa,SAAUg+G,EACtB7B,EACAhoG,EACAkD,GAEA,IAA+C,KAA3C6qG,EAAAA,EAAAA,IAAe/F,EAAUhoG,EAASkD,GACpC,OAGF,MAAM8qG,EAAgBhG,EAAS7jG,MAAM,KAE/BypG,IAC6B,IAAhC5tG,EAAQ4qG,oBAA8B,EAAqB,KAC7B,IAA9B5qG,EAAQ8qG,kBAA4B,EAAmB,GAGpDmD,EAAiBP,EACrBM,EACA9C,EAAAA,EACA8C,EAAcxjH,OAAS,EACvBojH,GAGF,GAAuB,OAAnBK,EAIF,OAHA/qG,EAAIqmG,QAAU0E,EAAe1E,QAC7BrmG,EAAIumG,UAAYwE,EAAexE,eAC/BvmG,EAAImlG,aAAe2F,EAAc54G,MAAM64G,EAAe/+G,MAAQ,GAAGyX,KAAK,MAKxE,MAAMunG,EAAaR,EACjBM,EACA7C,EAAAA,EACA6C,EAAcxjH,OAAS,EACvBojH,GAGF,GAAmB,OAAfM,EAIF,OAHAhrG,EAAIqmG,QAAU2E,EAAW3E,QACzBrmG,EAAIumG,UAAYyE,EAAWzE,eAC3BvmG,EAAImlG,aAAe2F,EAAc54G,MAAM84G,EAAWh/G,OAAOyX,KAAK,MAOhEzD,EAAIqmG,SAAU,EACdrmG,EAAIumG,WAAY,EAChBvmG,EAAImlG,aAAe2F,EAAcA,EAAcxjH,OAAS,EACzD,0HC7FD,IAAI2jH,EAAgB,SAASvmF,EAAG/X,GAI5B,OAHAs+F,EAAgBrhH,OAAOI,gBAClB,CAAE6R,UAAW,cAAgBvM,OAAS,SAAUo1B,EAAG/X,GAAK+X,EAAE7oB,UAAY8Q,CAAI,GAC3E,SAAU+X,EAAG/X,GAAK,IAAK,IAAIkf,KAAKlf,EAAO/iB,OAAOG,UAAU8rB,eAAe1jB,KAAKwa,EAAGkf,KAAInH,EAAEmH,GAAKlf,EAAEkf,GAAK,EAC9Fo/E,EAAcvmF,EAAG/X,EAC3B,EAEM,SAASriB,EAAUo6B,EAAG/X,GACzB,GAAiB,mBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIkjB,UAAU,uBAAyB5mC,OAAO0jB,GAAK,iCAE7D,SAAS0qE,IAAO/+E,KAAK5F,YAAcgyB,CAAI,CADvCumF,EAAcvmF,EAAG/X,GAEjB+X,EAAE36B,UAAkB,OAAN4iB,EAAa/iB,OAAOC,OAAO8iB,IAAM0qE,EAAGttF,UAAY4iB,EAAE5iB,UAAW,IAAIstF,EAClF,CAwCM,SAAS6zB,EAAUjQ,EAASkQ,EAAYj9C,EAAGk9C,GAE9C,OAAO,IAAKl9C,IAAMA,EAAIrqD,WAAU,SAAUE,EAASD,GAC/C,SAASunG,EAAUhlH,GAAS,IAAMklG,EAAK6f,EAAUt9F,KAAKznB,GAAmC,CAAxB,MAAOoM,GAAKqR,EAAOrR,EAAK,CAAE,CAC3F,SAAS64G,EAASjlH,GAAS,IAAMklG,EAAK6f,EAAS,MAAU/kH,GAAmC,CAAxB,MAAOoM,GAAKqR,EAAOrR,EAAK,CAAE,CAC9F,SAAS84F,EAAK5iG,GAJlB,IAAetC,EAIasC,EAAO42F,KAAOx7E,EAAQpb,EAAOtC,QAJ1CA,EAIyDsC,EAAOtC,MAJhDA,aAAiB6nE,EAAI7nE,EAAQ,IAAI6nE,GAAE,SAAUnqD,GAAWA,EAAQ1d,EAAS,KAIlBgrB,KAAKg6F,EAAWC,EAAY,CAC9G/f,GAAM6f,EAAYA,EAAUjiH,MAAM8xG,EAASkQ,GAAc,KAAKr9F,OACjE,GACJ,CAEM,SAASy9F,EAAYtQ,EAASr4F,GACjC,IAAsGuU,EAAGsN,EAAGiF,EAAGwxB,EAA3Gt7C,EAAI,CAAEuyB,MAAO,EAAGq5E,KAAM,WAAa,GAAW,EAAP9hF,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,EAAK,EAAE+hF,KAAM,GAAIC,IAAK,IAChG,OAAOxwD,EAAI,CAAEptC,KAAM69F,EAAK,GAAI,MAASA,EAAK,GAAI,OAAUA,EAAK,IAAwB,mBAAX/N,SAA0B1iD,EAAE0iD,OAAOD,UAAY,WAAa,OAAOrlG,IAAO,GAAG4iD,EACvJ,SAASywD,EAAK9oF,GAAK,OAAO,SAAUZ,GAAK,OACzC,SAAckjC,GACV,GAAIhuC,EAAG,MAAM,IAAI0Y,UAAU,mCAC3B,KAAOjwB,OACH,GAAIuX,EAAI,EAAGsN,IAAMiF,EAAY,EAARy7B,EAAG,GAAS1gC,EAAC,OAAa0gC,EAAG,GAAK1gC,EAAC,SAAeiF,EAAIjF,EAAC,SAAeiF,EAAEv3B,KAAKsyB,GAAI,GAAKA,EAAE3W,SAAW4b,EAAIA,EAAEv3B,KAAKsyB,EAAG0gC,EAAG,KAAKo6B,KAAM,OAAO71D,EAE3J,OADIjF,EAAI,EAAGiF,IAAGy7B,EAAK,CAAS,EAARA,EAAG,GAAQz7B,EAAErjC,QACzB8+D,EAAG,IACP,KAAK,EAAG,KAAK,EAAGz7B,EAAIy7B,EAAI,MACxB,KAAK,EAAc,OAAXvlD,EAAEuyB,QAAgB,CAAE9rC,MAAO8+D,EAAG,GAAIo6B,MAAM,GAChD,KAAK,EAAG3/E,EAAEuyB,QAAS1N,EAAI0gC,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKvlD,EAAE8rG,IAAIv1G,MAAOyJ,EAAE6rG,KAAKt1G,MAAO,SACxC,QACI,KAAMuzB,EAAI9pB,EAAE6rG,MAAM/hF,EAAIA,EAAEpiC,OAAS,GAAKoiC,EAAEA,EAAEpiC,OAAS,KAAkB,IAAV69D,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEvlD,EAAI,EAAG,QAAW,CAC5G,GAAc,IAAVulD,EAAG,MAAcz7B,GAAMy7B,EAAG,GAAKz7B,EAAE,IAAMy7B,EAAG,GAAKz7B,EAAE,IAAM,CAAE9pB,EAAEuyB,MAAQgzB,EAAG,GAAI,KAAQ,CACtF,GAAc,IAAVA,EAAG,IAAYvlD,EAAEuyB,MAAQzI,EAAE,GAAI,CAAE9pB,EAAEuyB,MAAQzI,EAAE,GAAIA,EAAIy7B,EAAI,KAAQ,CACrE,GAAIz7B,GAAK9pB,EAAEuyB,MAAQzI,EAAE,GAAI,CAAE9pB,EAAEuyB,MAAQzI,EAAE,GAAI9pB,EAAE8rG,IAAI7iH,KAAKs8D,GAAK,KAAQ,CAC/Dz7B,EAAE,IAAI9pB,EAAE8rG,IAAIv1G,MAChByJ,EAAE6rG,KAAKt1G,MAAO,SAEtBgvD,EAAKviD,EAAKzQ,KAAK8oG,EAASr7F,GAC1B,MAAOnN,GAAK0yD,EAAK,CAAC,EAAG1yD,GAAIgyB,EAAI,CAAI,CAjBzB,QAiBoCtN,EAAIuS,EAAI,CAAI,CAC1D,GAAY,EAARy7B,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAE9+D,MAAO8+D,EAAG,GAAKA,EAAG,QAAK,EAAQo6B,MAAM,EAC7E,CAtB+CgM,CAAK,CAAC1oE,EAAGZ,GAAM,CAAG,CAuBrE,CAE4Br4B,OAAOC,OAgB7B,SAAS+hH,EAAS/xD,GACrB,IAAItuC,EAAsB,mBAAXqyF,QAAyBA,OAAOD,SAAU7qF,EAAIvH,GAAKsuC,EAAEtuC,GAAInf,EAAI,EAC5E,GAAI0mB,EAAG,OAAOA,EAAE3gB,KAAK0nD,GACrB,GAAIA,GAAyB,iBAAbA,EAAEvyD,OAAqB,MAAO,CAC1CwmB,KAAM,WAEF,OADI+rC,GAAKztD,GAAKytD,EAAEvyD,SAAQuyD,OAAI,GACrB,CAAExzD,MAAOwzD,GAAKA,EAAEztD,KAAMmzF,MAAO1lC,EACvC,GAEL,MAAM,IAAIhqB,UAAUtkB,EAAI,0BAA4B,kCACvD,CAEM,SAAS6wF,EAAOviD,EAAGh3B,GACtB,IAAI/P,EAAsB,mBAAX8qF,QAAyB/jD,EAAE+jD,OAAOD,UACjD,IAAK7qF,EAAG,OAAO+mC,EACf,IAAmBt2B,EAAY9wB,EAA3BrG,EAAI0mB,EAAE3gB,KAAK0nD,GAAOgyD,EAAK,GAC3B,IACI,WAAc,IAANhpF,GAAgBA,KAAM,MAAQU,EAAIn3B,EAAE0hB,QAAQyxE,MAAMssB,EAAGhjH,KAAK06B,EAAEl9B,MAQvE,CAND,MAAO+T,GAAS3H,EAAI,CAAE2H,MAAOA,EAAU,CAHvC,QAKI,IACQmpB,IAAMA,EAAEg8D,OAASzsE,EAAI1mB,EAAC,SAAa0mB,EAAE3gB,KAAK/F,EAEjB,CAHjC,QAGU,GAAIqG,EAAG,MAAMA,EAAE2H,KAAQ,CACpC,CACD,OAAOyxG,CACV,CAkBM,SAASxI,EAAcrR,EAAIrlG,EAAMsrD,GACpC,GAAIA,GAA6B,IAArB19C,UAAUjT,OAAc,IAAK,IAA4BukH,EAAxBz/G,EAAI,EAAGw3B,EAAIj3B,EAAKrF,OAAY8E,EAAIw3B,EAAGx3B,KACxEy/G,GAAQz/G,KAAKO,IACRk/G,IAAIA,EAAKv8G,MAAMvF,UAAUmI,MAAMC,KAAKxF,EAAM,EAAGP,IAClDy/G,EAAGz/G,GAAKO,EAAKP,IAGrB,OAAO4lG,EAAGhhG,OAAO66G,GAAMv8G,MAAMvF,UAAUmI,MAAMC,KAAKxF,GACrD,CAEM,SAASm/G,EAAQ7pF,GACpB,OAAO3pB,gBAAgBwzG,GAAWxzG,KAAK2pB,EAAIA,EAAG3pB,MAAQ,IAAIwzG,EAAQ7pF,EACrE,CAEM,SAAS8pF,EAAiB9Q,EAASkQ,EAAYC,GAClD,IAAKxN,OAAOC,cAAe,MAAM,IAAIhuE,UAAU,wCAC/C,IAAoDzjC,EAAhD8uD,EAAIkwD,EAAUjiH,MAAM8xG,EAASkQ,GAAc,IAAQjmF,EAAI,GAC3D,OAAO94B,EAAI,CAAC,EAAGu/G,EAAK,QAASA,EAAK,SAAUA,EAAK,UAAWv/G,EAAEwxG,OAAOC,eAAiB,WAAc,OAAOvlG,IAAO,EAAElM,EACpH,SAASu/G,EAAK9oF,GAASq4B,EAAEr4B,KAAIz2B,EAAEy2B,GAAK,SAAUZ,GAAK,OAAO,IAAIpe,SAAQ,SAAUgJ,EAAGF,GAAKuY,EAAEr8B,KAAK,CAACg6B,EAAGZ,EAAGpV,EAAGF,IAAM,GAAKkjF,EAAOhtE,EAAGZ,EAAK,GAAI,EAAG,CAC1I,SAAS4tE,EAAOhtE,EAAGZ,GAAK,KACVsB,EADqB23B,EAAEr4B,GAAGZ,IACnB57B,iBAAiBylH,EAAUjoG,QAAQE,QAAQwf,EAAEl9B,MAAM47B,GAAG5Q,KAAK26F,EAASloG,GAAUmoG,EAAO/mF,EAAE,GAAG,GAAI3B,EADnC,CAAjC,MAAO9wB,GAAKw5G,EAAO/mF,EAAE,GAAG,GAAIzyB,EAAK,CAChF,IAAc8wB,CADoE,CAElF,SAASyoF,EAAQ3lH,GAASwpG,EAAO,OAAQxpG,EAAS,CAClD,SAASyd,EAAOzd,GAASwpG,EAAO,QAASxpG,EAAS,CAClD,SAAS4lH,EAAO90F,EAAG8K,GAAS9K,EAAE8K,GAAIiD,EAAErL,QAASqL,EAAE59B,QAAQuoG,EAAO3qE,EAAE,GAAG,GAAIA,EAAE,GAAG,GAAM,CACrF,CAQM,SAASgnF,EAAcryD,GAC1B,IAAK+jD,OAAOC,cAAe,MAAM,IAAIhuE,UAAU,wCAC/C,IAAiCzjC,EAA7B0mB,EAAI+mC,EAAE+jD,OAAOC,eACjB,OAAO/qF,EAAIA,EAAE3gB,KAAK0nD,IAAMA,EAAqC+xD,EAAS/xD,GAA2BztD,EAAI,CAAC,EAAGu/G,EAAK,QAASA,EAAK,SAAUA,EAAK,UAAWv/G,EAAEwxG,OAAOC,eAAiB,WAAc,OAAOvlG,IAAO,EAAElM,GAC9M,SAASu/G,EAAK9oF,GAAKz2B,EAAEy2B,GAAKg3B,EAAEh3B,IAAM,SAAUZ,GAAK,OAAO,IAAIpe,SAAQ,SAAUE,EAASD,IACvF,SAAgBC,EAASD,EAAQ4gB,EAAGzC,GAAKpe,QAAQE,QAAQke,GAAG5Q,MAAK,SAAS4Q,GAAKle,EAAQ,CAAE1d,MAAO47B,EAAGs9D,KAAM76D,GAAO,GAAE5gB,EAAU,EADdmoG,CAAOloG,EAASD,GAA7Bme,EAAI43B,EAAEh3B,GAAGZ,IAA8Bs9D,KAAMt9D,EAAE57B,MAAS,GAAI,CAAG,CAEnK,CAOwBuD,OAAOC,qCC9LhC,IAAIwrG,EAAW3+E,EAAQ,MACnB0rB,EAAO1rB,EAAQ,OASnB,SAASy1F,IACP7zG,KAAK8V,SAAW,KAChB9V,KAAK8zG,QAAU,KACf9zG,KAAK+zG,KAAO,KACZ/zG,KAAKg0G,KAAO,KACZh0G,KAAKi0G,KAAO,KACZj0G,KAAKwsG,SAAW,KAChBxsG,KAAK0nB,KAAO,KACZ1nB,KAAKigC,OAAS,KACdjgC,KAAKmgC,MAAQ,KACbngC,KAAKk0G,SAAW,KAChBl0G,KAAKkhB,KAAO,KACZlhB,KAAKqT,KAAO,IACb,CApBDsP,EAAQniB,MAAQ2zG,EAChBxxF,EAAQlX,QA0ZR,SAAoB04E,EAAQsV,GAC1B,OAAO0a,EAAShwB,GAAQ,GAAO,GAAM14E,QAAQguF,EAC9C,EA3ZD92E,EAAQyxF,cAiaR,SAA0BjwB,EAAQsV,GAChC,OAAKtV,EACEgwB,EAAShwB,GAAQ,GAAO,GAAMiwB,cAAc3a,GAD/BA,CAErB,EAnaD92E,EAAQuzB,OAsVR,SAAmB7e,GAKbyS,EAAKuqE,SAASh9E,KAAMA,EAAM88E,EAAS98E,IACvC,OAAMA,aAAew8E,EACdx8E,EAAI6e,SADuB29D,EAAIpiH,UAAUykD,OAAOr8C,KAAKw9B,EAE7D,EA5VD1U,EAAQkxF,IAAMA,EAqBd,IAAIS,EAAkB,oBAClBC,EAAc,WAGdC,EAAoB,qCAOpBC,EAAS,CAAC,IAAK,IAAK,IAAK,KAAM,IAAK,KAAK/7G,OAHhC,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,OAM/Cg8G,EAAa,CAAC,KAAMh8G,OAAO+7G,GAK3BE,EAAe,CAAC,IAAK,IAAK,IAAK,IAAK,KAAKj8G,OAAOg8G,GAChDE,EAAkB,CAAC,IAAK,IAAK,KAE7BC,EAAsB,yBACtBC,EAAoB,+BAEpBC,EAAiB,CACf,YAAc,EACd,eAAe,GAGjBC,EAAmB,CACjB,YAAc,EACd,eAAe,GAGjBC,EAAkB,CAChB,MAAQ,EACR,OAAS,EACT,KAAO,EACP,QAAU,EACV,MAAQ,EACR,SAAS,EACT,UAAU,EACV,QAAQ,EACR,WAAW,EACX,SAAS,GAEXC,EAAc92F,EAAQ,OAE1B,SAAS+1F,EAAS5vG,EAAK4wG,EAAkBC,GACvC,GAAI7wG,GAAOulC,EAAKurE,SAAS9wG,IAAQA,aAAesvG,EAAK,OAAOtvG,EAE5D,IAAI0pD,EAAI,IAAI4lD,EAEZ,OADA5lD,EAAEztD,MAAM+D,EAAK4wG,EAAkBC,GACxBnnD,CACR,CAED4lD,EAAIpiH,UAAU+O,MAAQ,SAAS+D,EAAK4wG,EAAkBC,GACpD,IAAKtrE,EAAKuqE,SAAS9vG,GACjB,MAAM,IAAIgzB,UAAU,gDAAkDhzB,GAMxE,IAAI+wG,EAAa/wG,EAAI2C,QAAQ,KACzBquG,GACqB,IAAhBD,GAAqBA,EAAa/wG,EAAI2C,QAAQ,KAAQ,IAAM,IACjEsuG,EAASjxG,EAAIoE,MAAM4sG,GAEvBC,EAAO,GAAKA,EAAO,GAAGxmG,QADL,MACyB,KAG1C,IAAIymG,EAFJlxG,EAAMixG,EAAOrqG,KAAKoqG,GAQlB,GAFAE,EAAOA,EAAKhrF,QAEP2qF,GAA+C,IAA1B7wG,EAAIoE,MAAM,KAAK3Z,OAAc,CAErD,IAAI0mH,EAAalB,EAAkB53E,KAAK64E,GACxC,GAAIC,EAeF,OAdA11G,KAAKkhB,KAAOu0F,EACZz1G,KAAKqT,KAAOoiG,EACZz1G,KAAKk0G,SAAWwB,EAAW,GACvBA,EAAW,IACb11G,KAAKigC,OAASy1E,EAAW,GAEvB11G,KAAKmgC,MADHg1E,EACWD,EAAY10G,MAAMR,KAAKigC,OAAOn6B,OAAO,IAErC9F,KAAKigC,OAAOn6B,OAAO,IAEzBqvG,IACTn1G,KAAKigC,OAAS,GACdjgC,KAAKmgC,MAAQ,CAAC,GAETngC,IAEV,CAED,IAAI3O,EAAQijH,EAAgB13E,KAAK64E,GACjC,GAAIpkH,EAAO,CAET,IAAIskH,GADJtkH,EAAQA,EAAM,IACSmoB,cACvBxZ,KAAK8V,SAAW6/F,EAChBF,EAAOA,EAAK3vG,OAAOzU,EAAMrC,OAC1B,CAMD,GAAIomH,GAAqB/jH,GAASokH,EAAK1wG,MAAM,wBAAyB,CACpE,IAAI+uG,EAAgC,OAAtB2B,EAAK3vG,OAAO,EAAG,IACzBguG,GAAaziH,GAAS2jH,EAAiB3jH,KACzCokH,EAAOA,EAAK3vG,OAAO,GACnB9F,KAAK8zG,SAAU,EAElB,CAED,IAAKkB,EAAiB3jH,KACjByiH,GAAYziH,IAAU4jH,EAAgB5jH,IAAU,CAmBnD,IADA,IASI0iH,EAAM6B,EATNC,GAAW,EACN/hH,EAAI,EAAGA,EAAI8gH,EAAgB5lH,OAAQ8E,IAAK,EAElC,KADTgiH,EAAML,EAAKvuG,QAAQ0tG,EAAgB9gH,QACP,IAAb+hH,GAAkBC,EAAMD,KACzCA,EAAUC,EACb,EAgBe,KATdF,GAFe,IAAbC,EAEOJ,EAAKviG,YAAY,KAIjBuiG,EAAKviG,YAAY,IAAK2iG,MAM/B9B,EAAO0B,EAAK77G,MAAM,EAAGg8G,GACrBH,EAAOA,EAAK77G,MAAMg8G,EAAS,GAC3B51G,KAAK+zG,KAAO5tB,mBAAmB4tB,IAIjC8B,GAAW,EACX,IAAS/hH,EAAI,EAAGA,EAAI6gH,EAAa3lH,OAAQ8E,IAAK,CAC5C,IAAIgiH,GACS,KADTA,EAAML,EAAKvuG,QAAQytG,EAAa7gH,QACJ,IAAb+hH,GAAkBC,EAAMD,KACzCA,EAAUC,EACb,EAEgB,IAAbD,IACFA,EAAUJ,EAAKzmH,QAEjBgR,KAAKg0G,KAAOyB,EAAK77G,MAAM,EAAGi8G,GAC1BJ,EAAOA,EAAK77G,MAAMi8G,GAGlB71G,KAAK+1G,YAIL/1G,KAAKwsG,SAAWxsG,KAAKwsG,UAAY,GAIjC,IAAIwJ,EAAoC,MAArBh2G,KAAKwsG,SAAS,IACe,MAA5CxsG,KAAKwsG,SAASxsG,KAAKwsG,SAASx9G,OAAS,GAGzC,IAAKgnH,EAEH,IADA,IAAIC,EAAYj2G,KAAKwsG,SAAS7jG,MAAM,MACpB2iB,GAAPx3B,EAAI,EAAOmiH,EAAUjnH,QAAQ8E,EAAIw3B,EAAGx3B,IAAK,CAChD,IAAI65B,EAAOsoF,EAAUniH,GACrB,GAAK65B,IACAA,EAAK5oB,MAAM8vG,GAAsB,CAEpC,IADA,IAAIqB,EAAU,GACL98G,EAAI,EAAGshC,EAAI/M,EAAK3+B,OAAQoK,EAAIshC,EAAGthC,IAClCu0B,EAAKx+B,WAAWiK,GAAK,IAIvB88G,GAAW,IAEXA,GAAWvoF,EAAKv0B,GAIpB,IAAK88G,EAAQnxG,MAAM8vG,GAAsB,CACvC,IAAIsB,EAAaF,EAAUr8G,MAAM,EAAG9F,GAChCsiH,EAAUH,EAAUr8G,MAAM9F,EAAI,GAC9BuiH,EAAM1oF,EAAK5oB,MAAM+vG,GACjBuB,IACFF,EAAW5lH,KAAK8lH,EAAI,IACpBD,EAAQxzF,QAAQyzF,EAAI,KAElBD,EAAQpnH,SACVymH,EAAO,IAAMW,EAAQjrG,KAAK,KAAOsqG,GAEnCz1G,KAAKwsG,SAAW2J,EAAWhrG,KAAK,KAChC,KACD,CACF,CACF,CAGCnL,KAAKwsG,SAASx9G,OAjND,IAkNfgR,KAAKwsG,SAAW,GAGhBxsG,KAAKwsG,SAAWxsG,KAAKwsG,SAAShzF,cAG3Bw8F,IAKHh2G,KAAKwsG,SAAWzP,EAASuZ,QAAQt2G,KAAKwsG,WAGxC,IAAIj5E,EAAIvzB,KAAKi0G,KAAO,IAAMj0G,KAAKi0G,KAAO,GAClCr4D,EAAI57C,KAAKwsG,UAAY,GACzBxsG,KAAKg0G,KAAOp4D,EAAIroB,EAChBvzB,KAAKqT,MAAQrT,KAAKg0G,KAIdgC,IACFh2G,KAAKwsG,SAAWxsG,KAAKwsG,SAAS1mG,OAAO,EAAG9F,KAAKwsG,SAASx9G,OAAS,GAC/C,MAAZymH,EAAK,KACPA,EAAO,IAAMA,GAGlB,CAID,IAAKV,EAAeY,GAKlB,IAAS7hH,EAAI,EAAGw3B,EAAIopF,EAAW1lH,OAAQ8E,EAAIw3B,EAAGx3B,IAAK,CACjD,IAAIyiH,EAAK7B,EAAW5gH,GACpB,IAA0B,IAAtB2hH,EAAKvuG,QAAQqvG,GAAjB,CAEA,IAAIC,EAAMzoG,mBAAmBwoG,GACzBC,IAAQD,IACVC,EAAMpwB,OAAOmwB,IAEfd,EAAOA,EAAK9sG,MAAM4tG,GAAIprG,KAAKqrG,EALjB,CAMX,CAKH,IAAI9uF,EAAO+tF,EAAKvuG,QAAQ,MACV,IAAVwgB,IAEF1nB,KAAK0nB,KAAO+tF,EAAK3vG,OAAO4hB,GACxB+tF,EAAOA,EAAK77G,MAAM,EAAG8tB,IAEvB,IAAI+uF,EAAKhB,EAAKvuG,QAAQ,KAoBtB,IAnBY,IAARuvG,GACFz2G,KAAKigC,OAASw1E,EAAK3vG,OAAO2wG,GAC1Bz2G,KAAKmgC,MAAQs1E,EAAK3vG,OAAO2wG,EAAK,GAC1BtB,IACFn1G,KAAKmgC,MAAQ+0E,EAAY10G,MAAMR,KAAKmgC,QAEtCs1E,EAAOA,EAAK77G,MAAM,EAAG68G,IACZtB,IAETn1G,KAAKigC,OAAS,GACdjgC,KAAKmgC,MAAQ,CAAC,GAEZs1E,IAAMz1G,KAAKk0G,SAAWuB,GACtBR,EAAgBU,IAChB31G,KAAKwsG,WAAaxsG,KAAKk0G,WACzBl0G,KAAKk0G,SAAW,KAIdl0G,KAAKk0G,UAAYl0G,KAAKigC,OAAQ,CAC5B1M,EAAIvzB,KAAKk0G,UAAY,GAAzB,IACIjhG,EAAIjT,KAAKigC,QAAU,GACvBjgC,KAAKkhB,KAAOqS,EAAItgB,CACjB,CAID,OADAjT,KAAKqT,KAAOrT,KAAKk2C,SACVl2C,IACR,EAaD6zG,EAAIpiH,UAAUykD,OAAS,WACrB,IAAI69D,EAAO/zG,KAAK+zG,MAAQ,GACpBA,IAEFA,GADAA,EAAOhmG,mBAAmBgmG,IACd/kG,QAAQ,OAAQ,KAC5B+kG,GAAQ,KAGV,IAAIj+F,EAAW9V,KAAK8V,UAAY,GAC5Bo+F,EAAWl0G,KAAKk0G,UAAY,GAC5BxsF,EAAO1nB,KAAK0nB,MAAQ,GACpBssF,GAAO,EACP7zE,EAAQ,GAERngC,KAAKg0G,KACPA,EAAOD,EAAO/zG,KAAKg0G,KACVh0G,KAAKwsG,WACdwH,EAAOD,IAAwC,IAAhC/zG,KAAKwsG,SAAStlG,QAAQ,KACjClH,KAAKwsG,SACL,IAAMxsG,KAAKwsG,SAAW,KACtBxsG,KAAKi0G,OACPD,GAAQ,IAAMh0G,KAAKi0G,OAInBj0G,KAAKmgC,OACL2J,EAAKurE,SAASr1G,KAAKmgC,QACnB7uC,OAAOoG,KAAKsI,KAAKmgC,OAAOnxC,SAC1BmxC,EAAQ+0E,EAAYlgG,UAAUhV,KAAKmgC,QAGrC,IAAIF,EAASjgC,KAAKigC,QAAWE,GAAU,IAAMA,GAAW,GAsBxD,OApBIrqB,GAAoC,MAAxBA,EAAShQ,QAAQ,KAAYgQ,GAAY,KAIrD9V,KAAK8zG,WACHh+F,GAAYm/F,EAAgBn/F,MAAuB,IAATk+F,GAC9CA,EAAO,MAAQA,GAAQ,IACnBE,GAAmC,MAAvBA,EAAS56E,OAAO,KAAY46E,EAAW,IAAMA,IACnDF,IACVA,EAAO,IAGLtsF,GAA2B,MAAnBA,EAAK4R,OAAO,KAAY5R,EAAO,IAAMA,GAC7CuY,GAA+B,MAArBA,EAAO3G,OAAO,KAAY2G,EAAS,IAAMA,GAOhDnqB,EAAWk+F,GALlBE,EAAWA,EAASllG,QAAQ,SAAS,SAASjK,GAC5C,OAAOgJ,mBAAmBhJ,EAC3B,MACDk7B,EAASA,EAAOjxB,QAAQ,IAAK,QAEgB0Y,CAC9C,EAMDmsF,EAAIpiH,UAAUga,QAAU,SAASguF,GAC/B,OAAOz5F,KAAKo0G,cAAcD,EAAS1a,GAAU,GAAO,IAAOvjD,QAC5D,EAOD29D,EAAIpiH,UAAU2iH,cAAgB,SAAS3a,GACrC,GAAI3vD,EAAKuqE,SAAS5a,GAAW,CAC3B,IAAIid,EAAM,IAAI7C,EACd6C,EAAIl2G,MAAMi5F,GAAU,GAAO,GAC3BA,EAAWid,CACZ,CAID,IAFA,IAAIrmH,EAAS,IAAIwjH,EACb8C,EAAQrlH,OAAOoG,KAAKsI,MACf42G,EAAK,EAAGA,EAAKD,EAAM3nH,OAAQ4nH,IAAM,CACxC,IAAIC,EAAOF,EAAMC,GACjBvmH,EAAOwmH,GAAQ72G,KAAK62G,EACrB,CAOD,GAHAxmH,EAAOq3B,KAAO+xE,EAAS/xE,KAGD,KAAlB+xE,EAASpmF,KAEX,OADAhjB,EAAOgjB,KAAOhjB,EAAO6lD,SACd7lD,EAIT,GAAIopG,EAASqa,UAAYra,EAAS3jF,SAAU,CAG1C,IADA,IAAIghG,EAAQxlH,OAAOoG,KAAK+hG,GACfsd,EAAK,EAAGA,EAAKD,EAAM9nH,OAAQ+nH,IAAM,CACxC,IAAIC,EAAOF,EAAMC,GACJ,aAATC,IACF3mH,EAAO2mH,GAAQvd,EAASud,GAC3B,CASD,OANI/B,EAAgB5kH,EAAOylB,WACvBzlB,EAAOm8G,WAAan8G,EAAO6jH,WAC7B7jH,EAAO6wB,KAAO7wB,EAAO6jH,SAAW,KAGlC7jH,EAAOgjB,KAAOhjB,EAAO6lD,SACd7lD,CACR,CAED,GAAIopG,EAAS3jF,UAAY2jF,EAAS3jF,WAAazlB,EAAOylB,SAAU,CAS9D,IAAKm/F,EAAgBxb,EAAS3jF,UAAW,CAEvC,IADA,IAAIpe,EAAOpG,OAAOoG,KAAK+hG,GACd9vE,EAAI,EAAGA,EAAIjyB,EAAK1I,OAAQ26B,IAAK,CACpC,IAAI+Q,EAAIhjC,EAAKiyB,GACbt5B,EAAOqqC,GAAK++D,EAAS/+D,EACtB,CAED,OADArqC,EAAOgjB,KAAOhjB,EAAO6lD,SACd7lD,CACR,CAGD,GADAA,EAAOylB,SAAW2jF,EAAS3jF,SACtB2jF,EAASua,MAASgB,EAAiBvb,EAAS3jF,UAS/CzlB,EAAO6jH,SAAWza,EAASya,aAT+B,CAE1D,IADA,IAAI+C,GAAWxd,EAASya,UAAY,IAAIvrG,MAAM,KACvCsuG,EAAQjoH,UAAYyqG,EAASua,KAAOiD,EAAQ11F,WAC9Ck4E,EAASua,OAAMva,EAASua,KAAO,IAC/Bva,EAAS+S,WAAU/S,EAAS+S,SAAW,IACzB,KAAfyK,EAAQ,IAAWA,EAAQr0F,QAAQ,IACnCq0F,EAAQjoH,OAAS,GAAGioH,EAAQr0F,QAAQ,IACxCvyB,EAAO6jH,SAAW+C,EAAQ9rG,KAAK,IAChC,CAUD,GAPA9a,EAAO4vC,OAASw5D,EAASx5D,OACzB5vC,EAAO8vC,MAAQs5D,EAASt5D,MACxB9vC,EAAO2jH,KAAOva,EAASua,MAAQ,GAC/B3jH,EAAO0jH,KAAOta,EAASsa,KACvB1jH,EAAOm8G,SAAW/S,EAAS+S,UAAY/S,EAASua,KAChD3jH,EAAO4jH,KAAOxa,EAASwa,KAEnB5jH,EAAO6jH,UAAY7jH,EAAO4vC,OAAQ,CACpC,IAAI1M,EAAIljC,EAAO6jH,UAAY,GACvBjhG,EAAI5iB,EAAO4vC,QAAU,GACzB5vC,EAAO6wB,KAAOqS,EAAItgB,CACnB,CAGD,OAFA5iB,EAAOyjH,QAAUzjH,EAAOyjH,SAAWra,EAASqa,QAC5CzjH,EAAOgjB,KAAOhjB,EAAO6lD,SACd7lD,CACR,CAED,IAAI6mH,EAAe7mH,EAAO6jH,UAA0C,MAA9B7jH,EAAO6jH,SAAS56E,OAAO,GACzD69E,EACI1d,EAASua,MACTva,EAASya,UAA4C,MAAhCza,EAASya,SAAS56E,OAAO,GAElD89E,EAAcD,GAAYD,GACX7mH,EAAO2jH,MAAQva,EAASya,SACvCmD,EAAgBD,EAChBE,EAAUjnH,EAAO6jH,UAAY7jH,EAAO6jH,SAASvrG,MAAM,MAAQ,GAE3D4uG,GADAN,EAAUxd,EAASya,UAAYza,EAASya,SAASvrG,MAAM,MAAQ,GACnDtY,EAAOylB,WAAam/F,EAAgB5kH,EAAOylB,WA2B3D,GApBIyhG,IACFlnH,EAAOm8G,SAAW,GAClBn8G,EAAO4jH,KAAO,KACV5jH,EAAO2jH,OACU,KAAfsD,EAAQ,GAAWA,EAAQ,GAAKjnH,EAAO2jH,KACtCsD,EAAQ10F,QAAQvyB,EAAO2jH,OAE9B3jH,EAAO2jH,KAAO,GACVva,EAAS3jF,WACX2jF,EAAS+S,SAAW,KACpB/S,EAASwa,KAAO,KACZxa,EAASua,OACQ,KAAfiD,EAAQ,GAAWA,EAAQ,GAAKxd,EAASua,KACxCiD,EAAQr0F,QAAQ62E,EAASua,OAEhCva,EAASua,KAAO,MAElBoD,EAAaA,IAA8B,KAAfH,EAAQ,IAA4B,KAAfK,EAAQ,KAGvDH,EAEF9mH,EAAO2jH,KAAQva,EAASua,MAA0B,KAAlBva,EAASua,KAC3Bva,EAASua,KAAO3jH,EAAO2jH,KACrC3jH,EAAOm8G,SAAY/S,EAAS+S,UAAkC,KAAtB/S,EAAS+S,SAC/B/S,EAAS+S,SAAWn8G,EAAOm8G,SAC7Cn8G,EAAO4vC,OAASw5D,EAASx5D,OACzB5vC,EAAO8vC,MAAQs5D,EAASt5D,MACxBm3E,EAAUL,OAEL,GAAIA,EAAQjoH,OAGZsoH,IAASA,EAAU,IACxBA,EAAQz5G,MACRy5G,EAAUA,EAAQ5+G,OAAOu+G,GACzB5mH,EAAO4vC,OAASw5D,EAASx5D,OACzB5vC,EAAO8vC,MAAQs5D,EAASt5D,WACnB,IAAK2J,EAAK0tE,kBAAkB/d,EAASx5D,QAAS,CAInD,GAAIs3E,EACFlnH,EAAOm8G,SAAWn8G,EAAO2jH,KAAOsD,EAAQ/1F,SAIpCk2F,KAAapnH,EAAO2jH,MAAQ3jH,EAAO2jH,KAAK9sG,QAAQ,KAAO,IAC1C7W,EAAO2jH,KAAKrrG,MAAM,QAEjCtY,EAAO0jH,KAAO0D,EAAWl2F,QACzBlxB,EAAO2jH,KAAO3jH,EAAOm8G,SAAWiL,EAAWl2F,SAW/C,OARAlxB,EAAO4vC,OAASw5D,EAASx5D,OACzB5vC,EAAO8vC,MAAQs5D,EAASt5D,MAEnB2J,EAAK4tE,OAAOrnH,EAAO6jH,WAAcpqE,EAAK4tE,OAAOrnH,EAAO4vC,UACvD5vC,EAAO6wB,MAAQ7wB,EAAO6jH,SAAW7jH,EAAO6jH,SAAW,KACpC7jH,EAAO4vC,OAAS5vC,EAAO4vC,OAAS,KAEjD5vC,EAAOgjB,KAAOhjB,EAAO6lD,SACd7lD,CACR,CAED,IAAKinH,EAAQtoH,OAWX,OARAqB,EAAO6jH,SAAW,KAEd7jH,EAAO4vC,OACT5vC,EAAO6wB,KAAO,IAAM7wB,EAAO4vC,OAE3B5vC,EAAO6wB,KAAO,KAEhB7wB,EAAOgjB,KAAOhjB,EAAO6lD,SACd7lD,EAcT,IARA,IAAIw+C,EAAOyoE,EAAQ19G,OAAO,GAAG,GACzB+9G,GACCtnH,EAAO2jH,MAAQva,EAASua,MAAQsD,EAAQtoH,OAAS,KACxC,MAAT6/C,GAAyB,OAATA,IAA2B,KAATA,EAInC+oE,EAAK,EACA9jH,EAAIwjH,EAAQtoH,OAAQ8E,GAAK,EAAGA,IAEtB,OADb+6C,EAAOyoE,EAAQxjH,IAEbwjH,EAAQnwG,OAAOrT,EAAG,GACA,OAAT+6C,GACTyoE,EAAQnwG,OAAOrT,EAAG,GAClB8jH,KACSA,IACTN,EAAQnwG,OAAOrT,EAAG,GAClB8jH,KAKJ,IAAKR,IAAeC,EAClB,KAAOO,IAAMA,EACXN,EAAQ10F,QAAQ,OAIhBw0F,GAA6B,KAAfE,EAAQ,IACpBA,EAAQ,IAA+B,MAAzBA,EAAQ,GAAGh+E,OAAO,IACpCg+E,EAAQ10F,QAAQ,IAGd+0F,GAAsD,MAAjCL,EAAQnsG,KAAK,KAAKrF,QAAQ,IACjDwxG,EAAQ/mH,KAAK,IAGf,IAUMknH,EAVFne,EAA4B,KAAfge,EAAQ,IACpBA,EAAQ,IAA+B,MAAzBA,EAAQ,GAAGh+E,OAAO,GAGjCi+E,IACFlnH,EAAOm8G,SAAWn8G,EAAO2jH,KAAO1a,EAAa,GACbge,EAAQtoH,OAASsoH,EAAQ/1F,QAAU,IAI/Dk2F,KAAapnH,EAAO2jH,MAAQ3jH,EAAO2jH,KAAK9sG,QAAQ,KAAO,IAC1C7W,EAAO2jH,KAAKrrG,MAAM,QAEjCtY,EAAO0jH,KAAO0D,EAAWl2F,QACzBlxB,EAAO2jH,KAAO3jH,EAAOm8G,SAAWiL,EAAWl2F,UAyB/C,OArBA61F,EAAaA,GAAe/mH,EAAO2jH,MAAQsD,EAAQtoH,UAEhCsqG,GACjBge,EAAQ10F,QAAQ,IAGb00F,EAAQtoH,OAIXqB,EAAO6jH,SAAWoD,EAAQnsG,KAAK,MAH/B9a,EAAO6jH,SAAW,KAClB7jH,EAAO6wB,KAAO,MAMX4oB,EAAK4tE,OAAOrnH,EAAO6jH,WAAcpqE,EAAK4tE,OAAOrnH,EAAO4vC,UACvD5vC,EAAO6wB,MAAQ7wB,EAAO6jH,SAAW7jH,EAAO6jH,SAAW,KACpC7jH,EAAO4vC,OAAS5vC,EAAO4vC,OAAS,KAEjD5vC,EAAO0jH,KAAOta,EAASsa,MAAQ1jH,EAAO0jH,KACtC1jH,EAAOyjH,QAAUzjH,EAAOyjH,SAAWra,EAASqa,QAC5CzjH,EAAOgjB,KAAOhjB,EAAO6lD,SACd7lD,CACR,EAEDwjH,EAAIpiH,UAAUskH,UAAY,WACxB,IAAI/B,EAAOh0G,KAAKg0G,KACZC,EAAOM,EAAY33E,KAAKo3E,GACxBC,IAEW,OADbA,EAAOA,EAAK,MAEVj0G,KAAKi0G,KAAOA,EAAKnuG,OAAO,IAE1BkuG,EAAOA,EAAKluG,OAAO,EAAGkuG,EAAKhlH,OAASilH,EAAKjlH,SAEvCglH,IAAMh0G,KAAKwsG,SAAWwH,EAC3B,0BCztBDt1F,EAAOiE,QAAU,CACf0xF,SAAU,SAAS74F,GACjB,MAAuB,iBAATA,CACf,EACD65F,SAAU,SAAS75F,GACjB,MAAuB,iBAATA,GAA6B,OAARA,CACpC,EACDk8F,OAAQ,SAASl8F,GACf,OAAe,OAARA,CACR,EACDg8F,kBAAmB,SAASh8F,GAC1B,OAAc,MAAPA,CACR,cCbH,MAAAq8F,EACE,CAAAC,OAAQ,CAAC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAM,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,MAAO,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,MAAO,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,MAAO,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,MAAO,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,KAAM,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,MAAO,KAAM,OAAQ,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,MAAO,KAAM,OAAQ,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,OACx9HC,OAAQ,CAAC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,IAAM,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,MAAO,KAAM,MAAO,IAAK,CAAC,MAAO,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,OAAQ,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,MAAO,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,MAAO,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,OAAQ,EAAK,CAAC,KAAM,MAAO,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,KAAM,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,MAAO,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,OACx9HC,OAAQ,CAAC,IAAK,CAAC,IAAK,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,KAAM,IAAK,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,IAAK,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,MAAO,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,KAAM,EAAK,CAAC,KAAM,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,MAAO,EAAK,CAAC,KAAM,KAAM,IAAK,IAAK,IAAK,IAAK,KAAM,MAAO,EAAK,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,EAAK,CAAC,IAAK,IAAK,IAAK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","sources":["webpack:///../../src/utils/int.ts","webpack:///../../src/utils/utf8.ts","webpack:///../src/ExtData.ts","webpack:///../src/DecodeError.ts","webpack:///../src/timestamp.ts","webpack:///../src/ExtensionCodec.ts","webpack:///../../src/utils/typedArrays.ts","webpack:///../src/Encoder.ts","webpack:///../../src/utils/prettyByte.ts","webpack:///../src/CachedKeyDecoder.ts","webpack:///../src/Decoder.ts","webpack:///../../src/BinaryMessageFormat.ts","webpack:///../../src/MessagePackHubProtocol.ts","webpack:///../../src/Utils.ts","webpack:///../../src/DefaultReconnectPolicy.ts","webpack:///../../src/Errors.ts","webpack:///../../src/HttpClient.ts","webpack:///../../src/FetchHttpClient.ts","webpack:///../../src/XhrHttpClient.ts","webpack:///../../src/DefaultHttpClient.ts","webpack:///../../src/HeaderNames.ts","webpack:///../../src/AbortController.ts","webpack:///../../src/LongPollingTransport.ts","webpack:///../../src/ServerSentEventsTransport.ts","webpack:///../../src/WebSocketTransport.ts","webpack:///../../src/HttpConnection.ts","webpack:///../../src/TextMessageFormat.ts","webpack:///../../src/HandshakeProtocol.ts","webpack:///../../src/Subject.ts","webpack:///../../src/HubConnection.ts","webpack:///../../src/JsonHubProtocol.ts","webpack:///../../src/HubConnectionBuilder.ts","webpack:///../../src/IHubProtocol.ts","webpack:///../../src/ILogger.ts","webpack:///../../src/ITransport.ts","webpack:///../../src/Loggers.ts","webpack:///../../node_modules/argon2-browser/dist/argon2.js","webpack:///../../node_modules/argon2-browser/lib/argon2.js","webpack:///../../node_modules/big-integer/BigInteger.js","webpack:///../../node_modules/lunr/lunr.js","webpack:///../../node_modules/node-forge/lib/aes.js","webpack:///../../node_modules/node-forge/lib/aesCipherSuites.js","webpack:///../../node_modules/node-forge/lib/asn1-validator.js","webpack:///../../node_modules/node-forge/lib/asn1.js","webpack:///../../node_modules/node-forge/lib/baseN.js","webpack:///../../node_modules/node-forge/lib/cipher.js","webpack:///../../node_modules/node-forge/lib/cipherModes.js","webpack:///../../node_modules/node-forge/lib/des.js","webpack:///../../node_modules/node-forge/lib/ed25519.js","webpack:///../../node_modules/node-forge/lib/forge.js","webpack:///../../node_modules/node-forge/lib/hmac.js","webpack:///../../node_modules/node-forge/lib/index.js","webpack:///../../node_modules/node-forge/lib/jsbn.js","webpack:///../../node_modules/node-forge/lib/kem.js","webpack:///../../node_modules/node-forge/lib/log.js","webpack:///../../node_modules/node-forge/lib/md.all.js","webpack:///../../node_modules/node-forge/lib/md.js","webpack:///../../node_modules/node-forge/lib/md5.js","webpack:///../../node_modules/node-forge/lib/mgf.js","webpack:///../../node_modules/node-forge/lib/mgf1.js","webpack:///../../node_modules/node-forge/lib/oids.js","webpack:///../../node_modules/node-forge/lib/pbe.js","webpack:///../../node_modules/node-forge/lib/pbkdf2.js","webpack:///../../node_modules/node-forge/lib/pem.js","webpack:///../../node_modules/node-forge/lib/pkcs1.js","webpack:///../../node_modules/node-forge/lib/pkcs12.js","webpack:///../../node_modules/node-forge/lib/pkcs7.js","webpack:///../../node_modules/node-forge/lib/pkcs7asn1.js","webpack:///../../node_modules/node-forge/lib/pki.js","webpack:///../../node_modules/node-forge/lib/prime.js","webpack:///../../node_modules/node-forge/lib/prng.js","webpack:///../../node_modules/node-forge/lib/pss.js","webpack:///../../node_modules/node-forge/lib/random.js","webpack:///../../node_modules/node-forge/lib/rc2.js","webpack:///../../node_modules/node-forge/lib/rsa.js","webpack:///../../node_modules/node-forge/lib/sha1.js","webpack:///../../node_modules/node-forge/lib/sha256.js","webpack:///../../node_modules/node-forge/lib/sha512.js","webpack:///../../node_modules/node-forge/lib/ssh.js","webpack:///../../node_modules/node-forge/lib/tls.js","webpack:///../../node_modules/node-forge/lib/util.js","webpack:///../../node_modules/node-forge/lib/x509.js","webpack:///../../node_modules/papaparse/papaparse.min.js","webpack:///../../node_modules/path-browserify/index.js","webpack:///../../node_modules/process/browser.js","webpack:///../../node_modules/punycode/punycode.js","webpack:///../../node_modules/querystring/decode.js","webpack:///../../node_modules/querystring/encode.js","webpack:///../../node_modules/querystring/index.js","webpack:///../../../src/internal/BehaviorSubject.ts","webpack:///../../../src/internal/Observable.ts","webpack:///../../../src/internal/ReplaySubject.ts","webpack:///../../../../src/internal/util/ObjectUnsubscribedError.ts","webpack:///../../../src/internal/Subject.ts","webpack:///../../../src/internal/NotificationFactories.ts","webpack:///../../../src/internal/Subscriber.ts","webpack:///../../../../src/internal/util/UnsubscriptionError.ts","webpack:///../../../src/internal/Subscription.ts","webpack:///../../../src/internal/config.ts","webpack:///../../../src/internal/firstValueFrom.ts","webpack:///../../../../src/internal/observable/empty.ts","webpack:///../../../../src/internal/operators/observeOn.ts","webpack:///../../../../src/internal/operators/subscribeOn.ts","webpack:///../../../../src/internal/scheduled/scheduleAsyncIterable.ts","webpack:///../../../../src/internal/scheduled/scheduled.ts","webpack:///../../../../src/internal/scheduled/scheduleObservable.ts","webpack:///../../../../src/internal/scheduled/scheduleArray.ts","webpack:///../../../../src/internal/scheduled/schedulePromise.ts","webpack:///../../../../src/internal/scheduled/scheduleIterable.ts","webpack:///../../../../src/internal/scheduled/scheduleReadableStreamLike.ts","webpack:///../../../../src/internal/observable/from.ts","webpack:///../../../../src/internal/observable/fromEvent.ts","webpack:///../../../../src/internal/observable/innerFrom.ts","webpack:///../../../../src/internal/observable/merge.ts","webpack:///../../../../src/internal/observable/of.ts","webpack:///../../../../src/internal/operators/OperatorSubscriber.ts","webpack:///../../../../src/internal/operators/concatMap.ts","webpack:///../../../../src/internal/operators/defaultIfEmpty.ts","webpack:///../../../../src/internal/operators/filter.ts","webpack:///../../../../src/internal/operators/map.ts","webpack:///../../../../src/internal/operators/mergeAll.ts","webpack:///../../../../src/internal/operators/mergeMap.ts","webpack:///../../../../src/internal/operators/mergeInternals.ts","webpack:///../../../../src/internal/operators/share.ts","webpack:///../../../../src/internal/operators/skip.ts","webpack:///../../../../src/internal/operators/takeUntil.ts","webpack:///../../../../src/internal/scheduler/dateTimestampProvider.ts","webpack:///../../../../src/internal/scheduler/timeoutProvider.ts","webpack:///../../../../src/internal/symbol/iterator.ts","webpack:///../../../../src/internal/symbol/observable.ts","webpack:///../../../../src/internal/util/EmptyError.ts","webpack:///../../../../src/internal/util/args.ts","webpack:///../../../../src/internal/util/arrRemove.ts","webpack:///../../../../src/internal/util/createErrorClass.ts","webpack:///../../../../src/internal/util/errorContext.ts","webpack:///../../../../src/internal/util/executeSchedule.ts","webpack:///../../../../src/internal/util/identity.ts","webpack:///../../../../src/internal/util/isArrayLike.ts","webpack:///../../../../src/internal/util/isAsyncIterable.ts","webpack:///../../../../src/internal/util/isFunction.ts","webpack:///../../../../src/internal/util/isInteropObservable.ts","webpack:///../../../../src/internal/util/isIterable.ts","webpack:///../../../../src/internal/util/isPromise.ts","webpack:///../../../../src/internal/util/isReadableStreamLike.ts","webpack:///../../../../src/internal/util/isScheduler.ts","webpack:///../../../../src/internal/util/lift.ts","webpack:///../../../../src/internal/util/mapOneOrManyArgs.ts","webpack:///../../../../src/internal/util/noop.ts","webpack:///../../../../src/internal/util/pipe.ts","webpack:///../../../../src/internal/util/reportUnhandledError.ts","webpack:///../../../../src/internal/util/throwUnobservableError.ts","webpack:///../../../src/domain-without-suffix.ts","webpack:///../../../src/domain.ts","webpack:///../../../src/extract-hostname.ts","webpack:///../../../src/factory.ts","webpack:///../../../src/is-ip.ts","webpack:///../../../src/is-valid.ts","webpack:///../../../../src/lookup/fast-path.ts","webpack:///../../../src/options.ts","webpack:///../../../src/subdomain.ts","webpack:///../../index.ts","webpack:///../../../../src/data/trie.ts","webpack:///../../../src/suffix-trie.ts","webpack:///../../node_modules/tslib/tslib.es6.js","webpack:///../../node_modules/url/url.js","webpack:///../../node_modules/url/util.js","webpack:///../src/adjacency_graphs.coffee","webpack:///../src/feedback.coffee","webpack:///../src/frequency_lists.coffee","webpack:///../src/main.coffee","webpack:///../src/matching.coffee","webpack:///../src/scoring.coffee","webpack:///../src/time_estimates.coffee","webpack:///../../node_modules/argon2-browser/dist/argon2.wasm","webpack:///../../../../../packages/core/src/util/property.ts","webpack:///../../../../../packages/core/src/util/stringify.ts","webpack:///../../../../../packages/core/src/di/forward_ref.ts","webpack:///../../../../../packages/core/src/errors.ts","webpack:///../../../../../packages/core/src/render3/util/stringify_utils.ts","webpack:///../../../../../packages/core/src/render3/errors_di.ts","webpack:///../../../../../packages/core/src/util/assert.ts","webpack:///../../../../../packages/core/src/di/interface/defs.ts","webpack:///../../../../../packages/core/src/di/interface/injector.ts","webpack:///../../../../../packages/core/src/di/inject_switch.ts","webpack:///../../../../../packages/core/src/util/closure.ts","webpack:///../../../../../packages/core/src/change_detection/constants.ts","webpack:///../../../../../packages/core/src/metadata/view.ts","webpack:///../../../../../packages/core/src/util/global.ts","webpack:///../../../../../packages/core/src/util/empty.ts","webpack:///../../../../../packages/core/src/render3/fields.ts","webpack:///../../../../../packages/core/src/render3/definition.ts","webpack:///../../../../../packages/core/src/render3/interfaces/view.ts","webpack:///../../../../../packages/core/src/render3/interfaces/container.ts","webpack:///../../../../../packages/core/src/render3/interfaces/type_checks.ts","webpack:///../../../../../packages/core/src/render3/definition_factory.ts","webpack:///../../../../../packages/core/src/interface/simple_change.ts","webpack:///../../../../../packages/core/src/render3/features/ng_onchanges_feature.ts","webpack:///../../../../../packages/core/src/render3/profiler.ts","webpack:///../../../../../packages/core/src/render3/namespaces.ts","webpack:///../../../../../packages/core/src/render3/util/view_utils.ts","webpack:///../../../../../packages/core/src/render3/state.ts","webpack:///../../../../../packages/core/src/render3/hooks.ts","webpack:///../../../../../packages/core/src/render3/interfaces/injector.ts","webpack:///../../../../../packages/core/src/render3/util/attrs_utils.ts","webpack:///../../../../../packages/core/src/render3/util/injector_utils.ts","webpack:///../../../../../packages/core/src/render3/di.ts","webpack:///../../../../../packages/core/src/render3/instructions/di_attr.ts","webpack:///../../../../../packages/core/src/util/decorators.ts","webpack:///../../../../../packages/core/src/di/metadata_attr.ts","webpack:///../../../../../packages/core/src/di/injection_token.ts","webpack:///../../../../../packages/core/src/metadata/di.ts","webpack:///../../../../../packages/core/src/compiler/compiler_facade_interface.ts","webpack:///../../../../../packages/core/src/compiler/compiler_facade.ts","webpack:///../../../../../packages/core/src/interface/type.ts","webpack:///../../../../../packages/core/src/util/array_utils.ts","webpack:///../../../../../packages/core/src/reflection/reflection_capabilities.ts","webpack:///../../../../../packages/core/src/di/injector_compatibility.ts","webpack:///../../../../../packages/core/src/di/metadata.ts","webpack:///../../../../../packages/core/src/di/jit/util.ts","webpack:///../../../../../packages/core/src/metadata/resource_loading.ts","webpack:///../../../../../packages/core/src/linker/ng_module_registration.ts","webpack:///../../../../../packages/core/src/render3/interfaces/document.ts","webpack:///../../../../../packages/core/src/util/security/trusted_types.ts","webpack:///../../../../../packages/core/src/util/security/trusted_types_bypass.ts","webpack:///../../../../../packages/core/src/sanitization/bypass.ts","webpack:///../../../../../packages/core/src/sanitization/inert_body.ts","webpack:///../../../../../packages/core/src/sanitization/url_sanitizer.ts","webpack:///../../../../../packages/core/src/sanitization/html_sanitizer.ts","webpack:///../../../../../packages/core/src/sanitization/security.ts","webpack:///../../../../../packages/core/src/sanitization/sanitization.ts","webpack:///../../../../../packages/core/src/di/initializer_token.ts","webpack:///../../../../../packages/core/src/di/injector_token.ts","webpack:///../../../../../packages/core/src/di/internal_tokens.ts","webpack:///../../../../../packages/core/src/di/null_injector.ts","webpack:///../../../../../packages/core/src/di/provider_collection.ts","webpack:///../../../../../packages/core/src/di/scope.ts","webpack:///../../../../../packages/core/src/di/r3_injector.ts","webpack:///../../../../../packages/core/src/linker/component_factory.ts","webpack:///../../../../../packages/core/src/linker/component_factory_resolver.ts","webpack:///../../../../../packages/core/src/linker/element_ref.ts","webpack:///../../../../../packages/core/src/render/api.ts","webpack:///../../../../../packages/core/src/sanitization/sanitizer.ts","webpack:///../../../../../packages/core/src/version.ts","webpack:///../../../../../packages/core/src/view/provider_flags.ts","webpack:///../../../../../packages/core/src/render3/instructions/element_validation.ts","webpack:///../../../../../packages/core/src/util/errors.ts","webpack:///../../../../../packages/core/src/error_handler.ts","webpack:///../../../../../packages/core/src/util/dom.ts","webpack:///../../../../../packages/core/src/render3/interfaces/lview_tracking.ts","webpack:///../../../../../packages/core/src/render3/context_discovery.ts","webpack:///../../../../../packages/core/src/render3/util/misc_utils.ts","webpack:///../../../../../packages/core/src/render/api_flags.ts","webpack:///../../../../../packages/core/src/render3/i18n/i18n_tree_shaking.ts","webpack:///../../../../../packages/core/src/render3/util/view_traversal_utils.ts","webpack:///../../../../../packages/core/src/render3/node_manipulation.ts","webpack:///../../../../../packages/core/src/render3/styling/class_differ.ts","webpack:///../../../../../packages/core/src/render3/node_selector_matcher.ts","webpack:///../../../../../packages/core/src/render3/tokens.ts","webpack:///../../../../../packages/core/src/render3/instructions/advance.ts","webpack:///../../../../../packages/core/src/di/jit/environment.ts","webpack:///../../../../../packages/core/src/di/jit/injectable.ts","webpack:///../../../../../packages/core/src/di/injectable.ts","webpack:///../../../../../packages/core/src/di/create_injector.ts","webpack:///../../../../../packages/core/src/di/injector.ts","webpack:///../../../../../packages/core/src/di/reflective_errors.ts","webpack:///../../../../../packages/core/src/di/reflective_key.ts","webpack:///../../../../../packages/core/src/di/reflective_provider.ts","webpack:///../../../../../packages/core/src/di/reflective_injector.ts","webpack:///../../../../../packages/core/src/render3/instructions/di.ts","webpack:///../../../../../packages/core/src/render3/interfaces/styling.ts","webpack:///../../../../../packages/core/src/render3/instructions/shared.ts","webpack:///../../../../../packages/core/src/render3/styling/static_styling.ts","webpack:///../../../../../packages/core/src/render3/collect_native_nodes.ts","webpack:///../../../../../packages/core/src/render3/view_ref.ts","webpack:///../../../../../packages/core/src/render3/component_ref.ts","webpack:///../../../../../packages/core/src/render3/features/inherit_definition_feature.ts","webpack:///../../../../../packages/core/src/render3/features/copy_definition_feature.ts","webpack:///../../../../../packages/core/src/util/symbol.ts","webpack:///../../../../../packages/core/src/util/iterable.ts","webpack:///../../../../../packages/core/src/render3/bindings.ts","webpack:///../../../../../packages/core/src/render3/instructions/attribute.ts","webpack:///../../../../../packages/core/src/render3/instructions/interpolation.ts","webpack:///../../../../../packages/core/src/render3/instructions/attribute_interpolation.ts","webpack:///../../../../../packages/core/src/render3/instructions/template.ts","webpack:///../../../../../packages/core/src/render3/instructions/storage.ts","webpack:///../../../../../packages/core/src/render3/instructions/property.ts","webpack:///../../../../../packages/core/src/render3/instructions/element.ts","webpack:///../../../../../packages/core/src/render3/interfaces/node.ts","webpack:///../../../../../packages/core/src/render3/instructions/element_container.ts","webpack:///../../../../../packages/core/src/render3/instructions/get_current_view.ts","webpack:///../../../../../packages/core/src/util/lang.ts","webpack:///../../../../../packages/core/src/render3/instructions/listener.ts","webpack:///../../../../../packages/core/src/render3/instructions/next_context.ts","webpack:///../../../../../packages/core/src/render3/instructions/projection.ts","webpack:///../../../../../packages/core/src/render3/instructions/property_interpolation.ts","webpack:///../../../../../packages/core/src/render3/styling/style_binding_list.ts","webpack:///../../../../../packages/core/src/render3/styling/styling_parser.ts","webpack:///../../../../../packages/core/src/render3/instructions/styling.ts","webpack:///../../../../../packages/core/src/render3/instructions/text.ts","webpack:///../../../../../packages/core/src/render3/instructions/text_interpolation.ts","webpack:///../../../../../packages/core/src/render3/instructions/class_map_interpolation.ts","webpack:///../../../../../packages/core/src/render3/instructions/style_map_interpolation.ts","webpack:///../../../../../packages/core/src/render3/instructions/style_prop_interpolation.ts","webpack:///../../../../../packages/core/src/render3/instructions/host_property.ts","webpack:///../../../../../packages/core/src/i18n/locale_en.ts","webpack:///../../../../../packages/core/src/i18n/locale_data_api.ts","webpack:///../../../../../packages/core/src/i18n/localization.ts","webpack:///../../../../../packages/core/src/render3/interfaces/i18n.ts","webpack:///../../../../../packages/core/src/render3/i18n/i18n_locale_id.ts","webpack:///../../../../../packages/core/src/render3/node_manipulation_i18n.ts","webpack:///../../../../../packages/core/src/render3/i18n/i18n_insert_before_index.ts","webpack:///../../../../../packages/core/src/render3/i18n/i18n_util.ts","webpack:///../../../../../packages/core/src/render3/i18n/i18n_apply.ts","webpack:///../../../../../packages/core/src/render3/instructions/i18n_icu_container_visitor.ts","webpack:///../../../../../packages/core/src/render3/i18n/i18n_parse.ts","webpack:///../../../../../packages/core/src/render3/i18n/i18n_postprocess.ts","webpack:///../../../../../packages/core/src/render3/instructions/i18n.ts","webpack:///../../../../../packages/core/src/render3/di_setup.ts","webpack:///../../../../../packages/core/src/render3/features/providers_feature.ts","webpack:///../../../../../packages/core/src/linker/ng_module_factory.ts","webpack:///../../../../../packages/core/src/render3/ng_module_ref.ts","webpack:///../../../../../packages/core/src/render3/features/standalone_feature.ts","webpack:///../../../../../packages/core/src/render3/pure_function.ts","webpack:///../../../../../packages/core/src/render3/pipe.ts","webpack:///../../../../../packages/core/src/event_emitter.ts","webpack:///../../../../../packages/core/src/linker/query_list.ts","webpack:///../../../../../packages/core/src/linker/template_ref.ts","webpack:///../../../../../packages/core/src/linker/view_container_ref.ts","webpack:///../../../../../packages/core/src/render3/query.ts","webpack:///../../../../../packages/core/src/render3/view_engine_compatibility_prebound.ts","webpack:///../../../../../packages/core/src/render3/jit/environment.ts","webpack:///../../../../../packages/core/src/render3/jit/jit_options.ts","webpack:///../../../../../packages/core/src/render3/jit/util.ts","webpack:///../../../../../packages/core/src/render3/jit/module.ts","webpack:///../../../../../packages/core/src/render3/jit/directive.ts","webpack:///../../../../../packages/core/src/render3/jit/pipe.ts","webpack:///../../../../../packages/core/src/metadata/directives.ts","webpack:///../../../../../packages/core/src/metadata/ng_module.ts","webpack:///../../../../../packages/core/src/util/noop.ts","webpack:///../../../../../packages/core/src/r3_symbols.ts","webpack:///../../../../../packages/core/src/application_init.ts","webpack:///../../../../../packages/core/src/application_tokens.ts","webpack:///../../../../../packages/core/src/console.ts","webpack:///../../../../../packages/core/src/i18n/tokens.ts","webpack:///../../../../../packages/core/src/linker/compiler.ts","webpack:///../../../../../packages/core/src/util/microtask.ts","webpack:///../../../../../packages/core/src/zone/ng_zone.ts","webpack:///../../../../../packages/core/src/util/raf.ts","webpack:///../../../../../packages/core/src/testability/testability.ts","webpack:///../../../../../packages/core/src/application_ref.ts","webpack:///../../../../../packages/core/src/change_detection/change_detector_ref.ts","webpack:///../../../../../packages/core/src/debug/debug_node.ts","webpack:///../../../../../packages/core/src/change_detection/differs/default_iterable_differ.ts","webpack:///../../../../../packages/core/src/change_detection/differs/default_keyvalue_differ.ts","webpack:///../../../../../packages/core/src/change_detection/differs/iterable_differs.ts","webpack:///../../../../../packages/core/src/change_detection/differs/keyvalue_differs.ts","webpack:///../../../../../packages/core/src/change_detection/change_detection.ts","webpack:///../../../../../packages/core/src/platform_core_providers.ts","webpack:///../../../../../packages/core/src/application_module.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,"// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\n// Not exported from index.\r\n/** @private */\r\nexport class BinaryMessageFormat {\r\n\r\n    // The length prefix of binary messages is encoded as VarInt. Read the comment in\r\n    // the BinaryMessageParser.TryParseMessage for details.\r\n\r\n    public static write(output: Uint8Array): ArrayBuffer {\r\n        let size = output.byteLength || output.length;\r\n        const lenBuffer = [];\r\n        do {\r\n            let sizePart = size & 0x7f;\r\n            size = size >> 7;\r\n            if (size > 0) {\r\n                sizePart |= 0x80;\r\n            }\r\n            lenBuffer.push(sizePart);\r\n        }\r\n        while (size > 0);\r\n\r\n        size = output.byteLength || output.length;\r\n\r\n        const buffer = new Uint8Array(lenBuffer.length + size);\r\n        buffer.set(lenBuffer, 0);\r\n        buffer.set(output, lenBuffer.length);\r\n        return buffer.buffer;\r\n    }\r\n\r\n    public static parse(input: ArrayBuffer): Uint8Array[] {\r\n        const result: Uint8Array[] = [];\r\n        const uint8Array = new Uint8Array(input);\r\n        const maxLengthPrefixSize = 5;\r\n        const numBitsToShift = [0, 7, 14, 21, 28 ];\r\n\r\n        for (let offset = 0; offset < input.byteLength;) {\r\n            let numBytes = 0;\r\n            let size = 0;\r\n            let byteRead;\r\n            do {\r\n                byteRead = uint8Array[offset + numBytes];\r\n                size = size | ((byteRead & 0x7f) << (numBitsToShift[numBytes]));\r\n                numBytes++;\r\n            }\r\n            while (numBytes < Math.min(maxLengthPrefixSize, input.byteLength - offset) && (byteRead & 0x80) !== 0);\r\n\r\n            if ((byteRead & 0x80) !== 0 && numBytes < maxLengthPrefixSize) {\r\n                throw new Error(\"Cannot read message size.\");\r\n            }\r\n\r\n            if (numBytes === maxLengthPrefixSize && byteRead > 7) {\r\n                throw new Error(\"Messages bigger than 2GB are not supported.\");\r\n            }\r\n\r\n            if (uint8Array.byteLength >= (offset + numBytes + size)) {\r\n                // IE does not support .slice() so use subarray\r\n                result.push(uint8Array.slice\r\n                    ? uint8Array.slice(offset + numBytes, offset + numBytes + size)\r\n                    : uint8Array.subarray(offset + numBytes, offset + numBytes + size));\r\n            } else {\r\n                throw new Error(\"Incomplete message.\");\r\n            }\r\n\r\n            offset = offset + numBytes + size;\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { Encoder, Decoder } from \"@msgpack/msgpack\";\r\n\r\nimport { MessagePackOptions } from \"./MessagePackOptions\";\r\n\r\nimport {\r\n    CancelInvocationMessage, CompletionMessage, HubMessage, IHubProtocol, ILogger, InvocationMessage,\r\n    LogLevel, MessageHeaders, MessageType, NullLogger, StreamInvocationMessage, StreamItemMessage, TransferFormat,\r\n} from \"@microsoft/signalr\";\r\n\r\nimport { BinaryMessageFormat } from \"./BinaryMessageFormat\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n\r\n// TypeDoc's @inheritDoc and @link don't work across modules :(\r\n\r\n// constant encoding of the ping message\r\n// see: https://github.com/aspnet/SignalR/blob/dev/specs/HubProtocol.md#ping-message-encoding-1\r\n// Don't use Uint8Array.from as IE does not support it\r\nconst SERIALIZED_PING_MESSAGE: Uint8Array = new Uint8Array([0x91, MessageType.Ping]);\r\n\r\n/** Implements the MessagePack Hub Protocol */\r\nexport class MessagePackHubProtocol implements IHubProtocol {\r\n    /** The name of the protocol. This is used by SignalR to resolve the protocol between the client and server. */\r\n    public readonly name: string = \"messagepack\";\r\n    /** The version of the protocol. */\r\n    public readonly version: number = 1;\r\n    /** The TransferFormat of the protocol. */\r\n    public readonly transferFormat: TransferFormat = TransferFormat.Binary;\r\n\r\n    private readonly _errorResult = 1;\r\n    private readonly _voidResult = 2;\r\n    private readonly _nonVoidResult = 3;\r\n\r\n    private readonly _encoder: Encoder<undefined>;\r\n    private readonly _decoder: Decoder<undefined>;\r\n\r\n    /**\r\n     *\r\n     * @param messagePackOptions MessagePack options passed to @msgpack/msgpack\r\n     */\r\n    constructor(messagePackOptions?: MessagePackOptions) {\r\n        messagePackOptions = messagePackOptions || {};\r\n        this._encoder = new Encoder(\r\n            messagePackOptions.extensionCodec,\r\n            messagePackOptions.context,\r\n            messagePackOptions.maxDepth,\r\n            messagePackOptions.initialBufferSize,\r\n            messagePackOptions.sortKeys,\r\n            messagePackOptions.forceFloat32,\r\n            messagePackOptions.ignoreUndefined,\r\n            messagePackOptions.forceIntegerToFloat,\r\n        );\r\n\r\n        this._decoder = new Decoder(\r\n            messagePackOptions.extensionCodec,\r\n            messagePackOptions.context,\r\n            messagePackOptions.maxStrLength,\r\n            messagePackOptions.maxBinLength,\r\n            messagePackOptions.maxArrayLength,\r\n            messagePackOptions.maxMapLength,\r\n            messagePackOptions.maxExtLength,\r\n        );\r\n    }\r\n\r\n    /** Creates an array of HubMessage objects from the specified serialized representation.\r\n     *\r\n     * @param {ArrayBuffer} input An ArrayBuffer containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    public parseMessages(input: ArrayBuffer, logger: ILogger): HubMessage[] {\r\n        // The interface does allow \"string\" to be passed in, but this implementation does not. So let's throw a useful error.\r\n        if (!(isArrayBuffer(input))) {\r\n            throw new Error(\"Invalid input for MessagePack hub protocol. Expected an ArrayBuffer.\");\r\n        }\r\n\r\n        if (logger === null) {\r\n            logger = NullLogger.instance;\r\n        }\r\n\r\n        const messages = BinaryMessageFormat.parse(input);\r\n\r\n        const hubMessages = [];\r\n        for (const message of messages) {\r\n            const parsedMessage = this._parseMessage(message, logger);\r\n            // Can be null for an unknown message. Unknown message is logged in parseMessage\r\n            if (parsedMessage) {\r\n                hubMessages.push(parsedMessage);\r\n            }\r\n        }\r\n\r\n        return hubMessages;\r\n    }\r\n\r\n    /** Writes the specified HubMessage to an ArrayBuffer and returns it.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {ArrayBuffer} An ArrayBuffer containing the serialized representation of the message.\r\n     */\r\n    public writeMessage(message: HubMessage): ArrayBuffer {\r\n        switch (message.type) {\r\n            case MessageType.Invocation:\r\n                return this._writeInvocation(message as InvocationMessage);\r\n            case MessageType.StreamInvocation:\r\n                return this._writeStreamInvocation(message as StreamInvocationMessage);\r\n            case MessageType.StreamItem:\r\n                return this._writeStreamItem(message as StreamItemMessage);\r\n            case MessageType.Completion:\r\n                return this._writeCompletion(message as CompletionMessage);\r\n            case MessageType.Ping:\r\n                return BinaryMessageFormat.write(SERIALIZED_PING_MESSAGE);\r\n            case MessageType.CancelInvocation:\r\n                return this._writeCancelInvocation(message as CancelInvocationMessage);\r\n            default:\r\n                throw new Error(\"Invalid message type.\");\r\n        }\r\n    }\r\n\r\n    private _parseMessage(input: Uint8Array, logger: ILogger): HubMessage | null {\r\n        if (input.length === 0) {\r\n            throw new Error(\"Invalid payload.\");\r\n        }\r\n\r\n        const properties = this._decoder.decode(input) as any;\r\n        if (properties.length === 0 || !(properties instanceof Array)) {\r\n            throw new Error(\"Invalid payload.\");\r\n        }\r\n\r\n        const messageType = properties[0] as MessageType;\r\n\r\n        switch (messageType) {\r\n            case MessageType.Invocation:\r\n                return this._createInvocationMessage(this._readHeaders(properties), properties);\r\n            case MessageType.StreamItem:\r\n                return this._createStreamItemMessage(this._readHeaders(properties), properties);\r\n            case MessageType.Completion:\r\n                return this._createCompletionMessage(this._readHeaders(properties), properties);\r\n            case MessageType.Ping:\r\n                return this._createPingMessage(properties);\r\n            case MessageType.Close:\r\n                return this._createCloseMessage(properties);\r\n            default:\r\n                // Future protocol changes can add message types, old clients can ignore them\r\n                logger.log(LogLevel.Information, \"Unknown message type '\" + messageType + \"' ignored.\");\r\n                return null;\r\n        }\r\n    }\r\n\r\n    private _createCloseMessage(properties: any[]): HubMessage {\r\n        // check minimum length to allow protocol to add items to the end of objects in future releases\r\n        if (properties.length < 2) {\r\n            throw new Error(\"Invalid payload for Close message.\");\r\n        }\r\n\r\n        return {\r\n            // Close messages have no headers.\r\n            allowReconnect: properties.length >= 3 ? properties[2] : undefined,\r\n            error: properties[1],\r\n            type: MessageType.Close,\r\n        } as HubMessage;\r\n    }\r\n\r\n    private _createPingMessage(properties: any[]): HubMessage {\r\n        // check minimum length to allow protocol to add items to the end of objects in future releases\r\n        if (properties.length < 1) {\r\n            throw new Error(\"Invalid payload for Ping message.\");\r\n        }\r\n\r\n        return {\r\n            // Ping messages have no headers.\r\n            type: MessageType.Ping,\r\n        } as HubMessage;\r\n    }\r\n\r\n    private _createInvocationMessage(headers: MessageHeaders, properties: any[]): InvocationMessage {\r\n        // check minimum length to allow protocol to add items to the end of objects in future releases\r\n        if (properties.length < 5) {\r\n            throw new Error(\"Invalid payload for Invocation message.\");\r\n        }\r\n\r\n        const invocationId = properties[2] as string;\r\n        if (invocationId) {\r\n            return {\r\n                arguments: properties[4],\r\n                headers,\r\n                invocationId,\r\n                streamIds: [],\r\n                target: properties[3] as string,\r\n                type: MessageType.Invocation,\r\n            };\r\n        } else {\r\n            return {\r\n                arguments: properties[4],\r\n                headers,\r\n                streamIds: [],\r\n                target: properties[3],\r\n                type: MessageType.Invocation,\r\n            };\r\n        }\r\n\r\n    }\r\n\r\n    private _createStreamItemMessage(headers: MessageHeaders, properties: any[]): StreamItemMessage {\r\n        // check minimum length to allow protocol to add items to the end of objects in future releases\r\n        if (properties.length < 4) {\r\n            throw new Error(\"Invalid payload for StreamItem message.\");\r\n        }\r\n\r\n        return {\r\n            headers,\r\n            invocationId: properties[2],\r\n            item: properties[3],\r\n            type: MessageType.StreamItem,\r\n        } as StreamItemMessage;\r\n    }\r\n\r\n    private _createCompletionMessage(headers: MessageHeaders, properties: any[]): CompletionMessage {\r\n        // check minimum length to allow protocol to add items to the end of objects in future releases\r\n        if (properties.length < 4) {\r\n            throw new Error(\"Invalid payload for Completion message.\");\r\n        }\r\n\r\n        const resultKind = properties[3];\r\n\r\n        if (resultKind !== this._voidResult && properties.length < 5) {\r\n            throw new Error(\"Invalid payload for Completion message.\");\r\n        }\r\n\r\n        let error: string | undefined;\r\n        let result: any;\r\n\r\n        switch (resultKind) {\r\n            case this._errorResult:\r\n                error = properties[4];\r\n                break;\r\n            case this._nonVoidResult:\r\n                result = properties[4];\r\n                break;\r\n        }\r\n\r\n        const completionMessage: CompletionMessage = {\r\n            error,\r\n            headers,\r\n            invocationId: properties[2],\r\n            result,\r\n            type: MessageType.Completion,\r\n        };\r\n\r\n        return completionMessage;\r\n    }\r\n\r\n    private _writeInvocation(invocationMessage: InvocationMessage): ArrayBuffer {\r\n        let payload: any;\r\n        if (invocationMessage.streamIds) {\r\n            payload = this._encoder.encode([MessageType.Invocation, invocationMessage.headers || {}, invocationMessage.invocationId || null,\r\n            invocationMessage.target, invocationMessage.arguments, invocationMessage.streamIds]);\r\n        } else {\r\n            payload = this._encoder.encode([MessageType.Invocation, invocationMessage.headers || {}, invocationMessage.invocationId || null,\r\n            invocationMessage.target, invocationMessage.arguments]);\r\n        }\r\n\r\n        return BinaryMessageFormat.write(payload.slice());\r\n    }\r\n\r\n    private _writeStreamInvocation(streamInvocationMessage: StreamInvocationMessage): ArrayBuffer {\r\n        let payload: any;\r\n        if (streamInvocationMessage.streamIds) {\r\n            payload = this._encoder.encode([MessageType.StreamInvocation, streamInvocationMessage.headers || {}, streamInvocationMessage.invocationId,\r\n            streamInvocationMessage.target, streamInvocationMessage.arguments, streamInvocationMessage.streamIds]);\r\n        } else {\r\n            payload = this._encoder.encode([MessageType.StreamInvocation, streamInvocationMessage.headers || {}, streamInvocationMessage.invocationId,\r\n            streamInvocationMessage.target, streamInvocationMessage.arguments]);\r\n        }\r\n\r\n        return BinaryMessageFormat.write(payload.slice());\r\n    }\r\n\r\n    private _writeStreamItem(streamItemMessage: StreamItemMessage): ArrayBuffer {\r\n        const payload = this._encoder.encode([MessageType.StreamItem, streamItemMessage.headers || {}, streamItemMessage.invocationId,\r\n        streamItemMessage.item]);\r\n\r\n        return BinaryMessageFormat.write(payload.slice());\r\n    }\r\n\r\n    private _writeCompletion(completionMessage: CompletionMessage): ArrayBuffer {\r\n        const resultKind = completionMessage.error ? this._errorResult : completionMessage.result ? this._nonVoidResult : this._voidResult;\r\n\r\n        let payload: any;\r\n        switch (resultKind) {\r\n            case this._errorResult:\r\n                payload = this._encoder.encode([MessageType.Completion, completionMessage.headers || {}, completionMessage.invocationId, resultKind, completionMessage.error]);\r\n                break;\r\n            case this._voidResult:\r\n                payload = this._encoder.encode([MessageType.Completion, completionMessage.headers || {}, completionMessage.invocationId, resultKind]);\r\n                break;\r\n            case this._nonVoidResult:\r\n                payload = this._encoder.encode([MessageType.Completion, completionMessage.headers || {}, completionMessage.invocationId, resultKind, completionMessage.result]);\r\n                break;\r\n        }\r\n\r\n        return BinaryMessageFormat.write(payload.slice());\r\n    }\r\n\r\n    private _writeCancelInvocation(cancelInvocationMessage: CancelInvocationMessage): ArrayBuffer {\r\n        const payload = this._encoder.encode([MessageType.CancelInvocation, cancelInvocationMessage.headers || {}, cancelInvocationMessage.invocationId]);\r\n\r\n        return BinaryMessageFormat.write(payload.slice());\r\n    }\r\n\r\n    private _readHeaders(properties: any): MessageHeaders {\r\n        const headers: MessageHeaders = properties[1] as MessageHeaders;\r\n        if (typeof headers !== \"object\") {\r\n            throw new Error(\"Invalid headers.\");\r\n        }\r\n        return headers;\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\n// Copied from signalr/Utils.ts\r\n/** @private */\r\nexport function isArrayBuffer(val: any): val is ArrayBuffer {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n        // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n        (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { IRetryPolicy, RetryContext } from \"./IRetryPolicy\";\r\n\r\n// 0, 2, 10, 30 second delays before reconnect attempts.\r\nconst DEFAULT_RETRY_DELAYS_IN_MILLISECONDS = [0, 2000, 10000, 30000, null];\r\n\r\n/** @private */\r\nexport class DefaultReconnectPolicy implements IRetryPolicy {\r\n    private readonly _retryDelays: (number | null)[];\r\n\r\n    constructor(retryDelays?: number[]) {\r\n        this._retryDelays = retryDelays !== undefined ? [...retryDelays, null] : DEFAULT_RETRY_DELAYS_IN_MILLISECONDS;\r\n    }\r\n\r\n    public nextRetryDelayInMilliseconds(retryContext: RetryContext): number | null {\r\n        return this._retryDelays[retryContext.previousRetryCount];\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { HttpTransportType } from \"./ITransport\";\r\n\r\n/** Error thrown when an HTTP request fails. */\r\nexport class HttpError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private __proto__: Error;\r\n\r\n    /** The HTTP status code represented by this error. */\r\n    public statusCode: number;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     * @param {number} statusCode The HTTP status code represented by this error.\r\n     */\r\n    constructor(errorMessage: string, statusCode: number) {\r\n        const trueProto = new.target.prototype;\r\n        super(`${errorMessage}: Status code '${statusCode}'`);\r\n        this.statusCode = statusCode;\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when a timeout elapses. */\r\nexport class TimeoutError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private __proto__: Error;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.TimeoutError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage: string = \"A timeout occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when an action is aborted. */\r\nexport class AbortError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private __proto__: Error;\r\n\r\n    /** Constructs a new instance of {@link AbortError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage: string = \"An abort occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when the selected transport is unsupported by the browser. */\r\n/** @private */\r\nexport class UnsupportedTransportError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private __proto__: Error;\r\n\r\n    /** The {@link @microsoft/signalr.HttpTransportType} this error occured on. */\r\n    public transport: HttpTransportType;\r\n\r\n    /** The type name of this error. */\r\n    public errorType: string;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.UnsupportedTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occured on.\r\n     */\r\n    constructor(message: string, transport: HttpTransportType) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'UnsupportedTransportError';\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when the selected transport is disabled by the browser. */\r\n/** @private */\r\nexport class DisabledTransportError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private __proto__: Error;\r\n\r\n    /** The {@link @microsoft/signalr.HttpTransportType} this error occured on. */\r\n    public transport: HttpTransportType;\r\n\r\n    /** The type name of this error. */\r\n    public errorType: string;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.DisabledTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occured on.\r\n     */\r\n    constructor(message: string, transport: HttpTransportType) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'DisabledTransportError';\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when the selected transport cannot be started. */\r\n/** @private */\r\nexport class FailedToStartTransportError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private __proto__: Error;\r\n\r\n    /** The {@link @microsoft/signalr.HttpTransportType} this error occured on. */\r\n    public transport: HttpTransportType;\r\n\r\n    /** The type name of this error. */\r\n    public errorType: string;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.FailedToStartTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occured on.\r\n     */\r\n    constructor(message: string, transport: HttpTransportType) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'FailedToStartTransportError';\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when the negotiation with the server failed to complete. */\r\n/** @private */\r\nexport class FailedToNegotiateWithServerError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private __proto__: Error;\r\n\r\n    /** The type name of this error. */\r\n    public errorType: string;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.FailedToNegotiateWithServerError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     */\r\n    constructor(message: string) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.errorType = 'FailedToNegotiateWithServerError';\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when multiple errors have occured. */\r\n/** @private */\r\nexport class AggregateErrors extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private __proto__: Error;\r\n\r\n    /** The collection of errors this error is aggregating. */\r\n    public innerErrors: Error[];\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.AggregateErrors}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {Error[]} innerErrors The collection of errors this error is aggregating.\r\n     */\r\n    constructor(message: string, innerErrors: Error[]) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n\r\n        this.innerErrors = innerErrors;\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { AbortSignal } from \"./AbortController\";\r\nimport { MessageHeaders } from \"./IHubProtocol\";\r\n\r\n/** Represents an HTTP request. */\r\nexport interface HttpRequest {\r\n    /** The HTTP method to use for the request. */\r\n    method?: string;\r\n\r\n    /** The URL for the request. */\r\n    url?: string;\r\n\r\n    /** The body content for the request. May be a string or an ArrayBuffer (for binary data). */\r\n    content?: string | ArrayBuffer;\r\n\r\n    /** An object describing headers to apply to the request. */\r\n    headers?: MessageHeaders;\r\n\r\n    /** The XMLHttpRequestResponseType to apply to the request. */\r\n    responseType?: XMLHttpRequestResponseType;\r\n\r\n    /** An AbortSignal that can be monitored for cancellation. */\r\n    abortSignal?: AbortSignal;\r\n\r\n    /** The time to wait for the request to complete before throwing a TimeoutError. Measured in milliseconds. */\r\n    timeout?: number;\r\n\r\n    /** This controls whether credentials such as cookies are sent in cross-site requests. */\r\n    withCredentials?: boolean;\r\n}\r\n\r\n/** Represents an HTTP response. */\r\nexport class HttpResponse {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     */\r\n    constructor(statusCode: number);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code and message.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code, message and string content.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     * @param {string} content The content of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string, content: string);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code, message and binary content.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     * @param {ArrayBuffer} content The content of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string, content: ArrayBuffer);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code, message and binary content.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     * @param {string | ArrayBuffer} content The content of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string, content: string | ArrayBuffer);\r\n    constructor(\r\n        public readonly statusCode: number,\r\n        public readonly statusText?: string,\r\n        public readonly content?: string | ArrayBuffer) {\r\n    }\r\n}\r\n\r\n/** Abstraction over an HTTP client.\r\n *\r\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\r\n */\r\nexport abstract class HttpClient {\r\n    /** Issues an HTTP GET request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public get(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP GET request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public get(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public get(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"GET\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP POST request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public post(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP POST request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public post(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public post(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"POST\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP DELETE request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public delete(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP DELETE request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public delete(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public delete(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"DELETE\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP request to the specified URL, returning a {@link Promise} that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {HttpRequest} request An {@link @microsoft/signalr.HttpRequest} describing the request to send.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an HttpResponse describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public abstract send(request: HttpRequest): Promise<HttpResponse>;\r\n\r\n    /** Gets all cookies that apply to the specified URL.\r\n     *\r\n     * @param url The URL that the cookies are valid for.\r\n     * @returns {string} A string containing all the key-value cookie pairs for the specified URL.\r\n     */\r\n    // @ts-ignore\r\n    public getCookieString(url: string): string {\r\n        return \"\";\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\n// @ts-ignore: This will be removed from built files and is here to make the types available during dev work\r\nimport { CookieJar } from \"@types/tough-cookie\";\r\n\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { Platform, getGlobalThis } from \"./Utils\";\r\n\r\nexport class FetchHttpClient extends HttpClient {\r\n    private readonly _abortControllerType: { prototype: AbortController, new(): AbortController };\r\n    private readonly _fetchType: (input: RequestInfo, init?: RequestInit) => Promise<Response>;\r\n    private readonly _jar?: CookieJar;\r\n\r\n    private readonly _logger: ILogger;\r\n\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n        this._logger = logger;\r\n\r\n        if (typeof fetch === \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n\r\n            // Cookies aren't automatically handled in Node so we need to add a CookieJar to preserve cookies across requests\r\n            this._jar = new (requireFunc(\"tough-cookie\")).CookieJar();\r\n            this._fetchType = requireFunc(\"node-fetch\");\r\n\r\n            // node-fetch doesn't have a nice API for getting and setting cookies\r\n            // fetch-cookie will wrap a fetch implementation with a default CookieJar or a provided one\r\n            this._fetchType = requireFunc(\"fetch-cookie\")(this._fetchType, this._jar);\r\n        } else {\r\n            this._fetchType = fetch.bind(getGlobalThis());\r\n        }\r\n        if (typeof AbortController === \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n\r\n            // Node needs EventListener methods on AbortController which our custom polyfill doesn't provide\r\n            this._abortControllerType = requireFunc(\"abort-controller\");\r\n        } else {\r\n            this._abortControllerType = AbortController;\r\n        }\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public async send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            throw new AbortError();\r\n        }\r\n\r\n        if (!request.method) {\r\n            throw new Error(\"No method defined.\");\r\n        }\r\n        if (!request.url) {\r\n            throw new Error(\"No url defined.\");\r\n        }\r\n\r\n        const abortController = new this._abortControllerType();\r\n\r\n        let error: any;\r\n        // Hook our abortSignal into the abort controller\r\n        if (request.abortSignal) {\r\n            request.abortSignal.onabort = () => {\r\n                abortController.abort();\r\n                error = new AbortError();\r\n            };\r\n        }\r\n\r\n        // If a timeout has been passed in, setup a timeout to call abort\r\n        // Type needs to be any to fit window.setTimeout and NodeJS.setTimeout\r\n        let timeoutId: any = null;\r\n        if (request.timeout) {\r\n            const msTimeout = request.timeout!;\r\n            timeoutId = setTimeout(() => {\r\n                abortController.abort();\r\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                error = new TimeoutError();\r\n            }, msTimeout);\r\n        }\r\n\r\n        let response: Response;\r\n        try {\r\n            response = await this._fetchType(request.url!, {\r\n                body: request.content!,\r\n                cache: \"no-cache\",\r\n                credentials: request.withCredentials === true ? \"include\" : \"same-origin\",\r\n                headers: {\r\n                    \"Content-Type\": \"text/plain;charset=UTF-8\",\r\n                    \"X-Requested-With\": \"XMLHttpRequest\",\r\n                    ...request.headers,\r\n                },\r\n                method: request.method!,\r\n                mode: \"cors\",\r\n                redirect: \"follow\",\r\n                signal: abortController.signal,\r\n            });\r\n        } catch (e) {\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            this._logger.log(\r\n                LogLevel.Warning,\r\n                `Error from HTTP request. ${e}.`,\r\n            );\r\n            throw e;\r\n        } finally {\r\n            if (timeoutId) {\r\n                clearTimeout(timeoutId);\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = null;\r\n            }\r\n        }\r\n\r\n        if (!response.ok) {\r\n            const errorMessage = await deserializeContent(response, \"text\") as string;\r\n            throw new HttpError(errorMessage || response.statusText, response.status);\r\n        }\r\n\r\n        const content = deserializeContent(response, request.responseType);\r\n        const payload = await content;\r\n\r\n        return new HttpResponse(\r\n            response.status,\r\n            response.statusText,\r\n            payload,\r\n        );\r\n    }\r\n\r\n    public getCookieString(url: string): string {\r\n        let cookies: string = \"\";\r\n        if (Platform.isNode && this._jar) {\r\n            // @ts-ignore: unused variable\r\n            this._jar.getCookies(url, (e, c) => cookies = c.join(\"; \"));\r\n        }\r\n        return cookies;\r\n    }\r\n}\r\n\r\nfunction deserializeContent(response: Response, responseType?: XMLHttpRequestResponseType): Promise<string | ArrayBuffer> {\r\n    let content;\r\n    switch (responseType) {\r\n        case \"arraybuffer\":\r\n            content = response.arrayBuffer();\r\n            break;\r\n        case \"text\":\r\n            content = response.text();\r\n            break;\r\n        case \"blob\":\r\n        case \"document\":\r\n        case \"json\":\r\n            throw new Error(`${responseType} is not supported.`);\r\n        default:\r\n            content = response.text();\r\n            break;\r\n    }\r\n\r\n    return content;\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\n\r\nexport class XhrHttpClient extends HttpClient {\r\n    private readonly _logger: ILogger;\r\n\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n        this._logger = logger;\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n\r\n        return new Promise<HttpResponse>((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n\r\n            xhr.open(request.method!, request.url!, true);\r\n            xhr.withCredentials = request.withCredentials === undefined ? true : request.withCredentials;\r\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n            // Explicitly setting the Content-Type header for React Native on Android platform.\r\n            xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\r\n\r\n            const headers = request.headers;\r\n            if (headers) {\r\n                Object.keys(headers)\r\n                    .forEach((header) => {\r\n                        xhr.setRequestHeader(header, headers[header]);\r\n                    });\r\n            }\r\n\r\n            if (request.responseType) {\r\n                xhr.responseType = request.responseType;\r\n            }\r\n\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = () => {\r\n                    xhr.abort();\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n\r\n            if (request.timeout) {\r\n                xhr.timeout = request.timeout;\r\n            }\r\n\r\n            xhr.onload = () => {\r\n                if (request.abortSignal) {\r\n                    request.abortSignal.onabort = null;\r\n                }\r\n\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\r\n                } else {\r\n                    reject(new HttpError(xhr.response || xhr.responseText || xhr.statusText, xhr.status));\r\n                }\r\n            };\r\n\r\n            xhr.onerror = () => {\r\n                this._logger.log(LogLevel.Warning, `Error from HTTP request. ${xhr.status}: ${xhr.statusText}.`);\r\n                reject(new HttpError(xhr.statusText, xhr.status));\r\n            };\r\n\r\n            xhr.ontimeout = () => {\r\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                reject(new TimeoutError());\r\n            };\r\n\r\n            xhr.send(request.content || \"\");\r\n        });\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { AbortError } from \"./Errors\";\r\nimport { FetchHttpClient } from \"./FetchHttpClient\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger } from \"./ILogger\";\r\nimport { Platform } from \"./Utils\";\r\nimport { XhrHttpClient } from \"./XhrHttpClient\";\r\n\r\n/** Default implementation of {@link @microsoft/signalr.HttpClient}. */\r\nexport class DefaultHttpClient extends HttpClient {\r\n    private readonly _httpClient: HttpClient;\r\n\r\n    /** Creates a new instance of the {@link @microsoft/signalr.DefaultHttpClient}, using the provided {@link @microsoft/signalr.ILogger} to log messages. */\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n\r\n        if (typeof fetch !== \"undefined\" || Platform.isNode) {\r\n            this._httpClient = new FetchHttpClient(logger);\r\n        } else if (typeof XMLHttpRequest !== \"undefined\") {\r\n            this._httpClient = new XhrHttpClient(logger);\r\n        } else {\r\n            throw new Error(\"No usable HttpClient found.\");\r\n        }\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n\r\n        return this._httpClient.send(request);\r\n    }\r\n\r\n    public getCookieString(url: string): string {\r\n        return this._httpClient.getCookieString(url);\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nexport abstract class HeaderNames {\r\n    static readonly Authorization = \"Authorization\";\r\n    static readonly Cookie = \"Cookie\";\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\n// Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController\r\n// We don't actually ever use the API being polyfilled, we always use the polyfill because\r\n// it's a very new API right now.\r\n\r\n// Not exported from index.\r\n/** @private */\r\nexport class AbortController implements AbortSignal {\r\n    private _isAborted: boolean = false;\r\n    public onabort: (() => void) | null = null;\r\n\r\n    public abort(): void {\r\n        if (!this._isAborted) {\r\n            this._isAborted = true;\r\n            if (this.onabort) {\r\n                this.onabort();\r\n            }\r\n        }\r\n    }\r\n\r\n    get signal(): AbortSignal {\r\n        return this;\r\n    }\r\n\r\n    get aborted(): boolean {\r\n        return this._isAborted;\r\n    }\r\n}\r\n\r\n/** Represents a signal that can be monitored to determine if a request has been aborted. */\r\nexport interface AbortSignal {\r\n    /** Indicates if the request has been aborted. */\r\n    aborted: boolean;\r\n    /** Set this to a handler that will be invoked when the request is aborted. */\r\n    onabort: (() => void) | null;\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { AbortController } from \"./AbortController\";\r\nimport { HttpError, TimeoutError } from \"./Errors\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { HttpClient, HttpRequest } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, sendMessage } from \"./Utils\";\r\nimport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\n\r\n// Not exported from 'index', this type is internal.\r\n/** @private */\r\nexport class LongPollingTransport implements ITransport {\r\n    private readonly _httpClient: HttpClient;\r\n    private readonly _accessTokenFactory: (() => string | Promise<string>) | undefined;\r\n    private readonly _logger: ILogger;\r\n    private readonly _options: IHttpConnectionOptions;\r\n    private readonly _pollAbort: AbortController;\r\n\r\n    private _url?: string;\r\n    private _running: boolean;\r\n    private _receiving?: Promise<void>;\r\n    private _closeError?: Error;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error) => void) | null;\r\n\r\n    // This is an internal type, not exported from 'index' so this is really just internal.\r\n    public get pollAborted(): boolean {\r\n        return this._pollAbort.aborted;\r\n    }\r\n\r\n    constructor(httpClient: HttpClient, accessTokenFactory: (() => string | Promise<string>) | undefined, logger: ILogger, options: IHttpConnectionOptions) {\r\n        this._httpClient = httpClient;\r\n        this._accessTokenFactory = accessTokenFactory;\r\n        this._logger = logger;\r\n        this._pollAbort = new AbortController();\r\n        this._options = options;\r\n\r\n        this._running = false;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this._url = url;\r\n\r\n        this._logger.log(LogLevel.Trace, \"(LongPolling transport) Connecting.\");\r\n\r\n        // Allow binary format on Node and Browsers that support binary content (indicated by the presence of responseType property)\r\n        if (transferFormat === TransferFormat.Binary &&\r\n            (typeof XMLHttpRequest !== \"undefined\" && typeof new XMLHttpRequest().responseType !== \"string\")) {\r\n            throw new Error(\"Binary protocols over XmlHttpRequest not implementing advanced features are not supported.\");\r\n        }\r\n\r\n        const [name, value] = getUserAgentHeader();\r\n        const headers = { [name]: value, ...this._options.headers };\r\n\r\n        const pollOptions: HttpRequest = {\r\n            abortSignal: this._pollAbort.signal,\r\n            headers,\r\n            timeout: 100000,\r\n            withCredentials: this._options.withCredentials,\r\n        };\r\n\r\n        if (transferFormat === TransferFormat.Binary) {\r\n            pollOptions.responseType = \"arraybuffer\";\r\n        }\r\n\r\n        const token = await this._getAccessToken();\r\n        this._updateHeaderToken(pollOptions, token);\r\n\r\n        // Make initial long polling request\r\n        // Server uses first long polling request to finish initializing connection and it returns without data\r\n        const pollUrl = `${url}&_=${Date.now()}`;\r\n        this._logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n        const response = await this._httpClient.get(pollUrl, pollOptions);\r\n        if (response.statusCode !== 200) {\r\n            this._logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n\r\n            // Mark running as false so that the poll immediately ends and runs the close logic\r\n            this._closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n            this._running = false;\r\n        } else {\r\n            this._running = true;\r\n        }\r\n\r\n        this._receiving = this._poll(this._url, pollOptions);\r\n    }\r\n\r\n    private async _getAccessToken(): Promise<string | null> {\r\n        if (this._accessTokenFactory) {\r\n            return await this._accessTokenFactory();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private _updateHeaderToken(request: HttpRequest, token: string | null) {\r\n        if (!request.headers) {\r\n            request.headers = {};\r\n        }\r\n        if (token) {\r\n            request.headers[HeaderNames.Authorization] = `Bearer ${token}`;\r\n            return;\r\n        }\r\n        if (request.headers[HeaderNames.Authorization]) {\r\n            delete request.headers[HeaderNames.Authorization];\r\n        }\r\n    }\r\n\r\n    private async _poll(url: string, pollOptions: HttpRequest): Promise<void> {\r\n        try {\r\n            while (this._running) {\r\n                // We have to get the access token on each poll, in case it changes\r\n                const token = await this._getAccessToken();\r\n                this._updateHeaderToken(pollOptions, token);\r\n\r\n                try {\r\n                    const pollUrl = `${url}&_=${Date.now()}`;\r\n                    this._logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n                    const response = await this._httpClient.get(pollUrl, pollOptions);\r\n\r\n                    if (response.statusCode === 204) {\r\n                        this._logger.log(LogLevel.Information, \"(LongPolling transport) Poll terminated by server.\");\r\n\r\n                        this._running = false;\r\n                    } else if (response.statusCode !== 200) {\r\n                        this._logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n\r\n                        // Unexpected status code\r\n                        this._closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n                        this._running = false;\r\n                    } else {\r\n                        // Process the response\r\n                        if (response.content) {\r\n                            this._logger.log(LogLevel.Trace, `(LongPolling transport) data received. ${getDataDetail(response.content, this._options.logMessageContent!)}.`);\r\n                            if (this.onreceive) {\r\n                                this.onreceive(response.content);\r\n                            }\r\n                        } else {\r\n                            // This is another way timeout manifest.\r\n                            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    if (!this._running) {\r\n                        // Log but disregard errors that occur after stopping\r\n                        this._logger.log(LogLevel.Trace, `(LongPolling transport) Poll errored after shutdown: ${e.message}`);\r\n                    } else {\r\n                        if (e instanceof TimeoutError) {\r\n                            // Ignore timeouts and reissue the poll.\r\n                            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        } else {\r\n                            // Close the connection with the error as the result.\r\n                            this._closeError = e;\r\n                            this._running = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } finally {\r\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Polling complete.\");\r\n\r\n            // We will reach here with pollAborted==false when the server returned a response causing the transport to stop.\r\n            // If pollAborted==true then client initiated the stop and the stop method will raise the close event after DELETE is sent.\r\n            if (!this.pollAborted) {\r\n                this._raiseOnClose();\r\n            }\r\n        }\r\n    }\r\n\r\n    public async send(data: any): Promise<void> {\r\n        if (!this._running) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this._logger, \"LongPolling\", this._httpClient, this._url!, this._accessTokenFactory, data, this._options);\r\n    }\r\n\r\n    public async stop(): Promise<void> {\r\n        this._logger.log(LogLevel.Trace, \"(LongPolling transport) Stopping polling.\");\r\n\r\n        // Tell receiving loop to stop, abort any current request, and then wait for it to finish\r\n        this._running = false;\r\n        this._pollAbort.abort();\r\n\r\n        try {\r\n            await this._receiving;\r\n\r\n            // Send DELETE to clean up long polling on the server\r\n            this._logger.log(LogLevel.Trace, `(LongPolling transport) sending DELETE request to ${this._url}.`);\r\n\r\n            const headers: {[k: string]: string} = {};\r\n            const [name, value] = getUserAgentHeader();\r\n            headers[name] = value;\r\n\r\n            const deleteOptions: HttpRequest = {\r\n                headers: { ...headers, ...this._options.headers },\r\n                timeout: this._options.timeout,\r\n                withCredentials: this._options.withCredentials,\r\n            };\r\n            const token = await this._getAccessToken();\r\n            this._updateHeaderToken(deleteOptions, token);\r\n            await this._httpClient.delete(this._url!, deleteOptions);\r\n\r\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) DELETE request sent.\");\r\n        } finally {\r\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Stop finished.\");\r\n\r\n            // Raise close event here instead of in polling\r\n            // It needs to happen after the DELETE request is sent\r\n            this._raiseOnClose();\r\n        }\r\n    }\r\n\r\n    private _raiseOnClose() {\r\n        if (this.onclose) {\r\n            let logMessage = \"(LongPolling transport) Firing onclose event.\";\r\n            if (this._closeError) {\r\n                logMessage += \" Error: \" + this._closeError;\r\n            }\r\n            this._logger.log(LogLevel.Trace, logMessage);\r\n            this.onclose(this._closeError);\r\n        }\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { MessageHeaders } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform, sendMessage } from \"./Utils\";\r\nimport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\n\r\n/** @private */\r\nexport class ServerSentEventsTransport implements ITransport {\r\n    private readonly _httpClient: HttpClient;\r\n    private readonly _accessTokenFactory: (() => string | Promise<string>) | undefined;\r\n    private readonly _logger: ILogger;\r\n    private readonly _options: IHttpConnectionOptions;\r\n    private _eventSource?: EventSource;\r\n    private _url?: string;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error) => void) | null;\r\n\r\n    constructor(httpClient: HttpClient, accessTokenFactory: (() => string | Promise<string>) | undefined, logger: ILogger,\r\n                options: IHttpConnectionOptions) {\r\n        this._httpClient = httpClient;\r\n        this._accessTokenFactory = accessTokenFactory;\r\n        this._logger = logger;\r\n        this._options = options;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this._logger.log(LogLevel.Trace, \"(SSE transport) Connecting.\");\r\n\r\n        // set url before accessTokenFactory because this.url is only for send and we set the auth header instead of the query string for send\r\n        this._url = url;\r\n\r\n        if (this._accessTokenFactory) {\r\n            const token = await this._accessTokenFactory();\r\n            if (token) {\r\n                url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\r\n            }\r\n        }\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            let opened = false;\r\n            if (transferFormat !== TransferFormat.Text) {\r\n                reject(new Error(\"The Server-Sent Events transport only supports the 'Text' transfer format\"));\r\n                return;\r\n            }\r\n\r\n            let eventSource: EventSource;\r\n            if (Platform.isBrowser || Platform.isWebWorker) {\r\n                eventSource = new this._options.EventSource!(url, { withCredentials: this._options.withCredentials });\r\n            } else {\r\n                // Non-browser passes cookies via the dictionary\r\n                const cookies = this._httpClient.getCookieString(url);\r\n                const headers: MessageHeaders = {};\r\n                headers.Cookie = cookies;\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n\r\n                eventSource = new this._options.EventSource!(url, { withCredentials: this._options.withCredentials, headers: { ...headers, ...this._options.headers} } as EventSourceInit);\r\n            }\r\n\r\n            try {\r\n                eventSource.onmessage = (e: MessageEvent) => {\r\n                    if (this.onreceive) {\r\n                        try {\r\n                            this._logger.log(LogLevel.Trace, `(SSE transport) data received. ${getDataDetail(e.data, this._options.logMessageContent!)}.`);\r\n                            this.onreceive(e.data);\r\n                        } catch (error) {\r\n                            this._close(error);\r\n                            return;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // @ts-ignore: not using event on purpose\r\n                eventSource.onerror = (e: Event) => {\r\n                    // EventSource doesn't give any useful information about server side closes.\r\n                    if (opened) {\r\n                        this._close();\r\n                    } else {\r\n                        reject(new Error(\"EventSource failed to connect. The connection could not be found on the server,\"\r\n                        + \" either the connection ID is not present on the server, or a proxy is refusing/buffering the connection.\"\r\n                        + \" If you have multiple servers check that sticky sessions are enabled.\"));\r\n                    }\r\n                };\r\n\r\n                eventSource.onopen = () => {\r\n                    this._logger.log(LogLevel.Information, `SSE connected to ${this._url}`);\r\n                    this._eventSource = eventSource;\r\n                    opened = true;\r\n                    resolve();\r\n                };\r\n            } catch (e) {\r\n                reject(e);\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    public async send(data: any): Promise<void> {\r\n        if (!this._eventSource) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this._logger, \"SSE\", this._httpClient, this._url!, this._accessTokenFactory, data, this._options);\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        this._close();\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private _close(e?: Error) {\r\n        if (this._eventSource) {\r\n            this._eventSource.close();\r\n            this._eventSource = undefined;\r\n\r\n            if (this.onclose) {\r\n                this.onclose(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { MessageHeaders } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { WebSocketConstructor } from \"./Polyfills\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform } from \"./Utils\";\r\n\r\n/** @private */\r\nexport class WebSocketTransport implements ITransport {\r\n    private readonly _logger: ILogger;\r\n    private readonly _accessTokenFactory: (() => string | Promise<string>) | undefined;\r\n    private readonly _logMessageContent: boolean;\r\n    private readonly _webSocketConstructor: WebSocketConstructor;\r\n    private readonly _httpClient: HttpClient;\r\n    private _webSocket?: WebSocket;\r\n    private _headers: MessageHeaders;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error) => void) | null;\r\n\r\n    constructor(httpClient: HttpClient, accessTokenFactory: (() => string | Promise<string>) | undefined, logger: ILogger,\r\n                logMessageContent: boolean, webSocketConstructor: WebSocketConstructor, headers: MessageHeaders) {\r\n        this._logger = logger;\r\n        this._accessTokenFactory = accessTokenFactory;\r\n        this._logMessageContent = logMessageContent;\r\n        this._webSocketConstructor = webSocketConstructor;\r\n        this._httpClient = httpClient;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n        this._headers = headers;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting.\");\r\n\r\n        if (this._accessTokenFactory) {\r\n            const token = await this._accessTokenFactory();\r\n            if (token) {\r\n                url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\r\n            }\r\n        }\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            url = url.replace(/^http/, \"ws\");\r\n            let webSocket: WebSocket | undefined;\r\n            const cookies = this._httpClient.getCookieString(url);\r\n            let opened = false;\r\n\r\n            if (Platform.isNode) {\r\n                const headers: {[k: string]: string} = {};\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n\r\n                if (cookies) {\r\n                    headers[HeaderNames.Cookie] = `${cookies}`;\r\n                }\r\n\r\n                // Only pass headers when in non-browser environments\r\n                webSocket = new this._webSocketConstructor(url, undefined, {\r\n                    headers: { ...headers, ...this._headers },\r\n                });\r\n            }\r\n\r\n            if (!webSocket) {\r\n                // Chrome is not happy with passing 'undefined' as protocol\r\n                webSocket = new this._webSocketConstructor(url);\r\n            }\r\n\r\n            if (transferFormat === TransferFormat.Binary) {\r\n                webSocket.binaryType = \"arraybuffer\";\r\n            }\r\n\r\n            webSocket.onopen = (_event: Event) => {\r\n                this._logger.log(LogLevel.Information, `WebSocket connected to ${url}.`);\r\n                this._webSocket = webSocket;\r\n                opened = true;\r\n                resolve();\r\n            };\r\n\r\n            webSocket.onerror = (event: Event) => {\r\n                let error: any = null;\r\n                // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                    error = event.error;\r\n                } else {\r\n                    error = \"There was an error with the transport\";\r\n                }\r\n\r\n                this._logger.log(LogLevel.Information, `(WebSockets transport) ${error}.`);\r\n            };\r\n\r\n            webSocket.onmessage = (message: MessageEvent) => {\r\n                this._logger.log(LogLevel.Trace, `(WebSockets transport) data received. ${getDataDetail(message.data, this._logMessageContent)}.`);\r\n                if (this.onreceive) {\r\n                    try {\r\n                        this.onreceive(message.data);\r\n                    } catch (error) {\r\n                        this._close(error);\r\n                        return;\r\n                    }\r\n                }\r\n            };\r\n\r\n            webSocket.onclose = (event: CloseEvent) => {\r\n                // Don't call close handler if connection was never established\r\n                // We'll reject the connect call instead\r\n                if (opened) {\r\n                    this._close(event);\r\n                } else {\r\n                    let error: any = null;\r\n                    // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                    if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                        error = event.error;\r\n                    } else {\r\n                        error = \"WebSocket failed to connect. The connection could not be found on the server,\"\r\n                        + \" either the endpoint may not be a SignalR endpoint,\"\r\n                        + \" the connection ID is not present on the server, or there is a proxy blocking WebSockets.\"\r\n                        + \" If you have multiple servers check that sticky sessions are enabled.\";\r\n                    }\r\n\r\n                    reject(new Error(error));\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    public send(data: any): Promise<void> {\r\n        if (this._webSocket && this._webSocket.readyState === this._webSocketConstructor.OPEN) {\r\n            this._logger.log(LogLevel.Trace, `(WebSockets transport) sending data. ${getDataDetail(data, this._logMessageContent)}.`);\r\n            this._webSocket.send(data);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        if (this._webSocket) {\r\n            // Manually invoke onclose callback inline so we know the HttpConnection was closed properly before returning\r\n            // This also solves an issue where websocket.onclose could take 18+ seconds to trigger during network disconnects\r\n            this._close(undefined);\r\n        }\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private _close(event?: CloseEvent | Error): void {\r\n        // webSocket will be null if the transport did not start successfully\r\n        if (this._webSocket) {\r\n            // Clear websocket handlers because we are considering the socket closed now\r\n            this._webSocket.onclose = () => {};\r\n            this._webSocket.onmessage = () => {};\r\n            this._webSocket.onerror = () => {};\r\n            this._webSocket.close();\r\n            this._webSocket = undefined;\r\n        }\r\n\r\n        this._logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\r\n        if (this.onclose) {\r\n            if (this._isCloseEvent(event) && (event.wasClean === false || event.code !== 1000)) {\r\n                this.onclose(new Error(`WebSocket closed with status code: ${event.code} (${event.reason || \"no reason given\"}).`));\r\n            } else if (event instanceof Error) {\r\n                this.onclose(event);\r\n            } else {\r\n                this.onclose();\r\n            }\r\n        }\r\n    }\r\n\r\n    private _isCloseEvent(event?: any): event is CloseEvent {\r\n        return event && typeof event.wasClean === \"boolean\" && typeof event.code === \"number\";\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nimport { AggregateErrors, DisabledTransportError, FailedToNegotiateWithServerError, FailedToStartTransportError, HttpError, UnsupportedTransportError } from \"./Errors\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { IConnection } from \"./IConnection\";\r\nimport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { HttpTransportType, ITransport, TransferFormat } from \"./ITransport\";\r\nimport { LongPollingTransport } from \"./LongPollingTransport\";\r\nimport { ServerSentEventsTransport } from \"./ServerSentEventsTransport\";\r\nimport { Arg, createLogger, getUserAgentHeader, Platform } from \"./Utils\";\r\nimport { WebSocketTransport } from \"./WebSocketTransport\";\r\n\r\n/** @private */\r\nconst enum ConnectionState {\r\n    Connecting = \"Connecting\",\r\n    Connected = \"Connected\",\r\n    Disconnected = \"Disconnected\",\r\n    Disconnecting = \"Disconnecting\",\r\n}\r\n\r\n/** @private */\r\nexport interface INegotiateResponse {\r\n    connectionId?: string;\r\n    connectionToken?: string;\r\n    negotiateVersion?: number;\r\n    availableTransports?: IAvailableTransport[];\r\n    url?: string;\r\n    accessToken?: string;\r\n    error?: string;\r\n}\r\n\r\n/** @private */\r\nexport interface IAvailableTransport {\r\n    transport: keyof typeof HttpTransportType;\r\n    transferFormats: (keyof typeof TransferFormat)[];\r\n}\r\n\r\nconst MAX_REDIRECTS = 100;\r\n\r\n/** @private */\r\nexport class HttpConnection implements IConnection {\r\n    private _connectionState: ConnectionState;\r\n    // connectionStarted is tracked independently from connectionState, so we can check if the\r\n    // connection ever did successfully transition from connecting to connected before disconnecting.\r\n    private _connectionStarted: boolean;\r\n    private readonly _httpClient: HttpClient;\r\n    private readonly _logger: ILogger;\r\n    private readonly _options: IHttpConnectionOptions;\r\n    // Needs to not start with _ to be available for tests\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private transport?: ITransport;\r\n    private _startInternalPromise?: Promise<void>;\r\n    private _stopPromise?: Promise<void>;\r\n    private _stopPromiseResolver: (value?: PromiseLike<void>) => void = () => {};\r\n    private _stopError?: Error;\r\n    private _accessTokenFactory?: () => string | Promise<string>;\r\n    private _sendQueue?: TransportSendQueue;\r\n\r\n    public readonly features: any = {};\r\n    public baseUrl: string;\r\n    public connectionId?: string;\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((e?: Error) => void) | null;\r\n\r\n    private readonly _negotiateVersion: number = 1;\r\n\r\n    constructor(url: string, options: IHttpConnectionOptions = {}) {\r\n        Arg.isRequired(url, \"url\");\r\n\r\n        this._logger = createLogger(options.logger);\r\n        this.baseUrl = this._resolveUrl(url);\r\n\r\n        options = options || {};\r\n        options.logMessageContent = options.logMessageContent === undefined ? false : options.logMessageContent;\r\n        if (typeof options.withCredentials === \"boolean\" || options.withCredentials === undefined) {\r\n            options.withCredentials = options.withCredentials === undefined ? true : options.withCredentials;\r\n        } else {\r\n            throw new Error(\"withCredentials option was not a 'boolean' or 'undefined' value\");\r\n        }\r\n        options.timeout = options.timeout === undefined ? 100 * 1000 : options.timeout;\r\n\r\n        let webSocketModule: any = null;\r\n        let eventSourceModule: any = null;\r\n\r\n        if (Platform.isNode && typeof require !== \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            webSocketModule = requireFunc(\"ws\");\r\n            eventSourceModule = requireFunc(\"eventsource\");\r\n        }\r\n\r\n        if (!Platform.isNode && typeof WebSocket !== \"undefined\" && !options.WebSocket) {\r\n            options.WebSocket = WebSocket;\r\n        } else if (Platform.isNode && !options.WebSocket) {\r\n            if (webSocketModule) {\r\n                options.WebSocket = webSocketModule;\r\n            }\r\n        }\r\n\r\n        if (!Platform.isNode && typeof EventSource !== \"undefined\" && !options.EventSource) {\r\n            options.EventSource = EventSource;\r\n        } else if (Platform.isNode && !options.EventSource) {\r\n            if (typeof eventSourceModule !== \"undefined\") {\r\n                options.EventSource = eventSourceModule;\r\n            }\r\n        }\r\n\r\n        this._httpClient = options.httpClient || new DefaultHttpClient(this._logger);\r\n        this._connectionState = ConnectionState.Disconnected;\r\n        this._connectionStarted = false;\r\n        this._options = options;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public start(): Promise<void>;\r\n    public start(transferFormat: TransferFormat): Promise<void>;\r\n    public async start(transferFormat?: TransferFormat): Promise<void> {\r\n        transferFormat = transferFormat || TransferFormat.Binary;\r\n\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this._logger.log(LogLevel.Debug, `Starting connection with transfer format '${TransferFormat[transferFormat]}'.`);\r\n\r\n        if (this._connectionState !== ConnectionState.Disconnected) {\r\n            return Promise.reject(new Error(\"Cannot start an HttpConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n\r\n        this._connectionState = ConnectionState.Connecting;\r\n\r\n        this._startInternalPromise = this._startInternal(transferFormat);\r\n        await this._startInternalPromise;\r\n\r\n        // The TypeScript compiler thinks that connectionState must be Connecting here. The TypeScript compiler is wrong.\r\n        if (this._connectionState as any === ConnectionState.Disconnecting) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"Failed to start the HttpConnection before stop() was called.\";\r\n            this._logger.log(LogLevel.Error, message);\r\n\r\n            // We cannot await stopPromise inside startInternal since stopInternal awaits the startInternalPromise.\r\n            await this._stopPromise;\r\n\r\n            return Promise.reject(new Error(message));\r\n        } else if (this._connectionState as any !== ConnectionState.Connected) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!\";\r\n            this._logger.log(LogLevel.Error, message);\r\n            return Promise.reject(new Error(message));\r\n        }\r\n\r\n        this._connectionStarted = true;\r\n    }\r\n\r\n    public send(data: string | ArrayBuffer): Promise<void> {\r\n        if (this._connectionState !== ConnectionState.Connected) {\r\n            return Promise.reject(new Error(\"Cannot send data if the connection is not in the 'Connected' State.\"));\r\n        }\r\n\r\n        if (!this._sendQueue) {\r\n            this._sendQueue = new TransportSendQueue(this.transport!);\r\n        }\r\n\r\n        // Transport will not be null if state is connected\r\n        return this._sendQueue.send(data);\r\n    }\r\n\r\n    public async stop(error?: Error): Promise<void> {\r\n        if (this._connectionState === ConnectionState.Disconnected) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        if (this._connectionState === ConnectionState.Disconnecting) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this._stopPromise;\r\n        }\r\n\r\n        this._connectionState = ConnectionState.Disconnecting;\r\n\r\n        this._stopPromise = new Promise((resolve) => {\r\n            // Don't complete stop() until stopConnection() completes.\r\n            this._stopPromiseResolver = resolve;\r\n        });\r\n\r\n        // stopInternal should never throw so just observe it.\r\n        await this._stopInternal(error);\r\n        await this._stopPromise;\r\n    }\r\n\r\n    private async _stopInternal(error?: Error): Promise<void> {\r\n        // Set error as soon as possible otherwise there is a race between\r\n        // the transport closing and providing an error and the error from a close message\r\n        // We would prefer the close message error.\r\n        this._stopError = error;\r\n\r\n        try {\r\n            await this._startInternalPromise;\r\n        } catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n\r\n        // The transport's onclose will trigger stopConnection which will run our onclose event.\r\n        // The transport should always be set if currently connected. If it wasn't set, it's likely because\r\n        // stop was called during start() and start() failed.\r\n        if (this.transport) {\r\n            try {\r\n                await this.transport.stop();\r\n            } catch (e) {\r\n                this._logger.log(LogLevel.Error, `HttpConnection.transport.stop() threw error '${e}'.`);\r\n                this._stopConnection();\r\n            }\r\n\r\n            this.transport = undefined;\r\n        } else {\r\n            this._logger.log(LogLevel.Debug, \"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.\");\r\n        }\r\n    }\r\n\r\n    private async _startInternal(transferFormat: TransferFormat): Promise<void> {\r\n        // Store the original base url and the access token factory since they may change\r\n        // as part of negotiating\r\n        let url = this.baseUrl;\r\n        this._accessTokenFactory = this._options.accessTokenFactory;\r\n\r\n        try {\r\n            if (this._options.skipNegotiation) {\r\n                if (this._options.transport === HttpTransportType.WebSockets) {\r\n                    // No need to add a connection ID in this case\r\n                    this.transport = this._constructTransport(HttpTransportType.WebSockets);\r\n                    // We should just call connect directly in this case.\r\n                    // No fallback or negotiate in this case.\r\n                    await this._startTransport(url, transferFormat);\r\n                } else {\r\n                    throw new Error(\"Negotiation can only be skipped when using the WebSocket transport directly.\");\r\n                }\r\n            } else {\r\n                let negotiateResponse: INegotiateResponse | null = null;\r\n                let redirects = 0;\r\n\r\n                do {\r\n                    negotiateResponse = await this._getNegotiationResponse(url);\r\n                    // the user tries to stop the connection when it is being started\r\n                    if (this._connectionState === ConnectionState.Disconnecting || this._connectionState === ConnectionState.Disconnected) {\r\n                        throw new Error(\"The connection was stopped during negotiation.\");\r\n                    }\r\n\r\n                    if (negotiateResponse.error) {\r\n                        throw new Error(negotiateResponse.error);\r\n                    }\r\n\r\n                    if ((negotiateResponse as any).ProtocolVersion) {\r\n                        throw new Error(\"Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.\");\r\n                    }\r\n\r\n                    if (negotiateResponse.url) {\r\n                        url = negotiateResponse.url;\r\n                    }\r\n\r\n                    if (negotiateResponse.accessToken) {\r\n                        // Replace the current access token factory with one that uses\r\n                        // the returned access token\r\n                        const accessToken = negotiateResponse.accessToken;\r\n                        this._accessTokenFactory = () => accessToken;\r\n                    }\r\n\r\n                    redirects++;\r\n                }\r\n                while (negotiateResponse.url && redirects < MAX_REDIRECTS);\r\n\r\n                if (redirects === MAX_REDIRECTS && negotiateResponse.url) {\r\n                    throw new Error(\"Negotiate redirection limit exceeded.\");\r\n                }\r\n\r\n                await this._createTransport(url, this._options.transport, negotiateResponse, transferFormat);\r\n            }\r\n\r\n            if (this.transport instanceof LongPollingTransport) {\r\n                this.features.inherentKeepAlive = true;\r\n            }\r\n\r\n            if (this._connectionState === ConnectionState.Connecting) {\r\n                // Ensure the connection transitions to the connected state prior to completing this.startInternalPromise.\r\n                // start() will handle the case when stop was called and startInternal exits still in the disconnecting state.\r\n                this._logger.log(LogLevel.Debug, \"The HttpConnection connected successfully.\");\r\n                this._connectionState = ConnectionState.Connected;\r\n            }\r\n\r\n            // stop() is waiting on us via this.startInternalPromise so keep this.transport around so it can clean up.\r\n            // This is the only case startInternal can exit in neither the connected nor disconnected state because stopConnection()\r\n            // will transition to the disconnected state. start() will wait for the transition using the stopPromise.\r\n        } catch (e) {\r\n            this._logger.log(LogLevel.Error, \"Failed to start the connection: \" + e);\r\n            this._connectionState = ConnectionState.Disconnected;\r\n            this.transport = undefined;\r\n\r\n            // if start fails, any active calls to stop assume that start will complete the stop promise\r\n            this._stopPromiseResolver();\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    private async _getNegotiationResponse(url: string): Promise<INegotiateResponse> {\r\n        const headers: {[k: string]: string} = {};\r\n        if (this._accessTokenFactory) {\r\n            const token = await this._accessTokenFactory();\r\n            if (token) {\r\n                headers[HeaderNames.Authorization] = `Bearer ${token}`;\r\n            }\r\n        }\r\n\r\n        const [name, value] = getUserAgentHeader();\r\n        headers[name] = value;\r\n\r\n        const negotiateUrl = this._resolveNegotiateUrl(url);\r\n        this._logger.log(LogLevel.Debug, `Sending negotiation request: ${negotiateUrl}.`);\r\n        try {\r\n            const response = await this._httpClient.post(negotiateUrl, {\r\n                content: \"\",\r\n                headers: { ...headers, ...this._options.headers },\r\n                timeout: this._options.timeout,\r\n                withCredentials: this._options.withCredentials,\r\n            });\r\n\r\n            if (response.statusCode !== 200) {\r\n                return Promise.reject(new Error(`Unexpected status code returned from negotiate '${response.statusCode}'`));\r\n            }\r\n\r\n            const negotiateResponse = JSON.parse(response.content as string) as INegotiateResponse;\r\n            if (!negotiateResponse.negotiateVersion || negotiateResponse.negotiateVersion < 1) {\r\n                // Negotiate version 0 doesn't use connectionToken\r\n                // So we set it equal to connectionId so all our logic can use connectionToken without being aware of the negotiate version\r\n                negotiateResponse.connectionToken = negotiateResponse.connectionId;\r\n            }\r\n            return negotiateResponse;\r\n        } catch (e) {\r\n            let errorMessage = \"Failed to complete negotiation with the server: \" + e;\r\n            if (e instanceof HttpError) {\r\n                if (e.statusCode === 404) {\r\n                    errorMessage = errorMessage + \" Either this is not a SignalR endpoint or there is a proxy blocking the connection.\";\r\n                }\r\n            }\r\n            this._logger.log(LogLevel.Error, errorMessage);\r\n\r\n            return Promise.reject(new FailedToNegotiateWithServerError(errorMessage));\r\n        }\r\n    }\r\n\r\n    private _createConnectUrl(url: string, connectionToken: string | null | undefined) {\r\n        if (!connectionToken) {\r\n            return url;\r\n        }\r\n\r\n        return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + `id=${connectionToken}`;\r\n    }\r\n\r\n    private async _createTransport(url: string, requestedTransport: HttpTransportType | ITransport | undefined, negotiateResponse: INegotiateResponse, requestedTransferFormat: TransferFormat): Promise<void> {\r\n        let connectUrl = this._createConnectUrl(url, negotiateResponse.connectionToken);\r\n        if (this._isITransport(requestedTransport)) {\r\n            this._logger.log(LogLevel.Debug, \"Connection was provided an instance of ITransport, using that directly.\");\r\n            this.transport = requestedTransport;\r\n            await this._startTransport(connectUrl, requestedTransferFormat);\r\n\r\n            this.connectionId = negotiateResponse.connectionId;\r\n            return;\r\n        }\r\n\r\n        const transportExceptions: any[] = [];\r\n        const transports = negotiateResponse.availableTransports || [];\r\n        let negotiate: INegotiateResponse | undefined = negotiateResponse;\r\n        for (const endpoint of transports) {\r\n            const transportOrError = this._resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat);\r\n            if (transportOrError instanceof Error) {\r\n                // Store the error and continue, we don't want to cause a re-negotiate in these cases\r\n                transportExceptions.push(`${endpoint.transport} failed:`);\r\n                transportExceptions.push(transportOrError);\r\n            } else if (this._isITransport(transportOrError)) {\r\n                this.transport = transportOrError;\r\n                if (!negotiate) {\r\n                    try {\r\n                        negotiate = await this._getNegotiationResponse(url);\r\n                    } catch (ex) {\r\n                        return Promise.reject(ex);\r\n                    }\r\n                    connectUrl = this._createConnectUrl(url, negotiate.connectionToken);\r\n                }\r\n                try {\r\n                    await this._startTransport(connectUrl, requestedTransferFormat);\r\n                    this.connectionId = negotiate.connectionId;\r\n                    return;\r\n                } catch (ex) {\r\n                    this._logger.log(LogLevel.Error, `Failed to start the transport '${endpoint.transport}': ${ex}`);\r\n                    negotiate = undefined;\r\n                    transportExceptions.push(new FailedToStartTransportError(`${endpoint.transport} failed: ${ex}`, HttpTransportType[endpoint.transport]));\r\n\r\n                    if (this._connectionState !== ConnectionState.Connecting) {\r\n                        const message = \"Failed to select transport before stop() was called.\";\r\n                        this._logger.log(LogLevel.Debug, message);\r\n                        return Promise.reject(new Error(message));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (transportExceptions.length > 0) {\r\n            return Promise.reject(new AggregateErrors(`Unable to connect to the server with any of the available transports. ${transportExceptions.join(\" \")}`, transportExceptions));\r\n        }\r\n        return Promise.reject(new Error(\"None of the transports supported by the client are supported by the server.\"));\r\n    }\r\n\r\n    private _constructTransport(transport: HttpTransportType): ITransport {\r\n        switch (transport) {\r\n            case HttpTransportType.WebSockets:\r\n                if (!this._options.WebSocket) {\r\n                    throw new Error(\"'WebSocket' is not supported in your environment.\");\r\n                }\r\n                return new WebSocketTransport(this._httpClient, this._accessTokenFactory, this._logger, this._options.logMessageContent!, this._options.WebSocket, this._options.headers || {});\r\n            case HttpTransportType.ServerSentEvents:\r\n                if (!this._options.EventSource) {\r\n                    throw new Error(\"'EventSource' is not supported in your environment.\");\r\n                }\r\n                return new ServerSentEventsTransport(this._httpClient, this._accessTokenFactory, this._logger, this._options);\r\n            case HttpTransportType.LongPolling:\r\n                return new LongPollingTransport(this._httpClient, this._accessTokenFactory, this._logger, this._options);\r\n            default:\r\n                throw new Error(`Unknown transport: ${transport}.`);\r\n        }\r\n    }\r\n\r\n    private _startTransport(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        this.transport!.onreceive = this.onreceive;\r\n        this.transport!.onclose = (e) => this._stopConnection(e);\r\n        return this.transport!.connect(url, transferFormat);\r\n    }\r\n\r\n    private _resolveTransportOrError(endpoint: IAvailableTransport, requestedTransport: HttpTransportType | undefined, requestedTransferFormat: TransferFormat): ITransport | Error {\r\n        const transport = HttpTransportType[endpoint.transport];\r\n        if (transport === null || transport === undefined) {\r\n            this._logger.log(LogLevel.Debug, `Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n            return new Error(`Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n        } else {\r\n            if (transportMatches(requestedTransport, transport)) {\r\n                const transferFormats = endpoint.transferFormats.map((s) => TransferFormat[s]);\r\n                if (transferFormats.indexOf(requestedTransferFormat) >= 0) {\r\n                    if ((transport === HttpTransportType.WebSockets && !this._options.WebSocket) ||\r\n                        (transport === HttpTransportType.ServerSentEvents && !this._options.EventSource)) {\r\n                        this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it is not supported in your environment.'`);\r\n                        return new UnsupportedTransportError(`'${HttpTransportType[transport]}' is not supported in your environment.`, transport);\r\n                    } else {\r\n                        this._logger.log(LogLevel.Debug, `Selecting transport '${HttpTransportType[transport]}'.`);\r\n                        try {\r\n                            return this._constructTransport(transport);\r\n                        } catch (ex) {\r\n                            return ex;\r\n                        }\r\n                    }\r\n                } else {\r\n                    this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it does not support the requested transfer format '${TransferFormat[requestedTransferFormat]}'.`);\r\n                    return new Error(`'${HttpTransportType[transport]}' does not support ${TransferFormat[requestedTransferFormat]}.`);\r\n                }\r\n            } else {\r\n                this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it was disabled by the client.`);\r\n                return new DisabledTransportError(`'${HttpTransportType[transport]}' is disabled by the client.`, transport);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _isITransport(transport: any): transport is ITransport {\r\n        return transport && typeof (transport) === \"object\" && \"connect\" in transport;\r\n    }\r\n\r\n    private _stopConnection(error?: Error): void {\r\n        this._logger.log(LogLevel.Debug, `HttpConnection.stopConnection(${error}) called while in state ${this._connectionState}.`);\r\n\r\n        this.transport = undefined;\r\n\r\n        // If we have a stopError, it takes precedence over the error from the transport\r\n        error = this._stopError || error;\r\n        this._stopError = undefined;\r\n\r\n        if (this._connectionState === ConnectionState.Disconnected) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is already in the disconnected state.`);\r\n            return;\r\n        }\r\n\r\n        if (this._connectionState === ConnectionState.Connecting) {\r\n            this._logger.log(LogLevel.Warning, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is still in the connecting state.`);\r\n            throw new Error(`HttpConnection.stopConnection(${error}) was called while the connection is still in the connecting state.`);\r\n        }\r\n\r\n        if (this._connectionState === ConnectionState.Disconnecting) {\r\n            // A call to stop() induced this call to stopConnection and needs to be completed.\r\n            // Any stop() awaiters will be scheduled to continue after the onclose callback fires.\r\n            this._stopPromiseResolver();\r\n        }\r\n\r\n        if (error) {\r\n            this._logger.log(LogLevel.Error, `Connection disconnected with error '${error}'.`);\r\n        } else {\r\n            this._logger.log(LogLevel.Information, \"Connection disconnected.\");\r\n        }\r\n\r\n        if (this._sendQueue) {\r\n            this._sendQueue.stop().catch((e) => {\r\n                this._logger.log(LogLevel.Error, `TransportSendQueue.stop() threw error '${e}'.`);\r\n            });\r\n            this._sendQueue = undefined;\r\n        }\r\n\r\n        this.connectionId = undefined;\r\n        this._connectionState = ConnectionState.Disconnected;\r\n\r\n        if (this._connectionStarted) {\r\n            this._connectionStarted = false;\r\n            try {\r\n                if (this.onclose) {\r\n                    this.onclose(error);\r\n                }\r\n            } catch (e) {\r\n                this._logger.log(LogLevel.Error, `HttpConnection.onclose(${error}) threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _resolveUrl(url: string): string {\r\n        // startsWith is not supported in IE\r\n        if (url.lastIndexOf(\"https://\", 0) === 0 || url.lastIndexOf(\"http://\", 0) === 0) {\r\n            return url;\r\n        }\r\n\r\n        if (!Platform.isBrowser) {\r\n            throw new Error(`Cannot resolve '${url}'.`);\r\n        }\r\n\r\n        // Setting the url to the href propery of an anchor tag handles normalization\r\n        // for us. There are 3 main cases.\r\n        // 1. Relative path normalization e.g \"b\" -> \"http://localhost:5000/a/b\"\r\n        // 2. Absolute path normalization e.g \"/a/b\" -> \"http://localhost:5000/a/b\"\r\n        // 3. Networkpath reference normalization e.g \"//localhost:5000/a/b\" -> \"http://localhost:5000/a/b\"\r\n        const aTag = window.document.createElement(\"a\");\r\n        aTag.href = url;\r\n\r\n        this._logger.log(LogLevel.Information, `Normalizing '${url}' to '${aTag.href}'.`);\r\n        return aTag.href;\r\n    }\r\n\r\n    private _resolveNegotiateUrl(url: string): string {\r\n        const index = url.indexOf(\"?\");\r\n        let negotiateUrl = url.substring(0, index === -1 ? url.length : index);\r\n        if (negotiateUrl[negotiateUrl.length - 1] !== \"/\") {\r\n            negotiateUrl += \"/\";\r\n        }\r\n        negotiateUrl += \"negotiate\";\r\n        negotiateUrl += index === -1 ? \"\" : url.substring(index);\r\n\r\n        if (negotiateUrl.indexOf(\"negotiateVersion\") === -1) {\r\n            negotiateUrl += index === -1 ? \"?\" : \"&\";\r\n            negotiateUrl += \"negotiateVersion=\" + this._negotiateVersion;\r\n        }\r\n        return negotiateUrl;\r\n    }\r\n}\r\n\r\nfunction transportMatches(requestedTransport: HttpTransportType | undefined, actualTransport: HttpTransportType) {\r\n    return !requestedTransport || ((actualTransport & requestedTransport) !== 0);\r\n}\r\n\r\n/** @private */\r\nexport class TransportSendQueue {\r\n    private _buffer: any[] = [];\r\n    private _sendBufferedData: PromiseSource;\r\n    private _executing: boolean = true;\r\n    private _transportResult?: PromiseSource;\r\n    private _sendLoopPromise: Promise<void>;\r\n\r\n    constructor(private readonly _transport: ITransport) {\r\n        this._sendBufferedData = new PromiseSource();\r\n        this._transportResult = new PromiseSource();\r\n\r\n        this._sendLoopPromise = this._sendLoop();\r\n    }\r\n\r\n    public send(data: string | ArrayBuffer): Promise<void> {\r\n        this._bufferData(data);\r\n        if (!this._transportResult) {\r\n            this._transportResult = new PromiseSource();\r\n        }\r\n        return this._transportResult.promise;\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        this._executing = false;\r\n        this._sendBufferedData.resolve();\r\n        return this._sendLoopPromise;\r\n    }\r\n\r\n    private _bufferData(data: string | ArrayBuffer): void {\r\n        if (this._buffer.length && typeof(this._buffer[0]) !== typeof(data)) {\r\n            throw new Error(`Expected data to be of type ${typeof(this._buffer)} but was of type ${typeof(data)}`);\r\n        }\r\n\r\n        this._buffer.push(data);\r\n        this._sendBufferedData.resolve();\r\n    }\r\n\r\n    private async _sendLoop(): Promise<void> {\r\n        while (true) {\r\n            await this._sendBufferedData.promise;\r\n\r\n            if (!this._executing) {\r\n                if (this._transportResult) {\r\n                    this._transportResult.reject(\"Connection stopped.\");\r\n                }\r\n\r\n                break;\r\n            }\r\n\r\n            this._sendBufferedData = new PromiseSource();\r\n\r\n            const transportResult = this._transportResult!;\r\n            this._transportResult = undefined;\r\n\r\n            const data = typeof(this._buffer[0]) === \"string\" ?\r\n                this._buffer.join(\"\") :\r\n                TransportSendQueue._concatBuffers(this._buffer);\r\n\r\n            this._buffer.length = 0;\r\n\r\n            try {\r\n                await this._transport.send(data);\r\n                transportResult.resolve();\r\n            } catch (error) {\r\n                transportResult.reject(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    private static _concatBuffers(arrayBuffers: ArrayBuffer[]): ArrayBuffer {\r\n        const totalLength = arrayBuffers.map((b) => b.byteLength).reduce((a, b) => a + b);\r\n        const result = new Uint8Array(totalLength);\r\n        let offset = 0;\r\n        for (const item of arrayBuffers) {\r\n            result.set(new Uint8Array(item), offset);\r\n            offset += item.byteLength;\r\n        }\r\n\r\n        return result.buffer;\r\n    }\r\n}\r\n\r\nclass PromiseSource {\r\n    private _resolver?: () => void;\r\n    private _rejecter!: (reason?: any) => void;\r\n    public promise: Promise<void>;\r\n\r\n    constructor() {\r\n        this.promise = new Promise((resolve, reject) => [this._resolver, this._rejecter] = [resolve, reject]);\r\n    }\r\n\r\n    public resolve(): void {\r\n        this._resolver!();\r\n    }\r\n\r\n    public reject(reason?: any): void {\r\n        this._rejecter!(reason);\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\n// Not exported from index\r\n/** @private */\r\nexport class TextMessageFormat {\r\n    public static RecordSeparatorCode = 0x1e;\r\n    public static RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\r\n\r\n    public static write(output: string): string {\r\n        return `${output}${TextMessageFormat.RecordSeparator}`;\r\n    }\r\n\r\n    public static parse(input: string): string[] {\r\n        if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\r\n            throw new Error(\"Message is incomplete.\");\r\n        }\r\n\r\n        const messages = input.split(TextMessageFormat.RecordSeparator);\r\n        messages.pop();\r\n        return messages;\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n\r\n/** @private */\r\nexport interface HandshakeRequestMessage {\r\n    readonly protocol: string;\r\n    readonly version: number;\r\n}\r\n\r\n/** @private */\r\nexport interface HandshakeResponseMessage {\r\n    readonly error: string;\r\n    readonly minorVersion: number;\r\n}\r\n\r\n/** @private */\r\nexport class HandshakeProtocol {\r\n    // Handshake request is always JSON\r\n    public writeHandshakeRequest(handshakeRequest: HandshakeRequestMessage): string {\r\n        return TextMessageFormat.write(JSON.stringify(handshakeRequest));\r\n    }\r\n\r\n    public parseHandshakeResponse(data: any): [any, HandshakeResponseMessage] {\r\n        let messageData: string;\r\n        let remainingData: any;\r\n\r\n        if (isArrayBuffer(data)) {\r\n            // Format is binary but still need to read JSON text from handshake response\r\n            const binaryData = new Uint8Array(data);\r\n            const separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = String.fromCharCode.apply(null, Array.prototype.slice.call(binaryData.slice(0, responseLength)));\r\n            remainingData = (binaryData.byteLength > responseLength) ? binaryData.slice(responseLength).buffer : null;\r\n        } else {\r\n            const textData: string = data;\r\n            const separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = textData.substring(0, responseLength);\r\n            remainingData = (textData.length > responseLength) ? textData.substring(responseLength) : null;\r\n        }\r\n\r\n        // At this point we should have just the single handshake message\r\n        const messages = TextMessageFormat.parse(messageData);\r\n        const response = JSON.parse(messages[0]);\r\n        if (response.type) {\r\n            throw new Error(\"Expected a handshake response from the server.\");\r\n        }\r\n        const responseMessage: HandshakeResponseMessage = response;\r\n\r\n        // multiple messages could have arrived with handshake\r\n        // return additional data to be parsed as usual, or null if all parsed\r\n        return [remainingData, responseMessage];\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { IStreamResult, IStreamSubscriber, ISubscription } from \"./Stream\";\r\nimport { SubjectSubscription } from \"./Utils\";\r\n\r\n/** Stream implementation to stream items to the server. */\r\nexport class Subject<T> implements IStreamResult<T> {\r\n    /** @internal */\r\n    public observers: IStreamSubscriber<T>[];\r\n\r\n    /** @internal */\r\n    public cancelCallback?: () => Promise<void>;\r\n\r\n    constructor() {\r\n        this.observers = [];\r\n    }\r\n\r\n    public next(item: T): void {\r\n        for (const observer of this.observers) {\r\n            observer.next(item);\r\n        }\r\n    }\r\n\r\n    public error(err: any): void {\r\n        for (const observer of this.observers) {\r\n            if (observer.error) {\r\n                observer.error(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    public complete(): void {\r\n        for (const observer of this.observers) {\r\n            if (observer.complete) {\r\n                observer.complete();\r\n            }\r\n        }\r\n    }\r\n\r\n    public subscribe(observer: IStreamSubscriber<T>): ISubscription<T> {\r\n        this.observers.push(observer);\r\n        return new SubjectSubscription(this, observer);\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { HandshakeProtocol, HandshakeRequestMessage, HandshakeResponseMessage } from \"./HandshakeProtocol\";\r\nimport { IConnection } from \"./IConnection\";\r\nimport { CancelInvocationMessage, CompletionMessage, IHubProtocol, InvocationMessage, MessageType, StreamInvocationMessage, StreamItemMessage } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { IRetryPolicy } from \"./IRetryPolicy\";\r\nimport { IStreamResult } from \"./Stream\";\r\nimport { Subject } from \"./Subject\";\r\nimport { Arg, getErrorString, Platform } from \"./Utils\";\r\n\r\nconst DEFAULT_TIMEOUT_IN_MS: number = 30 * 1000;\r\nconst DEFAULT_PING_INTERVAL_IN_MS: number = 15 * 1000;\r\n\r\n/** Describes the current state of the {@link HubConnection} to the server. */\r\nexport enum HubConnectionState {\r\n    /** The hub connection is disconnected. */\r\n    Disconnected = \"Disconnected\",\r\n    /** The hub connection is connecting. */\r\n    Connecting = \"Connecting\",\r\n    /** The hub connection is connected. */\r\n    Connected = \"Connected\",\r\n    /** The hub connection is disconnecting. */\r\n    Disconnecting = \"Disconnecting\",\r\n    /** The hub connection is reconnecting. */\r\n    Reconnecting = \"Reconnecting\",\r\n}\r\n\r\n/** Represents a connection to a SignalR Hub. */\r\nexport class HubConnection {\r\n    private readonly _cachedPingMessage: string | ArrayBuffer;\r\n    // Needs to not start with _ for tests\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private readonly connection: IConnection;\r\n    private readonly _logger: ILogger;\r\n    private readonly _reconnectPolicy?: IRetryPolicy;\r\n    private _protocol: IHubProtocol;\r\n    private _handshakeProtocol: HandshakeProtocol;\r\n    private _callbacks: { [invocationId: string]: (invocationEvent: StreamItemMessage | CompletionMessage | null, error?: Error) => void };\r\n    private _methods: { [name: string]: ((...args: any[]) => void)[] };\r\n    private _invocationId: number;\r\n\r\n    private _closedCallbacks: ((error?: Error) => void)[];\r\n    private _reconnectingCallbacks: ((error?: Error) => void)[];\r\n    private _reconnectedCallbacks: ((connectionId?: string) => void)[];\r\n\r\n    private _receivedHandshakeResponse: boolean;\r\n    private _handshakeResolver!: (value?: PromiseLike<{}>) => void;\r\n    private _handshakeRejecter!: (reason?: any) => void;\r\n    private _stopDuringStartError?: Error;\r\n\r\n    private _connectionState: HubConnectionState;\r\n    // connectionStarted is tracked independently from connectionState, so we can check if the\r\n    // connection ever did successfully transition from connecting to connected before disconnecting.\r\n    private _connectionStarted: boolean;\r\n    private _startPromise?: Promise<void>;\r\n    private _stopPromise?: Promise<void>;\r\n    private _nextKeepAlive: number = 0;\r\n\r\n    // The type of these a) doesn't matter and b) varies when building in browser and node contexts\r\n    // Since we're building the WebPack bundle directly from the TypeScript, this matters (previously\r\n    // we built the bundle from the compiled JavaScript).\r\n    private _reconnectDelayHandle?: any;\r\n    private _timeoutHandle?: any;\r\n    private _pingServerHandle?: any;\r\n\r\n    private _freezeEventListener = () =>\r\n    {\r\n        this._logger.log(LogLevel.Warning, \"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://docs.microsoft.com/aspnet/core/signalr/javascript-client#bsleep\");\r\n    };\r\n\r\n    /** The server timeout in milliseconds.\r\n     *\r\n     * If this timeout elapses without receiving any messages from the server, the connection will be terminated with an error.\r\n     * The default timeout value is 30,000 milliseconds (30 seconds).\r\n     */\r\n    public serverTimeoutInMilliseconds: number;\r\n\r\n    /** Default interval at which to ping the server.\r\n     *\r\n     * The default value is 15,000 milliseconds (15 seconds).\r\n     * Allows the server to detect hard disconnects (like when a client unplugs their computer).\r\n     * The ping will happen at most as often as the server pings.\r\n     * If the server pings every 5 seconds, a value lower than 5 will ping every 5 seconds.\r\n     */\r\n    public keepAliveIntervalInMilliseconds: number;\r\n\r\n    /** @internal */\r\n    // Using a public static factory method means we can have a private constructor and an _internal_\r\n    // create method that can be used by HubConnectionBuilder. An \"internal\" constructor would just\r\n    // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a\r\n    // public parameter-less constructor.\r\n    public static create(connection: IConnection, logger: ILogger, protocol: IHubProtocol, reconnectPolicy?: IRetryPolicy): HubConnection {\r\n        return new HubConnection(connection, logger, protocol, reconnectPolicy);\r\n    }\r\n\r\n    private constructor(connection: IConnection, logger: ILogger, protocol: IHubProtocol, reconnectPolicy?: IRetryPolicy) {\r\n        Arg.isRequired(connection, \"connection\");\r\n        Arg.isRequired(logger, \"logger\");\r\n        Arg.isRequired(protocol, \"protocol\");\r\n\r\n        this.serverTimeoutInMilliseconds = DEFAULT_TIMEOUT_IN_MS;\r\n        this.keepAliveIntervalInMilliseconds = DEFAULT_PING_INTERVAL_IN_MS;\r\n\r\n        this._logger = logger;\r\n        this._protocol = protocol;\r\n        this.connection = connection;\r\n        this._reconnectPolicy = reconnectPolicy;\r\n        this._handshakeProtocol = new HandshakeProtocol();\r\n\r\n        this.connection.onreceive = (data: any) => this._processIncomingData(data);\r\n        this.connection.onclose = (error?: Error) => this._connectionClosed(error);\r\n\r\n        this._callbacks = {};\r\n        this._methods = {};\r\n        this._closedCallbacks = [];\r\n        this._reconnectingCallbacks = [];\r\n        this._reconnectedCallbacks = [];\r\n        this._invocationId = 0;\r\n        this._receivedHandshakeResponse = false;\r\n        this._connectionState = HubConnectionState.Disconnected;\r\n        this._connectionStarted = false;\r\n\r\n        this._cachedPingMessage = this._protocol.writeMessage({ type: MessageType.Ping });\r\n    }\r\n\r\n    /** Indicates the state of the {@link HubConnection} to the server. */\r\n    get state(): HubConnectionState {\r\n        return this._connectionState;\r\n    }\r\n\r\n    /** Represents the connection id of the {@link HubConnection} on the server. The connection id will be null when the connection is either\r\n     *  in the disconnected state or if the negotiation step was skipped.\r\n     */\r\n    get connectionId(): string | null {\r\n        return this.connection ? (this.connection.connectionId || null) : null;\r\n    }\r\n\r\n    /** Indicates the url of the {@link HubConnection} to the server. */\r\n    get baseUrl(): string {\r\n        return this.connection.baseUrl || \"\";\r\n    }\r\n\r\n    /**\r\n     * Sets a new url for the HubConnection. Note that the url can only be changed when the connection is in either the Disconnected or\r\n     * Reconnecting states.\r\n     * @param {string} url The url to connect to.\r\n     */\r\n    set baseUrl(url: string) {\r\n        if (this._connectionState !== HubConnectionState.Disconnected && this._connectionState !== HubConnectionState.Reconnecting) {\r\n            throw new Error(\"The HubConnection must be in the Disconnected or Reconnecting state to change the url.\");\r\n        }\r\n\r\n        if (!url) {\r\n            throw new Error(\"The HubConnection url must be a valid url.\");\r\n        }\r\n\r\n        this.connection.baseUrl = url;\r\n    }\r\n\r\n    /** Starts the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.\r\n     */\r\n    public start(): Promise<void> {\r\n        this._startPromise = this._startWithStateTransitions();\r\n        return this._startPromise;\r\n    }\r\n\r\n    private async _startWithStateTransitions(): Promise<void> {\r\n        if (this._connectionState !== HubConnectionState.Disconnected) {\r\n            return Promise.reject(new Error(\"Cannot start a HubConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n\r\n        this._connectionState = HubConnectionState.Connecting;\r\n        this._logger.log(LogLevel.Debug, \"Starting HubConnection.\");\r\n\r\n        try {\r\n            await this._startInternal();\r\n\r\n            if (Platform.isBrowser) {\r\n                // Log when the browser freezes the tab so users know why their connection unexpectedly stopped working\r\n                window.document.addEventListener(\"freeze\", this._freezeEventListener);\r\n            }\r\n\r\n            this._connectionState = HubConnectionState.Connected;\r\n            this._connectionStarted = true;\r\n            this._logger.log(LogLevel.Debug, \"HubConnection connected successfully.\");\r\n        } catch (e) {\r\n            this._connectionState = HubConnectionState.Disconnected;\r\n            this._logger.log(LogLevel.Debug, `HubConnection failed to start successfully because of error '${e}'.`);\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    private async _startInternal() {\r\n        this._stopDuringStartError = undefined;\r\n        this._receivedHandshakeResponse = false;\r\n        // Set up the promise before any connection is (re)started otherwise it could race with received messages\r\n        const handshakePromise = new Promise((resolve, reject) => {\r\n            this._handshakeResolver = resolve;\r\n            this._handshakeRejecter = reject;\r\n        });\r\n\r\n        await this.connection.start(this._protocol.transferFormat);\r\n\r\n        try {\r\n            const handshakeRequest: HandshakeRequestMessage = {\r\n                protocol: this._protocol.name,\r\n                version: this._protocol.version,\r\n            };\r\n\r\n            this._logger.log(LogLevel.Debug, \"Sending handshake request.\");\r\n\r\n            await this._sendMessage(this._handshakeProtocol.writeHandshakeRequest(handshakeRequest));\r\n\r\n            this._logger.log(LogLevel.Information, `Using HubProtocol '${this._protocol.name}'.`);\r\n\r\n            // defensively cleanup timeout in case we receive a message from the server before we finish start\r\n            this._cleanupTimeout();\r\n            this._resetTimeoutPeriod();\r\n            this._resetKeepAliveInterval();\r\n\r\n            await handshakePromise;\r\n\r\n            // It's important to check the stopDuringStartError instead of just relying on the handshakePromise\r\n            // being rejected on close, because this continuation can run after both the handshake completed successfully\r\n            // and the connection was closed.\r\n            if (this._stopDuringStartError) {\r\n                // It's important to throw instead of returning a rejected promise, because we don't want to allow any state\r\n                // transitions to occur between now and the calling code observing the exceptions. Returning a rejected promise\r\n                // will cause the calling continuation to get scheduled to run later.\r\n                // eslint-disable-next-line @typescript-eslint/no-throw-literal\r\n                throw this._stopDuringStartError;\r\n            }\r\n        } catch (e) {\r\n            this._logger.log(LogLevel.Debug, `Hub handshake failed with error '${e}' during start(). Stopping HubConnection.`);\r\n\r\n            this._cleanupTimeout();\r\n            this._cleanupPingTimer();\r\n\r\n            // HttpConnection.stop() should not complete until after the onclose callback is invoked.\r\n            // This will transition the HubConnection to the disconnected state before HttpConnection.stop() completes.\r\n            await this.connection.stop(e);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /** Stops the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.\r\n     */\r\n    public async stop(): Promise<void> {\r\n        // Capture the start promise before the connection might be restarted in an onclose callback.\r\n        const startPromise = this._startPromise;\r\n\r\n        this._stopPromise = this._stopInternal();\r\n        await this._stopPromise;\r\n\r\n        try {\r\n            // Awaiting undefined continues immediately\r\n            await startPromise;\r\n        } catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n    }\r\n\r\n    private _stopInternal(error?: Error): Promise<void> {\r\n        if (this._connectionState === HubConnectionState.Disconnected) {\r\n            this._logger.log(LogLevel.Debug, `Call to HubConnection.stop(${error}) ignored because it is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        if (this._connectionState === HubConnectionState.Disconnecting) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this._stopPromise!;\r\n        }\r\n\r\n        this._connectionState = HubConnectionState.Disconnecting;\r\n\r\n        this._logger.log(LogLevel.Debug, \"Stopping HubConnection.\");\r\n\r\n        if (this._reconnectDelayHandle) {\r\n            // We're in a reconnect delay which means the underlying connection is currently already stopped.\r\n            // Just clear the handle to stop the reconnect loop (which no one is waiting on thankfully) and\r\n            // fire the onclose callbacks.\r\n            this._logger.log(LogLevel.Debug, \"Connection stopped during reconnect delay. Done reconnecting.\");\r\n\r\n            clearTimeout(this._reconnectDelayHandle);\r\n            this._reconnectDelayHandle = undefined;\r\n\r\n            this._completeClose();\r\n            return Promise.resolve();\r\n        }\r\n\r\n        this._cleanupTimeout();\r\n        this._cleanupPingTimer();\r\n        this._stopDuringStartError = error || new Error(\"The connection was stopped before the hub handshake could complete.\");\r\n\r\n        // HttpConnection.stop() should not complete until after either HttpConnection.start() fails\r\n        // or the onclose callback is invoked. The onclose callback will transition the HubConnection\r\n        // to the disconnected state if need be before HttpConnection.stop() completes.\r\n        return this.connection.stop(error);\r\n    }\r\n\r\n    /** Invokes a streaming hub method on the server using the specified name and arguments.\r\n     *\r\n     * @typeparam T The type of the items returned by the server.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.\r\n     */\r\n    public stream<T = any>(methodName: string, ...args: any[]): IStreamResult<T> {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const invocationDescriptor = this._createStreamInvocation(methodName, args, streamIds);\r\n\r\n        // eslint-disable-next-line prefer-const\r\n        let promiseQueue: Promise<void>;\r\n\r\n        const subject = new Subject<T>();\r\n        subject.cancelCallback = () => {\r\n            const cancelInvocation: CancelInvocationMessage = this._createCancelInvocation(invocationDescriptor.invocationId);\r\n\r\n            delete this._callbacks[invocationDescriptor.invocationId];\r\n\r\n            return promiseQueue.then(() => {\r\n                return this._sendWithProtocol(cancelInvocation);\r\n            });\r\n        };\r\n\r\n        this._callbacks[invocationDescriptor.invocationId] = (invocationEvent: CompletionMessage | StreamItemMessage | null, error?: Error) => {\r\n            if (error) {\r\n                subject.error(error);\r\n                return;\r\n            } else if (invocationEvent) {\r\n                // invocationEvent will not be null when an error is not passed to the callback\r\n                if (invocationEvent.type === MessageType.Completion) {\r\n                    if (invocationEvent.error) {\r\n                        subject.error(new Error(invocationEvent.error));\r\n                    } else {\r\n                        subject.complete();\r\n                    }\r\n                } else {\r\n                    subject.next((invocationEvent.item) as T);\r\n                }\r\n            }\r\n        };\r\n\r\n        promiseQueue = this._sendWithProtocol(invocationDescriptor)\r\n            .catch((e) => {\r\n                subject.error(e);\r\n                delete this._callbacks[invocationDescriptor.invocationId];\r\n            });\r\n\r\n        this._launchStreams(streams, promiseQueue);\r\n\r\n        return subject;\r\n    }\r\n\r\n    private _sendMessage(message: any) {\r\n        this._resetKeepAliveInterval();\r\n        return this.connection.send(message);\r\n    }\r\n\r\n    /**\r\n     * Sends a js object to the server.\r\n     * @param message The js object to serialize and send.\r\n     */\r\n    private _sendWithProtocol(message: any) {\r\n        return this._sendMessage(this._protocol.writeMessage(message));\r\n    }\r\n\r\n    /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.\r\n     *\r\n     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still\r\n     * be processing the invocation.\r\n     *\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.\r\n     */\r\n    public send(methodName: string, ...args: any[]): Promise<void> {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const sendPromise = this._sendWithProtocol(this._createInvocation(methodName, args, true, streamIds));\r\n\r\n        this._launchStreams(streams, sendPromise);\r\n\r\n        return sendPromise;\r\n    }\r\n\r\n    /** Invokes a hub method on the server using the specified name and arguments.\r\n     *\r\n     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise\r\n     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of\r\n     * resolving the Promise.\r\n     *\r\n     * @typeparam T The expected return type.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.\r\n     */\r\n    public invoke<T = any>(methodName: string, ...args: any[]): Promise<T> {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const invocationDescriptor = this._createInvocation(methodName, args, false, streamIds);\r\n\r\n        const p = new Promise<any>((resolve, reject) => {\r\n            // invocationId will always have a value for a non-blocking invocation\r\n            this._callbacks[invocationDescriptor.invocationId!] = (invocationEvent: StreamItemMessage | CompletionMessage | null, error?: Error) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                } else if (invocationEvent) {\r\n                    // invocationEvent will not be null when an error is not passed to the callback\r\n                    if (invocationEvent.type === MessageType.Completion) {\r\n                        if (invocationEvent.error) {\r\n                            reject(new Error(invocationEvent.error));\r\n                        } else {\r\n                            resolve(invocationEvent.result);\r\n                        }\r\n                    } else {\r\n                        reject(new Error(`Unexpected message type: ${invocationEvent.type}`));\r\n                    }\r\n                }\r\n            };\r\n\r\n            const promiseQueue = this._sendWithProtocol(invocationDescriptor)\r\n                .catch((e) => {\r\n                    reject(e);\r\n                    // invocationId will always have a value for a non-blocking invocation\r\n                    delete this._callbacks[invocationDescriptor.invocationId!];\r\n                });\r\n\r\n            this._launchStreams(streams, promiseQueue);\r\n        });\r\n\r\n        return p;\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the hub method with the specified method name is invoked.\r\n     *\r\n     * @param {string} methodName The name of the hub method to define.\r\n     * @param {Function} newMethod The handler that will be raised when the hub method is invoked.\r\n     */\r\n    public on(methodName: string, newMethod: (...args: any[]) => void): void {\r\n        if (!methodName || !newMethod) {\r\n            return;\r\n        }\r\n\r\n        methodName = methodName.toLowerCase();\r\n        if (!this._methods[methodName]) {\r\n            this._methods[methodName] = [];\r\n        }\r\n\r\n        // Preventing adding the same handler multiple times.\r\n        if (this._methods[methodName].indexOf(newMethod) !== -1) {\r\n            return;\r\n        }\r\n\r\n        this._methods[methodName].push(newMethod);\r\n    }\r\n\r\n    /** Removes all handlers for the specified hub method.\r\n     *\r\n     * @param {string} methodName The name of the method to remove handlers for.\r\n     */\r\n    public off(methodName: string): void;\r\n\r\n    /** Removes the specified handler for the specified hub method.\r\n     *\r\n     * You must pass the exact same Function instance as was previously passed to {@link @microsoft/signalr.HubConnection.on}. Passing a different instance (even if the function\r\n     * body is the same) will not remove the handler.\r\n     *\r\n     * @param {string} methodName The name of the method to remove handlers for.\r\n     * @param {Function} method The handler to remove. This must be the same Function instance as the one passed to {@link @microsoft/signalr.HubConnection.on}.\r\n     */\r\n    public off(methodName: string, method: (...args: any[]) => void): void;\r\n    public off(methodName: string, method?: (...args: any[]) => void): void {\r\n        if (!methodName) {\r\n            return;\r\n        }\r\n\r\n        methodName = methodName.toLowerCase();\r\n        const handlers = this._methods[methodName];\r\n        if (!handlers) {\r\n            return;\r\n        }\r\n        if (method) {\r\n            const removeIdx = handlers.indexOf(method);\r\n            if (removeIdx !== -1) {\r\n                handlers.splice(removeIdx, 1);\r\n                if (handlers.length === 0) {\r\n                    delete this._methods[methodName];\r\n                }\r\n            }\r\n        } else {\r\n            delete this._methods[methodName];\r\n        }\r\n\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the connection is closed.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).\r\n     */\r\n    public onclose(callback: (error?: Error) => void): void {\r\n        if (callback) {\r\n            this._closedCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the connection starts reconnecting.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection starts reconnecting. Optionally receives a single argument containing the error that caused the connection to start reconnecting (if any).\r\n     */\r\n    public onreconnecting(callback: (error?: Error) => void): void {\r\n        if (callback) {\r\n            this._reconnectingCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the connection successfully reconnects.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection successfully reconnects.\r\n     */\r\n    public onreconnected(callback: (connectionId?: string) => void): void {\r\n        if (callback) {\r\n            this._reconnectedCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    private _processIncomingData(data: any) {\r\n        this._cleanupTimeout();\r\n\r\n        if (!this._receivedHandshakeResponse) {\r\n            data = this._processHandshakeResponse(data);\r\n            this._receivedHandshakeResponse = true;\r\n        }\r\n\r\n        // Data may have all been read when processing handshake response\r\n        if (data) {\r\n            // Parse the messages\r\n            const messages = this._protocol.parseMessages(data, this._logger);\r\n\r\n            for (const message of messages) {\r\n                switch (message.type) {\r\n                    case MessageType.Invocation:\r\n                        this._invokeClientMethod(message);\r\n                        break;\r\n                    case MessageType.StreamItem:\r\n                    case MessageType.Completion: {\r\n                        const callback = this._callbacks[message.invocationId];\r\n                        if (callback) {\r\n                            if (message.type === MessageType.Completion) {\r\n                                delete this._callbacks[message.invocationId];\r\n                            }\r\n                            try {\r\n                                callback(message);\r\n                            } catch (e) {\r\n                                this._logger.log(LogLevel.Error, `Stream callback threw error: ${getErrorString(e)}`);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    case MessageType.Ping:\r\n                        // Don't care about pings\r\n                        break;\r\n                    case MessageType.Close: {\r\n                        this._logger.log(LogLevel.Information, \"Close message received from server.\");\r\n\r\n                        const error = message.error ? new Error(\"Server returned an error on close: \" + message.error) : undefined;\r\n\r\n                        if (message.allowReconnect === true) {\r\n                            // It feels wrong not to await connection.stop() here, but processIncomingData is called as part of an onreceive callback which is not async,\r\n                            // this is already the behavior for serverTimeout(), and HttpConnection.Stop() should catch and log all possible exceptions.\r\n\r\n                            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n                            this.connection.stop(error);\r\n                        } else {\r\n                            // We cannot await stopInternal() here, but subsequent calls to stop() will await this if stopInternal() is still ongoing.\r\n                            this._stopPromise = this._stopInternal(error);\r\n                        }\r\n\r\n                        break;\r\n                    }\r\n                    default:\r\n                        this._logger.log(LogLevel.Warning, `Invalid message type: ${message.type}.`);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        this._resetTimeoutPeriod();\r\n    }\r\n\r\n    private _processHandshakeResponse(data: any): any {\r\n        let responseMessage: HandshakeResponseMessage;\r\n        let remainingData: any;\r\n\r\n        try {\r\n            [remainingData, responseMessage] = this._handshakeProtocol.parseHandshakeResponse(data);\r\n        } catch (e) {\r\n            const message = \"Error parsing handshake response: \" + e;\r\n            this._logger.log(LogLevel.Error, message);\r\n\r\n            const error = new Error(message);\r\n            this._handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        if (responseMessage.error) {\r\n            const message = \"Server returned handshake error: \" + responseMessage.error;\r\n            this._logger.log(LogLevel.Error, message);\r\n\r\n            const error = new Error(message);\r\n            this._handshakeRejecter(error);\r\n            throw error;\r\n        } else {\r\n            this._logger.log(LogLevel.Debug, \"Server handshake complete.\");\r\n        }\r\n\r\n        this._handshakeResolver();\r\n        return remainingData;\r\n    }\r\n\r\n    private _resetKeepAliveInterval() {\r\n        if (this.connection.features.inherentKeepAlive) {\r\n            return;\r\n        }\r\n\r\n        // Set the time we want the next keep alive to be sent\r\n        // Timer will be setup on next message receive\r\n        this._nextKeepAlive = new Date().getTime() + this.keepAliveIntervalInMilliseconds;\r\n\r\n        this._cleanupPingTimer();\r\n    }\r\n\r\n    private _resetTimeoutPeriod() {\r\n        if (!this.connection.features || !this.connection.features.inherentKeepAlive) {\r\n            // Set the timeout timer\r\n            this._timeoutHandle = setTimeout(() => this.serverTimeout(), this.serverTimeoutInMilliseconds);\r\n\r\n            // Set keepAlive timer if there isn't one\r\n            if (this._pingServerHandle === undefined)\r\n            {\r\n                let nextPing = this._nextKeepAlive - new Date().getTime();\r\n                if (nextPing < 0) {\r\n                    nextPing = 0;\r\n                }\r\n\r\n                // The timer needs to be set from a networking callback to avoid Chrome timer throttling from causing timers to run once a minute\r\n                this._pingServerHandle = setTimeout(async () => {\r\n                    if (this._connectionState === HubConnectionState.Connected) {\r\n                        try {\r\n                            await this._sendMessage(this._cachedPingMessage);\r\n                        } catch {\r\n                            // We don't care about the error. It should be seen elsewhere in the client.\r\n                            // The connection is probably in a bad or closed state now, cleanup the timer so it stops triggering\r\n                            this._cleanupPingTimer();\r\n                        }\r\n                    }\r\n                }, nextPing);\r\n            }\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private serverTimeout() {\r\n        // The server hasn't talked to us in a while. It doesn't like us anymore ... :(\r\n        // Terminate the connection, but we don't need to wait on the promise. This could trigger reconnecting.\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"));\r\n    }\r\n\r\n    private _invokeClientMethod(invocationMessage: InvocationMessage) {\r\n        const methods = this._methods[invocationMessage.target.toLowerCase()];\r\n        if (methods) {\r\n            try {\r\n                methods.forEach((m) => m.apply(this, invocationMessage.arguments));\r\n            } catch (e) {\r\n                this._logger.log(LogLevel.Error, `A callback for the method ${invocationMessage.target.toLowerCase()} threw error '${e}'.`);\r\n            }\r\n\r\n            if (invocationMessage.invocationId) {\r\n                // This is not supported in v1. So we return an error to avoid blocking the server waiting for the response.\r\n                const message = \"Server requested a response, which is not supported in this version of the client.\";\r\n                this._logger.log(LogLevel.Error, message);\r\n\r\n                // We don't want to wait on the stop itself.\r\n                this._stopPromise = this._stopInternal(new Error(message));\r\n            }\r\n        } else {\r\n            this._logger.log(LogLevel.Warning, `No client method with the name '${invocationMessage.target}' found.`);\r\n        }\r\n    }\r\n\r\n    private _connectionClosed(error?: Error) {\r\n        this._logger.log(LogLevel.Debug, `HubConnection.connectionClosed(${error}) called while in state ${this._connectionState}.`);\r\n\r\n        // Triggering this.handshakeRejecter is insufficient because it could already be resolved without the continuation having run yet.\r\n        this._stopDuringStartError = this._stopDuringStartError || error || new Error(\"The underlying connection was closed before the hub handshake could complete.\");\r\n\r\n        // If the handshake is in progress, start will be waiting for the handshake promise, so we complete it.\r\n        // If it has already completed, this should just noop.\r\n        if (this._handshakeResolver) {\r\n            this._handshakeResolver();\r\n        }\r\n\r\n        this._cancelCallbacksWithError(error || new Error(\"Invocation canceled due to the underlying connection being closed.\"));\r\n\r\n        this._cleanupTimeout();\r\n        this._cleanupPingTimer();\r\n\r\n        if (this._connectionState === HubConnectionState.Disconnecting) {\r\n            this._completeClose(error);\r\n        } else if (this._connectionState === HubConnectionState.Connected && this._reconnectPolicy) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this._reconnect(error);\r\n        } else if (this._connectionState === HubConnectionState.Connected) {\r\n            this._completeClose(error);\r\n        }\r\n\r\n        // If none of the above if conditions were true were called the HubConnection must be in either:\r\n        // 1. The Connecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail it.\r\n        // 2. The Reconnecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail the current reconnect attempt\r\n        //    and potentially continue the reconnect() loop.\r\n        // 3. The Disconnected state in which case we're already done.\r\n    }\r\n\r\n    private _completeClose(error?: Error) {\r\n        if (this._connectionStarted) {\r\n            this._connectionState = HubConnectionState.Disconnected;\r\n            this._connectionStarted = false;\r\n\r\n            if (Platform.isBrowser) {\r\n                window.document.removeEventListener(\"freeze\", this._freezeEventListener);\r\n            }\r\n\r\n            try {\r\n                this._closedCallbacks.forEach((c) => c.apply(this, [error]));\r\n            } catch (e) {\r\n                this._logger.log(LogLevel.Error, `An onclose callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private async _reconnect(error?: Error) {\r\n        const reconnectStartTime = Date.now();\r\n        let previousReconnectAttempts = 0;\r\n        let retryError = error !== undefined ? error : new Error(\"Attempting to reconnect due to a unknown error.\");\r\n\r\n        let nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, 0, retryError);\r\n\r\n        if (nextRetryDelay === null) {\r\n            this._logger.log(LogLevel.Debug, \"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt.\");\r\n            this._completeClose(error);\r\n            return;\r\n        }\r\n\r\n        this._connectionState = HubConnectionState.Reconnecting;\r\n\r\n        if (error) {\r\n            this._logger.log(LogLevel.Information, `Connection reconnecting because of error '${error}'.`);\r\n        } else {\r\n            this._logger.log(LogLevel.Information, \"Connection reconnecting.\");\r\n        }\r\n\r\n        if (this._reconnectingCallbacks.length !== 0) {\r\n            try {\r\n                this._reconnectingCallbacks.forEach((c) => c.apply(this, [error]));\r\n            } catch (e) {\r\n                this._logger.log(LogLevel.Error, `An onreconnecting callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n\r\n            // Exit early if an onreconnecting callback called connection.stop().\r\n            if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                this._logger.log(LogLevel.Debug, \"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        while (nextRetryDelay !== null) {\r\n            this._logger.log(LogLevel.Information, `Reconnect attempt number ${previousReconnectAttempts} will start in ${nextRetryDelay} ms.`);\r\n\r\n            await new Promise((resolve) => {\r\n                this._reconnectDelayHandle = setTimeout(resolve, nextRetryDelay!);\r\n            });\r\n            this._reconnectDelayHandle = undefined;\r\n\r\n            if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                this._logger.log(LogLevel.Debug, \"Connection left the reconnecting state during reconnect delay. Done reconnecting.\");\r\n                return;\r\n            }\r\n\r\n            try {\r\n                await this._startInternal();\r\n\r\n                this._connectionState = HubConnectionState.Connected;\r\n                this._logger.log(LogLevel.Information, \"HubConnection reconnected successfully.\");\r\n\r\n                if (this._reconnectedCallbacks.length !== 0) {\r\n                    try {\r\n                        this._reconnectedCallbacks.forEach((c) => c.apply(this, [this.connection.connectionId]));\r\n                    } catch (e) {\r\n                        this._logger.log(LogLevel.Error, `An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${e}'.`);\r\n                    }\r\n                }\r\n\r\n                return;\r\n            } catch (e) {\r\n                this._logger.log(LogLevel.Information, `Reconnect attempt failed because of error '${e}'.`);\r\n\r\n                if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                    this._logger.log(LogLevel.Debug, `Connection moved to the '${this._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`);\r\n                    // The TypeScript compiler thinks that connectionState must be Connected here. The TypeScript compiler is wrong.\r\n                    if (this._connectionState as any === HubConnectionState.Disconnecting) {\r\n                        this._completeClose();\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                retryError = e instanceof Error ? e : new Error(e.toString());\r\n                nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, Date.now() - reconnectStartTime, retryError);\r\n            }\r\n        }\r\n\r\n        this._logger.log(LogLevel.Information, `Reconnect retries have been exhausted after ${Date.now() - reconnectStartTime} ms and ${previousReconnectAttempts} failed attempts. Connection disconnecting.`);\r\n\r\n        this._completeClose();\r\n    }\r\n\r\n    private _getNextRetryDelay(previousRetryCount: number, elapsedMilliseconds: number, retryReason: Error) {\r\n        try {\r\n            return this._reconnectPolicy!.nextRetryDelayInMilliseconds({\r\n                elapsedMilliseconds,\r\n                previousRetryCount,\r\n                retryReason,\r\n            });\r\n        } catch (e) {\r\n            this._logger.log(LogLevel.Error, `IRetryPolicy.nextRetryDelayInMilliseconds(${previousRetryCount}, ${elapsedMilliseconds}) threw error '${e}'.`);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private _cancelCallbacksWithError(error: Error) {\r\n        const callbacks = this._callbacks;\r\n        this._callbacks = {};\r\n\r\n        Object.keys(callbacks)\r\n            .forEach((key) => {\r\n                const callback = callbacks[key];\r\n                try {\r\n                    callback(null, error);\r\n                } catch (e) {\r\n                    this._logger.log(LogLevel.Error, `Stream 'error' callback called with '${error}' threw error: ${getErrorString(e)}`);\r\n                }\r\n            });\r\n    }\r\n\r\n    private _cleanupPingTimer(): void {\r\n        if (this._pingServerHandle) {\r\n            clearTimeout(this._pingServerHandle);\r\n            this._pingServerHandle = undefined;\r\n        }\r\n    }\r\n\r\n    private _cleanupTimeout(): void {\r\n        if (this._timeoutHandle) {\r\n            clearTimeout(this._timeoutHandle);\r\n        }\r\n    }\r\n\r\n    private _createInvocation(methodName: string, args: any[], nonblocking: boolean, streamIds: string[]): InvocationMessage {\r\n        if (nonblocking) {\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    arguments: args,\r\n                    streamIds,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            } else {\r\n                return {\r\n                    arguments: args,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        } else {\r\n            const invocationId = this._invocationId;\r\n            this._invocationId++;\r\n\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    streamIds,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            } else {\r\n                return {\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    private _launchStreams(streams: IStreamResult<any>[], promiseQueue: Promise<void>): void {\r\n        if (streams.length === 0) {\r\n            return;\r\n        }\r\n\r\n        // Synchronize stream data so they arrive in-order on the server\r\n        if (!promiseQueue) {\r\n            promiseQueue = Promise.resolve();\r\n        }\r\n\r\n        // We want to iterate over the keys, since the keys are the stream ids\r\n        // eslint-disable-next-line guard-for-in\r\n        for (const streamId in streams) {\r\n            streams[streamId].subscribe({\r\n                complete: () => {\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createCompletionMessage(streamId)));\r\n                },\r\n                error: (err) => {\r\n                    let message: string;\r\n                    if (err instanceof Error) {\r\n                        message = err.message;\r\n                    } else if (err && err.toString) {\r\n                        message = err.toString();\r\n                    } else {\r\n                        message = \"Unknown error\";\r\n                    }\r\n\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createCompletionMessage(streamId, message)));\r\n                },\r\n                next: (item) => {\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createStreamItemMessage(streamId, item)));\r\n                },\r\n            });\r\n        }\r\n    }\r\n\r\n    private _replaceStreamingParams(args: any[]): [IStreamResult<any>[], string[]] {\r\n        const streams: IStreamResult<any>[] = [];\r\n        const streamIds: string[] = [];\r\n        for (let i = 0; i < args.length; i++) {\r\n            const argument = args[i];\r\n            if (this._isObservable(argument)) {\r\n                const streamId = this._invocationId;\r\n                this._invocationId++;\r\n                // Store the stream for later use\r\n                streams[streamId] = argument;\r\n                streamIds.push(streamId.toString());\r\n\r\n                // remove stream from args\r\n                args.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        return [streams, streamIds];\r\n    }\r\n\r\n    private _isObservable(arg: any): arg is IStreamResult<any> {\r\n        // This allows other stream implementations to just work (like rxjs)\r\n        return arg && arg.subscribe && typeof arg.subscribe === \"function\";\r\n    }\r\n\r\n    private _createStreamInvocation(methodName: string, args: any[], streamIds: string[]): StreamInvocationMessage {\r\n        const invocationId = this._invocationId;\r\n        this._invocationId++;\r\n\r\n        if (streamIds.length !== 0) {\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                streamIds,\r\n                target: methodName,\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        } else {\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                target: methodName,\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        }\r\n    }\r\n\r\n    private _createCancelInvocation(id: string): CancelInvocationMessage {\r\n        return {\r\n            invocationId: id,\r\n            type: MessageType.CancelInvocation,\r\n        };\r\n    }\r\n\r\n    private _createStreamItemMessage(id: string, item: any): StreamItemMessage {\r\n        return {\r\n            invocationId: id,\r\n            item,\r\n            type: MessageType.StreamItem,\r\n        };\r\n    }\r\n\r\n    private _createCompletionMessage(id: string, error?: any, result?: any): CompletionMessage {\r\n        if (error) {\r\n            return {\r\n                error,\r\n                invocationId: id,\r\n                type: MessageType.Completion,\r\n            };\r\n        }\r\n\r\n        return {\r\n            invocationId: id,\r\n            result,\r\n            type: MessageType.Completion,\r\n        };\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { CompletionMessage, HubMessage, IHubProtocol, InvocationMessage, MessageType, StreamItemMessage } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\n\r\nconst JSON_HUB_PROTOCOL_NAME: string = \"json\";\r\n\r\n/** Implements the JSON Hub Protocol. */\r\nexport class JsonHubProtocol implements IHubProtocol {\r\n\r\n    /** @inheritDoc */\r\n    public readonly name: string = JSON_HUB_PROTOCOL_NAME;\r\n    /** @inheritDoc */\r\n    public readonly version: number = 1;\r\n\r\n    /** @inheritDoc */\r\n    public readonly transferFormat: TransferFormat = TransferFormat.Text;\r\n\r\n    /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * @param {string} input A string containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    public parseMessages(input: string, logger: ILogger): HubMessage[] {\r\n        // The interface does allow \"ArrayBuffer\" to be passed in, but this implementation does not. So let's throw a useful error.\r\n        if (typeof input !== \"string\") {\r\n            throw new Error(\"Invalid input for JSON hub protocol. Expected a string.\");\r\n        }\r\n\r\n        if (!input) {\r\n            return [];\r\n        }\r\n\r\n        if (logger === null) {\r\n            logger = NullLogger.instance;\r\n        }\r\n\r\n        // Parse the messages\r\n        const messages = TextMessageFormat.parse(input);\r\n\r\n        const hubMessages = [];\r\n        for (const message of messages) {\r\n            const parsedMessage = JSON.parse(message) as HubMessage;\r\n            if (typeof parsedMessage.type !== \"number\") {\r\n                throw new Error(\"Invalid payload.\");\r\n            }\r\n            switch (parsedMessage.type) {\r\n                case MessageType.Invocation:\r\n                    this._isInvocationMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.StreamItem:\r\n                    this._isStreamItemMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Completion:\r\n                    this._isCompletionMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Ping:\r\n                    // Single value, no need to validate\r\n                    break;\r\n                case MessageType.Close:\r\n                    // All optional values, no need to validate\r\n                    break;\r\n                default:\r\n                    // Future protocol changes can add message types, old clients can ignore them\r\n                    logger.log(LogLevel.Information, \"Unknown message type '\" + parsedMessage.type + \"' ignored.\");\r\n                    continue;\r\n            }\r\n            hubMessages.push(parsedMessage);\r\n        }\r\n\r\n        return hubMessages;\r\n    }\r\n\r\n    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string and returns it.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string} A string containing the serialized representation of the message.\r\n     */\r\n    public writeMessage(message: HubMessage): string {\r\n        return TextMessageFormat.write(JSON.stringify(message));\r\n    }\r\n\r\n    private _isInvocationMessage(message: InvocationMessage): void {\r\n        this._assertNotEmptyString(message.target, \"Invalid payload for Invocation message.\");\r\n\r\n        if (message.invocationId !== undefined) {\r\n            this._assertNotEmptyString(message.invocationId, \"Invalid payload for Invocation message.\");\r\n        }\r\n    }\r\n\r\n    private _isStreamItemMessage(message: StreamItemMessage): void {\r\n        this._assertNotEmptyString(message.invocationId, \"Invalid payload for StreamItem message.\");\r\n\r\n        if (message.item === undefined) {\r\n            throw new Error(\"Invalid payload for StreamItem message.\");\r\n        }\r\n    }\r\n\r\n    private _isCompletionMessage(message: CompletionMessage): void {\r\n        if (message.result && message.error) {\r\n            throw new Error(\"Invalid payload for Completion message.\");\r\n        }\r\n\r\n        if (!message.result && message.error) {\r\n            this._assertNotEmptyString(message.error, \"Invalid payload for Completion message.\");\r\n        }\r\n\r\n        this._assertNotEmptyString(message.invocationId, \"Invalid payload for Completion message.\");\r\n    }\r\n\r\n    private _assertNotEmptyString(value: any, errorMessage: string): void {\r\n        if (typeof value !== \"string\" || value === \"\") {\r\n            throw new Error(errorMessage);\r\n        }\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { DefaultReconnectPolicy } from \"./DefaultReconnectPolicy\";\r\nimport { HttpConnection } from \"./HttpConnection\";\r\nimport { HubConnection } from \"./HubConnection\";\r\nimport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\nimport { IHubProtocol } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { IRetryPolicy } from \"./IRetryPolicy\";\r\nimport { HttpTransportType } from \"./ITransport\";\r\nimport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { Arg, ConsoleLogger } from \"./Utils\";\r\n\r\nconst LogLevelNameMapping: {[k: string]: LogLevel} = {\r\n    trace: LogLevel.Trace,\r\n    debug: LogLevel.Debug,\r\n    info: LogLevel.Information,\r\n    information: LogLevel.Information,\r\n    warn: LogLevel.Warning,\r\n    warning: LogLevel.Warning,\r\n    error: LogLevel.Error,\r\n    critical: LogLevel.Critical,\r\n    none: LogLevel.None,\r\n};\r\n\r\nfunction parseLogLevel(name: string): LogLevel {\r\n    // Case-insensitive matching via lower-casing\r\n    // Yes, I know case-folding is a complicated problem in Unicode, but we only support\r\n    // the ASCII strings defined in LogLevelNameMapping anyway, so it's fine -anurse.\r\n    const mapping = LogLevelNameMapping[name.toLowerCase()];\r\n    if (typeof mapping !== \"undefined\") {\r\n        return mapping;\r\n    } else {\r\n        throw new Error(`Unknown log level: ${name}`);\r\n    }\r\n}\r\n\r\n/** A builder for configuring {@link @microsoft/signalr.HubConnection} instances. */\r\nexport class HubConnectionBuilder {\r\n    /** @internal */\r\n    public protocol?: IHubProtocol;\r\n    /** @internal */\r\n    public httpConnectionOptions?: IHttpConnectionOptions;\r\n    /** @internal */\r\n    public url?: string;\r\n    /** @internal */\r\n    public logger?: ILogger;\r\n\r\n    /** If defined, this indicates the client should automatically attempt to reconnect if the connection is lost. */\r\n    /** @internal */\r\n    public reconnectPolicy?: IRetryPolicy;\r\n\r\n    /** Configures console logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {LogLevel} logLevel The minimum level of messages to log. Anything at this level, or a more severe level, will be logged.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logLevel: LogLevel): HubConnectionBuilder;\r\n\r\n    /** Configures custom logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {ILogger} logger An object implementing the {@link @microsoft/signalr.ILogger} interface, which will be used to write all log messages.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logger: ILogger): HubConnectionBuilder;\r\n\r\n    /** Configures custom logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {string} logLevel A string representing a LogLevel setting a minimum level of messages to log.\r\n     *    See {@link https://docs.microsoft.com/aspnet/core/signalr/configuration#configure-logging|the documentation for client logging configuration} for more details.\r\n     */\r\n    public configureLogging(logLevel: string): HubConnectionBuilder;\r\n\r\n    /** Configures custom logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {LogLevel | string | ILogger} logging A {@link @microsoft/signalr.LogLevel}, a string representing a LogLevel, or an object implementing the {@link @microsoft/signalr.ILogger} interface.\r\n     *    See {@link https://docs.microsoft.com/aspnet/core/signalr/configuration#configure-logging|the documentation for client logging configuration} for more details.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logging: LogLevel | string | ILogger): HubConnectionBuilder;\r\n    public configureLogging(logging: LogLevel | string | ILogger): HubConnectionBuilder {\r\n        Arg.isRequired(logging, \"logging\");\r\n\r\n        if (isLogger(logging)) {\r\n            this.logger = logging;\r\n        } else if (typeof logging === \"string\") {\r\n            const logLevel = parseLogLevel(logging);\r\n            this.logger = new ConsoleLogger(logLevel);\r\n        } else {\r\n            this.logger = new ConsoleLogger(logging);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use HTTP-based transports to connect to the specified URL.\r\n     *\r\n     * The transport will be selected automatically based on what the server and client support.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified HTTP-based transport to connect to the specified URL.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @param {HttpTransportType} transportType The specific transport to use.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string, transportType: HttpTransportType): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use HTTP-based transports to connect to the specified URL.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @param {IHttpConnectionOptions} options An options object used to configure the connection.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string, options: IHttpConnectionOptions): HubConnectionBuilder;\r\n    public withUrl(url: string, transportTypeOrOptions?: IHttpConnectionOptions | HttpTransportType): HubConnectionBuilder {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isNotEmpty(url, \"url\");\r\n\r\n        this.url = url;\r\n\r\n        // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed\r\n        // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.\r\n        if (typeof transportTypeOrOptions === \"object\") {\r\n            this.httpConnectionOptions = { ...this.httpConnectionOptions, ...transportTypeOrOptions };\r\n        } else {\r\n            this.httpConnectionOptions = {\r\n                ...this.httpConnectionOptions,\r\n                transport: transportTypeOrOptions,\r\n            };\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified Hub Protocol.\r\n     *\r\n     * @param {IHubProtocol} protocol The {@link @microsoft/signalr.IHubProtocol} implementation to use.\r\n     */\r\n    public withHubProtocol(protocol: IHubProtocol): HubConnectionBuilder {\r\n        Arg.isRequired(protocol, \"protocol\");\r\n\r\n        this.protocol = protocol;\r\n        return this;\r\n    }\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to automatically attempt to reconnect if the connection is lost.\r\n     * By default, the client will wait 0, 2, 10 and 30 seconds respectively before trying up to 4 reconnect attempts.\r\n     */\r\n    public withAutomaticReconnect(): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to automatically attempt to reconnect if the connection is lost.\r\n     *\r\n     * @param {number[]} retryDelays An array containing the delays in milliseconds before trying each reconnect attempt.\r\n     * The length of the array represents how many failed reconnect attempts it takes before the client will stop attempting to reconnect.\r\n     */\r\n    public withAutomaticReconnect(retryDelays: number[]): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to automatically attempt to reconnect if the connection is lost.\r\n     *\r\n     * @param {IRetryPolicy} reconnectPolicy An {@link @microsoft/signalR.IRetryPolicy} that controls the timing and number of reconnect attempts.\r\n     */\r\n    public withAutomaticReconnect(reconnectPolicy: IRetryPolicy): HubConnectionBuilder;\r\n    public withAutomaticReconnect(retryDelaysOrReconnectPolicy?: number[] | IRetryPolicy): HubConnectionBuilder {\r\n        if (this.reconnectPolicy) {\r\n            throw new Error(\"A reconnectPolicy has already been set.\");\r\n        }\r\n\r\n        if (!retryDelaysOrReconnectPolicy) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy();\r\n        } else if (Array.isArray(retryDelaysOrReconnectPolicy)) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy(retryDelaysOrReconnectPolicy);\r\n        } else {\r\n            this.reconnectPolicy = retryDelaysOrReconnectPolicy;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Creates a {@link @microsoft/signalr.HubConnection} from the configuration options specified in this builder.\r\n     *\r\n     * @returns {HubConnection} The configured {@link @microsoft/signalr.HubConnection}.\r\n     */\r\n    public build(): HubConnection {\r\n        // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one\r\n        // provided to configureLogger\r\n        const httpConnectionOptions = this.httpConnectionOptions || {};\r\n\r\n        // If it's 'null', the user **explicitly** asked for null, don't mess with it.\r\n        if (httpConnectionOptions.logger === undefined) {\r\n            // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.\r\n            httpConnectionOptions.logger = this.logger;\r\n        }\r\n\r\n        // Now create the connection\r\n        if (!this.url) {\r\n            throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");\r\n        }\r\n        const connection = new HttpConnection(this.url, httpConnectionOptions);\r\n\r\n        return HubConnection.create(\r\n            connection,\r\n            this.logger || NullLogger.instance,\r\n            this.protocol || new JsonHubProtocol(),\r\n            this.reconnectPolicy);\r\n    }\r\n}\r\n\r\nfunction isLogger(logger: any): logger is ILogger {\r\n    return logger.log !== undefined;\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { ILogger } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\n\r\n/** Defines the type of a Hub Message. */\r\nexport enum MessageType {\r\n    /** Indicates the message is an Invocation message and implements the {@link @microsoft/signalr.InvocationMessage} interface. */\r\n    Invocation = 1,\r\n    /** Indicates the message is a StreamItem message and implements the {@link @microsoft/signalr.StreamItemMessage} interface. */\r\n    StreamItem = 2,\r\n    /** Indicates the message is a Completion message and implements the {@link @microsoft/signalr.CompletionMessage} interface. */\r\n    Completion = 3,\r\n    /** Indicates the message is a Stream Invocation message and implements the {@link @microsoft/signalr.StreamInvocationMessage} interface. */\r\n    StreamInvocation = 4,\r\n    /** Indicates the message is a Cancel Invocation message and implements the {@link @microsoft/signalr.CancelInvocationMessage} interface. */\r\n    CancelInvocation = 5,\r\n    /** Indicates the message is a Ping message and implements the {@link @microsoft/signalr.PingMessage} interface. */\r\n    Ping = 6,\r\n    /** Indicates the message is a Close message and implements the {@link @microsoft/signalr.CloseMessage} interface. */\r\n    Close = 7,\r\n}\r\n\r\n/** Defines a dictionary of string keys and string values representing headers attached to a Hub message. */\r\nexport interface MessageHeaders {\r\n    /** Gets or sets the header with the specified key. */\r\n    [key: string]: string;\r\n}\r\n\r\n/** Union type of all known Hub messages. */\r\nexport type HubMessage =\r\n    InvocationMessage |\r\n    StreamInvocationMessage |\r\n    StreamItemMessage |\r\n    CompletionMessage |\r\n    CancelInvocationMessage |\r\n    PingMessage |\r\n    CloseMessage;\r\n\r\n/** Defines properties common to all Hub messages. */\r\nexport interface HubMessageBase {\r\n    /** A {@link @microsoft/signalr.MessageType} value indicating the type of this message. */\r\n    readonly type: MessageType;\r\n}\r\n\r\n/** Defines properties common to all Hub messages relating to a specific invocation. */\r\nexport interface HubInvocationMessage extends HubMessageBase {\r\n    /** A {@link @microsoft/signalr.MessageHeaders} dictionary containing headers attached to the message. */\r\n    readonly headers?: MessageHeaders;\r\n    /** The ID of the invocation relating to this message.\r\n     *\r\n     * This is expected to be present for {@link @microsoft/signalr.StreamInvocationMessage} and {@link @microsoft/signalr.CompletionMessage}. It may\r\n     * be 'undefined' for an {@link @microsoft/signalr.InvocationMessage} if the sender does not expect a response.\r\n     */\r\n    readonly invocationId?: string;\r\n}\r\n\r\n/** A hub message representing a non-streaming invocation. */\r\nexport interface InvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Invocation;\r\n    /** The target method name. */\r\n    readonly target: string;\r\n    /** The target method arguments. */\r\n    readonly arguments: any[];\r\n    /** The target methods stream IDs. */\r\n    readonly streamIds?: string[];\r\n}\r\n\r\n/** A hub message representing a streaming invocation. */\r\nexport interface StreamInvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.StreamInvocation;\r\n\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n    /** The target method name. */\r\n    readonly target: string;\r\n    /** The target method arguments. */\r\n    readonly arguments: any[];\r\n    /** The target methods stream IDs. */\r\n    readonly streamIds?: string[];\r\n}\r\n\r\n/** A hub message representing a single item produced as part of a result stream. */\r\nexport interface StreamItemMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.StreamItem;\r\n\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n\r\n    /** The item produced by the server. */\r\n    readonly item?: any;\r\n}\r\n\r\n/** A hub message representing the result of an invocation. */\r\nexport interface CompletionMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Completion;\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n    /** The error produced by the invocation, if any.\r\n     *\r\n     * Either {@link @microsoft/signalr.CompletionMessage.error} or {@link @microsoft/signalr.CompletionMessage.result} must be defined, but not both.\r\n     */\r\n    readonly error?: string;\r\n    /** The result produced by the invocation, if any.\r\n     *\r\n     * Either {@link @microsoft/signalr.CompletionMessage.error} or {@link @microsoft/signalr.CompletionMessage.result} must be defined, but not both.\r\n     */\r\n    readonly result?: any;\r\n}\r\n\r\n/** A hub message indicating that the sender is still active. */\r\nexport interface PingMessage extends HubMessageBase {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Ping;\r\n}\r\n\r\n/** A hub message indicating that the sender is closing the connection.\r\n *\r\n * If {@link @microsoft/signalr.CloseMessage.error} is defined, the sender is closing the connection due to an error.\r\n */\r\nexport interface CloseMessage extends HubMessageBase {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Close;\r\n    /** The error that triggered the close, if any.\r\n     *\r\n     * If this property is undefined, the connection was closed normally and without error.\r\n     */\r\n    readonly error?: string;\r\n\r\n    /** If true, clients with automatic reconnects enabled should attempt to reconnect after receiving the CloseMessage. Otherwise, they should not. */\r\n    readonly allowReconnect?: boolean;\r\n}\r\n\r\n/** A hub message sent to request that a streaming invocation be canceled. */\r\nexport interface CancelInvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.CancelInvocation;\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n}\r\n\r\n/** A protocol abstraction for communicating with SignalR Hubs.  */\r\nexport interface IHubProtocol {\r\n    /** The name of the protocol. This is used by SignalR to resolve the protocol between the client and server. */\r\n    readonly name: string;\r\n    /** The version of the protocol. */\r\n    readonly version: number;\r\n    /** The {@link @microsoft/signalr.TransferFormat} of the protocol. */\r\n    readonly transferFormat: TransferFormat;\r\n\r\n    /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * If {@link @microsoft/signalr.IHubProtocol.transferFormat} is 'Text', the `input` parameter must be a string, otherwise it must be an ArrayBuffer.\r\n     *\r\n     * @param {string | ArrayBuffer} input A string or ArrayBuffer containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    parseMessages(input: string | ArrayBuffer, logger: ILogger): HubMessage[];\r\n\r\n    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string or ArrayBuffer and returns it.\r\n     *\r\n     * If {@link @microsoft/signalr.IHubProtocol.transferFormat} is 'Text', the result of this method will be a string, otherwise it will be an ArrayBuffer.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string | ArrayBuffer} A string or ArrayBuffer containing the serialized representation of the message.\r\n     */\r\n    writeMessage(message: HubMessage): string | ArrayBuffer;\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\r\n/** Indicates the severity of a log message.\r\n *\r\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\r\n */\r\nexport enum LogLevel {\r\n    /** Log level for very low severity diagnostic messages. */\r\n    Trace = 0,\r\n    /** Log level for low severity diagnostic messages. */\r\n    Debug = 1,\r\n    /** Log level for informational diagnostic messages. */\r\n    Information = 2,\r\n    /** Log level for diagnostic messages that indicate a non-fatal problem. */\r\n    Warning = 3,\r\n    /** Log level for diagnostic messages that indicate a failure in the current operation. */\r\n    Error = 4,\r\n    /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\r\n    Critical = 5,\r\n    /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\r\n    None = 6,\r\n}\r\n\r\n/** An abstraction that provides a sink for diagnostic messages. */\r\nexport interface ILogger {\r\n    /** Called by the framework to emit a diagnostic message.\r\n     *\r\n     * @param {LogLevel} logLevel The severity level of the message.\r\n     * @param {string} message The message.\r\n     */\r\n    log(logLevel: LogLevel, message: string): void;\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\n// This will be treated as a bit flag in the future, so we keep it using power-of-two values.\r\n/** Specifies a specific HTTP transport type. */\r\nexport enum HttpTransportType {\r\n    /** Specifies no transport preference. */\r\n    None = 0,\r\n    /** Specifies the WebSockets transport. */\r\n    WebSockets = 1,\r\n    /** Specifies the Server-Sent Events transport. */\r\n    ServerSentEvents = 2,\r\n    /** Specifies the Long Polling transport. */\r\n    LongPolling = 4,\r\n}\r\n\r\n/** Specifies the transfer format for a connection. */\r\nexport enum TransferFormat {\r\n    /** Specifies that only text data will be transmitted over the connection. */\r\n    Text = 1,\r\n    /** Specifies that binary data will be transmitted over the connection. */\r\n    Binary = 2,\r\n}\r\n\r\n/** An abstraction over the behavior of transports. This is designed to support the framework and not intended for use by applications. */\r\nexport interface ITransport {\r\n    connect(url: string, transferFormat: TransferFormat): Promise<void>;\r\n    send(data: any): Promise<void>;\r\n    stop(): Promise<void>;\r\n    onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    onclose: ((error?: Error) => void) | null;\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\n\r\n/** A logger that does nothing when log messages are sent to it. */\r\nexport class NullLogger implements ILogger {\r\n    /** The singleton instance of the {@link @microsoft/signalr.NullLogger}. */\r\n    public static instance: ILogger = new NullLogger();\r\n\r\n    private constructor() {}\r\n\r\n    /** @inheritDoc */\r\n    // eslint-disable-next-line\r\n    public log(_logLevel: LogLevel, _message: string): void {\r\n    }\r\n}\r\n","var Module=typeof self!==\"undefined\"&&typeof self.Module!==\"undefined\"?self.Module:{};var jsModule=Module;var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;var nodeFS;var nodePath;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=function shell_read(filename,binary){if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);return nodeFS[\"readFileSync\"](filename,binary?null:\"utf8\")};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);if(typeof module!==\"undefined\"){module[\"exports\"]=Module}process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",abort);quit_=function(status){process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){read_=function shell_read(f){return read(f)}}readBinary=function readBinary(f){var data;if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){arguments_=scriptArgs}else if(typeof arguments!=\"undefined\"){arguments_=arguments}if(typeof quit===\"function\"){quit_=function(status){quit(status)}}if(typeof print!==\"undefined\"){if(typeof console===\"undefined\")console={};console.log=print;console.warn=console.error=typeof printErr!==\"undefined\"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=function(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=function(title){document.title=title}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}var ALLOC_NORMAL=0;var ALLOC_STACK=1;function allocate(slab,allocator){var ret;if(allocator==ALLOC_STACK){ret=stackAlloc(slab.length)}else{ret=_malloc(slab.length)}if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what+=\"\";err(what);ABORT=true;EXITSTATUS=1;what=\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile=\"argon2.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"c\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"k\"];addOnInit(Module[\"asm\"][\"d\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){var result=WebAssembly.instantiate(binary,info);return result}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync();return{}}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){wasmTable.get(func)()}else{wasmTable.get(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=2147418112;if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var asmLibraryArg={\"a\":_emscripten_memcpy_big,\"b\":_emscripten_resize_heap};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"d\"]).apply(null,arguments)};var _argon2_hash=Module[\"_argon2_hash\"]=function(){return(_argon2_hash=Module[\"_argon2_hash\"]=Module[\"asm\"][\"e\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"f\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"g\"]).apply(null,arguments)};var _argon2_verify=Module[\"_argon2_verify\"]=function(){return(_argon2_verify=Module[\"_argon2_verify\"]=Module[\"asm\"][\"h\"]).apply(null,arguments)};var _argon2_error_message=Module[\"_argon2_error_message\"]=function(){return(_argon2_error_message=Module[\"_argon2_error_message\"]=Module[\"asm\"][\"i\"]).apply(null,arguments)};var _argon2_encodedlen=Module[\"_argon2_encodedlen\"]=function(){return(_argon2_encodedlen=Module[\"_argon2_encodedlen\"]=Module[\"asm\"][\"j\"]).apply(null,arguments)};var _argon2_hash_ext=Module[\"_argon2_hash_ext\"]=function(){return(_argon2_hash_ext=Module[\"_argon2_hash_ext\"]=Module[\"asm\"][\"l\"]).apply(null,arguments)};var _argon2_verify_ext=Module[\"_argon2_verify_ext\"]=function(){return(_argon2_verify_ext=Module[\"_argon2_verify_ext\"]=Module[\"asm\"][\"m\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"n\"]).apply(null,arguments)};Module[\"allocate\"]=allocate;Module[\"UTF8ToString\"]=UTF8ToString;Module[\"ALLOC_NORMAL\"]=ALLOC_NORMAL;var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();if(typeof module!==\"undefined\")module.exports=Module;Module.unloadRuntime=function(){if(typeof self!==\"undefined\"){delete self.Module}Module=jsModule=wasmMemory=wasmTable=asm=buffer=HEAP8=HEAPU8=HEAP16=HEAPU16=HEAP32=HEAPU32=HEAPF32=HEAPF64=undefined;if(typeof module!==\"undefined\"){delete module.exports}};\n","(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define([], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        root.argon2 = factory();\n    }\n})(typeof self !== 'undefined' ? self : this, function () {\n    const global = typeof self !== 'undefined' ? self : this;\n\n    /**\n     * @enum\n     */\n    const ArgonType = {\n        Argon2d: 0,\n        Argon2i: 1,\n        Argon2id: 2,\n    };\n\n    function loadModule(mem) {\n        if (loadModule._promise) {\n            return loadModule._promise;\n        }\n        if (loadModule._module) {\n            return Promise.resolve(loadModule._module);\n        }\n        let promise;\n        if (\n            global.process &&\n            global.process.versions &&\n            global.process.versions.node\n        ) {\n            promise = loadWasmModule().then(\n                (Module) =>\n                    new Promise((resolve) => {\n                        Module.postRun = () => resolve(Module);\n                    })\n            );\n        } else {\n            promise = loadWasmBinary().then((wasmBinary) => {\n                const wasmMemory = mem ? createWasmMemory(mem) : undefined;\n                return initWasm(wasmBinary, wasmMemory);\n            });\n        }\n        loadModule._promise = promise;\n        return promise.then((Module) => {\n            loadModule._module = Module;\n            delete loadModule._promise;\n            return Module;\n        });\n    }\n\n    function initWasm(wasmBinary, wasmMemory) {\n        return new Promise((resolve) => {\n            global.Module = {\n                wasmBinary,\n                wasmMemory,\n                postRun() {\n                    resolve(Module);\n                },\n            };\n            return loadWasmModule();\n        });\n    }\n\n    function loadWasmModule() {\n        if (global.loadArgon2WasmModule) {\n            return global.loadArgon2WasmModule();\n        }\n        if (typeof require === 'function') {\n            return Promise.resolve(require('../dist/argon2.js'));\n        }\n        return import('../dist/argon2.js');\n    }\n\n    function loadWasmBinary() {\n        if (global.loadArgon2WasmBinary) {\n            return global.loadArgon2WasmBinary();\n        }\n        if (typeof require === 'function') {\n            return Promise.resolve(require('../dist/argon2.wasm')).then(\n                (wasmModule) => {\n                    return decodeWasmBinary(wasmModule);\n                }\n            );\n        }\n        const wasmPath =\n            global.argon2WasmPath ||\n            'node_modules/argon2-browser/dist/argon2.wasm';\n        return fetch(wasmPath)\n            .then((response) => response.arrayBuffer())\n            .then((ab) => new Uint8Array(ab));\n    }\n\n    function decodeWasmBinary(base64) {\n        const text = atob(base64);\n        const binary = new Uint8Array(new ArrayBuffer(text.length));\n        for (let i = 0; i < text.length; i++) {\n            binary[i] = text.charCodeAt(i);\n        }\n        return binary;\n    }\n\n    function createWasmMemory(mem) {\n        const KB = 1024;\n        const MB = 1024 * KB;\n        const GB = 1024 * MB;\n        const WASM_PAGE_SIZE = 64 * KB;\n\n        const totalMemory = (2 * GB - 64 * KB) / WASM_PAGE_SIZE;\n        const initialMemory = Math.min(\n            Math.max(Math.ceil((mem * KB) / WASM_PAGE_SIZE), 256) + 256,\n            totalMemory\n        );\n\n        return new WebAssembly.Memory({\n            initial: initialMemory,\n            maximum: totalMemory,\n        });\n    }\n\n    function allocateArray(Module, arr) {\n        return Module.allocate(arr, 'i8', Module.ALLOC_NORMAL);\n    }\n\n    function allocateArrayStr(Module, arr) {\n        const nullTerminatedArray = new Uint8Array([...arr, 0]);\n        return allocateArray(Module, nullTerminatedArray);\n    }\n\n    function encodeUtf8(str) {\n        if (typeof str !== 'string') {\n            return str;\n        }\n        if (typeof TextEncoder === 'function') {\n            return new TextEncoder().encode(str);\n        } else if (typeof Buffer === 'function') {\n            return Buffer.from(str);\n        } else {\n            throw new Error(\"Don't know how to encode UTF8\");\n        }\n    }\n\n    /**\n     * Argon2 hash\n     * @param {string|Uint8Array} params.pass - password string\n     * @param {string|Uint8Array} params.salt - salt string\n     * @param {number} [params.time=1] - the number of iterations\n     * @param {number} [params.mem=1024] - used memory, in KiB\n     * @param {number} [params.hashLen=24] - desired hash length\n     * @param {number} [params.parallelism=1] - desired parallelism\n     * @param {number} [params.type=argon2.ArgonType.Argon2d] - hash type:\n     *      argon2.ArgonType.Argon2d\n     *      argon2.ArgonType.Argon2i\n     *      argon2.ArgonType.Argon2id\n     *\n     * @return Promise\n     *\n     * @example\n     *  argon2.hash({ pass: 'password', salt: 'somesalt' })\n     *      .then(h => console.log(h.hash, h.hashHex, h.encoded))\n     *      .catch(e => console.error(e.message, e.code))\n     */\n    function argon2Hash(params) {\n        const mCost = params.mem || 1024;\n        return loadModule(mCost).then((Module) => {\n            const tCost = params.time || 1;\n            const parallelism = params.parallelism || 1;\n            const pwdEncoded = encodeUtf8(params.pass);\n            const pwd = allocateArrayStr(Module, pwdEncoded);\n            const pwdlen = pwdEncoded.length;\n            const saltEncoded = encodeUtf8(params.salt);\n            const salt = allocateArrayStr(Module, saltEncoded);\n            const saltlen = saltEncoded.length;\n            const argon2Type = params.type || ArgonType.Argon2d;\n            const hash = Module.allocate(\n                new Array(params.hashLen || 24),\n                'i8',\n                Module.ALLOC_NORMAL\n            );\n            const secret = params.secret\n                ? allocateArray(Module, params.secret)\n                : 0;\n            const secretlen = params.secret ? params.secret.byteLength : 0;\n            const ad = params.ad ? allocateArray(Module, params.ad) : 0;\n            const adlen = params.ad ? params.ad.byteLength : 0;\n            const hashlen = params.hashLen || 24;\n            const encodedlen = Module._argon2_encodedlen(\n                tCost,\n                mCost,\n                parallelism,\n                saltlen,\n                hashlen,\n                argon2Type\n            );\n            const encoded = Module.allocate(\n                new Array(encodedlen + 1),\n                'i8',\n                Module.ALLOC_NORMAL\n            );\n            const version = 0x13;\n            let err;\n            let res;\n            try {\n                res = Module._argon2_hash_ext(\n                    tCost,\n                    mCost,\n                    parallelism,\n                    pwd,\n                    pwdlen,\n                    salt,\n                    saltlen,\n                    hash,\n                    hashlen,\n                    encoded,\n                    encodedlen,\n                    argon2Type,\n                    secret,\n                    secretlen,\n                    ad,\n                    adlen,\n                    version\n                );\n            } catch (e) {\n                err = e;\n            }\n            let result;\n            if (res === 0 && !err) {\n                let hashStr = '';\n                const hashArr = new Uint8Array(hashlen);\n                for (let i = 0; i < hashlen; i++) {\n                    const byte = Module.HEAP8[hash + i];\n                    hashArr[i] = byte;\n                    hashStr += ('0' + (0xff & byte).toString(16)).slice(-2);\n                }\n                const encodedStr = Module.UTF8ToString(encoded);\n                result = {\n                    hash: hashArr,\n                    hashHex: hashStr,\n                    encoded: encodedStr,\n                };\n            } else {\n                try {\n                    if (!err) {\n                        err = Module.UTF8ToString(\n                            Module._argon2_error_message(res)\n                        );\n                    }\n                } catch (e) {}\n                result = { message: err, code: res };\n            }\n            try {\n                Module._free(pwd);\n                Module._free(salt);\n                Module._free(hash);\n                Module._free(encoded);\n                if (ad) {\n                    Module._free(ad);\n                }\n                if (secret) {\n                    Module._free(secret);\n                }\n            } catch (e) {}\n            if (err) {\n                throw result;\n            } else {\n                return result;\n            }\n        });\n    }\n\n    /**\n     * Argon2 verify function\n     * @param {string} params.pass - password string\n     * @param {string|Uint8Array} params.encoded - encoded hash\n     * @param {number} [params.type=argon2.ArgonType.Argon2d] - hash type:\n     *      argon2.ArgonType.Argon2d\n     *      argon2.ArgonType.Argon2i\n     *      argon2.ArgonType.Argon2id\n     *\n     * @returns Promise\n     *\n     * @example\n     *  argon2.verify({ pass: 'password', encoded: 'encoded-hash' })\n     *      .then(() => console.log('OK'))\n     *      .catch(e => console.error(e.message, e.code))\n     */\n    function argon2Verify(params) {\n        return loadModule().then((Module) => {\n            const pwdEncoded = encodeUtf8(params.pass);\n            const pwd = allocateArrayStr(Module, pwdEncoded);\n            const pwdlen = pwdEncoded.length;\n            const secret = params.secret\n                ? allocateArray(Module, params.secret)\n                : 0;\n            const secretlen = params.secret ? params.secret.byteLength : 0;\n            const ad = params.ad ? allocateArray(Module, params.ad) : 0;\n            const adlen = params.ad ? params.ad.byteLength : 0;\n            const encEncoded = encodeUtf8(params.encoded);\n            const enc = allocateArrayStr(Module, encEncoded);\n            let argon2Type = params.type;\n            if (argon2Type === undefined) {\n                let typeStr = params.encoded.split('$')[1];\n                if (typeStr) {\n                    typeStr = typeStr.replace('a', 'A');\n                    argon2Type = ArgonType[typeStr] || ArgonType.Argon2d;\n                }\n            }\n            let err;\n            let res;\n            try {\n                res = Module._argon2_verify_ext(\n                    enc,\n                    pwd,\n                    pwdlen,\n                    secret,\n                    secretlen,\n                    ad,\n                    adlen,\n                    argon2Type\n                );\n            } catch (e) {\n                err = e;\n            }\n            let result;\n            if (res || err) {\n                try {\n                    if (!err) {\n                        err = Module.UTF8ToString(\n                            Module._argon2_error_message(res)\n                        );\n                    }\n                } catch (e) {}\n                result = { message: err, code: res };\n            }\n            try {\n                Module._free(pwd);\n                Module._free(enc);\n            } catch (e) {}\n            if (err) {\n                throw result;\n            } else {\n                return result;\n            }\n        });\n    }\n\n    function unloadRuntime() {\n        if (loadModule._module) {\n            loadModule._module.unloadRuntime();\n            delete loadModule._promise;\n            delete loadModule._module;\n        }\n    }\n\n    return {\n        ArgonType,\n        hash: argon2Hash,\n        verify: argon2Verify,\n        unloadRuntime,\n    };\n});\n","var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        DEFAULT_ALPHABET = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\n    var supportsNativeBigInt = typeof BigInt === \"function\";\r\n\r\n    function Integer(v, radix, alphabet, caseSensitive) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function NativeBigInt(value) {\r\n        this.value = value;\r\n    }\r\n    NativeBigInt.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    NativeBigInt.prototype.add = function (v) {\r\n        return new NativeBigInt(this.value + parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.plus = NativeBigInt.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    NativeBigInt.prototype.subtract = function (v) {\r\n        return new NativeBigInt(this.value - parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n    NativeBigInt.prototype.negate = function () {\r\n        return new NativeBigInt(-this.value);\r\n    }\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n    NativeBigInt.prototype.abs = function () {\r\n        return new NativeBigInt(this.value >= 0 ? this.value : -this.value);\r\n    }\r\n\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    NativeBigInt.prototype.multiply = function (v) {\r\n        return new NativeBigInt(this.value * parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    NativeBigInt.prototype.square = function (v) {\r\n        return new NativeBigInt(this.value * this.value);\r\n    }\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        if (supportsNativeBigInt) {\r\n            return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];\r\n        }\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {\r\n        return new NativeBigInt(this.value / parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {\r\n        return new NativeBigInt(this.value % parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    NativeBigInt.prototype.pow = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value, b = n.value;\r\n        var _0 = BigInt(0), _1 = BigInt(1), _2 = BigInt(2);\r\n        if (b === _0) return Integer[1];\r\n        if (a === _0) return Integer[0];\r\n        if (a === _1) return Integer[1];\r\n        if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.isNegative()) return new NativeBigInt(_0);\r\n        var x = this;\r\n        var y = Integer[1];\r\n        while (true) {\r\n            if ((b & _1) === _1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === _0) break;\r\n            b /= _2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    }\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        if (exp.isNegative()) {\r\n            exp = exp.multiply(Integer[-1]);\r\n            base = base.modInv(mod);\r\n        }\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n    NativeBigInt.prototype.compareAbs = function (v) {\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        a = a >= 0 ? a : -a;\r\n        b = b >= 0 ? b : -b;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    NativeBigInt.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n    NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n    NativeBigInt.prototype.isEven = function () {\r\n        return (this.value & BigInt(1)) === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n    NativeBigInt.prototype.isOdd = function () {\r\n        return (this.value & BigInt(1)) === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n    NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n    NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n    NativeBigInt.prototype.isUnit = function () {\r\n        return this.abs().value === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    NativeBigInt.prototype.isZero = function () {\r\n        return this.value === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        if (n.isZero()) return false;\r\n        if (n.isUnit()) return true;\r\n        if (n.compareAbs(2) === 0) return this.isEven();\r\n        return this.mod(n).isZero();\r\n    };\r\n    NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n\r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next: for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.isUnit() || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;\r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if (bits <= 64)\r\n            return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);\r\n        var logN = Math.log(2) * bits.toJSNumber();\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations, rng) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2), rng));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.isZero()) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.isUnit()) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n    NativeBigInt.prototype.next = function () {\r\n        return new NativeBigInt(this.value + BigInt(1));\r\n    }\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n    NativeBigInt.prototype.prev = function () {\r\n        return new NativeBigInt(this.value - BigInt(1));\r\n    }\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return Math.abs(n) <= BASE;\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (v) {\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    NativeBigInt.prototype.shiftLeft = SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (v) {\r\n        var remQuo;\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    NativeBigInt.prototype.shiftRight = SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value,\r\n            x = typeof v === \"number\" ? v | LOBMASK_I :\r\n                typeof v === \"bigint\" ? v | BigInt(LOBMASK_I) :\r\n                    v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b, rng) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var usedRNG = rng || Math.random;\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(usedRNG() * range));\r\n        var digits = toBase(range, BASE).value;\r\n        var result = [], restricted = true;\r\n        for (var i = 0; i < digits.length; i++) {\r\n            var top = restricted ? digits[i] + (i + 1 < digits.length ? digits[i + 1] / BASE : 0) : BASE;\r\n            var digit = truncate(usedRNG() * top);\r\n            result.push(digit);\r\n            if (digit < digits[i]) restricted = false;\r\n        }\r\n        return low.add(Integer.fromArray(result, BASE, false));\r\n    }\r\n\r\n    var parseBase = function (text, base, alphabet, caseSensitive) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        text = String(text);\r\n        if (!caseSensitive) {\r\n            text = text.toLowerCase();\r\n            alphabet = alphabet.toLowerCase();\r\n        }\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        var alphabetValues = {};\r\n        for (i = 0; i < alphabet.length; i++) {\r\n            alphabetValues[alphabet[i]] = i;\r\n        }\r\n        for (i = 0; i < length; i++) {\r\n            var c = text[i];\r\n            if (c === \"-\") continue;\r\n            if (c in alphabetValues) {\r\n                if (alphabetValues[c] >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i];\r\n            if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\" && i < text.length);\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit, alphabet) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        if (digit < alphabet.length) {\r\n            return alphabet[digit];\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber()))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(n.toJSNumber() - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.isUnit()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(n.toJSNumber()))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base, alphabet) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(function (x) {\r\n            return stringify(x, alphabet);\r\n        }).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    NativeBigInt.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix, alphabet);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix, alphabet);\r\n        return String(this.value);\r\n    };\r\n\r\n    NativeBigInt.prototype.toString = SmallInteger.prototype.toString;\r\n\r\n    NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n    NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {\r\n        return parseInt(this.toString(), 10);\r\n    }\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(sign ? \"-\" + v : v));\r\n        }\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(v));\r\n        }\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        if (typeof v === \"bigint\") {\r\n            return new NativeBigInt(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = parseValue(i);\r\n        if (i > 0) Integer[-i] = parseValue(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define( function () {\r\n        return bigInt;\r\n    });\r\n}\r\n","/**\n * lunr - http://lunrjs.com - A bit like Solr, but much smaller and not as bright - 2.3.9\n * Copyright (C) 2020 Oliver Nightingale\n * @license MIT\n */\n\n;(function(){\n\n/**\n * A convenience function for configuring and constructing\n * a new lunr Index.\n *\n * A lunr.Builder instance is created and the pipeline setup\n * with a trimmer, stop word filter and stemmer.\n *\n * This builder object is yielded to the configuration function\n * that is passed as a parameter, allowing the list of fields\n * and other builder parameters to be customised.\n *\n * All documents _must_ be added within the passed config function.\n *\n * @example\n * var idx = lunr(function () {\n *   this.field('title')\n *   this.field('body')\n *   this.ref('id')\n *\n *   documents.forEach(function (doc) {\n *     this.add(doc)\n *   }, this)\n * })\n *\n * @see {@link lunr.Builder}\n * @see {@link lunr.Pipeline}\n * @see {@link lunr.trimmer}\n * @see {@link lunr.stopWordFilter}\n * @see {@link lunr.stemmer}\n * @namespace {function} lunr\n */\nvar lunr = function (config) {\n  var builder = new lunr.Builder\n\n  builder.pipeline.add(\n    lunr.trimmer,\n    lunr.stopWordFilter,\n    lunr.stemmer\n  )\n\n  builder.searchPipeline.add(\n    lunr.stemmer\n  )\n\n  config.call(builder, builder)\n  return builder.build()\n}\n\nlunr.version = \"2.3.9\"\n/*!\n * lunr.utils\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A namespace containing utils for the rest of the lunr library\n * @namespace lunr.utils\n */\nlunr.utils = {}\n\n/**\n * Print a warning message to the console.\n *\n * @param {String} message The message to be printed.\n * @memberOf lunr.utils\n * @function\n */\nlunr.utils.warn = (function (global) {\n  /* eslint-disable no-console */\n  return function (message) {\n    if (global.console && console.warn) {\n      console.warn(message)\n    }\n  }\n  /* eslint-enable no-console */\n})(this)\n\n/**\n * Convert an object to a string.\n *\n * In the case of `null` and `undefined` the function returns\n * the empty string, in all other cases the result of calling\n * `toString` on the passed object is returned.\n *\n * @param {Any} obj The object to convert to a string.\n * @return {String} string representation of the passed object.\n * @memberOf lunr.utils\n */\nlunr.utils.asString = function (obj) {\n  if (obj === void 0 || obj === null) {\n    return \"\"\n  } else {\n    return obj.toString()\n  }\n}\n\n/**\n * Clones an object.\n *\n * Will create a copy of an existing object such that any mutations\n * on the copy cannot affect the original.\n *\n * Only shallow objects are supported, passing a nested object to this\n * function will cause a TypeError.\n *\n * Objects with primitives, and arrays of primitives are supported.\n *\n * @param {Object} obj The object to clone.\n * @return {Object} a clone of the passed object.\n * @throws {TypeError} when a nested object is passed.\n * @memberOf Utils\n */\nlunr.utils.clone = function (obj) {\n  if (obj === null || obj === undefined) {\n    return obj\n  }\n\n  var clone = Object.create(null),\n      keys = Object.keys(obj)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i],\n        val = obj[key]\n\n    if (Array.isArray(val)) {\n      clone[key] = val.slice()\n      continue\n    }\n\n    if (typeof val === 'string' ||\n        typeof val === 'number' ||\n        typeof val === 'boolean') {\n      clone[key] = val\n      continue\n    }\n\n    throw new TypeError(\"clone is not deep and does not support nested objects\")\n  }\n\n  return clone\n}\nlunr.FieldRef = function (docRef, fieldName, stringValue) {\n  this.docRef = docRef\n  this.fieldName = fieldName\n  this._stringValue = stringValue\n}\n\nlunr.FieldRef.joiner = \"/\"\n\nlunr.FieldRef.fromString = function (s) {\n  var n = s.indexOf(lunr.FieldRef.joiner)\n\n  if (n === -1) {\n    throw \"malformed field ref string\"\n  }\n\n  var fieldRef = s.slice(0, n),\n      docRef = s.slice(n + 1)\n\n  return new lunr.FieldRef (docRef, fieldRef, s)\n}\n\nlunr.FieldRef.prototype.toString = function () {\n  if (this._stringValue == undefined) {\n    this._stringValue = this.fieldName + lunr.FieldRef.joiner + this.docRef\n  }\n\n  return this._stringValue\n}\n/*!\n * lunr.Set\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A lunr set.\n *\n * @constructor\n */\nlunr.Set = function (elements) {\n  this.elements = Object.create(null)\n\n  if (elements) {\n    this.length = elements.length\n\n    for (var i = 0; i < this.length; i++) {\n      this.elements[elements[i]] = true\n    }\n  } else {\n    this.length = 0\n  }\n}\n\n/**\n * A complete set that contains all elements.\n *\n * @static\n * @readonly\n * @type {lunr.Set}\n */\nlunr.Set.complete = {\n  intersect: function (other) {\n    return other\n  },\n\n  union: function () {\n    return this\n  },\n\n  contains: function () {\n    return true\n  }\n}\n\n/**\n * An empty set that contains no elements.\n *\n * @static\n * @readonly\n * @type {lunr.Set}\n */\nlunr.Set.empty = {\n  intersect: function () {\n    return this\n  },\n\n  union: function (other) {\n    return other\n  },\n\n  contains: function () {\n    return false\n  }\n}\n\n/**\n * Returns true if this set contains the specified object.\n *\n * @param {object} object - Object whose presence in this set is to be tested.\n * @returns {boolean} - True if this set contains the specified object.\n */\nlunr.Set.prototype.contains = function (object) {\n  return !!this.elements[object]\n}\n\n/**\n * Returns a new set containing only the elements that are present in both\n * this set and the specified set.\n *\n * @param {lunr.Set} other - set to intersect with this set.\n * @returns {lunr.Set} a new set that is the intersection of this and the specified set.\n */\n\nlunr.Set.prototype.intersect = function (other) {\n  var a, b, elements, intersection = []\n\n  if (other === lunr.Set.complete) {\n    return this\n  }\n\n  if (other === lunr.Set.empty) {\n    return other\n  }\n\n  if (this.length < other.length) {\n    a = this\n    b = other\n  } else {\n    a = other\n    b = this\n  }\n\n  elements = Object.keys(a.elements)\n\n  for (var i = 0; i < elements.length; i++) {\n    var element = elements[i]\n    if (element in b.elements) {\n      intersection.push(element)\n    }\n  }\n\n  return new lunr.Set (intersection)\n}\n\n/**\n * Returns a new set combining the elements of this and the specified set.\n *\n * @param {lunr.Set} other - set to union with this set.\n * @return {lunr.Set} a new set that is the union of this and the specified set.\n */\n\nlunr.Set.prototype.union = function (other) {\n  if (other === lunr.Set.complete) {\n    return lunr.Set.complete\n  }\n\n  if (other === lunr.Set.empty) {\n    return this\n  }\n\n  return new lunr.Set(Object.keys(this.elements).concat(Object.keys(other.elements)))\n}\n/**\n * A function to calculate the inverse document frequency for\n * a posting. This is shared between the builder and the index\n *\n * @private\n * @param {object} posting - The posting for a given term\n * @param {number} documentCount - The total number of documents.\n */\nlunr.idf = function (posting, documentCount) {\n  var documentsWithTerm = 0\n\n  for (var fieldName in posting) {\n    if (fieldName == '_index') continue // Ignore the term index, its not a field\n    documentsWithTerm += Object.keys(posting[fieldName]).length\n  }\n\n  var x = (documentCount - documentsWithTerm + 0.5) / (documentsWithTerm + 0.5)\n\n  return Math.log(1 + Math.abs(x))\n}\n\n/**\n * A token wraps a string representation of a token\n * as it is passed through the text processing pipeline.\n *\n * @constructor\n * @param {string} [str=''] - The string token being wrapped.\n * @param {object} [metadata={}] - Metadata associated with this token.\n */\nlunr.Token = function (str, metadata) {\n  this.str = str || \"\"\n  this.metadata = metadata || {}\n}\n\n/**\n * Returns the token string that is being wrapped by this object.\n *\n * @returns {string}\n */\nlunr.Token.prototype.toString = function () {\n  return this.str\n}\n\n/**\n * A token update function is used when updating or optionally\n * when cloning a token.\n *\n * @callback lunr.Token~updateFunction\n * @param {string} str - The string representation of the token.\n * @param {Object} metadata - All metadata associated with this token.\n */\n\n/**\n * Applies the given function to the wrapped string token.\n *\n * @example\n * token.update(function (str, metadata) {\n *   return str.toUpperCase()\n * })\n *\n * @param {lunr.Token~updateFunction} fn - A function to apply to the token string.\n * @returns {lunr.Token}\n */\nlunr.Token.prototype.update = function (fn) {\n  this.str = fn(this.str, this.metadata)\n  return this\n}\n\n/**\n * Creates a clone of this token. Optionally a function can be\n * applied to the cloned token.\n *\n * @param {lunr.Token~updateFunction} [fn] - An optional function to apply to the cloned token.\n * @returns {lunr.Token}\n */\nlunr.Token.prototype.clone = function (fn) {\n  fn = fn || function (s) { return s }\n  return new lunr.Token (fn(this.str, this.metadata), this.metadata)\n}\n/*!\n * lunr.tokenizer\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A function for splitting a string into tokens ready to be inserted into\n * the search index. Uses `lunr.tokenizer.separator` to split strings, change\n * the value of this property to change how strings are split into tokens.\n *\n * This tokenizer will convert its parameter to a string by calling `toString` and\n * then will split this string on the character in `lunr.tokenizer.separator`.\n * Arrays will have their elements converted to strings and wrapped in a lunr.Token.\n *\n * Optional metadata can be passed to the tokenizer, this metadata will be cloned and\n * added as metadata to every token that is created from the object to be tokenized.\n *\n * @static\n * @param {?(string|object|object[])} obj - The object to convert into tokens\n * @param {?object} metadata - Optional metadata to associate with every token\n * @returns {lunr.Token[]}\n * @see {@link lunr.Pipeline}\n */\nlunr.tokenizer = function (obj, metadata) {\n  if (obj == null || obj == undefined) {\n    return []\n  }\n\n  if (Array.isArray(obj)) {\n    return obj.map(function (t) {\n      return new lunr.Token(\n        lunr.utils.asString(t).toLowerCase(),\n        lunr.utils.clone(metadata)\n      )\n    })\n  }\n\n  var str = obj.toString().toLowerCase(),\n      len = str.length,\n      tokens = []\n\n  for (var sliceEnd = 0, sliceStart = 0; sliceEnd <= len; sliceEnd++) {\n    var char = str.charAt(sliceEnd),\n        sliceLength = sliceEnd - sliceStart\n\n    if ((char.match(lunr.tokenizer.separator) || sliceEnd == len)) {\n\n      if (sliceLength > 0) {\n        var tokenMetadata = lunr.utils.clone(metadata) || {}\n        tokenMetadata[\"position\"] = [sliceStart, sliceLength]\n        tokenMetadata[\"index\"] = tokens.length\n\n        tokens.push(\n          new lunr.Token (\n            str.slice(sliceStart, sliceEnd),\n            tokenMetadata\n          )\n        )\n      }\n\n      sliceStart = sliceEnd + 1\n    }\n\n  }\n\n  return tokens\n}\n\n/**\n * The separator used to split a string into tokens. Override this property to change the behaviour of\n * `lunr.tokenizer` behaviour when tokenizing strings. By default this splits on whitespace and hyphens.\n *\n * @static\n * @see lunr.tokenizer\n */\nlunr.tokenizer.separator = /[\\s\\-]+/\n/*!\n * lunr.Pipeline\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.Pipelines maintain an ordered list of functions to be applied to all\n * tokens in documents entering the search index and queries being ran against\n * the index.\n *\n * An instance of lunr.Index created with the lunr shortcut will contain a\n * pipeline with a stop word filter and an English language stemmer. Extra\n * functions can be added before or after either of these functions or these\n * default functions can be removed.\n *\n * When run the pipeline will call each function in turn, passing a token, the\n * index of that token in the original list of all tokens and finally a list of\n * all the original tokens.\n *\n * The output of functions in the pipeline will be passed to the next function\n * in the pipeline. To exclude a token from entering the index the function\n * should return undefined, the rest of the pipeline will not be called with\n * this token.\n *\n * For serialisation of pipelines to work, all functions used in an instance of\n * a pipeline should be registered with lunr.Pipeline. Registered functions can\n * then be loaded. If trying to load a serialised pipeline that uses functions\n * that are not registered an error will be thrown.\n *\n * If not planning on serialising the pipeline then registering pipeline functions\n * is not necessary.\n *\n * @constructor\n */\nlunr.Pipeline = function () {\n  this._stack = []\n}\n\nlunr.Pipeline.registeredFunctions = Object.create(null)\n\n/**\n * A pipeline function maps lunr.Token to lunr.Token. A lunr.Token contains the token\n * string as well as all known metadata. A pipeline function can mutate the token string\n * or mutate (or add) metadata for a given token.\n *\n * A pipeline function can indicate that the passed token should be discarded by returning\n * null, undefined or an empty string. This token will not be passed to any downstream pipeline\n * functions and will not be added to the index.\n *\n * Multiple tokens can be returned by returning an array of tokens. Each token will be passed\n * to any downstream pipeline functions and all will returned tokens will be added to the index.\n *\n * Any number of pipeline functions may be chained together using a lunr.Pipeline.\n *\n * @interface lunr.PipelineFunction\n * @param {lunr.Token} token - A token from the document being processed.\n * @param {number} i - The index of this token in the complete list of tokens for this document/field.\n * @param {lunr.Token[]} tokens - All tokens for this document/field.\n * @returns {(?lunr.Token|lunr.Token[])}\n */\n\n/**\n * Register a function with the pipeline.\n *\n * Functions that are used in the pipeline should be registered if the pipeline\n * needs to be serialised, or a serialised pipeline needs to be loaded.\n *\n * Registering a function does not add it to a pipeline, functions must still be\n * added to instances of the pipeline for them to be used when running a pipeline.\n *\n * @param {lunr.PipelineFunction} fn - The function to check for.\n * @param {String} label - The label to register this function with\n */\nlunr.Pipeline.registerFunction = function (fn, label) {\n  if (label in this.registeredFunctions) {\n    lunr.utils.warn('Overwriting existing registered function: ' + label)\n  }\n\n  fn.label = label\n  lunr.Pipeline.registeredFunctions[fn.label] = fn\n}\n\n/**\n * Warns if the function is not registered as a Pipeline function.\n *\n * @param {lunr.PipelineFunction} fn - The function to check for.\n * @private\n */\nlunr.Pipeline.warnIfFunctionNotRegistered = function (fn) {\n  var isRegistered = fn.label && (fn.label in this.registeredFunctions)\n\n  if (!isRegistered) {\n    lunr.utils.warn('Function is not registered with pipeline. This may cause problems when serialising the index.\\n', fn)\n  }\n}\n\n/**\n * Loads a previously serialised pipeline.\n *\n * All functions to be loaded must already be registered with lunr.Pipeline.\n * If any function from the serialised data has not been registered then an\n * error will be thrown.\n *\n * @param {Object} serialised - The serialised pipeline to load.\n * @returns {lunr.Pipeline}\n */\nlunr.Pipeline.load = function (serialised) {\n  var pipeline = new lunr.Pipeline\n\n  serialised.forEach(function (fnName) {\n    var fn = lunr.Pipeline.registeredFunctions[fnName]\n\n    if (fn) {\n      pipeline.add(fn)\n    } else {\n      throw new Error('Cannot load unregistered function: ' + fnName)\n    }\n  })\n\n  return pipeline\n}\n\n/**\n * Adds new functions to the end of the pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction[]} functions - Any number of functions to add to the pipeline.\n */\nlunr.Pipeline.prototype.add = function () {\n  var fns = Array.prototype.slice.call(arguments)\n\n  fns.forEach(function (fn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(fn)\n    this._stack.push(fn)\n  }, this)\n}\n\n/**\n * Adds a single function after a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n */\nlunr.Pipeline.prototype.after = function (existingFn, newFn) {\n  lunr.Pipeline.warnIfFunctionNotRegistered(newFn)\n\n  var pos = this._stack.indexOf(existingFn)\n  if (pos == -1) {\n    throw new Error('Cannot find existingFn')\n  }\n\n  pos = pos + 1\n  this._stack.splice(pos, 0, newFn)\n}\n\n/**\n * Adds a single function before a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n */\nlunr.Pipeline.prototype.before = function (existingFn, newFn) {\n  lunr.Pipeline.warnIfFunctionNotRegistered(newFn)\n\n  var pos = this._stack.indexOf(existingFn)\n  if (pos == -1) {\n    throw new Error('Cannot find existingFn')\n  }\n\n  this._stack.splice(pos, 0, newFn)\n}\n\n/**\n * Removes a function from the pipeline.\n *\n * @param {lunr.PipelineFunction} fn The function to remove from the pipeline.\n */\nlunr.Pipeline.prototype.remove = function (fn) {\n  var pos = this._stack.indexOf(fn)\n  if (pos == -1) {\n    return\n  }\n\n  this._stack.splice(pos, 1)\n}\n\n/**\n * Runs the current list of functions that make up the pipeline against the\n * passed tokens.\n *\n * @param {Array} tokens The tokens to run through the pipeline.\n * @returns {Array}\n */\nlunr.Pipeline.prototype.run = function (tokens) {\n  var stackLength = this._stack.length\n\n  for (var i = 0; i < stackLength; i++) {\n    var fn = this._stack[i]\n    var memo = []\n\n    for (var j = 0; j < tokens.length; j++) {\n      var result = fn(tokens[j], j, tokens)\n\n      if (result === null || result === void 0 || result === '') continue\n\n      if (Array.isArray(result)) {\n        for (var k = 0; k < result.length; k++) {\n          memo.push(result[k])\n        }\n      } else {\n        memo.push(result)\n      }\n    }\n\n    tokens = memo\n  }\n\n  return tokens\n}\n\n/**\n * Convenience method for passing a string through a pipeline and getting\n * strings out. This method takes care of wrapping the passed string in a\n * token and mapping the resulting tokens back to strings.\n *\n * @param {string} str - The string to pass through the pipeline.\n * @param {?object} metadata - Optional metadata to associate with the token\n * passed to the pipeline.\n * @returns {string[]}\n */\nlunr.Pipeline.prototype.runString = function (str, metadata) {\n  var token = new lunr.Token (str, metadata)\n\n  return this.run([token]).map(function (t) {\n    return t.toString()\n  })\n}\n\n/**\n * Resets the pipeline by removing any existing processors.\n *\n */\nlunr.Pipeline.prototype.reset = function () {\n  this._stack = []\n}\n\n/**\n * Returns a representation of the pipeline ready for serialisation.\n *\n * Logs a warning if the function has not been registered.\n *\n * @returns {Array}\n */\nlunr.Pipeline.prototype.toJSON = function () {\n  return this._stack.map(function (fn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(fn)\n\n    return fn.label\n  })\n}\n/*!\n * lunr.Vector\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A vector is used to construct the vector space of documents and queries. These\n * vectors support operations to determine the similarity between two documents or\n * a document and a query.\n *\n * Normally no parameters are required for initializing a vector, but in the case of\n * loading a previously dumped vector the raw elements can be provided to the constructor.\n *\n * For performance reasons vectors are implemented with a flat array, where an elements\n * index is immediately followed by its value. E.g. [index, value, index, value]. This\n * allows the underlying array to be as sparse as possible and still offer decent\n * performance when being used for vector calculations.\n *\n * @constructor\n * @param {Number[]} [elements] - The flat list of element index and element value pairs.\n */\nlunr.Vector = function (elements) {\n  this._magnitude = 0\n  this.elements = elements || []\n}\n\n\n/**\n * Calculates the position within the vector to insert a given index.\n *\n * This is used internally by insert and upsert. If there are duplicate indexes then\n * the position is returned as if the value for that index were to be updated, but it\n * is the callers responsibility to check whether there is a duplicate at that index\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @returns {Number}\n */\nlunr.Vector.prototype.positionForIndex = function (index) {\n  // For an empty vector the tuple can be inserted at the beginning\n  if (this.elements.length == 0) {\n    return 0\n  }\n\n  var start = 0,\n      end = this.elements.length / 2,\n      sliceLength = end - start,\n      pivotPoint = Math.floor(sliceLength / 2),\n      pivotIndex = this.elements[pivotPoint * 2]\n\n  while (sliceLength > 1) {\n    if (pivotIndex < index) {\n      start = pivotPoint\n    }\n\n    if (pivotIndex > index) {\n      end = pivotPoint\n    }\n\n    if (pivotIndex == index) {\n      break\n    }\n\n    sliceLength = end - start\n    pivotPoint = start + Math.floor(sliceLength / 2)\n    pivotIndex = this.elements[pivotPoint * 2]\n  }\n\n  if (pivotIndex == index) {\n    return pivotPoint * 2\n  }\n\n  if (pivotIndex > index) {\n    return pivotPoint * 2\n  }\n\n  if (pivotIndex < index) {\n    return (pivotPoint + 1) * 2\n  }\n}\n\n/**\n * Inserts an element at an index within the vector.\n *\n * Does not allow duplicates, will throw an error if there is already an entry\n * for this index.\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @param {Number} val - The value to be inserted into the vector.\n */\nlunr.Vector.prototype.insert = function (insertIdx, val) {\n  this.upsert(insertIdx, val, function () {\n    throw \"duplicate index\"\n  })\n}\n\n/**\n * Inserts or updates an existing index within the vector.\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @param {Number} val - The value to be inserted into the vector.\n * @param {function} fn - A function that is called for updates, the existing value and the\n * requested value are passed as arguments\n */\nlunr.Vector.prototype.upsert = function (insertIdx, val, fn) {\n  this._magnitude = 0\n  var position = this.positionForIndex(insertIdx)\n\n  if (this.elements[position] == insertIdx) {\n    this.elements[position + 1] = fn(this.elements[position + 1], val)\n  } else {\n    this.elements.splice(position, 0, insertIdx, val)\n  }\n}\n\n/**\n * Calculates the magnitude of this vector.\n *\n * @returns {Number}\n */\nlunr.Vector.prototype.magnitude = function () {\n  if (this._magnitude) return this._magnitude\n\n  var sumOfSquares = 0,\n      elementsLength = this.elements.length\n\n  for (var i = 1; i < elementsLength; i += 2) {\n    var val = this.elements[i]\n    sumOfSquares += val * val\n  }\n\n  return this._magnitude = Math.sqrt(sumOfSquares)\n}\n\n/**\n * Calculates the dot product of this vector and another vector.\n *\n * @param {lunr.Vector} otherVector - The vector to compute the dot product with.\n * @returns {Number}\n */\nlunr.Vector.prototype.dot = function (otherVector) {\n  var dotProduct = 0,\n      a = this.elements, b = otherVector.elements,\n      aLen = a.length, bLen = b.length,\n      aVal = 0, bVal = 0,\n      i = 0, j = 0\n\n  while (i < aLen && j < bLen) {\n    aVal = a[i], bVal = b[j]\n    if (aVal < bVal) {\n      i += 2\n    } else if (aVal > bVal) {\n      j += 2\n    } else if (aVal == bVal) {\n      dotProduct += a[i + 1] * b[j + 1]\n      i += 2\n      j += 2\n    }\n  }\n\n  return dotProduct\n}\n\n/**\n * Calculates the similarity between this vector and another vector.\n *\n * @param {lunr.Vector} otherVector - The other vector to calculate the\n * similarity with.\n * @returns {Number}\n */\nlunr.Vector.prototype.similarity = function (otherVector) {\n  return this.dot(otherVector) / this.magnitude() || 0\n}\n\n/**\n * Converts the vector to an array of the elements within the vector.\n *\n * @returns {Number[]}\n */\nlunr.Vector.prototype.toArray = function () {\n  var output = new Array (this.elements.length / 2)\n\n  for (var i = 1, j = 0; i < this.elements.length; i += 2, j++) {\n    output[j] = this.elements[i]\n  }\n\n  return output\n}\n\n/**\n * A JSON serializable representation of the vector.\n *\n * @returns {Number[]}\n */\nlunr.Vector.prototype.toJSON = function () {\n  return this.elements\n}\n/* eslint-disable */\n/*!\n * lunr.stemmer\n * Copyright (C) 2020 Oliver Nightingale\n * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n */\n\n/**\n * lunr.stemmer is an english language stemmer, this is a JavaScript\n * implementation of the PorterStemmer taken from http://tartarus.org/~martin\n *\n * @static\n * @implements {lunr.PipelineFunction}\n * @param {lunr.Token} token - The string to stem\n * @returns {lunr.Token}\n * @see {@link lunr.Pipeline}\n * @function\n */\nlunr.stemmer = (function(){\n  var step2list = {\n      \"ational\" : \"ate\",\n      \"tional\" : \"tion\",\n      \"enci\" : \"ence\",\n      \"anci\" : \"ance\",\n      \"izer\" : \"ize\",\n      \"bli\" : \"ble\",\n      \"alli\" : \"al\",\n      \"entli\" : \"ent\",\n      \"eli\" : \"e\",\n      \"ousli\" : \"ous\",\n      \"ization\" : \"ize\",\n      \"ation\" : \"ate\",\n      \"ator\" : \"ate\",\n      \"alism\" : \"al\",\n      \"iveness\" : \"ive\",\n      \"fulness\" : \"ful\",\n      \"ousness\" : \"ous\",\n      \"aliti\" : \"al\",\n      \"iviti\" : \"ive\",\n      \"biliti\" : \"ble\",\n      \"logi\" : \"log\"\n    },\n\n    step3list = {\n      \"icate\" : \"ic\",\n      \"ative\" : \"\",\n      \"alize\" : \"al\",\n      \"iciti\" : \"ic\",\n      \"ical\" : \"ic\",\n      \"ful\" : \"\",\n      \"ness\" : \"\"\n    },\n\n    c = \"[^aeiou]\",          // consonant\n    v = \"[aeiouy]\",          // vowel\n    C = c + \"[^aeiouy]*\",    // consonant sequence\n    V = v + \"[aeiou]*\",      // vowel sequence\n\n    mgr0 = \"^(\" + C + \")?\" + V + C,               // [C]VC... is m>0\n    meq1 = \"^(\" + C + \")?\" + V + C + \"(\" + V + \")?$\",  // [C]VC[V] is m=1\n    mgr1 = \"^(\" + C + \")?\" + V + C + V + C,       // [C]VCVC... is m>1\n    s_v = \"^(\" + C + \")?\" + v;                   // vowel in stem\n\n  var re_mgr0 = new RegExp(mgr0);\n  var re_mgr1 = new RegExp(mgr1);\n  var re_meq1 = new RegExp(meq1);\n  var re_s_v = new RegExp(s_v);\n\n  var re_1a = /^(.+?)(ss|i)es$/;\n  var re2_1a = /^(.+?)([^s])s$/;\n  var re_1b = /^(.+?)eed$/;\n  var re2_1b = /^(.+?)(ed|ing)$/;\n  var re_1b_2 = /.$/;\n  var re2_1b_2 = /(at|bl|iz)$/;\n  var re3_1b_2 = new RegExp(\"([^aeiouylsz])\\\\1$\");\n  var re4_1b_2 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var re_1c = /^(.+?[^aeiou])y$/;\n  var re_2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\n\n  var re_3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\n\n  var re_4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\n  var re2_4 = /^(.+?)(s|t)(ion)$/;\n\n  var re_5 = /^(.+?)e$/;\n  var re_5_1 = /ll$/;\n  var re3_5 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var porterStemmer = function porterStemmer(w) {\n    var stem,\n      suffix,\n      firstch,\n      re,\n      re2,\n      re3,\n      re4;\n\n    if (w.length < 3) { return w; }\n\n    firstch = w.substr(0,1);\n    if (firstch == \"y\") {\n      w = firstch.toUpperCase() + w.substr(1);\n    }\n\n    // Step 1a\n    re = re_1a\n    re2 = re2_1a;\n\n    if (re.test(w)) { w = w.replace(re,\"$1$2\"); }\n    else if (re2.test(w)) { w = w.replace(re2,\"$1$2\"); }\n\n    // Step 1b\n    re = re_1b;\n    re2 = re2_1b;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      re = re_mgr0;\n      if (re.test(fp[1])) {\n        re = re_1b_2;\n        w = w.replace(re,\"\");\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1];\n      re2 = re_s_v;\n      if (re2.test(stem)) {\n        w = stem;\n        re2 = re2_1b_2;\n        re3 = re3_1b_2;\n        re4 = re4_1b_2;\n        if (re2.test(w)) { w = w + \"e\"; }\n        else if (re3.test(w)) { re = re_1b_2; w = w.replace(re,\"\"); }\n        else if (re4.test(w)) { w = w + \"e\"; }\n      }\n    }\n\n    // Step 1c - replace suffix y or Y by i if preceded by a non-vowel which is not the first letter of the word (so cry -> cri, by -> by, say -> say)\n    re = re_1c;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      w = stem + \"i\";\n    }\n\n    // Step 2\n    re = re_2;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step2list[suffix];\n      }\n    }\n\n    // Step 3\n    re = re_3;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step3list[suffix];\n      }\n    }\n\n    // Step 4\n    re = re_4;\n    re2 = re2_4;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      if (re.test(stem)) {\n        w = stem;\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1] + fp[2];\n      re2 = re_mgr1;\n      if (re2.test(stem)) {\n        w = stem;\n      }\n    }\n\n    // Step 5\n    re = re_5;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      re2 = re_meq1;\n      re3 = re3_5;\n      if (re.test(stem) || (re2.test(stem) && !(re3.test(stem)))) {\n        w = stem;\n      }\n    }\n\n    re = re_5_1;\n    re2 = re_mgr1;\n    if (re.test(w) && re2.test(w)) {\n      re = re_1b_2;\n      w = w.replace(re,\"\");\n    }\n\n    // and turn initial Y back to y\n\n    if (firstch == \"y\") {\n      w = firstch.toLowerCase() + w.substr(1);\n    }\n\n    return w;\n  };\n\n  return function (token) {\n    return token.update(porterStemmer);\n  }\n})();\n\nlunr.Pipeline.registerFunction(lunr.stemmer, 'stemmer')\n/*!\n * lunr.stopWordFilter\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.generateStopWordFilter builds a stopWordFilter function from the provided\n * list of stop words.\n *\n * The built in lunr.stopWordFilter is built using this generator and can be used\n * to generate custom stopWordFilters for applications or non English languages.\n *\n * @function\n * @param {Array} token The token to pass through the filter\n * @returns {lunr.PipelineFunction}\n * @see lunr.Pipeline\n * @see lunr.stopWordFilter\n */\nlunr.generateStopWordFilter = function (stopWords) {\n  var words = stopWords.reduce(function (memo, stopWord) {\n    memo[stopWord] = stopWord\n    return memo\n  }, {})\n\n  return function (token) {\n    if (token && words[token.toString()] !== token.toString()) return token\n  }\n}\n\n/**\n * lunr.stopWordFilter is an English language stop word list filter, any words\n * contained in the list will not be passed through the filter.\n *\n * This is intended to be used in the Pipeline. If the token does not pass the\n * filter then undefined will be returned.\n *\n * @function\n * @implements {lunr.PipelineFunction}\n * @params {lunr.Token} token - A token to check for being a stop word.\n * @returns {lunr.Token}\n * @see {@link lunr.Pipeline}\n */\nlunr.stopWordFilter = lunr.generateStopWordFilter([\n  'a',\n  'able',\n  'about',\n  'across',\n  'after',\n  'all',\n  'almost',\n  'also',\n  'am',\n  'among',\n  'an',\n  'and',\n  'any',\n  'are',\n  'as',\n  'at',\n  'be',\n  'because',\n  'been',\n  'but',\n  'by',\n  'can',\n  'cannot',\n  'could',\n  'dear',\n  'did',\n  'do',\n  'does',\n  'either',\n  'else',\n  'ever',\n  'every',\n  'for',\n  'from',\n  'get',\n  'got',\n  'had',\n  'has',\n  'have',\n  'he',\n  'her',\n  'hers',\n  'him',\n  'his',\n  'how',\n  'however',\n  'i',\n  'if',\n  'in',\n  'into',\n  'is',\n  'it',\n  'its',\n  'just',\n  'least',\n  'let',\n  'like',\n  'likely',\n  'may',\n  'me',\n  'might',\n  'most',\n  'must',\n  'my',\n  'neither',\n  'no',\n  'nor',\n  'not',\n  'of',\n  'off',\n  'often',\n  'on',\n  'only',\n  'or',\n  'other',\n  'our',\n  'own',\n  'rather',\n  'said',\n  'say',\n  'says',\n  'she',\n  'should',\n  'since',\n  'so',\n  'some',\n  'than',\n  'that',\n  'the',\n  'their',\n  'them',\n  'then',\n  'there',\n  'these',\n  'they',\n  'this',\n  'tis',\n  'to',\n  'too',\n  'twas',\n  'us',\n  'wants',\n  'was',\n  'we',\n  'were',\n  'what',\n  'when',\n  'where',\n  'which',\n  'while',\n  'who',\n  'whom',\n  'why',\n  'will',\n  'with',\n  'would',\n  'yet',\n  'you',\n  'your'\n])\n\nlunr.Pipeline.registerFunction(lunr.stopWordFilter, 'stopWordFilter')\n/*!\n * lunr.trimmer\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.trimmer is a pipeline function for trimming non word\n * characters from the beginning and end of tokens before they\n * enter the index.\n *\n * This implementation may not work correctly for non latin\n * characters and should either be removed or adapted for use\n * with languages with non-latin characters.\n *\n * @static\n * @implements {lunr.PipelineFunction}\n * @param {lunr.Token} token The token to pass through the filter\n * @returns {lunr.Token}\n * @see lunr.Pipeline\n */\nlunr.trimmer = function (token) {\n  return token.update(function (s) {\n    return s.replace(/^\\W+/, '').replace(/\\W+$/, '')\n  })\n}\n\nlunr.Pipeline.registerFunction(lunr.trimmer, 'trimmer')\n/*!\n * lunr.TokenSet\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A token set is used to store the unique list of all tokens\n * within an index. Token sets are also used to represent an\n * incoming query to the index, this query token set and index\n * token set are then intersected to find which tokens to look\n * up in the inverted index.\n *\n * A token set can hold multiple tokens, as in the case of the\n * index token set, or it can hold a single token as in the\n * case of a simple query token set.\n *\n * Additionally token sets are used to perform wildcard matching.\n * Leading, contained and trailing wildcards are supported, and\n * from this edit distance matching can also be provided.\n *\n * Token sets are implemented as a minimal finite state automata,\n * where both common prefixes and suffixes are shared between tokens.\n * This helps to reduce the space used for storing the token set.\n *\n * @constructor\n */\nlunr.TokenSet = function () {\n  this.final = false\n  this.edges = {}\n  this.id = lunr.TokenSet._nextId\n  lunr.TokenSet._nextId += 1\n}\n\n/**\n * Keeps track of the next, auto increment, identifier to assign\n * to a new tokenSet.\n *\n * TokenSets require a unique identifier to be correctly minimised.\n *\n * @private\n */\nlunr.TokenSet._nextId = 1\n\n/**\n * Creates a TokenSet instance from the given sorted array of words.\n *\n * @param {String[]} arr - A sorted array of strings to create the set from.\n * @returns {lunr.TokenSet}\n * @throws Will throw an error if the input array is not sorted.\n */\nlunr.TokenSet.fromArray = function (arr) {\n  var builder = new lunr.TokenSet.Builder\n\n  for (var i = 0, len = arr.length; i < len; i++) {\n    builder.insert(arr[i])\n  }\n\n  builder.finish()\n  return builder.root\n}\n\n/**\n * Creates a token set from a query clause.\n *\n * @private\n * @param {Object} clause - A single clause from lunr.Query.\n * @param {string} clause.term - The query clause term.\n * @param {number} [clause.editDistance] - The optional edit distance for the term.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.fromClause = function (clause) {\n  if ('editDistance' in clause) {\n    return lunr.TokenSet.fromFuzzyString(clause.term, clause.editDistance)\n  } else {\n    return lunr.TokenSet.fromString(clause.term)\n  }\n}\n\n/**\n * Creates a token set representing a single string with a specified\n * edit distance.\n *\n * Insertions, deletions, substitutions and transpositions are each\n * treated as an edit distance of 1.\n *\n * Increasing the allowed edit distance will have a dramatic impact\n * on the performance of both creating and intersecting these TokenSets.\n * It is advised to keep the edit distance less than 3.\n *\n * @param {string} str - The string to create the token set from.\n * @param {number} editDistance - The allowed edit distance to match.\n * @returns {lunr.Vector}\n */\nlunr.TokenSet.fromFuzzyString = function (str, editDistance) {\n  var root = new lunr.TokenSet\n\n  var stack = [{\n    node: root,\n    editsRemaining: editDistance,\n    str: str\n  }]\n\n  while (stack.length) {\n    var frame = stack.pop()\n\n    // no edit\n    if (frame.str.length > 0) {\n      var char = frame.str.charAt(0),\n          noEditNode\n\n      if (char in frame.node.edges) {\n        noEditNode = frame.node.edges[char]\n      } else {\n        noEditNode = new lunr.TokenSet\n        frame.node.edges[char] = noEditNode\n      }\n\n      if (frame.str.length == 1) {\n        noEditNode.final = true\n      }\n\n      stack.push({\n        node: noEditNode,\n        editsRemaining: frame.editsRemaining,\n        str: frame.str.slice(1)\n      })\n    }\n\n    if (frame.editsRemaining == 0) {\n      continue\n    }\n\n    // insertion\n    if (\"*\" in frame.node.edges) {\n      var insertionNode = frame.node.edges[\"*\"]\n    } else {\n      var insertionNode = new lunr.TokenSet\n      frame.node.edges[\"*\"] = insertionNode\n    }\n\n    if (frame.str.length == 0) {\n      insertionNode.final = true\n    }\n\n    stack.push({\n      node: insertionNode,\n      editsRemaining: frame.editsRemaining - 1,\n      str: frame.str\n    })\n\n    // deletion\n    // can only do a deletion if we have enough edits remaining\n    // and if there are characters left to delete in the string\n    if (frame.str.length > 1) {\n      stack.push({\n        node: frame.node,\n        editsRemaining: frame.editsRemaining - 1,\n        str: frame.str.slice(1)\n      })\n    }\n\n    // deletion\n    // just removing the last character from the str\n    if (frame.str.length == 1) {\n      frame.node.final = true\n    }\n\n    // substitution\n    // can only do a substitution if we have enough edits remaining\n    // and if there are characters left to substitute\n    if (frame.str.length >= 1) {\n      if (\"*\" in frame.node.edges) {\n        var substitutionNode = frame.node.edges[\"*\"]\n      } else {\n        var substitutionNode = new lunr.TokenSet\n        frame.node.edges[\"*\"] = substitutionNode\n      }\n\n      if (frame.str.length == 1) {\n        substitutionNode.final = true\n      }\n\n      stack.push({\n        node: substitutionNode,\n        editsRemaining: frame.editsRemaining - 1,\n        str: frame.str.slice(1)\n      })\n    }\n\n    // transposition\n    // can only do a transposition if there are edits remaining\n    // and there are enough characters to transpose\n    if (frame.str.length > 1) {\n      var charA = frame.str.charAt(0),\n          charB = frame.str.charAt(1),\n          transposeNode\n\n      if (charB in frame.node.edges) {\n        transposeNode = frame.node.edges[charB]\n      } else {\n        transposeNode = new lunr.TokenSet\n        frame.node.edges[charB] = transposeNode\n      }\n\n      if (frame.str.length == 1) {\n        transposeNode.final = true\n      }\n\n      stack.push({\n        node: transposeNode,\n        editsRemaining: frame.editsRemaining - 1,\n        str: charA + frame.str.slice(2)\n      })\n    }\n  }\n\n  return root\n}\n\n/**\n * Creates a TokenSet from a string.\n *\n * The string may contain one or more wildcard characters (*)\n * that will allow wildcard matching when intersecting with\n * another TokenSet.\n *\n * @param {string} str - The string to create a TokenSet from.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.fromString = function (str) {\n  var node = new lunr.TokenSet,\n      root = node\n\n  /*\n   * Iterates through all characters within the passed string\n   * appending a node for each character.\n   *\n   * When a wildcard character is found then a self\n   * referencing edge is introduced to continually match\n   * any number of any characters.\n   */\n  for (var i = 0, len = str.length; i < len; i++) {\n    var char = str[i],\n        final = (i == len - 1)\n\n    if (char == \"*\") {\n      node.edges[char] = node\n      node.final = final\n\n    } else {\n      var next = new lunr.TokenSet\n      next.final = final\n\n      node.edges[char] = next\n      node = next\n    }\n  }\n\n  return root\n}\n\n/**\n * Converts this TokenSet into an array of strings\n * contained within the TokenSet.\n *\n * This is not intended to be used on a TokenSet that\n * contains wildcards, in these cases the results are\n * undefined and are likely to cause an infinite loop.\n *\n * @returns {string[]}\n */\nlunr.TokenSet.prototype.toArray = function () {\n  var words = []\n\n  var stack = [{\n    prefix: \"\",\n    node: this\n  }]\n\n  while (stack.length) {\n    var frame = stack.pop(),\n        edges = Object.keys(frame.node.edges),\n        len = edges.length\n\n    if (frame.node.final) {\n      /* In Safari, at this point the prefix is sometimes corrupted, see:\n       * https://github.com/olivernn/lunr.js/issues/279 Calling any\n       * String.prototype method forces Safari to \"cast\" this string to what\n       * it's supposed to be, fixing the bug. */\n      frame.prefix.charAt(0)\n      words.push(frame.prefix)\n    }\n\n    for (var i = 0; i < len; i++) {\n      var edge = edges[i]\n\n      stack.push({\n        prefix: frame.prefix.concat(edge),\n        node: frame.node.edges[edge]\n      })\n    }\n  }\n\n  return words\n}\n\n/**\n * Generates a string representation of a TokenSet.\n *\n * This is intended to allow TokenSets to be used as keys\n * in objects, largely to aid the construction and minimisation\n * of a TokenSet. As such it is not designed to be a human\n * friendly representation of the TokenSet.\n *\n * @returns {string}\n */\nlunr.TokenSet.prototype.toString = function () {\n  // NOTE: Using Object.keys here as this.edges is very likely\n  // to enter 'hash-mode' with many keys being added\n  //\n  // avoiding a for-in loop here as it leads to the function\n  // being de-optimised (at least in V8). From some simple\n  // benchmarks the performance is comparable, but allowing\n  // V8 to optimize may mean easy performance wins in the future.\n\n  if (this._str) {\n    return this._str\n  }\n\n  var str = this.final ? '1' : '0',\n      labels = Object.keys(this.edges).sort(),\n      len = labels.length\n\n  for (var i = 0; i < len; i++) {\n    var label = labels[i],\n        node = this.edges[label]\n\n    str = str + label + node.id\n  }\n\n  return str\n}\n\n/**\n * Returns a new TokenSet that is the intersection of\n * this TokenSet and the passed TokenSet.\n *\n * This intersection will take into account any wildcards\n * contained within the TokenSet.\n *\n * @param {lunr.TokenSet} b - An other TokenSet to intersect with.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.prototype.intersect = function (b) {\n  var output = new lunr.TokenSet,\n      frame = undefined\n\n  var stack = [{\n    qNode: b,\n    output: output,\n    node: this\n  }]\n\n  while (stack.length) {\n    frame = stack.pop()\n\n    // NOTE: As with the #toString method, we are using\n    // Object.keys and a for loop instead of a for-in loop\n    // as both of these objects enter 'hash' mode, causing\n    // the function to be de-optimised in V8\n    var qEdges = Object.keys(frame.qNode.edges),\n        qLen = qEdges.length,\n        nEdges = Object.keys(frame.node.edges),\n        nLen = nEdges.length\n\n    for (var q = 0; q < qLen; q++) {\n      var qEdge = qEdges[q]\n\n      for (var n = 0; n < nLen; n++) {\n        var nEdge = nEdges[n]\n\n        if (nEdge == qEdge || qEdge == '*') {\n          var node = frame.node.edges[nEdge],\n              qNode = frame.qNode.edges[qEdge],\n              final = node.final && qNode.final,\n              next = undefined\n\n          if (nEdge in frame.output.edges) {\n            // an edge already exists for this character\n            // no need to create a new node, just set the finality\n            // bit unless this node is already final\n            next = frame.output.edges[nEdge]\n            next.final = next.final || final\n\n          } else {\n            // no edge exists yet, must create one\n            // set the finality bit and insert it\n            // into the output\n            next = new lunr.TokenSet\n            next.final = final\n            frame.output.edges[nEdge] = next\n          }\n\n          stack.push({\n            qNode: qNode,\n            output: next,\n            node: node\n          })\n        }\n      }\n    }\n  }\n\n  return output\n}\nlunr.TokenSet.Builder = function () {\n  this.previousWord = \"\"\n  this.root = new lunr.TokenSet\n  this.uncheckedNodes = []\n  this.minimizedNodes = {}\n}\n\nlunr.TokenSet.Builder.prototype.insert = function (word) {\n  var node,\n      commonPrefix = 0\n\n  if (word < this.previousWord) {\n    throw new Error (\"Out of order word insertion\")\n  }\n\n  for (var i = 0; i < word.length && i < this.previousWord.length; i++) {\n    if (word[i] != this.previousWord[i]) break\n    commonPrefix++\n  }\n\n  this.minimize(commonPrefix)\n\n  if (this.uncheckedNodes.length == 0) {\n    node = this.root\n  } else {\n    node = this.uncheckedNodes[this.uncheckedNodes.length - 1].child\n  }\n\n  for (var i = commonPrefix; i < word.length; i++) {\n    var nextNode = new lunr.TokenSet,\n        char = word[i]\n\n    node.edges[char] = nextNode\n\n    this.uncheckedNodes.push({\n      parent: node,\n      char: char,\n      child: nextNode\n    })\n\n    node = nextNode\n  }\n\n  node.final = true\n  this.previousWord = word\n}\n\nlunr.TokenSet.Builder.prototype.finish = function () {\n  this.minimize(0)\n}\n\nlunr.TokenSet.Builder.prototype.minimize = function (downTo) {\n  for (var i = this.uncheckedNodes.length - 1; i >= downTo; i--) {\n    var node = this.uncheckedNodes[i],\n        childKey = node.child.toString()\n\n    if (childKey in this.minimizedNodes) {\n      node.parent.edges[node.char] = this.minimizedNodes[childKey]\n    } else {\n      // Cache the key for this node since\n      // we know it can't change anymore\n      node.child._str = childKey\n\n      this.minimizedNodes[childKey] = node.child\n    }\n\n    this.uncheckedNodes.pop()\n  }\n}\n/*!\n * lunr.Index\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * An index contains the built index of all documents and provides a query interface\n * to the index.\n *\n * Usually instances of lunr.Index will not be created using this constructor, instead\n * lunr.Builder should be used to construct new indexes, or lunr.Index.load should be\n * used to load previously built and serialized indexes.\n *\n * @constructor\n * @param {Object} attrs - The attributes of the built search index.\n * @param {Object} attrs.invertedIndex - An index of term/field to document reference.\n * @param {Object<string, lunr.Vector>} attrs.fieldVectors - Field vectors\n * @param {lunr.TokenSet} attrs.tokenSet - An set of all corpus tokens.\n * @param {string[]} attrs.fields - The names of indexed document fields.\n * @param {lunr.Pipeline} attrs.pipeline - The pipeline to use for search terms.\n */\nlunr.Index = function (attrs) {\n  this.invertedIndex = attrs.invertedIndex\n  this.fieldVectors = attrs.fieldVectors\n  this.tokenSet = attrs.tokenSet\n  this.fields = attrs.fields\n  this.pipeline = attrs.pipeline\n}\n\n/**\n * A result contains details of a document matching a search query.\n * @typedef {Object} lunr.Index~Result\n * @property {string} ref - The reference of the document this result represents.\n * @property {number} score - A number between 0 and 1 representing how similar this document is to the query.\n * @property {lunr.MatchData} matchData - Contains metadata about this match including which term(s) caused the match.\n */\n\n/**\n * Although lunr provides the ability to create queries using lunr.Query, it also provides a simple\n * query language which itself is parsed into an instance of lunr.Query.\n *\n * For programmatically building queries it is advised to directly use lunr.Query, the query language\n * is best used for human entered text rather than program generated text.\n *\n * At its simplest queries can just be a single term, e.g. `hello`, multiple terms are also supported\n * and will be combined with OR, e.g `hello world` will match documents that contain either 'hello'\n * or 'world', though those that contain both will rank higher in the results.\n *\n * Wildcards can be included in terms to match one or more unspecified characters, these wildcards can\n * be inserted anywhere within the term, and more than one wildcard can exist in a single term. Adding\n * wildcards will increase the number of documents that will be found but can also have a negative\n * impact on query performance, especially with wildcards at the beginning of a term.\n *\n * Terms can be restricted to specific fields, e.g. `title:hello`, only documents with the term\n * hello in the title field will match this query. Using a field not present in the index will lead\n * to an error being thrown.\n *\n * Modifiers can also be added to terms, lunr supports edit distance and boost modifiers on terms. A term\n * boost will make documents matching that term score higher, e.g. `foo^5`. Edit distance is also supported\n * to provide fuzzy matching, e.g. 'hello~2' will match documents with hello with an edit distance of 2.\n * Avoid large values for edit distance to improve query performance.\n *\n * Each term also supports a presence modifier. By default a term's presence in document is optional, however\n * this can be changed to either required or prohibited. For a term's presence to be required in a document the\n * term should be prefixed with a '+', e.g. `+foo bar` is a search for documents that must contain 'foo' and\n * optionally contain 'bar'. Conversely a leading '-' sets the terms presence to prohibited, i.e. it must not\n * appear in a document, e.g. `-foo bar` is a search for documents that do not contain 'foo' but may contain 'bar'.\n *\n * To escape special characters the backslash character '\\' can be used, this allows searches to include\n * characters that would normally be considered modifiers, e.g. `foo\\~2` will search for a term \"foo~2\" instead\n * of attempting to apply a boost of 2 to the search term \"foo\".\n *\n * @typedef {string} lunr.Index~QueryString\n * @example <caption>Simple single term query</caption>\n * hello\n * @example <caption>Multiple term query</caption>\n * hello world\n * @example <caption>term scoped to a field</caption>\n * title:hello\n * @example <caption>term with a boost of 10</caption>\n * hello^10\n * @example <caption>term with an edit distance of 2</caption>\n * hello~2\n * @example <caption>terms with presence modifiers</caption>\n * -foo +bar baz\n */\n\n/**\n * Performs a search against the index using lunr query syntax.\n *\n * Results will be returned sorted by their score, the most relevant results\n * will be returned first.  For details on how the score is calculated, please see\n * the {@link https://lunrjs.com/guides/searching.html#scoring|guide}.\n *\n * For more programmatic querying use lunr.Index#query.\n *\n * @param {lunr.Index~QueryString} queryString - A string containing a lunr query.\n * @throws {lunr.QueryParseError} If the passed query string cannot be parsed.\n * @returns {lunr.Index~Result[]}\n */\nlunr.Index.prototype.search = function (queryString) {\n  return this.query(function (query) {\n    var parser = new lunr.QueryParser(queryString, query)\n    parser.parse()\n  })\n}\n\n/**\n * A query builder callback provides a query object to be used to express\n * the query to perform on the index.\n *\n * @callback lunr.Index~queryBuilder\n * @param {lunr.Query} query - The query object to build up.\n * @this lunr.Query\n */\n\n/**\n * Performs a query against the index using the yielded lunr.Query object.\n *\n * If performing programmatic queries against the index, this method is preferred\n * over lunr.Index#search so as to avoid the additional query parsing overhead.\n *\n * A query object is yielded to the supplied function which should be used to\n * express the query to be run against the index.\n *\n * Note that although this function takes a callback parameter it is _not_ an\n * asynchronous operation, the callback is just yielded a query object to be\n * customized.\n *\n * @param {lunr.Index~queryBuilder} fn - A function that is used to build the query.\n * @returns {lunr.Index~Result[]}\n */\nlunr.Index.prototype.query = function (fn) {\n  // for each query clause\n  // * process terms\n  // * expand terms from token set\n  // * find matching documents and metadata\n  // * get document vectors\n  // * score documents\n\n  var query = new lunr.Query(this.fields),\n      matchingFields = Object.create(null),\n      queryVectors = Object.create(null),\n      termFieldCache = Object.create(null),\n      requiredMatches = Object.create(null),\n      prohibitedMatches = Object.create(null)\n\n  /*\n   * To support field level boosts a query vector is created per\n   * field. An empty vector is eagerly created to support negated\n   * queries.\n   */\n  for (var i = 0; i < this.fields.length; i++) {\n    queryVectors[this.fields[i]] = new lunr.Vector\n  }\n\n  fn.call(query, query)\n\n  for (var i = 0; i < query.clauses.length; i++) {\n    /*\n     * Unless the pipeline has been disabled for this term, which is\n     * the case for terms with wildcards, we need to pass the clause\n     * term through the search pipeline. A pipeline returns an array\n     * of processed terms. Pipeline functions may expand the passed\n     * term, which means we may end up performing multiple index lookups\n     * for a single query term.\n     */\n    var clause = query.clauses[i],\n        terms = null,\n        clauseMatches = lunr.Set.empty\n\n    if (clause.usePipeline) {\n      terms = this.pipeline.runString(clause.term, {\n        fields: clause.fields\n      })\n    } else {\n      terms = [clause.term]\n    }\n\n    for (var m = 0; m < terms.length; m++) {\n      var term = terms[m]\n\n      /*\n       * Each term returned from the pipeline needs to use the same query\n       * clause object, e.g. the same boost and or edit distance. The\n       * simplest way to do this is to re-use the clause object but mutate\n       * its term property.\n       */\n      clause.term = term\n\n      /*\n       * From the term in the clause we create a token set which will then\n       * be used to intersect the indexes token set to get a list of terms\n       * to lookup in the inverted index\n       */\n      var termTokenSet = lunr.TokenSet.fromClause(clause),\n          expandedTerms = this.tokenSet.intersect(termTokenSet).toArray()\n\n      /*\n       * If a term marked as required does not exist in the tokenSet it is\n       * impossible for the search to return any matches. We set all the field\n       * scoped required matches set to empty and stop examining any further\n       * clauses.\n       */\n      if (expandedTerms.length === 0 && clause.presence === lunr.Query.presence.REQUIRED) {\n        for (var k = 0; k < clause.fields.length; k++) {\n          var field = clause.fields[k]\n          requiredMatches[field] = lunr.Set.empty\n        }\n\n        break\n      }\n\n      for (var j = 0; j < expandedTerms.length; j++) {\n        /*\n         * For each term get the posting and termIndex, this is required for\n         * building the query vector.\n         */\n        var expandedTerm = expandedTerms[j],\n            posting = this.invertedIndex[expandedTerm],\n            termIndex = posting._index\n\n        for (var k = 0; k < clause.fields.length; k++) {\n          /*\n           * For each field that this query term is scoped by (by default\n           * all fields are in scope) we need to get all the document refs\n           * that have this term in that field.\n           *\n           * The posting is the entry in the invertedIndex for the matching\n           * term from above.\n           */\n          var field = clause.fields[k],\n              fieldPosting = posting[field],\n              matchingDocumentRefs = Object.keys(fieldPosting),\n              termField = expandedTerm + \"/\" + field,\n              matchingDocumentsSet = new lunr.Set(matchingDocumentRefs)\n\n          /*\n           * if the presence of this term is required ensure that the matching\n           * documents are added to the set of required matches for this clause.\n           *\n           */\n          if (clause.presence == lunr.Query.presence.REQUIRED) {\n            clauseMatches = clauseMatches.union(matchingDocumentsSet)\n\n            if (requiredMatches[field] === undefined) {\n              requiredMatches[field] = lunr.Set.complete\n            }\n          }\n\n          /*\n           * if the presence of this term is prohibited ensure that the matching\n           * documents are added to the set of prohibited matches for this field,\n           * creating that set if it does not yet exist.\n           */\n          if (clause.presence == lunr.Query.presence.PROHIBITED) {\n            if (prohibitedMatches[field] === undefined) {\n              prohibitedMatches[field] = lunr.Set.empty\n            }\n\n            prohibitedMatches[field] = prohibitedMatches[field].union(matchingDocumentsSet)\n\n            /*\n             * Prohibited matches should not be part of the query vector used for\n             * similarity scoring and no metadata should be extracted so we continue\n             * to the next field\n             */\n            continue\n          }\n\n          /*\n           * The query field vector is populated using the termIndex found for\n           * the term and a unit value with the appropriate boost applied.\n           * Using upsert because there could already be an entry in the vector\n           * for the term we are working with. In that case we just add the scores\n           * together.\n           */\n          queryVectors[field].upsert(termIndex, clause.boost, function (a, b) { return a + b })\n\n          /**\n           * If we've already seen this term, field combo then we've already collected\n           * the matching documents and metadata, no need to go through all that again\n           */\n          if (termFieldCache[termField]) {\n            continue\n          }\n\n          for (var l = 0; l < matchingDocumentRefs.length; l++) {\n            /*\n             * All metadata for this term/field/document triple\n             * are then extracted and collected into an instance\n             * of lunr.MatchData ready to be returned in the query\n             * results\n             */\n            var matchingDocumentRef = matchingDocumentRefs[l],\n                matchingFieldRef = new lunr.FieldRef (matchingDocumentRef, field),\n                metadata = fieldPosting[matchingDocumentRef],\n                fieldMatch\n\n            if ((fieldMatch = matchingFields[matchingFieldRef]) === undefined) {\n              matchingFields[matchingFieldRef] = new lunr.MatchData (expandedTerm, field, metadata)\n            } else {\n              fieldMatch.add(expandedTerm, field, metadata)\n            }\n\n          }\n\n          termFieldCache[termField] = true\n        }\n      }\n    }\n\n    /**\n     * If the presence was required we need to update the requiredMatches field sets.\n     * We do this after all fields for the term have collected their matches because\n     * the clause terms presence is required in _any_ of the fields not _all_ of the\n     * fields.\n     */\n    if (clause.presence === lunr.Query.presence.REQUIRED) {\n      for (var k = 0; k < clause.fields.length; k++) {\n        var field = clause.fields[k]\n        requiredMatches[field] = requiredMatches[field].intersect(clauseMatches)\n      }\n    }\n  }\n\n  /**\n   * Need to combine the field scoped required and prohibited\n   * matching documents into a global set of required and prohibited\n   * matches\n   */\n  var allRequiredMatches = lunr.Set.complete,\n      allProhibitedMatches = lunr.Set.empty\n\n  for (var i = 0; i < this.fields.length; i++) {\n    var field = this.fields[i]\n\n    if (requiredMatches[field]) {\n      allRequiredMatches = allRequiredMatches.intersect(requiredMatches[field])\n    }\n\n    if (prohibitedMatches[field]) {\n      allProhibitedMatches = allProhibitedMatches.union(prohibitedMatches[field])\n    }\n  }\n\n  var matchingFieldRefs = Object.keys(matchingFields),\n      results = [],\n      matches = Object.create(null)\n\n  /*\n   * If the query is negated (contains only prohibited terms)\n   * we need to get _all_ fieldRefs currently existing in the\n   * index. This is only done when we know that the query is\n   * entirely prohibited terms to avoid any cost of getting all\n   * fieldRefs unnecessarily.\n   *\n   * Additionally, blank MatchData must be created to correctly\n   * populate the results.\n   */\n  if (query.isNegated()) {\n    matchingFieldRefs = Object.keys(this.fieldVectors)\n\n    for (var i = 0; i < matchingFieldRefs.length; i++) {\n      var matchingFieldRef = matchingFieldRefs[i]\n      var fieldRef = lunr.FieldRef.fromString(matchingFieldRef)\n      matchingFields[matchingFieldRef] = new lunr.MatchData\n    }\n  }\n\n  for (var i = 0; i < matchingFieldRefs.length; i++) {\n    /*\n     * Currently we have document fields that match the query, but we\n     * need to return documents. The matchData and scores are combined\n     * from multiple fields belonging to the same document.\n     *\n     * Scores are calculated by field, using the query vectors created\n     * above, and combined into a final document score using addition.\n     */\n    var fieldRef = lunr.FieldRef.fromString(matchingFieldRefs[i]),\n        docRef = fieldRef.docRef\n\n    if (!allRequiredMatches.contains(docRef)) {\n      continue\n    }\n\n    if (allProhibitedMatches.contains(docRef)) {\n      continue\n    }\n\n    var fieldVector = this.fieldVectors[fieldRef],\n        score = queryVectors[fieldRef.fieldName].similarity(fieldVector),\n        docMatch\n\n    if ((docMatch = matches[docRef]) !== undefined) {\n      docMatch.score += score\n      docMatch.matchData.combine(matchingFields[fieldRef])\n    } else {\n      var match = {\n        ref: docRef,\n        score: score,\n        matchData: matchingFields[fieldRef]\n      }\n      matches[docRef] = match\n      results.push(match)\n    }\n  }\n\n  /*\n   * Sort the results objects by score, highest first.\n   */\n  return results.sort(function (a, b) {\n    return b.score - a.score\n  })\n}\n\n/**\n * Prepares the index for JSON serialization.\n *\n * The schema for this JSON blob will be described in a\n * separate JSON schema file.\n *\n * @returns {Object}\n */\nlunr.Index.prototype.toJSON = function () {\n  var invertedIndex = Object.keys(this.invertedIndex)\n    .sort()\n    .map(function (term) {\n      return [term, this.invertedIndex[term]]\n    }, this)\n\n  var fieldVectors = Object.keys(this.fieldVectors)\n    .map(function (ref) {\n      return [ref, this.fieldVectors[ref].toJSON()]\n    }, this)\n\n  return {\n    version: lunr.version,\n    fields: this.fields,\n    fieldVectors: fieldVectors,\n    invertedIndex: invertedIndex,\n    pipeline: this.pipeline.toJSON()\n  }\n}\n\n/**\n * Loads a previously serialized lunr.Index\n *\n * @param {Object} serializedIndex - A previously serialized lunr.Index\n * @returns {lunr.Index}\n */\nlunr.Index.load = function (serializedIndex) {\n  var attrs = {},\n      fieldVectors = {},\n      serializedVectors = serializedIndex.fieldVectors,\n      invertedIndex = Object.create(null),\n      serializedInvertedIndex = serializedIndex.invertedIndex,\n      tokenSetBuilder = new lunr.TokenSet.Builder,\n      pipeline = lunr.Pipeline.load(serializedIndex.pipeline)\n\n  if (serializedIndex.version != lunr.version) {\n    lunr.utils.warn(\"Version mismatch when loading serialised index. Current version of lunr '\" + lunr.version + \"' does not match serialized index '\" + serializedIndex.version + \"'\")\n  }\n\n  for (var i = 0; i < serializedVectors.length; i++) {\n    var tuple = serializedVectors[i],\n        ref = tuple[0],\n        elements = tuple[1]\n\n    fieldVectors[ref] = new lunr.Vector(elements)\n  }\n\n  for (var i = 0; i < serializedInvertedIndex.length; i++) {\n    var tuple = serializedInvertedIndex[i],\n        term = tuple[0],\n        posting = tuple[1]\n\n    tokenSetBuilder.insert(term)\n    invertedIndex[term] = posting\n  }\n\n  tokenSetBuilder.finish()\n\n  attrs.fields = serializedIndex.fields\n\n  attrs.fieldVectors = fieldVectors\n  attrs.invertedIndex = invertedIndex\n  attrs.tokenSet = tokenSetBuilder.root\n  attrs.pipeline = pipeline\n\n  return new lunr.Index(attrs)\n}\n/*!\n * lunr.Builder\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.Builder performs indexing on a set of documents and\n * returns instances of lunr.Index ready for querying.\n *\n * All configuration of the index is done via the builder, the\n * fields to index, the document reference, the text processing\n * pipeline and document scoring parameters are all set on the\n * builder before indexing.\n *\n * @constructor\n * @property {string} _ref - Internal reference to the document reference field.\n * @property {string[]} _fields - Internal reference to the document fields to index.\n * @property {object} invertedIndex - The inverted index maps terms to document fields.\n * @property {object} documentTermFrequencies - Keeps track of document term frequencies.\n * @property {object} documentLengths - Keeps track of the length of documents added to the index.\n * @property {lunr.tokenizer} tokenizer - Function for splitting strings into tokens for indexing.\n * @property {lunr.Pipeline} pipeline - The pipeline performs text processing on tokens before indexing.\n * @property {lunr.Pipeline} searchPipeline - A pipeline for processing search terms before querying the index.\n * @property {number} documentCount - Keeps track of the total number of documents indexed.\n * @property {number} _b - A parameter to control field length normalization, setting this to 0 disabled normalization, 1 fully normalizes field lengths, the default value is 0.75.\n * @property {number} _k1 - A parameter to control how quickly an increase in term frequency results in term frequency saturation, the default value is 1.2.\n * @property {number} termIndex - A counter incremented for each unique term, used to identify a terms position in the vector space.\n * @property {array} metadataWhitelist - A list of metadata keys that have been whitelisted for entry in the index.\n */\nlunr.Builder = function () {\n  this._ref = \"id\"\n  this._fields = Object.create(null)\n  this._documents = Object.create(null)\n  this.invertedIndex = Object.create(null)\n  this.fieldTermFrequencies = {}\n  this.fieldLengths = {}\n  this.tokenizer = lunr.tokenizer\n  this.pipeline = new lunr.Pipeline\n  this.searchPipeline = new lunr.Pipeline\n  this.documentCount = 0\n  this._b = 0.75\n  this._k1 = 1.2\n  this.termIndex = 0\n  this.metadataWhitelist = []\n}\n\n/**\n * Sets the document field used as the document reference. Every document must have this field.\n * The type of this field in the document should be a string, if it is not a string it will be\n * coerced into a string by calling toString.\n *\n * The default ref is 'id'.\n *\n * The ref should _not_ be changed during indexing, it should be set before any documents are\n * added to the index. Changing it during indexing can lead to inconsistent results.\n *\n * @param {string} ref - The name of the reference field in the document.\n */\nlunr.Builder.prototype.ref = function (ref) {\n  this._ref = ref\n}\n\n/**\n * A function that is used to extract a field from a document.\n *\n * Lunr expects a field to be at the top level of a document, if however the field\n * is deeply nested within a document an extractor function can be used to extract\n * the right field for indexing.\n *\n * @callback fieldExtractor\n * @param {object} doc - The document being added to the index.\n * @returns {?(string|object|object[])} obj - The object that will be indexed for this field.\n * @example <caption>Extracting a nested field</caption>\n * function (doc) { return doc.nested.field }\n */\n\n/**\n * Adds a field to the list of document fields that will be indexed. Every document being\n * indexed should have this field. Null values for this field in indexed documents will\n * not cause errors but will limit the chance of that document being retrieved by searches.\n *\n * All fields should be added before adding documents to the index. Adding fields after\n * a document has been indexed will have no effect on already indexed documents.\n *\n * Fields can be boosted at build time. This allows terms within that field to have more\n * importance when ranking search results. Use a field boost to specify that matches within\n * one field are more important than other fields.\n *\n * @param {string} fieldName - The name of a field to index in all documents.\n * @param {object} attributes - Optional attributes associated with this field.\n * @param {number} [attributes.boost=1] - Boost applied to all terms within this field.\n * @param {fieldExtractor} [attributes.extractor] - Function to extract a field from a document.\n * @throws {RangeError} fieldName cannot contain unsupported characters '/'\n */\nlunr.Builder.prototype.field = function (fieldName, attributes) {\n  if (/\\//.test(fieldName)) {\n    throw new RangeError (\"Field '\" + fieldName + \"' contains illegal character '/'\")\n  }\n\n  this._fields[fieldName] = attributes || {}\n}\n\n/**\n * A parameter to tune the amount of field length normalisation that is applied when\n * calculating relevance scores. A value of 0 will completely disable any normalisation\n * and a value of 1 will fully normalise field lengths. The default is 0.75. Values of b\n * will be clamped to the range 0 - 1.\n *\n * @param {number} number - The value to set for this tuning parameter.\n */\nlunr.Builder.prototype.b = function (number) {\n  if (number < 0) {\n    this._b = 0\n  } else if (number > 1) {\n    this._b = 1\n  } else {\n    this._b = number\n  }\n}\n\n/**\n * A parameter that controls the speed at which a rise in term frequency results in term\n * frequency saturation. The default value is 1.2. Setting this to a higher value will give\n * slower saturation levels, a lower value will result in quicker saturation.\n *\n * @param {number} number - The value to set for this tuning parameter.\n */\nlunr.Builder.prototype.k1 = function (number) {\n  this._k1 = number\n}\n\n/**\n * Adds a document to the index.\n *\n * Before adding fields to the index the index should have been fully setup, with the document\n * ref and all fields to index already having been specified.\n *\n * The document must have a field name as specified by the ref (by default this is 'id') and\n * it should have all fields defined for indexing, though null or undefined values will not\n * cause errors.\n *\n * Entire documents can be boosted at build time. Applying a boost to a document indicates that\n * this document should rank higher in search results than other documents.\n *\n * @param {object} doc - The document to add to the index.\n * @param {object} attributes - Optional attributes associated with this document.\n * @param {number} [attributes.boost=1] - Boost applied to all terms within this document.\n */\nlunr.Builder.prototype.add = function (doc, attributes) {\n  var docRef = doc[this._ref],\n      fields = Object.keys(this._fields)\n\n  this._documents[docRef] = attributes || {}\n  this.documentCount += 1\n\n  for (var i = 0; i < fields.length; i++) {\n    var fieldName = fields[i],\n        extractor = this._fields[fieldName].extractor,\n        field = extractor ? extractor(doc) : doc[fieldName],\n        tokens = this.tokenizer(field, {\n          fields: [fieldName]\n        }),\n        terms = this.pipeline.run(tokens),\n        fieldRef = new lunr.FieldRef (docRef, fieldName),\n        fieldTerms = Object.create(null)\n\n    this.fieldTermFrequencies[fieldRef] = fieldTerms\n    this.fieldLengths[fieldRef] = 0\n\n    // store the length of this field for this document\n    this.fieldLengths[fieldRef] += terms.length\n\n    // calculate term frequencies for this field\n    for (var j = 0; j < terms.length; j++) {\n      var term = terms[j]\n\n      if (fieldTerms[term] == undefined) {\n        fieldTerms[term] = 0\n      }\n\n      fieldTerms[term] += 1\n\n      // add to inverted index\n      // create an initial posting if one doesn't exist\n      if (this.invertedIndex[term] == undefined) {\n        var posting = Object.create(null)\n        posting[\"_index\"] = this.termIndex\n        this.termIndex += 1\n\n        for (var k = 0; k < fields.length; k++) {\n          posting[fields[k]] = Object.create(null)\n        }\n\n        this.invertedIndex[term] = posting\n      }\n\n      // add an entry for this term/fieldName/docRef to the invertedIndex\n      if (this.invertedIndex[term][fieldName][docRef] == undefined) {\n        this.invertedIndex[term][fieldName][docRef] = Object.create(null)\n      }\n\n      // store all whitelisted metadata about this token in the\n      // inverted index\n      for (var l = 0; l < this.metadataWhitelist.length; l++) {\n        var metadataKey = this.metadataWhitelist[l],\n            metadata = term.metadata[metadataKey]\n\n        if (this.invertedIndex[term][fieldName][docRef][metadataKey] == undefined) {\n          this.invertedIndex[term][fieldName][docRef][metadataKey] = []\n        }\n\n        this.invertedIndex[term][fieldName][docRef][metadataKey].push(metadata)\n      }\n    }\n\n  }\n}\n\n/**\n * Calculates the average document length for this index\n *\n * @private\n */\nlunr.Builder.prototype.calculateAverageFieldLengths = function () {\n\n  var fieldRefs = Object.keys(this.fieldLengths),\n      numberOfFields = fieldRefs.length,\n      accumulator = {},\n      documentsWithField = {}\n\n  for (var i = 0; i < numberOfFields; i++) {\n    var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n        field = fieldRef.fieldName\n\n    documentsWithField[field] || (documentsWithField[field] = 0)\n    documentsWithField[field] += 1\n\n    accumulator[field] || (accumulator[field] = 0)\n    accumulator[field] += this.fieldLengths[fieldRef]\n  }\n\n  var fields = Object.keys(this._fields)\n\n  for (var i = 0; i < fields.length; i++) {\n    var fieldName = fields[i]\n    accumulator[fieldName] = accumulator[fieldName] / documentsWithField[fieldName]\n  }\n\n  this.averageFieldLength = accumulator\n}\n\n/**\n * Builds a vector space model of every document using lunr.Vector\n *\n * @private\n */\nlunr.Builder.prototype.createFieldVectors = function () {\n  var fieldVectors = {},\n      fieldRefs = Object.keys(this.fieldTermFrequencies),\n      fieldRefsLength = fieldRefs.length,\n      termIdfCache = Object.create(null)\n\n  for (var i = 0; i < fieldRefsLength; i++) {\n    var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n        fieldName = fieldRef.fieldName,\n        fieldLength = this.fieldLengths[fieldRef],\n        fieldVector = new lunr.Vector,\n        termFrequencies = this.fieldTermFrequencies[fieldRef],\n        terms = Object.keys(termFrequencies),\n        termsLength = terms.length\n\n\n    var fieldBoost = this._fields[fieldName].boost || 1,\n        docBoost = this._documents[fieldRef.docRef].boost || 1\n\n    for (var j = 0; j < termsLength; j++) {\n      var term = terms[j],\n          tf = termFrequencies[term],\n          termIndex = this.invertedIndex[term]._index,\n          idf, score, scoreWithPrecision\n\n      if (termIdfCache[term] === undefined) {\n        idf = lunr.idf(this.invertedIndex[term], this.documentCount)\n        termIdfCache[term] = idf\n      } else {\n        idf = termIdfCache[term]\n      }\n\n      score = idf * ((this._k1 + 1) * tf) / (this._k1 * (1 - this._b + this._b * (fieldLength / this.averageFieldLength[fieldName])) + tf)\n      score *= fieldBoost\n      score *= docBoost\n      scoreWithPrecision = Math.round(score * 1000) / 1000\n      // Converts 1.23456789 to 1.234.\n      // Reducing the precision so that the vectors take up less\n      // space when serialised. Doing it now so that they behave\n      // the same before and after serialisation. Also, this is\n      // the fastest approach to reducing a number's precision in\n      // JavaScript.\n\n      fieldVector.insert(termIndex, scoreWithPrecision)\n    }\n\n    fieldVectors[fieldRef] = fieldVector\n  }\n\n  this.fieldVectors = fieldVectors\n}\n\n/**\n * Creates a token set of all tokens in the index using lunr.TokenSet\n *\n * @private\n */\nlunr.Builder.prototype.createTokenSet = function () {\n  this.tokenSet = lunr.TokenSet.fromArray(\n    Object.keys(this.invertedIndex).sort()\n  )\n}\n\n/**\n * Builds the index, creating an instance of lunr.Index.\n *\n * This completes the indexing process and should only be called\n * once all documents have been added to the index.\n *\n * @returns {lunr.Index}\n */\nlunr.Builder.prototype.build = function () {\n  this.calculateAverageFieldLengths()\n  this.createFieldVectors()\n  this.createTokenSet()\n\n  return new lunr.Index({\n    invertedIndex: this.invertedIndex,\n    fieldVectors: this.fieldVectors,\n    tokenSet: this.tokenSet,\n    fields: Object.keys(this._fields),\n    pipeline: this.searchPipeline\n  })\n}\n\n/**\n * Applies a plugin to the index builder.\n *\n * A plugin is a function that is called with the index builder as its context.\n * Plugins can be used to customise or extend the behaviour of the index\n * in some way. A plugin is just a function, that encapsulated the custom\n * behaviour that should be applied when building the index.\n *\n * The plugin function will be called with the index builder as its argument, additional\n * arguments can also be passed when calling use. The function will be called\n * with the index builder as its context.\n *\n * @param {Function} plugin The plugin to apply.\n */\nlunr.Builder.prototype.use = function (fn) {\n  var args = Array.prototype.slice.call(arguments, 1)\n  args.unshift(this)\n  fn.apply(this, args)\n}\n/**\n * Contains and collects metadata about a matching document.\n * A single instance of lunr.MatchData is returned as part of every\n * lunr.Index~Result.\n *\n * @constructor\n * @param {string} term - The term this match data is associated with\n * @param {string} field - The field in which the term was found\n * @param {object} metadata - The metadata recorded about this term in this field\n * @property {object} metadata - A cloned collection of metadata associated with this document.\n * @see {@link lunr.Index~Result}\n */\nlunr.MatchData = function (term, field, metadata) {\n  var clonedMetadata = Object.create(null),\n      metadataKeys = Object.keys(metadata || {})\n\n  // Cloning the metadata to prevent the original\n  // being mutated during match data combination.\n  // Metadata is kept in an array within the inverted\n  // index so cloning the data can be done with\n  // Array#slice\n  for (var i = 0; i < metadataKeys.length; i++) {\n    var key = metadataKeys[i]\n    clonedMetadata[key] = metadata[key].slice()\n  }\n\n  this.metadata = Object.create(null)\n\n  if (term !== undefined) {\n    this.metadata[term] = Object.create(null)\n    this.metadata[term][field] = clonedMetadata\n  }\n}\n\n/**\n * An instance of lunr.MatchData will be created for every term that matches a\n * document. However only one instance is required in a lunr.Index~Result. This\n * method combines metadata from another instance of lunr.MatchData with this\n * objects metadata.\n *\n * @param {lunr.MatchData} otherMatchData - Another instance of match data to merge with this one.\n * @see {@link lunr.Index~Result}\n */\nlunr.MatchData.prototype.combine = function (otherMatchData) {\n  var terms = Object.keys(otherMatchData.metadata)\n\n  for (var i = 0; i < terms.length; i++) {\n    var term = terms[i],\n        fields = Object.keys(otherMatchData.metadata[term])\n\n    if (this.metadata[term] == undefined) {\n      this.metadata[term] = Object.create(null)\n    }\n\n    for (var j = 0; j < fields.length; j++) {\n      var field = fields[j],\n          keys = Object.keys(otherMatchData.metadata[term][field])\n\n      if (this.metadata[term][field] == undefined) {\n        this.metadata[term][field] = Object.create(null)\n      }\n\n      for (var k = 0; k < keys.length; k++) {\n        var key = keys[k]\n\n        if (this.metadata[term][field][key] == undefined) {\n          this.metadata[term][field][key] = otherMatchData.metadata[term][field][key]\n        } else {\n          this.metadata[term][field][key] = this.metadata[term][field][key].concat(otherMatchData.metadata[term][field][key])\n        }\n\n      }\n    }\n  }\n}\n\n/**\n * Add metadata for a term/field pair to this instance of match data.\n *\n * @param {string} term - The term this match data is associated with\n * @param {string} field - The field in which the term was found\n * @param {object} metadata - The metadata recorded about this term in this field\n */\nlunr.MatchData.prototype.add = function (term, field, metadata) {\n  if (!(term in this.metadata)) {\n    this.metadata[term] = Object.create(null)\n    this.metadata[term][field] = metadata\n    return\n  }\n\n  if (!(field in this.metadata[term])) {\n    this.metadata[term][field] = metadata\n    return\n  }\n\n  var metadataKeys = Object.keys(metadata)\n\n  for (var i = 0; i < metadataKeys.length; i++) {\n    var key = metadataKeys[i]\n\n    if (key in this.metadata[term][field]) {\n      this.metadata[term][field][key] = this.metadata[term][field][key].concat(metadata[key])\n    } else {\n      this.metadata[term][field][key] = metadata[key]\n    }\n  }\n}\n/**\n * A lunr.Query provides a programmatic way of defining queries to be performed\n * against a {@link lunr.Index}.\n *\n * Prefer constructing a lunr.Query using the {@link lunr.Index#query} method\n * so the query object is pre-initialized with the right index fields.\n *\n * @constructor\n * @property {lunr.Query~Clause[]} clauses - An array of query clauses.\n * @property {string[]} allFields - An array of all available fields in a lunr.Index.\n */\nlunr.Query = function (allFields) {\n  this.clauses = []\n  this.allFields = allFields\n}\n\n/**\n * Constants for indicating what kind of automatic wildcard insertion will be used when constructing a query clause.\n *\n * This allows wildcards to be added to the beginning and end of a term without having to manually do any string\n * concatenation.\n *\n * The wildcard constants can be bitwise combined to select both leading and trailing wildcards.\n *\n * @constant\n * @default\n * @property {number} wildcard.NONE - The term will have no wildcards inserted, this is the default behaviour\n * @property {number} wildcard.LEADING - Prepend the term with a wildcard, unless a leading wildcard already exists\n * @property {number} wildcard.TRAILING - Append a wildcard to the term, unless a trailing wildcard already exists\n * @see lunr.Query~Clause\n * @see lunr.Query#clause\n * @see lunr.Query#term\n * @example <caption>query term with trailing wildcard</caption>\n * query.term('foo', { wildcard: lunr.Query.wildcard.TRAILING })\n * @example <caption>query term with leading and trailing wildcard</caption>\n * query.term('foo', {\n *   wildcard: lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING\n * })\n */\n\nlunr.Query.wildcard = new String (\"*\")\nlunr.Query.wildcard.NONE = 0\nlunr.Query.wildcard.LEADING = 1\nlunr.Query.wildcard.TRAILING = 2\n\n/**\n * Constants for indicating what kind of presence a term must have in matching documents.\n *\n * @constant\n * @enum {number}\n * @see lunr.Query~Clause\n * @see lunr.Query#clause\n * @see lunr.Query#term\n * @example <caption>query term with required presence</caption>\n * query.term('foo', { presence: lunr.Query.presence.REQUIRED })\n */\nlunr.Query.presence = {\n  /**\n   * Term's presence in a document is optional, this is the default value.\n   */\n  OPTIONAL: 1,\n\n  /**\n   * Term's presence in a document is required, documents that do not contain\n   * this term will not be returned.\n   */\n  REQUIRED: 2,\n\n  /**\n   * Term's presence in a document is prohibited, documents that do contain\n   * this term will not be returned.\n   */\n  PROHIBITED: 3\n}\n\n/**\n * A single clause in a {@link lunr.Query} contains a term and details on how to\n * match that term against a {@link lunr.Index}.\n *\n * @typedef {Object} lunr.Query~Clause\n * @property {string[]} fields - The fields in an index this clause should be matched against.\n * @property {number} [boost=1] - Any boost that should be applied when matching this clause.\n * @property {number} [editDistance] - Whether the term should have fuzzy matching applied, and how fuzzy the match should be.\n * @property {boolean} [usePipeline] - Whether the term should be passed through the search pipeline.\n * @property {number} [wildcard=lunr.Query.wildcard.NONE] - Whether the term should have wildcards appended or prepended.\n * @property {number} [presence=lunr.Query.presence.OPTIONAL] - The terms presence in any matching documents.\n */\n\n/**\n * Adds a {@link lunr.Query~Clause} to this query.\n *\n * Unless the clause contains the fields to be matched all fields will be matched. In addition\n * a default boost of 1 is applied to the clause.\n *\n * @param {lunr.Query~Clause} clause - The clause to add to this query.\n * @see lunr.Query~Clause\n * @returns {lunr.Query}\n */\nlunr.Query.prototype.clause = function (clause) {\n  if (!('fields' in clause)) {\n    clause.fields = this.allFields\n  }\n\n  if (!('boost' in clause)) {\n    clause.boost = 1\n  }\n\n  if (!('usePipeline' in clause)) {\n    clause.usePipeline = true\n  }\n\n  if (!('wildcard' in clause)) {\n    clause.wildcard = lunr.Query.wildcard.NONE\n  }\n\n  if ((clause.wildcard & lunr.Query.wildcard.LEADING) && (clause.term.charAt(0) != lunr.Query.wildcard)) {\n    clause.term = \"*\" + clause.term\n  }\n\n  if ((clause.wildcard & lunr.Query.wildcard.TRAILING) && (clause.term.slice(-1) != lunr.Query.wildcard)) {\n    clause.term = \"\" + clause.term + \"*\"\n  }\n\n  if (!('presence' in clause)) {\n    clause.presence = lunr.Query.presence.OPTIONAL\n  }\n\n  this.clauses.push(clause)\n\n  return this\n}\n\n/**\n * A negated query is one in which every clause has a presence of\n * prohibited. These queries require some special processing to return\n * the expected results.\n *\n * @returns boolean\n */\nlunr.Query.prototype.isNegated = function () {\n  for (var i = 0; i < this.clauses.length; i++) {\n    if (this.clauses[i].presence != lunr.Query.presence.PROHIBITED) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Adds a term to the current query, under the covers this will create a {@link lunr.Query~Clause}\n * to the list of clauses that make up this query.\n *\n * The term is used as is, i.e. no tokenization will be performed by this method. Instead conversion\n * to a token or token-like string should be done before calling this method.\n *\n * The term will be converted to a string by calling `toString`. Multiple terms can be passed as an\n * array, each term in the array will share the same options.\n *\n * @param {object|object[]} term - The term(s) to add to the query.\n * @param {object} [options] - Any additional properties to add to the query clause.\n * @returns {lunr.Query}\n * @see lunr.Query#clause\n * @see lunr.Query~Clause\n * @example <caption>adding a single term to a query</caption>\n * query.term(\"foo\")\n * @example <caption>adding a single term to a query and specifying search fields, term boost and automatic trailing wildcard</caption>\n * query.term(\"foo\", {\n *   fields: [\"title\"],\n *   boost: 10,\n *   wildcard: lunr.Query.wildcard.TRAILING\n * })\n * @example <caption>using lunr.tokenizer to convert a string to tokens before using them as terms</caption>\n * query.term(lunr.tokenizer(\"foo bar\"))\n */\nlunr.Query.prototype.term = function (term, options) {\n  if (Array.isArray(term)) {\n    term.forEach(function (t) { this.term(t, lunr.utils.clone(options)) }, this)\n    return this\n  }\n\n  var clause = options || {}\n  clause.term = term.toString()\n\n  this.clause(clause)\n\n  return this\n}\nlunr.QueryParseError = function (message, start, end) {\n  this.name = \"QueryParseError\"\n  this.message = message\n  this.start = start\n  this.end = end\n}\n\nlunr.QueryParseError.prototype = new Error\nlunr.QueryLexer = function (str) {\n  this.lexemes = []\n  this.str = str\n  this.length = str.length\n  this.pos = 0\n  this.start = 0\n  this.escapeCharPositions = []\n}\n\nlunr.QueryLexer.prototype.run = function () {\n  var state = lunr.QueryLexer.lexText\n\n  while (state) {\n    state = state(this)\n  }\n}\n\nlunr.QueryLexer.prototype.sliceString = function () {\n  var subSlices = [],\n      sliceStart = this.start,\n      sliceEnd = this.pos\n\n  for (var i = 0; i < this.escapeCharPositions.length; i++) {\n    sliceEnd = this.escapeCharPositions[i]\n    subSlices.push(this.str.slice(sliceStart, sliceEnd))\n    sliceStart = sliceEnd + 1\n  }\n\n  subSlices.push(this.str.slice(sliceStart, this.pos))\n  this.escapeCharPositions.length = 0\n\n  return subSlices.join('')\n}\n\nlunr.QueryLexer.prototype.emit = function (type) {\n  this.lexemes.push({\n    type: type,\n    str: this.sliceString(),\n    start: this.start,\n    end: this.pos\n  })\n\n  this.start = this.pos\n}\n\nlunr.QueryLexer.prototype.escapeCharacter = function () {\n  this.escapeCharPositions.push(this.pos - 1)\n  this.pos += 1\n}\n\nlunr.QueryLexer.prototype.next = function () {\n  if (this.pos >= this.length) {\n    return lunr.QueryLexer.EOS\n  }\n\n  var char = this.str.charAt(this.pos)\n  this.pos += 1\n  return char\n}\n\nlunr.QueryLexer.prototype.width = function () {\n  return this.pos - this.start\n}\n\nlunr.QueryLexer.prototype.ignore = function () {\n  if (this.start == this.pos) {\n    this.pos += 1\n  }\n\n  this.start = this.pos\n}\n\nlunr.QueryLexer.prototype.backup = function () {\n  this.pos -= 1\n}\n\nlunr.QueryLexer.prototype.acceptDigitRun = function () {\n  var char, charCode\n\n  do {\n    char = this.next()\n    charCode = char.charCodeAt(0)\n  } while (charCode > 47 && charCode < 58)\n\n  if (char != lunr.QueryLexer.EOS) {\n    this.backup()\n  }\n}\n\nlunr.QueryLexer.prototype.more = function () {\n  return this.pos < this.length\n}\n\nlunr.QueryLexer.EOS = 'EOS'\nlunr.QueryLexer.FIELD = 'FIELD'\nlunr.QueryLexer.TERM = 'TERM'\nlunr.QueryLexer.EDIT_DISTANCE = 'EDIT_DISTANCE'\nlunr.QueryLexer.BOOST = 'BOOST'\nlunr.QueryLexer.PRESENCE = 'PRESENCE'\n\nlunr.QueryLexer.lexField = function (lexer) {\n  lexer.backup()\n  lexer.emit(lunr.QueryLexer.FIELD)\n  lexer.ignore()\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexTerm = function (lexer) {\n  if (lexer.width() > 1) {\n    lexer.backup()\n    lexer.emit(lunr.QueryLexer.TERM)\n  }\n\n  lexer.ignore()\n\n  if (lexer.more()) {\n    return lunr.QueryLexer.lexText\n  }\n}\n\nlunr.QueryLexer.lexEditDistance = function (lexer) {\n  lexer.ignore()\n  lexer.acceptDigitRun()\n  lexer.emit(lunr.QueryLexer.EDIT_DISTANCE)\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexBoost = function (lexer) {\n  lexer.ignore()\n  lexer.acceptDigitRun()\n  lexer.emit(lunr.QueryLexer.BOOST)\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexEOS = function (lexer) {\n  if (lexer.width() > 0) {\n    lexer.emit(lunr.QueryLexer.TERM)\n  }\n}\n\n// This matches the separator used when tokenising fields\n// within a document. These should match otherwise it is\n// not possible to search for some tokens within a document.\n//\n// It is possible for the user to change the separator on the\n// tokenizer so it _might_ clash with any other of the special\n// characters already used within the search string, e.g. :.\n//\n// This means that it is possible to change the separator in\n// such a way that makes some words unsearchable using a search\n// string.\nlunr.QueryLexer.termSeparator = lunr.tokenizer.separator\n\nlunr.QueryLexer.lexText = function (lexer) {\n  while (true) {\n    var char = lexer.next()\n\n    if (char == lunr.QueryLexer.EOS) {\n      return lunr.QueryLexer.lexEOS\n    }\n\n    // Escape character is '\\'\n    if (char.charCodeAt(0) == 92) {\n      lexer.escapeCharacter()\n      continue\n    }\n\n    if (char == \":\") {\n      return lunr.QueryLexer.lexField\n    }\n\n    if (char == \"~\") {\n      lexer.backup()\n      if (lexer.width() > 0) {\n        lexer.emit(lunr.QueryLexer.TERM)\n      }\n      return lunr.QueryLexer.lexEditDistance\n    }\n\n    if (char == \"^\") {\n      lexer.backup()\n      if (lexer.width() > 0) {\n        lexer.emit(lunr.QueryLexer.TERM)\n      }\n      return lunr.QueryLexer.lexBoost\n    }\n\n    // \"+\" indicates term presence is required\n    // checking for length to ensure that only\n    // leading \"+\" are considered\n    if (char == \"+\" && lexer.width() === 1) {\n      lexer.emit(lunr.QueryLexer.PRESENCE)\n      return lunr.QueryLexer.lexText\n    }\n\n    // \"-\" indicates term presence is prohibited\n    // checking for length to ensure that only\n    // leading \"-\" are considered\n    if (char == \"-\" && lexer.width() === 1) {\n      lexer.emit(lunr.QueryLexer.PRESENCE)\n      return lunr.QueryLexer.lexText\n    }\n\n    if (char.match(lunr.QueryLexer.termSeparator)) {\n      return lunr.QueryLexer.lexTerm\n    }\n  }\n}\n\nlunr.QueryParser = function (str, query) {\n  this.lexer = new lunr.QueryLexer (str)\n  this.query = query\n  this.currentClause = {}\n  this.lexemeIdx = 0\n}\n\nlunr.QueryParser.prototype.parse = function () {\n  this.lexer.run()\n  this.lexemes = this.lexer.lexemes\n\n  var state = lunr.QueryParser.parseClause\n\n  while (state) {\n    state = state(this)\n  }\n\n  return this.query\n}\n\nlunr.QueryParser.prototype.peekLexeme = function () {\n  return this.lexemes[this.lexemeIdx]\n}\n\nlunr.QueryParser.prototype.consumeLexeme = function () {\n  var lexeme = this.peekLexeme()\n  this.lexemeIdx += 1\n  return lexeme\n}\n\nlunr.QueryParser.prototype.nextClause = function () {\n  var completedClause = this.currentClause\n  this.query.clause(completedClause)\n  this.currentClause = {}\n}\n\nlunr.QueryParser.parseClause = function (parser) {\n  var lexeme = parser.peekLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  switch (lexeme.type) {\n    case lunr.QueryLexer.PRESENCE:\n      return lunr.QueryParser.parsePresence\n    case lunr.QueryLexer.FIELD:\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expected either a field or a term, found \" + lexeme.type\n\n      if (lexeme.str.length >= 1) {\n        errorMessage += \" with value '\" + lexeme.str + \"'\"\n      }\n\n      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n}\n\nlunr.QueryParser.parsePresence = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  switch (lexeme.str) {\n    case \"-\":\n      parser.currentClause.presence = lunr.Query.presence.PROHIBITED\n      break\n    case \"+\":\n      parser.currentClause.presence = lunr.Query.presence.REQUIRED\n      break\n    default:\n      var errorMessage = \"unrecognised presence operator'\" + lexeme.str + \"'\"\n      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    var errorMessage = \"expecting term or field, found nothing\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.FIELD:\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expecting term or field, found '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseField = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  if (parser.query.allFields.indexOf(lexeme.str) == -1) {\n    var possibleFields = parser.query.allFields.map(function (f) { return \"'\" + f + \"'\" }).join(', '),\n        errorMessage = \"unrecognised field '\" + lexeme.str + \"', possible fields: \" + possibleFields\n\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.fields = [lexeme.str]\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    var errorMessage = \"expecting term, found nothing\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expecting term, found '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseTerm = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  parser.currentClause.term = lexeme.str.toLowerCase()\n\n  if (lexeme.str.indexOf(\"*\") != -1) {\n    parser.currentClause.usePipeline = false\n  }\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseEditDistance = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  var editDistance = parseInt(lexeme.str, 10)\n\n  if (isNaN(editDistance)) {\n    var errorMessage = \"edit distance must be numeric\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.editDistance = editDistance\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseBoost = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  var boost = parseInt(lexeme.str, 10)\n\n  if (isNaN(boost)) {\n    var errorMessage = \"boost must be numeric\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.boost = boost\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\n  /**\n   * export the module via AMD, CommonJS or as a browser global\n   * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js\n   */\n  ;(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      // AMD. Register as an anonymous module.\n      define(factory)\n    } else if (typeof exports === 'object') {\n      /**\n       * Node. Does not work with strict CommonJS, but\n       * only CommonJS-like enviroments that support module.exports,\n       * like Node.\n       */\n      module.exports = factory()\n    } else {\n      // Browser globals (root is window)\n      root.lunr = factory()\n    }\n  }(this, function () {\n    /**\n     * Just return a value to define the module export.\n     * This example returns an object, but the module\n     * can return a function as the exported value.\n     */\n    return lunr\n  }))\n})();\n","/**\n * Advanced Encryption Standard (AES) implementation.\n *\n * This implementation is based on the public domain library 'jscrypto' which\n * was written by:\n *\n * Emily Stark (estark@stanford.edu)\n * Mike Hamburg (mhamburg@stanford.edu)\n * Dan Boneh (dabo@cs.stanford.edu)\n *\n * Parts of this code are based on the OpenSSL implementation of AES:\n * http://www.openssl.org\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./cipher');\nrequire('./cipherModes');\nrequire('./util');\n\n/* AES API */\nmodule.exports = forge.aes = forge.aes || {};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('AES-<mode>', key);\n * cipher.start({iv: iv});\n *\n * Creates an AES cipher object to encrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as a string of bytes, an array of bytes,\n * a byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.startEncrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: false,\n    mode: mode\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('AES-<mode>', key);\n *\n * Creates an AES cipher object to encrypt data using the given symmetric key.\n *\n * The key may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.createEncryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: false,\n    mode: mode\n  });\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('AES-<mode>', key);\n * decipher.start({iv: iv});\n *\n * Creates an AES cipher object to decrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as a string of bytes, an array of bytes,\n * a byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.startDecrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: true,\n    mode: mode\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('AES-<mode>', key);\n *\n * Creates an AES cipher object to decrypt data using the given symmetric key.\n *\n * The key may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.createDecryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: true,\n    mode: mode\n  });\n};\n\n/**\n * Creates a new AES cipher algorithm object.\n *\n * @param name the name of the algorithm.\n * @param mode the mode factory function.\n *\n * @return the AES algorithm object.\n */\nforge.aes.Algorithm = function(name, mode) {\n  if(!init) {\n    initialize();\n  }\n  var self = this;\n  self.name = name;\n  self.mode = new mode({\n    blockSize: 16,\n    cipher: {\n      encrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._w, inBlock, outBlock, false);\n      },\n      decrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._w, inBlock, outBlock, true);\n      }\n    }\n  });\n  self._init = false;\n};\n\n/**\n * Initializes this AES algorithm by expanding its key.\n *\n * @param options the options to use.\n *          key the key to use with this algorithm.\n *          decrypt true if the algorithm should be initialized for decryption,\n *            false for encryption.\n */\nforge.aes.Algorithm.prototype.initialize = function(options) {\n  if(this._init) {\n    return;\n  }\n\n  var key = options.key;\n  var tmp;\n\n  /* Note: The key may be a string of bytes, an array of bytes, a byte\n    buffer, or an array of 32-bit integers. If the key is in bytes, then\n    it must be 16, 24, or 32 bytes in length. If it is in 32-bit\n    integers, it must be 4, 6, or 8 integers long. */\n\n  if(typeof key === 'string' &&\n    (key.length === 16 || key.length === 24 || key.length === 32)) {\n    // convert key string into byte buffer\n    key = forge.util.createBuffer(key);\n  } else if(forge.util.isArray(key) &&\n    (key.length === 16 || key.length === 24 || key.length === 32)) {\n    // convert key integer array into byte buffer\n    tmp = key;\n    key = forge.util.createBuffer();\n    for(var i = 0; i < tmp.length; ++i) {\n      key.putByte(tmp[i]);\n    }\n  }\n\n  // convert key byte buffer into 32-bit integer array\n  if(!forge.util.isArray(key)) {\n    tmp = key;\n    key = [];\n\n    // key lengths of 16, 24, 32 bytes allowed\n    var len = tmp.length();\n    if(len === 16 || len === 24 || len === 32) {\n      len = len >>> 2;\n      for(var i = 0; i < len; ++i) {\n        key.push(tmp.getInt32());\n      }\n    }\n  }\n\n  // key must be an array of 32-bit integers by now\n  if(!forge.util.isArray(key) ||\n    !(key.length === 4 || key.length === 6 || key.length === 8)) {\n    throw new Error('Invalid key parameter.');\n  }\n\n  // encryption operation is always used for these modes\n  var mode = this.mode.name;\n  var encryptOp = (['CFB', 'OFB', 'CTR', 'GCM'].indexOf(mode) !== -1);\n\n  // do key expansion\n  this._w = _expandKey(key, options.decrypt && !encryptOp);\n  this._init = true;\n};\n\n/**\n * Expands a key. Typically only used for testing.\n *\n * @param key the symmetric key to expand, as an array of 32-bit words.\n * @param decrypt true to expand for decryption, false for encryption.\n *\n * @return the expanded key.\n */\nforge.aes._expandKey = function(key, decrypt) {\n  if(!init) {\n    initialize();\n  }\n  return _expandKey(key, decrypt);\n};\n\n/**\n * Updates a single block. Typically only used for testing.\n *\n * @param w the expanded key to use.\n * @param input an array of block-size 32-bit words.\n * @param output an array of block-size 32-bit words.\n * @param decrypt true to decrypt, false to encrypt.\n */\nforge.aes._updateBlock = _updateBlock;\n\n/** Register AES algorithms **/\n\nregisterAlgorithm('AES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('AES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('AES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('AES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('AES-CTR', forge.cipher.modes.ctr);\nregisterAlgorithm('AES-GCM', forge.cipher.modes.gcm);\n\nfunction registerAlgorithm(name, mode) {\n  var factory = function() {\n    return new forge.aes.Algorithm(name, mode);\n  };\n  forge.cipher.registerAlgorithm(name, factory);\n}\n\n/** AES implementation **/\n\nvar init = false; // not yet initialized\nvar Nb = 4;       // number of words comprising the state (AES = 4)\nvar sbox;         // non-linear substitution table used in key expansion\nvar isbox;        // inversion of sbox\nvar rcon;         // round constant word array\nvar mix;          // mix-columns table\nvar imix;         // inverse mix-columns table\n\n/**\n * Performs initialization, ie: precomputes tables to optimize for speed.\n *\n * One way to understand how AES works is to imagine that 'addition' and\n * 'multiplication' are interfaces that require certain mathematical\n * properties to hold true (ie: they are associative) but they might have\n * different implementations and produce different kinds of results ...\n * provided that their mathematical properties remain true. AES defines\n * its own methods of addition and multiplication but keeps some important\n * properties the same, ie: associativity and distributivity. The\n * explanation below tries to shed some light on how AES defines addition\n * and multiplication of bytes and 32-bit words in order to perform its\n * encryption and decryption algorithms.\n *\n * The basics:\n *\n * The AES algorithm views bytes as binary representations of polynomials\n * that have either 1 or 0 as the coefficients. It defines the addition\n * or subtraction of two bytes as the XOR operation. It also defines the\n * multiplication of two bytes as a finite field referred to as GF(2^8)\n * (Note: 'GF' means \"Galois Field\" which is a field that contains a finite\n * number of elements so GF(2^8) has 256 elements).\n *\n * This means that any two bytes can be represented as binary polynomials;\n * when they multiplied together and modularly reduced by an irreducible\n * polynomial of the 8th degree, the results are the field GF(2^8). The\n * specific irreducible polynomial that AES uses in hexadecimal is 0x11b.\n * This multiplication is associative with 0x01 as the identity:\n *\n * (b * 0x01 = GF(b, 0x01) = b).\n *\n * The operation GF(b, 0x02) can be performed at the byte level by left\n * shifting b once and then XOR'ing it (to perform the modular reduction)\n * with 0x11b if b is >= 128. Repeated application of the multiplication\n * of 0x02 can be used to implement the multiplication of any two bytes.\n *\n * For instance, multiplying 0x57 and 0x13, denoted as GF(0x57, 0x13), can\n * be performed by factoring 0x13 into 0x01, 0x02, and 0x10. Then these\n * factors can each be multiplied by 0x57 and then added together. To do\n * the multiplication, values for 0x57 multiplied by each of these 3 factors\n * can be precomputed and stored in a table. To add them, the values from\n * the table are XOR'd together.\n *\n * AES also defines addition and multiplication of words, that is 4-byte\n * numbers represented as polynomials of 3 degrees where the coefficients\n * are the values of the bytes.\n *\n * The word [a0, a1, a2, a3] is a polynomial a3x^3 + a2x^2 + a1x + a0.\n *\n * Addition is performed by XOR'ing like powers of x. Multiplication\n * is performed in two steps, the first is an algebriac expansion as\n * you would do normally (where addition is XOR). But the result is\n * a polynomial larger than 3 degrees and thus it cannot fit in a word. So\n * next the result is modularly reduced by an AES-specific polynomial of\n * degree 4 which will always produce a polynomial of less than 4 degrees\n * such that it will fit in a word. In AES, this polynomial is x^4 + 1.\n *\n * The modular product of two polynomials 'a' and 'b' is thus:\n *\n * d(x) = d3x^3 + d2x^2 + d1x + d0\n * with\n * d0 = GF(a0, b0) ^ GF(a3, b1) ^ GF(a2, b2) ^ GF(a1, b3)\n * d1 = GF(a1, b0) ^ GF(a0, b1) ^ GF(a3, b2) ^ GF(a2, b3)\n * d2 = GF(a2, b0) ^ GF(a1, b1) ^ GF(a0, b2) ^ GF(a3, b3)\n * d3 = GF(a3, b0) ^ GF(a2, b1) ^ GF(a1, b2) ^ GF(a0, b3)\n *\n * As a matrix:\n *\n * [d0] = [a0 a3 a2 a1][b0]\n * [d1]   [a1 a0 a3 a2][b1]\n * [d2]   [a2 a1 a0 a3][b2]\n * [d3]   [a3 a2 a1 a0][b3]\n *\n * Special polynomials defined by AES (0x02 == {02}):\n * a(x)    = {03}x^3 + {01}x^2 + {01}x + {02}\n * a^-1(x) = {0b}x^3 + {0d}x^2 + {09}x + {0e}.\n *\n * These polynomials are used in the MixColumns() and InverseMixColumns()\n * operations, respectively, to cause each element in the state to affect\n * the output (referred to as diffusing).\n *\n * RotWord() uses: a0 = a1 = a2 = {00} and a3 = {01}, which is the\n * polynomial x3.\n *\n * The ShiftRows() method modifies the last 3 rows in the state (where\n * the state is 4 words with 4 bytes per word) by shifting bytes cyclically.\n * The 1st byte in the second row is moved to the end of the row. The 1st\n * and 2nd bytes in the third row are moved to the end of the row. The 1st,\n * 2nd, and 3rd bytes are moved in the fourth row.\n *\n * More details on how AES arithmetic works:\n *\n * In the polynomial representation of binary numbers, XOR performs addition\n * and subtraction and multiplication in GF(2^8) denoted as GF(a, b)\n * corresponds with the multiplication of polynomials modulo an irreducible\n * polynomial of degree 8. In other words, for AES, GF(a, b) will multiply\n * polynomial 'a' with polynomial 'b' and then do a modular reduction by\n * an AES-specific irreducible polynomial of degree 8.\n *\n * A polynomial is irreducible if its only divisors are one and itself. For\n * the AES algorithm, this irreducible polynomial is:\n *\n * m(x) = x^8 + x^4 + x^3 + x + 1,\n *\n * or {01}{1b} in hexadecimal notation, where each coefficient is a bit:\n * 100011011 = 283 = 0x11b.\n *\n * For example, GF(0x57, 0x83) = 0xc1 because\n *\n * 0x57 = 87  = 01010111 = x^6 + x^4 + x^2 + x + 1\n * 0x85 = 131 = 10000101 = x^7 + x + 1\n *\n * (x^6 + x^4 + x^2 + x + 1) * (x^7 + x + 1)\n * =  x^13 + x^11 + x^9 + x^8 + x^7 +\n *    x^7 + x^5 + x^3 + x^2 + x +\n *    x^6 + x^4 + x^2 + x + 1\n * =  x^13 + x^11 + x^9 + x^8 + x^6 + x^5 + x^4 + x^3 + 1 = y\n *    y modulo (x^8 + x^4 + x^3 + x + 1)\n * =  x^7 + x^6 + 1.\n *\n * The modular reduction by m(x) guarantees the result will be a binary\n * polynomial of less than degree 8, so that it can fit in a byte.\n *\n * The operation to multiply a binary polynomial b with x (the polynomial\n * x in binary representation is 00000010) is:\n *\n * b_7x^8 + b_6x^7 + b_5x^6 + b_4x^5 + b_3x^4 + b_2x^3 + b_1x^2 + b_0x^1\n *\n * To get GF(b, x) we must reduce that by m(x). If b_7 is 0 (that is the\n * most significant bit is 0 in b) then the result is already reduced. If\n * it is 1, then we can reduce it by subtracting m(x) via an XOR.\n *\n * It follows that multiplication by x (00000010 or 0x02) can be implemented\n * by performing a left shift followed by a conditional bitwise XOR with\n * 0x1b. This operation on bytes is denoted by xtime(). Multiplication by\n * higher powers of x can be implemented by repeated application of xtime().\n *\n * By adding intermediate results, multiplication by any constant can be\n * implemented. For instance:\n *\n * GF(0x57, 0x13) = 0xfe because:\n *\n * xtime(b) = (b & 128) ? (b << 1 ^ 0x11b) : (b << 1)\n *\n * Note: We XOR with 0x11b instead of 0x1b because in javascript our\n * datatype for b can be larger than 1 byte, so a left shift will not\n * automatically eliminate bits that overflow a byte ... by XOR'ing the\n * overflow bit with 1 (the extra one from 0x11b) we zero it out.\n *\n * GF(0x57, 0x02) = xtime(0x57) = 0xae\n * GF(0x57, 0x04) = xtime(0xae) = 0x47\n * GF(0x57, 0x08) = xtime(0x47) = 0x8e\n * GF(0x57, 0x10) = xtime(0x8e) = 0x07\n *\n * GF(0x57, 0x13) = GF(0x57, (0x01 ^ 0x02 ^ 0x10))\n *\n * And by the distributive property (since XOR is addition and GF() is\n * multiplication):\n *\n * = GF(0x57, 0x01) ^ GF(0x57, 0x02) ^ GF(0x57, 0x10)\n * = 0x57 ^ 0xae ^ 0x07\n * = 0xfe.\n */\nfunction initialize() {\n  init = true;\n\n  /* Populate the Rcon table. These are the values given by\n    [x^(i-1),{00},{00},{00}] where x^(i-1) are powers of x (and x = 0x02)\n    in the field of GF(2^8), where i starts at 1.\n\n    rcon[0] = [0x00, 0x00, 0x00, 0x00]\n    rcon[1] = [0x01, 0x00, 0x00, 0x00] 2^(1-1) = 2^0 = 1\n    rcon[2] = [0x02, 0x00, 0x00, 0x00] 2^(2-1) = 2^1 = 2\n    ...\n    rcon[9]  = [0x1B, 0x00, 0x00, 0x00] 2^(9-1)  = 2^8 = 0x1B\n    rcon[10] = [0x36, 0x00, 0x00, 0x00] 2^(10-1) = 2^9 = 0x36\n\n    We only store the first byte because it is the only one used.\n  */\n  rcon = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1B, 0x36];\n\n  // compute xtime table which maps i onto GF(i, 0x02)\n  var xtime = new Array(256);\n  for(var i = 0; i < 128; ++i) {\n    xtime[i] = i << 1;\n    xtime[i + 128] = (i + 128) << 1 ^ 0x11B;\n  }\n\n  // compute all other tables\n  sbox = new Array(256);\n  isbox = new Array(256);\n  mix = new Array(4);\n  imix = new Array(4);\n  for(var i = 0; i < 4; ++i) {\n    mix[i] = new Array(256);\n    imix[i] = new Array(256);\n  }\n  var e = 0, ei = 0, e2, e4, e8, sx, sx2, me, ime;\n  for(var i = 0; i < 256; ++i) {\n    /* We need to generate the SubBytes() sbox and isbox tables so that\n      we can perform byte substitutions. This requires us to traverse\n      all of the elements in GF, find their multiplicative inverses,\n      and apply to each the following affine transformation:\n\n      bi' = bi ^ b(i + 4) mod 8 ^ b(i + 5) mod 8 ^ b(i + 6) mod 8 ^\n            b(i + 7) mod 8 ^ ci\n      for 0 <= i < 8, where bi is the ith bit of the byte, and ci is the\n      ith bit of a byte c with the value {63} or {01100011}.\n\n      It is possible to traverse every possible value in a Galois field\n      using what is referred to as a 'generator'. There are many\n      generators (128 out of 256): 3,5,6,9,11,82 to name a few. To fully\n      traverse GF we iterate 255 times, multiplying by our generator\n      each time.\n\n      On each iteration we can determine the multiplicative inverse for\n      the current element.\n\n      Suppose there is an element in GF 'e'. For a given generator 'g',\n      e = g^x. The multiplicative inverse of e is g^(255 - x). It turns\n      out that if use the inverse of a generator as another generator\n      it will produce all of the corresponding multiplicative inverses\n      at the same time. For this reason, we choose 5 as our inverse\n      generator because it only requires 2 multiplies and 1 add and its\n      inverse, 82, requires relatively few operations as well.\n\n      In order to apply the affine transformation, the multiplicative\n      inverse 'ei' of 'e' can be repeatedly XOR'd (4 times) with a\n      bit-cycling of 'ei'. To do this 'ei' is first stored in 's' and\n      'x'. Then 's' is left shifted and the high bit of 's' is made the\n      low bit. The resulting value is stored in 's'. Then 'x' is XOR'd\n      with 's' and stored in 'x'. On each subsequent iteration the same\n      operation is performed. When 4 iterations are complete, 'x' is\n      XOR'd with 'c' (0x63) and the transformed value is stored in 'x'.\n      For example:\n\n      s = 01000001\n      x = 01000001\n\n      iteration 1: s = 10000010, x ^= s\n      iteration 2: s = 00000101, x ^= s\n      iteration 3: s = 00001010, x ^= s\n      iteration 4: s = 00010100, x ^= s\n      x ^= 0x63\n\n      This can be done with a loop where s = (s << 1) | (s >> 7). However,\n      it can also be done by using a single 16-bit (in this case 32-bit)\n      number 'sx'. Since XOR is an associative operation, we can set 'sx'\n      to 'ei' and then XOR it with 'sx' left-shifted 1,2,3, and 4 times.\n      The most significant bits will flow into the high 8 bit positions\n      and be correctly XOR'd with one another. All that remains will be\n      to cycle the high 8 bits by XOR'ing them all with the lower 8 bits\n      afterwards.\n\n      At the same time we're populating sbox and isbox we can precompute\n      the multiplication we'll need to do to do MixColumns() later.\n    */\n\n    // apply affine transformation\n    sx = ei ^ (ei << 1) ^ (ei << 2) ^ (ei << 3) ^ (ei << 4);\n    sx = (sx >> 8) ^ (sx & 255) ^ 0x63;\n\n    // update tables\n    sbox[e] = sx;\n    isbox[sx] = e;\n\n    /* Mixing columns is done using matrix multiplication. The columns\n      that are to be mixed are each a single word in the current state.\n      The state has Nb columns (4 columns). Therefore each column is a\n      4 byte word. So to mix the columns in a single column 'c' where\n      its rows are r0, r1, r2, and r3, we use the following matrix\n      multiplication:\n\n      [2 3 1 1]*[r0,c]=[r'0,c]\n      [1 2 3 1] [r1,c] [r'1,c]\n      [1 1 2 3] [r2,c] [r'2,c]\n      [3 1 1 2] [r3,c] [r'3,c]\n\n      r0, r1, r2, and r3 are each 1 byte of one of the words in the\n      state (a column). To do matrix multiplication for each mixed\n      column c' we multiply the corresponding row from the left matrix\n      with the corresponding column from the right matrix. In total, we\n      get 4 equations:\n\n      r0,c' = 2*r0,c + 3*r1,c + 1*r2,c + 1*r3,c\n      r1,c' = 1*r0,c + 2*r1,c + 3*r2,c + 1*r3,c\n      r2,c' = 1*r0,c + 1*r1,c + 2*r2,c + 3*r3,c\n      r3,c' = 3*r0,c + 1*r1,c + 1*r2,c + 2*r3,c\n\n      As usual, the multiplication is as previously defined and the\n      addition is XOR. In order to optimize mixing columns we can store\n      the multiplication results in tables. If you think of the whole\n      column as a word (it might help to visualize by mentally rotating\n      the equations above by counterclockwise 90 degrees) then you can\n      see that it would be useful to map the multiplications performed on\n      each byte (r0, r1, r2, r3) onto a word as well. For instance, we\n      could map 2*r0,1*r0,1*r0,3*r0 onto a word by storing 2*r0 in the\n      highest 8 bits and 3*r0 in the lowest 8 bits (with the other two\n      respectively in the middle). This means that a table can be\n      constructed that uses r0 as an index to the word. We can do the\n      same with r1, r2, and r3, creating a total of 4 tables.\n\n      To construct a full c', we can just look up each byte of c in\n      their respective tables and XOR the results together.\n\n      Also, to build each table we only have to calculate the word\n      for 2,1,1,3 for every byte ... which we can do on each iteration\n      of this loop since we will iterate over every byte. After we have\n      calculated 2,1,1,3 we can get the results for the other tables\n      by cycling the byte at the end to the beginning. For instance\n      we can take the result of table 2,1,1,3 and produce table 3,2,1,1\n      by moving the right most byte to the left most position just like\n      how you can imagine the 3 moved out of 2,1,1,3 and to the front\n      to produce 3,2,1,1.\n\n      There is another optimization in that the same multiples of\n      the current element we need in order to advance our generator\n      to the next iteration can be reused in performing the 2,1,1,3\n      calculation. We also calculate the inverse mix column tables,\n      with e,9,d,b being the inverse of 2,1,1,3.\n\n      When we're done, and we need to actually mix columns, the first\n      byte of each state word should be put through mix[0] (2,1,1,3),\n      the second through mix[1] (3,2,1,1) and so forth. Then they should\n      be XOR'd together to produce the fully mixed column.\n    */\n\n    // calculate mix and imix table values\n    sx2 = xtime[sx];\n    e2 = xtime[e];\n    e4 = xtime[e2];\n    e8 = xtime[e4];\n    me =\n      (sx2 << 24) ^  // 2\n      (sx << 16) ^   // 1\n      (sx << 8) ^    // 1\n      (sx ^ sx2);    // 3\n    ime =\n      (e2 ^ e4 ^ e8) << 24 ^  // E (14)\n      (e ^ e8) << 16 ^        // 9\n      (e ^ e4 ^ e8) << 8 ^    // D (13)\n      (e ^ e2 ^ e8);          // B (11)\n    // produce each of the mix tables by rotating the 2,1,1,3 value\n    for(var n = 0; n < 4; ++n) {\n      mix[n][e] = me;\n      imix[n][sx] = ime;\n      // cycle the right most byte to the left most position\n      // ie: 2,1,1,3 becomes 3,2,1,1\n      me = me << 24 | me >>> 8;\n      ime = ime << 24 | ime >>> 8;\n    }\n\n    // get next element and inverse\n    if(e === 0) {\n      // 1 is the inverse of 1\n      e = ei = 1;\n    } else {\n      // e = 2e + 2*2*2*(10e)) = multiply e by 82 (chosen generator)\n      // ei = ei + 2*2*ei = multiply ei by 5 (inverse generator)\n      e = e2 ^ xtime[xtime[xtime[e2 ^ e8]]];\n      ei ^= xtime[xtime[ei]];\n    }\n  }\n}\n\n/**\n * Generates a key schedule using the AES key expansion algorithm.\n *\n * The AES algorithm takes the Cipher Key, K, and performs a Key Expansion\n * routine to generate a key schedule. The Key Expansion generates a total\n * of Nb*(Nr + 1) words: the algorithm requires an initial set of Nb words,\n * and each of the Nr rounds requires Nb words of key data. The resulting\n * key schedule consists of a linear array of 4-byte words, denoted [wi ],\n * with i in the range 0 <= i < Nb(Nr + 1).\n *\n * KeyExpansion(byte key[4*Nk], word w[Nb*(Nr+1)], Nk)\n * AES-128 (Nb=4, Nk=4, Nr=10)\n * AES-192 (Nb=4, Nk=6, Nr=12)\n * AES-256 (Nb=4, Nk=8, Nr=14)\n * Note: Nr=Nk+6.\n *\n * Nb is the number of columns (32-bit words) comprising the State (or\n * number of bytes in a block). For AES, Nb=4.\n *\n * @param key the key to schedule (as an array of 32-bit words).\n * @param decrypt true to modify the key schedule to decrypt, false not to.\n *\n * @return the generated key schedule.\n */\nfunction _expandKey(key, decrypt) {\n  // copy the key's words to initialize the key schedule\n  var w = key.slice(0);\n\n  /* RotWord() will rotate a word, moving the first byte to the last\n    byte's position (shifting the other bytes left).\n\n    We will be getting the value of Rcon at i / Nk. 'i' will iterate\n    from Nk to (Nb * Nr+1). Nk = 4 (4 byte key), Nb = 4 (4 words in\n    a block), Nr = Nk + 6 (10). Therefore 'i' will iterate from\n    4 to 44 (exclusive). Each time we iterate 4 times, i / Nk will\n    increase by 1. We use a counter iNk to keep track of this.\n   */\n\n  // go through the rounds expanding the key\n  var temp, iNk = 1;\n  var Nk = w.length;\n  var Nr1 = Nk + 6 + 1;\n  var end = Nb * Nr1;\n  for(var i = Nk; i < end; ++i) {\n    temp = w[i - 1];\n    if(i % Nk === 0) {\n      // temp = SubWord(RotWord(temp)) ^ Rcon[i / Nk]\n      temp =\n        sbox[temp >>> 16 & 255] << 24 ^\n        sbox[temp >>> 8 & 255] << 16 ^\n        sbox[temp & 255] << 8 ^\n        sbox[temp >>> 24] ^ (rcon[iNk] << 24);\n      iNk++;\n    } else if(Nk > 6 && (i % Nk === 4)) {\n      // temp = SubWord(temp)\n      temp =\n        sbox[temp >>> 24] << 24 ^\n        sbox[temp >>> 16 & 255] << 16 ^\n        sbox[temp >>> 8 & 255] << 8 ^\n        sbox[temp & 255];\n    }\n    w[i] = w[i - Nk] ^ temp;\n  }\n\n  /* When we are updating a cipher block we always use the code path for\n     encryption whether we are decrypting or not (to shorten code and\n     simplify the generation of look up tables). However, because there\n     are differences in the decryption algorithm, other than just swapping\n     in different look up tables, we must transform our key schedule to\n     account for these changes:\n\n     1. The decryption algorithm gets its key rounds in reverse order.\n     2. The decryption algorithm adds the round key before mixing columns\n       instead of afterwards.\n\n     We don't need to modify our key schedule to handle the first case,\n     we can just traverse the key schedule in reverse order when decrypting.\n\n     The second case requires a little work.\n\n     The tables we built for performing rounds will take an input and then\n     perform SubBytes() and MixColumns() or, for the decrypt version,\n     InvSubBytes() and InvMixColumns(). But the decrypt algorithm requires\n     us to AddRoundKey() before InvMixColumns(). This means we'll need to\n     apply some transformations to the round key to inverse-mix its columns\n     so they'll be correct for moving AddRoundKey() to after the state has\n     had its columns inverse-mixed.\n\n     To inverse-mix the columns of the state when we're decrypting we use a\n     lookup table that will apply InvSubBytes() and InvMixColumns() at the\n     same time. However, the round key's bytes are not inverse-substituted\n     in the decryption algorithm. To get around this problem, we can first\n     substitute the bytes in the round key so that when we apply the\n     transformation via the InvSubBytes()+InvMixColumns() table, it will\n     undo our substitution leaving us with the original value that we\n     want -- and then inverse-mix that value.\n\n     This change will correctly alter our key schedule so that we can XOR\n     each round key with our already transformed decryption state. This\n     allows us to use the same code path as the encryption algorithm.\n\n     We make one more change to the decryption key. Since the decryption\n     algorithm runs in reverse from the encryption algorithm, we reverse\n     the order of the round keys to avoid having to iterate over the key\n     schedule backwards when running the encryption algorithm later in\n     decryption mode. In addition to reversing the order of the round keys,\n     we also swap each round key's 2nd and 4th rows. See the comments\n     section where rounds are performed for more details about why this is\n     done. These changes are done inline with the other substitution\n     described above.\n  */\n  if(decrypt) {\n    var tmp;\n    var m0 = imix[0];\n    var m1 = imix[1];\n    var m2 = imix[2];\n    var m3 = imix[3];\n    var wnew = w.slice(0);\n    end = w.length;\n    for(var i = 0, wi = end - Nb; i < end; i += Nb, wi -= Nb) {\n      // do not sub the first or last round key (round keys are Nb\n      // words) as no column mixing is performed before they are added,\n      // but do change the key order\n      if(i === 0 || i === (end - Nb)) {\n        wnew[i] = w[wi];\n        wnew[i + 1] = w[wi + 3];\n        wnew[i + 2] = w[wi + 2];\n        wnew[i + 3] = w[wi + 1];\n      } else {\n        // substitute each round key byte because the inverse-mix\n        // table will inverse-substitute it (effectively cancel the\n        // substitution because round key bytes aren't sub'd in\n        // decryption mode) and swap indexes 3 and 1\n        for(var n = 0; n < Nb; ++n) {\n          tmp = w[wi + n];\n          wnew[i + (3&-n)] =\n            m0[sbox[tmp >>> 24]] ^\n            m1[sbox[tmp >>> 16 & 255]] ^\n            m2[sbox[tmp >>> 8 & 255]] ^\n            m3[sbox[tmp & 255]];\n        }\n      }\n    }\n    w = wnew;\n  }\n\n  return w;\n}\n\n/**\n * Updates a single block (16 bytes) using AES. The update will either\n * encrypt or decrypt the block.\n *\n * @param w the key schedule.\n * @param input the input block (an array of 32-bit words).\n * @param output the updated output block.\n * @param decrypt true to decrypt the block, false to encrypt it.\n */\nfunction _updateBlock(w, input, output, decrypt) {\n  /*\n  Cipher(byte in[4*Nb], byte out[4*Nb], word w[Nb*(Nr+1)])\n  begin\n    byte state[4,Nb]\n    state = in\n    AddRoundKey(state, w[0, Nb-1])\n    for round = 1 step 1 to Nr-1\n      SubBytes(state)\n      ShiftRows(state)\n      MixColumns(state)\n      AddRoundKey(state, w[round*Nb, (round+1)*Nb-1])\n    end for\n    SubBytes(state)\n    ShiftRows(state)\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n    out = state\n  end\n\n  InvCipher(byte in[4*Nb], byte out[4*Nb], word w[Nb*(Nr+1)])\n  begin\n    byte state[4,Nb]\n    state = in\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n    for round = Nr-1 step -1 downto 1\n      InvShiftRows(state)\n      InvSubBytes(state)\n      AddRoundKey(state, w[round*Nb, (round+1)*Nb-1])\n      InvMixColumns(state)\n    end for\n    InvShiftRows(state)\n    InvSubBytes(state)\n    AddRoundKey(state, w[0, Nb-1])\n    out = state\n  end\n  */\n\n  // Encrypt: AddRoundKey(state, w[0, Nb-1])\n  // Decrypt: AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n  var Nr = w.length / 4 - 1;\n  var m0, m1, m2, m3, sub;\n  if(decrypt) {\n    m0 = imix[0];\n    m1 = imix[1];\n    m2 = imix[2];\n    m3 = imix[3];\n    sub = isbox;\n  } else {\n    m0 = mix[0];\n    m1 = mix[1];\n    m2 = mix[2];\n    m3 = mix[3];\n    sub = sbox;\n  }\n  var a, b, c, d, a2, b2, c2;\n  a = input[0] ^ w[0];\n  b = input[decrypt ? 3 : 1] ^ w[1];\n  c = input[2] ^ w[2];\n  d = input[decrypt ? 1 : 3] ^ w[3];\n  var i = 3;\n\n  /* In order to share code we follow the encryption algorithm when both\n    encrypting and decrypting. To account for the changes required in the\n    decryption algorithm, we use different lookup tables when decrypting\n    and use a modified key schedule to account for the difference in the\n    order of transformations applied when performing rounds. We also get\n    key rounds in reverse order (relative to encryption). */\n  for(var round = 1; round < Nr; ++round) {\n    /* As described above, we'll be using table lookups to perform the\n      column mixing. Each column is stored as a word in the state (the\n      array 'input' has one column as a word at each index). In order to\n      mix a column, we perform these transformations on each row in c,\n      which is 1 byte in each word. The new column for c0 is c'0:\n\n               m0      m1      m2      m3\n      r0,c'0 = 2*r0,c0 + 3*r1,c0 + 1*r2,c0 + 1*r3,c0\n      r1,c'0 = 1*r0,c0 + 2*r1,c0 + 3*r2,c0 + 1*r3,c0\n      r2,c'0 = 1*r0,c0 + 1*r1,c0 + 2*r2,c0 + 3*r3,c0\n      r3,c'0 = 3*r0,c0 + 1*r1,c0 + 1*r2,c0 + 2*r3,c0\n\n      So using mix tables where c0 is a word with r0 being its upper\n      8 bits and r3 being its lower 8 bits:\n\n      m0[c0 >> 24] will yield this word: [2*r0,1*r0,1*r0,3*r0]\n      ...\n      m3[c0 & 255] will yield this word: [1*r3,1*r3,3*r3,2*r3]\n\n      Therefore to mix the columns in each word in the state we\n      do the following (& 255 omitted for brevity):\n      c'0,r0 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r1 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r2 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r3 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n\n      However, before mixing, the algorithm requires us to perform\n      ShiftRows(). The ShiftRows() transformation cyclically shifts the\n      last 3 rows of the state over different offsets. The first row\n      (r = 0) is not shifted.\n\n      s'_r,c = s_r,(c + shift(r, Nb) mod Nb\n      for 0 < r < 4 and 0 <= c < Nb and\n      shift(1, 4) = 1\n      shift(2, 4) = 2\n      shift(3, 4) = 3.\n\n      This causes the first byte in r = 1 to be moved to the end of\n      the row, the first 2 bytes in r = 2 to be moved to the end of\n      the row, the first 3 bytes in r = 3 to be moved to the end of\n      the row:\n\n      r1: [c0 c1 c2 c3] => [c1 c2 c3 c0]\n      r2: [c0 c1 c2 c3]    [c2 c3 c0 c1]\n      r3: [c0 c1 c2 c3]    [c3 c0 c1 c2]\n\n      We can make these substitutions inline with our column mixing to\n      generate an updated set of equations to produce each word in the\n      state (note the columns have changed positions):\n\n      c0 c1 c2 c3 => c0 c1 c2 c3\n      c0 c1 c2 c3    c1 c2 c3 c0  (cycled 1 byte)\n      c0 c1 c2 c3    c2 c3 c0 c1  (cycled 2 bytes)\n      c0 c1 c2 c3    c3 c0 c1 c2  (cycled 3 bytes)\n\n      Therefore:\n\n      c'0 = 2*r0,c0 + 3*r1,c1 + 1*r2,c2 + 1*r3,c3\n      c'0 = 1*r0,c0 + 2*r1,c1 + 3*r2,c2 + 1*r3,c3\n      c'0 = 1*r0,c0 + 1*r1,c1 + 2*r2,c2 + 3*r3,c3\n      c'0 = 3*r0,c0 + 1*r1,c1 + 1*r2,c2 + 2*r3,c3\n\n      c'1 = 2*r0,c1 + 3*r1,c2 + 1*r2,c3 + 1*r3,c0\n      c'1 = 1*r0,c1 + 2*r1,c2 + 3*r2,c3 + 1*r3,c0\n      c'1 = 1*r0,c1 + 1*r1,c2 + 2*r2,c3 + 3*r3,c0\n      c'1 = 3*r0,c1 + 1*r1,c2 + 1*r2,c3 + 2*r3,c0\n\n      ... and so forth for c'2 and c'3. The important distinction is\n      that the columns are cycling, with c0 being used with the m0\n      map when calculating c0, but c1 being used with the m0 map when\n      calculating c1 ... and so forth.\n\n      When performing the inverse we transform the mirror image and\n      skip the bottom row, instead of the top one, and move upwards:\n\n      c3 c2 c1 c0 => c0 c3 c2 c1  (cycled 3 bytes) *same as encryption\n      c3 c2 c1 c0    c1 c0 c3 c2  (cycled 2 bytes)\n      c3 c2 c1 c0    c2 c1 c0 c3  (cycled 1 byte)  *same as encryption\n      c3 c2 c1 c0    c3 c2 c1 c0\n\n      If you compare the resulting matrices for ShiftRows()+MixColumns()\n      and for InvShiftRows()+InvMixColumns() the 2nd and 4th columns are\n      different (in encrypt mode vs. decrypt mode). So in order to use\n      the same code to handle both encryption and decryption, we will\n      need to do some mapping.\n\n      If in encryption mode we let a=c0, b=c1, c=c2, d=c3, and r<N> be\n      a row number in the state, then the resulting matrix in encryption\n      mode for applying the above transformations would be:\n\n      r1: a b c d\n      r2: b c d a\n      r3: c d a b\n      r4: d a b c\n\n      If we did the same in decryption mode we would get:\n\n      r1: a d c b\n      r2: b a d c\n      r3: c b a d\n      r4: d c b a\n\n      If instead we swap d and b (set b=c3 and d=c1), then we get:\n\n      r1: a b c d\n      r2: d a b c\n      r3: c d a b\n      r4: b c d a\n\n      Now the 1st and 3rd rows are the same as the encryption matrix. All\n      we need to do then to make the mapping exactly the same is to swap\n      the 2nd and 4th rows when in decryption mode. To do this without\n      having to do it on each iteration, we swapped the 2nd and 4th rows\n      in the decryption key schedule. We also have to do the swap above\n      when we first pull in the input and when we set the final output. */\n    a2 =\n      m0[a >>> 24] ^\n      m1[b >>> 16 & 255] ^\n      m2[c >>> 8 & 255] ^\n      m3[d & 255] ^ w[++i];\n    b2 =\n      m0[b >>> 24] ^\n      m1[c >>> 16 & 255] ^\n      m2[d >>> 8 & 255] ^\n      m3[a & 255] ^ w[++i];\n    c2 =\n      m0[c >>> 24] ^\n      m1[d >>> 16 & 255] ^\n      m2[a >>> 8 & 255] ^\n      m3[b & 255] ^ w[++i];\n    d =\n      m0[d >>> 24] ^\n      m1[a >>> 16 & 255] ^\n      m2[b >>> 8 & 255] ^\n      m3[c & 255] ^ w[++i];\n    a = a2;\n    b = b2;\n    c = c2;\n  }\n\n  /*\n    Encrypt:\n    SubBytes(state)\n    ShiftRows(state)\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n\n    Decrypt:\n    InvShiftRows(state)\n    InvSubBytes(state)\n    AddRoundKey(state, w[0, Nb-1])\n   */\n  // Note: rows are shifted inline\n  output[0] =\n    (sub[a >>> 24] << 24) ^\n    (sub[b >>> 16 & 255] << 16) ^\n    (sub[c >>> 8 & 255] << 8) ^\n    (sub[d & 255]) ^ w[++i];\n  output[decrypt ? 3 : 1] =\n    (sub[b >>> 24] << 24) ^\n    (sub[c >>> 16 & 255] << 16) ^\n    (sub[d >>> 8 & 255] << 8) ^\n    (sub[a & 255]) ^ w[++i];\n  output[2] =\n    (sub[c >>> 24] << 24) ^\n    (sub[d >>> 16 & 255] << 16) ^\n    (sub[a >>> 8 & 255] << 8) ^\n    (sub[b & 255]) ^ w[++i];\n  output[decrypt ? 1 : 3] =\n    (sub[d >>> 24] << 24) ^\n    (sub[a >>> 16 & 255] << 16) ^\n    (sub[b >>> 8 & 255] << 8) ^\n    (sub[c & 255]) ^ w[++i];\n}\n\n/**\n * Deprecated. Instead, use:\n *\n * forge.cipher.createCipher('AES-<mode>', key);\n * forge.cipher.createDecipher('AES-<mode>', key);\n *\n * Creates a deprecated AES cipher object. This object's mode will default to\n * CBC (cipher-block-chaining).\n *\n * The key and iv may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param options the options to use.\n *          key the symmetric key to use.\n *          output the buffer to write to.\n *          decrypt true for decryption, false for encryption.\n *          mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nfunction _createCipher(options) {\n  options = options || {};\n  var mode = (options.mode || 'CBC').toUpperCase();\n  var algorithm = 'AES-' + mode;\n\n  var cipher;\n  if(options.decrypt) {\n    cipher = forge.cipher.createDecipher(algorithm, options.key);\n  } else {\n    cipher = forge.cipher.createCipher(algorithm, options.key);\n  }\n\n  // backwards compatible start API\n  var start = cipher.start;\n  cipher.start = function(iv, options) {\n    // backwards compatibility: support second arg as output buffer\n    var output = null;\n    if(options instanceof forge.util.ByteBuffer) {\n      output = options;\n      options = {};\n    }\n    options = options || {};\n    options.output = output;\n    options.iv = iv;\n    start.call(cipher, options);\n  };\n\n  return cipher;\n}\n","/**\n * A Javascript implementation of AES Cipher Suites for TLS.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2009-2015 Digital Bazaar, Inc.\n *\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./tls');\n\nvar tls = module.exports = forge.tls;\n\n/**\n * Supported cipher suites.\n */\ntls.CipherSuites['TLS_RSA_WITH_AES_128_CBC_SHA'] = {\n  id: [0x00, 0x2f],\n  name: 'TLS_RSA_WITH_AES_128_CBC_SHA',\n  initSecurityParameters: function(sp) {\n    sp.bulk_cipher_algorithm = tls.BulkCipherAlgorithm.aes;\n    sp.cipher_type = tls.CipherType.block;\n    sp.enc_key_length = 16;\n    sp.block_length = 16;\n    sp.fixed_iv_length = 16;\n    sp.record_iv_length = 16;\n    sp.mac_algorithm = tls.MACAlgorithm.hmac_sha1;\n    sp.mac_length = 20;\n    sp.mac_key_length = 20;\n  },\n  initConnectionState: initConnectionState\n};\ntls.CipherSuites['TLS_RSA_WITH_AES_256_CBC_SHA'] = {\n  id: [0x00, 0x35],\n  name: 'TLS_RSA_WITH_AES_256_CBC_SHA',\n  initSecurityParameters: function(sp) {\n    sp.bulk_cipher_algorithm = tls.BulkCipherAlgorithm.aes;\n    sp.cipher_type = tls.CipherType.block;\n    sp.enc_key_length = 32;\n    sp.block_length = 16;\n    sp.fixed_iv_length = 16;\n    sp.record_iv_length = 16;\n    sp.mac_algorithm = tls.MACAlgorithm.hmac_sha1;\n    sp.mac_length = 20;\n    sp.mac_key_length = 20;\n  },\n  initConnectionState: initConnectionState\n};\n\nfunction initConnectionState(state, c, sp) {\n  var client = (c.entity === forge.tls.ConnectionEnd.client);\n\n  // cipher setup\n  state.read.cipherState = {\n    init: false,\n    cipher: forge.cipher.createDecipher('AES-CBC', client ?\n      sp.keys.server_write_key : sp.keys.client_write_key),\n    iv: client ? sp.keys.server_write_IV : sp.keys.client_write_IV\n  };\n  state.write.cipherState = {\n    init: false,\n    cipher: forge.cipher.createCipher('AES-CBC', client ?\n      sp.keys.client_write_key : sp.keys.server_write_key),\n    iv: client ? sp.keys.client_write_IV : sp.keys.server_write_IV\n  };\n  state.read.cipherFunction = decrypt_aes_cbc_sha1;\n  state.write.cipherFunction = encrypt_aes_cbc_sha1;\n\n  // MAC setup\n  state.read.macLength = state.write.macLength = sp.mac_length;\n  state.read.macFunction = state.write.macFunction = tls.hmac_sha1;\n}\n\n/**\n * Encrypts the TLSCompressed record into a TLSCipherText record using AES\n * in CBC mode.\n *\n * @param record the TLSCompressed record to encrypt.\n * @param s the ConnectionState to use.\n *\n * @return true on success, false on failure.\n */\nfunction encrypt_aes_cbc_sha1(record, s) {\n  var rval = false;\n\n  // append MAC to fragment, update sequence number\n  var mac = s.macFunction(s.macKey, s.sequenceNumber, record);\n  record.fragment.putBytes(mac);\n  s.updateSequenceNumber();\n\n  // TLS 1.1+ use an explicit IV every time to protect against CBC attacks\n  var iv;\n  if(record.version.minor === tls.Versions.TLS_1_0.minor) {\n    // use the pre-generated IV when initializing for TLS 1.0, otherwise use\n    // the residue from the previous encryption\n    iv = s.cipherState.init ? null : s.cipherState.iv;\n  } else {\n    iv = forge.random.getBytesSync(16);\n  }\n\n  s.cipherState.init = true;\n\n  // start cipher\n  var cipher = s.cipherState.cipher;\n  cipher.start({iv: iv});\n\n  // TLS 1.1+ write IV into output\n  if(record.version.minor >= tls.Versions.TLS_1_1.minor) {\n    cipher.output.putBytes(iv);\n  }\n\n  // do encryption (default padding is appropriate)\n  cipher.update(record.fragment);\n  if(cipher.finish(encrypt_aes_cbc_sha1_padding)) {\n    // set record fragment to encrypted output\n    record.fragment = cipher.output;\n    record.length = record.fragment.length();\n    rval = true;\n  }\n\n  return rval;\n}\n\n/**\n * Handles padding for aes_cbc_sha1 in encrypt mode.\n *\n * @param blockSize the block size.\n * @param input the input buffer.\n * @param decrypt true in decrypt mode, false in encrypt mode.\n *\n * @return true on success, false on failure.\n */\nfunction encrypt_aes_cbc_sha1_padding(blockSize, input, decrypt) {\n  /* The encrypted data length (TLSCiphertext.length) is one more than the sum\n   of SecurityParameters.block_length, TLSCompressed.length,\n   SecurityParameters.mac_length, and padding_length.\n\n   The padding may be any length up to 255 bytes long, as long as it results in\n   the TLSCiphertext.length being an integral multiple of the block length.\n   Lengths longer than necessary might be desirable to frustrate attacks on a\n   protocol based on analysis of the lengths of exchanged messages. Each uint8\n   in the padding data vector must be filled with the padding length value.\n\n   The padding length should be such that the total size of the\n   GenericBlockCipher structure is a multiple of the cipher's block length.\n   Legal values range from zero to 255, inclusive. This length specifies the\n   length of the padding field exclusive of the padding_length field itself.\n\n   This is slightly different from PKCS#7 because the padding value is 1\n   less than the actual number of padding bytes if you include the\n   padding_length uint8 itself as a padding byte. */\n  if(!decrypt) {\n    // get the number of padding bytes required to reach the blockSize and\n    // subtract 1 for the padding value (to make room for the padding_length\n    // uint8)\n    var padding = blockSize - (input.length() % blockSize);\n    input.fillWithByte(padding - 1, padding);\n  }\n  return true;\n}\n\n/**\n * Handles padding for aes_cbc_sha1 in decrypt mode.\n *\n * @param blockSize the block size.\n * @param output the output buffer.\n * @param decrypt true in decrypt mode, false in encrypt mode.\n *\n * @return true on success, false on failure.\n */\nfunction decrypt_aes_cbc_sha1_padding(blockSize, output, decrypt) {\n  var rval = true;\n  if(decrypt) {\n    /* The last byte in the output specifies the number of padding bytes not\n      including itself. Each of the padding bytes has the same value as that\n      last byte (known as the padding_length). Here we check all padding\n      bytes to ensure they have the value of padding_length even if one of\n      them is bad in order to ward-off timing attacks. */\n    var len = output.length();\n    var paddingLength = output.last();\n    for(var i = len - 1 - paddingLength; i < len - 1; ++i) {\n      rval = rval && (output.at(i) == paddingLength);\n    }\n    if(rval) {\n      // trim off padding bytes and last padding length byte\n      output.truncate(paddingLength + 1);\n    }\n  }\n  return rval;\n}\n\n/**\n * Decrypts a TLSCipherText record into a TLSCompressed record using\n * AES in CBC mode.\n *\n * @param record the TLSCipherText record to decrypt.\n * @param s the ConnectionState to use.\n *\n * @return true on success, false on failure.\n */\nfunction decrypt_aes_cbc_sha1(record, s) {\n  var rval = false;\n\n  var iv;\n  if(record.version.minor === tls.Versions.TLS_1_0.minor) {\n    // use pre-generated IV when initializing for TLS 1.0, otherwise use the\n    // residue from the previous decryption\n    iv = s.cipherState.init ? null : s.cipherState.iv;\n  } else {\n    // TLS 1.1+ use an explicit IV every time to protect against CBC attacks\n    // that is appended to the record fragment\n    iv = record.fragment.getBytes(16);\n  }\n\n  s.cipherState.init = true;\n\n  // start cipher\n  var cipher = s.cipherState.cipher;\n  cipher.start({iv: iv});\n\n  // do decryption\n  cipher.update(record.fragment);\n  rval = cipher.finish(decrypt_aes_cbc_sha1_padding);\n\n  // even if decryption fails, keep going to minimize timing attacks\n\n  // decrypted data:\n  // first (len - 20) bytes = application data\n  // last 20 bytes          = MAC\n  var macLen = s.macLength;\n\n  // create a random MAC to check against should the mac length check fail\n  // Note: do this regardless of the failure to keep timing consistent\n  var mac = forge.random.getBytesSync(macLen);\n\n  // get fragment and mac\n  var len = cipher.output.length();\n  if(len >= macLen) {\n    record.fragment = cipher.output.getBytes(len - macLen);\n    mac = cipher.output.getBytes(macLen);\n  } else {\n    // bad data, but get bytes anyway to try to keep timing consistent\n    record.fragment = cipher.output.getBytes();\n  }\n  record.fragment = forge.util.createBuffer(record.fragment);\n  record.length = record.fragment.length();\n\n  // see if data integrity checks out, update sequence number\n  var mac2 = s.macFunction(s.macKey, s.sequenceNumber, record);\n  s.updateSequenceNumber();\n  rval = compareMacs(s.macKey, mac, mac2) && rval;\n  return rval;\n}\n\n/**\n * Safely compare two MACs. This function will compare two MACs in a way\n * that protects against timing attacks.\n *\n * TODO: Expose elsewhere as a utility API.\n *\n * See: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n *\n * @param key the MAC key to use.\n * @param mac1 as a binary-encoded string of bytes.\n * @param mac2 as a binary-encoded string of bytes.\n *\n * @return true if the MACs are the same, false if not.\n */\nfunction compareMacs(key, mac1, mac2) {\n  var hmac = forge.hmac.create();\n\n  hmac.start('SHA1', key);\n  hmac.update(mac1);\n  mac1 = hmac.digest().getBytes();\n\n  hmac.start(null, null);\n  hmac.update(mac2);\n  mac2 = hmac.digest().getBytes();\n\n  return mac1 === mac2;\n}\n","/**\n * Copyright (c) 2019 Digital Bazaar, Inc.\n */\n\nvar forge = require('./forge');\nrequire('./asn1');\nvar asn1 = forge.asn1;\n\nexports.privateKeyValidator = {\n  // PrivateKeyInfo\n  name: 'PrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'PrivateKeyInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // privateKeyAlgorithm\n    name: 'PrivateKeyInfo.privateKeyAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'privateKeyOid'\n    }]\n  }, {\n    // PrivateKey\n    name: 'PrivateKeyInfo',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'privateKey'\n  }]\n};\n\nexports.publicKeyValidator = {\n  name: 'SubjectPublicKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'subjectPublicKeyInfo',\n  value: [{\n    name: 'SubjectPublicKeyInfo.AlgorithmIdentifier',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'publicKeyOid'\n    }]\n  },\n  // capture group for ed25519PublicKey\n  {\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    composed: true,\n    captureBitStringValue: 'ed25519PublicKey'\n  }\n  // FIXME: this is capture group for rsaPublicKey, use it in this API or\n  // discard?\n  /* {\n    // subjectPublicKey\n    name: 'SubjectPublicKeyInfo.subjectPublicKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    value: [{\n      // RSAPublicKey\n      name: 'SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      optional: true,\n      captureAsn1: 'rsaPublicKey'\n    }]\n  } */\n  ]\n};\n","/**\n * Javascript implementation of Abstract Syntax Notation Number One.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n *\n * An API for storing data using the Abstract Syntax Notation Number One\n * format using DER (Distinguished Encoding Rules) encoding. This encoding is\n * commonly used to store data for PKI, i.e. X.509 Certificates, and this\n * implementation exists for that purpose.\n *\n * Abstract Syntax Notation Number One (ASN.1) is used to define the abstract\n * syntax of information without restricting the way the information is encoded\n * for transmission. It provides a standard that allows for open systems\n * communication. ASN.1 defines the syntax of information data and a number of\n * simple data types as well as a notation for describing them and specifying\n * values for them.\n *\n * The RSA algorithm creates public and private keys that are often stored in\n * X.509 or PKCS#X formats -- which use ASN.1 (encoded in DER format). This\n * class provides the most basic functionality required to store and load DSA\n * keys that are encoded according to ASN.1.\n *\n * The most common binary encodings for ASN.1 are BER (Basic Encoding Rules)\n * and DER (Distinguished Encoding Rules). DER is just a subset of BER that\n * has stricter requirements for how data must be encoded.\n *\n * Each ASN.1 structure has a tag (a byte identifying the ASN.1 structure type)\n * and a byte array for the value of this ASN1 structure which may be data or a\n * list of ASN.1 structures.\n *\n * Each ASN.1 structure using BER is (Tag-Length-Value):\n *\n * | byte 0 | bytes X | bytes Y |\n * |--------|---------|----------\n * |  tag   | length  |  value  |\n *\n * ASN.1 allows for tags to be of \"High-tag-number form\" which allows a tag to\n * be two or more octets, but that is not supported by this class. A tag is\n * only 1 byte. Bits 1-5 give the tag number (ie the data type within a\n * particular 'class'), 6 indicates whether or not the ASN.1 value is\n * constructed from other ASN.1 values, and bits 7 and 8 give the 'class'. If\n * bits 7 and 8 are both zero, the class is UNIVERSAL. If only bit 7 is set,\n * then the class is APPLICATION. If only bit 8 is set, then the class is\n * CONTEXT_SPECIFIC. If both bits 7 and 8 are set, then the class is PRIVATE.\n * The tag numbers for the data types for the class UNIVERSAL are listed below:\n *\n * UNIVERSAL 0 Reserved for use by the encoding rules\n * UNIVERSAL 1 Boolean type\n * UNIVERSAL 2 Integer type\n * UNIVERSAL 3 Bitstring type\n * UNIVERSAL 4 Octetstring type\n * UNIVERSAL 5 Null type\n * UNIVERSAL 6 Object identifier type\n * UNIVERSAL 7 Object descriptor type\n * UNIVERSAL 8 External type and Instance-of type\n * UNIVERSAL 9 Real type\n * UNIVERSAL 10 Enumerated type\n * UNIVERSAL 11 Embedded-pdv type\n * UNIVERSAL 12 UTF8String type\n * UNIVERSAL 13 Relative object identifier type\n * UNIVERSAL 14-15 Reserved for future editions\n * UNIVERSAL 16 Sequence and Sequence-of types\n * UNIVERSAL 17 Set and Set-of types\n * UNIVERSAL 18-22, 25-30 Character string types\n * UNIVERSAL 23-24 Time types\n *\n * The length of an ASN.1 structure is specified after the tag identifier.\n * There is a definite form and an indefinite form. The indefinite form may\n * be used if the encoding is constructed and not all immediately available.\n * The indefinite form is encoded using a length byte with only the 8th bit\n * set. The end of the constructed object is marked using end-of-contents\n * octets (two zero bytes).\n *\n * The definite form looks like this:\n *\n * The length may take up 1 or more bytes, it depends on the length of the\n * value of the ASN.1 structure. DER encoding requires that if the ASN.1\n * structure has a value that has a length greater than 127, more than 1 byte\n * will be used to store its length, otherwise just one byte will be used.\n * This is strict.\n *\n * In the case that the length of the ASN.1 value is less than 127, 1 octet\n * (byte) is used to store the \"short form\" length. The 8th bit has a value of\n * 0 indicating the length is \"short form\" and not \"long form\" and bits 7-1\n * give the length of the data. (The 8th bit is the left-most, most significant\n * bit: also known as big endian or network format).\n *\n * In the case that the length of the ASN.1 value is greater than 127, 2 to\n * 127 octets (bytes) are used to store the \"long form\" length. The first\n * byte's 8th bit is set to 1 to indicate the length is \"long form.\" Bits 7-1\n * give the number of additional octets. All following octets are in base 256\n * with the most significant digit first (typical big-endian binary unsigned\n * integer storage). So, for instance, if the length of a value was 257, the\n * first byte would be set to:\n *\n * 10000010 = 130 = 0x82.\n *\n * This indicates there are 2 octets (base 256) for the length. The second and\n * third bytes (the octets just mentioned) would store the length in base 256:\n *\n * octet 2: 00000001 = 1 * 256^1 = 256\n * octet 3: 00000001 = 1 * 256^0 = 1\n * total = 257\n *\n * The algorithm for converting a js integer value of 257 to base-256 is:\n *\n * var value = 257;\n * var bytes = [];\n * bytes[0] = (value >>> 8) & 0xFF; // most significant byte first\n * bytes[1] = value & 0xFF;        // least significant byte last\n *\n * On the ASN.1 UNIVERSAL Object Identifier (OID) type:\n *\n * An OID can be written like: \"value1.value2.value3...valueN\"\n *\n * The DER encoding rules:\n *\n * The first byte has the value 40 * value1 + value2.\n * The following bytes, if any, encode the remaining values. Each value is\n * encoded in base 128, most significant digit first (big endian), with as\n * few digits as possible, and the most significant bit of each byte set\n * to 1 except the last in each value's encoding. For example: Given the\n * OID \"1.2.840.113549\", its DER encoding is (remember each byte except the\n * last one in each encoding is OR'd with 0x80):\n *\n * byte 1: 40 * 1 + 2 = 42 = 0x2A.\n * bytes 2-3: 128 * 6 + 72 = 840 = 6 72 = 6 72 = 0x0648 = 0x8648\n * bytes 4-6: 16384 * 6 + 128 * 119 + 13 = 6 119 13 = 0x06770D = 0x86F70D\n *\n * The final value is: 0x2A864886F70D.\n * The full OID (including ASN.1 tag and length of 6 bytes) is:\n * 0x06062A864886F70D\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./oids');\n\n/* ASN.1 API */\nvar asn1 = module.exports = forge.asn1 = forge.asn1 || {};\n\n/**\n * ASN.1 classes.\n */\nasn1.Class = {\n  UNIVERSAL:        0x00,\n  APPLICATION:      0x40,\n  CONTEXT_SPECIFIC: 0x80,\n  PRIVATE:          0xC0\n};\n\n/**\n * ASN.1 types. Not all types are supported by this implementation, only\n * those necessary to implement a simple PKI are implemented.\n */\nasn1.Type = {\n  NONE:             0,\n  BOOLEAN:          1,\n  INTEGER:          2,\n  BITSTRING:        3,\n  OCTETSTRING:      4,\n  NULL:             5,\n  OID:              6,\n  ODESC:            7,\n  EXTERNAL:         8,\n  REAL:             9,\n  ENUMERATED:      10,\n  EMBEDDED:        11,\n  UTF8:            12,\n  ROID:            13,\n  SEQUENCE:        16,\n  SET:             17,\n  PRINTABLESTRING: 19,\n  IA5STRING:       22,\n  UTCTIME:         23,\n  GENERALIZEDTIME: 24,\n  BMPSTRING:       30\n};\n\n/**\n * Creates a new asn1 object.\n *\n * @param tagClass the tag class for the object.\n * @param type the data type (tag number) for the object.\n * @param constructed true if the asn1 object is in constructed form.\n * @param value the value for the object, if it is not constructed.\n * @param [options] the options to use:\n *          [bitStringContents] the plain BIT STRING content including padding\n *            byte.\n *\n * @return the asn1 object.\n */\nasn1.create = function(tagClass, type, constructed, value, options) {\n  /* An asn1 object has a tagClass, a type, a constructed flag, and a\n    value. The value's type depends on the constructed flag. If\n    constructed, it will contain a list of other asn1 objects. If not,\n    it will contain the ASN.1 value as an array of bytes formatted\n    according to the ASN.1 data type. */\n\n  // remove undefined values\n  if(forge.util.isArray(value)) {\n    var tmp = [];\n    for(var i = 0; i < value.length; ++i) {\n      if(value[i] !== undefined) {\n        tmp.push(value[i]);\n      }\n    }\n    value = tmp;\n  }\n\n  var obj = {\n    tagClass: tagClass,\n    type: type,\n    constructed: constructed,\n    composed: constructed || forge.util.isArray(value),\n    value: value\n  };\n  if(options && 'bitStringContents' in options) {\n    // TODO: copy byte buffer if it's a buffer not a string\n    obj.bitStringContents = options.bitStringContents;\n    // TODO: add readonly flag to avoid this overhead\n    // save copy to detect changes\n    obj.original = asn1.copy(obj);\n  }\n  return obj;\n};\n\n/**\n * Copies an asn1 object.\n *\n * @param obj the asn1 object.\n * @param [options] copy options:\n *          [excludeBitStringContents] true to not copy bitStringContents\n *\n * @return the a copy of the asn1 object.\n */\nasn1.copy = function(obj, options) {\n  var copy;\n\n  if(forge.util.isArray(obj)) {\n    copy = [];\n    for(var i = 0; i < obj.length; ++i) {\n      copy.push(asn1.copy(obj[i], options));\n    }\n    return copy;\n  }\n\n  if(typeof obj === 'string') {\n    // TODO: copy byte buffer if it's a buffer not a string\n    return obj;\n  }\n\n  copy = {\n    tagClass: obj.tagClass,\n    type: obj.type,\n    constructed: obj.constructed,\n    composed: obj.composed,\n    value: asn1.copy(obj.value, options)\n  };\n  if(options && !options.excludeBitStringContents) {\n    // TODO: copy byte buffer if it's a buffer not a string\n    copy.bitStringContents = obj.bitStringContents;\n  }\n  return copy;\n};\n\n/**\n * Compares asn1 objects for equality.\n *\n * Note this function does not run in constant time.\n *\n * @param obj1 the first asn1 object.\n * @param obj2 the second asn1 object.\n * @param [options] compare options:\n *          [includeBitStringContents] true to compare bitStringContents\n *\n * @return true if the asn1 objects are equal.\n */\nasn1.equals = function(obj1, obj2, options) {\n  if(forge.util.isArray(obj1)) {\n    if(!forge.util.isArray(obj2)) {\n      return false;\n    }\n    if(obj1.length !== obj2.length) {\n      return false;\n    }\n    for(var i = 0; i < obj1.length; ++i) {\n      if(!asn1.equals(obj1[i], obj2[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  if(typeof obj1 !== typeof obj2) {\n    return false;\n  }\n\n  if(typeof obj1 === 'string') {\n    return obj1 === obj2;\n  }\n\n  var equal = obj1.tagClass === obj2.tagClass &&\n    obj1.type === obj2.type &&\n    obj1.constructed === obj2.constructed &&\n    obj1.composed === obj2.composed &&\n    asn1.equals(obj1.value, obj2.value);\n  if(options && options.includeBitStringContents) {\n    equal = equal && (obj1.bitStringContents === obj2.bitStringContents);\n  }\n\n  return equal;\n};\n\n/**\n * Gets the length of a BER-encoded ASN.1 value.\n *\n * In case the length is not specified, undefined is returned.\n *\n * @param b the BER-encoded ASN.1 byte buffer, starting with the first\n *          length byte.\n *\n * @return the length of the BER-encoded ASN.1 value or undefined.\n */\nasn1.getBerValueLength = function(b) {\n  // TODO: move this function and related DER/BER functions to a der.js\n  // file; better abstract ASN.1 away from der/ber.\n  var b2 = b.getByte();\n  if(b2 === 0x80) {\n    return undefined;\n  }\n\n  // see if the length is \"short form\" or \"long form\" (bit 8 set)\n  var length;\n  var longForm = b2 & 0x80;\n  if(!longForm) {\n    // length is just the first byte\n    length = b2;\n  } else {\n    // the number of bytes the length is specified in bits 7 through 1\n    // and each length byte is in big-endian base-256\n    length = b.getInt((b2 & 0x7F) << 3);\n  }\n  return length;\n};\n\n/**\n * Check if the byte buffer has enough bytes. Throws an Error if not.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the bytes remaining in the current parsing state.\n * @param n the number of bytes the buffer must have.\n */\nfunction _checkBufferLength(bytes, remaining, n) {\n  if(n > remaining) {\n    var error = new Error('Too few bytes to parse DER.');\n    error.available = bytes.length();\n    error.remaining = remaining;\n    error.requested = n;\n    throw error;\n  }\n}\n\n/**\n * Gets the length of a BER-encoded ASN.1 value.\n *\n * In case the length is not specified, undefined is returned.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the bytes remaining in the current parsing state.\n *\n * @return the length of the BER-encoded ASN.1 value or undefined.\n */\nvar _getValueLength = function(bytes, remaining) {\n  // TODO: move this function and related DER/BER functions to a der.js\n  // file; better abstract ASN.1 away from der/ber.\n  // fromDer already checked that this byte exists\n  var b2 = bytes.getByte();\n  remaining--;\n  if(b2 === 0x80) {\n    return undefined;\n  }\n\n  // see if the length is \"short form\" or \"long form\" (bit 8 set)\n  var length;\n  var longForm = b2 & 0x80;\n  if(!longForm) {\n    // length is just the first byte\n    length = b2;\n  } else {\n    // the number of bytes the length is specified in bits 7 through 1\n    // and each length byte is in big-endian base-256\n    var longFormBytes = b2 & 0x7F;\n    _checkBufferLength(bytes, remaining, longFormBytes);\n    length = bytes.getInt(longFormBytes << 3);\n  }\n  // FIXME: this will only happen for 32 bit getInt with high bit set\n  if(length < 0) {\n    throw new Error('Negative length: ' + length);\n  }\n  return length;\n};\n\n/**\n * Parses an asn1 object from a byte buffer in DER format.\n *\n * @param bytes the byte buffer to parse from.\n * @param [strict] true to be strict when checking value lengths, false to\n *          allow truncated values (default: true).\n * @param [options] object with options or boolean strict flag\n *          [strict] true to be strict when checking value lengths, false to\n *            allow truncated values (default: true).\n *          [parseAllBytes] true to ensure all bytes are parsed\n *            (default: true)\n *          [decodeBitStrings] true to attempt to decode the content of\n *            BIT STRINGs (not OCTET STRINGs) using strict mode. Note that\n *            without schema support to understand the data context this can\n *            erroneously decode values that happen to be valid ASN.1. This\n *            flag will be deprecated or removed as soon as schema support is\n *            available. (default: true)\n *\n * @throws Will throw an error for various malformed input conditions.\n *\n * @return the parsed asn1 object.\n */\nasn1.fromDer = function(bytes, options) {\n  if(options === undefined) {\n    options = {\n      strict: true,\n      parseAllBytes: true,\n      decodeBitStrings: true\n    };\n  }\n  if(typeof options === 'boolean') {\n    options = {\n      strict: options,\n      parseAllBytes: true,\n      decodeBitStrings: true\n    };\n  }\n  if(!('strict' in options)) {\n    options.strict = true;\n  }\n  if(!('parseAllBytes' in options)) {\n    options.parseAllBytes = true;\n  }\n  if(!('decodeBitStrings' in options)) {\n    options.decodeBitStrings = true;\n  }\n\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  var byteCount = bytes.length();\n  var value = _fromDer(bytes, bytes.length(), 0, options);\n  if(options.parseAllBytes && bytes.length() !== 0) {\n    var error = new Error('Unparsed DER bytes remain after ASN.1 parsing.');\n    error.byteCount = byteCount;\n    error.remaining = bytes.length();\n    throw error;\n  }\n  return value;\n};\n\n/**\n * Internal function to parse an asn1 object from a byte buffer in DER format.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the number of bytes remaining for this chunk.\n * @param depth the current parsing depth.\n * @param options object with same options as fromDer().\n *\n * @return the parsed asn1 object.\n */\nfunction _fromDer(bytes, remaining, depth, options) {\n  // temporary storage for consumption calculations\n  var start;\n\n  // minimum length for ASN.1 DER structure is 2\n  _checkBufferLength(bytes, remaining, 2);\n\n  // get the first byte\n  var b1 = bytes.getByte();\n  // consumed one byte\n  remaining--;\n\n  // get the tag class\n  var tagClass = (b1 & 0xC0);\n\n  // get the type (bits 1-5)\n  var type = b1 & 0x1F;\n\n  // get the variable value length and adjust remaining bytes\n  start = bytes.length();\n  var length = _getValueLength(bytes, remaining);\n  remaining -= start - bytes.length();\n\n  // ensure there are enough bytes to get the value\n  if(length !== undefined && length > remaining) {\n    if(options.strict) {\n      var error = new Error('Too few bytes to read ASN.1 value.');\n      error.available = bytes.length();\n      error.remaining = remaining;\n      error.requested = length;\n      throw error;\n    }\n    // Note: be lenient with truncated values and use remaining state bytes\n    length = remaining;\n  }\n\n  // value storage\n  var value;\n  // possible BIT STRING contents storage\n  var bitStringContents;\n\n  // constructed flag is bit 6 (32 = 0x20) of the first byte\n  var constructed = ((b1 & 0x20) === 0x20);\n  if(constructed) {\n    // parse child asn1 objects from the value\n    value = [];\n    if(length === undefined) {\n      // asn1 object of indefinite length, read until end tag\n      for(;;) {\n        _checkBufferLength(bytes, remaining, 2);\n        if(bytes.bytes(2) === String.fromCharCode(0, 0)) {\n          bytes.getBytes(2);\n          remaining -= 2;\n          break;\n        }\n        start = bytes.length();\n        value.push(_fromDer(bytes, remaining, depth + 1, options));\n        remaining -= start - bytes.length();\n      }\n    } else {\n      // parsing asn1 object of definite length\n      while(length > 0) {\n        start = bytes.length();\n        value.push(_fromDer(bytes, length, depth + 1, options));\n        remaining -= start - bytes.length();\n        length -= start - bytes.length();\n      }\n    }\n  }\n\n  // if a BIT STRING, save the contents including padding\n  if(value === undefined && tagClass === asn1.Class.UNIVERSAL &&\n    type === asn1.Type.BITSTRING) {\n    bitStringContents = bytes.bytes(length);\n  }\n\n  // determine if a non-constructed value should be decoded as a composed\n  // value that contains other ASN.1 objects. BIT STRINGs (and OCTET STRINGs)\n  // can be used this way.\n  if(value === undefined && options.decodeBitStrings &&\n    tagClass === asn1.Class.UNIVERSAL &&\n    // FIXME: OCTET STRINGs not yet supported here\n    // .. other parts of forge expect to decode OCTET STRINGs manually\n    (type === asn1.Type.BITSTRING /*|| type === asn1.Type.OCTETSTRING*/) &&\n    length > 1) {\n    // save read position\n    var savedRead = bytes.read;\n    var savedRemaining = remaining;\n    var unused = 0;\n    if(type === asn1.Type.BITSTRING) {\n      /* The first octet gives the number of bits by which the length of the\n        bit string is less than the next multiple of eight (this is called\n        the \"number of unused bits\").\n\n        The second and following octets give the value of the bit string\n        converted to an octet string. */\n      _checkBufferLength(bytes, remaining, 1);\n      unused = bytes.getByte();\n      remaining--;\n    }\n    // if all bits are used, maybe the BIT/OCTET STRING holds ASN.1 objs\n    if(unused === 0) {\n      try {\n        // attempt to parse child asn1 object from the value\n        // (stored in array to signal composed value)\n        start = bytes.length();\n        var subOptions = {\n          // enforce strict mode to avoid parsing ASN.1 from plain data\n          strict: true,\n          decodeBitStrings: true\n        };\n        var composed = _fromDer(bytes, remaining, depth + 1, subOptions);\n        var used = start - bytes.length();\n        remaining -= used;\n        if(type == asn1.Type.BITSTRING) {\n          used++;\n        }\n\n        // if the data all decoded and the class indicates UNIVERSAL or\n        // CONTEXT_SPECIFIC then assume we've got an encapsulated ASN.1 object\n        var tc = composed.tagClass;\n        if(used === length &&\n          (tc === asn1.Class.UNIVERSAL || tc === asn1.Class.CONTEXT_SPECIFIC)) {\n          value = [composed];\n        }\n      } catch(ex) {\n      }\n    }\n    if(value === undefined) {\n      // restore read position\n      bytes.read = savedRead;\n      remaining = savedRemaining;\n    }\n  }\n\n  if(value === undefined) {\n    // asn1 not constructed or composed, get raw value\n    // TODO: do DER to OID conversion and vice-versa in .toDer?\n\n    if(length === undefined) {\n      if(options.strict) {\n        throw new Error('Non-constructed ASN.1 object of indefinite length.');\n      }\n      // be lenient and use remaining state bytes\n      length = remaining;\n    }\n\n    if(type === asn1.Type.BMPSTRING) {\n      value = '';\n      for(; length > 0; length -= 2) {\n        _checkBufferLength(bytes, remaining, 2);\n        value += String.fromCharCode(bytes.getInt16());\n        remaining -= 2;\n      }\n    } else {\n      value = bytes.getBytes(length);\n      remaining -= length;\n    }\n  }\n\n  // add BIT STRING contents if available\n  var asn1Options = bitStringContents === undefined ? null : {\n    bitStringContents: bitStringContents\n  };\n\n  // create and return asn1 object\n  return asn1.create(tagClass, type, constructed, value, asn1Options);\n}\n\n/**\n * Converts the given asn1 object to a buffer of bytes in DER format.\n *\n * @param asn1 the asn1 object to convert to bytes.\n *\n * @return the buffer of bytes.\n */\nasn1.toDer = function(obj) {\n  var bytes = forge.util.createBuffer();\n\n  // build the first byte\n  var b1 = obj.tagClass | obj.type;\n\n  // for storing the ASN.1 value\n  var value = forge.util.createBuffer();\n\n  // use BIT STRING contents if available and data not changed\n  var useBitStringContents = false;\n  if('bitStringContents' in obj) {\n    useBitStringContents = true;\n    if(obj.original) {\n      useBitStringContents = asn1.equals(obj, obj.original);\n    }\n  }\n\n  if(useBitStringContents) {\n    value.putBytes(obj.bitStringContents);\n  } else if(obj.composed) {\n    // if composed, use each child asn1 object's DER bytes as value\n    // turn on 6th bit (0x20 = 32) to indicate asn1 is constructed\n    // from other asn1 objects\n    if(obj.constructed) {\n      b1 |= 0x20;\n    } else {\n      // type is a bit string, add unused bits of 0x00\n      value.putByte(0x00);\n    }\n\n    // add all of the child DER bytes together\n    for(var i = 0; i < obj.value.length; ++i) {\n      if(obj.value[i] !== undefined) {\n        value.putBuffer(asn1.toDer(obj.value[i]));\n      }\n    }\n  } else {\n    // use asn1.value directly\n    if(obj.type === asn1.Type.BMPSTRING) {\n      for(var i = 0; i < obj.value.length; ++i) {\n        value.putInt16(obj.value.charCodeAt(i));\n      }\n    } else {\n      // ensure integer is minimally-encoded\n      // TODO: should all leading bytes be stripped vs just one?\n      // .. ex '00 00 01' => '01'?\n      if(obj.type === asn1.Type.INTEGER &&\n        obj.value.length > 1 &&\n        // leading 0x00 for positive integer\n        ((obj.value.charCodeAt(0) === 0 &&\n        (obj.value.charCodeAt(1) & 0x80) === 0) ||\n        // leading 0xFF for negative integer\n        (obj.value.charCodeAt(0) === 0xFF &&\n        (obj.value.charCodeAt(1) & 0x80) === 0x80))) {\n        value.putBytes(obj.value.substr(1));\n      } else {\n        value.putBytes(obj.value);\n      }\n    }\n  }\n\n  // add tag byte\n  bytes.putByte(b1);\n\n  // use \"short form\" encoding\n  if(value.length() <= 127) {\n    // one byte describes the length\n    // bit 8 = 0 and bits 7-1 = length\n    bytes.putByte(value.length() & 0x7F);\n  } else {\n    // use \"long form\" encoding\n    // 2 to 127 bytes describe the length\n    // first byte: bit 8 = 1 and bits 7-1 = # of additional bytes\n    // other bytes: length in base 256, big-endian\n    var len = value.length();\n    var lenBytes = '';\n    do {\n      lenBytes += String.fromCharCode(len & 0xFF);\n      len = len >>> 8;\n    } while(len > 0);\n\n    // set first byte to # bytes used to store the length and turn on\n    // bit 8 to indicate long-form length is used\n    bytes.putByte(lenBytes.length | 0x80);\n\n    // concatenate length bytes in reverse since they were generated\n    // little endian and we need big endian\n    for(var i = lenBytes.length - 1; i >= 0; --i) {\n      bytes.putByte(lenBytes.charCodeAt(i));\n    }\n  }\n\n  // concatenate value bytes\n  bytes.putBuffer(value);\n  return bytes;\n};\n\n/**\n * Converts an OID dot-separated string to a byte buffer. The byte buffer\n * contains only the DER-encoded value, not any tag or length bytes.\n *\n * @param oid the OID dot-separated string.\n *\n * @return the byte buffer.\n */\nasn1.oidToDer = function(oid) {\n  // split OID into individual values\n  var values = oid.split('.');\n  var bytes = forge.util.createBuffer();\n\n  // first byte is 40 * value1 + value2\n  bytes.putByte(40 * parseInt(values[0], 10) + parseInt(values[1], 10));\n  // other bytes are each value in base 128 with 8th bit set except for\n  // the last byte for each value\n  var last, valueBytes, value, b;\n  for(var i = 2; i < values.length; ++i) {\n    // produce value bytes in reverse because we don't know how many\n    // bytes it will take to store the value\n    last = true;\n    valueBytes = [];\n    value = parseInt(values[i], 10);\n    do {\n      b = value & 0x7F;\n      value = value >>> 7;\n      // if value is not last, then turn on 8th bit\n      if(!last) {\n        b |= 0x80;\n      }\n      valueBytes.push(b);\n      last = false;\n    } while(value > 0);\n\n    // add value bytes in reverse (needs to be in big endian)\n    for(var n = valueBytes.length - 1; n >= 0; --n) {\n      bytes.putByte(valueBytes[n]);\n    }\n  }\n\n  return bytes;\n};\n\n/**\n * Converts a DER-encoded byte buffer to an OID dot-separated string. The\n * byte buffer should contain only the DER-encoded value, not any tag or\n * length bytes.\n *\n * @param bytes the byte buffer.\n *\n * @return the OID dot-separated string.\n */\nasn1.derToOid = function(bytes) {\n  var oid;\n\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  // first byte is 40 * value1 + value2\n  var b = bytes.getByte();\n  oid = Math.floor(b / 40) + '.' + (b % 40);\n\n  // other bytes are each value in base 128 with 8th bit set except for\n  // the last byte for each value\n  var value = 0;\n  while(bytes.length() > 0) {\n    b = bytes.getByte();\n    value = value << 7;\n    // not the last byte for the value\n    if(b & 0x80) {\n      value += b & 0x7F;\n    } else {\n      // last byte\n      oid += '.' + (value + b);\n      value = 0;\n    }\n  }\n\n  return oid;\n};\n\n/**\n * Converts a UTCTime value to a date.\n *\n * Note: GeneralizedTime has 4 digits for the year and is used for X.509\n * dates past 2049. Parsing that structure hasn't been implemented yet.\n *\n * @param utc the UTCTime value to convert.\n *\n * @return the date.\n */\nasn1.utcTimeToDate = function(utc) {\n  /* The following formats can be used:\n\n    YYMMDDhhmmZ\n    YYMMDDhhmm+hh'mm'\n    YYMMDDhhmm-hh'mm'\n    YYMMDDhhmmssZ\n    YYMMDDhhmmss+hh'mm'\n    YYMMDDhhmmss-hh'mm'\n\n    Where:\n\n    YY is the least significant two digits of the year\n    MM is the month (01 to 12)\n    DD is the day (01 to 31)\n    hh is the hour (00 to 23)\n    mm are the minutes (00 to 59)\n    ss are the seconds (00 to 59)\n    Z indicates that local time is GMT, + indicates that local time is\n    later than GMT, and - indicates that local time is earlier than GMT\n    hh' is the absolute value of the offset from GMT in hours\n    mm' is the absolute value of the offset from GMT in minutes */\n  var date = new Date();\n\n  // if YY >= 50 use 19xx, if YY < 50 use 20xx\n  var year = parseInt(utc.substr(0, 2), 10);\n  year = (year >= 50) ? 1900 + year : 2000 + year;\n  var MM = parseInt(utc.substr(2, 2), 10) - 1; // use 0-11 for month\n  var DD = parseInt(utc.substr(4, 2), 10);\n  var hh = parseInt(utc.substr(6, 2), 10);\n  var mm = parseInt(utc.substr(8, 2), 10);\n  var ss = 0;\n\n  // not just YYMMDDhhmmZ\n  if(utc.length > 11) {\n    // get character after minutes\n    var c = utc.charAt(10);\n    var end = 10;\n\n    // see if seconds are present\n    if(c !== '+' && c !== '-') {\n      // get seconds\n      ss = parseInt(utc.substr(10, 2), 10);\n      end += 2;\n    }\n  }\n\n  // update date\n  date.setUTCFullYear(year, MM, DD);\n  date.setUTCHours(hh, mm, ss, 0);\n\n  if(end) {\n    // get +/- after end of time\n    c = utc.charAt(end);\n    if(c === '+' || c === '-') {\n      // get hours+minutes offset\n      var hhoffset = parseInt(utc.substr(end + 1, 2), 10);\n      var mmoffset = parseInt(utc.substr(end + 4, 2), 10);\n\n      // calculate offset in milliseconds\n      var offset = hhoffset * 60 + mmoffset;\n      offset *= 60000;\n\n      // apply offset\n      if(c === '+') {\n        date.setTime(+date - offset);\n      } else {\n        date.setTime(+date + offset);\n      }\n    }\n  }\n\n  return date;\n};\n\n/**\n * Converts a GeneralizedTime value to a date.\n *\n * @param gentime the GeneralizedTime value to convert.\n *\n * @return the date.\n */\nasn1.generalizedTimeToDate = function(gentime) {\n  /* The following formats can be used:\n\n    YYYYMMDDHHMMSS\n    YYYYMMDDHHMMSS.fff\n    YYYYMMDDHHMMSSZ\n    YYYYMMDDHHMMSS.fffZ\n    YYYYMMDDHHMMSS+hh'mm'\n    YYYYMMDDHHMMSS.fff+hh'mm'\n    YYYYMMDDHHMMSS-hh'mm'\n    YYYYMMDDHHMMSS.fff-hh'mm'\n\n    Where:\n\n    YYYY is the year\n    MM is the month (01 to 12)\n    DD is the day (01 to 31)\n    hh is the hour (00 to 23)\n    mm are the minutes (00 to 59)\n    ss are the seconds (00 to 59)\n    .fff is the second fraction, accurate to three decimal places\n    Z indicates that local time is GMT, + indicates that local time is\n    later than GMT, and - indicates that local time is earlier than GMT\n    hh' is the absolute value of the offset from GMT in hours\n    mm' is the absolute value of the offset from GMT in minutes */\n  var date = new Date();\n\n  var YYYY = parseInt(gentime.substr(0, 4), 10);\n  var MM = parseInt(gentime.substr(4, 2), 10) - 1; // use 0-11 for month\n  var DD = parseInt(gentime.substr(6, 2), 10);\n  var hh = parseInt(gentime.substr(8, 2), 10);\n  var mm = parseInt(gentime.substr(10, 2), 10);\n  var ss = parseInt(gentime.substr(12, 2), 10);\n  var fff = 0;\n  var offset = 0;\n  var isUTC = false;\n\n  if(gentime.charAt(gentime.length - 1) === 'Z') {\n    isUTC = true;\n  }\n\n  var end = gentime.length - 5, c = gentime.charAt(end);\n  if(c === '+' || c === '-') {\n    // get hours+minutes offset\n    var hhoffset = parseInt(gentime.substr(end + 1, 2), 10);\n    var mmoffset = parseInt(gentime.substr(end + 4, 2), 10);\n\n    // calculate offset in milliseconds\n    offset = hhoffset * 60 + mmoffset;\n    offset *= 60000;\n\n    // apply offset\n    if(c === '+') {\n      offset *= -1;\n    }\n\n    isUTC = true;\n  }\n\n  // check for second fraction\n  if(gentime.charAt(14) === '.') {\n    fff = parseFloat(gentime.substr(14), 10) * 1000;\n  }\n\n  if(isUTC) {\n    date.setUTCFullYear(YYYY, MM, DD);\n    date.setUTCHours(hh, mm, ss, fff);\n\n    // apply offset\n    date.setTime(+date + offset);\n  } else {\n    date.setFullYear(YYYY, MM, DD);\n    date.setHours(hh, mm, ss, fff);\n  }\n\n  return date;\n};\n\n/**\n * Converts a date to a UTCTime value.\n *\n * Note: GeneralizedTime has 4 digits for the year and is used for X.509\n * dates past 2049. Converting to a GeneralizedTime hasn't been\n * implemented yet.\n *\n * @param date the date to convert.\n *\n * @return the UTCTime value.\n */\nasn1.dateToUtcTime = function(date) {\n  // TODO: validate; currently assumes proper format\n  if(typeof date === 'string') {\n    return date;\n  }\n\n  var rval = '';\n\n  // create format YYMMDDhhmmssZ\n  var format = [];\n  format.push(('' + date.getUTCFullYear()).substr(2));\n  format.push('' + (date.getUTCMonth() + 1));\n  format.push('' + date.getUTCDate());\n  format.push('' + date.getUTCHours());\n  format.push('' + date.getUTCMinutes());\n  format.push('' + date.getUTCSeconds());\n\n  // ensure 2 digits are used for each format entry\n  for(var i = 0; i < format.length; ++i) {\n    if(format[i].length < 2) {\n      rval += '0';\n    }\n    rval += format[i];\n  }\n  rval += 'Z';\n\n  return rval;\n};\n\n/**\n * Converts a date to a GeneralizedTime value.\n *\n * @param date the date to convert.\n *\n * @return the GeneralizedTime value as a string.\n */\nasn1.dateToGeneralizedTime = function(date) {\n  // TODO: validate; currently assumes proper format\n  if(typeof date === 'string') {\n    return date;\n  }\n\n  var rval = '';\n\n  // create format YYYYMMDDHHMMSSZ\n  var format = [];\n  format.push('' + date.getUTCFullYear());\n  format.push('' + (date.getUTCMonth() + 1));\n  format.push('' + date.getUTCDate());\n  format.push('' + date.getUTCHours());\n  format.push('' + date.getUTCMinutes());\n  format.push('' + date.getUTCSeconds());\n\n  // ensure 2 digits are used for each format entry\n  for(var i = 0; i < format.length; ++i) {\n    if(format[i].length < 2) {\n      rval += '0';\n    }\n    rval += format[i];\n  }\n  rval += 'Z';\n\n  return rval;\n};\n\n/**\n * Converts a javascript integer to a DER-encoded byte buffer to be used\n * as the value for an INTEGER type.\n *\n * @param x the integer.\n *\n * @return the byte buffer.\n */\nasn1.integerToDer = function(x) {\n  var rval = forge.util.createBuffer();\n  if(x >= -0x80 && x < 0x80) {\n    return rval.putSignedInt(x, 8);\n  }\n  if(x >= -0x8000 && x < 0x8000) {\n    return rval.putSignedInt(x, 16);\n  }\n  if(x >= -0x800000 && x < 0x800000) {\n    return rval.putSignedInt(x, 24);\n  }\n  if(x >= -0x80000000 && x < 0x80000000) {\n    return rval.putSignedInt(x, 32);\n  }\n  var error = new Error('Integer too large; max is 32-bits.');\n  error.integer = x;\n  throw error;\n};\n\n/**\n * Converts a DER-encoded byte buffer to a javascript integer. This is\n * typically used to decode the value of an INTEGER type.\n *\n * @param bytes the byte buffer.\n *\n * @return the integer.\n */\nasn1.derToInteger = function(bytes) {\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  var n = bytes.length() * 8;\n  if(n > 32) {\n    throw new Error('Integer too large; max is 32-bits.');\n  }\n  return bytes.getSignedInt(n);\n};\n\n/**\n * Validates that the given ASN.1 object is at least a super set of the\n * given ASN.1 structure. Only tag classes and types are checked. An\n * optional map may also be provided to capture ASN.1 values while the\n * structure is checked.\n *\n * To capture an ASN.1 value, set an object in the validator's 'capture'\n * parameter to the key to use in the capture map. To capture the full\n * ASN.1 object, specify 'captureAsn1'. To capture BIT STRING bytes, including\n * the leading unused bits counter byte, specify 'captureBitStringContents'.\n * To capture BIT STRING bytes, without the leading unused bits counter byte,\n * specify 'captureBitStringValue'.\n *\n * Objects in the validator may set a field 'optional' to true to indicate\n * that it isn't necessary to pass validation.\n *\n * @param obj the ASN.1 object to validate.\n * @param v the ASN.1 structure validator.\n * @param capture an optional map to capture values in.\n * @param errors an optional array for storing validation errors.\n *\n * @return true on success, false on failure.\n */\nasn1.validate = function(obj, v, capture, errors) {\n  var rval = false;\n\n  // ensure tag class and type are the same if specified\n  if((obj.tagClass === v.tagClass || typeof(v.tagClass) === 'undefined') &&\n    (obj.type === v.type || typeof(v.type) === 'undefined')) {\n    // ensure constructed flag is the same if specified\n    if(obj.constructed === v.constructed ||\n      typeof(v.constructed) === 'undefined') {\n      rval = true;\n\n      // handle sub values\n      if(v.value && forge.util.isArray(v.value)) {\n        var j = 0;\n        for(var i = 0; rval && i < v.value.length; ++i) {\n          rval = v.value[i].optional || false;\n          if(obj.value[j]) {\n            rval = asn1.validate(obj.value[j], v.value[i], capture, errors);\n            if(rval) {\n              ++j;\n            } else if(v.value[i].optional) {\n              rval = true;\n            }\n          }\n          if(!rval && errors) {\n            errors.push(\n              '[' + v.name + '] ' +\n              'Tag class \"' + v.tagClass + '\", type \"' +\n              v.type + '\" expected value length \"' +\n              v.value.length + '\", got \"' +\n              obj.value.length + '\"');\n          }\n        }\n      }\n\n      if(rval && capture) {\n        if(v.capture) {\n          capture[v.capture] = obj.value;\n        }\n        if(v.captureAsn1) {\n          capture[v.captureAsn1] = obj;\n        }\n        if(v.captureBitStringContents && 'bitStringContents' in obj) {\n          capture[v.captureBitStringContents] = obj.bitStringContents;\n        }\n        if(v.captureBitStringValue && 'bitStringContents' in obj) {\n          var value;\n          if(obj.bitStringContents.length < 2) {\n            capture[v.captureBitStringValue] = '';\n          } else {\n            // FIXME: support unused bits with data shifting\n            var unused = obj.bitStringContents.charCodeAt(0);\n            if(unused !== 0) {\n              throw new Error(\n                'captureBitStringValue only supported for zero unused bits');\n            }\n            capture[v.captureBitStringValue] = obj.bitStringContents.slice(1);\n          }\n        }\n      }\n    } else if(errors) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected constructed \"' + v.constructed + '\", got \"' +\n        obj.constructed + '\"');\n    }\n  } else if(errors) {\n    if(obj.tagClass !== v.tagClass) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected tag class \"' + v.tagClass + '\", got \"' +\n        obj.tagClass + '\"');\n    }\n    if(obj.type !== v.type) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected type \"' + v.type + '\", got \"' + obj.type + '\"');\n    }\n  }\n  return rval;\n};\n\n// regex for testing for non-latin characters\nvar _nonLatinRegex = /[^\\\\u0000-\\\\u00ff]/;\n\n/**\n * Pretty prints an ASN.1 object to a string.\n *\n * @param obj the object to write out.\n * @param level the level in the tree.\n * @param indentation the indentation to use.\n *\n * @return the string.\n */\nasn1.prettyPrint = function(obj, level, indentation) {\n  var rval = '';\n\n  // set default level and indentation\n  level = level || 0;\n  indentation = indentation || 2;\n\n  // start new line for deep levels\n  if(level > 0) {\n    rval += '\\n';\n  }\n\n  // create indent\n  var indent = '';\n  for(var i = 0; i < level * indentation; ++i) {\n    indent += ' ';\n  }\n\n  // print class:type\n  rval += indent + 'Tag: ';\n  switch(obj.tagClass) {\n  case asn1.Class.UNIVERSAL:\n    rval += 'Universal:';\n    break;\n  case asn1.Class.APPLICATION:\n    rval += 'Application:';\n    break;\n  case asn1.Class.CONTEXT_SPECIFIC:\n    rval += 'Context-Specific:';\n    break;\n  case asn1.Class.PRIVATE:\n    rval += 'Private:';\n    break;\n  }\n\n  if(obj.tagClass === asn1.Class.UNIVERSAL) {\n    rval += obj.type;\n\n    // known types\n    switch(obj.type) {\n    case asn1.Type.NONE:\n      rval += ' (None)';\n      break;\n    case asn1.Type.BOOLEAN:\n      rval += ' (Boolean)';\n      break;\n    case asn1.Type.INTEGER:\n      rval += ' (Integer)';\n      break;\n    case asn1.Type.BITSTRING:\n      rval += ' (Bit string)';\n      break;\n    case asn1.Type.OCTETSTRING:\n      rval += ' (Octet string)';\n      break;\n    case asn1.Type.NULL:\n      rval += ' (Null)';\n      break;\n    case asn1.Type.OID:\n      rval += ' (Object Identifier)';\n      break;\n    case asn1.Type.ODESC:\n      rval += ' (Object Descriptor)';\n      break;\n    case asn1.Type.EXTERNAL:\n      rval += ' (External or Instance of)';\n      break;\n    case asn1.Type.REAL:\n      rval += ' (Real)';\n      break;\n    case asn1.Type.ENUMERATED:\n      rval += ' (Enumerated)';\n      break;\n    case asn1.Type.EMBEDDED:\n      rval += ' (Embedded PDV)';\n      break;\n    case asn1.Type.UTF8:\n      rval += ' (UTF8)';\n      break;\n    case asn1.Type.ROID:\n      rval += ' (Relative Object Identifier)';\n      break;\n    case asn1.Type.SEQUENCE:\n      rval += ' (Sequence)';\n      break;\n    case asn1.Type.SET:\n      rval += ' (Set)';\n      break;\n    case asn1.Type.PRINTABLESTRING:\n      rval += ' (Printable String)';\n      break;\n    case asn1.Type.IA5String:\n      rval += ' (IA5String (ASCII))';\n      break;\n    case asn1.Type.UTCTIME:\n      rval += ' (UTC time)';\n      break;\n    case asn1.Type.GENERALIZEDTIME:\n      rval += ' (Generalized time)';\n      break;\n    case asn1.Type.BMPSTRING:\n      rval += ' (BMP String)';\n      break;\n    }\n  } else {\n    rval += obj.type;\n  }\n\n  rval += '\\n';\n  rval += indent + 'Constructed: ' + obj.constructed + '\\n';\n\n  if(obj.composed) {\n    var subvalues = 0;\n    var sub = '';\n    for(var i = 0; i < obj.value.length; ++i) {\n      if(obj.value[i] !== undefined) {\n        subvalues += 1;\n        sub += asn1.prettyPrint(obj.value[i], level + 1, indentation);\n        if((i + 1) < obj.value.length) {\n          sub += ',';\n        }\n      }\n    }\n    rval += indent + 'Sub values: ' + subvalues + sub;\n  } else {\n    rval += indent + 'Value: ';\n    if(obj.type === asn1.Type.OID) {\n      var oid = asn1.derToOid(obj.value);\n      rval += oid;\n      if(forge.pki && forge.pki.oids) {\n        if(oid in forge.pki.oids) {\n          rval += ' (' + forge.pki.oids[oid] + ') ';\n        }\n      }\n    }\n    if(obj.type === asn1.Type.INTEGER) {\n      try {\n        rval += asn1.derToInteger(obj.value);\n      } catch(ex) {\n        rval += '0x' + forge.util.bytesToHex(obj.value);\n      }\n    } else if(obj.type === asn1.Type.BITSTRING) {\n      // TODO: shift bits as needed to display without padding\n      if(obj.value.length > 1) {\n        // remove unused bits field\n        rval += '0x' + forge.util.bytesToHex(obj.value.slice(1));\n      } else {\n        rval += '(none)';\n      }\n      // show unused bit count\n      if(obj.value.length > 0) {\n        var unused = obj.value.charCodeAt(0);\n        if(unused == 1) {\n          rval += ' (1 unused bit shown)';\n        } else if(unused > 1) {\n          rval += ' (' + unused + ' unused bits shown)';\n        }\n      }\n    } else if(obj.type === asn1.Type.OCTETSTRING) {\n      if(!_nonLatinRegex.test(obj.value)) {\n        rval += '(' + obj.value + ') ';\n      }\n      rval += '0x' + forge.util.bytesToHex(obj.value);\n    } else if(obj.type === asn1.Type.UTF8) {\n      try {\n        rval += forge.util.decodeUtf8(obj.value);\n      } catch(e) {\n        if(e.message === 'URI malformed') {\n          rval +=\n            '0x' + forge.util.bytesToHex(obj.value) + ' (malformed UTF8)';\n        } else {\n          throw e;\n        }\n      }\n    } else if(obj.type === asn1.Type.PRINTABLESTRING ||\n      obj.type === asn1.Type.IA5String) {\n      rval += obj.value;\n    } else if(_nonLatinRegex.test(obj.value)) {\n      rval += '0x' + forge.util.bytesToHex(obj.value);\n    } else if(obj.value.length === 0) {\n      rval += '[null]';\n    } else {\n      rval += obj.value;\n    }\n  }\n\n  return rval;\n};\n","/**\n * Base-N/Base-X encoding/decoding functions.\n *\n * Original implementation from base-x:\n * https://github.com/cryptocoinjs/base-x\n *\n * Which is MIT licensed:\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nvar api = {};\nmodule.exports = api;\n\n// baseN alphabet indexes\nvar _reverseAlphabets = {};\n\n/**\n * BaseN-encodes a Uint8Array using the given alphabet.\n *\n * @param input the Uint8Array to encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the baseN-encoded output string.\n */\napi.encode = function(input, alphabet, maxline) {\n  if(typeof alphabet !== 'string') {\n    throw new TypeError('\"alphabet\" must be a string.');\n  }\n  if(maxline !== undefined && typeof maxline !== 'number') {\n    throw new TypeError('\"maxline\" must be a number.');\n  }\n\n  var output = '';\n\n  if(!(input instanceof Uint8Array)) {\n    // assume forge byte buffer\n    output = _encodeWithByteBuffer(input, alphabet);\n  } else {\n    var i = 0;\n    var base = alphabet.length;\n    var first = alphabet.charAt(0);\n    var digits = [0];\n    for(i = 0; i < input.length; ++i) {\n      for(var j = 0, carry = input[i]; j < digits.length; ++j) {\n        carry += digits[j] << 8;\n        digits[j] = carry % base;\n        carry = (carry / base) | 0;\n      }\n\n      while(carry > 0) {\n        digits.push(carry % base);\n        carry = (carry / base) | 0;\n      }\n    }\n\n    // deal with leading zeros\n    for(i = 0; input[i] === 0 && i < input.length - 1; ++i) {\n      output += first;\n    }\n    // convert digits to a string\n    for(i = digits.length - 1; i >= 0; --i) {\n      output += alphabet[digits[i]];\n    }\n  }\n\n  if(maxline) {\n    var regex = new RegExp('.{1,' + maxline + '}', 'g');\n    output = output.match(regex).join('\\r\\n');\n  }\n\n  return output;\n};\n\n/**\n * Decodes a baseN-encoded (using the given alphabet) string to a\n * Uint8Array.\n *\n * @param input the baseN-encoded input string.\n *\n * @return the Uint8Array.\n */\napi.decode = function(input, alphabet) {\n  if(typeof input !== 'string') {\n    throw new TypeError('\"input\" must be a string.');\n  }\n  if(typeof alphabet !== 'string') {\n    throw new TypeError('\"alphabet\" must be a string.');\n  }\n\n  var table = _reverseAlphabets[alphabet];\n  if(!table) {\n    // compute reverse alphabet\n    table = _reverseAlphabets[alphabet] = [];\n    for(var i = 0; i < alphabet.length; ++i) {\n      table[alphabet.charCodeAt(i)] = i;\n    }\n  }\n\n  // remove whitespace characters\n  input = input.replace(/\\s/g, '');\n\n  var base = alphabet.length;\n  var first = alphabet.charAt(0);\n  var bytes = [0];\n  for(var i = 0; i < input.length; i++) {\n    var value = table[input.charCodeAt(i)];\n    if(value === undefined) {\n      return;\n    }\n\n    for(var j = 0, carry = value; j < bytes.length; ++j) {\n      carry += bytes[j] * base;\n      bytes[j] = carry & 0xff;\n      carry >>= 8;\n    }\n\n    while(carry > 0) {\n      bytes.push(carry & 0xff);\n      carry >>= 8;\n    }\n  }\n\n  // deal with leading zeros\n  for(var k = 0; input[k] === first && k < input.length - 1; ++k) {\n    bytes.push(0);\n  }\n\n  if(typeof Buffer !== 'undefined') {\n    return Buffer.from(bytes.reverse());\n  }\n\n  return new Uint8Array(bytes.reverse());\n};\n\nfunction _encodeWithByteBuffer(input, alphabet) {\n  var i = 0;\n  var base = alphabet.length;\n  var first = alphabet.charAt(0);\n  var digits = [0];\n  for(i = 0; i < input.length(); ++i) {\n    for(var j = 0, carry = input.at(i); j < digits.length; ++j) {\n      carry += digits[j] << 8;\n      digits[j] = carry % base;\n      carry = (carry / base) | 0;\n    }\n\n    while(carry > 0) {\n      digits.push(carry % base);\n      carry = (carry / base) | 0;\n    }\n  }\n\n  var output = '';\n\n  // deal with leading zeros\n  for(i = 0; input.at(i) === 0 && i < input.length() - 1; ++i) {\n    output += first;\n  }\n  // convert digits to a string\n  for(i = digits.length - 1; i >= 0; --i) {\n    output += alphabet[digits[i]];\n  }\n\n  return output;\n}\n","/**\n * Cipher base API.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nmodule.exports = forge.cipher = forge.cipher || {};\n\n// registered algorithms\nforge.cipher.algorithms = forge.cipher.algorithms || {};\n\n/**\n * Creates a cipher object that can be used to encrypt data using the given\n * algorithm and key. The algorithm may be provided as a string value for a\n * previously registered algorithm or it may be given as a cipher algorithm\n * API object.\n *\n * @param algorithm the algorithm to use, either a string or an algorithm API\n *          object.\n * @param key the key to use, as a binary-encoded string of bytes or a\n *          byte buffer.\n *\n * @return the cipher.\n */\nforge.cipher.createCipher = function(algorithm, key) {\n  var api = algorithm;\n  if(typeof api === 'string') {\n    api = forge.cipher.getAlgorithm(api);\n    if(api) {\n      api = api();\n    }\n  }\n  if(!api) {\n    throw new Error('Unsupported algorithm: ' + algorithm);\n  }\n\n  // assume block cipher\n  return new forge.cipher.BlockCipher({\n    algorithm: api,\n    key: key,\n    decrypt: false\n  });\n};\n\n/**\n * Creates a decipher object that can be used to decrypt data using the given\n * algorithm and key. The algorithm may be provided as a string value for a\n * previously registered algorithm or it may be given as a cipher algorithm\n * API object.\n *\n * @param algorithm the algorithm to use, either a string or an algorithm API\n *          object.\n * @param key the key to use, as a binary-encoded string of bytes or a\n *          byte buffer.\n *\n * @return the cipher.\n */\nforge.cipher.createDecipher = function(algorithm, key) {\n  var api = algorithm;\n  if(typeof api === 'string') {\n    api = forge.cipher.getAlgorithm(api);\n    if(api) {\n      api = api();\n    }\n  }\n  if(!api) {\n    throw new Error('Unsupported algorithm: ' + algorithm);\n  }\n\n  // assume block cipher\n  return new forge.cipher.BlockCipher({\n    algorithm: api,\n    key: key,\n    decrypt: true\n  });\n};\n\n/**\n * Registers an algorithm by name. If the name was already registered, the\n * algorithm API object will be overwritten.\n *\n * @param name the name of the algorithm.\n * @param algorithm the algorithm API object.\n */\nforge.cipher.registerAlgorithm = function(name, algorithm) {\n  name = name.toUpperCase();\n  forge.cipher.algorithms[name] = algorithm;\n};\n\n/**\n * Gets a registered algorithm by name.\n *\n * @param name the name of the algorithm.\n *\n * @return the algorithm, if found, null if not.\n */\nforge.cipher.getAlgorithm = function(name) {\n  name = name.toUpperCase();\n  if(name in forge.cipher.algorithms) {\n    return forge.cipher.algorithms[name];\n  }\n  return null;\n};\n\nvar BlockCipher = forge.cipher.BlockCipher = function(options) {\n  this.algorithm = options.algorithm;\n  this.mode = this.algorithm.mode;\n  this.blockSize = this.mode.blockSize;\n  this._finish = false;\n  this._input = null;\n  this.output = null;\n  this._op = options.decrypt ? this.mode.decrypt : this.mode.encrypt;\n  this._decrypt = options.decrypt;\n  this.algorithm.initialize(options);\n};\n\n/**\n * Starts or restarts the encryption or decryption process, whichever\n * was previously configured.\n *\n * For non-GCM mode, the IV may be a binary-encoded string of bytes, an array\n * of bytes, a byte buffer, or an array of 32-bit integers. If the IV is in\n * bytes, then it must be Nb (16) bytes in length. If the IV is given in as\n * 32-bit integers, then it must be 4 integers long.\n *\n * Note: an IV is not required or used in ECB mode.\n *\n * For GCM-mode, the IV must be given as a binary-encoded string of bytes or\n * a byte buffer. The number of bytes should be 12 (96 bits) as recommended\n * by NIST SP-800-38D but another length may be given.\n *\n * @param options the options to use:\n *          iv the initialization vector to use as a binary-encoded string of\n *            bytes, null to reuse the last ciphered block from a previous\n *            update() (this \"residue\" method is for legacy support only).\n *          additionalData additional authentication data as a binary-encoded\n *            string of bytes, for 'GCM' mode, (default: none).\n *          tagLength desired length of authentication tag, in bits, for\n *            'GCM' mode (0-128, default: 128).\n *          tag the authentication tag to check if decrypting, as a\n *             binary-encoded string of bytes.\n *          output the output the buffer to write to, null to create one.\n */\nBlockCipher.prototype.start = function(options) {\n  options = options || {};\n  var opts = {};\n  for(var key in options) {\n    opts[key] = options[key];\n  }\n  opts.decrypt = this._decrypt;\n  this._finish = false;\n  this._input = forge.util.createBuffer();\n  this.output = options.output || forge.util.createBuffer();\n  this.mode.start(opts);\n};\n\n/**\n * Updates the next block according to the cipher mode.\n *\n * @param input the buffer to read from.\n */\nBlockCipher.prototype.update = function(input) {\n  if(input) {\n    // input given, so empty it into the input buffer\n    this._input.putBuffer(input);\n  }\n\n  // do cipher operation until it needs more input and not finished\n  while(!this._op.call(this.mode, this._input, this.output, this._finish) &&\n    !this._finish) {}\n\n  // free consumed memory from input buffer\n  this._input.compact();\n};\n\n/**\n * Finishes encrypting or decrypting.\n *\n * @param pad a padding function to use in CBC mode, null for default,\n *          signature(blockSize, buffer, decrypt).\n *\n * @return true if successful, false on error.\n */\nBlockCipher.prototype.finish = function(pad) {\n  // backwards-compatibility w/deprecated padding API\n  // Note: will overwrite padding functions even after another start() call\n  if(pad && (this.mode.name === 'ECB' || this.mode.name === 'CBC')) {\n    this.mode.pad = function(input) {\n      return pad(this.blockSize, input, false);\n    };\n    this.mode.unpad = function(output) {\n      return pad(this.blockSize, output, true);\n    };\n  }\n\n  // build options for padding and afterFinish functions\n  var options = {};\n  options.decrypt = this._decrypt;\n\n  // get # of bytes that won't fill a block\n  options.overflow = this._input.length() % this.blockSize;\n\n  if(!this._decrypt && this.mode.pad) {\n    if(!this.mode.pad(this._input, options)) {\n      return false;\n    }\n  }\n\n  // do final update\n  this._finish = true;\n  this.update();\n\n  if(this._decrypt && this.mode.unpad) {\n    if(!this.mode.unpad(this.output, options)) {\n      return false;\n    }\n  }\n\n  if(this.mode.afterFinish) {\n    if(!this.mode.afterFinish(this.output, options)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","/**\n * Supported cipher modes.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nforge.cipher = forge.cipher || {};\n\n// supported cipher modes\nvar modes = module.exports = forge.cipher.modes = forge.cipher.modes || {};\n\n/** Electronic codebook (ECB) (Don't use this; it's not secure) **/\n\nmodes.ecb = function(options) {\n  options = options || {};\n  this.name = 'ECB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n};\n\nmodes.ecb.prototype.start = function(options) {};\n\nmodes.ecb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // write output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n};\n\nmodes.ecb.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // decrypt block\n  this.cipher.decrypt(this._inBlock, this._outBlock);\n\n  // write output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n};\n\nmodes.ecb.prototype.pad = function(input, options) {\n  // add PKCS#7 padding to block (each pad byte is the\n  // value of the number of pad bytes)\n  var padding = (input.length() === this.blockSize ?\n    this.blockSize : (this.blockSize - input.length()));\n  input.fillWithByte(padding, padding);\n  return true;\n};\n\nmodes.ecb.prototype.unpad = function(output, options) {\n  // check for error: input data not a multiple of blockSize\n  if(options.overflow > 0) {\n    return false;\n  }\n\n  // ensure padding byte count is valid\n  var len = output.length();\n  var count = output.at(len - 1);\n  if(count > (this.blockSize << 2)) {\n    return false;\n  }\n\n  // trim off padding bytes\n  output.truncate(count);\n  return true;\n};\n\n/** Cipher-block Chaining (CBC) **/\n\nmodes.cbc = function(options) {\n  options = options || {};\n  this.name = 'CBC';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n};\n\nmodes.cbc.prototype.start = function(options) {\n  // Note: legacy support for using IV residue (has security flaws)\n  // if IV is null, reuse block from previous processing\n  if(options.iv === null) {\n    // must have a previous block\n    if(!this._prev) {\n      throw new Error('Invalid IV parameter.');\n    }\n    this._iv = this._prev.slice(0);\n  } else if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  } else {\n    // save IV as \"previous\" block\n    this._iv = transformIV(options.iv, this.blockSize);\n    this._prev = this._iv.slice(0);\n  }\n};\n\nmodes.cbc.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  // CBC XOR's IV (or previous block) with plaintext\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = this._prev[i] ^ input.getInt32();\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // write output, save previous block\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n  this._prev = this._outBlock;\n};\n\nmodes.cbc.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // decrypt block\n  this.cipher.decrypt(this._inBlock, this._outBlock);\n\n  // write output, save previous ciphered block\n  // CBC XOR's IV (or previous block) with ciphertext\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._prev[i] ^ this._outBlock[i]);\n  }\n  this._prev = this._inBlock.slice(0);\n};\n\nmodes.cbc.prototype.pad = function(input, options) {\n  // add PKCS#7 padding to block (each pad byte is the\n  // value of the number of pad bytes)\n  var padding = (input.length() === this.blockSize ?\n    this.blockSize : (this.blockSize - input.length()));\n  input.fillWithByte(padding, padding);\n  return true;\n};\n\nmodes.cbc.prototype.unpad = function(output, options) {\n  // check for error: input data not a multiple of blockSize\n  if(options.overflow > 0) {\n    return false;\n  }\n\n  // ensure padding byte count is valid\n  var len = output.length();\n  var count = output.at(len - 1);\n  if(count > (this.blockSize << 2)) {\n    return false;\n  }\n\n  // trim off padding bytes\n  output.truncate(count);\n  return true;\n};\n\n/** Cipher feedback (CFB) **/\n\nmodes.cfb = function(options) {\n  options = options || {};\n  this.name = 'CFB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv, this.blockSize);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output, write input as output\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = input.getInt32() ^ this._outBlock[i];\n      output.putInt32(this._inBlock[i]);\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output, write input as partial output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialBlock[i] = input.getInt32() ^ this._outBlock[i];\n    this._partialOutput.putInt32(this._partialBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._partialBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block (CFB always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output, write input as output\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = input.getInt32();\n      output.putInt32(this._inBlock[i] ^ this._outBlock[i]);\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output, write input as partial output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialBlock[i] = input.getInt32();\n    this._partialOutput.putInt32(this._partialBlock[i] ^ this._outBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._partialBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\n/** Output feedback (OFB) **/\n\nmodes.ofb = function(options) {\n  options = options || {};\n  this.name = 'OFB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv, this.blockSize);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(input.length() === 0) {\n    return true;\n  }\n\n  // encrypt block (OFB always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output and update next input\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(input.getInt32() ^ this._outBlock[i]);\n      this._inBlock[i] = this._outBlock[i];\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._outBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.decrypt = modes.ofb.prototype.encrypt;\n\n/** Counter (CTR) **/\n\nmodes.ctr = function(options) {\n  options = options || {};\n  this.name = 'CTR';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.ctr.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv, this.blockSize);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.ctr.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block (CTR always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n  } else {\n    // handle partial block\n    var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n    if(partialBytes > 0) {\n      partialBytes = this.blockSize - partialBytes;\n    }\n\n    // XOR input with output\n    this._partialOutput.clear();\n    for(var i = 0; i < this._ints; ++i) {\n      this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n\n    if(partialBytes > 0) {\n      // block still incomplete, restore input buffer\n      input.read -= this.blockSize;\n    }\n\n    // skip any previous partial bytes\n    if(this._partialBytes > 0) {\n      this._partialOutput.getBytes(this._partialBytes);\n    }\n\n    if(partialBytes > 0 && !finish) {\n      output.putBytes(this._partialOutput.getBytes(\n        partialBytes - this._partialBytes));\n      this._partialBytes = partialBytes;\n      return true;\n    }\n\n    output.putBytes(this._partialOutput.getBytes(\n      inputLength - this._partialBytes));\n    this._partialBytes = 0;\n  }\n\n  // block complete, increment counter (input block)\n  inc32(this._inBlock);\n};\n\nmodes.ctr.prototype.decrypt = modes.ctr.prototype.encrypt;\n\n/** Galois/Counter Mode (GCM) **/\n\nmodes.gcm = function(options) {\n  options = options || {};\n  this.name = 'GCM';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n\n  // R is actually this value concatenated with 120 more zero bits, but\n  // we only XOR against R so the other zeros have no effect -- we just\n  // apply this value to the first integer in a block\n  this._R = 0xE1000000;\n};\n\nmodes.gcm.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // ensure IV is a byte buffer\n  var iv = forge.util.createBuffer(options.iv);\n\n  // no ciphered data processed yet\n  this._cipherLength = 0;\n\n  // default additional data is none\n  var additionalData;\n  if('additionalData' in options) {\n    additionalData = forge.util.createBuffer(options.additionalData);\n  } else {\n    additionalData = forge.util.createBuffer();\n  }\n\n  // default tag length is 128 bits\n  if('tagLength' in options) {\n    this._tagLength = options.tagLength;\n  } else {\n    this._tagLength = 128;\n  }\n\n  // if tag is given, ensure tag matches tag length\n  this._tag = null;\n  if(options.decrypt) {\n    // save tag to check later\n    this._tag = forge.util.createBuffer(options.tag).getBytes();\n    if(this._tag.length !== (this._tagLength / 8)) {\n      throw new Error('Authentication tag does not match tag length.');\n    }\n  }\n\n  // create tmp storage for hash calculation\n  this._hashBlock = new Array(this._ints);\n\n  // no tag generated yet\n  this.tag = null;\n\n  // generate hash subkey\n  // (apply block cipher to \"zero\" block)\n  this._hashSubkey = new Array(this._ints);\n  this.cipher.encrypt([0, 0, 0, 0], this._hashSubkey);\n\n  // generate table M\n  // use 4-bit tables (32 component decomposition of a 16 byte value)\n  // 8-bit tables take more space and are known to have security\n  // vulnerabilities (in native implementations)\n  this.componentBits = 4;\n  this._m = this.generateHashTable(this._hashSubkey, this.componentBits);\n\n  // Note: support IV length different from 96 bits? (only supporting\n  // 96 bits is recommended by NIST SP-800-38D)\n  // generate J_0\n  var ivLength = iv.length();\n  if(ivLength === 12) {\n    // 96-bit IV\n    this._j0 = [iv.getInt32(), iv.getInt32(), iv.getInt32(), 1];\n  } else {\n    // IV is NOT 96-bits\n    this._j0 = [0, 0, 0, 0];\n    while(iv.length() > 0) {\n      this._j0 = this.ghash(\n        this._hashSubkey, this._j0,\n        [iv.getInt32(), iv.getInt32(), iv.getInt32(), iv.getInt32()]);\n    }\n    this._j0 = this.ghash(\n      this._hashSubkey, this._j0, [0, 0].concat(from64To32(ivLength * 8)));\n  }\n\n  // generate ICB (initial counter block)\n  this._inBlock = this._j0.slice(0);\n  inc32(this._inBlock);\n  this._partialBytes = 0;\n\n  // consume authentication data\n  additionalData = forge.util.createBuffer(additionalData);\n  // save additional data length as a BE 64-bit number\n  this._aDataLength = from64To32(additionalData.length() * 8);\n  // pad additional data to 128 bit (16 byte) block size\n  var overflow = additionalData.length() % this.blockSize;\n  if(overflow) {\n    additionalData.fillWithByte(0, this.blockSize - overflow);\n  }\n  this._s = [0, 0, 0, 0];\n  while(additionalData.length() > 0) {\n    this._s = this.ghash(this._hashSubkey, this._s, [\n      additionalData.getInt32(),\n      additionalData.getInt32(),\n      additionalData.getInt32(),\n      additionalData.getInt32()\n    ]);\n  }\n};\n\nmodes.gcm.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(this._outBlock[i] ^= input.getInt32());\n    }\n    this._cipherLength += this.blockSize;\n  } else {\n    // handle partial block\n    var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n    if(partialBytes > 0) {\n      partialBytes = this.blockSize - partialBytes;\n    }\n\n    // XOR input with output\n    this._partialOutput.clear();\n    for(var i = 0; i < this._ints; ++i) {\n      this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n\n    if(partialBytes <= 0 || finish) {\n      // handle overflow prior to hashing\n      if(finish) {\n        // get block overflow\n        var overflow = inputLength % this.blockSize;\n        this._cipherLength += overflow;\n        // truncate for hash function\n        this._partialOutput.truncate(this.blockSize - overflow);\n      } else {\n        this._cipherLength += this.blockSize;\n      }\n\n      // get output block for hashing\n      for(var i = 0; i < this._ints; ++i) {\n        this._outBlock[i] = this._partialOutput.getInt32();\n      }\n      this._partialOutput.read -= this.blockSize;\n    }\n\n    // skip any previous partial bytes\n    if(this._partialBytes > 0) {\n      this._partialOutput.getBytes(this._partialBytes);\n    }\n\n    if(partialBytes > 0 && !finish) {\n      // block still incomplete, restore input buffer, get partial output,\n      // and return early\n      input.read -= this.blockSize;\n      output.putBytes(this._partialOutput.getBytes(\n        partialBytes - this._partialBytes));\n      this._partialBytes = partialBytes;\n      return true;\n    }\n\n    output.putBytes(this._partialOutput.getBytes(\n      inputLength - this._partialBytes));\n    this._partialBytes = 0;\n  }\n\n  // update hash block S\n  this._s = this.ghash(this._hashSubkey, this._s, this._outBlock);\n\n  // increment counter (input block)\n  inc32(this._inBlock);\n};\n\nmodes.gcm.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  var inputLength = input.length();\n  if(inputLength < this.blockSize && !(finish && inputLength > 0)) {\n    return true;\n  }\n\n  // encrypt block (GCM always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // increment counter (input block)\n  inc32(this._inBlock);\n\n  // update hash block S\n  this._hashBlock[0] = input.getInt32();\n  this._hashBlock[1] = input.getInt32();\n  this._hashBlock[2] = input.getInt32();\n  this._hashBlock[3] = input.getInt32();\n  this._s = this.ghash(this._hashSubkey, this._s, this._hashBlock);\n\n  // XOR hash input with output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i] ^ this._hashBlock[i]);\n  }\n\n  // increment cipher data length\n  if(inputLength < this.blockSize) {\n    this._cipherLength += inputLength % this.blockSize;\n  } else {\n    this._cipherLength += this.blockSize;\n  }\n};\n\nmodes.gcm.prototype.afterFinish = function(output, options) {\n  var rval = true;\n\n  // handle overflow\n  if(options.decrypt && options.overflow) {\n    output.truncate(this.blockSize - options.overflow);\n  }\n\n  // handle authentication tag\n  this.tag = forge.util.createBuffer();\n\n  // concatenate additional data length with cipher length\n  var lengths = this._aDataLength.concat(from64To32(this._cipherLength * 8));\n\n  // include lengths in hash\n  this._s = this.ghash(this._hashSubkey, this._s, lengths);\n\n  // do GCTR(J_0, S)\n  var tag = [];\n  this.cipher.encrypt(this._j0, tag);\n  for(var i = 0; i < this._ints; ++i) {\n    this.tag.putInt32(this._s[i] ^ tag[i]);\n  }\n\n  // trim tag to length\n  this.tag.truncate(this.tag.length() % (this._tagLength / 8));\n\n  // check authentication tag\n  if(options.decrypt && this.tag.bytes() !== this._tag) {\n    rval = false;\n  }\n\n  return rval;\n};\n\n/**\n * See NIST SP-800-38D 6.3 (Algorithm 1). This function performs Galois\n * field multiplication. The field, GF(2^128), is defined by the polynomial:\n *\n * x^128 + x^7 + x^2 + x + 1\n *\n * Which is represented in little-endian binary form as: 11100001 (0xe1). When\n * the value of a coefficient is 1, a bit is set. The value R, is the\n * concatenation of this value and 120 zero bits, yielding a 128-bit value\n * which matches the block size.\n *\n * This function will multiply two elements (vectors of bytes), X and Y, in\n * the field GF(2^128). The result is initialized to zero. For each bit of\n * X (out of 128), x_i, if x_i is set, then the result is multiplied (XOR'd)\n * by the current value of Y. For each bit, the value of Y will be raised by\n * a power of x (multiplied by the polynomial x). This can be achieved by\n * shifting Y once to the right. If the current value of Y, prior to being\n * multiplied by x, has 0 as its LSB, then it is a 127th degree polynomial.\n * Otherwise, we must divide by R after shifting to find the remainder.\n *\n * @param x the first block to multiply by the second.\n * @param y the second block to multiply by the first.\n *\n * @return the block result of the multiplication.\n */\nmodes.gcm.prototype.multiply = function(x, y) {\n  var z_i = [0, 0, 0, 0];\n  var v_i = y.slice(0);\n\n  // calculate Z_128 (block has 128 bits)\n  for(var i = 0; i < 128; ++i) {\n    // if x_i is 0, Z_{i+1} = Z_i (unchanged)\n    // else Z_{i+1} = Z_i ^ V_i\n    // get x_i by finding 32-bit int position, then left shift 1 by remainder\n    var x_i = x[(i / 32) | 0] & (1 << (31 - i % 32));\n    if(x_i) {\n      z_i[0] ^= v_i[0];\n      z_i[1] ^= v_i[1];\n      z_i[2] ^= v_i[2];\n      z_i[3] ^= v_i[3];\n    }\n\n    // if LSB(V_i) is 1, V_i = V_i >> 1\n    // else V_i = (V_i >> 1) ^ R\n    this.pow(v_i, v_i);\n  }\n\n  return z_i;\n};\n\nmodes.gcm.prototype.pow = function(x, out) {\n  // if LSB(x) is 1, x = x >>> 1\n  // else x = (x >>> 1) ^ R\n  var lsb = x[3] & 1;\n\n  // always do x >>> 1:\n  // starting with the rightmost integer, shift each integer to the right\n  // one bit, pulling in the bit from the integer to the left as its top\n  // most bit (do this for the last 3 integers)\n  for(var i = 3; i > 0; --i) {\n    out[i] = (x[i] >>> 1) | ((x[i - 1] & 1) << 31);\n  }\n  // shift the first integer normally\n  out[0] = x[0] >>> 1;\n\n  // if lsb was not set, then polynomial had a degree of 127 and doesn't\n  // need to divided; otherwise, XOR with R to find the remainder; we only\n  // need to XOR the first integer since R technically ends w/120 zero bits\n  if(lsb) {\n    out[0] ^= this._R;\n  }\n};\n\nmodes.gcm.prototype.tableMultiply = function(x) {\n  // assumes 4-bit tables are used\n  var z = [0, 0, 0, 0];\n  for(var i = 0; i < 32; ++i) {\n    var idx = (i / 8) | 0;\n    var x_i = (x[idx] >>> ((7 - (i % 8)) * 4)) & 0xF;\n    var ah = this._m[i][x_i];\n    z[0] ^= ah[0];\n    z[1] ^= ah[1];\n    z[2] ^= ah[2];\n    z[3] ^= ah[3];\n  }\n  return z;\n};\n\n/**\n * A continuing version of the GHASH algorithm that operates on a single\n * block. The hash block, last hash value (Ym) and the new block to hash\n * are given.\n *\n * @param h the hash block.\n * @param y the previous value for Ym, use [0, 0, 0, 0] for a new hash.\n * @param x the block to hash.\n *\n * @return the hashed value (Ym).\n */\nmodes.gcm.prototype.ghash = function(h, y, x) {\n  y[0] ^= x[0];\n  y[1] ^= x[1];\n  y[2] ^= x[2];\n  y[3] ^= x[3];\n  return this.tableMultiply(y);\n  //return this.multiply(y, h);\n};\n\n/**\n * Precomputes a table for multiplying against the hash subkey. This\n * mechanism provides a substantial speed increase over multiplication\n * performed without a table. The table-based multiplication this table is\n * for solves X * H by multiplying each component of X by H and then\n * composing the results together using XOR.\n *\n * This function can be used to generate tables with different bit sizes\n * for the components, however, this implementation assumes there are\n * 32 components of X (which is a 16 byte vector), therefore each component\n * takes 4-bits (so the table is constructed with bits=4).\n *\n * @param h the hash subkey.\n * @param bits the bit size for a component.\n */\nmodes.gcm.prototype.generateHashTable = function(h, bits) {\n  // TODO: There are further optimizations that would use only the\n  // first table M_0 (or some variant) along with a remainder table;\n  // this can be explored in the future\n  var multiplier = 8 / bits;\n  var perInt = 4 * multiplier;\n  var size = 16 * multiplier;\n  var m = new Array(size);\n  for(var i = 0; i < size; ++i) {\n    var tmp = [0, 0, 0, 0];\n    var idx = (i / perInt) | 0;\n    var shft = ((perInt - 1 - (i % perInt)) * bits);\n    tmp[idx] = (1 << (bits - 1)) << shft;\n    m[i] = this.generateSubHashTable(this.multiply(tmp, h), bits);\n  }\n  return m;\n};\n\n/**\n * Generates a table for multiplying against the hash subkey for one\n * particular component (out of all possible component values).\n *\n * @param mid the pre-multiplied value for the middle key of the table.\n * @param bits the bit size for a component.\n */\nmodes.gcm.prototype.generateSubHashTable = function(mid, bits) {\n  // compute the table quickly by minimizing the number of\n  // POW operations -- they only need to be performed for powers of 2,\n  // all other entries can be composed from those powers using XOR\n  var size = 1 << bits;\n  var half = size >>> 1;\n  var m = new Array(size);\n  m[half] = mid.slice(0);\n  var i = half >>> 1;\n  while(i > 0) {\n    // raise m0[2 * i] and store in m0[i]\n    this.pow(m[2 * i], m[i] = []);\n    i >>= 1;\n  }\n  i = 2;\n  while(i < half) {\n    for(var j = 1; j < i; ++j) {\n      var m_i = m[i];\n      var m_j = m[j];\n      m[i + j] = [\n        m_i[0] ^ m_j[0],\n        m_i[1] ^ m_j[1],\n        m_i[2] ^ m_j[2],\n        m_i[3] ^ m_j[3]\n      ];\n    }\n    i *= 2;\n  }\n  m[0] = [0, 0, 0, 0];\n  /* Note: We could avoid storing these by doing composition during multiply\n  calculate top half using composition by speed is preferred. */\n  for(i = half + 1; i < size; ++i) {\n    var c = m[i ^ half];\n    m[i] = [mid[0] ^ c[0], mid[1] ^ c[1], mid[2] ^ c[2], mid[3] ^ c[3]];\n  }\n  return m;\n};\n\n/** Utility functions */\n\nfunction transformIV(iv, blockSize) {\n  if(typeof iv === 'string') {\n    // convert iv string into byte buffer\n    iv = forge.util.createBuffer(iv);\n  }\n\n  if(forge.util.isArray(iv) && iv.length > 4) {\n    // convert iv byte array into byte buffer\n    var tmp = iv;\n    iv = forge.util.createBuffer();\n    for(var i = 0; i < tmp.length; ++i) {\n      iv.putByte(tmp[i]);\n    }\n  }\n\n  if(iv.length() < blockSize) {\n    throw new Error(\n      'Invalid IV length; got ' + iv.length() +\n      ' bytes and expected ' + blockSize + ' bytes.');\n  }\n\n  if(!forge.util.isArray(iv)) {\n    // convert iv byte buffer into 32-bit integer array\n    var ints = [];\n    var blocks = blockSize / 4;\n    for(var i = 0; i < blocks; ++i) {\n      ints.push(iv.getInt32());\n    }\n    iv = ints;\n  }\n\n  return iv;\n}\n\nfunction inc32(block) {\n  // increment last 32 bits of block only\n  block[block.length - 1] = (block[block.length - 1] + 1) & 0xFFFFFFFF;\n}\n\nfunction from64To32(num) {\n  // convert 64-bit number to two BE Int32s\n  return [(num / 0x100000000) | 0, num & 0xFFFFFFFF];\n}\n","/**\n * DES (Data Encryption Standard) implementation.\n *\n * This implementation supports DES as well as 3DES-EDE in ECB and CBC mode.\n * It is based on the BSD-licensed implementation by Paul Tero:\n *\n * Paul Tero, July 2001\n * http://www.tero.co.uk/des/\n *\n * Optimised for performance with large blocks by\n * Michael Hayworth, November 2001\n * http://www.netdealing.com\n *\n * THIS SOFTWARE IS PROVIDED \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2012-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./cipher');\nrequire('./cipherModes');\nrequire('./util');\n\n/* DES API */\nmodule.exports = forge.des = forge.des || {};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('DES-<mode>', key);\n * cipher.start({iv: iv});\n *\n * Creates an DES cipher object to encrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as binary-encoded strings of bytes or\n * byte buffers.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC' if IV is\n *          given, 'ECB' if null).\n *\n * @return the cipher.\n */\nforge.des.startEncrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: false,\n    mode: mode || (iv === null ? 'ECB' : 'CBC')\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('DES-<mode>', key);\n *\n * Creates an DES cipher object to encrypt data using the given symmetric key.\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.des.createEncryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: false,\n    mode: mode\n  });\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('DES-<mode>', key);\n * decipher.start({iv: iv});\n *\n * Creates an DES cipher object to decrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as binary-encoded strings of bytes or\n * byte buffers.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC' if IV is\n *          given, 'ECB' if null).\n *\n * @return the cipher.\n */\nforge.des.startDecrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: true,\n    mode: mode || (iv === null ? 'ECB' : 'CBC')\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('DES-<mode>', key);\n *\n * Creates an DES cipher object to decrypt data using the given symmetric key.\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.des.createDecryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: true,\n    mode: mode\n  });\n};\n\n/**\n * Creates a new DES cipher algorithm object.\n *\n * @param name the name of the algorithm.\n * @param mode the mode factory function.\n *\n * @return the DES algorithm object.\n */\nforge.des.Algorithm = function(name, mode) {\n  var self = this;\n  self.name = name;\n  self.mode = new mode({\n    blockSize: 8,\n    cipher: {\n      encrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._keys, inBlock, outBlock, false);\n      },\n      decrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._keys, inBlock, outBlock, true);\n      }\n    }\n  });\n  self._init = false;\n};\n\n/**\n * Initializes this DES algorithm by expanding its key.\n *\n * @param options the options to use.\n *          key the key to use with this algorithm.\n *          decrypt true if the algorithm should be initialized for decryption,\n *            false for encryption.\n */\nforge.des.Algorithm.prototype.initialize = function(options) {\n  if(this._init) {\n    return;\n  }\n\n  var key = forge.util.createBuffer(options.key);\n  if(this.name.indexOf('3DES') === 0) {\n    if(key.length() !== 24) {\n      throw new Error('Invalid Triple-DES key size: ' + key.length() * 8);\n    }\n  }\n\n  // do key expansion to 16 or 48 subkeys (single or triple DES)\n  this._keys = _createKeys(key);\n  this._init = true;\n};\n\n/** Register DES algorithms **/\n\nregisterAlgorithm('DES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('DES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('DES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('DES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('DES-CTR', forge.cipher.modes.ctr);\n\nregisterAlgorithm('3DES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('3DES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('3DES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('3DES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('3DES-CTR', forge.cipher.modes.ctr);\n\nfunction registerAlgorithm(name, mode) {\n  var factory = function() {\n    return new forge.des.Algorithm(name, mode);\n  };\n  forge.cipher.registerAlgorithm(name, factory);\n}\n\n/** DES implementation **/\n\nvar spfunction1 = [0x1010400,0,0x10000,0x1010404,0x1010004,0x10404,0x4,0x10000,0x400,0x1010400,0x1010404,0x400,0x1000404,0x1010004,0x1000000,0x4,0x404,0x1000400,0x1000400,0x10400,0x10400,0x1010000,0x1010000,0x1000404,0x10004,0x1000004,0x1000004,0x10004,0,0x404,0x10404,0x1000000,0x10000,0x1010404,0x4,0x1010000,0x1010400,0x1000000,0x1000000,0x400,0x1010004,0x10000,0x10400,0x1000004,0x400,0x4,0x1000404,0x10404,0x1010404,0x10004,0x1010000,0x1000404,0x1000004,0x404,0x10404,0x1010400,0x404,0x1000400,0x1000400,0,0x10004,0x10400,0,0x1010004];\nvar spfunction2 = [-0x7fef7fe0,-0x7fff8000,0x8000,0x108020,0x100000,0x20,-0x7fefffe0,-0x7fff7fe0,-0x7fffffe0,-0x7fef7fe0,-0x7fef8000,-0x80000000,-0x7fff8000,0x100000,0x20,-0x7fefffe0,0x108000,0x100020,-0x7fff7fe0,0,-0x80000000,0x8000,0x108020,-0x7ff00000,0x100020,-0x7fffffe0,0,0x108000,0x8020,-0x7fef8000,-0x7ff00000,0x8020,0,0x108020,-0x7fefffe0,0x100000,-0x7fff7fe0,-0x7ff00000,-0x7fef8000,0x8000,-0x7ff00000,-0x7fff8000,0x20,-0x7fef7fe0,0x108020,0x20,0x8000,-0x80000000,0x8020,-0x7fef8000,0x100000,-0x7fffffe0,0x100020,-0x7fff7fe0,-0x7fffffe0,0x100020,0x108000,0,-0x7fff8000,0x8020,-0x80000000,-0x7fefffe0,-0x7fef7fe0,0x108000];\nvar spfunction3 = [0x208,0x8020200,0,0x8020008,0x8000200,0,0x20208,0x8000200,0x20008,0x8000008,0x8000008,0x20000,0x8020208,0x20008,0x8020000,0x208,0x8000000,0x8,0x8020200,0x200,0x20200,0x8020000,0x8020008,0x20208,0x8000208,0x20200,0x20000,0x8000208,0x8,0x8020208,0x200,0x8000000,0x8020200,0x8000000,0x20008,0x208,0x20000,0x8020200,0x8000200,0,0x200,0x20008,0x8020208,0x8000200,0x8000008,0x200,0,0x8020008,0x8000208,0x20000,0x8000000,0x8020208,0x8,0x20208,0x20200,0x8000008,0x8020000,0x8000208,0x208,0x8020000,0x20208,0x8,0x8020008,0x20200];\nvar spfunction4 = [0x802001,0x2081,0x2081,0x80,0x802080,0x800081,0x800001,0x2001,0,0x802000,0x802000,0x802081,0x81,0,0x800080,0x800001,0x1,0x2000,0x800000,0x802001,0x80,0x800000,0x2001,0x2080,0x800081,0x1,0x2080,0x800080,0x2000,0x802080,0x802081,0x81,0x800080,0x800001,0x802000,0x802081,0x81,0,0,0x802000,0x2080,0x800080,0x800081,0x1,0x802001,0x2081,0x2081,0x80,0x802081,0x81,0x1,0x2000,0x800001,0x2001,0x802080,0x800081,0x2001,0x2080,0x800000,0x802001,0x80,0x800000,0x2000,0x802080];\nvar spfunction5 = [0x100,0x2080100,0x2080000,0x42000100,0x80000,0x100,0x40000000,0x2080000,0x40080100,0x80000,0x2000100,0x40080100,0x42000100,0x42080000,0x80100,0x40000000,0x2000000,0x40080000,0x40080000,0,0x40000100,0x42080100,0x42080100,0x2000100,0x42080000,0x40000100,0,0x42000000,0x2080100,0x2000000,0x42000000,0x80100,0x80000,0x42000100,0x100,0x2000000,0x40000000,0x2080000,0x42000100,0x40080100,0x2000100,0x40000000,0x42080000,0x2080100,0x40080100,0x100,0x2000000,0x42080000,0x42080100,0x80100,0x42000000,0x42080100,0x2080000,0,0x40080000,0x42000000,0x80100,0x2000100,0x40000100,0x80000,0,0x40080000,0x2080100,0x40000100];\nvar spfunction6 = [0x20000010,0x20400000,0x4000,0x20404010,0x20400000,0x10,0x20404010,0x400000,0x20004000,0x404010,0x400000,0x20000010,0x400010,0x20004000,0x20000000,0x4010,0,0x400010,0x20004010,0x4000,0x404000,0x20004010,0x10,0x20400010,0x20400010,0,0x404010,0x20404000,0x4010,0x404000,0x20404000,0x20000000,0x20004000,0x10,0x20400010,0x404000,0x20404010,0x400000,0x4010,0x20000010,0x400000,0x20004000,0x20000000,0x4010,0x20000010,0x20404010,0x404000,0x20400000,0x404010,0x20404000,0,0x20400010,0x10,0x4000,0x20400000,0x404010,0x4000,0x400010,0x20004010,0,0x20404000,0x20000000,0x400010,0x20004010];\nvar spfunction7 = [0x200000,0x4200002,0x4000802,0,0x800,0x4000802,0x200802,0x4200800,0x4200802,0x200000,0,0x4000002,0x2,0x4000000,0x4200002,0x802,0x4000800,0x200802,0x200002,0x4000800,0x4000002,0x4200000,0x4200800,0x200002,0x4200000,0x800,0x802,0x4200802,0x200800,0x2,0x4000000,0x200800,0x4000000,0x200800,0x200000,0x4000802,0x4000802,0x4200002,0x4200002,0x2,0x200002,0x4000000,0x4000800,0x200000,0x4200800,0x802,0x200802,0x4200800,0x802,0x4000002,0x4200802,0x4200000,0x200800,0,0x2,0x4200802,0,0x200802,0x4200000,0x800,0x4000002,0x4000800,0x800,0x200002];\nvar spfunction8 = [0x10001040,0x1000,0x40000,0x10041040,0x10000000,0x10001040,0x40,0x10000000,0x40040,0x10040000,0x10041040,0x41000,0x10041000,0x41040,0x1000,0x40,0x10040000,0x10000040,0x10001000,0x1040,0x41000,0x40040,0x10040040,0x10041000,0x1040,0,0,0x10040040,0x10000040,0x10001000,0x41040,0x40000,0x41040,0x40000,0x10041000,0x1000,0x40,0x10040040,0x1000,0x41040,0x10001000,0x40,0x10000040,0x10040000,0x10040040,0x10000000,0x40000,0x10001040,0,0x10041040,0x40040,0x10000040,0x10040000,0x10001000,0x10001040,0,0x10041040,0x41000,0x41000,0x1040,0x1040,0x40040,0x10000000,0x10041000];\n\n/**\n * Create necessary sub keys.\n *\n * @param key the 64-bit or 192-bit key.\n *\n * @return the expanded keys.\n */\nfunction _createKeys(key) {\n  var pc2bytes0  = [0,0x4,0x20000000,0x20000004,0x10000,0x10004,0x20010000,0x20010004,0x200,0x204,0x20000200,0x20000204,0x10200,0x10204,0x20010200,0x20010204],\n      pc2bytes1  = [0,0x1,0x100000,0x100001,0x4000000,0x4000001,0x4100000,0x4100001,0x100,0x101,0x100100,0x100101,0x4000100,0x4000101,0x4100100,0x4100101],\n      pc2bytes2  = [0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808,0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808],\n      pc2bytes3  = [0,0x200000,0x8000000,0x8200000,0x2000,0x202000,0x8002000,0x8202000,0x20000,0x220000,0x8020000,0x8220000,0x22000,0x222000,0x8022000,0x8222000],\n      pc2bytes4  = [0,0x40000,0x10,0x40010,0,0x40000,0x10,0x40010,0x1000,0x41000,0x1010,0x41010,0x1000,0x41000,0x1010,0x41010],\n      pc2bytes5  = [0,0x400,0x20,0x420,0,0x400,0x20,0x420,0x2000000,0x2000400,0x2000020,0x2000420,0x2000000,0x2000400,0x2000020,0x2000420],\n      pc2bytes6  = [0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002,0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002],\n      pc2bytes7  = [0,0x10000,0x800,0x10800,0x20000000,0x20010000,0x20000800,0x20010800,0x20000,0x30000,0x20800,0x30800,0x20020000,0x20030000,0x20020800,0x20030800],\n      pc2bytes8  = [0,0x40000,0,0x40000,0x2,0x40002,0x2,0x40002,0x2000000,0x2040000,0x2000000,0x2040000,0x2000002,0x2040002,0x2000002,0x2040002],\n      pc2bytes9  = [0,0x10000000,0x8,0x10000008,0,0x10000000,0x8,0x10000008,0x400,0x10000400,0x408,0x10000408,0x400,0x10000400,0x408,0x10000408],\n      pc2bytes10 = [0,0x20,0,0x20,0x100000,0x100020,0x100000,0x100020,0x2000,0x2020,0x2000,0x2020,0x102000,0x102020,0x102000,0x102020],\n      pc2bytes11 = [0,0x1000000,0x200,0x1000200,0x200000,0x1200000,0x200200,0x1200200,0x4000000,0x5000000,0x4000200,0x5000200,0x4200000,0x5200000,0x4200200,0x5200200],\n      pc2bytes12 = [0,0x1000,0x8000000,0x8001000,0x80000,0x81000,0x8080000,0x8081000,0x10,0x1010,0x8000010,0x8001010,0x80010,0x81010,0x8080010,0x8081010],\n      pc2bytes13 = [0,0x4,0x100,0x104,0,0x4,0x100,0x104,0x1,0x5,0x101,0x105,0x1,0x5,0x101,0x105];\n\n  // how many iterations (1 for des, 3 for triple des)\n  // changed by Paul 16/6/2007 to use Triple DES for 9+ byte keys\n  var iterations = key.length() > 8 ? 3 : 1;\n\n  // stores the return keys\n  var keys = [];\n\n  // now define the left shifts which need to be done\n  var shifts = [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0];\n\n  var n = 0, tmp;\n  for(var j = 0; j < iterations; j++) {\n    var left = key.getInt32();\n    var right = key.getInt32();\n\n    tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n    right ^= tmp;\n    left ^= (tmp << 4);\n\n    tmp = ((right >>> -16) ^ left) & 0x0000ffff;\n    left ^= tmp;\n    right ^= (tmp << -16);\n\n    tmp = ((left >>> 2) ^ right) & 0x33333333;\n    right ^= tmp;\n    left ^= (tmp << 2);\n\n    tmp = ((right >>> -16) ^ left) & 0x0000ffff;\n    left ^= tmp;\n    right ^= (tmp << -16);\n\n    tmp = ((left >>> 1) ^ right) & 0x55555555;\n    right ^= tmp;\n    left ^= (tmp << 1);\n\n    tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n    left ^= tmp;\n    right ^= (tmp << 8);\n\n    tmp = ((left >>> 1) ^ right) & 0x55555555;\n    right ^= tmp;\n    left ^= (tmp << 1);\n\n    // right needs to be shifted and OR'd with last four bits of left\n    tmp = (left << 8) | ((right >>> 20) & 0x000000f0);\n\n    // left needs to be put upside down\n    left = ((right << 24) | ((right << 8) & 0xff0000) |\n      ((right >>> 8) & 0xff00) | ((right >>> 24) & 0xf0));\n    right = tmp;\n\n    // now go through and perform these shifts on the left and right keys\n    for(var i = 0; i < shifts.length; ++i) {\n      //shift the keys either one or two bits to the left\n      if(shifts[i]) {\n        left = (left << 2) | (left >>> 26);\n        right = (right << 2) | (right >>> 26);\n      } else {\n        left = (left << 1) | (left >>> 27);\n        right = (right << 1) | (right >>> 27);\n      }\n      left &= -0xf;\n      right &= -0xf;\n\n      // now apply PC-2, in such a way that E is easier when encrypting or\n      // decrypting this conversion will look like PC-2 except only the last 6\n      // bits of each byte are used rather than 48 consecutive bits and the\n      // order of lines will be according to how the S selection functions will\n      // be applied: S2, S4, S6, S8, S1, S3, S5, S7\n      var lefttmp = (\n        pc2bytes0[left >>> 28] | pc2bytes1[(left >>> 24) & 0xf] |\n        pc2bytes2[(left >>> 20) & 0xf] | pc2bytes3[(left >>> 16) & 0xf] |\n        pc2bytes4[(left >>> 12) & 0xf] | pc2bytes5[(left >>> 8) & 0xf] |\n        pc2bytes6[(left >>> 4) & 0xf]);\n      var righttmp = (\n        pc2bytes7[right >>> 28] | pc2bytes8[(right >>> 24) & 0xf] |\n        pc2bytes9[(right >>> 20) & 0xf] | pc2bytes10[(right >>> 16) & 0xf] |\n        pc2bytes11[(right >>> 12) & 0xf] | pc2bytes12[(right >>> 8) & 0xf] |\n        pc2bytes13[(right >>> 4) & 0xf]);\n      tmp = ((righttmp >>> 16) ^ lefttmp) & 0x0000ffff;\n      keys[n++] = lefttmp ^ tmp;\n      keys[n++] = righttmp ^ (tmp << 16);\n    }\n  }\n\n  return keys;\n}\n\n/**\n * Updates a single block (1 byte) using DES. The update will either\n * encrypt or decrypt the block.\n *\n * @param keys the expanded keys.\n * @param input the input block (an array of 32-bit words).\n * @param output the updated output block.\n * @param decrypt true to decrypt the block, false to encrypt it.\n */\nfunction _updateBlock(keys, input, output, decrypt) {\n  // set up loops for single or triple DES\n  var iterations = keys.length === 32 ? 3 : 9;\n  var looping;\n  if(iterations === 3) {\n    looping = decrypt ? [30, -2, -2] : [0, 32, 2];\n  } else {\n    looping = (decrypt ?\n      [94, 62, -2, 32, 64, 2, 30, -2, -2] :\n      [0, 32, 2, 62, 30, -2, 64, 96, 2]);\n  }\n\n  var tmp;\n\n  var left = input[0];\n  var right = input[1];\n\n  // first each 64 bit chunk of the message must be permuted according to IP\n  tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n  right ^= tmp;\n  left ^= (tmp << 4);\n\n  tmp = ((left >>> 16) ^ right) & 0x0000ffff;\n  right ^= tmp;\n  left ^= (tmp << 16);\n\n  tmp = ((right >>> 2) ^ left) & 0x33333333;\n  left ^= tmp;\n  right ^= (tmp << 2);\n\n  tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n  left ^= tmp;\n  right ^= (tmp << 8);\n\n  tmp = ((left >>> 1) ^ right) & 0x55555555;\n  right ^= tmp;\n  left ^= (tmp << 1);\n\n  // rotate left 1 bit\n  left = ((left << 1) | (left >>> 31));\n  right = ((right << 1) | (right >>> 31));\n\n  for(var j = 0; j < iterations; j += 3) {\n    var endloop = looping[j + 1];\n    var loopinc = looping[j + 2];\n\n    // now go through and perform the encryption or decryption\n    for(var i = looping[j]; i != endloop; i += loopinc) {\n      var right1 = right ^ keys[i];\n      var right2 = ((right >>> 4) | (right << 28)) ^ keys[i + 1];\n\n      // passing these bytes through the S selection functions\n      tmp = left;\n      left = right;\n      right = tmp ^ (\n        spfunction2[(right1 >>> 24) & 0x3f] |\n        spfunction4[(right1 >>> 16) & 0x3f] |\n        spfunction6[(right1 >>>  8) & 0x3f] |\n        spfunction8[right1 & 0x3f] |\n        spfunction1[(right2 >>> 24) & 0x3f] |\n        spfunction3[(right2 >>> 16) & 0x3f] |\n        spfunction5[(right2 >>>  8) & 0x3f] |\n        spfunction7[right2 & 0x3f]);\n    }\n    // unreverse left and right\n    tmp = left;\n    left = right;\n    right = tmp;\n  }\n\n  // rotate right 1 bit\n  left = ((left >>> 1) | (left << 31));\n  right = ((right >>> 1) | (right << 31));\n\n  // now perform IP-1, which is IP in the opposite direction\n  tmp = ((left >>> 1) ^ right) & 0x55555555;\n  right ^= tmp;\n  left ^= (tmp << 1);\n\n  tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n  left ^= tmp;\n  right ^= (tmp << 8);\n\n  tmp = ((right >>> 2) ^ left) & 0x33333333;\n  left ^= tmp;\n  right ^= (tmp << 2);\n\n  tmp = ((left >>> 16) ^ right) & 0x0000ffff;\n  right ^= tmp;\n  left ^= (tmp << 16);\n\n  tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n  right ^= tmp;\n  left ^= (tmp << 4);\n\n  output[0] = left;\n  output[1] = right;\n}\n\n/**\n * Deprecated. Instead, use:\n *\n * forge.cipher.createCipher('DES-<mode>', key);\n * forge.cipher.createDecipher('DES-<mode>', key);\n *\n * Creates a deprecated DES cipher object. This object's mode will default to\n * CBC (cipher-block-chaining).\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param options the options to use.\n *          key the symmetric key to use (64 or 192 bits).\n *          output the buffer to write to.\n *          decrypt true for decryption, false for encryption.\n *          mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nfunction _createCipher(options) {\n  options = options || {};\n  var mode = (options.mode || 'CBC').toUpperCase();\n  var algorithm = 'DES-' + mode;\n\n  var cipher;\n  if(options.decrypt) {\n    cipher = forge.cipher.createDecipher(algorithm, options.key);\n  } else {\n    cipher = forge.cipher.createCipher(algorithm, options.key);\n  }\n\n  // backwards compatible start API\n  var start = cipher.start;\n  cipher.start = function(iv, options) {\n    // backwards compatibility: support second arg as output buffer\n    var output = null;\n    if(options instanceof forge.util.ByteBuffer) {\n      output = options;\n      options = {};\n    }\n    options = options || {};\n    options.output = output;\n    options.iv = iv;\n    start.call(cipher, options);\n  };\n\n  return cipher;\n}\n","/**\n * JavaScript implementation of Ed25519.\n *\n * Copyright (c) 2017-2019 Digital Bazaar, Inc.\n *\n * This implementation is based on the most excellent TweetNaCl which is\n * in the public domain. Many thanks to its contributors:\n *\n * https://github.com/dchest/tweetnacl-js\n */\nvar forge = require('./forge');\nrequire('./jsbn');\nrequire('./random');\nrequire('./sha512');\nrequire('./util');\nvar asn1Validator = require('./asn1-validator');\nvar publicKeyValidator = asn1Validator.publicKeyValidator;\nvar privateKeyValidator = asn1Validator.privateKeyValidator;\n\nif(typeof BigInteger === 'undefined') {\n  var BigInteger = forge.jsbn.BigInteger;\n}\n\nvar ByteBuffer = forge.util.ByteBuffer;\nvar NativeBuffer = typeof Buffer === 'undefined' ? Uint8Array : Buffer;\n\n/*\n * Ed25519 algorithms, see RFC 8032:\n * https://tools.ietf.org/html/rfc8032\n */\nforge.pki = forge.pki || {};\nmodule.exports = forge.pki.ed25519 = forge.ed25519 = forge.ed25519 || {};\nvar ed25519 = forge.ed25519;\n\ned25519.constants = {};\ned25519.constants.PUBLIC_KEY_BYTE_LENGTH = 32;\ned25519.constants.PRIVATE_KEY_BYTE_LENGTH = 64;\ned25519.constants.SEED_BYTE_LENGTH = 32;\ned25519.constants.SIGN_BYTE_LENGTH = 64;\ned25519.constants.HASH_BYTE_LENGTH = 64;\n\ned25519.generateKeyPair = function(options) {\n  options = options || {};\n  var seed = options.seed;\n  if(seed === undefined) {\n    // generate seed\n    seed = forge.random.getBytesSync(ed25519.constants.SEED_BYTE_LENGTH);\n  } else if(typeof seed === 'string') {\n    if(seed.length !== ed25519.constants.SEED_BYTE_LENGTH) {\n      throw new TypeError(\n        '\"seed\" must be ' + ed25519.constants.SEED_BYTE_LENGTH +\n        ' bytes in length.');\n    }\n  } else if(!(seed instanceof Uint8Array)) {\n    throw new TypeError(\n      '\"seed\" must be a node.js Buffer, Uint8Array, or a binary string.');\n  }\n\n  seed = messageToNativeBuffer({message: seed, encoding: 'binary'});\n\n  var pk = new NativeBuffer(ed25519.constants.PUBLIC_KEY_BYTE_LENGTH);\n  var sk = new NativeBuffer(ed25519.constants.PRIVATE_KEY_BYTE_LENGTH);\n  for(var i = 0; i < 32; ++i) {\n    sk[i] = seed[i];\n  }\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, privateKey: sk};\n};\n\n/**\n * Converts a private key from a RFC8410 ASN.1 encoding.\n *\n * @param obj - The asn1 representation of a private key.\n *\n * @returns {Object} keyInfo - The key information.\n * @returns {Buffer|Uint8Array} keyInfo.privateKeyBytes - 32 private key bytes.\n */\ned25519.privateKeyFromAsn1 = function(obj) {\n  var capture = {};\n  var errors = [];\n  var valid = forge.asn1.validate(obj, privateKeyValidator, capture, errors);\n  if(!valid) {\n    var error = new Error('Invalid Key.');\n    error.errors = errors;\n    throw error;\n  }\n  var oid = forge.asn1.derToOid(capture.privateKeyOid);\n  var ed25519Oid = forge.oids.EdDSA25519;\n  if(oid !== ed25519Oid) {\n    throw new Error('Invalid OID \"' + oid + '\"; OID must be \"' +\n      ed25519Oid + '\".');\n  }\n  var privateKey = capture.privateKey;\n  // manually extract the private key bytes from nested octet string, see FIXME:\n  // https://github.com/digitalbazaar/forge/blob/master/lib/asn1.js#L542\n  var privateKeyBytes = messageToNativeBuffer({\n    message: forge.asn1.fromDer(privateKey).value,\n    encoding: 'binary'\n  });\n  // TODO: RFC8410 specifies a format for encoding the public key bytes along\n  // with the private key bytes. `publicKeyBytes` can be returned in the\n  // future. https://tools.ietf.org/html/rfc8410#section-10.3\n  return {privateKeyBytes: privateKeyBytes};\n};\n\n/**\n * Converts a public key from a RFC8410 ASN.1 encoding.\n *\n * @param obj - The asn1 representation of a public key.\n *\n * @return {Buffer|Uint8Array} - 32 public key bytes.\n */\ned25519.publicKeyFromAsn1 = function(obj) {\n  // get SubjectPublicKeyInfo\n  var capture = {};\n  var errors = [];\n  var valid = forge.asn1.validate(obj, publicKeyValidator, capture, errors);\n  if(!valid) {\n    var error = new Error('Invalid Key.');\n    error.errors = errors;\n    throw error;\n  }\n  var oid = forge.asn1.derToOid(capture.publicKeyOid);\n  var ed25519Oid = forge.oids.EdDSA25519;\n  if(oid !== ed25519Oid) {\n    throw new Error('Invalid OID \"' + oid + '\"; OID must be \"' +\n      ed25519Oid + '\".');\n  }\n  var publicKeyBytes = capture.ed25519PublicKey;\n  if(publicKeyBytes.length !== ed25519.constants.PUBLIC_KEY_BYTE_LENGTH) {\n    throw new Error('Key length is invalid.');\n  }\n  return messageToNativeBuffer({\n    message: publicKeyBytes,\n    encoding: 'binary'\n  });\n};\n\ned25519.publicKeyFromPrivateKey = function(options) {\n  options = options || {};\n  var privateKey = messageToNativeBuffer({\n    message: options.privateKey, encoding: 'binary'\n  });\n  if(privateKey.length !== ed25519.constants.PRIVATE_KEY_BYTE_LENGTH) {\n    throw new TypeError(\n      '\"options.privateKey\" must have a byte length of ' +\n      ed25519.constants.PRIVATE_KEY_BYTE_LENGTH);\n  }\n\n  var pk = new NativeBuffer(ed25519.constants.PUBLIC_KEY_BYTE_LENGTH);\n  for(var i = 0; i < pk.length; ++i) {\n    pk[i] = privateKey[32 + i];\n  }\n  return pk;\n};\n\ned25519.sign = function(options) {\n  options = options || {};\n  var msg = messageToNativeBuffer(options);\n  var privateKey = messageToNativeBuffer({\n    message: options.privateKey,\n    encoding: 'binary'\n  });\n  if(privateKey.length === ed25519.constants.SEED_BYTE_LENGTH) {\n    var keyPair = ed25519.generateKeyPair({seed: privateKey});\n    privateKey = keyPair.privateKey;\n  } else if(privateKey.length !== ed25519.constants.PRIVATE_KEY_BYTE_LENGTH) {\n    throw new TypeError(\n      '\"options.privateKey\" must have a byte length of ' +\n      ed25519.constants.SEED_BYTE_LENGTH + ' or ' +\n      ed25519.constants.PRIVATE_KEY_BYTE_LENGTH);\n  }\n\n  var signedMsg = new NativeBuffer(\n    ed25519.constants.SIGN_BYTE_LENGTH + msg.length);\n  crypto_sign(signedMsg, msg, msg.length, privateKey);\n\n  var sig = new NativeBuffer(ed25519.constants.SIGN_BYTE_LENGTH);\n  for(var i = 0; i < sig.length; ++i) {\n    sig[i] = signedMsg[i];\n  }\n  return sig;\n};\n\ned25519.verify = function(options) {\n  options = options || {};\n  var msg = messageToNativeBuffer(options);\n  if(options.signature === undefined) {\n    throw new TypeError(\n      '\"options.signature\" must be a node.js Buffer, a Uint8Array, a forge ' +\n      'ByteBuffer, or a binary string.');\n  }\n  var sig = messageToNativeBuffer({\n    message: options.signature,\n    encoding: 'binary'\n  });\n  if(sig.length !== ed25519.constants.SIGN_BYTE_LENGTH) {\n    throw new TypeError(\n      '\"options.signature\" must have a byte length of ' +\n      ed25519.constants.SIGN_BYTE_LENGTH);\n  }\n  var publicKey = messageToNativeBuffer({\n    message: options.publicKey,\n    encoding: 'binary'\n  });\n  if(publicKey.length !== ed25519.constants.PUBLIC_KEY_BYTE_LENGTH) {\n    throw new TypeError(\n      '\"options.publicKey\" must have a byte length of ' +\n      ed25519.constants.PUBLIC_KEY_BYTE_LENGTH);\n  }\n\n  var sm = new NativeBuffer(ed25519.constants.SIGN_BYTE_LENGTH + msg.length);\n  var m = new NativeBuffer(ed25519.constants.SIGN_BYTE_LENGTH + msg.length);\n  var i;\n  for(i = 0; i < ed25519.constants.SIGN_BYTE_LENGTH; ++i) {\n    sm[i] = sig[i];\n  }\n  for(i = 0; i < msg.length; ++i) {\n    sm[i + ed25519.constants.SIGN_BYTE_LENGTH] = msg[i];\n  }\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nfunction messageToNativeBuffer(options) {\n  var message = options.message;\n  if(message instanceof Uint8Array || message instanceof NativeBuffer) {\n    return message;\n  }\n\n  var encoding = options.encoding;\n  if(message === undefined) {\n    if(options.md) {\n      // TODO: more rigorous validation that `md` is a MessageDigest\n      message = options.md.digest().getBytes();\n      encoding = 'binary';\n    } else {\n      throw new TypeError('\"options.message\" or \"options.md\" not specified.');\n    }\n  }\n\n  if(typeof message === 'string' && !encoding) {\n    throw new TypeError('\"options.encoding\" must be \"binary\" or \"utf8\".');\n  }\n\n  if(typeof message === 'string') {\n    if(typeof Buffer !== 'undefined') {\n      return Buffer.from(message, encoding);\n    }\n    message = new ByteBuffer(message, encoding);\n  } else if(!(message instanceof ByteBuffer)) {\n    throw new TypeError(\n      '\"options.message\" must be a node.js Buffer, a Uint8Array, a forge ' +\n      'ByteBuffer, or a string with \"options.encoding\" specifying its ' +\n      'encoding.');\n  }\n\n  // convert to native buffer\n  var buffer = new NativeBuffer(message.length());\n  for(var i = 0; i < buffer.length; ++i) {\n    buffer[i] = message.at(i);\n  }\n  return buffer;\n}\n\nvar gf0 = gf();\nvar gf1 = gf([1]);\nvar D = gf([\n  0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070,\n  0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]);\nvar D2 = gf([\n  0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0,\n  0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]);\nvar X = gf([\n  0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c,\n  0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]);\nvar Y = gf([\n  0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666,\n  0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]);\nvar L = new Float64Array([\n  0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58,\n  0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\nvar I = gf([\n  0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43,\n  0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\n// TODO: update forge buffer implementation to use `Buffer` or `Uint8Array`,\n// whichever is available, to improve performance\nfunction sha512(msg, msgLen) {\n  // Note: `out` and `msg` are NativeBuffer\n  var md = forge.md.sha512.create();\n  var buffer = new ByteBuffer(msg);\n  md.update(buffer.getBytes(msgLen), 'binary');\n  var hash = md.digest().getBytes();\n  if(typeof Buffer !== 'undefined') {\n    return Buffer.from(hash, 'binary');\n  }\n  var out = new NativeBuffer(ed25519.constants.HASH_BYTE_LENGTH);\n  for(var i = 0; i < 64; ++i) {\n    out[i] = hash.charCodeAt(i);\n  }\n  return out;\n}\n\nfunction crypto_sign_keypair(pk, sk) {\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  var d = sha512(sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for(i = 0; i < 32; ++i) {\n    sk[i + 32] = pk[i];\n  }\n  return 0;\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  var d = sha512(sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for(i = 0; i < n; ++i) {\n    sm[64 + i] = m[i];\n  }\n  for(i = 0; i < 32; ++i) {\n    sm[32 + i] = d[32 + i];\n  }\n\n  var r = sha512(sm.subarray(32), n + 32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for(i = 32; i < 64; ++i) {\n    sm[i] = sk[i];\n  }\n  var h = sha512(sm, n + 64);\n  reduce(h);\n\n  for(i = 32; i < 64; ++i) {\n    x[i] = 0;\n  }\n  for(i = 0; i < 32; ++i) {\n    x[i] = r[i];\n  }\n  for(i = 0; i < 32; ++i) {\n    for(j = 0; j < 32; j++) {\n      x[i + j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i, mlen;\n  var t = new NativeBuffer(32);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  mlen = -1;\n  if(n < 64) {\n    return -1;\n  }\n\n  if(unpackneg(q, pk)) {\n    return -1;\n  }\n\n  for(i = 0; i < n; ++i) {\n    m[i] = sm[i];\n  }\n  for(i = 0; i < 32; ++i) {\n    m[i + 32] = pk[i];\n  }\n  var h = sha512(m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if(crypto_verify_32(sm, 0, t, 0)) {\n    for(i = 0; i < n; ++i) {\n      m[i] = 0;\n    }\n    return -1;\n  }\n\n  for(i = 0; i < n; ++i) {\n    m[i] = sm[i + 64];\n  }\n  mlen = n;\n  return mlen;\n}\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for(i = 63; i >= 32; --i) {\n    carry = 0;\n    for(j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = (x[j] + 128) >> 8;\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for(j = 0; j < 32; ++j) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for(j = 0; j < 32; ++j) {\n    x[j] -= carry * L[j];\n  }\n  for(i = 0; i < 32; ++i) {\n    x[i + 1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64);\n  for(var i = 0; i < 64; ++i) {\n    x[i] = r[i];\n    r[i] = 0;\n  }\n  modL(r, x);\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  for(var i = 0; i < 4; ++i) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for(i = 0; i < 16; ++i) {\n    t[i] = n[i];\n  }\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for(j = 0; j < 2; ++j) {\n    m[0] = t[0] - 0xffed;\n    for(i = 1; i < 15; ++i) {\n      m[i] = t[i] - 0xffff - ((m[i - 1] >> 16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14] >> 16) & 1);\n    b = (m[15] >> 16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1 - b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2 * i] = t[i] & 0xff;\n    o[2 * i + 1] = t[i] >> 8;\n  }\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if(neq25519(chk, num)) {\n    M(r[0], r[0], I);\n  }\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if(neq25519(chk, num)) {\n    return -1;\n  }\n\n  if(par25519(r[0]) === (p[31] >> 7)) {\n    Z(r[0], gf0, r[0]);\n  }\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for(i = 0; i < 16; ++i) {\n    o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n  }\n  o[15] &= 0x7fff;\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for(a = 0; a < 16; ++a) {\n    c[a] = i[a];\n  }\n  for(a = 250; a >= 0; --a) {\n    S(c, c);\n    if(a !== 1) {\n      M(c, c, i);\n    }\n  }\n  for(a = 0; a < 16; ++a) {\n    o[a] = c[a];\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new NativeBuffer(32);\n  var d = new NativeBuffer(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x, xi, y, yi, 32);\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i, d = 0;\n  for(i = 0; i < n; ++i) {\n    d |= x[xi + i] ^ y[yi + i];\n  }\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction par25519(a) {\n  var d = new NativeBuffer(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for(i = 255; i >= 0; --i) {\n    b = (s[(i / 8)|0] >> (i & 7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction set25519(r, a) {\n  var i;\n  for(i = 0; i < 16; i++) {\n    r[i] = a[i] | 0;\n  }\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for(a = 0; a < 16; ++a) {\n    c[a] = i[a];\n  }\n  for(a = 253; a >= 0; --a) {\n    S(c, c);\n    if(a !== 2 && a !== 4) {\n      M(c, c, i);\n    }\n  }\n  for(a = 0; a < 16; ++a) {\n    o[a] = c[a];\n  }\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for(i = 0; i < 16; ++i) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c - 1 + 37 * (c - 1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b - 1);\n  for(var i = 0; i < 16; ++i) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction gf(init) {\n  var i, r = new Float64Array(16);\n  if(init) {\n    for(i = 0; i < init.length; ++i) {\n      r[i] = init[i];\n    }\n  }\n  return r;\n}\n\nfunction A(o, a, b) {\n  for(var i = 0; i < 16; ++i) {\n    o[i] = a[i] + b[i];\n  }\n}\n\nfunction Z(o, a, b) {\n  for(var i = 0; i < 16; ++i) {\n    o[i] = a[i] - b[i];\n  }\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n","/**\n * Node.js module for Forge.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2016 Digital Bazaar, Inc.\n */\nmodule.exports = {\n  // default options\n  options: {\n    usePureJavaScript: false\n  }\n};\n","/**\n * Hash-based Message Authentication Code implementation. Requires a message\n * digest object that can be obtained, for example, from forge.md.sha1 or\n * forge.md.md5.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2012 Digital Bazaar, Inc. All rights reserved.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\n/* HMAC API */\nvar hmac = module.exports = forge.hmac = forge.hmac || {};\n\n/**\n * Creates an HMAC object that uses the given message digest object.\n *\n * @return an HMAC object.\n */\nhmac.create = function() {\n  // the hmac key to use\n  var _key = null;\n\n  // the message digest to use\n  var _md = null;\n\n  // the inner padding\n  var _ipadding = null;\n\n  // the outer padding\n  var _opadding = null;\n\n  // hmac context\n  var ctx = {};\n\n  /**\n   * Starts or restarts the HMAC with the given key and message digest.\n   *\n   * @param md the message digest to use, null to reuse the previous one,\n   *           a string to use builtin 'sha1', 'md5', 'sha256'.\n   * @param key the key to use as a string, array of bytes, byte buffer,\n   *           or null to reuse the previous key.\n   */\n  ctx.start = function(md, key) {\n    if(md !== null) {\n      if(typeof md === 'string') {\n        // create builtin message digest\n        md = md.toLowerCase();\n        if(md in forge.md.algorithms) {\n          _md = forge.md.algorithms[md].create();\n        } else {\n          throw new Error('Unknown hash algorithm \"' + md + '\"');\n        }\n      } else {\n        // store message digest\n        _md = md;\n      }\n    }\n\n    if(key === null) {\n      // reuse previous key\n      key = _key;\n    } else {\n      if(typeof key === 'string') {\n        // convert string into byte buffer\n        key = forge.util.createBuffer(key);\n      } else if(forge.util.isArray(key)) {\n        // convert byte array into byte buffer\n        var tmp = key;\n        key = forge.util.createBuffer();\n        for(var i = 0; i < tmp.length; ++i) {\n          key.putByte(tmp[i]);\n        }\n      }\n\n      // if key is longer than blocksize, hash it\n      var keylen = key.length();\n      if(keylen > _md.blockLength) {\n        _md.start();\n        _md.update(key.bytes());\n        key = _md.digest();\n      }\n\n      // mix key into inner and outer padding\n      // ipadding = [0x36 * blocksize] ^ key\n      // opadding = [0x5C * blocksize] ^ key\n      _ipadding = forge.util.createBuffer();\n      _opadding = forge.util.createBuffer();\n      keylen = key.length();\n      for(var i = 0; i < keylen; ++i) {\n        var tmp = key.at(i);\n        _ipadding.putByte(0x36 ^ tmp);\n        _opadding.putByte(0x5C ^ tmp);\n      }\n\n      // if key is shorter than blocksize, add additional padding\n      if(keylen < _md.blockLength) {\n        var tmp = _md.blockLength - keylen;\n        for(var i = 0; i < tmp; ++i) {\n          _ipadding.putByte(0x36);\n          _opadding.putByte(0x5C);\n        }\n      }\n      _key = key;\n      _ipadding = _ipadding.bytes();\n      _opadding = _opadding.bytes();\n    }\n\n    // digest is done like so: hash(opadding | hash(ipadding | message))\n\n    // prepare to do inner hash\n    // hash(ipadding | message)\n    _md.start();\n    _md.update(_ipadding);\n  };\n\n  /**\n   * Updates the HMAC with the given message bytes.\n   *\n   * @param bytes the bytes to update with.\n   */\n  ctx.update = function(bytes) {\n    _md.update(bytes);\n  };\n\n  /**\n   * Produces the Message Authentication Code (MAC).\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  ctx.getMac = function() {\n    // digest is done like so: hash(opadding | hash(ipadding | message))\n    // here we do the outer hashing\n    var inner = _md.digest().bytes();\n    _md.start();\n    _md.update(_opadding);\n    _md.update(inner);\n    return _md.digest();\n  };\n  // alias for getMac\n  ctx.digest = ctx.getMac;\n\n  return ctx;\n};\n","/**\n * Node.js module for Forge.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2016 Digital Bazaar, Inc.\n */\nmodule.exports = require('./forge');\nrequire('./aes');\nrequire('./aesCipherSuites');\nrequire('./asn1');\nrequire('./cipher');\nrequire('./des');\nrequire('./ed25519');\nrequire('./hmac');\nrequire('./kem');\nrequire('./log');\nrequire('./md.all');\nrequire('./mgf1');\nrequire('./pbkdf2');\nrequire('./pem');\nrequire('./pkcs1');\nrequire('./pkcs12');\nrequire('./pkcs7');\nrequire('./pki');\nrequire('./prime');\nrequire('./prng');\nrequire('./pss');\nrequire('./random');\nrequire('./rc2');\nrequire('./ssh');\nrequire('./tls');\nrequire('./util');\n","// Copyright (c) 2005  Tom Wu\n// All Rights Reserved.\n// See \"LICENSE\" for details.\n\n// Basic JavaScript BN library - subset useful for RSA encryption.\n\n/*\nLicensing (LICENSE)\n-------------------\n\nThis software is covered under the following copyright:\n*/\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n/*\nAddress all questions regarding this license to:\n\n  Tom Wu\n  tjw@cs.Stanford.EDU\n*/\nvar forge = require('./forge');\n\nmodule.exports = forge.jsbn = forge.jsbn || {};\n\n// Bits per digit\nvar dbits;\n\n// JavaScript engine analysis\nvar canary = 0xdeadbeefcafe;\nvar j_lm = ((canary&0xffffff)==0xefcafe);\n\n// (public) Constructor\nfunction BigInteger(a,b,c) {\n  this.data = [];\n  if(a != null)\n    if(\"number\" == typeof a) this.fromNumber(a,b,c);\n    else if(b == null && \"string\" != typeof a) this.fromString(a,256);\n    else this.fromString(a,b);\n}\nforge.jsbn.BigInteger = BigInteger;\n\n// return new, unset BigInteger\nfunction nbi() { return new BigInteger(null); }\n\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i,x,w,j,c,n) {\n  while(--n >= 0) {\n    var v = x*this.data[i++]+w.data[j]+c;\n    c = Math.floor(v/0x4000000);\n    w.data[j++] = v&0x3ffffff;\n  }\n  return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i,x,w,j,c,n) {\n  var xl = x&0x7fff, xh = x>>15;\n  while(--n >= 0) {\n    var l = this.data[i]&0x7fff;\n    var h = this.data[i++]>>15;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x7fff)<<15)+w.data[j]+(c&0x3fffffff);\n    c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);\n    w.data[j++] = l&0x3fffffff;\n  }\n  return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i,x,w,j,c,n) {\n  var xl = x&0x3fff, xh = x>>14;\n  while(--n >= 0) {\n    var l = this.data[i]&0x3fff;\n    var h = this.data[i++]>>14;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x3fff)<<14)+w.data[j]+c;\n    c = (l>>28)+(m>>14)+xh*h;\n    w.data[j++] = l&0xfffffff;\n  }\n  return c;\n}\n\n// node.js (no browser)\nif(typeof(navigator) === 'undefined')\n{\n   BigInteger.prototype.am = am3;\n   dbits = 28;\n} else if(j_lm && (navigator.appName == \"Microsoft Internet Explorer\")) {\n  BigInteger.prototype.am = am2;\n  dbits = 30;\n} else if(j_lm && (navigator.appName != \"Netscape\")) {\n  BigInteger.prototype.am = am1;\n  dbits = 26;\n} else { // Mozilla/Netscape seems to prefer am3\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n}\n\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = ((1<<dbits)-1);\nBigInteger.prototype.DV = (1<<dbits);\n\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2,BI_FP);\nBigInteger.prototype.F1 = BI_FP-dbits;\nBigInteger.prototype.F2 = 2*dbits-BI_FP;\n\n// Digit conversions\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nvar BI_RC = new Array();\nvar rr,vv;\nrr = \"0\".charCodeAt(0);\nfor(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\nrr = \"a\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\nrr = \"A\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\nfunction int2char(n) { return BI_RM.charAt(n); }\nfunction intAt(s,i) {\n  var c = BI_RC[s.charCodeAt(i)];\n  return (c==null)?-1:c;\n}\n\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n  for(var i = this.t-1; i >= 0; --i) r.data[i] = this.data[i];\n  r.t = this.t;\n  r.s = this.s;\n}\n\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = (x<0)?-1:0;\n  if(x > 0) this.data[0] = x;\n  else if(x < -1) this.data[0] = x+this.DV;\n  else this.t = 0;\n}\n\n// return bigint initialized to value\nfunction nbv(i) { var r = nbi(); r.fromInt(i); return r; }\n\n// (protected) set from string and radix\nfunction bnpFromString(s,b) {\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 256) k = 8; // byte array\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else { this.fromRadix(s,b); return; }\n  this.t = 0;\n  this.s = 0;\n  var i = s.length, mi = false, sh = 0;\n  while(--i >= 0) {\n    var x = (k==8)?s[i]&0xff:intAt(s,i);\n    if(x < 0) {\n      if(s.charAt(i) == \"-\") mi = true;\n      continue;\n    }\n    mi = false;\n    if(sh == 0)\n      this.data[this.t++] = x;\n    else if(sh+k > this.DB) {\n      this.data[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;\n      this.data[this.t++] = (x>>(this.DB-sh));\n    } else\n      this.data[this.t-1] |= x<<sh;\n    sh += k;\n    if(sh >= this.DB) sh -= this.DB;\n  }\n  if(k == 8 && (s[0]&0x80) != 0) {\n    this.s = -1;\n    if(sh > 0) this.data[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;\n  }\n  this.clamp();\n  if(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n  var c = this.s&this.DM;\n  while(this.t > 0 && this.data[this.t-1] == c) --this.t;\n}\n\n// (public) return string representation in given radix\nfunction bnToString(b) {\n  if(this.s < 0) return \"-\"+this.negate().toString(b);\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else return this.toRadix(b);\n  var km = (1<<k)-1, d, m = false, r = \"\", i = this.t;\n  var p = this.DB-(i*this.DB)%k;\n  if(i-- > 0) {\n    if(p < this.DB && (d = this.data[i]>>p) > 0) { m = true; r = int2char(d); }\n    while(i >= 0) {\n      if(p < k) {\n        d = (this.data[i]&((1<<p)-1))<<(k-p);\n        d |= this.data[--i]>>(p+=this.DB-k);\n      } else {\n        d = (this.data[i]>>(p-=k))&km;\n        if(p <= 0) { p += this.DB; --i; }\n      }\n      if(d > 0) m = true;\n      if(m) r += int2char(d);\n    }\n  }\n  return m?r:\"0\";\n}\n\n// (public) -this\nfunction bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }\n\n// (public) |this|\nfunction bnAbs() { return (this.s<0)?this.negate():this; }\n\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n  var r = this.s-a.s;\n  if(r != 0) return r;\n  var i = this.t;\n  r = i-a.t;\n  if(r != 0) return (this.s<0)?-r:r;\n  while(--i >= 0) if((r=this.data[i]-a.data[i]) != 0) return r;\n  return 0;\n}\n\n// returns bit length of the integer x\nfunction nbits(x) {\n  var r = 1, t;\n  if((t=x>>>16) != 0) { x = t; r += 16; }\n  if((t=x>>8) != 0) { x = t; r += 8; }\n  if((t=x>>4) != 0) { x = t; r += 4; }\n  if((t=x>>2) != 0) { x = t; r += 2; }\n  if((t=x>>1) != 0) { x = t; r += 1; }\n  return r;\n}\n\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n  if(this.t <= 0) return 0;\n  return this.DB*(this.t-1)+nbits(this.data[this.t-1]^(this.s&this.DM));\n}\n\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n,r) {\n  var i;\n  for(i = this.t-1; i >= 0; --i) r.data[i+n] = this.data[i];\n  for(i = n-1; i >= 0; --i) r.data[i] = 0;\n  r.t = this.t+n;\n  r.s = this.s;\n}\n\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n,r) {\n  for(var i = n; i < this.t; ++i) r.data[i-n] = this.data[i];\n  r.t = Math.max(this.t-n,0);\n  r.s = this.s;\n}\n\n// (protected) r = this << n\nfunction bnpLShiftTo(n,r) {\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<cbs)-1;\n  var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;\n  for(i = this.t-1; i >= 0; --i) {\n    r.data[i+ds+1] = (this.data[i]>>cbs)|c;\n    c = (this.data[i]&bm)<<bs;\n  }\n  for(i = ds-1; i >= 0; --i) r.data[i] = 0;\n  r.data[ds] = c;\n  r.t = this.t+ds+1;\n  r.s = this.s;\n  r.clamp();\n}\n\n// (protected) r = this >> n\nfunction bnpRShiftTo(n,r) {\n  r.s = this.s;\n  var ds = Math.floor(n/this.DB);\n  if(ds >= this.t) { r.t = 0; return; }\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<bs)-1;\n  r.data[0] = this.data[ds]>>bs;\n  for(var i = ds+1; i < this.t; ++i) {\n    r.data[i-ds-1] |= (this.data[i]&bm)<<cbs;\n    r.data[i-ds] = this.data[i]>>bs;\n  }\n  if(bs > 0) r.data[this.t-ds-1] |= (this.s&bm)<<cbs;\n  r.t = this.t-ds;\n  r.clamp();\n}\n\n// (protected) r = this - a\nfunction bnpSubTo(a,r) {\n  var i = 0, c = 0, m = Math.min(a.t,this.t);\n  while(i < m) {\n    c += this.data[i]-a.data[i];\n    r.data[i++] = c&this.DM;\n    c >>= this.DB;\n  }\n  if(a.t < this.t) {\n    c -= a.s;\n    while(i < this.t) {\n      c += this.data[i];\n      r.data[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  } else {\n    c += this.s;\n    while(i < a.t) {\n      c -= a.data[i];\n      r.data[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c -= a.s;\n  }\n  r.s = (c<0)?-1:0;\n  if(c < -1) r.data[i++] = this.DV+c;\n  else if(c > 0) r.data[i++] = c;\n  r.t = i;\n  r.clamp();\n}\n\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a,r) {\n  var x = this.abs(), y = a.abs();\n  var i = x.t;\n  r.t = i+y.t;\n  while(--i >= 0) r.data[i] = 0;\n  for(i = 0; i < y.t; ++i) r.data[i+x.t] = x.am(0,y.data[i],r,i,0,x.t);\n  r.s = 0;\n  r.clamp();\n  if(this.s != a.s) BigInteger.ZERO.subTo(r,r);\n}\n\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n  var x = this.abs();\n  var i = r.t = 2*x.t;\n  while(--i >= 0) r.data[i] = 0;\n  for(i = 0; i < x.t-1; ++i) {\n    var c = x.am(i,x.data[i],r,2*i,0,1);\n    if((r.data[i+x.t]+=x.am(i+1,2*x.data[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {\n      r.data[i+x.t] -= x.DV;\n      r.data[i+x.t+1] = 1;\n    }\n  }\n  if(r.t > 0) r.data[r.t-1] += x.am(i,x.data[i],r,2*i,0,1);\n  r.s = 0;\n  r.clamp();\n}\n\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m,q,r) {\n  var pm = m.abs();\n  if(pm.t <= 0) return;\n  var pt = this.abs();\n  if(pt.t < pm.t) {\n    if(q != null) q.fromInt(0);\n    if(r != null) this.copyTo(r);\n    return;\n  }\n  if(r == null) r = nbi();\n  var y = nbi(), ts = this.s, ms = m.s;\n  var nsh = this.DB-nbits(pm.data[pm.t-1]);\t// normalize modulus\n  if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); } else { pm.copyTo(y); pt.copyTo(r); }\n  var ys = y.t;\n  var y0 = y.data[ys-1];\n  if(y0 == 0) return;\n  var yt = y0*(1<<this.F1)+((ys>1)?y.data[ys-2]>>this.F2:0);\n  var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;\n  var i = r.t, j = i-ys, t = (q==null)?nbi():q;\n  y.dlShiftTo(j,t);\n  if(r.compareTo(t) >= 0) {\n    r.data[r.t++] = 1;\n    r.subTo(t,r);\n  }\n  BigInteger.ONE.dlShiftTo(ys,t);\n  t.subTo(y,y);\t// \"negative\" y so we can replace sub with am later\n  while(y.t < ys) y.data[y.t++] = 0;\n  while(--j >= 0) {\n    // Estimate quotient digit\n    var qd = (r.data[--i]==y0)?this.DM:Math.floor(r.data[i]*d1+(r.data[i-1]+e)*d2);\n    if((r.data[i]+=y.am(0,qd,r,j,0,ys)) < qd) {\t// Try it out\n      y.dlShiftTo(j,t);\n      r.subTo(t,r);\n      while(r.data[i] < --qd) r.subTo(t,r);\n    }\n  }\n  if(q != null) {\n    r.drShiftTo(ys,q);\n    if(ts != ms) BigInteger.ZERO.subTo(q,q);\n  }\n  r.t = ys;\n  r.clamp();\n  if(nsh > 0) r.rShiftTo(nsh,r);\t// Denormalize remainder\n  if(ts < 0) BigInteger.ZERO.subTo(r,r);\n}\n\n// (public) this mod a\nfunction bnMod(a) {\n  var r = nbi();\n  this.abs().divRemTo(a,null,r);\n  if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);\n  return r;\n}\n\n// Modular reduction using \"classic\" algorithm\nfunction Classic(m) { this.m = m; }\nfunction cConvert(x) {\n  if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n  else return x;\n}\nfunction cRevert(x) { return x; }\nfunction cReduce(x) { x.divRemTo(this.m,null,x); }\nfunction cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\nfunction cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\nClassic.prototype.convert = cConvert;\nClassic.prototype.revert = cRevert;\nClassic.prototype.reduce = cReduce;\nClassic.prototype.mulTo = cMulTo;\nClassic.prototype.sqrTo = cSqrTo;\n\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n  if(this.t < 1) return 0;\n  var x = this.data[0];\n  if((x&1) == 0) return 0;\n  var y = x&3;\t\t// y == 1/x mod 2^2\n  y = (y*(2-(x&0xf)*y))&0xf;\t// y == 1/x mod 2^4\n  y = (y*(2-(x&0xff)*y))&0xff;\t// y == 1/x mod 2^8\n  y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;\t// y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n  y = (y*(2-x*y%this.DV))%this.DV;\t\t// y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n  return (y>0)?this.DV-y:-y;\n}\n\n// Montgomery reduction\nfunction Montgomery(m) {\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp&0x7fff;\n  this.mph = this.mp>>15;\n  this.um = (1<<(m.DB-15))-1;\n  this.mt2 = 2*m.t;\n}\n\n// xR mod m\nfunction montConvert(x) {\n  var r = nbi();\n  x.abs().dlShiftTo(this.m.t,r);\n  r.divRemTo(this.m,null,r);\n  if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);\n  return r;\n}\n\n// x/R mod m\nfunction montRevert(x) {\n  var r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n}\n\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n  while(x.t <= this.mt2)\t// pad x so am has enough room later\n    x.data[x.t++] = 0;\n  for(var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x.data[i]*mp mod DV\n    var j = x.data[i]&0x7fff;\n    var u0 = (j*this.mpl+(((j*this.mph+(x.data[i]>>15)*this.mpl)&this.um)<<15))&x.DM;\n    // use am to combine the multiply-shift-add into one call\n    j = i+this.m.t;\n    x.data[j] += this.m.am(0,u0,x,i,0,this.m.t);\n    // propagate carry\n    while(x.data[j] >= x.DV) { x.data[j] -= x.DV; x.data[++j]++; }\n  }\n  x.clamp();\n  x.drShiftTo(this.m.t,x);\n  if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n\n// (protected) true iff this is even\nfunction bnpIsEven() { return ((this.t>0)?(this.data[0]&1):this.s) == 0; }\n\n// (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\nfunction bnpExp(e,z) {\n  if(e > 0xffffffff || e < 1) return BigInteger.ONE;\n  var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;\n  g.copyTo(r);\n  while(--i >= 0) {\n    z.sqrTo(r,r2);\n    if((e&(1<<i)) > 0) z.mulTo(r2,g,r);\n    else { var t = r; r = r2; r2 = t; }\n  }\n  return z.revert(r);\n}\n\n// (public) this^e % m, 0 <= e < 2^32\nfunction bnModPowInt(e,m) {\n  var z;\n  if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);\n  return this.exp(e,z);\n}\n\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.isEven = bnpIsEven;\nBigInteger.prototype.exp = bnpExp;\n\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.modPowInt = bnModPowInt;\n\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n\n// jsbn2 lib\n\n//Copyright (c) 2005-2009  Tom Wu\n//All Rights Reserved.\n//See \"LICENSE\" for details (See jsbn.js for LICENSE).\n\n//Extended JavaScript BN functions, required for RSA private ops.\n\n//Version 1.1: new BigInteger(\"0\", 10) returns \"proper\" zero\n\n//(public)\nfunction bnClone() { var r = nbi(); this.copyTo(r); return r; }\n\n//(public) return value as integer\nfunction bnIntValue() {\nif(this.s < 0) {\n if(this.t == 1) return this.data[0]-this.DV;\n else if(this.t == 0) return -1;\n} else if(this.t == 1) return this.data[0];\nelse if(this.t == 0) return 0;\n// assumes 16 < DB < 32\nreturn ((this.data[1]&((1<<(32-this.DB))-1))<<this.DB)|this.data[0];\n}\n\n//(public) return value as byte\nfunction bnByteValue() { return (this.t==0)?this.s:(this.data[0]<<24)>>24; }\n\n//(public) return value as short (assumes DB>=16)\nfunction bnShortValue() { return (this.t==0)?this.s:(this.data[0]<<16)>>16; }\n\n//(protected) return x s.t. r^x < DV\nfunction bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }\n\n//(public) 0 if this == 0, 1 if this > 0\nfunction bnSigNum() {\nif(this.s < 0) return -1;\nelse if(this.t <= 0 || (this.t == 1 && this.data[0] <= 0)) return 0;\nelse return 1;\n}\n\n//(protected) convert to radix string\nfunction bnpToRadix(b) {\nif(b == null) b = 10;\nif(this.signum() == 0 || b < 2 || b > 36) return \"0\";\nvar cs = this.chunkSize(b);\nvar a = Math.pow(b,cs);\nvar d = nbv(a), y = nbi(), z = nbi(), r = \"\";\nthis.divRemTo(d,y,z);\nwhile(y.signum() > 0) {\n r = (a+z.intValue()).toString(b).substr(1) + r;\n y.divRemTo(d,y,z);\n}\nreturn z.intValue().toString(b) + r;\n}\n\n//(protected) convert from radix string\nfunction bnpFromRadix(s,b) {\nthis.fromInt(0);\nif(b == null) b = 10;\nvar cs = this.chunkSize(b);\nvar d = Math.pow(b,cs), mi = false, j = 0, w = 0;\nfor(var i = 0; i < s.length; ++i) {\n var x = intAt(s,i);\n if(x < 0) {\n   if(s.charAt(i) == \"-\" && this.signum() == 0) mi = true;\n   continue;\n }\n w = b*w+x;\n if(++j >= cs) {\n   this.dMultiply(d);\n   this.dAddOffset(w,0);\n   j = 0;\n   w = 0;\n }\n}\nif(j > 0) {\n this.dMultiply(Math.pow(b,j));\n this.dAddOffset(w,0);\n}\nif(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n//(protected) alternate constructor\nfunction bnpFromNumber(a,b,c) {\nif(\"number\" == typeof b) {\n // new BigInteger(int,int,RNG)\n if(a < 2) this.fromInt(1);\n else {\n   this.fromNumber(a,c);\n   if(!this.testBit(a-1))  // force MSB set\n     this.bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this);\n   if(this.isEven()) this.dAddOffset(1,0); // force odd\n   while(!this.isProbablePrime(b)) {\n     this.dAddOffset(2,0);\n     if(this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a-1),this);\n   }\n }\n} else {\n // new BigInteger(int,RNG)\n var x = new Array(), t = a&7;\n x.length = (a>>3)+1;\n b.nextBytes(x);\n if(t > 0) x[0] &= ((1<<t)-1); else x[0] = 0;\n this.fromString(x,256);\n}\n}\n\n//(public) convert to bigendian byte array\nfunction bnToByteArray() {\nvar i = this.t, r = new Array();\nr[0] = this.s;\nvar p = this.DB-(i*this.DB)%8, d, k = 0;\nif(i-- > 0) {\n if(p < this.DB && (d = this.data[i]>>p) != (this.s&this.DM)>>p)\n   r[k++] = d|(this.s<<(this.DB-p));\n while(i >= 0) {\n   if(p < 8) {\n     d = (this.data[i]&((1<<p)-1))<<(8-p);\n     d |= this.data[--i]>>(p+=this.DB-8);\n   } else {\n     d = (this.data[i]>>(p-=8))&0xff;\n     if(p <= 0) { p += this.DB; --i; }\n   }\n   if((d&0x80) != 0) d |= -256;\n   if(k == 0 && (this.s&0x80) != (d&0x80)) ++k;\n   if(k > 0 || d != this.s) r[k++] = d;\n }\n}\nreturn r;\n}\n\nfunction bnEquals(a) { return(this.compareTo(a)==0); }\nfunction bnMin(a) { return(this.compareTo(a)<0)?this:a; }\nfunction bnMax(a) { return(this.compareTo(a)>0)?this:a; }\n\n//(protected) r = this op a (bitwise)\nfunction bnpBitwiseTo(a,op,r) {\nvar i, f, m = Math.min(a.t,this.t);\nfor(i = 0; i < m; ++i) r.data[i] = op(this.data[i],a.data[i]);\nif(a.t < this.t) {\n f = a.s&this.DM;\n for(i = m; i < this.t; ++i) r.data[i] = op(this.data[i],f);\n r.t = this.t;\n} else {\n f = this.s&this.DM;\n for(i = m; i < a.t; ++i) r.data[i] = op(f,a.data[i]);\n r.t = a.t;\n}\nr.s = op(this.s,a.s);\nr.clamp();\n}\n\n//(public) this & a\nfunction op_and(x,y) { return x&y; }\nfunction bnAnd(a) { var r = nbi(); this.bitwiseTo(a,op_and,r); return r; }\n\n//(public) this | a\nfunction op_or(x,y) { return x|y; }\nfunction bnOr(a) { var r = nbi(); this.bitwiseTo(a,op_or,r); return r; }\n\n//(public) this ^ a\nfunction op_xor(x,y) { return x^y; }\nfunction bnXor(a) { var r = nbi(); this.bitwiseTo(a,op_xor,r); return r; }\n\n//(public) this & ~a\nfunction op_andnot(x,y) { return x&~y; }\nfunction bnAndNot(a) { var r = nbi(); this.bitwiseTo(a,op_andnot,r); return r; }\n\n//(public) ~this\nfunction bnNot() {\nvar r = nbi();\nfor(var i = 0; i < this.t; ++i) r.data[i] = this.DM&~this.data[i];\nr.t = this.t;\nr.s = ~this.s;\nreturn r;\n}\n\n//(public) this << n\nfunction bnShiftLeft(n) {\nvar r = nbi();\nif(n < 0) this.rShiftTo(-n,r); else this.lShiftTo(n,r);\nreturn r;\n}\n\n//(public) this >> n\nfunction bnShiftRight(n) {\nvar r = nbi();\nif(n < 0) this.lShiftTo(-n,r); else this.rShiftTo(n,r);\nreturn r;\n}\n\n//return index of lowest 1-bit in x, x < 2^31\nfunction lbit(x) {\nif(x == 0) return -1;\nvar r = 0;\nif((x&0xffff) == 0) { x >>= 16; r += 16; }\nif((x&0xff) == 0) { x >>= 8; r += 8; }\nif((x&0xf) == 0) { x >>= 4; r += 4; }\nif((x&3) == 0) { x >>= 2; r += 2; }\nif((x&1) == 0) ++r;\nreturn r;\n}\n\n//(public) returns index of lowest 1-bit (or -1 if none)\nfunction bnGetLowestSetBit() {\nfor(var i = 0; i < this.t; ++i)\n if(this.data[i] != 0) return i*this.DB+lbit(this.data[i]);\nif(this.s < 0) return this.t*this.DB;\nreturn -1;\n}\n\n//return number of 1 bits in x\nfunction cbit(x) {\nvar r = 0;\nwhile(x != 0) { x &= x-1; ++r; }\nreturn r;\n}\n\n//(public) return number of set bits\nfunction bnBitCount() {\nvar r = 0, x = this.s&this.DM;\nfor(var i = 0; i < this.t; ++i) r += cbit(this.data[i]^x);\nreturn r;\n}\n\n//(public) true iff nth bit is set\nfunction bnTestBit(n) {\nvar j = Math.floor(n/this.DB);\nif(j >= this.t) return(this.s!=0);\nreturn((this.data[j]&(1<<(n%this.DB)))!=0);\n}\n\n//(protected) this op (1<<n)\nfunction bnpChangeBit(n,op) {\nvar r = BigInteger.ONE.shiftLeft(n);\nthis.bitwiseTo(r,op,r);\nreturn r;\n}\n\n//(public) this | (1<<n)\nfunction bnSetBit(n) { return this.changeBit(n,op_or); }\n\n//(public) this & ~(1<<n)\nfunction bnClearBit(n) { return this.changeBit(n,op_andnot); }\n\n//(public) this ^ (1<<n)\nfunction bnFlipBit(n) { return this.changeBit(n,op_xor); }\n\n//(protected) r = this + a\nfunction bnpAddTo(a,r) {\nvar i = 0, c = 0, m = Math.min(a.t,this.t);\nwhile(i < m) {\n c += this.data[i]+a.data[i];\n r.data[i++] = c&this.DM;\n c >>= this.DB;\n}\nif(a.t < this.t) {\n c += a.s;\n while(i < this.t) {\n   c += this.data[i];\n   r.data[i++] = c&this.DM;\n   c >>= this.DB;\n }\n c += this.s;\n} else {\n c += this.s;\n while(i < a.t) {\n   c += a.data[i];\n   r.data[i++] = c&this.DM;\n   c >>= this.DB;\n }\n c += a.s;\n}\nr.s = (c<0)?-1:0;\nif(c > 0) r.data[i++] = c;\nelse if(c < -1) r.data[i++] = this.DV+c;\nr.t = i;\nr.clamp();\n}\n\n//(public) this + a\nfunction bnAdd(a) { var r = nbi(); this.addTo(a,r); return r; }\n\n//(public) this - a\nfunction bnSubtract(a) { var r = nbi(); this.subTo(a,r); return r; }\n\n//(public) this * a\nfunction bnMultiply(a) { var r = nbi(); this.multiplyTo(a,r); return r; }\n\n//(public) this / a\nfunction bnDivide(a) { var r = nbi(); this.divRemTo(a,r,null); return r; }\n\n//(public) this % a\nfunction bnRemainder(a) { var r = nbi(); this.divRemTo(a,null,r); return r; }\n\n//(public) [this/a,this%a]\nfunction bnDivideAndRemainder(a) {\nvar q = nbi(), r = nbi();\nthis.divRemTo(a,q,r);\nreturn new Array(q,r);\n}\n\n//(protected) this *= n, this >= 0, 1 < n < DV\nfunction bnpDMultiply(n) {\nthis.data[this.t] = this.am(0,n-1,this,0,0,this.t);\n++this.t;\nthis.clamp();\n}\n\n//(protected) this += n << w words, this >= 0\nfunction bnpDAddOffset(n,w) {\nif(n == 0) return;\nwhile(this.t <= w) this.data[this.t++] = 0;\nthis.data[w] += n;\nwhile(this.data[w] >= this.DV) {\n this.data[w] -= this.DV;\n if(++w >= this.t) this.data[this.t++] = 0;\n ++this.data[w];\n}\n}\n\n//A \"null\" reducer\nfunction NullExp() {}\nfunction nNop(x) { return x; }\nfunction nMulTo(x,y,r) { x.multiplyTo(y,r); }\nfunction nSqrTo(x,r) { x.squareTo(r); }\n\nNullExp.prototype.convert = nNop;\nNullExp.prototype.revert = nNop;\nNullExp.prototype.mulTo = nMulTo;\nNullExp.prototype.sqrTo = nSqrTo;\n\n//(public) this^e\nfunction bnPow(e) { return this.exp(e,new NullExp()); }\n\n//(protected) r = lower n words of \"this * a\", a.t <= n\n//\"this\" should be the larger one if appropriate.\nfunction bnpMultiplyLowerTo(a,n,r) {\nvar i = Math.min(this.t+a.t,n);\nr.s = 0; // assumes a,this >= 0\nr.t = i;\nwhile(i > 0) r.data[--i] = 0;\nvar j;\nfor(j = r.t-this.t; i < j; ++i) r.data[i+this.t] = this.am(0,a.data[i],r,i,0,this.t);\nfor(j = Math.min(a.t,n); i < j; ++i) this.am(0,a.data[i],r,i,0,n-i);\nr.clamp();\n}\n\n//(protected) r = \"this * a\" without lower n words, n > 0\n//\"this\" should be the larger one if appropriate.\nfunction bnpMultiplyUpperTo(a,n,r) {\n--n;\nvar i = r.t = this.t+a.t-n;\nr.s = 0; // assumes a,this >= 0\nwhile(--i >= 0) r.data[i] = 0;\nfor(i = Math.max(n-this.t,0); i < a.t; ++i)\n r.data[this.t+i-n] = this.am(n-i,a.data[i],r,0,0,this.t+i-n);\nr.clamp();\nr.drShiftTo(1,r);\n}\n\n//Barrett modular reduction\nfunction Barrett(m) {\n// setup Barrett\nthis.r2 = nbi();\nthis.q3 = nbi();\nBigInteger.ONE.dlShiftTo(2*m.t,this.r2);\nthis.mu = this.r2.divide(m);\nthis.m = m;\n}\n\nfunction barrettConvert(x) {\nif(x.s < 0 || x.t > 2*this.m.t) return x.mod(this.m);\nelse if(x.compareTo(this.m) < 0) return x;\nelse { var r = nbi(); x.copyTo(r); this.reduce(r); return r; }\n}\n\nfunction barrettRevert(x) { return x; }\n\n//x = x mod m (HAC 14.42)\nfunction barrettReduce(x) {\nx.drShiftTo(this.m.t-1,this.r2);\nif(x.t > this.m.t+1) { x.t = this.m.t+1; x.clamp(); }\nthis.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);\nthis.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);\nwhile(x.compareTo(this.r2) < 0) x.dAddOffset(1,this.m.t+1);\nx.subTo(this.r2,x);\nwhile(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n//r = x^2 mod m; x != r\nfunction barrettSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n//r = x*y mod m; x,y != r\nfunction barrettMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nBarrett.prototype.convert = barrettConvert;\nBarrett.prototype.revert = barrettRevert;\nBarrett.prototype.reduce = barrettReduce;\nBarrett.prototype.mulTo = barrettMulTo;\nBarrett.prototype.sqrTo = barrettSqrTo;\n\n//(public) this^e % m (HAC 14.85)\nfunction bnModPow(e,m) {\nvar i = e.bitLength(), k, r = nbv(1), z;\nif(i <= 0) return r;\nelse if(i < 18) k = 1;\nelse if(i < 48) k = 3;\nelse if(i < 144) k = 4;\nelse if(i < 768) k = 5;\nelse k = 6;\nif(i < 8)\n z = new Classic(m);\nelse if(m.isEven())\n z = new Barrett(m);\nelse\n z = new Montgomery(m);\n\n// precomputation\nvar g = new Array(), n = 3, k1 = k-1, km = (1<<k)-1;\ng[1] = z.convert(this);\nif(k > 1) {\n var g2 = nbi();\n z.sqrTo(g[1],g2);\n while(n <= km) {\n   g[n] = nbi();\n   z.mulTo(g2,g[n-2],g[n]);\n   n += 2;\n }\n}\n\nvar j = e.t-1, w, is1 = true, r2 = nbi(), t;\ni = nbits(e.data[j])-1;\nwhile(j >= 0) {\n if(i >= k1) w = (e.data[j]>>(i-k1))&km;\n else {\n   w = (e.data[j]&((1<<(i+1))-1))<<(k1-i);\n   if(j > 0) w |= e.data[j-1]>>(this.DB+i-k1);\n }\n\n n = k;\n while((w&1) == 0) { w >>= 1; --n; }\n if((i -= n) < 0) { i += this.DB; --j; }\n if(is1) {  // ret == 1, don't bother squaring or multiplying it\n   g[w].copyTo(r);\n   is1 = false;\n } else {\n   while(n > 1) { z.sqrTo(r,r2); z.sqrTo(r2,r); n -= 2; }\n   if(n > 0) z.sqrTo(r,r2); else { t = r; r = r2; r2 = t; }\n   z.mulTo(r2,g[w],r);\n }\n\n while(j >= 0 && (e.data[j]&(1<<i)) == 0) {\n   z.sqrTo(r,r2); t = r; r = r2; r2 = t;\n   if(--i < 0) { i = this.DB-1; --j; }\n }\n}\nreturn z.revert(r);\n}\n\n//(public) gcd(this,a) (HAC 14.54)\nfunction bnGCD(a) {\nvar x = (this.s<0)?this.negate():this.clone();\nvar y = (a.s<0)?a.negate():a.clone();\nif(x.compareTo(y) < 0) { var t = x; x = y; y = t; }\nvar i = x.getLowestSetBit(), g = y.getLowestSetBit();\nif(g < 0) return x;\nif(i < g) g = i;\nif(g > 0) {\n x.rShiftTo(g,x);\n y.rShiftTo(g,y);\n}\nwhile(x.signum() > 0) {\n if((i = x.getLowestSetBit()) > 0) x.rShiftTo(i,x);\n if((i = y.getLowestSetBit()) > 0) y.rShiftTo(i,y);\n if(x.compareTo(y) >= 0) {\n   x.subTo(y,x);\n   x.rShiftTo(1,x);\n } else {\n   y.subTo(x,y);\n   y.rShiftTo(1,y);\n }\n}\nif(g > 0) y.lShiftTo(g,y);\nreturn y;\n}\n\n//(protected) this % n, n < 2^26\nfunction bnpModInt(n) {\nif(n <= 0) return 0;\nvar d = this.DV%n, r = (this.s<0)?n-1:0;\nif(this.t > 0)\n if(d == 0) r = this.data[0]%n;\n else for(var i = this.t-1; i >= 0; --i) r = (d*r+this.data[i])%n;\nreturn r;\n}\n\n//(public) 1/this % m (HAC 14.61)\nfunction bnModInverse(m) {\nvar ac = m.isEven();\nif((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;\nvar u = m.clone(), v = this.clone();\nvar a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\nwhile(u.signum() != 0) {\n while(u.isEven()) {\n   u.rShiftTo(1,u);\n   if(ac) {\n     if(!a.isEven() || !b.isEven()) { a.addTo(this,a); b.subTo(m,b); }\n     a.rShiftTo(1,a);\n   } else if(!b.isEven()) b.subTo(m,b);\n   b.rShiftTo(1,b);\n }\n while(v.isEven()) {\n   v.rShiftTo(1,v);\n   if(ac) {\n     if(!c.isEven() || !d.isEven()) { c.addTo(this,c); d.subTo(m,d); }\n     c.rShiftTo(1,c);\n   } else if(!d.isEven()) d.subTo(m,d);\n   d.rShiftTo(1,d);\n }\n if(u.compareTo(v) >= 0) {\n   u.subTo(v,u);\n   if(ac) a.subTo(c,a);\n   b.subTo(d,b);\n } else {\n   v.subTo(u,v);\n   if(ac) c.subTo(a,c);\n   d.subTo(b,d);\n }\n}\nif(v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\nif(d.compareTo(m) >= 0) return d.subtract(m);\nif(d.signum() < 0) d.addTo(m,d); else return d;\nif(d.signum() < 0) return d.add(m); else return d;\n}\n\nvar lowprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509];\nvar lplim = (1<<26)/lowprimes[lowprimes.length-1];\n\n//(public) test primality with certainty >= 1-.5^t\nfunction bnIsProbablePrime(t) {\nvar i, x = this.abs();\nif(x.t == 1 && x.data[0] <= lowprimes[lowprimes.length-1]) {\n for(i = 0; i < lowprimes.length; ++i)\n   if(x.data[0] == lowprimes[i]) return true;\n return false;\n}\nif(x.isEven()) return false;\ni = 1;\nwhile(i < lowprimes.length) {\n var m = lowprimes[i], j = i+1;\n while(j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n m = x.modInt(m);\n while(i < j) if(m%lowprimes[i++] == 0) return false;\n}\nreturn x.millerRabin(t);\n}\n\n//(protected) true if probably prime (HAC 4.24, Miller-Rabin)\nfunction bnpMillerRabin(t) {\nvar n1 = this.subtract(BigInteger.ONE);\nvar k = n1.getLowestSetBit();\nif(k <= 0) return false;\nvar r = n1.shiftRight(k);\nvar prng = bnGetPrng();\nvar a;\nfor(var i = 0; i < t; ++i) {\n // select witness 'a' at random from between 1 and n1\n do {\n   a = new BigInteger(this.bitLength(), prng);\n }\n while(a.compareTo(BigInteger.ONE) <= 0 || a.compareTo(n1) >= 0);\n var y = a.modPow(r,this);\n if(y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n   var j = 1;\n   while(j++ < k && y.compareTo(n1) != 0) {\n     y = y.modPowInt(2,this);\n     if(y.compareTo(BigInteger.ONE) == 0) return false;\n   }\n   if(y.compareTo(n1) != 0) return false;\n }\n}\nreturn true;\n}\n\n// get pseudo random number generator\nfunction bnGetPrng() {\n  // create prng with api that matches BigInteger secure random\n  return {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = Math.floor(Math.random() * 0x0100);\n      }\n    }\n  };\n}\n\n//protected\nBigInteger.prototype.chunkSize = bnpChunkSize;\nBigInteger.prototype.toRadix = bnpToRadix;\nBigInteger.prototype.fromRadix = bnpFromRadix;\nBigInteger.prototype.fromNumber = bnpFromNumber;\nBigInteger.prototype.bitwiseTo = bnpBitwiseTo;\nBigInteger.prototype.changeBit = bnpChangeBit;\nBigInteger.prototype.addTo = bnpAddTo;\nBigInteger.prototype.dMultiply = bnpDMultiply;\nBigInteger.prototype.dAddOffset = bnpDAddOffset;\nBigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\nBigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\nBigInteger.prototype.modInt = bnpModInt;\nBigInteger.prototype.millerRabin = bnpMillerRabin;\n\n//public\nBigInteger.prototype.clone = bnClone;\nBigInteger.prototype.intValue = bnIntValue;\nBigInteger.prototype.byteValue = bnByteValue;\nBigInteger.prototype.shortValue = bnShortValue;\nBigInteger.prototype.signum = bnSigNum;\nBigInteger.prototype.toByteArray = bnToByteArray;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.min = bnMin;\nBigInteger.prototype.max = bnMax;\nBigInteger.prototype.and = bnAnd;\nBigInteger.prototype.or = bnOr;\nBigInteger.prototype.xor = bnXor;\nBigInteger.prototype.andNot = bnAndNot;\nBigInteger.prototype.not = bnNot;\nBigInteger.prototype.shiftLeft = bnShiftLeft;\nBigInteger.prototype.shiftRight = bnShiftRight;\nBigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\nBigInteger.prototype.bitCount = bnBitCount;\nBigInteger.prototype.testBit = bnTestBit;\nBigInteger.prototype.setBit = bnSetBit;\nBigInteger.prototype.clearBit = bnClearBit;\nBigInteger.prototype.flipBit = bnFlipBit;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.remainder = bnRemainder;\nBigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\nBigInteger.prototype.modPow = bnModPow;\nBigInteger.prototype.modInverse = bnModInverse;\nBigInteger.prototype.pow = bnPow;\nBigInteger.prototype.gcd = bnGCD;\nBigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n\n//BigInteger interfaces not implemented in jsbn:\n\n//BigInteger(int signum, byte[] magnitude)\n//double doubleValue()\n//float floatValue()\n//int hashCode()\n//long longValue()\n//static BigInteger valueOf(long val)\n","/**\n * Javascript implementation of RSA-KEM.\n *\n * @author Lautaro Cozzani Rodriguez\n * @author Dave Longley\n *\n * Copyright (c) 2014 Lautaro Cozzani <lautaro.cozzani@scytl.com>\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./random');\nrequire('./jsbn');\n\nmodule.exports = forge.kem = forge.kem || {};\n\nvar BigInteger = forge.jsbn.BigInteger;\n\n/**\n * The API for the RSA Key Encapsulation Mechanism (RSA-KEM) from ISO 18033-2.\n */\nforge.kem.rsa = {};\n\n/**\n * Creates an RSA KEM API object for generating a secret asymmetric key.\n *\n * The symmetric key may be generated via a call to 'encrypt', which will\n * produce a ciphertext to be transmitted to the recipient and a key to be\n * kept secret. The ciphertext is a parameter to be passed to 'decrypt' which\n * will produce the same secret key for the recipient to use to decrypt a\n * message that was encrypted with the secret key.\n *\n * @param kdf the KDF API to use (eg: new forge.kem.kdf1()).\n * @param options the options to use.\n *          [prng] a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n */\nforge.kem.rsa.create = function(kdf, options) {\n  options = options || {};\n  var prng = options.prng || forge.random;\n\n  var kem = {};\n\n  /**\n   * Generates a secret key and its encapsulation.\n   *\n   * @param publicKey the RSA public key to encrypt with.\n   * @param keyLength the length, in bytes, of the secret key to generate.\n   *\n   * @return an object with:\n   *   encapsulation: the ciphertext for generating the secret key, as a\n   *     binary-encoded string of bytes.\n   *   key: the secret key to use for encrypting a message.\n   */\n  kem.encrypt = function(publicKey, keyLength) {\n    // generate a random r where 1 < r < n\n    var byteLength = Math.ceil(publicKey.n.bitLength() / 8);\n    var r;\n    do {\n      r = new BigInteger(\n        forge.util.bytesToHex(prng.getBytesSync(byteLength)),\n        16).mod(publicKey.n);\n    } while(r.compareTo(BigInteger.ONE) <= 0);\n\n    // prepend r with zeros\n    r = forge.util.hexToBytes(r.toString(16));\n    var zeros = byteLength - r.length;\n    if(zeros > 0) {\n      r = forge.util.fillString(String.fromCharCode(0), zeros) + r;\n    }\n\n    // encrypt the random\n    var encapsulation = publicKey.encrypt(r, 'NONE');\n\n    // generate the secret key\n    var key = kdf.generate(r, keyLength);\n\n    return {encapsulation: encapsulation, key: key};\n  };\n\n  /**\n   * Decrypts an encapsulated secret key.\n   *\n   * @param privateKey the RSA private key to decrypt with.\n   * @param encapsulation the ciphertext for generating the secret key, as\n   *          a binary-encoded string of bytes.\n   * @param keyLength the length, in bytes, of the secret key to generate.\n   *\n   * @return the secret key as a binary-encoded string of bytes.\n   */\n  kem.decrypt = function(privateKey, encapsulation, keyLength) {\n    // decrypt the encapsulation and generate the secret key\n    var r = privateKey.decrypt(encapsulation, 'NONE');\n    return kdf.generate(r, keyLength);\n  };\n\n  return kem;\n};\n\n// TODO: add forge.kem.kdf.create('KDF1', {md: ..., ...}) API?\n\n/**\n * Creates a key derivation API object that implements KDF1 per ISO 18033-2.\n *\n * @param md the hash API to use.\n * @param [digestLength] an optional digest length that must be positive and\n *          less than or equal to md.digestLength.\n *\n * @return a KDF1 API object.\n */\nforge.kem.kdf1 = function(md, digestLength) {\n  _createKDF(this, md, 0, digestLength || md.digestLength);\n};\n\n/**\n * Creates a key derivation API object that implements KDF2 per ISO 18033-2.\n *\n * @param md the hash API to use.\n * @param [digestLength] an optional digest length that must be positive and\n *          less than or equal to md.digestLength.\n *\n * @return a KDF2 API object.\n */\nforge.kem.kdf2 = function(md, digestLength) {\n  _createKDF(this, md, 1, digestLength || md.digestLength);\n};\n\n/**\n * Creates a KDF1 or KDF2 API object.\n *\n * @param md the hash API to use.\n * @param counterStart the starting index for the counter.\n * @param digestLength the digest length to use.\n *\n * @return the KDF API object.\n */\nfunction _createKDF(kdf, md, counterStart, digestLength) {\n  /**\n   * Generate a key of the specified length.\n   *\n   * @param x the binary-encoded byte string to generate a key from.\n   * @param length the number of bytes to generate (the size of the key).\n   *\n   * @return the key as a binary-encoded string.\n   */\n  kdf.generate = function(x, length) {\n    var key = new forge.util.ByteBuffer();\n\n    // run counter from counterStart to ceil(length / Hash.len)\n    var k = Math.ceil(length / digestLength) + counterStart;\n\n    var c = new forge.util.ByteBuffer();\n    for(var i = counterStart; i < k; ++i) {\n      // I2OSP(i, 4): convert counter to an octet string of 4 octets\n      c.putInt32(i);\n\n      // digest 'x' and the counter and add the result to the key\n      md.start();\n      md.update(x + c.getBytes());\n      var hash = md.digest();\n      key.putBytes(hash.getBytes(digestLength));\n    }\n\n    // truncate to the correct key length\n    key.truncate(key.length() - length);\n    return key.getBytes();\n  };\n}\n","/**\n * Cross-browser support for logging in a web application.\n *\n * @author David I. Lehn <dlehn@digitalbazaar.com>\n *\n * Copyright (c) 2008-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\n/* LOG API */\nmodule.exports = forge.log = forge.log || {};\n\n/**\n * Application logging system.\n *\n * Each logger level available as it's own function of the form:\n *   forge.log.level(category, args...)\n * The category is an arbitrary string, and the args are the same as\n * Firebug's console.log API. By default the call will be output as:\n *   'LEVEL [category] <args[0]>, args[1], ...'\n * This enables proper % formatting via the first argument.\n * Each category is enabled by default but can be enabled or disabled with\n * the setCategoryEnabled() function.\n */\n// list of known levels\nforge.log.levels = [\n  'none', 'error', 'warning', 'info', 'debug', 'verbose', 'max'];\n// info on the levels indexed by name:\n//   index: level index\n//   name: uppercased display name\nvar sLevelInfo = {};\n// list of loggers\nvar sLoggers = [];\n/**\n * Standard console logger. If no console support is enabled this will\n * remain null. Check before using.\n */\nvar sConsoleLogger = null;\n\n// logger flags\n/**\n * Lock the level at the current value. Used in cases where user config may\n * set the level such that only critical messages are seen but more verbose\n * messages are needed for debugging or other purposes.\n */\nforge.log.LEVEL_LOCKED = (1 << 1);\n/**\n * Always call log function. By default, the logging system will check the\n * message level against logger.level before calling the log function. This\n * flag allows the function to do its own check.\n */\nforge.log.NO_LEVEL_CHECK = (1 << 2);\n/**\n * Perform message interpolation with the passed arguments. \"%\" style\n * fields in log messages will be replaced by arguments as needed. Some\n * loggers, such as Firebug, may do this automatically. The original log\n * message will be available as 'message' and the interpolated version will\n * be available as 'fullMessage'.\n */\nforge.log.INTERPOLATE = (1 << 3);\n\n// setup each log level\nfor(var i = 0; i < forge.log.levels.length; ++i) {\n  var level = forge.log.levels[i];\n  sLevelInfo[level] = {\n    index: i,\n    name: level.toUpperCase()\n  };\n}\n\n/**\n * Message logger. Will dispatch a message to registered loggers as needed.\n *\n * @param message message object\n */\nforge.log.logMessage = function(message) {\n  var messageLevelIndex = sLevelInfo[message.level].index;\n  for(var i = 0; i < sLoggers.length; ++i) {\n    var logger = sLoggers[i];\n    if(logger.flags & forge.log.NO_LEVEL_CHECK) {\n      logger.f(message);\n    } else {\n      // get logger level\n      var loggerLevelIndex = sLevelInfo[logger.level].index;\n      // check level\n      if(messageLevelIndex <= loggerLevelIndex) {\n        // message critical enough, call logger\n        logger.f(logger, message);\n      }\n    }\n  }\n};\n\n/**\n * Sets the 'standard' key on a message object to:\n * \"LEVEL [category] \" + message\n *\n * @param message a message log object\n */\nforge.log.prepareStandard = function(message) {\n  if(!('standard' in message)) {\n    message.standard =\n      sLevelInfo[message.level].name +\n      //' ' + +message.timestamp +\n      ' [' + message.category + '] ' +\n      message.message;\n  }\n};\n\n/**\n * Sets the 'full' key on a message object to the original message\n * interpolated via % formatting with the message arguments.\n *\n * @param message a message log object.\n */\nforge.log.prepareFull = function(message) {\n  if(!('full' in message)) {\n    // copy args and insert message at the front\n    var args = [message.message];\n    args = args.concat([] || message['arguments']);\n    // format the message\n    message.full = forge.util.format.apply(this, args);\n  }\n};\n\n/**\n * Applies both preparseStandard() and prepareFull() to a message object and\n * store result in 'standardFull'.\n *\n * @param message a message log object.\n */\nforge.log.prepareStandardFull = function(message) {\n  if(!('standardFull' in message)) {\n    // FIXME implement 'standardFull' logging\n    forge.log.prepareStandard(message);\n    message.standardFull = message.standard;\n  }\n};\n\n// create log level functions\nif(true) {\n  // levels for which we want functions\n  var levels = ['error', 'warning', 'info', 'debug', 'verbose'];\n  for(var i = 0; i < levels.length; ++i) {\n    // wrap in a function to ensure proper level var is passed\n    (function(level) {\n      // create function for this level\n      forge.log[level] = function(category, message/*, args...*/) {\n        // convert arguments to real array, remove category and message\n        var args = Array.prototype.slice.call(arguments).slice(2);\n        // create message object\n        // Note: interpolation and standard formatting is done lazily\n        var msg = {\n          timestamp: new Date(),\n          level: level,\n          category: category,\n          message: message,\n          'arguments': args\n          /*standard*/\n          /*full*/\n          /*fullMessage*/\n        };\n        // process this message\n        forge.log.logMessage(msg);\n      };\n    })(levels[i]);\n  }\n}\n\n/**\n * Creates a new logger with specified custom logging function.\n *\n * The logging function has a signature of:\n *   function(logger, message)\n * logger: current logger\n * message: object:\n *   level: level id\n *   category: category\n *   message: string message\n *   arguments: Array of extra arguments\n *   fullMessage: interpolated message and arguments if INTERPOLATE flag set\n *\n * @param logFunction a logging function which takes a log message object\n *          as a parameter.\n *\n * @return a logger object.\n */\nforge.log.makeLogger = function(logFunction) {\n  var logger = {\n    flags: 0,\n    f: logFunction\n  };\n  forge.log.setLevel(logger, 'none');\n  return logger;\n};\n\n/**\n * Sets the current log level on a logger.\n *\n * @param logger the target logger.\n * @param level the new maximum log level as a string.\n *\n * @return true if set, false if not.\n */\nforge.log.setLevel = function(logger, level) {\n  var rval = false;\n  if(logger && !(logger.flags & forge.log.LEVEL_LOCKED)) {\n    for(var i = 0; i < forge.log.levels.length; ++i) {\n      var aValidLevel = forge.log.levels[i];\n      if(level == aValidLevel) {\n        // set level\n        logger.level = level;\n        rval = true;\n        break;\n      }\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Locks the log level at its current value.\n *\n * @param logger the target logger.\n * @param lock boolean lock value, default to true.\n */\nforge.log.lock = function(logger, lock) {\n  if(typeof lock === 'undefined' || lock) {\n    logger.flags |= forge.log.LEVEL_LOCKED;\n  } else {\n    logger.flags &= ~forge.log.LEVEL_LOCKED;\n  }\n};\n\n/**\n * Adds a logger.\n *\n * @param logger the logger object.\n */\nforge.log.addLogger = function(logger) {\n  sLoggers.push(logger);\n};\n\n// setup the console logger if possible, else create fake console.log\nif(typeof(console) !== 'undefined' && 'log' in console) {\n  var logger;\n  if(console.error && console.warn && console.info && console.debug) {\n    // looks like Firebug-style logging is available\n    // level handlers map\n    var levelHandlers = {\n      error: console.error,\n      warning: console.warn,\n      info: console.info,\n      debug: console.debug,\n      verbose: console.debug\n    };\n    var f = function(logger, message) {\n      forge.log.prepareStandard(message);\n      var handler = levelHandlers[message.level];\n      // prepend standard message and concat args\n      var args = [message.standard];\n      args = args.concat(message['arguments'].slice());\n      // apply to low-level console function\n      handler.apply(console, args);\n    };\n    logger = forge.log.makeLogger(f);\n  } else {\n    // only appear to have basic console.log\n    var f = function(logger, message) {\n      forge.log.prepareStandardFull(message);\n      console.log(message.standardFull);\n    };\n    logger = forge.log.makeLogger(f);\n  }\n  forge.log.setLevel(logger, 'debug');\n  forge.log.addLogger(logger);\n  sConsoleLogger = logger;\n} else {\n  // define fake console.log to avoid potential script errors on\n  // browsers that do not have console logging\n  console = {\n    log: function() {}\n  };\n}\n\n/*\n * Check for logging control query vars in current URL.\n *\n * console.level=<level-name>\n * Set's the console log level by name.  Useful to override defaults and\n * allow more verbose logging before a user config is loaded.\n *\n * console.lock=<true|false>\n * Lock the console log level at whatever level it is set at.  This is run\n * after console.level is processed.  Useful to force a level of verbosity\n * that could otherwise be limited by a user config.\n */\nif(sConsoleLogger !== null &&\n  typeof window !== 'undefined' && window.location\n) {\n  var query = new URL(window.location.href).searchParams;\n  if(query.has('console.level')) {\n    // set with last value\n    forge.log.setLevel(\n      sConsoleLogger, query.get('console.level').slice(-1)[0]);\n  }\n  if(query.has('console.lock')) {\n    // set with last value\n    var lock = query.get('console.lock').slice(-1)[0];\n    if(lock == 'true') {\n      forge.log.lock(sConsoleLogger);\n    }\n  }\n}\n\n// provide public access to console logger\nforge.log.consoleLogger = sConsoleLogger;\n","/**\n * Node.js module for all known Forge message digests.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2017 Digital Bazaar, Inc.\n */\nmodule.exports = require('./md');\n\nrequire('./md5');\nrequire('./sha1');\nrequire('./sha256');\nrequire('./sha512');\n","/**\n * Node.js module for Forge message digests.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2017 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\n\nmodule.exports = forge.md = forge.md || {};\nforge.md.algorithms = forge.md.algorithms || {};\n","/**\n * Message Digest Algorithm 5 with 128-bit digest (MD5) implementation.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar md5 = module.exports = forge.md5 = forge.md5 || {};\nforge.md.md5 = forge.md.algorithms.md5 = md5;\n\n/**\n * Creates an MD5 message digest object.\n *\n * @return a message digest object.\n */\nmd5.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // MD5 state contains four 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(16);\n\n  // message digest object\n  var md = {\n    algorithm: 'md5',\n    blockLength: 64,\n    digestLength: 16,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x67452301,\n      h1: 0xEFCDAB89,\n      h2: 0x98BADCFE,\n      h3: 0x10325476\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = (len[1] / 0x100000000) >>> 0;\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate MD5 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in little-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry\n    var bits, carry = 0;\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      bits = md.fullMessageLength[i] * 8 + carry;\n      carry = (bits / 0x100000000) >>> 0;\n      finalBlock.putInt32Le(bits >>> 0);\n    }\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32Le(s2.h0);\n    rval.putInt32Le(s2.h1);\n    rval.putInt32Le(s2.h2);\n    rval.putInt32Le(s2.h3);\n    return rval;\n  };\n\n  return md;\n};\n\n// padding, constant tables for calculating md5\nvar _padding = null;\nvar _g = null;\nvar _r = null;\nvar _k = null;\nvar _initialized = false;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // g values\n  _g = [\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    1, 6, 11, 0, 5, 10, 15, 4, 9, 14, 3, 8, 13, 2, 7, 12,\n    5, 8, 11, 14, 1, 4, 7, 10, 13, 0, 3, 6, 9, 12, 15, 2,\n    0, 7, 14, 5, 12, 3, 10, 1, 8, 15, 6, 13, 4, 11, 2, 9];\n\n  // rounds table\n  _r = [\n    7, 12, 17, 22,  7, 12, 17, 22,  7, 12, 17, 22,  7, 12, 17, 22,\n    5,  9, 14, 20,  5,  9, 14, 20,  5,  9, 14, 20,  5,  9, 14, 20,\n    4, 11, 16, 23,  4, 11, 16, 23,  4, 11, 16, 23,  4, 11, 16, 23,\n    6, 10, 15, 21,  6, 10, 15, 21,  6, 10, 15, 21,  6, 10, 15, 21];\n\n  // get the result of abs(sin(i + 1)) as a 32-bit integer\n  _k = new Array(64);\n  for(var i = 0; i < 64; ++i) {\n    _k[i] = Math.floor(Math.abs(Math.sin(i + 1)) * 0x100000000);\n  }\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates an MD5 state with the given byte buffer.\n *\n * @param s the MD5 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t, a, b, c, d, f, r, i;\n  var len = bytes.length();\n  while(len >= 64) {\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n\n    // round 1\n    for(i = 0; i < 16; ++i) {\n      w[i] = bytes.getInt32Le();\n      f = d ^ (b & (c ^ d));\n      t = (a + f + _k[i] + w[i]);\n      r = _r[i];\n      a = d;\n      d = c;\n      c = b;\n      b += (t << r) | (t >>> (32 - r));\n    }\n    // round 2\n    for(; i < 32; ++i) {\n      f = c ^ (d & (b ^ c));\n      t = (a + f + _k[i] + w[_g[i]]);\n      r = _r[i];\n      a = d;\n      d = c;\n      c = b;\n      b += (t << r) | (t >>> (32 - r));\n    }\n    // round 3\n    for(; i < 48; ++i) {\n      f = b ^ c ^ d;\n      t = (a + f + _k[i] + w[_g[i]]);\n      r = _r[i];\n      a = d;\n      d = c;\n      c = b;\n      b += (t << r) | (t >>> (32 - r));\n    }\n    // round 4\n    for(; i < 64; ++i) {\n      f = c ^ (b | ~d);\n      t = (a + f + _k[i] + w[_g[i]]);\n      r = _r[i];\n      a = d;\n      d = c;\n      c = b;\n      b += (t << r) | (t >>> (32 - r));\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n\n    len -= 64;\n  }\n}\n","/**\n * Node.js module for Forge mask generation functions.\n *\n * @author Stefan Siegl\n *\n * Copyright 2012 Stefan Siegl <stesie@brokenpipe.de>\n */\nvar forge = require('./forge');\nrequire('./mgf1');\n\nmodule.exports = forge.mgf = forge.mgf || {};\nforge.mgf.mgf1 = forge.mgf1;\n","/**\n * Javascript implementation of mask generation function MGF1.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nforge.mgf = forge.mgf || {};\nvar mgf1 = module.exports = forge.mgf.mgf1 = forge.mgf1 = forge.mgf1 || {};\n\n/**\n * Creates a MGF1 mask generation function object.\n *\n * @param md the message digest API to use (eg: forge.md.sha1.create()).\n *\n * @return a mask generation function object.\n */\nmgf1.create = function(md) {\n  var mgf = {\n    /**\n     * Generate mask of specified length.\n     *\n     * @param {String} seed The seed for mask generation.\n     * @param maskLen Number of bytes to generate.\n     * @return {String} The generated mask.\n     */\n    generate: function(seed, maskLen) {\n      /* 2. Let T be the empty octet string. */\n      var t = new forge.util.ByteBuffer();\n\n      /* 3. For counter from 0 to ceil(maskLen / hLen), do the following: */\n      var len = Math.ceil(maskLen / md.digestLength);\n      for(var i = 0; i < len; i++) {\n        /* a. Convert counter to an octet string C of length 4 octets */\n        var c = new forge.util.ByteBuffer();\n        c.putInt32(i);\n\n        /* b. Concatenate the hash of the seed mgfSeed and C to the octet\n         * string T: */\n        md.start();\n        md.update(seed + c.getBytes());\n        t.putBuffer(md.digest());\n      }\n\n      /* Output the leading maskLen octets of T as the octet string mask. */\n      t.truncate(t.length() - maskLen);\n      return t.getBytes();\n    }\n  };\n\n  return mgf;\n};\n","/**\n * Object IDs for ASN.1.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\n\nforge.pki = forge.pki || {};\nvar oids = module.exports = forge.pki.oids = forge.oids = forge.oids || {};\n\n// set id to name mapping and name to id mapping\nfunction _IN(id, name) {\n  oids[id] = name;\n  oids[name] = id;\n}\n// set id to name mapping only\nfunction _I_(id, name) {\n  oids[id] = name;\n}\n\n// algorithm OIDs\n_IN('1.2.840.113549.1.1.1', 'rsaEncryption');\n// Note: md2 & md4 not implemented\n//_IN('1.2.840.113549.1.1.2', 'md2WithRSAEncryption');\n//_IN('1.2.840.113549.1.1.3', 'md4WithRSAEncryption');\n_IN('1.2.840.113549.1.1.4', 'md5WithRSAEncryption');\n_IN('1.2.840.113549.1.1.5', 'sha1WithRSAEncryption');\n_IN('1.2.840.113549.1.1.7', 'RSAES-OAEP');\n_IN('1.2.840.113549.1.1.8', 'mgf1');\n_IN('1.2.840.113549.1.1.9', 'pSpecified');\n_IN('1.2.840.113549.1.1.10', 'RSASSA-PSS');\n_IN('1.2.840.113549.1.1.11', 'sha256WithRSAEncryption');\n_IN('1.2.840.113549.1.1.12', 'sha384WithRSAEncryption');\n_IN('1.2.840.113549.1.1.13', 'sha512WithRSAEncryption');\n// Edwards-curve Digital Signature Algorithm (EdDSA) Ed25519\n_IN('1.3.101.112', 'EdDSA25519');\n\n_IN('1.2.840.10040.4.3', 'dsa-with-sha1');\n\n_IN('1.3.14.3.2.7', 'desCBC');\n\n_IN('1.3.14.3.2.26', 'sha1');\n// Deprecated equivalent of sha1WithRSAEncryption\n_IN('1.3.14.3.2.29', 'sha1WithRSASignature');\n_IN('2.16.840.1.101.3.4.2.1', 'sha256');\n_IN('2.16.840.1.101.3.4.2.2', 'sha384');\n_IN('2.16.840.1.101.3.4.2.3', 'sha512');\n_IN('2.16.840.1.101.3.4.2.4', 'sha224');\n_IN('2.16.840.1.101.3.4.2.5', 'sha512-224');\n_IN('2.16.840.1.101.3.4.2.6', 'sha512-256');\n_IN('1.2.840.113549.2.2', 'md2');\n_IN('1.2.840.113549.2.5', 'md5');\n\n// pkcs#7 content types\n_IN('1.2.840.113549.1.7.1', 'data');\n_IN('1.2.840.113549.1.7.2', 'signedData');\n_IN('1.2.840.113549.1.7.3', 'envelopedData');\n_IN('1.2.840.113549.1.7.4', 'signedAndEnvelopedData');\n_IN('1.2.840.113549.1.7.5', 'digestedData');\n_IN('1.2.840.113549.1.7.6', 'encryptedData');\n\n// pkcs#9 oids\n_IN('1.2.840.113549.1.9.1', 'emailAddress');\n_IN('1.2.840.113549.1.9.2', 'unstructuredName');\n_IN('1.2.840.113549.1.9.3', 'contentType');\n_IN('1.2.840.113549.1.9.4', 'messageDigest');\n_IN('1.2.840.113549.1.9.5', 'signingTime');\n_IN('1.2.840.113549.1.9.6', 'counterSignature');\n_IN('1.2.840.113549.1.9.7', 'challengePassword');\n_IN('1.2.840.113549.1.9.8', 'unstructuredAddress');\n_IN('1.2.840.113549.1.9.14', 'extensionRequest');\n\n_IN('1.2.840.113549.1.9.20', 'friendlyName');\n_IN('1.2.840.113549.1.9.21', 'localKeyId');\n_IN('1.2.840.113549.1.9.22.1', 'x509Certificate');\n\n// pkcs#12 safe bags\n_IN('1.2.840.113549.1.12.10.1.1', 'keyBag');\n_IN('1.2.840.113549.1.12.10.1.2', 'pkcs8ShroudedKeyBag');\n_IN('1.2.840.113549.1.12.10.1.3', 'certBag');\n_IN('1.2.840.113549.1.12.10.1.4', 'crlBag');\n_IN('1.2.840.113549.1.12.10.1.5', 'secretBag');\n_IN('1.2.840.113549.1.12.10.1.6', 'safeContentsBag');\n\n// password-based-encryption for pkcs#12\n_IN('1.2.840.113549.1.5.13', 'pkcs5PBES2');\n_IN('1.2.840.113549.1.5.12', 'pkcs5PBKDF2');\n\n_IN('1.2.840.113549.1.12.1.1', 'pbeWithSHAAnd128BitRC4');\n_IN('1.2.840.113549.1.12.1.2', 'pbeWithSHAAnd40BitRC4');\n_IN('1.2.840.113549.1.12.1.3', 'pbeWithSHAAnd3-KeyTripleDES-CBC');\n_IN('1.2.840.113549.1.12.1.4', 'pbeWithSHAAnd2-KeyTripleDES-CBC');\n_IN('1.2.840.113549.1.12.1.5', 'pbeWithSHAAnd128BitRC2-CBC');\n_IN('1.2.840.113549.1.12.1.6', 'pbewithSHAAnd40BitRC2-CBC');\n\n// hmac OIDs\n_IN('1.2.840.113549.2.7', 'hmacWithSHA1');\n_IN('1.2.840.113549.2.8', 'hmacWithSHA224');\n_IN('1.2.840.113549.2.9', 'hmacWithSHA256');\n_IN('1.2.840.113549.2.10', 'hmacWithSHA384');\n_IN('1.2.840.113549.2.11', 'hmacWithSHA512');\n\n// symmetric key algorithm oids\n_IN('1.2.840.113549.3.7', 'des-EDE3-CBC');\n_IN('2.16.840.1.101.3.4.1.2', 'aes128-CBC');\n_IN('2.16.840.1.101.3.4.1.22', 'aes192-CBC');\n_IN('2.16.840.1.101.3.4.1.42', 'aes256-CBC');\n\n// certificate issuer/subject OIDs\n_IN('2.5.4.3', 'commonName');\n_IN('2.5.4.4', 'surname');\n_IN('2.5.4.5', 'serialNumber');\n_IN('2.5.4.6', 'countryName');\n_IN('2.5.4.7', 'localityName');\n_IN('2.5.4.8', 'stateOrProvinceName');\n_IN('2.5.4.9', 'streetAddress');\n_IN('2.5.4.10', 'organizationName');\n_IN('2.5.4.11', 'organizationalUnitName');\n_IN('2.5.4.12', 'title');\n_IN('2.5.4.13', 'description');\n_IN('2.5.4.15', 'businessCategory');\n_IN('2.5.4.17', 'postalCode');\n_IN('2.5.4.42', 'givenName');\n_IN('1.3.6.1.4.1.311.60.2.1.2', 'jurisdictionOfIncorporationStateOrProvinceName');\n_IN('1.3.6.1.4.1.311.60.2.1.3', 'jurisdictionOfIncorporationCountryName');\n\n// X.509 extension OIDs\n_IN('2.16.840.1.113730.1.1', 'nsCertType');\n_IN('2.16.840.1.113730.1.13', 'nsComment'); // deprecated in theory; still widely used\n_I_('2.5.29.1', 'authorityKeyIdentifier'); // deprecated, use .35\n_I_('2.5.29.2', 'keyAttributes'); // obsolete use .37 or .15\n_I_('2.5.29.3', 'certificatePolicies'); // deprecated, use .32\n_I_('2.5.29.4', 'keyUsageRestriction'); // obsolete use .37 or .15\n_I_('2.5.29.5', 'policyMapping'); // deprecated use .33\n_I_('2.5.29.6', 'subtreesConstraint'); // obsolete use .30\n_I_('2.5.29.7', 'subjectAltName'); // deprecated use .17\n_I_('2.5.29.8', 'issuerAltName'); // deprecated use .18\n_I_('2.5.29.9', 'subjectDirectoryAttributes');\n_I_('2.5.29.10', 'basicConstraints'); // deprecated use .19\n_I_('2.5.29.11', 'nameConstraints'); // deprecated use .30\n_I_('2.5.29.12', 'policyConstraints'); // deprecated use .36\n_I_('2.5.29.13', 'basicConstraints'); // deprecated use .19\n_IN('2.5.29.14', 'subjectKeyIdentifier');\n_IN('2.5.29.15', 'keyUsage');\n_I_('2.5.29.16', 'privateKeyUsagePeriod');\n_IN('2.5.29.17', 'subjectAltName');\n_IN('2.5.29.18', 'issuerAltName');\n_IN('2.5.29.19', 'basicConstraints');\n_I_('2.5.29.20', 'cRLNumber');\n_I_('2.5.29.21', 'cRLReason');\n_I_('2.5.29.22', 'expirationDate');\n_I_('2.5.29.23', 'instructionCode');\n_I_('2.5.29.24', 'invalidityDate');\n_I_('2.5.29.25', 'cRLDistributionPoints'); // deprecated use .31\n_I_('2.5.29.26', 'issuingDistributionPoint'); // deprecated use .28\n_I_('2.5.29.27', 'deltaCRLIndicator');\n_I_('2.5.29.28', 'issuingDistributionPoint');\n_I_('2.5.29.29', 'certificateIssuer');\n_I_('2.5.29.30', 'nameConstraints');\n_IN('2.5.29.31', 'cRLDistributionPoints');\n_IN('2.5.29.32', 'certificatePolicies');\n_I_('2.5.29.33', 'policyMappings');\n_I_('2.5.29.34', 'policyConstraints'); // deprecated use .36\n_IN('2.5.29.35', 'authorityKeyIdentifier');\n_I_('2.5.29.36', 'policyConstraints');\n_IN('2.5.29.37', 'extKeyUsage');\n_I_('2.5.29.46', 'freshestCRL');\n_I_('2.5.29.54', 'inhibitAnyPolicy');\n\n// extKeyUsage purposes\n_IN('1.3.6.1.4.1.11129.2.4.2', 'timestampList');\n_IN('1.3.6.1.5.5.7.1.1', 'authorityInfoAccess');\n_IN('1.3.6.1.5.5.7.3.1', 'serverAuth');\n_IN('1.3.6.1.5.5.7.3.2', 'clientAuth');\n_IN('1.3.6.1.5.5.7.3.3', 'codeSigning');\n_IN('1.3.6.1.5.5.7.3.4', 'emailProtection');\n_IN('1.3.6.1.5.5.7.3.8', 'timeStamping');\n","/**\n * Password-based encryption functions.\n *\n * @author Dave Longley\n * @author Stefan Siegl <stesie@brokenpipe.de>\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * An EncryptedPrivateKeyInfo:\n *\n * EncryptedPrivateKeyInfo ::= SEQUENCE {\n *   encryptionAlgorithm  EncryptionAlgorithmIdentifier,\n *   encryptedData        EncryptedData }\n *\n * EncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * EncryptedData ::= OCTET STRING\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./md');\nrequire('./oids');\nrequire('./pbkdf2');\nrequire('./pem');\nrequire('./random');\nrequire('./rc2');\nrequire('./rsa');\nrequire('./util');\n\nif(typeof BigInteger === 'undefined') {\n  var BigInteger = forge.jsbn.BigInteger;\n}\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Password-based encryption implementation. */\nvar pki = forge.pki = forge.pki || {};\nmodule.exports = pki.pbe = forge.pbe = forge.pbe || {};\nvar oids = pki.oids;\n\n// validator for an EncryptedPrivateKeyInfo structure\n// Note: Currently only works w/algorithm params\nvar encryptedPrivateKeyValidator = {\n  name: 'EncryptedPrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedPrivateKeyInfo.encryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encryptionOid'\n    }, {\n      name: 'AlgorithmIdentifier.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'encryptionParams'\n    }]\n  }, {\n    // encryptedData\n    name: 'EncryptedPrivateKeyInfo.encryptedData',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'encryptedData'\n  }]\n};\n\n// validator for a PBES2Algorithms structure\n// Note: Currently only works w/PBKDF2 + AES encryption schemes\nvar PBES2AlgorithmsValidator = {\n  name: 'PBES2Algorithms',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'PBES2Algorithms.keyDerivationFunc',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'PBES2Algorithms.keyDerivationFunc.oid',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'kdfOid'\n    }, {\n      name: 'PBES2Algorithms.params',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'PBES2Algorithms.params.salt',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OCTETSTRING,\n        constructed: false,\n        capture: 'kdfSalt'\n      }, {\n        name: 'PBES2Algorithms.params.iterationCount',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        capture: 'kdfIterationCount'\n      }, {\n        name: 'PBES2Algorithms.params.keyLength',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        optional: true,\n        capture: 'keyLength'\n      }, {\n        // prf\n        name: 'PBES2Algorithms.params.prf',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,\n        constructed: true,\n        optional: true,\n        value: [{\n          name: 'PBES2Algorithms.params.prf.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'prfOid'\n        }]\n      }]\n    }]\n  }, {\n    name: 'PBES2Algorithms.encryptionScheme',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'PBES2Algorithms.encryptionScheme.oid',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encOid'\n    }, {\n      name: 'PBES2Algorithms.encryptionScheme.iv',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OCTETSTRING,\n      constructed: false,\n      capture: 'encIv'\n    }]\n  }]\n};\n\nvar pkcs12PbeParamsValidator = {\n  name: 'pkcs-12PbeParams',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'pkcs-12PbeParams.salt',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'salt'\n  }, {\n    name: 'pkcs-12PbeParams.iterations',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'iterations'\n  }]\n};\n\n/**\n * Encrypts a ASN.1 PrivateKeyInfo object, producing an EncryptedPrivateKeyInfo.\n *\n * PBES2Algorithms ALGORITHM-IDENTIFIER ::=\n *   { {PBES2-params IDENTIFIED BY id-PBES2}, ...}\n *\n * id-PBES2 OBJECT IDENTIFIER ::= {pkcs-5 13}\n *\n * PBES2-params ::= SEQUENCE {\n *   keyDerivationFunc AlgorithmIdentifier {{PBES2-KDFs}},\n *   encryptionScheme AlgorithmIdentifier {{PBES2-Encs}}\n * }\n *\n * PBES2-KDFs ALGORITHM-IDENTIFIER ::=\n *   { {PBKDF2-params IDENTIFIED BY id-PBKDF2}, ... }\n *\n * PBES2-Encs ALGORITHM-IDENTIFIER ::= { ... }\n *\n * PBKDF2-params ::= SEQUENCE {\n *   salt CHOICE {\n *     specified OCTET STRING,\n *     otherSource AlgorithmIdentifier {{PBKDF2-SaltSources}}\n *   },\n *   iterationCount INTEGER (1..MAX),\n *   keyLength INTEGER (1..MAX) OPTIONAL,\n *   prf AlgorithmIdentifier {{PBKDF2-PRFs}} DEFAULT algid-hmacWithSHA1\n * }\n *\n * @param obj the ASN.1 PrivateKeyInfo object.\n * @param password the password to encrypt with.\n * @param options:\n *          algorithm the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des'), defaults to 'aes128'.\n *          count the iteration count to use.\n *          saltSize the salt size to use.\n *          prfAlgorithm the PRF message digest algorithm to use\n *            ('sha1', 'sha224', 'sha256', 'sha384', 'sha512')\n *\n * @return the ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptPrivateKeyInfo = function(obj, password, options) {\n  // set default options\n  options = options || {};\n  options.saltSize = options.saltSize || 8;\n  options.count = options.count || 2048;\n  options.algorithm = options.algorithm || 'aes128';\n  options.prfAlgorithm = options.prfAlgorithm || 'sha1';\n\n  // generate PBE params\n  var salt = forge.random.getBytesSync(options.saltSize);\n  var count = options.count;\n  var countBytes = asn1.integerToDer(count);\n  var dkLen;\n  var encryptionAlgorithm;\n  var encryptedData;\n  if(options.algorithm.indexOf('aes') === 0 || options.algorithm === 'des') {\n    // do PBES2\n    var ivLen, encOid, cipherFn;\n    switch(options.algorithm) {\n    case 'aes128':\n      dkLen = 16;\n      ivLen = 16;\n      encOid = oids['aes128-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'aes192':\n      dkLen = 24;\n      ivLen = 16;\n      encOid = oids['aes192-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'aes256':\n      dkLen = 32;\n      ivLen = 16;\n      encOid = oids['aes256-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'des':\n      dkLen = 8;\n      ivLen = 8;\n      encOid = oids['desCBC'];\n      cipherFn = forge.des.createEncryptionCipher;\n      break;\n    default:\n      var error = new Error('Cannot encrypt private key. Unknown encryption algorithm.');\n      error.algorithm = options.algorithm;\n      throw error;\n    }\n\n    // get PRF message digest\n    var prfAlgorithm = 'hmacWith' + options.prfAlgorithm.toUpperCase();\n    var md = prfAlgorithmToMessageDigest(prfAlgorithm);\n\n    // encrypt private key using pbe SHA-1 and AES/DES\n    var dk = forge.pkcs5.pbkdf2(password, salt, count, dkLen, md);\n    var iv = forge.random.getBytesSync(ivLen);\n    var cipher = cipherFn(dk);\n    cipher.start(iv);\n    cipher.update(asn1.toDer(obj));\n    cipher.finish();\n    encryptedData = cipher.output.getBytes();\n\n    // get PBKDF2-params\n    var params = createPbkdf2Params(salt, countBytes, dkLen, prfAlgorithm);\n\n    encryptionAlgorithm = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(oids['pkcs5PBES2']).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // keyDerivationFunc\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(oids['pkcs5PBKDF2']).getBytes()),\n          // PBKDF2-params\n          params\n        ]),\n        // encryptionScheme\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(encOid).getBytes()),\n          // iv\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, iv)\n        ])\n      ])\n    ]);\n  } else if(options.algorithm === '3des') {\n    // Do PKCS12 PBE\n    dkLen = 24;\n\n    var saltBytes = new forge.util.ByteBuffer(salt);\n    var dk = pki.pbe.generatePkcs12Key(password, saltBytes, 1, count, dkLen);\n    var iv = pki.pbe.generatePkcs12Key(password, saltBytes, 2, count, dkLen);\n    var cipher = forge.des.createEncryptionCipher(dk);\n    cipher.start(iv);\n    cipher.update(asn1.toDer(obj));\n    cipher.finish();\n    encryptedData = cipher.output.getBytes();\n\n    encryptionAlgorithm = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(oids['pbeWithSHAAnd3-KeyTripleDES-CBC']).getBytes()),\n      // pkcs-12PbeParams\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // salt\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, salt),\n        // iteration count\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n          countBytes.getBytes())\n      ])\n    ]);\n  } else {\n    var error = new Error('Cannot encrypt private key. Unknown encryption algorithm.');\n    error.algorithm = options.algorithm;\n    throw error;\n  }\n\n  // EncryptedPrivateKeyInfo\n  var rval = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // encryptionAlgorithm\n    encryptionAlgorithm,\n    // encryptedData\n    asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, encryptedData)\n  ]);\n  return rval;\n};\n\n/**\n * Decrypts a ASN.1 PrivateKeyInfo object.\n *\n * @param obj the ASN.1 EncryptedPrivateKeyInfo object.\n * @param password the password to decrypt with.\n *\n * @return the ASN.1 PrivateKeyInfo on success, null on failure.\n */\npki.decryptPrivateKeyInfo = function(obj, password) {\n  var rval = null;\n\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, encryptedPrivateKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get cipher\n  var oid = asn1.derToOid(capture.encryptionOid);\n  var cipher = pki.pbe.getCipher(oid, capture.encryptionParams, password);\n\n  // get encrypted data\n  var encrypted = forge.util.createBuffer(capture.encryptedData);\n\n  cipher.update(encrypted);\n  if(cipher.finish()) {\n    rval = asn1.fromDer(cipher.output);\n  }\n\n  return rval;\n};\n\n/**\n * Converts a EncryptedPrivateKeyInfo to PEM format.\n *\n * @param epki the EncryptedPrivateKeyInfo.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted encrypted private key.\n */\npki.encryptedPrivateKeyToPem = function(epki, maxline) {\n  // convert to DER, then PEM-encode\n  var msg = {\n    type: 'ENCRYPTED PRIVATE KEY',\n    body: asn1.toDer(epki).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts a PEM-encoded EncryptedPrivateKeyInfo to ASN.1 format. Decryption\n * is not performed.\n *\n * @param pem the EncryptedPrivateKeyInfo in PEM-format.\n *\n * @return the ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptedPrivateKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'ENCRYPTED PRIVATE KEY') {\n    var error = new Error('Could not convert encrypted private key from PEM; ' +\n      'PEM header type is \"ENCRYPTED PRIVATE KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert encrypted private key from PEM; ' +\n      'PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  return asn1.fromDer(msg.body);\n};\n\n/**\n * Encrypts an RSA private key. By default, the key will be wrapped in\n * a PrivateKeyInfo and encrypted to produce a PKCS#8 EncryptedPrivateKeyInfo.\n * This is the standard, preferred way to encrypt a private key.\n *\n * To produce a non-standard PEM-encrypted private key that uses encapsulated\n * headers to indicate the encryption algorithm (old-style non-PKCS#8 OpenSSL\n * private key encryption), set the 'legacy' option to true. Note: Using this\n * option will cause the iteration count to be forced to 1.\n *\n * Note: The 'des' algorithm is supported, but it is not considered to be\n * secure because it only uses a single 56-bit key. If possible, it is highly\n * recommended that a different algorithm be used.\n *\n * @param rsaKey the RSA key to encrypt.\n * @param password the password to use.\n * @param options:\n *          algorithm: the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des', 'des').\n *          count: the iteration count to use.\n *          saltSize: the salt size to use.\n *          legacy: output an old non-PKCS#8 PEM-encrypted+encapsulated\n *            headers (DEK-Info) private key.\n *\n * @return the PEM-encoded ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptRsaPrivateKey = function(rsaKey, password, options) {\n  // standard PKCS#8\n  options = options || {};\n  if(!options.legacy) {\n    // encrypt PrivateKeyInfo\n    var rval = pki.wrapRsaPrivateKey(pki.privateKeyToAsn1(rsaKey));\n    rval = pki.encryptPrivateKeyInfo(rval, password, options);\n    return pki.encryptedPrivateKeyToPem(rval);\n  }\n\n  // legacy non-PKCS#8\n  var algorithm;\n  var iv;\n  var dkLen;\n  var cipherFn;\n  switch(options.algorithm) {\n  case 'aes128':\n    algorithm = 'AES-128-CBC';\n    dkLen = 16;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case 'aes192':\n    algorithm = 'AES-192-CBC';\n    dkLen = 24;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case 'aes256':\n    algorithm = 'AES-256-CBC';\n    dkLen = 32;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case '3des':\n    algorithm = 'DES-EDE3-CBC';\n    dkLen = 24;\n    iv = forge.random.getBytesSync(8);\n    cipherFn = forge.des.createEncryptionCipher;\n    break;\n  case 'des':\n    algorithm = 'DES-CBC';\n    dkLen = 8;\n    iv = forge.random.getBytesSync(8);\n    cipherFn = forge.des.createEncryptionCipher;\n    break;\n  default:\n    var error = new Error('Could not encrypt RSA private key; unsupported ' +\n      'encryption algorithm \"' + options.algorithm + '\".');\n    error.algorithm = options.algorithm;\n    throw error;\n  }\n\n  // encrypt private key using OpenSSL legacy key derivation\n  var dk = forge.pbe.opensslDeriveBytes(password, iv.substr(0, 8), dkLen);\n  var cipher = cipherFn(dk);\n  cipher.start(iv);\n  cipher.update(asn1.toDer(pki.privateKeyToAsn1(rsaKey)));\n  cipher.finish();\n\n  var msg = {\n    type: 'RSA PRIVATE KEY',\n    procType: {\n      version: '4',\n      type: 'ENCRYPTED'\n    },\n    dekInfo: {\n      algorithm: algorithm,\n      parameters: forge.util.bytesToHex(iv).toUpperCase()\n    },\n    body: cipher.output.getBytes()\n  };\n  return forge.pem.encode(msg);\n};\n\n/**\n * Decrypts an RSA private key.\n *\n * @param pem the PEM-formatted EncryptedPrivateKeyInfo to decrypt.\n * @param password the password to use.\n *\n * @return the RSA key on success, null on failure.\n */\npki.decryptRsaPrivateKey = function(pem, password) {\n  var rval = null;\n\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'ENCRYPTED PRIVATE KEY' &&\n    msg.type !== 'PRIVATE KEY' &&\n    msg.type !== 'RSA PRIVATE KEY') {\n    var error = new Error('Could not convert private key from PEM; PEM header type ' +\n      'is not \"ENCRYPTED PRIVATE KEY\", \"PRIVATE KEY\", or \"RSA PRIVATE KEY\".');\n    error.headerType = error;\n    throw error;\n  }\n\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    var dkLen;\n    var cipherFn;\n    switch(msg.dekInfo.algorithm) {\n    case 'DES-CBC':\n      dkLen = 8;\n      cipherFn = forge.des.createDecryptionCipher;\n      break;\n    case 'DES-EDE3-CBC':\n      dkLen = 24;\n      cipherFn = forge.des.createDecryptionCipher;\n      break;\n    case 'AES-128-CBC':\n      dkLen = 16;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'AES-192-CBC':\n      dkLen = 24;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'AES-256-CBC':\n      dkLen = 32;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'RC2-40-CBC':\n      dkLen = 5;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 40);\n      };\n      break;\n    case 'RC2-64-CBC':\n      dkLen = 8;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 64);\n      };\n      break;\n    case 'RC2-128-CBC':\n      dkLen = 16;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 128);\n      };\n      break;\n    default:\n      var error = new Error('Could not decrypt private key; unsupported ' +\n        'encryption algorithm \"' + msg.dekInfo.algorithm + '\".');\n      error.algorithm = msg.dekInfo.algorithm;\n      throw error;\n    }\n\n    // use OpenSSL legacy key derivation\n    var iv = forge.util.hexToBytes(msg.dekInfo.parameters);\n    var dk = forge.pbe.opensslDeriveBytes(password, iv.substr(0, 8), dkLen);\n    var cipher = cipherFn(dk);\n    cipher.start(iv);\n    cipher.update(forge.util.createBuffer(msg.body));\n    if(cipher.finish()) {\n      rval = cipher.output.getBytes();\n    } else {\n      return rval;\n    }\n  } else {\n    rval = msg.body;\n  }\n\n  if(msg.type === 'ENCRYPTED PRIVATE KEY') {\n    rval = pki.decryptPrivateKeyInfo(asn1.fromDer(rval), password);\n  } else {\n    // decryption already performed above\n    rval = asn1.fromDer(rval);\n  }\n\n  if(rval !== null) {\n    rval = pki.privateKeyFromAsn1(rval);\n  }\n\n  return rval;\n};\n\n/**\n * Derives a PKCS#12 key.\n *\n * @param password the password to derive the key material from, null or\n *          undefined for none.\n * @param salt the salt, as a ByteBuffer, to use.\n * @param id the PKCS#12 ID byte (1 = key material, 2 = IV, 3 = MAC).\n * @param iter the iteration count.\n * @param n the number of bytes to derive from the password.\n * @param md the message digest to use, defaults to SHA-1.\n *\n * @return a ByteBuffer with the bytes derived from the password.\n */\npki.pbe.generatePkcs12Key = function(password, salt, id, iter, n, md) {\n  var j, l;\n\n  if(typeof md === 'undefined' || md === null) {\n    if(!('sha1' in forge.md)) {\n      throw new Error('\"sha1\" hash algorithm unavailable.');\n    }\n    md = forge.md.sha1.create();\n  }\n\n  var u = md.digestLength;\n  var v = md.blockLength;\n  var result = new forge.util.ByteBuffer();\n\n  /* Convert password to Unicode byte buffer + trailing 0-byte. */\n  var passBuf = new forge.util.ByteBuffer();\n  if(password !== null && password !== undefined) {\n    for(l = 0; l < password.length; l++) {\n      passBuf.putInt16(password.charCodeAt(l));\n    }\n    passBuf.putInt16(0);\n  }\n\n  /* Length of salt and password in BYTES. */\n  var p = passBuf.length();\n  var s = salt.length();\n\n  /* 1. Construct a string, D (the \"diversifier\"), by concatenating\n        v copies of ID. */\n  var D = new forge.util.ByteBuffer();\n  D.fillWithByte(id, v);\n\n  /* 2. Concatenate copies of the salt together to create a string S of length\n        v * ceil(s / v) bytes (the final copy of the salt may be trunacted\n        to create S).\n        Note that if the salt is the empty string, then so is S. */\n  var Slen = v * Math.ceil(s / v);\n  var S = new forge.util.ByteBuffer();\n  for(l = 0; l < Slen; l++) {\n    S.putByte(salt.at(l % s));\n  }\n\n  /* 3. Concatenate copies of the password together to create a string P of\n        length v * ceil(p / v) bytes (the final copy of the password may be\n        truncated to create P).\n        Note that if the password is the empty string, then so is P. */\n  var Plen = v * Math.ceil(p / v);\n  var P = new forge.util.ByteBuffer();\n  for(l = 0; l < Plen; l++) {\n    P.putByte(passBuf.at(l % p));\n  }\n\n  /* 4. Set I=S||P to be the concatenation of S and P. */\n  var I = S;\n  I.putBuffer(P);\n\n  /* 5. Set c=ceil(n / u). */\n  var c = Math.ceil(n / u);\n\n  /* 6. For i=1, 2, ..., c, do the following: */\n  for(var i = 1; i <= c; i++) {\n    /* a) Set Ai=H^r(D||I). (l.e. the rth hash of D||I, H(H(H(...H(D||I)))) */\n    var buf = new forge.util.ByteBuffer();\n    buf.putBytes(D.bytes());\n    buf.putBytes(I.bytes());\n    for(var round = 0; round < iter; round++) {\n      md.start();\n      md.update(buf.getBytes());\n      buf = md.digest();\n    }\n\n    /* b) Concatenate copies of Ai to create a string B of length v bytes (the\n          final copy of Ai may be truncated to create B). */\n    var B = new forge.util.ByteBuffer();\n    for(l = 0; l < v; l++) {\n      B.putByte(buf.at(l % u));\n    }\n\n    /* c) Treating I as a concatenation I0, I1, ..., Ik-1 of v-byte blocks,\n          where k=ceil(s / v) + ceil(p / v), modify I by setting\n          Ij=(Ij+B+1) mod 2v for each j.  */\n    var k = Math.ceil(s / v) + Math.ceil(p / v);\n    var Inew = new forge.util.ByteBuffer();\n    for(j = 0; j < k; j++) {\n      var chunk = new forge.util.ByteBuffer(I.getBytes(v));\n      var x = 0x1ff;\n      for(l = B.length() - 1; l >= 0; l--) {\n        x = x >> 8;\n        x += B.at(l) + chunk.at(l);\n        chunk.setAt(l, x & 0xff);\n      }\n      Inew.putBuffer(chunk);\n    }\n    I = Inew;\n\n    /* Add Ai to A. */\n    result.putBuffer(buf);\n  }\n\n  result.truncate(result.length() - n);\n  return result;\n};\n\n/**\n * Get new Forge cipher object instance.\n *\n * @param oid the OID (in string notation).\n * @param params the ASN.1 params object.\n * @param password the password to decrypt with.\n *\n * @return new cipher object instance.\n */\npki.pbe.getCipher = function(oid, params, password) {\n  switch(oid) {\n  case pki.oids['pkcs5PBES2']:\n    return pki.pbe.getCipherForPBES2(oid, params, password);\n\n  case pki.oids['pbeWithSHAAnd3-KeyTripleDES-CBC']:\n  case pki.oids['pbewithSHAAnd40BitRC2-CBC']:\n    return pki.pbe.getCipherForPKCS12PBE(oid, params, password);\n\n  default:\n    var error = new Error('Cannot read encrypted PBE data block. Unsupported OID.');\n    error.oid = oid;\n    error.supportedOids = [\n      'pkcs5PBES2',\n      'pbeWithSHAAnd3-KeyTripleDES-CBC',\n      'pbewithSHAAnd40BitRC2-CBC'\n    ];\n    throw error;\n  }\n};\n\n/**\n * Get new Forge cipher object instance according to PBES2 params block.\n *\n * The returned cipher instance is already started using the IV\n * from PBES2 parameter block.\n *\n * @param oid the PKCS#5 PBKDF2 OID (in string notation).\n * @param params the ASN.1 PBES2-params object.\n * @param password the password to decrypt with.\n *\n * @return new cipher object instance.\n */\npki.pbe.getCipherForPBES2 = function(oid, params, password) {\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(params, PBES2AlgorithmsValidator, capture, errors)) {\n    var error = new Error('Cannot read password-based-encryption algorithm ' +\n      'parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // check oids\n  oid = asn1.derToOid(capture.kdfOid);\n  if(oid !== pki.oids['pkcs5PBKDF2']) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'Unsupported key derivation function OID.');\n    error.oid = oid;\n    error.supportedOids = ['pkcs5PBKDF2'];\n    throw error;\n  }\n  oid = asn1.derToOid(capture.encOid);\n  if(oid !== pki.oids['aes128-CBC'] &&\n    oid !== pki.oids['aes192-CBC'] &&\n    oid !== pki.oids['aes256-CBC'] &&\n    oid !== pki.oids['des-EDE3-CBC'] &&\n    oid !== pki.oids['desCBC']) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'Unsupported encryption scheme OID.');\n    error.oid = oid;\n    error.supportedOids = [\n      'aes128-CBC', 'aes192-CBC', 'aes256-CBC', 'des-EDE3-CBC', 'desCBC'];\n    throw error;\n  }\n\n  // set PBE params\n  var salt = capture.kdfSalt;\n  var count = forge.util.createBuffer(capture.kdfIterationCount);\n  count = count.getInt(count.length() << 3);\n  var dkLen;\n  var cipherFn;\n  switch(pki.oids[oid]) {\n  case 'aes128-CBC':\n    dkLen = 16;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'aes192-CBC':\n    dkLen = 24;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'aes256-CBC':\n    dkLen = 32;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'des-EDE3-CBC':\n    dkLen = 24;\n    cipherFn = forge.des.createDecryptionCipher;\n    break;\n  case 'desCBC':\n    dkLen = 8;\n    cipherFn = forge.des.createDecryptionCipher;\n    break;\n  }\n\n  // get PRF message digest\n  var md = prfOidToMessageDigest(capture.prfOid);\n\n  // decrypt private key using pbe with chosen PRF and AES/DES\n  var dk = forge.pkcs5.pbkdf2(password, salt, count, dkLen, md);\n  var iv = capture.encIv;\n  var cipher = cipherFn(dk);\n  cipher.start(iv);\n\n  return cipher;\n};\n\n/**\n * Get new Forge cipher object instance for PKCS#12 PBE.\n *\n * The returned cipher instance is already started using the key & IV\n * derived from the provided password and PKCS#12 PBE salt.\n *\n * @param oid The PKCS#12 PBE OID (in string notation).\n * @param params The ASN.1 PKCS#12 PBE-params object.\n * @param password The password to decrypt with.\n *\n * @return the new cipher object instance.\n */\npki.pbe.getCipherForPKCS12PBE = function(oid, params, password) {\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(params, pkcs12PbeParamsValidator, capture, errors)) {\n    var error = new Error('Cannot read password-based-encryption algorithm ' +\n      'parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var salt = forge.util.createBuffer(capture.salt);\n  var count = forge.util.createBuffer(capture.iterations);\n  count = count.getInt(count.length() << 3);\n\n  var dkLen, dIvLen, cipherFn;\n  switch(oid) {\n    case pki.oids['pbeWithSHAAnd3-KeyTripleDES-CBC']:\n      dkLen = 24;\n      dIvLen = 8;\n      cipherFn = forge.des.startDecrypting;\n      break;\n\n    case pki.oids['pbewithSHAAnd40BitRC2-CBC']:\n      dkLen = 5;\n      dIvLen = 8;\n      cipherFn = function(key, iv) {\n        var cipher = forge.rc2.createDecryptionCipher(key, 40);\n        cipher.start(iv, null);\n        return cipher;\n      };\n      break;\n\n    default:\n      var error = new Error('Cannot read PKCS #12 PBE data block. Unsupported OID.');\n      error.oid = oid;\n      throw error;\n  }\n\n  // get PRF message digest\n  var md = prfOidToMessageDigest(capture.prfOid);\n  var key = pki.pbe.generatePkcs12Key(password, salt, 1, count, dkLen, md);\n  md.start();\n  var iv = pki.pbe.generatePkcs12Key(password, salt, 2, count, dIvLen, md);\n\n  return cipherFn(key, iv);\n};\n\n/**\n * OpenSSL's legacy key derivation function.\n *\n * See: http://www.openssl.org/docs/crypto/EVP_BytesToKey.html\n *\n * @param password the password to derive the key from.\n * @param salt the salt to use, null for none.\n * @param dkLen the number of bytes needed for the derived key.\n * @param [options] the options to use:\n *          [md] an optional message digest object to use.\n */\npki.pbe.opensslDeriveBytes = function(password, salt, dkLen, md) {\n  if(typeof md === 'undefined' || md === null) {\n    if(!('md5' in forge.md)) {\n      throw new Error('\"md5\" hash algorithm unavailable.');\n    }\n    md = forge.md.md5.create();\n  }\n  if(salt === null) {\n    salt = '';\n  }\n  var digests = [hash(md, password + salt)];\n  for(var length = 16, i = 1; length < dkLen; ++i, length += 16) {\n    digests.push(hash(md, digests[i - 1] + password + salt));\n  }\n  return digests.join('').substr(0, dkLen);\n};\n\nfunction hash(md, bytes) {\n  return md.start().update(bytes).digest().getBytes();\n}\n\nfunction prfOidToMessageDigest(prfOid) {\n  // get PRF algorithm, default to SHA-1\n  var prfAlgorithm;\n  if(!prfOid) {\n    prfAlgorithm = 'hmacWithSHA1';\n  } else {\n    prfAlgorithm = pki.oids[asn1.derToOid(prfOid)];\n    if(!prfAlgorithm) {\n      var error = new Error('Unsupported PRF OID.');\n      error.oid = prfOid;\n      error.supported = [\n        'hmacWithSHA1', 'hmacWithSHA224', 'hmacWithSHA256', 'hmacWithSHA384',\n        'hmacWithSHA512'];\n      throw error;\n    }\n  }\n  return prfAlgorithmToMessageDigest(prfAlgorithm);\n}\n\nfunction prfAlgorithmToMessageDigest(prfAlgorithm) {\n  var factory = forge.md;\n  switch(prfAlgorithm) {\n  case 'hmacWithSHA224':\n    factory = forge.md.sha512;\n  case 'hmacWithSHA1':\n  case 'hmacWithSHA256':\n  case 'hmacWithSHA384':\n  case 'hmacWithSHA512':\n    prfAlgorithm = prfAlgorithm.substr(8).toLowerCase();\n    break;\n  default:\n    var error = new Error('Unsupported PRF algorithm.');\n    error.algorithm = prfAlgorithm;\n    error.supported = [\n      'hmacWithSHA1', 'hmacWithSHA224', 'hmacWithSHA256', 'hmacWithSHA384',\n      'hmacWithSHA512'];\n    throw error;\n  }\n  if(!factory || !(prfAlgorithm in factory)) {\n    throw new Error('Unknown hash algorithm: ' + prfAlgorithm);\n  }\n  return factory[prfAlgorithm].create();\n}\n\nfunction createPbkdf2Params(salt, countBytes, dkLen, prfAlgorithm) {\n  var params = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // salt\n    asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, salt),\n    // iteration count\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      countBytes.getBytes())\n  ]);\n  // when PRF algorithm is not SHA-1 default, add key length and PRF algorithm\n  if(prfAlgorithm !== 'hmacWithSHA1') {\n    params.value.push(\n      // key length\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(dkLen.toString(16))),\n      // AlgorithmIdentifier\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // algorithm\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids[prfAlgorithm]).getBytes()),\n        // parameters (null)\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n      ]));\n  }\n  return params;\n}\n","/**\n * Password-Based Key-Derivation Function #2 implementation.\n *\n * See RFC 2898 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./hmac');\nrequire('./md');\nrequire('./util');\n\nvar pkcs5 = forge.pkcs5 = forge.pkcs5 || {};\n\nvar crypto;\nif(forge.util.isNodejs && !forge.options.usePureJavaScript) {\n  crypto = require('crypto');\n}\n\n/**\n * Derives a key from a password.\n *\n * @param p the password as a binary-encoded string of bytes.\n * @param s the salt as a binary-encoded string of bytes.\n * @param c the iteration count, a positive integer.\n * @param dkLen the intended length, in bytes, of the derived key,\n *          (max: 2^32 - 1) * hash length of the PRF.\n * @param [md] the message digest (or algorithm identifier as a string) to use\n *          in the PRF, defaults to SHA-1.\n * @param [callback(err, key)] presence triggers asynchronous version, called\n *          once the operation completes.\n *\n * @return the derived key, as a binary-encoded string of bytes, for the\n *           synchronous version (if no callback is specified).\n */\nmodule.exports = forge.pbkdf2 = pkcs5.pbkdf2 = function(\n  p, s, c, dkLen, md, callback) {\n  if(typeof md === 'function') {\n    callback = md;\n    md = null;\n  }\n\n  // use native implementation if possible and not disabled, note that\n  // some node versions only support SHA-1, others allow digest to be changed\n  if(forge.util.isNodejs && !forge.options.usePureJavaScript &&\n    crypto.pbkdf2 && (md === null || typeof md !== 'object') &&\n    (crypto.pbkdf2Sync.length > 4 || (!md || md === 'sha1'))) {\n    if(typeof md !== 'string') {\n      // default prf to SHA-1\n      md = 'sha1';\n    }\n    p = Buffer.from(p, 'binary');\n    s = Buffer.from(s, 'binary');\n    if(!callback) {\n      if(crypto.pbkdf2Sync.length === 4) {\n        return crypto.pbkdf2Sync(p, s, c, dkLen).toString('binary');\n      }\n      return crypto.pbkdf2Sync(p, s, c, dkLen, md).toString('binary');\n    }\n    if(crypto.pbkdf2Sync.length === 4) {\n      return crypto.pbkdf2(p, s, c, dkLen, function(err, key) {\n        if(err) {\n          return callback(err);\n        }\n        callback(null, key.toString('binary'));\n      });\n    }\n    return crypto.pbkdf2(p, s, c, dkLen, md, function(err, key) {\n      if(err) {\n        return callback(err);\n      }\n      callback(null, key.toString('binary'));\n    });\n  }\n\n  if(typeof md === 'undefined' || md === null) {\n    // default prf to SHA-1\n    md = 'sha1';\n  }\n  if(typeof md === 'string') {\n    if(!(md in forge.md.algorithms)) {\n      throw new Error('Unknown hash algorithm: ' + md);\n    }\n    md = forge.md[md].create();\n  }\n\n  var hLen = md.digestLength;\n\n  /* 1. If dkLen > (2^32 - 1) * hLen, output \"derived key too long\" and\n    stop. */\n  if(dkLen > (0xFFFFFFFF * hLen)) {\n    var err = new Error('Derived key is too long.');\n    if(callback) {\n      return callback(err);\n    }\n    throw err;\n  }\n\n  /* 2. Let len be the number of hLen-octet blocks in the derived key,\n    rounding up, and let r be the number of octets in the last\n    block:\n\n    len = CEIL(dkLen / hLen),\n    r = dkLen - (len - 1) * hLen. */\n  var len = Math.ceil(dkLen / hLen);\n  var r = dkLen - (len - 1) * hLen;\n\n  /* 3. For each block of the derived key apply the function F defined\n    below to the password P, the salt S, the iteration count c, and\n    the block index to compute the block:\n\n    T_1 = F(P, S, c, 1),\n    T_2 = F(P, S, c, 2),\n    ...\n    T_len = F(P, S, c, len),\n\n    where the function F is defined as the exclusive-or sum of the\n    first c iterates of the underlying pseudorandom function PRF\n    applied to the password P and the concatenation of the salt S\n    and the block index i:\n\n    F(P, S, c, i) = u_1 XOR u_2 XOR ... XOR u_c\n\n    where\n\n    u_1 = PRF(P, S || INT(i)),\n    u_2 = PRF(P, u_1),\n    ...\n    u_c = PRF(P, u_{c-1}).\n\n    Here, INT(i) is a four-octet encoding of the integer i, most\n    significant octet first. */\n  var prf = forge.hmac.create();\n  prf.start(md, p);\n  var dk = '';\n  var xor, u_c, u_c1;\n\n  // sync version\n  if(!callback) {\n    for(var i = 1; i <= len; ++i) {\n      // PRF(P, S || INT(i)) (first iteration)\n      prf.start(null, null);\n      prf.update(s);\n      prf.update(forge.util.int32ToBytes(i));\n      xor = u_c1 = prf.digest().getBytes();\n\n      // PRF(P, u_{c-1}) (other iterations)\n      for(var j = 2; j <= c; ++j) {\n        prf.start(null, null);\n        prf.update(u_c1);\n        u_c = prf.digest().getBytes();\n        // F(p, s, c, i)\n        xor = forge.util.xorBytes(xor, u_c, hLen);\n        u_c1 = u_c;\n      }\n\n      /* 4. Concatenate the blocks and extract the first dkLen octets to\n        produce a derived key DK:\n\n        DK = T_1 || T_2 ||  ...  || T_len<0..r-1> */\n      dk += (i < len) ? xor : xor.substr(0, r);\n    }\n    /* 5. Output the derived key DK. */\n    return dk;\n  }\n\n  // async version\n  var i = 1, j;\n  function outer() {\n    if(i > len) {\n      // done\n      return callback(null, dk);\n    }\n\n    // PRF(P, S || INT(i)) (first iteration)\n    prf.start(null, null);\n    prf.update(s);\n    prf.update(forge.util.int32ToBytes(i));\n    xor = u_c1 = prf.digest().getBytes();\n\n    // PRF(P, u_{c-1}) (other iterations)\n    j = 2;\n    inner();\n  }\n\n  function inner() {\n    if(j <= c) {\n      prf.start(null, null);\n      prf.update(u_c1);\n      u_c = prf.digest().getBytes();\n      // F(p, s, c, i)\n      xor = forge.util.xorBytes(xor, u_c, hLen);\n      u_c1 = u_c;\n      ++j;\n      return forge.util.setImmediate(inner);\n    }\n\n    /* 4. Concatenate the blocks and extract the first dkLen octets to\n      produce a derived key DK:\n\n      DK = T_1 || T_2 ||  ...  || T_len<0..r-1> */\n    dk += (i < len) ? xor : xor.substr(0, r);\n\n    ++i;\n    outer();\n  }\n\n  outer();\n};\n","/**\n * Javascript implementation of basic PEM (Privacy Enhanced Mail) algorithms.\n *\n * See: RFC 1421.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2013-2014 Digital Bazaar, Inc.\n *\n * A Forge PEM object has the following fields:\n *\n * type: identifies the type of message (eg: \"RSA PRIVATE KEY\").\n *\n * procType: identifies the type of processing performed on the message,\n *   it has two subfields: version and type, eg: 4,ENCRYPTED.\n *\n * contentDomain: identifies the type of content in the message, typically\n *   only uses the value: \"RFC822\".\n *\n * dekInfo: identifies the message encryption algorithm and mode and includes\n *   any parameters for the algorithm, it has two subfields: algorithm and\n *   parameters, eg: DES-CBC,F8143EDE5960C597.\n *\n * headers: contains all other PEM encapsulated headers -- where order is\n *   significant (for pairing data like recipient ID + key info).\n *\n * body: the binary-encoded body.\n */\nvar forge = require('./forge');\nrequire('./util');\n\n// shortcut for pem API\nvar pem = module.exports = forge.pem = forge.pem || {};\n\n/**\n * Encodes (serializes) the given PEM object.\n *\n * @param msg the PEM message object to encode.\n * @param options the options to use:\n *          maxline the maximum characters per line for the body, (default: 64).\n *\n * @return the PEM-formatted string.\n */\npem.encode = function(msg, options) {\n  options = options || {};\n  var rval = '-----BEGIN ' + msg.type + '-----\\r\\n';\n\n  // encode special headers\n  var header;\n  if(msg.procType) {\n    header = {\n      name: 'Proc-Type',\n      values: [String(msg.procType.version), msg.procType.type]\n    };\n    rval += foldHeader(header);\n  }\n  if(msg.contentDomain) {\n    header = {name: 'Content-Domain', values: [msg.contentDomain]};\n    rval += foldHeader(header);\n  }\n  if(msg.dekInfo) {\n    header = {name: 'DEK-Info', values: [msg.dekInfo.algorithm]};\n    if(msg.dekInfo.parameters) {\n      header.values.push(msg.dekInfo.parameters);\n    }\n    rval += foldHeader(header);\n  }\n\n  if(msg.headers) {\n    // encode all other headers\n    for(var i = 0; i < msg.headers.length; ++i) {\n      rval += foldHeader(msg.headers[i]);\n    }\n  }\n\n  // terminate header\n  if(msg.procType) {\n    rval += '\\r\\n';\n  }\n\n  // add body\n  rval += forge.util.encode64(msg.body, options.maxline || 64) + '\\r\\n';\n\n  rval += '-----END ' + msg.type + '-----\\r\\n';\n  return rval;\n};\n\n/**\n * Decodes (deserializes) all PEM messages found in the given string.\n *\n * @param str the PEM-formatted string to decode.\n *\n * @return the PEM message objects in an array.\n */\npem.decode = function(str) {\n  var rval = [];\n\n  // split string into PEM messages (be lenient w/EOF on BEGIN line)\n  var rMessage = /\\s*-----BEGIN ([A-Z0-9- ]+)-----\\r?\\n?([\\x21-\\x7e\\s]+?(?:\\r?\\n\\r?\\n))?([:A-Za-z0-9+\\/=\\s]+?)-----END \\1-----/g;\n  var rHeader = /([\\x21-\\x7e]+):\\s*([\\x21-\\x7e\\s^:]+)/;\n  var rCRLF = /\\r?\\n/;\n  var match;\n  while(true) {\n    match = rMessage.exec(str);\n    if(!match) {\n      break;\n    }\n\n    // accept \"NEW CERTIFICATE REQUEST\" as \"CERTIFICATE REQUEST\"\n    // https://datatracker.ietf.org/doc/html/rfc7468#section-7\n    var type = match[1];\n    if(type === 'NEW CERTIFICATE REQUEST') {\n      type = 'CERTIFICATE REQUEST';\n    }\n\n    var msg = {\n      type: type,\n      procType: null,\n      contentDomain: null,\n      dekInfo: null,\n      headers: [],\n      body: forge.util.decode64(match[3])\n    };\n    rval.push(msg);\n\n    // no headers\n    if(!match[2]) {\n      continue;\n    }\n\n    // parse headers\n    var lines = match[2].split(rCRLF);\n    var li = 0;\n    while(match && li < lines.length) {\n      // get line, trim any rhs whitespace\n      var line = lines[li].replace(/\\s+$/, '');\n\n      // RFC2822 unfold any following folded lines\n      for(var nl = li + 1; nl < lines.length; ++nl) {\n        var next = lines[nl];\n        if(!/\\s/.test(next[0])) {\n          break;\n        }\n        line += next;\n        li = nl;\n      }\n\n      // parse header\n      match = line.match(rHeader);\n      if(match) {\n        var header = {name: match[1], values: []};\n        var values = match[2].split(',');\n        for(var vi = 0; vi < values.length; ++vi) {\n          header.values.push(ltrim(values[vi]));\n        }\n\n        // Proc-Type must be the first header\n        if(!msg.procType) {\n          if(header.name !== 'Proc-Type') {\n            throw new Error('Invalid PEM formatted message. The first ' +\n              'encapsulated header must be \"Proc-Type\".');\n          } else if(header.values.length !== 2) {\n            throw new Error('Invalid PEM formatted message. The \"Proc-Type\" ' +\n              'header must have two subfields.');\n          }\n          msg.procType = {version: values[0], type: values[1]};\n        } else if(!msg.contentDomain && header.name === 'Content-Domain') {\n          // special-case Content-Domain\n          msg.contentDomain = values[0] || '';\n        } else if(!msg.dekInfo && header.name === 'DEK-Info') {\n          // special-case DEK-Info\n          if(header.values.length === 0) {\n            throw new Error('Invalid PEM formatted message. The \"DEK-Info\" ' +\n              'header must have at least one subfield.');\n          }\n          msg.dekInfo = {algorithm: values[0], parameters: values[1] || null};\n        } else {\n          msg.headers.push(header);\n        }\n      }\n\n      ++li;\n    }\n\n    if(msg.procType === 'ENCRYPTED' && !msg.dekInfo) {\n      throw new Error('Invalid PEM formatted message. The \"DEK-Info\" ' +\n        'header must be present if \"Proc-Type\" is \"ENCRYPTED\".');\n    }\n  }\n\n  if(rval.length === 0) {\n    throw new Error('Invalid PEM formatted message.');\n  }\n\n  return rval;\n};\n\nfunction foldHeader(header) {\n  var rval = header.name + ': ';\n\n  // ensure values with CRLF are folded\n  var values = [];\n  var insertSpace = function(match, $1) {\n    return ' ' + $1;\n  };\n  for(var i = 0; i < header.values.length; ++i) {\n    values.push(header.values[i].replace(/^(\\S+\\r\\n)/, insertSpace));\n  }\n  rval += values.join(',') + '\\r\\n';\n\n  // do folding\n  var length = 0;\n  var candidate = -1;\n  for(var i = 0; i < rval.length; ++i, ++length) {\n    if(length > 65 && candidate !== -1) {\n      var insert = rval[candidate];\n      if(insert === ',') {\n        ++candidate;\n        rval = rval.substr(0, candidate) + '\\r\\n ' + rval.substr(candidate);\n      } else {\n        rval = rval.substr(0, candidate) +\n          '\\r\\n' + insert + rval.substr(candidate + 1);\n      }\n      length = (i - candidate - 1);\n      candidate = -1;\n      ++i;\n    } else if(rval[i] === ' ' || rval[i] === '\\t' || rval[i] === ',') {\n      candidate = i;\n    }\n  }\n\n  return rval;\n}\n\nfunction ltrim(str) {\n  return str.replace(/^\\s+/, '');\n}\n","/**\n * Partial implementation of PKCS#1 v2.2: RSA-OEAP\n *\n * Modified but based on the following MIT and BSD licensed code:\n *\n * https://github.com/kjur/jsjws/blob/master/rsa.js:\n *\n * The 'jsjws'(JSON Web Signature JavaScript Library) License\n *\n * Copyright (c) 2012 Kenji Urushima\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n * http://webrsa.cvs.sourceforge.net/viewvc/webrsa/Client/RSAES-OAEP.js?content-type=text%2Fplain:\n *\n * RSAES-OAEP.js\n * $Id: RSAES-OAEP.js,v 1.1.1.1 2003/03/19 15:37:20 ellispritchard Exp $\n * JavaScript Implementation of PKCS #1 v2.1 RSA CRYPTOGRAPHY STANDARD (RSA Laboratories, June 14, 2002)\n * Copyright (C) Ellis Pritchard, Guardian Unlimited 2003.\n * Contact: ellis@nukinetics.com\n * Distributed under the BSD License.\n *\n * Official documentation: http://www.rsa.com/rsalabs/node.asp?id=2125\n *\n * @author Evan Jones (http://evanjones.ca/)\n * @author Dave Longley\n *\n * Copyright (c) 2013-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./random');\nrequire('./sha1');\n\n// shortcut for PKCS#1 API\nvar pkcs1 = module.exports = forge.pkcs1 = forge.pkcs1 || {};\n\n/**\n * Encode the given RSAES-OAEP message (M) using key, with optional label (L)\n * and seed.\n *\n * This method does not perform RSA encryption, it only encodes the message\n * using RSAES-OAEP.\n *\n * @param key the RSA key to use.\n * @param message the message to encode.\n * @param options the options to use:\n *          label an optional label to use.\n *          seed the seed to use.\n *          md the message digest object to use, undefined for SHA-1.\n *          mgf1 optional mgf1 parameters:\n *            md the message digest object to use for MGF1.\n *\n * @return the encoded message bytes.\n */\npkcs1.encode_rsa_oaep = function(key, message, options) {\n  // parse arguments\n  var label;\n  var seed;\n  var md;\n  var mgf1Md;\n  // legacy args (label, seed, md)\n  if(typeof options === 'string') {\n    label = options;\n    seed = arguments[3] || undefined;\n    md = arguments[4] || undefined;\n  } else if(options) {\n    label = options.label || undefined;\n    seed = options.seed || undefined;\n    md = options.md || undefined;\n    if(options.mgf1 && options.mgf1.md) {\n      mgf1Md = options.mgf1.md;\n    }\n  }\n\n  // default OAEP to SHA-1 message digest\n  if(!md) {\n    md = forge.md.sha1.create();\n  } else {\n    md.start();\n  }\n\n  // default MGF-1 to same as OAEP\n  if(!mgf1Md) {\n    mgf1Md = md;\n  }\n\n  // compute length in bytes and check output\n  var keyLength = Math.ceil(key.n.bitLength() / 8);\n  var maxLength = keyLength - 2 * md.digestLength - 2;\n  if(message.length > maxLength) {\n    var error = new Error('RSAES-OAEP input message length is too long.');\n    error.length = message.length;\n    error.maxLength = maxLength;\n    throw error;\n  }\n\n  if(!label) {\n    label = '';\n  }\n  md.update(label, 'raw');\n  var lHash = md.digest();\n\n  var PS = '';\n  var PS_length = maxLength - message.length;\n  for(var i = 0; i < PS_length; i++) {\n    PS += '\\x00';\n  }\n\n  var DB = lHash.getBytes() + PS + '\\x01' + message;\n\n  if(!seed) {\n    seed = forge.random.getBytes(md.digestLength);\n  } else if(seed.length !== md.digestLength) {\n    var error = new Error('Invalid RSAES-OAEP seed. The seed length must ' +\n      'match the digest length.');\n    error.seedLength = seed.length;\n    error.digestLength = md.digestLength;\n    throw error;\n  }\n\n  var dbMask = rsa_mgf1(seed, keyLength - md.digestLength - 1, mgf1Md);\n  var maskedDB = forge.util.xorBytes(DB, dbMask, DB.length);\n\n  var seedMask = rsa_mgf1(maskedDB, md.digestLength, mgf1Md);\n  var maskedSeed = forge.util.xorBytes(seed, seedMask, seed.length);\n\n  // return encoded message\n  return '\\x00' + maskedSeed + maskedDB;\n};\n\n/**\n * Decode the given RSAES-OAEP encoded message (EM) using key, with optional\n * label (L).\n *\n * This method does not perform RSA decryption, it only decodes the message\n * using RSAES-OAEP.\n *\n * @param key the RSA key to use.\n * @param em the encoded message to decode.\n * @param options the options to use:\n *          label an optional label to use.\n *          md the message digest object to use for OAEP, undefined for SHA-1.\n *          mgf1 optional mgf1 parameters:\n *            md the message digest object to use for MGF1.\n *\n * @return the decoded message bytes.\n */\npkcs1.decode_rsa_oaep = function(key, em, options) {\n  // parse args\n  var label;\n  var md;\n  var mgf1Md;\n  // legacy args\n  if(typeof options === 'string') {\n    label = options;\n    md = arguments[3] || undefined;\n  } else if(options) {\n    label = options.label || undefined;\n    md = options.md || undefined;\n    if(options.mgf1 && options.mgf1.md) {\n      mgf1Md = options.mgf1.md;\n    }\n  }\n\n  // compute length in bytes\n  var keyLength = Math.ceil(key.n.bitLength() / 8);\n\n  if(em.length !== keyLength) {\n    var error = new Error('RSAES-OAEP encoded message length is invalid.');\n    error.length = em.length;\n    error.expectedLength = keyLength;\n    throw error;\n  }\n\n  // default OAEP to SHA-1 message digest\n  if(md === undefined) {\n    md = forge.md.sha1.create();\n  } else {\n    md.start();\n  }\n\n  // default MGF-1 to same as OAEP\n  if(!mgf1Md) {\n    mgf1Md = md;\n  }\n\n  if(keyLength < 2 * md.digestLength + 2) {\n    throw new Error('RSAES-OAEP key is too short for the hash function.');\n  }\n\n  if(!label) {\n    label = '';\n  }\n  md.update(label, 'raw');\n  var lHash = md.digest().getBytes();\n\n  // split the message into its parts\n  var y = em.charAt(0);\n  var maskedSeed = em.substring(1, md.digestLength + 1);\n  var maskedDB = em.substring(1 + md.digestLength);\n\n  var seedMask = rsa_mgf1(maskedDB, md.digestLength, mgf1Md);\n  var seed = forge.util.xorBytes(maskedSeed, seedMask, maskedSeed.length);\n\n  var dbMask = rsa_mgf1(seed, keyLength - md.digestLength - 1, mgf1Md);\n  var db = forge.util.xorBytes(maskedDB, dbMask, maskedDB.length);\n\n  var lHashPrime = db.substring(0, md.digestLength);\n\n  // constant time check that all values match what is expected\n  var error = (y !== '\\x00');\n\n  // constant time check lHash vs lHashPrime\n  for(var i = 0; i < md.digestLength; ++i) {\n    error |= (lHash.charAt(i) !== lHashPrime.charAt(i));\n  }\n\n  // \"constant time\" find the 0x1 byte separating the padding (zeros) from the\n  // message\n  // TODO: It must be possible to do this in a better/smarter way?\n  var in_ps = 1;\n  var index = md.digestLength;\n  for(var j = md.digestLength; j < db.length; j++) {\n    var code = db.charCodeAt(j);\n\n    var is_0 = (code & 0x1) ^ 0x1;\n\n    // non-zero if not 0 or 1 in the ps section\n    var error_mask = in_ps ? 0xfffe : 0x0000;\n    error |= (code & error_mask);\n\n    // latch in_ps to zero after we find 0x1\n    in_ps = in_ps & is_0;\n    index += in_ps;\n  }\n\n  if(error || db.charCodeAt(index) !== 0x1) {\n    throw new Error('Invalid RSAES-OAEP padding.');\n  }\n\n  return db.substring(index + 1);\n};\n\nfunction rsa_mgf1(seed, maskLength, hash) {\n  // default to SHA-1 message digest\n  if(!hash) {\n    hash = forge.md.sha1.create();\n  }\n  var t = '';\n  var count = Math.ceil(maskLength / hash.digestLength);\n  for(var i = 0; i < count; ++i) {\n    var c = String.fromCharCode(\n      (i >> 24) & 0xFF, (i >> 16) & 0xFF, (i >> 8) & 0xFF, i & 0xFF);\n    hash.start();\n    hash.update(seed + c);\n    t += hash.digest().getBytes();\n  }\n  return t.substring(0, maskLength);\n}\n","/**\n * Javascript implementation of PKCS#12.\n *\n * @author Dave Longley\n * @author Stefan Siegl <stesie@brokenpipe.de>\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * The ASN.1 representation of PKCS#12 is as follows\n * (see ftp://ftp.rsasecurity.com/pub/pkcs/pkcs-12/pkcs-12-tc1.pdf for details)\n *\n * PFX ::= SEQUENCE {\n *   version  INTEGER {v3(3)}(v3,...),\n *   authSafe ContentInfo,\n *   macData  MacData OPTIONAL\n * }\n *\n * MacData ::= SEQUENCE {\n *   mac DigestInfo,\n *   macSalt OCTET STRING,\n *   iterations INTEGER DEFAULT 1\n * }\n * Note: The iterations default is for historical reasons and its use is\n * deprecated. A higher value, like 1024, is recommended.\n *\n * DigestInfo is defined in PKCS#7 as follows:\n *\n * DigestInfo ::= SEQUENCE {\n *   digestAlgorithm DigestAlgorithmIdentifier,\n *   digest Digest\n * }\n *\n * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of SHA1 there is none.\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *    algorithm OBJECT IDENTIFIER,\n *    parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * Digest ::= OCTET STRING\n *\n *\n * ContentInfo ::= SEQUENCE {\n *   contentType ContentType,\n *   content     [0] EXPLICIT ANY DEFINED BY contentType OPTIONAL\n * }\n *\n * ContentType ::= OBJECT IDENTIFIER\n *\n * AuthenticatedSafe ::= SEQUENCE OF ContentInfo\n * -- Data if unencrypted\n * -- EncryptedData if password-encrypted\n * -- EnvelopedData if public key-encrypted\n *\n *\n * SafeContents ::= SEQUENCE OF SafeBag\n *\n * SafeBag ::= SEQUENCE {\n *   bagId     BAG-TYPE.&id ({PKCS12BagSet})\n *   bagValue  [0] EXPLICIT BAG-TYPE.&Type({PKCS12BagSet}{@bagId}),\n *   bagAttributes SET OF PKCS12Attribute OPTIONAL\n * }\n *\n * PKCS12Attribute ::= SEQUENCE {\n *   attrId ATTRIBUTE.&id ({PKCS12AttrSet}),\n *   attrValues SET OF ATTRIBUTE.&Type ({PKCS12AttrSet}{@attrId})\n * } -- This type is compatible with the X.500 type 'Attribute'\n *\n * PKCS12AttrSet ATTRIBUTE ::= {\n *   friendlyName | -- from PKCS #9\n *   localKeyId, -- from PKCS #9\n *   ... -- Other attributes are allowed\n * }\n *\n * CertBag ::= SEQUENCE {\n *   certId    BAG-TYPE.&id   ({CertTypes}),\n *   certValue [0] EXPLICIT BAG-TYPE.&Type ({CertTypes}{@certId})\n * }\n *\n * x509Certificate BAG-TYPE ::= {OCTET STRING IDENTIFIED BY {certTypes 1}}\n *   -- DER-encoded X.509 certificate stored in OCTET STRING\n *\n * sdsiCertificate BAG-TYPE ::= {IA5String IDENTIFIED BY {certTypes 2}}\n * -- Base64-encoded SDSI certificate stored in IA5String\n *\n * CertTypes BAG-TYPE ::= {\n *   x509Certificate |\n *   sdsiCertificate,\n *   ... -- For future extensions\n * }\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./hmac');\nrequire('./oids');\nrequire('./pkcs7asn1');\nrequire('./pbe');\nrequire('./random');\nrequire('./rsa');\nrequire('./sha1');\nrequire('./util');\nrequire('./x509');\n\n// shortcut for asn.1 & PKI API\nvar asn1 = forge.asn1;\nvar pki = forge.pki;\n\n// shortcut for PKCS#12 API\nvar p12 = module.exports = forge.pkcs12 = forge.pkcs12 || {};\n\nvar contentInfoValidator = {\n  name: 'ContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,  // a ContentInfo\n  constructed: true,\n  value: [{\n    name: 'ContentInfo.contentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'ContentInfo.content',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    captureAsn1: 'content'\n  }]\n};\n\nvar pfxValidator = {\n  name: 'PFX',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'PFX.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  },\n  contentInfoValidator, {\n    name: 'PFX.macData',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    optional: true,\n    captureAsn1: 'mac',\n    value: [{\n      name: 'PFX.macData.mac',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,  // DigestInfo\n      constructed: true,\n      value: [{\n        name: 'PFX.macData.mac.digestAlgorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,  // DigestAlgorithmIdentifier\n        constructed: true,\n        value: [{\n          name: 'PFX.macData.mac.digestAlgorithm.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'macAlgorithm'\n        }, {\n          name: 'PFX.macData.mac.digestAlgorithm.parameters',\n          tagClass: asn1.Class.UNIVERSAL,\n          captureAsn1: 'macAlgorithmParameters'\n        }]\n      }, {\n        name: 'PFX.macData.mac.digest',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OCTETSTRING,\n        constructed: false,\n        capture: 'macDigest'\n      }]\n    }, {\n      name: 'PFX.macData.macSalt',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OCTETSTRING,\n      constructed: false,\n      capture: 'macSalt'\n    }, {\n      name: 'PFX.macData.iterations',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      optional: true,\n      capture: 'macIterations'\n    }]\n  }]\n};\n\nvar safeBagValidator = {\n  name: 'SafeBag',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SafeBag.bagId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'bagId'\n  }, {\n    name: 'SafeBag.bagValue',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    captureAsn1: 'bagValue'\n  }, {\n    name: 'SafeBag.bagAttributes',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    optional: true,\n    capture: 'bagAttributes'\n  }]\n};\n\nvar attributeValidator = {\n  name: 'Attribute',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'Attribute.attrId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'oid'\n  }, {\n    name: 'Attribute.attrValues',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    capture: 'values'\n  }]\n};\n\nvar certBagValidator = {\n  name: 'CertBag',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'CertBag.certId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'certId'\n  }, {\n    name: 'CertBag.certValue',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    /* So far we only support X.509 certificates (which are wrapped in\n       an OCTET STRING, hence hard code that here). */\n    value: [{\n      name: 'CertBag.certValue[0]',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.OCTETSTRING,\n      constructed: false,\n      capture: 'cert'\n    }]\n  }]\n};\n\n/**\n * Search SafeContents structure for bags with matching attributes.\n *\n * The search can optionally be narrowed by a certain bag type.\n *\n * @param safeContents the SafeContents structure to search in.\n * @param attrName the name of the attribute to compare against.\n * @param attrValue the attribute value to search for.\n * @param [bagType] bag type to narrow search by.\n *\n * @return an array of matching bags.\n */\nfunction _getBagsByAttribute(safeContents, attrName, attrValue, bagType) {\n  var result = [];\n\n  for(var i = 0; i < safeContents.length; i++) {\n    for(var j = 0; j < safeContents[i].safeBags.length; j++) {\n      var bag = safeContents[i].safeBags[j];\n      if(bagType !== undefined && bag.type !== bagType) {\n        continue;\n      }\n      // only filter by bag type, no attribute specified\n      if(attrName === null) {\n        result.push(bag);\n        continue;\n      }\n      if(bag.attributes[attrName] !== undefined &&\n        bag.attributes[attrName].indexOf(attrValue) >= 0) {\n        result.push(bag);\n      }\n    }\n  }\n\n  return result;\n}\n\n/**\n * Converts a PKCS#12 PFX in ASN.1 notation into a PFX object.\n *\n * @param obj The PKCS#12 PFX in ASN.1 notation.\n * @param strict true to use strict DER decoding, false not to (default: true).\n * @param {String} password Password to decrypt with (optional).\n *\n * @return PKCS#12 PFX object.\n */\np12.pkcs12FromAsn1 = function(obj, strict, password) {\n  // handle args\n  if(typeof strict === 'string') {\n    password = strict;\n    strict = true;\n  } else if(strict === undefined) {\n    strict = true;\n  }\n\n  // validate PFX and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, pfxValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#12 PFX. ' +\n      'ASN.1 object is not an PKCS#12 PFX.');\n    error.errors = error;\n    throw error;\n  }\n\n  var pfx = {\n    version: capture.version.charCodeAt(0),\n    safeContents: [],\n\n    /**\n     * Gets bags with matching attributes.\n     *\n     * @param filter the attributes to filter by:\n     *          [localKeyId] the localKeyId to search for.\n     *          [localKeyIdHex] the localKeyId in hex to search for.\n     *          [friendlyName] the friendly name to search for.\n     *          [bagType] bag type to narrow each attribute search by.\n     *\n     * @return a map of attribute type to an array of matching bags or, if no\n     *           attribute was given but a bag type, the map key will be the\n     *           bag type.\n     */\n    getBags: function(filter) {\n      var rval = {};\n\n      var localKeyId;\n      if('localKeyId' in filter) {\n        localKeyId = filter.localKeyId;\n      } else if('localKeyIdHex' in filter) {\n        localKeyId = forge.util.hexToBytes(filter.localKeyIdHex);\n      }\n\n      // filter on bagType only\n      if(localKeyId === undefined && !('friendlyName' in filter) &&\n        'bagType' in filter) {\n        rval[filter.bagType] = _getBagsByAttribute(\n          pfx.safeContents, null, null, filter.bagType);\n      }\n\n      if(localKeyId !== undefined) {\n        rval.localKeyId = _getBagsByAttribute(\n          pfx.safeContents, 'localKeyId',\n          localKeyId, filter.bagType);\n      }\n      if('friendlyName' in filter) {\n        rval.friendlyName = _getBagsByAttribute(\n          pfx.safeContents, 'friendlyName',\n          filter.friendlyName, filter.bagType);\n      }\n\n      return rval;\n    },\n\n    /**\n     * DEPRECATED: use getBags() instead.\n     *\n     * Get bags with matching friendlyName attribute.\n     *\n     * @param friendlyName the friendly name to search for.\n     * @param [bagType] bag type to narrow search by.\n     *\n     * @return an array of bags with matching friendlyName attribute.\n     */\n    getBagsByFriendlyName: function(friendlyName, bagType) {\n      return _getBagsByAttribute(\n        pfx.safeContents, 'friendlyName', friendlyName, bagType);\n    },\n\n    /**\n     * DEPRECATED: use getBags() instead.\n     *\n     * Get bags with matching localKeyId attribute.\n     *\n     * @param localKeyId the localKeyId to search for.\n     * @param [bagType] bag type to narrow search by.\n     *\n     * @return an array of bags with matching localKeyId attribute.\n     */\n    getBagsByLocalKeyId: function(localKeyId, bagType) {\n      return _getBagsByAttribute(\n        pfx.safeContents, 'localKeyId', localKeyId, bagType);\n    }\n  };\n\n  if(capture.version.charCodeAt(0) !== 3) {\n    var error = new Error('PKCS#12 PFX of version other than 3 not supported.');\n    error.version = capture.version.charCodeAt(0);\n    throw error;\n  }\n\n  if(asn1.derToOid(capture.contentType) !== pki.oids.data) {\n    var error = new Error('Only PKCS#12 PFX in password integrity mode supported.');\n    error.oid = asn1.derToOid(capture.contentType);\n    throw error;\n  }\n\n  var data = capture.content.value[0];\n  if(data.tagClass !== asn1.Class.UNIVERSAL ||\n     data.type !== asn1.Type.OCTETSTRING) {\n    throw new Error('PKCS#12 authSafe content data is not an OCTET STRING.');\n  }\n  data = _decodePkcs7Data(data);\n\n  // check for MAC\n  if(capture.mac) {\n    var md = null;\n    var macKeyBytes = 0;\n    var macAlgorithm = asn1.derToOid(capture.macAlgorithm);\n    switch(macAlgorithm) {\n    case pki.oids.sha1:\n      md = forge.md.sha1.create();\n      macKeyBytes = 20;\n      break;\n    case pki.oids.sha256:\n      md = forge.md.sha256.create();\n      macKeyBytes = 32;\n      break;\n    case pki.oids.sha384:\n      md = forge.md.sha384.create();\n      macKeyBytes = 48;\n      break;\n    case pki.oids.sha512:\n      md = forge.md.sha512.create();\n      macKeyBytes = 64;\n      break;\n    case pki.oids.md5:\n      md = forge.md.md5.create();\n      macKeyBytes = 16;\n      break;\n    }\n    if(md === null) {\n      throw new Error('PKCS#12 uses unsupported MAC algorithm: ' + macAlgorithm);\n    }\n\n    // verify MAC (iterations default to 1)\n    var macSalt = new forge.util.ByteBuffer(capture.macSalt);\n    var macIterations = (('macIterations' in capture) ?\n      parseInt(forge.util.bytesToHex(capture.macIterations), 16) : 1);\n    var macKey = p12.generateKey(\n      password, macSalt, 3, macIterations, macKeyBytes, md);\n    var mac = forge.hmac.create();\n    mac.start(md, macKey);\n    mac.update(data.value);\n    var macValue = mac.getMac();\n    if(macValue.getBytes() !== capture.macDigest) {\n      throw new Error('PKCS#12 MAC could not be verified. Invalid password?');\n    }\n  }\n\n  _decodeAuthenticatedSafe(pfx, data.value, strict, password);\n  return pfx;\n};\n\n/**\n * Decodes PKCS#7 Data. PKCS#7 (RFC 2315) defines \"Data\" as an OCTET STRING,\n * but it is sometimes an OCTET STRING that is composed/constructed of chunks,\n * each its own OCTET STRING. This is BER-encoding vs. DER-encoding. This\n * function transforms this corner-case into the usual simple,\n * non-composed/constructed OCTET STRING.\n *\n * This function may be moved to ASN.1 at some point to better deal with\n * more BER-encoding issues, should they arise.\n *\n * @param data the ASN.1 Data object to transform.\n */\nfunction _decodePkcs7Data(data) {\n  // handle special case of \"chunked\" data content: an octet string composed\n  // of other octet strings\n  if(data.composed || data.constructed) {\n    var value = forge.util.createBuffer();\n    for(var i = 0; i < data.value.length; ++i) {\n      value.putBytes(data.value[i].value);\n    }\n    data.composed = data.constructed = false;\n    data.value = value.getBytes();\n  }\n  return data;\n}\n\n/**\n * Decode PKCS#12 AuthenticatedSafe (BER encoded) into PFX object.\n *\n * The AuthenticatedSafe is a BER-encoded SEQUENCE OF ContentInfo.\n *\n * @param pfx The PKCS#12 PFX object to fill.\n * @param {String} authSafe BER-encoded AuthenticatedSafe.\n * @param strict true to use strict DER decoding, false not to.\n * @param {String} password Password to decrypt with (optional).\n */\nfunction _decodeAuthenticatedSafe(pfx, authSafe, strict, password) {\n  authSafe = asn1.fromDer(authSafe, strict);  /* actually it's BER encoded */\n\n  if(authSafe.tagClass !== asn1.Class.UNIVERSAL ||\n     authSafe.type !== asn1.Type.SEQUENCE ||\n     authSafe.constructed !== true) {\n    throw new Error('PKCS#12 AuthenticatedSafe expected to be a ' +\n      'SEQUENCE OF ContentInfo');\n  }\n\n  for(var i = 0; i < authSafe.value.length; i++) {\n    var contentInfo = authSafe.value[i];\n\n    // validate contentInfo and capture data\n    var capture = {};\n    var errors = [];\n    if(!asn1.validate(contentInfo, contentInfoValidator, capture, errors)) {\n      var error = new Error('Cannot read ContentInfo.');\n      error.errors = errors;\n      throw error;\n    }\n\n    var obj = {\n      encrypted: false\n    };\n    var safeContents = null;\n    var data = capture.content.value[0];\n    switch(asn1.derToOid(capture.contentType)) {\n    case pki.oids.data:\n      if(data.tagClass !== asn1.Class.UNIVERSAL ||\n         data.type !== asn1.Type.OCTETSTRING) {\n        throw new Error('PKCS#12 SafeContents Data is not an OCTET STRING.');\n      }\n      safeContents = _decodePkcs7Data(data).value;\n      break;\n    case pki.oids.encryptedData:\n      safeContents = _decryptSafeContents(data, password);\n      obj.encrypted = true;\n      break;\n    default:\n      var error = new Error('Unsupported PKCS#12 contentType.');\n      error.contentType = asn1.derToOid(capture.contentType);\n      throw error;\n    }\n\n    obj.safeBags = _decodeSafeContents(safeContents, strict, password);\n    pfx.safeContents.push(obj);\n  }\n}\n\n/**\n * Decrypt PKCS#7 EncryptedData structure.\n *\n * @param data ASN.1 encoded EncryptedContentInfo object.\n * @param password The user-provided password.\n *\n * @return The decrypted SafeContents (ASN.1 object).\n */\nfunction _decryptSafeContents(data, password) {\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(\n    data, forge.pkcs7.asn1.encryptedDataValidator, capture, errors)) {\n    var error = new Error('Cannot read EncryptedContentInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var oid = asn1.derToOid(capture.contentType);\n  if(oid !== pki.oids.data) {\n    var error = new Error(\n      'PKCS#12 EncryptedContentInfo ContentType is not Data.');\n    error.oid = oid;\n    throw error;\n  }\n\n  // get cipher\n  oid = asn1.derToOid(capture.encAlgorithm);\n  var cipher = pki.pbe.getCipher(oid, capture.encParameter, password);\n\n  // get encrypted data\n  var encryptedContentAsn1 = _decodePkcs7Data(capture.encryptedContentAsn1);\n  var encrypted = forge.util.createBuffer(encryptedContentAsn1.value);\n\n  cipher.update(encrypted);\n  if(!cipher.finish()) {\n    throw new Error('Failed to decrypt PKCS#12 SafeContents.');\n  }\n\n  return cipher.output.getBytes();\n}\n\n/**\n * Decode PKCS#12 SafeContents (BER-encoded) into array of Bag objects.\n *\n * The safeContents is a BER-encoded SEQUENCE OF SafeBag.\n *\n * @param {String} safeContents BER-encoded safeContents.\n * @param strict true to use strict DER decoding, false not to.\n * @param {String} password Password to decrypt with (optional).\n *\n * @return {Array} Array of Bag objects.\n */\nfunction _decodeSafeContents(safeContents, strict, password) {\n  // if strict and no safe contents, return empty safes\n  if(!strict && safeContents.length === 0) {\n    return [];\n  }\n\n  // actually it's BER-encoded\n  safeContents = asn1.fromDer(safeContents, strict);\n\n  if(safeContents.tagClass !== asn1.Class.UNIVERSAL ||\n    safeContents.type !== asn1.Type.SEQUENCE ||\n    safeContents.constructed !== true) {\n    throw new Error(\n      'PKCS#12 SafeContents expected to be a SEQUENCE OF SafeBag.');\n  }\n\n  var res = [];\n  for(var i = 0; i < safeContents.value.length; i++) {\n    var safeBag = safeContents.value[i];\n\n    // validate SafeBag and capture data\n    var capture = {};\n    var errors = [];\n    if(!asn1.validate(safeBag, safeBagValidator, capture, errors)) {\n      var error = new Error('Cannot read SafeBag.');\n      error.errors = errors;\n      throw error;\n    }\n\n    /* Create bag object and push to result array. */\n    var bag = {\n      type: asn1.derToOid(capture.bagId),\n      attributes: _decodeBagAttributes(capture.bagAttributes)\n    };\n    res.push(bag);\n\n    var validator, decoder;\n    var bagAsn1 = capture.bagValue.value[0];\n    switch(bag.type) {\n      case pki.oids.pkcs8ShroudedKeyBag:\n        /* bagAsn1 has a EncryptedPrivateKeyInfo, which we need to decrypt.\n           Afterwards we can handle it like a keyBag,\n           which is a PrivateKeyInfo. */\n        bagAsn1 = pki.decryptPrivateKeyInfo(bagAsn1, password);\n        if(bagAsn1 === null) {\n          throw new Error(\n            'Unable to decrypt PKCS#8 ShroudedKeyBag, wrong password?');\n        }\n\n        /* fall through */\n      case pki.oids.keyBag:\n        /* A PKCS#12 keyBag is a simple PrivateKeyInfo as understood by our\n           PKI module, hence we don't have to do validation/capturing here,\n           just pass what we already got. */\n        try {\n          bag.key = pki.privateKeyFromAsn1(bagAsn1);\n        } catch(e) {\n          // ignore unknown key type, pass asn1 value\n          bag.key = null;\n          bag.asn1 = bagAsn1;\n        }\n        continue;  /* Nothing more to do. */\n\n      case pki.oids.certBag:\n        /* A PKCS#12 certBag can wrap both X.509 and sdsi certificates.\n           Therefore put the SafeBag content through another validator to\n           capture the fields.  Afterwards check & store the results. */\n        validator = certBagValidator;\n        decoder = function() {\n          if(asn1.derToOid(capture.certId) !== pki.oids.x509Certificate) {\n            var error = new Error(\n              'Unsupported certificate type, only X.509 supported.');\n            error.oid = asn1.derToOid(capture.certId);\n            throw error;\n          }\n\n          // true=produce cert hash\n          var certAsn1 = asn1.fromDer(capture.cert, strict);\n          try {\n            bag.cert = pki.certificateFromAsn1(certAsn1, true);\n          } catch(e) {\n            // ignore unknown cert type, pass asn1 value\n            bag.cert = null;\n            bag.asn1 = certAsn1;\n          }\n        };\n        break;\n\n      default:\n        var error = new Error('Unsupported PKCS#12 SafeBag type.');\n        error.oid = bag.type;\n        throw error;\n    }\n\n    /* Validate SafeBag value (i.e. CertBag, etc.) and capture data if needed. */\n    if(validator !== undefined &&\n       !asn1.validate(bagAsn1, validator, capture, errors)) {\n      var error = new Error('Cannot read PKCS#12 ' + validator.name);\n      error.errors = errors;\n      throw error;\n    }\n\n    /* Call decoder function from above to store the results. */\n    decoder();\n  }\n\n  return res;\n}\n\n/**\n * Decode PKCS#12 SET OF PKCS12Attribute into JavaScript object.\n *\n * @param attributes SET OF PKCS12Attribute (ASN.1 object).\n *\n * @return the decoded attributes.\n */\nfunction _decodeBagAttributes(attributes) {\n  var decodedAttrs = {};\n\n  if(attributes !== undefined) {\n    for(var i = 0; i < attributes.length; ++i) {\n      var capture = {};\n      var errors = [];\n      if(!asn1.validate(attributes[i], attributeValidator, capture, errors)) {\n        var error = new Error('Cannot read PKCS#12 BagAttribute.');\n        error.errors = errors;\n        throw error;\n      }\n\n      var oid = asn1.derToOid(capture.oid);\n      if(pki.oids[oid] === undefined) {\n        // unsupported attribute type, ignore.\n        continue;\n      }\n\n      decodedAttrs[pki.oids[oid]] = [];\n      for(var j = 0; j < capture.values.length; ++j) {\n        decodedAttrs[pki.oids[oid]].push(capture.values[j].value);\n      }\n    }\n  }\n\n  return decodedAttrs;\n}\n\n/**\n * Wraps a private key and certificate in a PKCS#12 PFX wrapper. If a\n * password is provided then the private key will be encrypted.\n *\n * An entire certificate chain may also be included. To do this, pass\n * an array for the \"cert\" parameter where the first certificate is\n * the one that is paired with the private key and each subsequent one\n * verifies the previous one. The certificates may be in PEM format or\n * have been already parsed by Forge.\n *\n * @todo implement password-based-encryption for the whole package\n *\n * @param key the private key.\n * @param cert the certificate (may be an array of certificates in order\n *          to specify a certificate chain).\n * @param password the password to use, null for none.\n * @param options:\n *          algorithm the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des'), defaults to 'aes128'.\n *          count the iteration count to use.\n *          saltSize the salt size to use.\n *          useMac true to include a MAC, false not to, defaults to true.\n *          localKeyId the local key ID to use, in hex.\n *          friendlyName the friendly name to use.\n *          generateLocalKeyId true to generate a random local key ID,\n *            false not to, defaults to true.\n *\n * @return the PKCS#12 PFX ASN.1 object.\n */\np12.toPkcs12Asn1 = function(key, cert, password, options) {\n  // set default options\n  options = options || {};\n  options.saltSize = options.saltSize || 8;\n  options.count = options.count || 2048;\n  options.algorithm = options.algorithm || options.encAlgorithm || 'aes128';\n  if(!('useMac' in options)) {\n    options.useMac = true;\n  }\n  if(!('localKeyId' in options)) {\n    options.localKeyId = null;\n  }\n  if(!('generateLocalKeyId' in options)) {\n    options.generateLocalKeyId = true;\n  }\n\n  var localKeyId = options.localKeyId;\n  var bagAttrs;\n  if(localKeyId !== null) {\n    localKeyId = forge.util.hexToBytes(localKeyId);\n  } else if(options.generateLocalKeyId) {\n    // use SHA-1 of paired cert, if available\n    if(cert) {\n      var pairedCert = forge.util.isArray(cert) ? cert[0] : cert;\n      if(typeof pairedCert === 'string') {\n        pairedCert = pki.certificateFromPem(pairedCert);\n      }\n      var sha1 = forge.md.sha1.create();\n      sha1.update(asn1.toDer(pki.certificateToAsn1(pairedCert)).getBytes());\n      localKeyId = sha1.digest().getBytes();\n    } else {\n      // FIXME: consider using SHA-1 of public key (which can be generated\n      // from private key components), see: cert.generateSubjectKeyIdentifier\n      // generate random bytes\n      localKeyId = forge.random.getBytes(20);\n    }\n  }\n\n  var attrs = [];\n  if(localKeyId !== null) {\n    attrs.push(\n      // localKeyID\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // attrId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.localKeyId).getBytes()),\n        // attrValues\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            localKeyId)\n        ])\n      ]));\n  }\n  if('friendlyName' in options) {\n    attrs.push(\n      // friendlyName\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // attrId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.friendlyName).getBytes()),\n        // attrValues\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BMPSTRING, false,\n            options.friendlyName)\n        ])\n      ]));\n  }\n\n  if(attrs.length > 0) {\n    bagAttrs = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, attrs);\n  }\n\n  // collect contents for AuthenticatedSafe\n  var contents = [];\n\n  // create safe bag(s) for certificate chain\n  var chain = [];\n  if(cert !== null) {\n    if(forge.util.isArray(cert)) {\n      chain = cert;\n    } else {\n      chain = [cert];\n    }\n  }\n\n  var certSafeBags = [];\n  for(var i = 0; i < chain.length; ++i) {\n    // convert cert from PEM as necessary\n    cert = chain[i];\n    if(typeof cert === 'string') {\n      cert = pki.certificateFromPem(cert);\n    }\n\n    // SafeBag\n    var certBagAttrs = (i === 0) ? bagAttrs : undefined;\n    var certAsn1 = pki.certificateToAsn1(cert);\n    var certSafeBag =\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.certBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // CertBag\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // certId\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(pki.oids.x509Certificate).getBytes()),\n            // certValue (x509Certificate)\n            asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n              asn1.create(\n                asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n                asn1.toDer(certAsn1).getBytes())\n            ])])]),\n        // bagAttributes (OPTIONAL)\n        certBagAttrs\n      ]);\n    certSafeBags.push(certSafeBag);\n  }\n\n  if(certSafeBags.length > 0) {\n    // SafeContents\n    var certSafeContents = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, certSafeBags);\n\n    // ContentInfo\n    var certCI =\n      // PKCS#7 ContentInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // contentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          // OID for the content type is 'data'\n          asn1.oidToDer(pki.oids.data).getBytes()),\n        // content\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            asn1.toDer(certSafeContents).getBytes())\n        ])\n      ]);\n    contents.push(certCI);\n  }\n\n  // create safe contents for private key\n  var keyBag = null;\n  if(key !== null) {\n    // SafeBag\n    var pkAsn1 = pki.wrapRsaPrivateKey(pki.privateKeyToAsn1(key));\n    if(password === null) {\n      // no encryption\n      keyBag = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.keyBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // PrivateKeyInfo\n          pkAsn1\n        ]),\n        // bagAttributes (OPTIONAL)\n        bagAttrs\n      ]);\n    } else {\n      // encrypted PrivateKeyInfo\n      keyBag = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.pkcs8ShroudedKeyBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // EncryptedPrivateKeyInfo\n          pki.encryptPrivateKeyInfo(pkAsn1, password, options)\n        ]),\n        // bagAttributes (OPTIONAL)\n        bagAttrs\n      ]);\n    }\n\n    // SafeContents\n    var keySafeContents =\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [keyBag]);\n\n    // ContentInfo\n    var keyCI =\n      // PKCS#7 ContentInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // contentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          // OID for the content type is 'data'\n          asn1.oidToDer(pki.oids.data).getBytes()),\n        // content\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            asn1.toDer(keySafeContents).getBytes())\n        ])\n      ]);\n    contents.push(keyCI);\n  }\n\n  // create AuthenticatedSafe by stringing together the contents\n  var safe = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, contents);\n\n  var macData;\n  if(options.useMac) {\n    // MacData\n    var sha1 = forge.md.sha1.create();\n    var macSalt = new forge.util.ByteBuffer(\n      forge.random.getBytes(options.saltSize));\n    var count = options.count;\n    // 160-bit key\n    var key = p12.generateKey(password, macSalt, 3, count, 20);\n    var mac = forge.hmac.create();\n    mac.start(sha1, key);\n    mac.update(asn1.toDer(safe).getBytes());\n    var macValue = mac.getMac();\n    macData = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // mac DigestInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // digestAlgorithm\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // algorithm = SHA-1\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(pki.oids.sha1).getBytes()),\n          // parameters = Null\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n        ]),\n        // digest\n        asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING,\n          false, macValue.getBytes())\n      ]),\n      // macSalt OCTET STRING\n      asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, macSalt.getBytes()),\n      // iterations INTEGER (XXX: Only support count < 65536)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(count).getBytes()\n      )\n    ]);\n  }\n\n  // PFX\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (3)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(3).getBytes()),\n    // PKCS#7 ContentInfo\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // contentType\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        // OID for the content type is 'data'\n        asn1.oidToDer(pki.oids.data).getBytes()),\n      // content\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n        asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n          asn1.toDer(safe).getBytes())\n      ])\n    ]),\n    macData\n  ]);\n};\n\n/**\n * Derives a PKCS#12 key.\n *\n * @param password the password to derive the key material from, null or\n *          undefined for none.\n * @param salt the salt, as a ByteBuffer, to use.\n * @param id the PKCS#12 ID byte (1 = key material, 2 = IV, 3 = MAC).\n * @param iter the iteration count.\n * @param n the number of bytes to derive from the password.\n * @param md the message digest to use, defaults to SHA-1.\n *\n * @return a ByteBuffer with the bytes derived from the password.\n */\np12.generateKey = forge.pbe.generatePkcs12Key;\n","/**\n * Javascript implementation of PKCS#7 v1.5.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2012-2015 Digital Bazaar, Inc.\n *\n * Currently this implementation only supports ContentType of EnvelopedData,\n * EncryptedData, or SignedData at the root level. The top level elements may\n * contain only a ContentInfo of ContentType Data, i.e. plain data. Further\n * nesting is not (yet) supported.\n *\n * The Forge validators for PKCS #7's ASN.1 structures are available from\n * a separate file pkcs7asn1.js, since those are referenced from other\n * PKCS standards like PKCS #12.\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./oids');\nrequire('./pem');\nrequire('./pkcs7asn1');\nrequire('./random');\nrequire('./util');\nrequire('./x509');\n\n// shortcut for ASN.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for PKCS#7 API\nvar p7 = module.exports = forge.pkcs7 = forge.pkcs7 || {};\n\n/**\n * Converts a PKCS#7 message from PEM format.\n *\n * @param pem the PEM-formatted PKCS#7 message.\n *\n * @return the PKCS#7 message.\n */\np7.messageFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PKCS7') {\n    var error = new Error('Could not convert PKCS#7 message from PEM; PEM ' +\n      'header type is not \"PKCS#7\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert PKCS#7 message from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return p7.messageFromAsn1(obj);\n};\n\n/**\n * Converts a PKCS#7 message to PEM format.\n *\n * @param msg The PKCS#7 message object\n * @param maxline The maximum characters per line, defaults to 64.\n *\n * @return The PEM-formatted PKCS#7 message.\n */\np7.messageToPem = function(msg, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var pemObj = {\n    type: 'PKCS7',\n    body: asn1.toDer(msg.toAsn1()).getBytes()\n  };\n  return forge.pem.encode(pemObj, {maxline: maxline});\n};\n\n/**\n * Converts a PKCS#7 message from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a ContentInfo.\n *\n * @return the PKCS#7 message.\n */\np7.messageFromAsn1 = function(obj) {\n  // validate root level ContentInfo and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.contentInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 message. ' +\n      'ASN.1 object is not an PKCS#7 ContentInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var contentType = asn1.derToOid(capture.contentType);\n  var msg;\n\n  switch(contentType) {\n    case forge.pki.oids.envelopedData:\n      msg = p7.createEnvelopedData();\n      break;\n\n    case forge.pki.oids.encryptedData:\n      msg = p7.createEncryptedData();\n      break;\n\n    case forge.pki.oids.signedData:\n      msg = p7.createSignedData();\n      break;\n\n    default:\n      throw new Error('Cannot read PKCS#7 message. ContentType with OID ' +\n        contentType + ' is not (yet) supported.');\n  }\n\n  msg.fromAsn1(capture.content.value[0]);\n  return msg;\n};\n\np7.createSignedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.signedData,\n    version: 1,\n    certificates: [],\n    crls: [],\n    // TODO: add json-formatted signer stuff here?\n    signers: [],\n    // populated during sign()\n    digestAlgorithmIdentifiers: [],\n    contentInfo: null,\n    signerInfos: [],\n\n    fromAsn1: function(obj) {\n      // validate SignedData content block and capture data.\n      _fromAsn1(msg, obj, p7.asn1.signedDataValidator);\n      msg.certificates = [];\n      msg.crls = [];\n      msg.digestAlgorithmIdentifiers = [];\n      msg.contentInfo = null;\n      msg.signerInfos = [];\n\n      if(msg.rawCapture.certificates) {\n        var certs = msg.rawCapture.certificates.value;\n        for(var i = 0; i < certs.length; ++i) {\n          msg.certificates.push(forge.pki.certificateFromAsn1(certs[i]));\n        }\n      }\n\n      // TODO: parse crls\n    },\n\n    toAsn1: function() {\n      // degenerate case with no content\n      if(!msg.contentInfo) {\n        msg.sign();\n      }\n\n      var certs = [];\n      for(var i = 0; i < msg.certificates.length; ++i) {\n        certs.push(forge.pki.certificateToAsn1(msg.certificates[i]));\n      }\n\n      var crls = [];\n      // TODO: implement CRLs\n\n      // [0] SignedData\n      var signedData = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // Version\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n            asn1.integerToDer(msg.version).getBytes()),\n          // DigestAlgorithmIdentifiers\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n            msg.digestAlgorithmIdentifiers),\n          // ContentInfo\n          msg.contentInfo\n        ])\n      ]);\n      if(certs.length > 0) {\n        // [0] IMPLICIT ExtendedCertificatesAndCertificates OPTIONAL\n        signedData.value[0].value.push(\n          asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, certs));\n      }\n      if(crls.length > 0) {\n        // [1] IMPLICIT CertificateRevocationLists OPTIONAL\n        signedData.value[0].value.push(\n          asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, crls));\n      }\n      // SignerInfos\n      signedData.value[0].value.push(\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n          msg.signerInfos));\n\n      // ContentInfo\n      return asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // ContentType\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(msg.type).getBytes()),\n          // [0] SignedData\n          signedData\n        ]);\n    },\n\n    /**\n     * Add (another) entity to list of signers.\n     *\n     * Note: If authenticatedAttributes are provided, then, per RFC 2315,\n     * they must include at least two attributes: content type and\n     * message digest. The message digest attribute value will be\n     * auto-calculated during signing and will be ignored if provided.\n     *\n     * Here's an example of providing these two attributes:\n     *\n     * forge.pkcs7.createSignedData();\n     * p7.addSigner({\n     *   issuer: cert.issuer.attributes,\n     *   serialNumber: cert.serialNumber,\n     *   key: privateKey,\n     *   digestAlgorithm: forge.pki.oids.sha1,\n     *   authenticatedAttributes: [{\n     *     type: forge.pki.oids.contentType,\n     *     value: forge.pki.oids.data\n     *   }, {\n     *     type: forge.pki.oids.messageDigest\n     *   }]\n     * });\n     *\n     * TODO: Support [subjectKeyIdentifier] as signer's ID.\n     *\n     * @param signer the signer information:\n     *          key the signer's private key.\n     *          [certificate] a certificate containing the public key\n     *            associated with the signer's private key; use this option as\n     *            an alternative to specifying signer.issuer and\n     *            signer.serialNumber.\n     *          [issuer] the issuer attributes (eg: cert.issuer.attributes).\n     *          [serialNumber] the signer's certificate's serial number in\n     *           hexadecimal (eg: cert.serialNumber).\n     *          [digestAlgorithm] the message digest OID, as a string, to use\n     *            (eg: forge.pki.oids.sha1).\n     *          [authenticatedAttributes] an optional array of attributes\n     *            to also sign along with the content.\n     */\n    addSigner: function(signer) {\n      var issuer = signer.issuer;\n      var serialNumber = signer.serialNumber;\n      if(signer.certificate) {\n        var cert = signer.certificate;\n        if(typeof cert === 'string') {\n          cert = forge.pki.certificateFromPem(cert);\n        }\n        issuer = cert.issuer.attributes;\n        serialNumber = cert.serialNumber;\n      }\n      var key = signer.key;\n      if(!key) {\n        throw new Error(\n          'Could not add PKCS#7 signer; no private key specified.');\n      }\n      if(typeof key === 'string') {\n        key = forge.pki.privateKeyFromPem(key);\n      }\n\n      // ensure OID known for digest algorithm\n      var digestAlgorithm = signer.digestAlgorithm || forge.pki.oids.sha1;\n      switch(digestAlgorithm) {\n      case forge.pki.oids.sha1:\n      case forge.pki.oids.sha256:\n      case forge.pki.oids.sha384:\n      case forge.pki.oids.sha512:\n      case forge.pki.oids.md5:\n        break;\n      default:\n        throw new Error(\n          'Could not add PKCS#7 signer; unknown message digest algorithm: ' +\n          digestAlgorithm);\n      }\n\n      // if authenticatedAttributes is present, then the attributes\n      // must contain at least PKCS #9 content-type and message-digest\n      var authenticatedAttributes = signer.authenticatedAttributes || [];\n      if(authenticatedAttributes.length > 0) {\n        var contentType = false;\n        var messageDigest = false;\n        for(var i = 0; i < authenticatedAttributes.length; ++i) {\n          var attr = authenticatedAttributes[i];\n          if(!contentType && attr.type === forge.pki.oids.contentType) {\n            contentType = true;\n            if(messageDigest) {\n              break;\n            }\n            continue;\n          }\n          if(!messageDigest && attr.type === forge.pki.oids.messageDigest) {\n            messageDigest = true;\n            if(contentType) {\n              break;\n            }\n            continue;\n          }\n        }\n\n        if(!contentType || !messageDigest) {\n          throw new Error('Invalid signer.authenticatedAttributes. If ' +\n            'signer.authenticatedAttributes is specified, then it must ' +\n            'contain at least two attributes, PKCS #9 content-type and ' +\n            'PKCS #9 message-digest.');\n        }\n      }\n\n      msg.signers.push({\n        key: key,\n        version: 1,\n        issuer: issuer,\n        serialNumber: serialNumber,\n        digestAlgorithm: digestAlgorithm,\n        signatureAlgorithm: forge.pki.oids.rsaEncryption,\n        signature: null,\n        authenticatedAttributes: authenticatedAttributes,\n        unauthenticatedAttributes: []\n      });\n    },\n\n    /**\n     * Signs the content.\n     * @param options Options to apply when signing:\n     *    [detached] boolean. If signing should be done in detached mode. Defaults to false.\n     */\n    sign: function(options) {\n      options = options || {};\n      // auto-generate content info\n      if(typeof msg.content !== 'object' || msg.contentInfo === null) {\n        // use Data ContentInfo\n        msg.contentInfo = asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // ContentType\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(forge.pki.oids.data).getBytes())\n          ]);\n\n        // add actual content, if present\n        if('content' in msg) {\n          var content;\n          if(msg.content instanceof forge.util.ByteBuffer) {\n            content = msg.content.bytes();\n          } else if(typeof msg.content === 'string') {\n            content = forge.util.encodeUtf8(msg.content);\n          }\n\n          if (options.detached) {\n            msg.detachedContent = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, content);\n          } else {\n            msg.contentInfo.value.push(\n              // [0] EXPLICIT content\n              asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n                asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n                  content)\n              ]));\n          }\n        }\n      }\n\n      // no signers, return early (degenerate case for certificate container)\n      if(msg.signers.length === 0) {\n        return;\n      }\n\n      // generate digest algorithm identifiers\n      var mds = addDigestAlgorithmIds();\n\n      // generate signerInfos\n      addSignerInfos(mds);\n    },\n\n    verify: function() {\n      throw new Error('PKCS#7 signature verification not yet implemented.');\n    },\n\n    /**\n     * Add a certificate.\n     *\n     * @param cert the certificate to add.\n     */\n    addCertificate: function(cert) {\n      // convert from PEM\n      if(typeof cert === 'string') {\n        cert = forge.pki.certificateFromPem(cert);\n      }\n      msg.certificates.push(cert);\n    },\n\n    /**\n     * Add a certificate revokation list.\n     *\n     * @param crl the certificate revokation list to add.\n     */\n    addCertificateRevokationList: function(crl) {\n      throw new Error('PKCS#7 CRL support not yet implemented.');\n    }\n  };\n  return msg;\n\n  function addDigestAlgorithmIds() {\n    var mds = {};\n\n    for(var i = 0; i < msg.signers.length; ++i) {\n      var signer = msg.signers[i];\n      var oid = signer.digestAlgorithm;\n      if(!(oid in mds)) {\n        // content digest\n        mds[oid] = forge.md[forge.pki.oids[oid]].create();\n      }\n      if(signer.authenticatedAttributes.length === 0) {\n        // no custom attributes to digest; use content message digest\n        signer.md = mds[oid];\n      } else {\n        // custom attributes to be digested; use own message digest\n        // TODO: optimize to just copy message digest state if that\n        // feature is ever supported with message digests\n        signer.md = forge.md[forge.pki.oids[oid]].create();\n      }\n    }\n\n    // add unique digest algorithm identifiers\n    msg.digestAlgorithmIdentifiers = [];\n    for(var oid in mds) {\n      msg.digestAlgorithmIdentifiers.push(\n        // AlgorithmIdentifier\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // algorithm\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(oid).getBytes()),\n          // parameters (null)\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n        ]));\n    }\n\n    return mds;\n  }\n\n  function addSignerInfos(mds) {\n    var content;\n\n    if (msg.detachedContent) {\n      // Signature has been made in detached mode.\n      content = msg.detachedContent;\n    } else {\n      // Note: ContentInfo is a SEQUENCE with 2 values, second value is\n      // the content field and is optional for a ContentInfo but required here\n      // since signers are present\n      // get ContentInfo content\n      content = msg.contentInfo.value[1];\n      // skip [0] EXPLICIT content wrapper\n      content = content.value[0];\n    }\n\n    if(!content) {\n      throw new Error(\n        'Could not sign PKCS#7 message; there is no content to sign.');\n    }\n\n    // get ContentInfo content type\n    var contentType = asn1.derToOid(msg.contentInfo.value[0].value);\n\n    // serialize content\n    var bytes = asn1.toDer(content);\n\n    // skip identifier and length per RFC 2315 9.3\n    // skip identifier (1 byte)\n    bytes.getByte();\n    // read and discard length bytes\n    asn1.getBerValueLength(bytes);\n    bytes = bytes.getBytes();\n\n    // digest content DER value bytes\n    for(var oid in mds) {\n      mds[oid].start().update(bytes);\n    }\n\n    // sign content\n    var signingTime = new Date();\n    for(var i = 0; i < msg.signers.length; ++i) {\n      var signer = msg.signers[i];\n\n      if(signer.authenticatedAttributes.length === 0) {\n        // if ContentInfo content type is not \"Data\", then\n        // authenticatedAttributes must be present per RFC 2315\n        if(contentType !== forge.pki.oids.data) {\n          throw new Error(\n            'Invalid signer; authenticatedAttributes must be present ' +\n            'when the ContentInfo content type is not PKCS#7 Data.');\n        }\n      } else {\n        // process authenticated attributes\n        // [0] IMPLICIT\n        signer.authenticatedAttributesAsn1 = asn1.create(\n          asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n\n        // per RFC 2315, attributes are to be digested using a SET container\n        // not the above [0] IMPLICIT container\n        var attrsAsn1 = asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.SET, true, []);\n\n        for(var ai = 0; ai < signer.authenticatedAttributes.length; ++ai) {\n          var attr = signer.authenticatedAttributes[ai];\n          if(attr.type === forge.pki.oids.messageDigest) {\n            // use content message digest as value\n            attr.value = mds[signer.digestAlgorithm].digest();\n          } else if(attr.type === forge.pki.oids.signingTime) {\n            // auto-populate signing time if not already set\n            if(!attr.value) {\n              attr.value = signingTime;\n            }\n          }\n\n          // convert to ASN.1 and push onto Attributes SET (for signing) and\n          // onto authenticatedAttributesAsn1 to complete SignedData ASN.1\n          // TODO: optimize away duplication\n          attrsAsn1.value.push(_attributeToAsn1(attr));\n          signer.authenticatedAttributesAsn1.value.push(_attributeToAsn1(attr));\n        }\n\n        // DER-serialize and digest SET OF attributes only\n        bytes = asn1.toDer(attrsAsn1).getBytes();\n        signer.md.start().update(bytes);\n      }\n\n      // sign digest\n      signer.signature = signer.key.sign(signer.md, 'RSASSA-PKCS1-V1_5');\n    }\n\n    // add signer info\n    msg.signerInfos = _signersToAsn1(msg.signers);\n  }\n};\n\n/**\n * Creates an empty PKCS#7 message of type EncryptedData.\n *\n * @return the message.\n */\np7.createEncryptedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.encryptedData,\n    version: 0,\n    encryptedContent: {\n      algorithm: forge.pki.oids['aes256-CBC']\n    },\n\n    /**\n     * Reads an EncryptedData content block (in ASN.1 format)\n     *\n     * @param obj The ASN.1 representation of the EncryptedData content block\n     */\n    fromAsn1: function(obj) {\n      // Validate EncryptedData content block and capture data.\n      _fromAsn1(msg, obj, p7.asn1.encryptedDataValidator);\n    },\n\n    /**\n     * Decrypt encrypted content\n     *\n     * @param key The (symmetric) key as a byte buffer\n     */\n    decrypt: function(key) {\n      if(key !== undefined) {\n        msg.encryptedContent.key = key;\n      }\n      _decryptContent(msg);\n    }\n  };\n  return msg;\n};\n\n/**\n * Creates an empty PKCS#7 message of type EnvelopedData.\n *\n * @return the message.\n */\np7.createEnvelopedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.envelopedData,\n    version: 0,\n    recipients: [],\n    encryptedContent: {\n      algorithm: forge.pki.oids['aes256-CBC']\n    },\n\n    /**\n     * Reads an EnvelopedData content block (in ASN.1 format)\n     *\n     * @param obj the ASN.1 representation of the EnvelopedData content block.\n     */\n    fromAsn1: function(obj) {\n      // validate EnvelopedData content block and capture data\n      var capture = _fromAsn1(msg, obj, p7.asn1.envelopedDataValidator);\n      msg.recipients = _recipientsFromAsn1(capture.recipientInfos.value);\n    },\n\n    toAsn1: function() {\n      // ContentInfo\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // ContentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(msg.type).getBytes()),\n        // [0] EnvelopedData\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // Version\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n              asn1.integerToDer(msg.version).getBytes()),\n            // RecipientInfos\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n              _recipientsToAsn1(msg.recipients)),\n            // EncryptedContentInfo\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true,\n              _encryptedContentToAsn1(msg.encryptedContent))\n          ])\n        ])\n      ]);\n    },\n\n    /**\n     * Find recipient by X.509 certificate's issuer.\n     *\n     * @param cert the certificate with the issuer to look for.\n     *\n     * @return the recipient object.\n     */\n    findRecipient: function(cert) {\n      var sAttr = cert.issuer.attributes;\n\n      for(var i = 0; i < msg.recipients.length; ++i) {\n        var r = msg.recipients[i];\n        var rAttr = r.issuer;\n\n        if(r.serialNumber !== cert.serialNumber) {\n          continue;\n        }\n\n        if(rAttr.length !== sAttr.length) {\n          continue;\n        }\n\n        var match = true;\n        for(var j = 0; j < sAttr.length; ++j) {\n          if(rAttr[j].type !== sAttr[j].type ||\n            rAttr[j].value !== sAttr[j].value) {\n            match = false;\n            break;\n          }\n        }\n\n        if(match) {\n          return r;\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Decrypt enveloped content\n     *\n     * @param recipient The recipient object related to the private key\n     * @param privKey The (RSA) private key object\n     */\n    decrypt: function(recipient, privKey) {\n      if(msg.encryptedContent.key === undefined && recipient !== undefined &&\n        privKey !== undefined) {\n        switch(recipient.encryptedContent.algorithm) {\n          case forge.pki.oids.rsaEncryption:\n          case forge.pki.oids.desCBC:\n            var key = privKey.decrypt(recipient.encryptedContent.content);\n            msg.encryptedContent.key = forge.util.createBuffer(key);\n            break;\n\n          default:\n            throw new Error('Unsupported asymmetric cipher, ' +\n              'OID ' + recipient.encryptedContent.algorithm);\n        }\n      }\n\n      _decryptContent(msg);\n    },\n\n    /**\n     * Add (another) entity to list of recipients.\n     *\n     * @param cert The certificate of the entity to add.\n     */\n    addRecipient: function(cert) {\n      msg.recipients.push({\n        version: 0,\n        issuer: cert.issuer.attributes,\n        serialNumber: cert.serialNumber,\n        encryptedContent: {\n          // We simply assume rsaEncryption here, since forge.pki only\n          // supports RSA so far.  If the PKI module supports other\n          // ciphers one day, we need to modify this one as well.\n          algorithm: forge.pki.oids.rsaEncryption,\n          key: cert.publicKey\n        }\n      });\n    },\n\n    /**\n     * Encrypt enveloped content.\n     *\n     * This function supports two optional arguments, cipher and key, which\n     * can be used to influence symmetric encryption.  Unless cipher is\n     * provided, the cipher specified in encryptedContent.algorithm is used\n     * (defaults to AES-256-CBC).  If no key is provided, encryptedContent.key\n     * is (re-)used.  If that one's not set, a random key will be generated\n     * automatically.\n     *\n     * @param [key] The key to be used for symmetric encryption.\n     * @param [cipher] The OID of the symmetric cipher to use.\n     */\n    encrypt: function(key, cipher) {\n      // Part 1: Symmetric encryption\n      if(msg.encryptedContent.content === undefined) {\n        cipher = cipher || msg.encryptedContent.algorithm;\n        key = key || msg.encryptedContent.key;\n\n        var keyLen, ivLen, ciphFn;\n        switch(cipher) {\n          case forge.pki.oids['aes128-CBC']:\n            keyLen = 16;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['aes192-CBC']:\n            keyLen = 24;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['aes256-CBC']:\n            keyLen = 32;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['des-EDE3-CBC']:\n            keyLen = 24;\n            ivLen = 8;\n            ciphFn = forge.des.createEncryptionCipher;\n            break;\n\n          default:\n            throw new Error('Unsupported symmetric cipher, OID ' + cipher);\n        }\n\n        if(key === undefined) {\n          key = forge.util.createBuffer(forge.random.getBytes(keyLen));\n        } else if(key.length() != keyLen) {\n          throw new Error('Symmetric key has wrong length; ' +\n            'got ' + key.length() + ' bytes, expected ' + keyLen + '.');\n        }\n\n        // Keep a copy of the key & IV in the object, so the caller can\n        // use it for whatever reason.\n        msg.encryptedContent.algorithm = cipher;\n        msg.encryptedContent.key = key;\n        msg.encryptedContent.parameter = forge.util.createBuffer(\n          forge.random.getBytes(ivLen));\n\n        var ciph = ciphFn(key);\n        ciph.start(msg.encryptedContent.parameter.copy());\n        ciph.update(msg.content);\n\n        // The finish function does PKCS#7 padding by default, therefore\n        // no action required by us.\n        if(!ciph.finish()) {\n          throw new Error('Symmetric encryption failed.');\n        }\n\n        msg.encryptedContent.content = ciph.output;\n      }\n\n      // Part 2: asymmetric encryption for each recipient\n      for(var i = 0; i < msg.recipients.length; ++i) {\n        var recipient = msg.recipients[i];\n\n        // Nothing to do, encryption already done.\n        if(recipient.encryptedContent.content !== undefined) {\n          continue;\n        }\n\n        switch(recipient.encryptedContent.algorithm) {\n          case forge.pki.oids.rsaEncryption:\n            recipient.encryptedContent.content =\n              recipient.encryptedContent.key.encrypt(\n                msg.encryptedContent.key.data);\n            break;\n\n          default:\n            throw new Error('Unsupported asymmetric cipher, OID ' +\n              recipient.encryptedContent.algorithm);\n        }\n      }\n    }\n  };\n  return msg;\n};\n\n/**\n * Converts a single recipient from an ASN.1 object.\n *\n * @param obj the ASN.1 RecipientInfo.\n *\n * @return the recipient object.\n */\nfunction _recipientFromAsn1(obj) {\n  // validate EnvelopedData content block and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.recipientInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 RecipientInfo. ' +\n      'ASN.1 object is not an PKCS#7 RecipientInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  return {\n    version: capture.version.charCodeAt(0),\n    issuer: forge.pki.RDNAttributesAsArray(capture.issuer),\n    serialNumber: forge.util.createBuffer(capture.serial).toHex(),\n    encryptedContent: {\n      algorithm: asn1.derToOid(capture.encAlgorithm),\n      parameter: capture.encParameter ? capture.encParameter.value : undefined,\n      content: capture.encKey\n    }\n  };\n}\n\n/**\n * Converts a single recipient object to an ASN.1 object.\n *\n * @param obj the recipient object.\n *\n * @return the ASN.1 RecipientInfo.\n */\nfunction _recipientToAsn1(obj) {\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // Version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(obj.version).getBytes()),\n    // IssuerAndSerialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Name\n      forge.pki.distinguishedNameToAsn1({attributes: obj.issuer}),\n      // Serial\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(obj.serialNumber))\n    ]),\n    // KeyEncryptionAlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(obj.encryptedContent.algorithm).getBytes()),\n      // Parameter, force NULL, only RSA supported for now.\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // EncryptedKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      obj.encryptedContent.content)\n  ]);\n}\n\n/**\n * Map a set of RecipientInfo ASN.1 objects to recipient objects.\n *\n * @param infos an array of ASN.1 representations RecipientInfo (i.e. SET OF).\n *\n * @return an array of recipient objects.\n */\nfunction _recipientsFromAsn1(infos) {\n  var ret = [];\n  for(var i = 0; i < infos.length; ++i) {\n    ret.push(_recipientFromAsn1(infos[i]));\n  }\n  return ret;\n}\n\n/**\n * Map an array of recipient objects to ASN.1 RecipientInfo objects.\n *\n * @param recipients an array of recipientInfo objects.\n *\n * @return an array of ASN.1 RecipientInfos.\n */\nfunction _recipientsToAsn1(recipients) {\n  var ret = [];\n  for(var i = 0; i < recipients.length; ++i) {\n    ret.push(_recipientToAsn1(recipients[i]));\n  }\n  return ret;\n}\n\n/**\n * Converts a single signer from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a SignerInfo.\n *\n * @return the signer object.\n */\nfunction _signerFromAsn1(obj) {\n  // validate EnvelopedData content block and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.signerInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 SignerInfo. ' +\n      'ASN.1 object is not an PKCS#7 SignerInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var rval = {\n    version: capture.version.charCodeAt(0),\n    issuer: forge.pki.RDNAttributesAsArray(capture.issuer),\n    serialNumber: forge.util.createBuffer(capture.serial).toHex(),\n    digestAlgorithm: asn1.derToOid(capture.digestAlgorithm),\n    signatureAlgorithm: asn1.derToOid(capture.signatureAlgorithm),\n    signature: capture.signature,\n    authenticatedAttributes: [],\n    unauthenticatedAttributes: []\n  };\n\n  // TODO: convert attributes\n  var authenticatedAttributes = capture.authenticatedAttributes || [];\n  var unauthenticatedAttributes = capture.unauthenticatedAttributes || [];\n\n  return rval;\n}\n\n/**\n * Converts a single signerInfo object to an ASN.1 object.\n *\n * @param obj the signerInfo object.\n *\n * @return the ASN.1 representation of a SignerInfo.\n */\nfunction _signerToAsn1(obj) {\n  // SignerInfo\n  var rval = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(obj.version).getBytes()),\n    // issuerAndSerialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // name\n      forge.pki.distinguishedNameToAsn1({attributes: obj.issuer}),\n      // serial\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(obj.serialNumber))\n    ]),\n    // digestAlgorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(obj.digestAlgorithm).getBytes()),\n      // parameters (null)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ])\n  ]);\n\n  // authenticatedAttributes (OPTIONAL)\n  if(obj.authenticatedAttributesAsn1) {\n    // add ASN.1 previously generated during signing\n    rval.value.push(obj.authenticatedAttributesAsn1);\n  }\n\n  // digestEncryptionAlgorithm\n  rval.value.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // algorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(obj.signatureAlgorithm).getBytes()),\n    // parameters (null)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n  ]));\n\n  // encryptedDigest\n  rval.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, obj.signature));\n\n  // unauthenticatedAttributes (OPTIONAL)\n  if(obj.unauthenticatedAttributes.length > 0) {\n    // [1] IMPLICIT\n    var attrsAsn1 = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, []);\n    for(var i = 0; i < obj.unauthenticatedAttributes.length; ++i) {\n      var attr = obj.unauthenticatedAttributes[i];\n      attrsAsn1.values.push(_attributeToAsn1(attr));\n    }\n    rval.value.push(attrsAsn1);\n  }\n\n  return rval;\n}\n\n/**\n * Map a set of SignerInfo ASN.1 objects to an array of signer objects.\n *\n * @param signerInfoAsn1s an array of ASN.1 SignerInfos (i.e. SET OF).\n *\n * @return an array of signers objects.\n */\nfunction _signersFromAsn1(signerInfoAsn1s) {\n  var ret = [];\n  for(var i = 0; i < signerInfoAsn1s.length; ++i) {\n    ret.push(_signerFromAsn1(signerInfoAsn1s[i]));\n  }\n  return ret;\n}\n\n/**\n * Map an array of signer objects to ASN.1 objects.\n *\n * @param signers an array of signer objects.\n *\n * @return an array of ASN.1 SignerInfos.\n */\nfunction _signersToAsn1(signers) {\n  var ret = [];\n  for(var i = 0; i < signers.length; ++i) {\n    ret.push(_signerToAsn1(signers[i]));\n  }\n  return ret;\n}\n\n/**\n * Convert an attribute object to an ASN.1 Attribute.\n *\n * @param attr the attribute object.\n *\n * @return the ASN.1 Attribute.\n */\nfunction _attributeToAsn1(attr) {\n  var value;\n\n  // TODO: generalize to support more attributes\n  if(attr.type === forge.pki.oids.contentType) {\n    value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(attr.value).getBytes());\n  } else if(attr.type === forge.pki.oids.messageDigest) {\n    value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      attr.value.bytes());\n  } else if(attr.type === forge.pki.oids.signingTime) {\n    /* Note per RFC 2985: Dates between 1 January 1950 and 31 December 2049\n      (inclusive) MUST be encoded as UTCTime. Any dates with year values\n      before 1950 or after 2049 MUST be encoded as GeneralizedTime. [Further,]\n      UTCTime values MUST be expressed in Greenwich Mean Time (Zulu) and MUST\n      include seconds (i.e., times are YYMMDDHHMMSSZ), even where the\n      number of seconds is zero.  Midnight (GMT) must be represented as\n      \"YYMMDD000000Z\". */\n    // TODO: make these module-level constants\n    var jan_1_1950 = new Date('1950-01-01T00:00:00Z');\n    var jan_1_2050 = new Date('2050-01-01T00:00:00Z');\n    var date = attr.value;\n    if(typeof date === 'string') {\n      // try to parse date\n      var timestamp = Date.parse(date);\n      if(!isNaN(timestamp)) {\n        date = new Date(timestamp);\n      } else if(date.length === 13) {\n        // YYMMDDHHMMSSZ (13 chars for UTCTime)\n        date = asn1.utcTimeToDate(date);\n      } else {\n        // assume generalized time\n        date = asn1.generalizedTimeToDate(date);\n      }\n    }\n\n    if(date >= jan_1_1950 && date < jan_1_2050) {\n      value = asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.UTCTIME, false,\n        asn1.dateToUtcTime(date));\n    } else {\n      value = asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.GENERALIZEDTIME, false,\n        asn1.dateToGeneralizedTime(date));\n    }\n  }\n\n  // TODO: expose as common API call\n  // create a RelativeDistinguishedName set\n  // each value in the set is an AttributeTypeAndValue first\n  // containing the type (an OID) and second the value\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // AttributeType\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(attr.type).getBytes()),\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n      // AttributeValue\n      value\n    ])\n  ]);\n}\n\n/**\n * Map messages encrypted content to ASN.1 objects.\n *\n * @param ec The encryptedContent object of the message.\n *\n * @return ASN.1 representation of the encryptedContent object (SEQUENCE).\n */\nfunction _encryptedContentToAsn1(ec) {\n  return [\n    // ContentType, always Data for the moment\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(forge.pki.oids.data).getBytes()),\n    // ContentEncryptionAlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(ec.algorithm).getBytes()),\n      // Parameters (IV)\n      !ec.parameter ?\n        undefined :\n        asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n          ec.parameter.getBytes())\n    ]),\n    // [0] EncryptedContent\n    asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n        ec.content.getBytes())\n    ])\n  ];\n}\n\n/**\n * Reads the \"common part\" of an PKCS#7 content block (in ASN.1 format)\n *\n * This function reads the \"common part\" of the PKCS#7 content blocks\n * EncryptedData and EnvelopedData, i.e. version number and symmetrically\n * encrypted content block.\n *\n * The result of the ASN.1 validate and capture process is returned\n * to allow the caller to extract further data, e.g. the list of recipients\n * in case of a EnvelopedData object.\n *\n * @param msg the PKCS#7 object to read the data to.\n * @param obj the ASN.1 representation of the content block.\n * @param validator the ASN.1 structure validator object to use.\n *\n * @return the value map captured by validator object.\n */\nfunction _fromAsn1(msg, obj, validator) {\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, validator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 message. ' +\n      'ASN.1 object is not a supported PKCS#7 message.');\n    error.errors = error;\n    throw error;\n  }\n\n  // Check contentType, so far we only support (raw) Data.\n  var contentType = asn1.derToOid(capture.contentType);\n  if(contentType !== forge.pki.oids.data) {\n    throw new Error('Unsupported PKCS#7 message. ' +\n      'Only wrapped ContentType Data supported.');\n  }\n\n  if(capture.encryptedContent) {\n    var content = '';\n    if(forge.util.isArray(capture.encryptedContent)) {\n      for(var i = 0; i < capture.encryptedContent.length; ++i) {\n        if(capture.encryptedContent[i].type !== asn1.Type.OCTETSTRING) {\n          throw new Error('Malformed PKCS#7 message, expecting encrypted ' +\n            'content constructed of only OCTET STRING objects.');\n        }\n        content += capture.encryptedContent[i].value;\n      }\n    } else {\n      content = capture.encryptedContent;\n    }\n    msg.encryptedContent = {\n      algorithm: asn1.derToOid(capture.encAlgorithm),\n      parameter: forge.util.createBuffer(capture.encParameter.value),\n      content: forge.util.createBuffer(content)\n    };\n  }\n\n  if(capture.content) {\n    var content = '';\n    if(forge.util.isArray(capture.content)) {\n      for(var i = 0; i < capture.content.length; ++i) {\n        if(capture.content[i].type !== asn1.Type.OCTETSTRING) {\n          throw new Error('Malformed PKCS#7 message, expecting ' +\n            'content constructed of only OCTET STRING objects.');\n        }\n        content += capture.content[i].value;\n      }\n    } else {\n      content = capture.content;\n    }\n    msg.content = forge.util.createBuffer(content);\n  }\n\n  msg.version = capture.version.charCodeAt(0);\n  msg.rawCapture = capture;\n\n  return capture;\n}\n\n/**\n * Decrypt the symmetrically encrypted content block of the PKCS#7 message.\n *\n * Decryption is skipped in case the PKCS#7 message object already has a\n * (decrypted) content attribute.  The algorithm, key and cipher parameters\n * (probably the iv) are taken from the encryptedContent attribute of the\n * message object.\n *\n * @param The PKCS#7 message object.\n */\nfunction _decryptContent(msg) {\n  if(msg.encryptedContent.key === undefined) {\n    throw new Error('Symmetric key not available.');\n  }\n\n  if(msg.content === undefined) {\n    var ciph;\n\n    switch(msg.encryptedContent.algorithm) {\n      case forge.pki.oids['aes128-CBC']:\n      case forge.pki.oids['aes192-CBC']:\n      case forge.pki.oids['aes256-CBC']:\n        ciph = forge.aes.createDecryptionCipher(msg.encryptedContent.key);\n        break;\n\n      case forge.pki.oids['desCBC']:\n      case forge.pki.oids['des-EDE3-CBC']:\n        ciph = forge.des.createDecryptionCipher(msg.encryptedContent.key);\n        break;\n\n      default:\n        throw new Error('Unsupported symmetric cipher, OID ' +\n          msg.encryptedContent.algorithm);\n    }\n    ciph.start(msg.encryptedContent.parameter);\n    ciph.update(msg.encryptedContent.content);\n\n    if(!ciph.finish()) {\n      throw new Error('Symmetric decryption failed.');\n    }\n\n    msg.content = ciph.output;\n  }\n}\n","/**\n * Javascript implementation of ASN.1 validators for PKCS#7 v1.5.\n *\n * @author Dave Longley\n * @author Stefan Siegl\n *\n * Copyright (c) 2012-2015 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * The ASN.1 representation of PKCS#7 is as follows\n * (see RFC #2315 for details, http://www.ietf.org/rfc/rfc2315.txt):\n *\n * A PKCS#7 message consists of a ContentInfo on root level, which may\n * contain any number of further ContentInfo nested into it.\n *\n * ContentInfo ::= SEQUENCE {\n *   contentType                ContentType,\n *   content               [0]  EXPLICIT ANY DEFINED BY contentType OPTIONAL\n * }\n *\n * ContentType ::= OBJECT IDENTIFIER\n *\n * EnvelopedData ::= SEQUENCE {\n *   version                    Version,\n *   recipientInfos             RecipientInfos,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * EncryptedData ::= SEQUENCE {\n *   version                    Version,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * id-signedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n *   us(840) rsadsi(113549) pkcs(1) pkcs7(7) 2 }\n *\n * SignedData ::= SEQUENCE {\n *   version           INTEGER,\n *   digestAlgorithms  DigestAlgorithmIdentifiers,\n *   contentInfo       ContentInfo,\n *   certificates      [0] IMPLICIT Certificates OPTIONAL,\n *   crls              [1] IMPLICIT CertificateRevocationLists OPTIONAL,\n *   signerInfos       SignerInfos\n * }\n *\n * SignerInfos ::= SET OF SignerInfo\n *\n * SignerInfo ::= SEQUENCE {\n *   version                    Version,\n *   issuerAndSerialNumber      IssuerAndSerialNumber,\n *   digestAlgorithm            DigestAlgorithmIdentifier,\n *   authenticatedAttributes    [0] IMPLICIT Attributes OPTIONAL,\n *   digestEncryptionAlgorithm  DigestEncryptionAlgorithmIdentifier,\n *   encryptedDigest            EncryptedDigest,\n *   unauthenticatedAttributes  [1] IMPLICIT Attributes OPTIONAL\n * }\n *\n * EncryptedDigest ::= OCTET STRING\n *\n * Attributes ::= SET OF Attribute\n *\n * Attribute ::= SEQUENCE {\n *   attrType    OBJECT IDENTIFIER,\n *   attrValues  SET OF AttributeValue\n * }\n *\n * AttributeValue ::= ANY\n *\n * Version ::= INTEGER\n *\n * RecipientInfos ::= SET OF RecipientInfo\n *\n * EncryptedContentInfo ::= SEQUENCE {\n *   contentType                 ContentType,\n *   contentEncryptionAlgorithm  ContentEncryptionAlgorithmIdentifier,\n *   encryptedContent       [0]  IMPLICIT EncryptedContent OPTIONAL\n * }\n *\n * ContentEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of AES and DES3, there is only one,\n * the IV.\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *    algorithm OBJECT IDENTIFIER,\n *    parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * EncryptedContent ::= OCTET STRING\n *\n * RecipientInfo ::= SEQUENCE {\n *   version                     Version,\n *   issuerAndSerialNumber       IssuerAndSerialNumber,\n *   keyEncryptionAlgorithm      KeyEncryptionAlgorithmIdentifier,\n *   encryptedKey                EncryptedKey\n * }\n *\n * IssuerAndSerialNumber ::= SEQUENCE {\n *   issuer                      Name,\n *   serialNumber                CertificateSerialNumber\n * }\n *\n * CertificateSerialNumber ::= INTEGER\n *\n * KeyEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * EncryptedKey ::= OCTET STRING\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./util');\n\n// shortcut for ASN.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for PKCS#7 API\nvar p7v = module.exports = forge.pkcs7asn1 = forge.pkcs7asn1 || {};\nforge.pkcs7 = forge.pkcs7 || {};\nforge.pkcs7.asn1 = p7v;\n\nvar contentInfoValidator = {\n  name: 'ContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'ContentInfo.ContentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'ContentInfo.content',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    captureAsn1: 'content'\n  }]\n};\np7v.contentInfoValidator = contentInfoValidator;\n\nvar encryptedContentInfoValidator = {\n  name: 'EncryptedContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedContentInfo.contentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'EncryptedContentInfo.contentEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      captureAsn1: 'encParameter'\n    }]\n  }, {\n    name: 'EncryptedContentInfo.encryptedContent',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    /* The PKCS#7 structure output by OpenSSL somewhat differs from what\n     * other implementations do generate.\n     *\n     * OpenSSL generates a structure like this:\n     * SEQUENCE {\n     *    ...\n     *    [0]\n     *       26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *       C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *       ...\n     * }\n     *\n     * Whereas other implementations (and this PKCS#7 module) generate:\n     * SEQUENCE {\n     *    ...\n     *    [0] {\n     *       OCTET STRING\n     *          26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *          C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *          ...\n     *    }\n     * }\n     *\n     * In order to support both, we just capture the context specific\n     * field here.  The OCTET STRING bit is removed below.\n     */\n    capture: 'encryptedContent',\n    captureAsn1: 'encryptedContentAsn1'\n  }]\n};\n\np7v.envelopedDataValidator = {\n  name: 'EnvelopedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EnvelopedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'EnvelopedData.RecipientInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'recipientInfos'\n  }].concat(encryptedContentInfoValidator)\n};\n\np7v.encryptedDataValidator = {\n  name: 'EncryptedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }].concat(encryptedContentInfoValidator)\n};\n\nvar signerValidator = {\n  name: 'SignerInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignerInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false\n  }, {\n    name: 'SignerInfo.issuerAndSerialNumber',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.issuerAndSerialNumber.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'SignerInfo.issuerAndSerialNumber.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'SignerInfo.digestAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.digestAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'digestAlgorithm'\n    }, {\n      name: 'SignerInfo.digestAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'digestParameter',\n      optional: true\n    }]\n  }, {\n    name: 'SignerInfo.authenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    capture: 'authenticatedAttributes'\n  }, {\n    name: 'SignerInfo.digestEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    capture: 'signatureAlgorithm'\n  }, {\n    name: 'SignerInfo.encryptedDigest',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'signature'\n  }, {\n    name: 'SignerInfo.unauthenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    constructed: true,\n    optional: true,\n    capture: 'unauthenticatedAttributes'\n  }]\n};\n\np7v.signedDataValidator = {\n  name: 'SignedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'SignedData.DigestAlgorithms',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'digestAlgorithms'\n  },\n  contentInfoValidator,\n  {\n    name: 'SignedData.Certificates',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    optional: true,\n    captureAsn1: 'certificates'\n  }, {\n    name: 'SignedData.CertificateRevocationLists',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    optional: true,\n    captureAsn1: 'crls'\n  }, {\n    name: 'SignedData.SignerInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    capture: 'signerInfos',\n    optional: true,\n    value: [signerValidator]\n  }]\n};\n\np7v.recipientInfoValidator = {\n  name: 'RecipientInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'RecipientInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'RecipientInfo.issuerAndSerial',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.issuerAndSerial.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'RecipientInfo.issuerAndSerial.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'RecipientInfo.keyEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.keyEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'RecipientInfo.keyEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'encParameter',\n      optional: true\n    }]\n  }, {\n    name: 'RecipientInfo.encryptedKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'encKey'\n  }]\n};\n","/**\n * Javascript implementation of a basic Public Key Infrastructure, including\n * support for RSA public and private keys.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./oids');\nrequire('./pbe');\nrequire('./pem');\nrequire('./pbkdf2');\nrequire('./pkcs12');\nrequire('./pss');\nrequire('./rsa');\nrequire('./util');\nrequire('./x509');\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Public Key Infrastructure (PKI) implementation. */\nvar pki = module.exports = forge.pki = forge.pki || {};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED. Use pem.decode() instead.\n *\n * Converts PEM-formatted data to DER.\n *\n * @param pem the PEM-formatted data.\n *\n * @return the DER-formatted data.\n */\npki.pemToDer = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert PEM to DER; PEM is encrypted.');\n  }\n  return forge.util.createBuffer(msg.body);\n};\n\n/**\n * Converts an RSA private key from PEM format.\n *\n * @param pem the PEM-formatted private key.\n *\n * @return the private key.\n */\npki.privateKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PRIVATE KEY' && msg.type !== 'RSA PRIVATE KEY') {\n    var error = new Error('Could not convert private key from PEM; PEM ' +\n      'header type is not \"PRIVATE KEY\" or \"RSA PRIVATE KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert private key from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return pki.privateKeyFromAsn1(obj);\n};\n\n/**\n * Converts an RSA private key to PEM format.\n *\n * @param key the private key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted private key.\n */\npki.privateKeyToPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'RSA PRIVATE KEY',\n    body: asn1.toDer(pki.privateKeyToAsn1(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts a PrivateKeyInfo to PEM format.\n *\n * @param pki the PrivateKeyInfo.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted private key.\n */\npki.privateKeyInfoToPem = function(pki, maxline) {\n  // convert to DER, then PEM-encode\n  var msg = {\n    type: 'PRIVATE KEY',\n    body: asn1.toDer(pki).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n","/**\n * Prime number generation API.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./jsbn');\nrequire('./random');\n\n(function() {\n\n// forge.prime already defined\nif(forge.prime) {\n  module.exports = forge.prime;\n  return;\n}\n\n/* PRIME API */\nvar prime = module.exports = forge.prime = forge.prime || {};\n\nvar BigInteger = forge.jsbn.BigInteger;\n\n// primes are 30k+i for i = 1, 7, 11, 13, 17, 19, 23, 29\nvar GCD_30_DELTA = [6, 4, 2, 4, 2, 4, 6, 2];\nvar THIRTY = new BigInteger(null);\nTHIRTY.fromInt(30);\nvar op_or = function(x, y) {return x|y;};\n\n/**\n * Generates a random probable prime with the given number of bits.\n *\n * Alternative algorithms can be specified by name as a string or as an\n * object with custom options like so:\n *\n * {\n *   name: 'PRIMEINC',\n *   options: {\n *     maxBlockTime: <the maximum amount of time to block the main\n *       thread before allowing I/O other JS to run>,\n *     millerRabinTests: <the number of miller-rabin tests to run>,\n *     workerScript: <the worker script URL>,\n *     workers: <the number of web workers (if supported) to use,\n *       -1 to use estimated cores minus one>.\n *     workLoad: the size of the work load, ie: number of possible prime\n *       numbers for each web worker to check per work assignment,\n *       (default: 100).\n *   }\n * }\n *\n * @param bits the number of bits for the prime number.\n * @param options the options to use.\n *          [algorithm] the algorithm to use (default: 'PRIMEINC').\n *          [prng] a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n *\n * @return callback(err, num) called once the operation completes.\n */\nprime.generateProbablePrime = function(bits, options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // default to PRIMEINC algorithm\n  var algorithm = options.algorithm || 'PRIMEINC';\n  if(typeof algorithm === 'string') {\n    algorithm = {name: algorithm};\n  }\n  algorithm.options = algorithm.options || {};\n\n  // create prng with api that matches BigInteger secure random\n  var prng = options.prng || forge.random;\n  var rng = {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      var b = prng.getBytesSync(x.length);\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = b.charCodeAt(i);\n      }\n    }\n  };\n\n  if(algorithm.name === 'PRIMEINC') {\n    return primeincFindPrime(bits, rng, algorithm.options, callback);\n  }\n\n  throw new Error('Invalid prime generation algorithm: ' + algorithm.name);\n};\n\nfunction primeincFindPrime(bits, rng, options, callback) {\n  if('workers' in options) {\n    return primeincFindPrimeWithWorkers(bits, rng, options, callback);\n  }\n  return primeincFindPrimeWithoutWorkers(bits, rng, options, callback);\n}\n\nfunction primeincFindPrimeWithoutWorkers(bits, rng, options, callback) {\n  // initialize random number\n  var num = generateRandom(bits, rng);\n\n  /* Note: All primes are of the form 30k+i for i < 30 and gcd(30, i)=1. The\n  number we are given is always aligned at 30k + 1. Each time the number is\n  determined not to be prime we add to get to the next 'i', eg: if the number\n  was at 30k + 1 we add 6. */\n  var deltaIdx = 0;\n\n  // get required number of MR tests\n  var mrTests = getMillerRabinTests(num.bitLength());\n  if('millerRabinTests' in options) {\n    mrTests = options.millerRabinTests;\n  }\n\n  // find prime nearest to 'num' for maxBlockTime ms\n  // 10 ms gives 5ms of leeway for other calculations before dropping\n  // below 60fps (1000/60 == 16.67), but in reality, the number will\n  // likely be higher due to an 'atomic' big int modPow\n  var maxBlockTime = 10;\n  if('maxBlockTime' in options) {\n    maxBlockTime = options.maxBlockTime;\n  }\n\n  _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback);\n}\n\nfunction _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback) {\n  var start = +new Date();\n  do {\n    // overflow, regenerate random number\n    if(num.bitLength() > bits) {\n      num = generateRandom(bits, rng);\n    }\n    // do primality test\n    if(num.isProbablePrime(mrTests)) {\n      return callback(null, num);\n    }\n    // get next potential prime\n    num.dAddOffset(GCD_30_DELTA[deltaIdx++ % 8], 0);\n  } while(maxBlockTime < 0 || (+new Date() - start < maxBlockTime));\n\n  // keep trying later\n  forge.util.setImmediate(function() {\n    _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback);\n  });\n}\n\n// NOTE: This algorithm is indeterminate in nature because workers\n// run in parallel looking at different segments of numbers. Even if this\n// algorithm is run twice with the same input from a predictable RNG, it\n// may produce different outputs.\nfunction primeincFindPrimeWithWorkers(bits, rng, options, callback) {\n  // web workers unavailable\n  if(typeof Worker === 'undefined') {\n    return primeincFindPrimeWithoutWorkers(bits, rng, options, callback);\n  }\n\n  // initialize random number\n  var num = generateRandom(bits, rng);\n\n  // use web workers to generate keys\n  var numWorkers = options.workers;\n  var workLoad = options.workLoad || 100;\n  var range = workLoad * 30 / 8;\n  var workerScript = options.workerScript || 'forge/prime.worker.js';\n  if(numWorkers === -1) {\n    return forge.util.estimateCores(function(err, cores) {\n      if(err) {\n        // default to 2\n        cores = 2;\n      }\n      numWorkers = cores - 1;\n      generate();\n    });\n  }\n  generate();\n\n  function generate() {\n    // require at least 1 worker\n    numWorkers = Math.max(1, numWorkers);\n\n    // TODO: consider optimizing by starting workers outside getPrime() ...\n    // note that in order to clean up they will have to be made internally\n    // asynchronous which may actually be slower\n\n    // start workers immediately\n    var workers = [];\n    for(var i = 0; i < numWorkers; ++i) {\n      // FIXME: fix path or use blob URLs\n      workers[i] = new Worker(workerScript);\n    }\n    var running = numWorkers;\n\n    // listen for requests from workers and assign ranges to find prime\n    for(var i = 0; i < numWorkers; ++i) {\n      workers[i].addEventListener('message', workerMessage);\n    }\n\n    /* Note: The distribution of random numbers is unknown. Therefore, each\n    web worker is continuously allocated a range of numbers to check for a\n    random number until one is found.\n\n    Every 30 numbers will be checked just 8 times, because prime numbers\n    have the form:\n\n    30k+i, for i < 30 and gcd(30, i)=1 (there are 8 values of i for this)\n\n    Therefore, if we want a web worker to run N checks before asking for\n    a new range of numbers, each range must contain N*30/8 numbers.\n\n    For 100 checks (workLoad), this is a range of 375. */\n\n    var found = false;\n    function workerMessage(e) {\n      // ignore message, prime already found\n      if(found) {\n        return;\n      }\n\n      --running;\n      var data = e.data;\n      if(data.found) {\n        // terminate all workers\n        for(var i = 0; i < workers.length; ++i) {\n          workers[i].terminate();\n        }\n        found = true;\n        return callback(null, new BigInteger(data.prime, 16));\n      }\n\n      // overflow, regenerate random number\n      if(num.bitLength() > bits) {\n        num = generateRandom(bits, rng);\n      }\n\n      // assign new range to check\n      var hex = num.toString(16);\n\n      // start prime search\n      e.target.postMessage({\n        hex: hex,\n        workLoad: workLoad\n      });\n\n      num.dAddOffset(range, 0);\n    }\n  }\n}\n\n/**\n * Generates a random number using the given number of bits and RNG.\n *\n * @param bits the number of bits for the number.\n * @param rng the random number generator to use.\n *\n * @return the random number.\n */\nfunction generateRandom(bits, rng) {\n  var num = new BigInteger(bits, rng);\n  // force MSB set\n  var bits1 = bits - 1;\n  if(!num.testBit(bits1)) {\n    num.bitwiseTo(BigInteger.ONE.shiftLeft(bits1), op_or, num);\n  }\n  // align number on 30k+1 boundary\n  num.dAddOffset(31 - num.mod(THIRTY).byteValue(), 0);\n  return num;\n}\n\n/**\n * Returns the required number of Miller-Rabin tests to generate a\n * prime with an error probability of (1/2)^80.\n *\n * See Handbook of Applied Cryptography Chapter 4, Table 4.4.\n *\n * @param bits the bit size.\n *\n * @return the required number of iterations.\n */\nfunction getMillerRabinTests(bits) {\n  if(bits <= 100) return 27;\n  if(bits <= 150) return 18;\n  if(bits <= 200) return 15;\n  if(bits <= 250) return 12;\n  if(bits <= 300) return 9;\n  if(bits <= 350) return 8;\n  if(bits <= 400) return 7;\n  if(bits <= 500) return 6;\n  if(bits <= 600) return 5;\n  if(bits <= 800) return 4;\n  if(bits <= 1250) return 3;\n  return 2;\n}\n\n})();\n","/**\n * A javascript implementation of a cryptographically-secure\n * Pseudo Random Number Generator (PRNG). The Fortuna algorithm is followed\n * here though the use of SHA-256 is not enforced; when generating an\n * a PRNG context, the hashing algorithm and block cipher used for\n * the generator are specified via a plugin.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nvar _crypto = null;\nif(forge.util.isNodejs && !forge.options.usePureJavaScript &&\n  !process.versions['node-webkit']) {\n  _crypto = require('crypto');\n}\n\n/* PRNG API */\nvar prng = module.exports = forge.prng = forge.prng || {};\n\n/**\n * Creates a new PRNG context.\n *\n * A PRNG plugin must be passed in that will provide:\n *\n * 1. A function that initializes the key and seed of a PRNG context. It\n *   will be given a 16 byte key and a 16 byte seed. Any key expansion\n *   or transformation of the seed from a byte string into an array of\n *   integers (or similar) should be performed.\n * 2. The cryptographic function used by the generator. It takes a key and\n *   a seed.\n * 3. A seed increment function. It takes the seed and returns seed + 1.\n * 4. An api to create a message digest.\n *\n * For an example, see random.js.\n *\n * @param plugin the PRNG plugin to use.\n */\nprng.create = function(plugin) {\n  var ctx = {\n    plugin: plugin,\n    key: null,\n    seed: null,\n    time: null,\n    // number of reseeds so far\n    reseeds: 0,\n    // amount of data generated so far\n    generated: 0,\n    // no initial key bytes\n    keyBytes: ''\n  };\n\n  // create 32 entropy pools (each is a message digest)\n  var md = plugin.md;\n  var pools = new Array(32);\n  for(var i = 0; i < 32; ++i) {\n    pools[i] = md.create();\n  }\n  ctx.pools = pools;\n\n  // entropy pools are written to cyclically, starting at index 0\n  ctx.pool = 0;\n\n  /**\n   * Generates random bytes. The bytes may be generated synchronously or\n   * asynchronously. Web workers must use the asynchronous interface or\n   * else the behavior is undefined.\n   *\n   * @param count the number of random bytes to generate.\n   * @param [callback(err, bytes)] called once the operation completes.\n   *\n   * @return count random bytes as a string.\n   */\n  ctx.generate = function(count, callback) {\n    // do synchronously\n    if(!callback) {\n      return ctx.generateSync(count);\n    }\n\n    // simple generator using counter-based CBC\n    var cipher = ctx.plugin.cipher;\n    var increment = ctx.plugin.increment;\n    var formatKey = ctx.plugin.formatKey;\n    var formatSeed = ctx.plugin.formatSeed;\n    var b = forge.util.createBuffer();\n\n    // paranoid deviation from Fortuna:\n    // reset key for every request to protect previously\n    // generated random bytes should the key be discovered;\n    // there is no 100ms based reseeding because of this\n    // forced reseed for every `generate` call\n    ctx.key = null;\n\n    generate();\n\n    function generate(err) {\n      if(err) {\n        return callback(err);\n      }\n\n      // sufficient bytes generated\n      if(b.length() >= count) {\n        return callback(null, b.getBytes(count));\n      }\n\n      // if amount of data generated is greater than 1 MiB, trigger reseed\n      if(ctx.generated > 0xfffff) {\n        ctx.key = null;\n      }\n\n      if(ctx.key === null) {\n        // prevent stack overflow\n        return forge.util.nextTick(function() {\n          _reseed(generate);\n        });\n      }\n\n      // generate the random bytes\n      var bytes = cipher(ctx.key, ctx.seed);\n      ctx.generated += bytes.length;\n      b.putBytes(bytes);\n\n      // generate bytes for a new key and seed\n      ctx.key = formatKey(cipher(ctx.key, increment(ctx.seed)));\n      ctx.seed = formatSeed(cipher(ctx.key, ctx.seed));\n\n      forge.util.setImmediate(generate);\n    }\n  };\n\n  /**\n   * Generates random bytes synchronously.\n   *\n   * @param count the number of random bytes to generate.\n   *\n   * @return count random bytes as a string.\n   */\n  ctx.generateSync = function(count) {\n    // simple generator using counter-based CBC\n    var cipher = ctx.plugin.cipher;\n    var increment = ctx.plugin.increment;\n    var formatKey = ctx.plugin.formatKey;\n    var formatSeed = ctx.plugin.formatSeed;\n\n    // paranoid deviation from Fortuna:\n    // reset key for every request to protect previously\n    // generated random bytes should the key be discovered;\n    // there is no 100ms based reseeding because of this\n    // forced reseed for every `generateSync` call\n    ctx.key = null;\n\n    var b = forge.util.createBuffer();\n    while(b.length() < count) {\n      // if amount of data generated is greater than 1 MiB, trigger reseed\n      if(ctx.generated > 0xfffff) {\n        ctx.key = null;\n      }\n\n      if(ctx.key === null) {\n        _reseedSync();\n      }\n\n      // generate the random bytes\n      var bytes = cipher(ctx.key, ctx.seed);\n      ctx.generated += bytes.length;\n      b.putBytes(bytes);\n\n      // generate bytes for a new key and seed\n      ctx.key = formatKey(cipher(ctx.key, increment(ctx.seed)));\n      ctx.seed = formatSeed(cipher(ctx.key, ctx.seed));\n    }\n\n    return b.getBytes(count);\n  };\n\n  /**\n   * Private function that asynchronously reseeds a generator.\n   *\n   * @param callback(err) called once the operation completes.\n   */\n  function _reseed(callback) {\n    if(ctx.pools[0].messageLength >= 32) {\n      _seed();\n      return callback();\n    }\n    // not enough seed data...\n    var needed = (32 - ctx.pools[0].messageLength) << 5;\n    ctx.seedFile(needed, function(err, bytes) {\n      if(err) {\n        return callback(err);\n      }\n      ctx.collect(bytes);\n      _seed();\n      callback();\n    });\n  }\n\n  /**\n   * Private function that synchronously reseeds a generator.\n   */\n  function _reseedSync() {\n    if(ctx.pools[0].messageLength >= 32) {\n      return _seed();\n    }\n    // not enough seed data...\n    var needed = (32 - ctx.pools[0].messageLength) << 5;\n    ctx.collect(ctx.seedFileSync(needed));\n    _seed();\n  }\n\n  /**\n   * Private function that seeds a generator once enough bytes are available.\n   */\n  function _seed() {\n    // update reseed count\n    ctx.reseeds = (ctx.reseeds === 0xffffffff) ? 0 : ctx.reseeds + 1;\n\n    // goal is to update `key` via:\n    // key = hash(key + s)\n    //   where 's' is all collected entropy from selected pools, then...\n\n    // create a plugin-based message digest\n    var md = ctx.plugin.md.create();\n\n    // consume current key bytes\n    md.update(ctx.keyBytes);\n\n    // digest the entropy of pools whose index k meet the\n    // condition 'n mod 2^k == 0' where n is the number of reseeds\n    var _2powK = 1;\n    for(var k = 0; k < 32; ++k) {\n      if(ctx.reseeds % _2powK === 0) {\n        md.update(ctx.pools[k].digest().getBytes());\n        ctx.pools[k].start();\n      }\n      _2powK = _2powK << 1;\n    }\n\n    // get digest for key bytes\n    ctx.keyBytes = md.digest().getBytes();\n\n    // paranoid deviation from Fortuna:\n    // update `seed` via `seed = hash(key)`\n    // instead of initializing to zero once and only\n    // ever incrementing it\n    md.start();\n    md.update(ctx.keyBytes);\n    var seedBytes = md.digest().getBytes();\n\n    // update state\n    ctx.key = ctx.plugin.formatKey(ctx.keyBytes);\n    ctx.seed = ctx.plugin.formatSeed(seedBytes);\n    ctx.generated = 0;\n  }\n\n  /**\n   * The built-in default seedFile. This seedFile is used when entropy\n   * is needed immediately.\n   *\n   * @param needed the number of bytes that are needed.\n   *\n   * @return the random bytes.\n   */\n  function defaultSeedFile(needed) {\n    // use window.crypto.getRandomValues strong source of entropy if available\n    var getRandomValues = null;\n    var globalScope = forge.util.globalScope;\n    var _crypto = globalScope.crypto || globalScope.msCrypto;\n    if(_crypto && _crypto.getRandomValues) {\n      getRandomValues = function(arr) {\n        return _crypto.getRandomValues(arr);\n      };\n    }\n\n    var b = forge.util.createBuffer();\n    if(getRandomValues) {\n      while(b.length() < needed) {\n        // max byte length is 65536 before QuotaExceededError is thrown\n        // http://www.w3.org/TR/WebCryptoAPI/#RandomSource-method-getRandomValues\n        var count = Math.max(1, Math.min(needed - b.length(), 65536) / 4);\n        var entropy = new Uint32Array(Math.floor(count));\n        try {\n          getRandomValues(entropy);\n          for(var i = 0; i < entropy.length; ++i) {\n            b.putInt32(entropy[i]);\n          }\n        } catch(e) {\n          /* only ignore QuotaExceededError */\n          if(!(typeof QuotaExceededError !== 'undefined' &&\n            e instanceof QuotaExceededError)) {\n            throw e;\n          }\n        }\n      }\n    }\n\n    // be sad and add some weak random data\n    if(b.length() < needed) {\n      /* Draws from Park-Miller \"minimal standard\" 31 bit PRNG,\n      implemented with David G. Carta's optimization: with 32 bit math\n      and without division (Public Domain). */\n      var hi, lo, next;\n      var seed = Math.floor(Math.random() * 0x010000);\n      while(b.length() < needed) {\n        lo = 16807 * (seed & 0xFFFF);\n        hi = 16807 * (seed >> 16);\n        lo += (hi & 0x7FFF) << 16;\n        lo += hi >> 15;\n        lo = (lo & 0x7FFFFFFF) + (lo >> 31);\n        seed = lo & 0xFFFFFFFF;\n\n        // consume lower 3 bytes of seed\n        for(var i = 0; i < 3; ++i) {\n          // throw in more pseudo random\n          next = seed >>> (i << 3);\n          next ^= Math.floor(Math.random() * 0x0100);\n          b.putByte(next & 0xFF);\n        }\n      }\n    }\n\n    return b.getBytes(needed);\n  }\n  // initialize seed file APIs\n  if(_crypto) {\n    // use nodejs async API\n    ctx.seedFile = function(needed, callback) {\n      _crypto.randomBytes(needed, function(err, bytes) {\n        if(err) {\n          return callback(err);\n        }\n        callback(null, bytes.toString());\n      });\n    };\n    // use nodejs sync API\n    ctx.seedFileSync = function(needed) {\n      return _crypto.randomBytes(needed).toString();\n    };\n  } else {\n    ctx.seedFile = function(needed, callback) {\n      try {\n        callback(null, defaultSeedFile(needed));\n      } catch(e) {\n        callback(e);\n      }\n    };\n    ctx.seedFileSync = defaultSeedFile;\n  }\n\n  /**\n   * Adds entropy to a prng ctx's accumulator.\n   *\n   * @param bytes the bytes of entropy as a string.\n   */\n  ctx.collect = function(bytes) {\n    // iterate over pools distributing entropy cyclically\n    var count = bytes.length;\n    for(var i = 0; i < count; ++i) {\n      ctx.pools[ctx.pool].update(bytes.substr(i, 1));\n      ctx.pool = (ctx.pool === 31) ? 0 : ctx.pool + 1;\n    }\n  };\n\n  /**\n   * Collects an integer of n bits.\n   *\n   * @param i the integer entropy.\n   * @param n the number of bits in the integer.\n   */\n  ctx.collectInt = function(i, n) {\n    var bytes = '';\n    for(var x = 0; x < n; x += 8) {\n      bytes += String.fromCharCode((i >> x) & 0xFF);\n    }\n    ctx.collect(bytes);\n  };\n\n  /**\n   * Registers a Web Worker to receive immediate entropy from the main thread.\n   * This method is required until Web Workers can access the native crypto\n   * API. This method should be called twice for each created worker, once in\n   * the main thread, and once in the worker itself.\n   *\n   * @param worker the worker to register.\n   */\n  ctx.registerWorker = function(worker) {\n    // worker receives random bytes\n    if(worker === self) {\n      ctx.seedFile = function(needed, callback) {\n        function listener(e) {\n          var data = e.data;\n          if(data.forge && data.forge.prng) {\n            self.removeEventListener('message', listener);\n            callback(data.forge.prng.err, data.forge.prng.bytes);\n          }\n        }\n        self.addEventListener('message', listener);\n        self.postMessage({forge: {prng: {needed: needed}}});\n      };\n    } else {\n      // main thread sends random bytes upon request\n      var listener = function(e) {\n        var data = e.data;\n        if(data.forge && data.forge.prng) {\n          ctx.seedFile(data.forge.prng.needed, function(err, bytes) {\n            worker.postMessage({forge: {prng: {err: err, bytes: bytes}}});\n          });\n        }\n      };\n      // TODO: do we need to remove the event listener when the worker dies?\n      worker.addEventListener('message', listener);\n    }\n  };\n\n  return ctx;\n};\n","/**\n * Javascript implementation of PKCS#1 PSS signature padding.\n *\n * @author Stefan Siegl\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n */\nvar forge = require('./forge');\nrequire('./random');\nrequire('./util');\n\n// shortcut for PSS API\nvar pss = module.exports = forge.pss = forge.pss || {};\n\n/**\n * Creates a PSS signature scheme object.\n *\n * There are several ways to provide a salt for encoding:\n *\n * 1. Specify the saltLength only and the built-in PRNG will generate it.\n * 2. Specify the saltLength and a custom PRNG with 'getBytesSync' defined that\n *   will be used.\n * 3. Specify the salt itself as a forge.util.ByteBuffer.\n *\n * @param options the options to use:\n *          md the message digest object to use, a forge md instance.\n *          mgf the mask generation function to use, a forge mgf instance.\n *          [saltLength] the length of the salt in octets.\n *          [prng] the pseudo-random number generator to use to produce a salt.\n *          [salt] the salt to use when encoding.\n *\n * @return a signature scheme object.\n */\npss.create = function(options) {\n  // backwards compatibility w/legacy args: hash, mgf, sLen\n  if(arguments.length === 3) {\n    options = {\n      md: arguments[0],\n      mgf: arguments[1],\n      saltLength: arguments[2]\n    };\n  }\n\n  var hash = options.md;\n  var mgf = options.mgf;\n  var hLen = hash.digestLength;\n\n  var salt_ = options.salt || null;\n  if(typeof salt_ === 'string') {\n    // assume binary-encoded string\n    salt_ = forge.util.createBuffer(salt_);\n  }\n\n  var sLen;\n  if('saltLength' in options) {\n    sLen = options.saltLength;\n  } else if(salt_ !== null) {\n    sLen = salt_.length();\n  } else {\n    throw new Error('Salt length not specified or specific salt not given.');\n  }\n\n  if(salt_ !== null && salt_.length() !== sLen) {\n    throw new Error('Given salt length does not match length of given salt.');\n  }\n\n  var prng = options.prng || forge.random;\n\n  var pssobj = {};\n\n  /**\n   * Encodes a PSS signature.\n   *\n   * This function implements EMSA-PSS-ENCODE as per RFC 3447, section 9.1.1.\n   *\n   * @param md the message digest object with the hash to sign.\n   * @param modsBits the length of the RSA modulus in bits.\n   *\n   * @return the encoded message as a binary-encoded string of length\n   *           ceil((modBits - 1) / 8).\n   */\n  pssobj.encode = function(md, modBits) {\n    var i;\n    var emBits = modBits - 1;\n    var emLen = Math.ceil(emBits / 8);\n\n    /* 2. Let mHash = Hash(M), an octet string of length hLen. */\n    var mHash = md.digest().getBytes();\n\n    /* 3. If emLen < hLen + sLen + 2, output \"encoding error\" and stop. */\n    if(emLen < hLen + sLen + 2) {\n      throw new Error('Message is too long to encrypt.');\n    }\n\n    /* 4. Generate a random octet string salt of length sLen; if sLen = 0,\n     *    then salt is the empty string. */\n    var salt;\n    if(salt_ === null) {\n      salt = prng.getBytesSync(sLen);\n    } else {\n      salt = salt_.bytes();\n    }\n\n    /* 5. Let M' = (0x)00 00 00 00 00 00 00 00 || mHash || salt; */\n    var m_ = new forge.util.ByteBuffer();\n    m_.fillWithByte(0, 8);\n    m_.putBytes(mHash);\n    m_.putBytes(salt);\n\n    /* 6. Let H = Hash(M'), an octet string of length hLen. */\n    hash.start();\n    hash.update(m_.getBytes());\n    var h = hash.digest().getBytes();\n\n    /* 7. Generate an octet string PS consisting of emLen - sLen - hLen - 2\n     *    zero octets.  The length of PS may be 0. */\n    var ps = new forge.util.ByteBuffer();\n    ps.fillWithByte(0, emLen - sLen - hLen - 2);\n\n    /* 8. Let DB = PS || 0x01 || salt; DB is an octet string of length\n     *    emLen - hLen - 1. */\n    ps.putByte(0x01);\n    ps.putBytes(salt);\n    var db = ps.getBytes();\n\n    /* 9. Let dbMask = MGF(H, emLen - hLen - 1). */\n    var maskLen = emLen - hLen - 1;\n    var dbMask = mgf.generate(h, maskLen);\n\n    /* 10. Let maskedDB = DB \\xor dbMask. */\n    var maskedDB = '';\n    for(i = 0; i < maskLen; i++) {\n      maskedDB += String.fromCharCode(db.charCodeAt(i) ^ dbMask.charCodeAt(i));\n    }\n\n    /* 11. Set the leftmost 8emLen - emBits bits of the leftmost octet in\n     *     maskedDB to zero. */\n    var mask = (0xFF00 >> (8 * emLen - emBits)) & 0xFF;\n    maskedDB = String.fromCharCode(maskedDB.charCodeAt(0) & ~mask) +\n      maskedDB.substr(1);\n\n    /* 12. Let EM = maskedDB || H || 0xbc.\n     * 13. Output EM. */\n    return maskedDB + h + String.fromCharCode(0xbc);\n  };\n\n  /**\n   * Verifies a PSS signature.\n   *\n   * This function implements EMSA-PSS-VERIFY as per RFC 3447, section 9.1.2.\n   *\n   * @param mHash the message digest hash, as a binary-encoded string, to\n   *         compare against the signature.\n   * @param em the encoded message, as a binary-encoded string\n   *          (RSA decryption result).\n   * @param modsBits the length of the RSA modulus in bits.\n   *\n   * @return true if the signature was verified, false if not.\n   */\n  pssobj.verify = function(mHash, em, modBits) {\n    var i;\n    var emBits = modBits - 1;\n    var emLen = Math.ceil(emBits / 8);\n\n    /* c. Convert the message representative m to an encoded message EM\n     *    of length emLen = ceil((modBits - 1) / 8) octets, where modBits\n     *    is the length in bits of the RSA modulus n */\n    em = em.substr(-emLen);\n\n    /* 3. If emLen < hLen + sLen + 2, output \"inconsistent\" and stop. */\n    if(emLen < hLen + sLen + 2) {\n      throw new Error('Inconsistent parameters to PSS signature verification.');\n    }\n\n    /* 4. If the rightmost octet of EM does not have hexadecimal value\n     *    0xbc, output \"inconsistent\" and stop. */\n    if(em.charCodeAt(emLen - 1) !== 0xbc) {\n      throw new Error('Encoded message does not end in 0xBC.');\n    }\n\n    /* 5. Let maskedDB be the leftmost emLen - hLen - 1 octets of EM, and\n     *    let H be the next hLen octets. */\n    var maskLen = emLen - hLen - 1;\n    var maskedDB = em.substr(0, maskLen);\n    var h = em.substr(maskLen, hLen);\n\n    /* 6. If the leftmost 8emLen - emBits bits of the leftmost octet in\n     *    maskedDB are not all equal to zero, output \"inconsistent\" and stop. */\n    var mask = (0xFF00 >> (8 * emLen - emBits)) & 0xFF;\n    if((maskedDB.charCodeAt(0) & mask) !== 0) {\n      throw new Error('Bits beyond keysize not zero as expected.');\n    }\n\n    /* 7. Let dbMask = MGF(H, emLen - hLen - 1). */\n    var dbMask = mgf.generate(h, maskLen);\n\n    /* 8. Let DB = maskedDB \\xor dbMask. */\n    var db = '';\n    for(i = 0; i < maskLen; i++) {\n      db += String.fromCharCode(maskedDB.charCodeAt(i) ^ dbMask.charCodeAt(i));\n    }\n\n    /* 9. Set the leftmost 8emLen - emBits bits of the leftmost octet\n     * in DB to zero. */\n    db = String.fromCharCode(db.charCodeAt(0) & ~mask) + db.substr(1);\n\n    /* 10. If the emLen - hLen - sLen - 2 leftmost octets of DB are not zero\n     * or if the octet at position emLen - hLen - sLen - 1 (the leftmost\n     * position is \"position 1\") does not have hexadecimal value 0x01,\n     * output \"inconsistent\" and stop. */\n    var checkLen = emLen - hLen - sLen - 2;\n    for(i = 0; i < checkLen; i++) {\n      if(db.charCodeAt(i) !== 0x00) {\n        throw new Error('Leftmost octets not zero as expected');\n      }\n    }\n\n    if(db.charCodeAt(checkLen) !== 0x01) {\n      throw new Error('Inconsistent PSS signature, 0x01 marker not found');\n    }\n\n    /* 11. Let salt be the last sLen octets of DB. */\n    var salt = db.substr(-sLen);\n\n    /* 12.  Let M' = (0x)00 00 00 00 00 00 00 00 || mHash || salt */\n    var m_ = new forge.util.ByteBuffer();\n    m_.fillWithByte(0, 8);\n    m_.putBytes(mHash);\n    m_.putBytes(salt);\n\n    /* 13. Let H' = Hash(M'), an octet string of length hLen. */\n    hash.start();\n    hash.update(m_.getBytes());\n    var h_ = hash.digest().getBytes();\n\n    /* 14. If H = H', output \"consistent.\" Otherwise, output \"inconsistent.\" */\n    return h === h_;\n  };\n\n  return pssobj;\n};\n","/**\n * An API for getting cryptographically-secure random bytes. The bytes are\n * generated using the Fortuna algorithm devised by Bruce Schneier and\n * Niels Ferguson.\n *\n * Getting strong random bytes is not yet easy to do in javascript. The only\n * truish random entropy that can be collected is from the mouse, keyboard, or\n * from timing with respect to page loads, etc. This generator makes a poor\n * attempt at providing random bytes when those sources haven't yet provided\n * enough entropy to initially seed or to reseed the PRNG.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2009-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./sha256');\nrequire('./prng');\nrequire('./util');\n\n(function() {\n\n// forge.random already defined\nif(forge.random && forge.random.getBytes) {\n  module.exports = forge.random;\n  return;\n}\n\n(function(jQuery) {\n\n// the default prng plugin, uses AES-128\nvar prng_aes = {};\nvar _prng_aes_output = new Array(4);\nvar _prng_aes_buffer = forge.util.createBuffer();\nprng_aes.formatKey = function(key) {\n  // convert the key into 32-bit integers\n  var tmp = forge.util.createBuffer(key);\n  key = new Array(4);\n  key[0] = tmp.getInt32();\n  key[1] = tmp.getInt32();\n  key[2] = tmp.getInt32();\n  key[3] = tmp.getInt32();\n\n  // return the expanded key\n  return forge.aes._expandKey(key, false);\n};\nprng_aes.formatSeed = function(seed) {\n  // convert seed into 32-bit integers\n  var tmp = forge.util.createBuffer(seed);\n  seed = new Array(4);\n  seed[0] = tmp.getInt32();\n  seed[1] = tmp.getInt32();\n  seed[2] = tmp.getInt32();\n  seed[3] = tmp.getInt32();\n  return seed;\n};\nprng_aes.cipher = function(key, seed) {\n  forge.aes._updateBlock(key, seed, _prng_aes_output, false);\n  _prng_aes_buffer.putInt32(_prng_aes_output[0]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[1]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[2]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[3]);\n  return _prng_aes_buffer.getBytes();\n};\nprng_aes.increment = function(seed) {\n  // FIXME: do we care about carry or signed issues?\n  ++seed[3];\n  return seed;\n};\nprng_aes.md = forge.md.sha256;\n\n/**\n * Creates a new PRNG.\n */\nfunction spawnPrng() {\n  var ctx = forge.prng.create(prng_aes);\n\n  /**\n   * Gets random bytes. If a native secure crypto API is unavailable, this\n   * method tries to make the bytes more unpredictable by drawing from data that\n   * can be collected from the user of the browser, eg: mouse movement.\n   *\n   * If a callback is given, this method will be called asynchronously.\n   *\n   * @param count the number of random bytes to get.\n   * @param [callback(err, bytes)] called once the operation completes.\n   *\n   * @return the random bytes in a string.\n   */\n  ctx.getBytes = function(count, callback) {\n    return ctx.generate(count, callback);\n  };\n\n  /**\n   * Gets random bytes asynchronously. If a native secure crypto API is\n   * unavailable, this method tries to make the bytes more unpredictable by\n   * drawing from data that can be collected from the user of the browser,\n   * eg: mouse movement.\n   *\n   * @param count the number of random bytes to get.\n   *\n   * @return the random bytes in a string.\n   */\n  ctx.getBytesSync = function(count) {\n    return ctx.generate(count);\n  };\n\n  return ctx;\n}\n\n// create default prng context\nvar _ctx = spawnPrng();\n\n// add other sources of entropy only if window.crypto.getRandomValues is not\n// available -- otherwise this source will be automatically used by the prng\nvar getRandomValues = null;\nvar globalScope = forge.util.globalScope;\nvar _crypto = globalScope.crypto || globalScope.msCrypto;\nif(_crypto && _crypto.getRandomValues) {\n  getRandomValues = function(arr) {\n    return _crypto.getRandomValues(arr);\n  };\n}\n\nif(forge.options.usePureJavaScript ||\n  (!forge.util.isNodejs && !getRandomValues)) {\n  // if this is a web worker, do not use weak entropy, instead register to\n  // receive strong entropy asynchronously from the main thread\n  if(typeof window === 'undefined' || window.document === undefined) {\n    // FIXME:\n  }\n\n  // get load time entropy\n  _ctx.collectInt(+new Date(), 32);\n\n  // add some entropy from navigator object\n  if(typeof(navigator) !== 'undefined') {\n    var _navBytes = '';\n    for(var key in navigator) {\n      try {\n        if(typeof(navigator[key]) == 'string') {\n          _navBytes += navigator[key];\n        }\n      } catch(e) {\n        /* Some navigator keys might not be accessible, e.g. the geolocation\n          attribute throws an exception if touched in Mozilla chrome://\n          context.\n\n          Silently ignore this and just don't use this as a source of\n          entropy. */\n      }\n    }\n    _ctx.collect(_navBytes);\n    _navBytes = null;\n  }\n\n  // add mouse and keyboard collectors if jquery is available\n  if(jQuery) {\n    // set up mouse entropy capture\n    jQuery().mousemove(function(e) {\n      // add mouse coords\n      _ctx.collectInt(e.clientX, 16);\n      _ctx.collectInt(e.clientY, 16);\n    });\n\n    // set up keyboard entropy capture\n    jQuery().keypress(function(e) {\n      _ctx.collectInt(e.charCode, 8);\n    });\n  }\n}\n\n/* Random API */\nif(!forge.random) {\n  forge.random = _ctx;\n} else {\n  // extend forge.random with _ctx\n  for(var key in _ctx) {\n    forge.random[key] = _ctx[key];\n  }\n}\n\n// expose spawn PRNG\nforge.random.createInstance = spawnPrng;\n\nmodule.exports = forge.random;\n\n})(typeof(jQuery) !== 'undefined' ? jQuery : null);\n\n})();\n","/**\n * RC2 implementation.\n *\n * @author Stefan Siegl\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * Information on the RC2 cipher is available from RFC #2268,\n * http://www.ietf.org/rfc/rfc2268.txt\n */\nvar forge = require('./forge');\nrequire('./util');\n\nvar piTable = [\n  0xd9, 0x78, 0xf9, 0xc4, 0x19, 0xdd, 0xb5, 0xed, 0x28, 0xe9, 0xfd, 0x79, 0x4a, 0xa0, 0xd8, 0x9d,\n  0xc6, 0x7e, 0x37, 0x83, 0x2b, 0x76, 0x53, 0x8e, 0x62, 0x4c, 0x64, 0x88, 0x44, 0x8b, 0xfb, 0xa2,\n  0x17, 0x9a, 0x59, 0xf5, 0x87, 0xb3, 0x4f, 0x13, 0x61, 0x45, 0x6d, 0x8d, 0x09, 0x81, 0x7d, 0x32,\n  0xbd, 0x8f, 0x40, 0xeb, 0x86, 0xb7, 0x7b, 0x0b, 0xf0, 0x95, 0x21, 0x22, 0x5c, 0x6b, 0x4e, 0x82,\n  0x54, 0xd6, 0x65, 0x93, 0xce, 0x60, 0xb2, 0x1c, 0x73, 0x56, 0xc0, 0x14, 0xa7, 0x8c, 0xf1, 0xdc,\n  0x12, 0x75, 0xca, 0x1f, 0x3b, 0xbe, 0xe4, 0xd1, 0x42, 0x3d, 0xd4, 0x30, 0xa3, 0x3c, 0xb6, 0x26,\n  0x6f, 0xbf, 0x0e, 0xda, 0x46, 0x69, 0x07, 0x57, 0x27, 0xf2, 0x1d, 0x9b, 0xbc, 0x94, 0x43, 0x03,\n  0xf8, 0x11, 0xc7, 0xf6, 0x90, 0xef, 0x3e, 0xe7, 0x06, 0xc3, 0xd5, 0x2f, 0xc8, 0x66, 0x1e, 0xd7,\n  0x08, 0xe8, 0xea, 0xde, 0x80, 0x52, 0xee, 0xf7, 0x84, 0xaa, 0x72, 0xac, 0x35, 0x4d, 0x6a, 0x2a,\n  0x96, 0x1a, 0xd2, 0x71, 0x5a, 0x15, 0x49, 0x74, 0x4b, 0x9f, 0xd0, 0x5e, 0x04, 0x18, 0xa4, 0xec,\n  0xc2, 0xe0, 0x41, 0x6e, 0x0f, 0x51, 0xcb, 0xcc, 0x24, 0x91, 0xaf, 0x50, 0xa1, 0xf4, 0x70, 0x39,\n  0x99, 0x7c, 0x3a, 0x85, 0x23, 0xb8, 0xb4, 0x7a, 0xfc, 0x02, 0x36, 0x5b, 0x25, 0x55, 0x97, 0x31,\n  0x2d, 0x5d, 0xfa, 0x98, 0xe3, 0x8a, 0x92, 0xae, 0x05, 0xdf, 0x29, 0x10, 0x67, 0x6c, 0xba, 0xc9,\n  0xd3, 0x00, 0xe6, 0xcf, 0xe1, 0x9e, 0xa8, 0x2c, 0x63, 0x16, 0x01, 0x3f, 0x58, 0xe2, 0x89, 0xa9,\n  0x0d, 0x38, 0x34, 0x1b, 0xab, 0x33, 0xff, 0xb0, 0xbb, 0x48, 0x0c, 0x5f, 0xb9, 0xb1, 0xcd, 0x2e,\n  0xc5, 0xf3, 0xdb, 0x47, 0xe5, 0xa5, 0x9c, 0x77, 0x0a, 0xa6, 0x20, 0x68, 0xfe, 0x7f, 0xc1, 0xad\n];\n\nvar s = [1, 2, 3, 5];\n\n/**\n * Rotate a word left by given number of bits.\n *\n * Bits that are shifted out on the left are put back in on the right\n * hand side.\n *\n * @param word The word to shift left.\n * @param bits The number of bits to shift by.\n * @return The rotated word.\n */\nvar rol = function(word, bits) {\n  return ((word << bits) & 0xffff) | ((word & 0xffff) >> (16 - bits));\n};\n\n/**\n * Rotate a word right by given number of bits.\n *\n * Bits that are shifted out on the right are put back in on the left\n * hand side.\n *\n * @param word The word to shift right.\n * @param bits The number of bits to shift by.\n * @return The rotated word.\n */\nvar ror = function(word, bits) {\n  return ((word & 0xffff) >> bits) | ((word << (16 - bits)) & 0xffff);\n};\n\n/* RC2 API */\nmodule.exports = forge.rc2 = forge.rc2 || {};\n\n/**\n * Perform RC2 key expansion as per RFC #2268, section 2.\n *\n * @param key variable-length user key (between 1 and 128 bytes)\n * @param effKeyBits number of effective key bits (default: 128)\n * @return the expanded RC2 key (ByteBuffer of 128 bytes)\n */\nforge.rc2.expandKey = function(key, effKeyBits) {\n  if(typeof key === 'string') {\n    key = forge.util.createBuffer(key);\n  }\n  effKeyBits = effKeyBits || 128;\n\n  /* introduce variables that match the names used in RFC #2268 */\n  var L = key;\n  var T = key.length();\n  var T1 = effKeyBits;\n  var T8 = Math.ceil(T1 / 8);\n  var TM = 0xff >> (T1 & 0x07);\n  var i;\n\n  for(i = T; i < 128; i++) {\n    L.putByte(piTable[(L.at(i - 1) + L.at(i - T)) & 0xff]);\n  }\n\n  L.setAt(128 - T8, piTable[L.at(128 - T8) & TM]);\n\n  for(i = 127 - T8; i >= 0; i--) {\n    L.setAt(i, piTable[L.at(i + 1) ^ L.at(i + T8)]);\n  }\n\n  return L;\n};\n\n/**\n * Creates a RC2 cipher object.\n *\n * @param key the symmetric key to use (as base for key generation).\n * @param bits the number of effective key bits.\n * @param encrypt false for decryption, true for encryption.\n *\n * @return the cipher.\n */\nvar createCipher = function(key, bits, encrypt) {\n  var _finish = false, _input = null, _output = null, _iv = null;\n  var mixRound, mashRound;\n  var i, j, K = [];\n\n  /* Expand key and fill into K[] Array */\n  key = forge.rc2.expandKey(key, bits);\n  for(i = 0; i < 64; i++) {\n    K.push(key.getInt16Le());\n  }\n\n  if(encrypt) {\n    /**\n     * Perform one mixing round \"in place\".\n     *\n     * @param R Array of four words to perform mixing on.\n     */\n    mixRound = function(R) {\n      for(i = 0; i < 4; i++) {\n        R[i] += K[j] + (R[(i + 3) % 4] & R[(i + 2) % 4]) +\n          ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\n        R[i] = rol(R[i], s[i]);\n        j++;\n      }\n    };\n\n    /**\n     * Perform one mashing round \"in place\".\n     *\n     * @param R Array of four words to perform mashing on.\n     */\n    mashRound = function(R) {\n      for(i = 0; i < 4; i++) {\n        R[i] += K[R[(i + 3) % 4] & 63];\n      }\n    };\n  } else {\n    /**\n     * Perform one r-mixing round \"in place\".\n     *\n     * @param R Array of four words to perform mixing on.\n     */\n    mixRound = function(R) {\n      for(i = 3; i >= 0; i--) {\n        R[i] = ror(R[i], s[i]);\n        R[i] -= K[j] + (R[(i + 3) % 4] & R[(i + 2) % 4]) +\n          ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\n        j--;\n      }\n    };\n\n    /**\n     * Perform one r-mashing round \"in place\".\n     *\n     * @param R Array of four words to perform mashing on.\n     */\n    mashRound = function(R) {\n      for(i = 3; i >= 0; i--) {\n        R[i] -= K[R[(i + 3) % 4] & 63];\n      }\n    };\n  }\n\n  /**\n   * Run the specified cipher execution plan.\n   *\n   * This function takes four words from the input buffer, applies the IV on\n   * it (if requested) and runs the provided execution plan.\n   *\n   * The plan must be put together in form of a array of arrays.  Where the\n   * outer one is simply a list of steps to perform and the inner one needs\n   * to have two elements: the first one telling how many rounds to perform,\n   * the second one telling what to do (i.e. the function to call).\n   *\n   * @param {Array} plan The plan to execute.\n   */\n  var runPlan = function(plan) {\n    var R = [];\n\n    /* Get data from input buffer and fill the four words into R */\n    for(i = 0; i < 4; i++) {\n      var val = _input.getInt16Le();\n\n      if(_iv !== null) {\n        if(encrypt) {\n          /* We're encrypting, apply the IV first. */\n          val ^= _iv.getInt16Le();\n        } else {\n          /* We're decryption, keep cipher text for next block. */\n          _iv.putInt16Le(val);\n        }\n      }\n\n      R.push(val & 0xffff);\n    }\n\n    /* Reset global \"j\" variable as per spec. */\n    j = encrypt ? 0 : 63;\n\n    /* Run execution plan. */\n    for(var ptr = 0; ptr < plan.length; ptr++) {\n      for(var ctr = 0; ctr < plan[ptr][0]; ctr++) {\n        plan[ptr][1](R);\n      }\n    }\n\n    /* Write back result to output buffer. */\n    for(i = 0; i < 4; i++) {\n      if(_iv !== null) {\n        if(encrypt) {\n          /* We're encrypting in CBC-mode, feed back encrypted bytes into\n             IV buffer to carry it forward to next block. */\n          _iv.putInt16Le(R[i]);\n        } else {\n          R[i] ^= _iv.getInt16Le();\n        }\n      }\n\n      _output.putInt16Le(R[i]);\n    }\n  };\n\n  /* Create cipher object */\n  var cipher = null;\n  cipher = {\n    /**\n     * Starts or restarts the encryption or decryption process, whichever\n     * was previously configured.\n     *\n     * To use the cipher in CBC mode, iv may be given either as a string\n     * of bytes, or as a byte buffer.  For ECB mode, give null as iv.\n     *\n     * @param iv the initialization vector to use, null for ECB mode.\n     * @param output the output the buffer to write to, null to create one.\n     */\n    start: function(iv, output) {\n      if(iv) {\n        /* CBC mode */\n        if(typeof iv === 'string') {\n          iv = forge.util.createBuffer(iv);\n        }\n      }\n\n      _finish = false;\n      _input = forge.util.createBuffer();\n      _output = output || new forge.util.createBuffer();\n      _iv = iv;\n\n      cipher.output = _output;\n    },\n\n    /**\n     * Updates the next block.\n     *\n     * @param input the buffer to read from.\n     */\n    update: function(input) {\n      if(!_finish) {\n        // not finishing, so fill the input buffer with more input\n        _input.putBuffer(input);\n      }\n\n      while(_input.length() >= 8) {\n        runPlan([\n            [ 5, mixRound ],\n            [ 1, mashRound ],\n            [ 6, mixRound ],\n            [ 1, mashRound ],\n            [ 5, mixRound ]\n          ]);\n      }\n    },\n\n    /**\n     * Finishes encrypting or decrypting.\n     *\n     * @param pad a padding function to use, null for PKCS#7 padding,\n     *           signature(blockSize, buffer, decrypt).\n     *\n     * @return true if successful, false on error.\n     */\n    finish: function(pad) {\n      var rval = true;\n\n      if(encrypt) {\n        if(pad) {\n          rval = pad(8, _input, !encrypt);\n        } else {\n          // add PKCS#7 padding to block (each pad byte is the\n          // value of the number of pad bytes)\n          var padding = (_input.length() === 8) ? 8 : (8 - _input.length());\n          _input.fillWithByte(padding, padding);\n        }\n      }\n\n      if(rval) {\n        // do final update\n        _finish = true;\n        cipher.update();\n      }\n\n      if(!encrypt) {\n        // check for error: input data not a multiple of block size\n        rval = (_input.length() === 0);\n        if(rval) {\n          if(pad) {\n            rval = pad(8, _output, !encrypt);\n          } else {\n            // ensure padding byte count is valid\n            var len = _output.length();\n            var count = _output.at(len - 1);\n\n            if(count > len) {\n              rval = false;\n            } else {\n              // trim off padding bytes\n              _output.truncate(count);\n            }\n          }\n        }\n      }\n\n      return rval;\n    }\n  };\n\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to encrypt data in ECB or CBC mode using the\n * given symmetric key. The output will be stored in the 'output' member\n * of the returned cipher.\n *\n * The key and iv may be given as a string of bytes or a byte buffer.\n * The cipher is initialized to use 128 effective key bits.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n *\n * @return the cipher.\n */\nforge.rc2.startEncrypting = function(key, iv, output) {\n  var cipher = forge.rc2.createEncryptionCipher(key, 128);\n  cipher.start(iv, output);\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to encrypt data in ECB or CBC mode using the\n * given symmetric key.\n *\n * The key may be given as a string of bytes or a byte buffer.\n *\n * To start encrypting call start() on the cipher with an iv and optional\n * output buffer.\n *\n * @param key the symmetric key to use.\n *\n * @return the cipher.\n */\nforge.rc2.createEncryptionCipher = function(key, bits) {\n  return createCipher(key, bits, true);\n};\n\n/**\n * Creates an RC2 cipher object to decrypt data in ECB or CBC mode using the\n * given symmetric key. The output will be stored in the 'output' member\n * of the returned cipher.\n *\n * The key and iv may be given as a string of bytes or a byte buffer.\n * The cipher is initialized to use 128 effective key bits.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n *\n * @return the cipher.\n */\nforge.rc2.startDecrypting = function(key, iv, output) {\n  var cipher = forge.rc2.createDecryptionCipher(key, 128);\n  cipher.start(iv, output);\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to decrypt data in ECB or CBC mode using the\n * given symmetric key.\n *\n * The key may be given as a string of bytes or a byte buffer.\n *\n * To start decrypting call start() on the cipher with an iv and optional\n * output buffer.\n *\n * @param key the symmetric key to use.\n *\n * @return the cipher.\n */\nforge.rc2.createDecryptionCipher = function(key, bits) {\n  return createCipher(key, bits, false);\n};\n","/**\n * Javascript implementation of basic RSA algorithms.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n *\n * The only algorithm currently supported for PKI is RSA.\n *\n * An RSA key is often stored in ASN.1 DER format. The SubjectPublicKeyInfo\n * ASN.1 structure is composed of an algorithm of type AlgorithmIdentifier\n * and a subjectPublicKey of type bit string.\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of RSA, there aren't any.\n *\n * SubjectPublicKeyInfo ::= SEQUENCE {\n *   algorithm AlgorithmIdentifier,\n *   subjectPublicKey BIT STRING\n * }\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *   algorithm OBJECT IDENTIFIER,\n *   parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * For an RSA public key, the subjectPublicKey is:\n *\n * RSAPublicKey ::= SEQUENCE {\n *   modulus            INTEGER,    -- n\n *   publicExponent     INTEGER     -- e\n * }\n *\n * PrivateKeyInfo ::= SEQUENCE {\n *   version                   Version,\n *   privateKeyAlgorithm       PrivateKeyAlgorithmIdentifier,\n *   privateKey                PrivateKey,\n *   attributes           [0]  IMPLICIT Attributes OPTIONAL\n * }\n *\n * Version ::= INTEGER\n * PrivateKeyAlgorithmIdentifier ::= AlgorithmIdentifier\n * PrivateKey ::= OCTET STRING\n * Attributes ::= SET OF Attribute\n *\n * An RSA private key as the following structure:\n *\n * RSAPrivateKey ::= SEQUENCE {\n *   version Version,\n *   modulus INTEGER, -- n\n *   publicExponent INTEGER, -- e\n *   privateExponent INTEGER, -- d\n *   prime1 INTEGER, -- p\n *   prime2 INTEGER, -- q\n *   exponent1 INTEGER, -- d mod (p-1)\n *   exponent2 INTEGER, -- d mod (q-1)\n *   coefficient INTEGER -- (inverse of q) mod p\n * }\n *\n * Version ::= INTEGER\n *\n * The OID for the RSA key algorithm is: 1.2.840.113549.1.1.1\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./jsbn');\nrequire('./oids');\nrequire('./pkcs1');\nrequire('./prime');\nrequire('./random');\nrequire('./util');\n\nif(typeof BigInteger === 'undefined') {\n  var BigInteger = forge.jsbn.BigInteger;\n}\n\nvar _crypto = forge.util.isNodejs ? require('crypto') : null;\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for util API\nvar util = forge.util;\n\n/*\n * RSA encryption and decryption, see RFC 2313.\n */\nforge.pki = forge.pki || {};\nmodule.exports = forge.pki.rsa = forge.rsa = forge.rsa || {};\nvar pki = forge.pki;\n\n// for finding primes, which are 30k+i for i = 1, 7, 11, 13, 17, 19, 23, 29\nvar GCD_30_DELTA = [6, 4, 2, 4, 2, 4, 6, 2];\n\n// validator for a PrivateKeyInfo structure\nvar privateKeyValidator = {\n  // PrivateKeyInfo\n  name: 'PrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'PrivateKeyInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // privateKeyAlgorithm\n    name: 'PrivateKeyInfo.privateKeyAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'privateKeyOid'\n    }]\n  }, {\n    // PrivateKey\n    name: 'PrivateKeyInfo',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'privateKey'\n  }]\n};\n\n// validator for an RSA private key\nvar rsaPrivateKeyValidator = {\n  // RSAPrivateKey\n  name: 'RSAPrivateKey',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'RSAPrivateKey.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // modulus (n)\n    name: 'RSAPrivateKey.modulus',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyModulus'\n  }, {\n    // publicExponent (e)\n    name: 'RSAPrivateKey.publicExponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPublicExponent'\n  }, {\n    // privateExponent (d)\n    name: 'RSAPrivateKey.privateExponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrivateExponent'\n  }, {\n    // prime1 (p)\n    name: 'RSAPrivateKey.prime1',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrime1'\n  }, {\n    // prime2 (q)\n    name: 'RSAPrivateKey.prime2',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrime2'\n  }, {\n    // exponent1 (d mod (p-1))\n    name: 'RSAPrivateKey.exponent1',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyExponent1'\n  }, {\n    // exponent2 (d mod (q-1))\n    name: 'RSAPrivateKey.exponent2',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyExponent2'\n  }, {\n    // coefficient ((inverse of q) mod p)\n    name: 'RSAPrivateKey.coefficient',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyCoefficient'\n  }]\n};\n\n// validator for an RSA public key\nvar rsaPublicKeyValidator = {\n  // RSAPublicKey\n  name: 'RSAPublicKey',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // modulus (n)\n    name: 'RSAPublicKey.modulus',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'publicKeyModulus'\n  }, {\n    // publicExponent (e)\n    name: 'RSAPublicKey.exponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'publicKeyExponent'\n  }]\n};\n\n// validator for an SubjectPublicKeyInfo structure\n// Note: Currently only works with an RSA public key\nvar publicKeyValidator = forge.pki.rsa.publicKeyValidator = {\n  name: 'SubjectPublicKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'subjectPublicKeyInfo',\n  value: [{\n    name: 'SubjectPublicKeyInfo.AlgorithmIdentifier',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'publicKeyOid'\n    }]\n  }, {\n    // subjectPublicKey\n    name: 'SubjectPublicKeyInfo.subjectPublicKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    value: [{\n      // RSAPublicKey\n      name: 'SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      optional: true,\n      captureAsn1: 'rsaPublicKey'\n    }]\n  }]\n};\n\n// validator for a DigestInfo structure\nvar digestInfoValidator = {\n  name: 'DigestInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'DigestInfo.DigestAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'DigestInfo.DigestAlgorithm.algorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'algorithmIdentifier'\n    }, {\n      // NULL paramters\n      name: 'DigestInfo.DigestAlgorithm.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.NULL,\n      // captured only to check existence for md2 and md5\n      capture: 'parameters',\n      optional: true,\n      constructed: false\n    }]\n  }, {\n    // digest\n    name: 'DigestInfo.digest',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'digest'\n  }]\n};\n\n/**\n * Wrap digest in DigestInfo object.\n *\n * This function implements EMSA-PKCS1-v1_5-ENCODE as per RFC 3447.\n *\n * DigestInfo ::= SEQUENCE {\n *   digestAlgorithm DigestAlgorithmIdentifier,\n *   digest Digest\n * }\n *\n * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n * Digest ::= OCTET STRING\n *\n * @param md the message digest object with the hash to sign.\n *\n * @return the encoded message (ready for RSA encrytion)\n */\nvar emsaPkcs1v15encode = function(md) {\n  // get the oid for the algorithm\n  var oid;\n  if(md.algorithm in pki.oids) {\n    oid = pki.oids[md.algorithm];\n  } else {\n    var error = new Error('Unknown message digest algorithm.');\n    error.algorithm = md.algorithm;\n    throw error;\n  }\n  var oidBytes = asn1.oidToDer(oid).getBytes();\n\n  // create the digest info\n  var digestInfo = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  var digestAlgorithm = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  digestAlgorithm.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OID, false, oidBytes));\n  digestAlgorithm.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.NULL, false, ''));\n  var digest = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING,\n    false, md.digest().getBytes());\n  digestInfo.value.push(digestAlgorithm);\n  digestInfo.value.push(digest);\n\n  // encode digest info\n  return asn1.toDer(digestInfo).getBytes();\n};\n\n/**\n * Performs x^c mod n (RSA encryption or decryption operation).\n *\n * @param x the number to raise and mod.\n * @param key the key to use.\n * @param pub true if the key is public, false if private.\n *\n * @return the result of x^c mod n.\n */\nvar _modPow = function(x, key, pub) {\n  if(pub) {\n    return x.modPow(key.e, key.n);\n  }\n\n  if(!key.p || !key.q) {\n    // allow calculation without CRT params (slow)\n    return x.modPow(key.d, key.n);\n  }\n\n  // pre-compute dP, dQ, and qInv if necessary\n  if(!key.dP) {\n    key.dP = key.d.mod(key.p.subtract(BigInteger.ONE));\n  }\n  if(!key.dQ) {\n    key.dQ = key.d.mod(key.q.subtract(BigInteger.ONE));\n  }\n  if(!key.qInv) {\n    key.qInv = key.q.modInverse(key.p);\n  }\n\n  /* Chinese remainder theorem (CRT) states:\n\n    Suppose n1, n2, ..., nk are positive integers which are pairwise\n    coprime (n1 and n2 have no common factors other than 1). For any\n    integers x1, x2, ..., xk there exists an integer x solving the\n    system of simultaneous congruences (where ~= means modularly\n    congruent so a ~= b mod n means a mod n = b mod n):\n\n    x ~= x1 mod n1\n    x ~= x2 mod n2\n    ...\n    x ~= xk mod nk\n\n    This system of congruences has a single simultaneous solution x\n    between 0 and n - 1. Furthermore, each xk solution and x itself\n    is congruent modulo the product n = n1*n2*...*nk.\n    So x1 mod n = x2 mod n = xk mod n = x mod n.\n\n    The single simultaneous solution x can be solved with the following\n    equation:\n\n    x = sum(xi*ri*si) mod n where ri = n/ni and si = ri^-1 mod ni.\n\n    Where x is less than n, xi = x mod ni.\n\n    For RSA we are only concerned with k = 2. The modulus n = pq, where\n    p and q are coprime. The RSA decryption algorithm is:\n\n    y = x^d mod n\n\n    Given the above:\n\n    x1 = x^d mod p\n    r1 = n/p = q\n    s1 = q^-1 mod p\n    x2 = x^d mod q\n    r2 = n/q = p\n    s2 = p^-1 mod q\n\n    So y = (x1r1s1 + x2r2s2) mod n\n         = ((x^d mod p)q(q^-1 mod p) + (x^d mod q)p(p^-1 mod q)) mod n\n\n    According to Fermat's Little Theorem, if the modulus P is prime,\n    for any integer A not evenly divisible by P, A^(P-1) ~= 1 mod P.\n    Since A is not divisible by P it follows that if:\n    N ~= M mod (P - 1), then A^N mod P = A^M mod P. Therefore:\n\n    A^N mod P = A^(M mod (P - 1)) mod P. (The latter takes less effort\n    to calculate). In order to calculate x^d mod p more quickly the\n    exponent d mod (p - 1) is stored in the RSA private key (the same\n    is done for x^d mod q). These values are referred to as dP and dQ\n    respectively. Therefore we now have:\n\n    y = ((x^dP mod p)q(q^-1 mod p) + (x^dQ mod q)p(p^-1 mod q)) mod n\n\n    Since we'll be reducing x^dP by modulo p (same for q) we can also\n    reduce x by p (and q respectively) before hand. Therefore, let\n\n    xp = ((x mod p)^dP mod p), and\n    xq = ((x mod q)^dQ mod q), yielding:\n\n    y = (xp*q*(q^-1 mod p) + xq*p*(p^-1 mod q)) mod n\n\n    This can be further reduced to a simple algorithm that only\n    requires 1 inverse (the q inverse is used) to be used and stored.\n    The algorithm is called Garner's algorithm. If qInv is the\n    inverse of q, we simply calculate:\n\n    y = (qInv*(xp - xq) mod p) * q + xq\n\n    However, there are two further complications. First, we need to\n    ensure that xp > xq to prevent signed BigIntegers from being used\n    so we add p until this is true (since we will be mod'ing with\n    p anyway). Then, there is a known timing attack on algorithms\n    using the CRT. To mitigate this risk, \"cryptographic blinding\"\n    should be used. This requires simply generating a random number r\n    between 0 and n-1 and its inverse and multiplying x by r^e before\n    calculating y and then multiplying y by r^-1 afterwards. Note that\n    r must be coprime with n (gcd(r, n) === 1) in order to have an\n    inverse.\n  */\n\n  // cryptographic blinding\n  var r;\n  do {\n    r = new BigInteger(\n      forge.util.bytesToHex(forge.random.getBytes(key.n.bitLength() / 8)),\n      16);\n  } while(r.compareTo(key.n) >= 0 || !r.gcd(key.n).equals(BigInteger.ONE));\n  x = x.multiply(r.modPow(key.e, key.n)).mod(key.n);\n\n  // calculate xp and xq\n  var xp = x.mod(key.p).modPow(key.dP, key.p);\n  var xq = x.mod(key.q).modPow(key.dQ, key.q);\n\n  // xp must be larger than xq to avoid signed bit usage\n  while(xp.compareTo(xq) < 0) {\n    xp = xp.add(key.p);\n  }\n\n  // do last step\n  var y = xp.subtract(xq)\n    .multiply(key.qInv).mod(key.p)\n    .multiply(key.q).add(xq);\n\n  // remove effect of random for cryptographic blinding\n  y = y.multiply(r.modInverse(key.n)).mod(key.n);\n\n  return y;\n};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED, use 'sign' on a private key object or\n * 'encrypt' on a public key object instead.\n *\n * Performs RSA encryption.\n *\n * The parameter bt controls whether to put padding bytes before the\n * message passed in. Set bt to either true or false to disable padding\n * completely (in order to handle e.g. EMSA-PSS encoding seperately before),\n * signaling whether the encryption operation is a public key operation\n * (i.e. encrypting data) or not, i.e. private key operation (data signing).\n *\n * For PKCS#1 v1.5 padding pass in the block type to use, i.e. either 0x01\n * (for signing) or 0x02 (for encryption). The key operation mode (private\n * or public) is derived from this flag in that case).\n *\n * @param m the message to encrypt as a byte string.\n * @param key the RSA key to use.\n * @param bt for PKCS#1 v1.5 padding, the block type to use\n *   (0x01 for private key, 0x02 for public),\n *   to disable padding: true = public key, false = private key.\n *\n * @return the encrypted bytes as a string.\n */\npki.rsa.encrypt = function(m, key, bt) {\n  var pub = bt;\n  var eb;\n\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  if(bt !== false && bt !== true) {\n    // legacy, default to PKCS#1 v1.5 padding\n    pub = (bt === 0x02);\n    eb = _encodePkcs1_v1_5(m, key, bt);\n  } else {\n    eb = forge.util.createBuffer();\n    eb.putBytes(m);\n  }\n\n  // load encryption block as big integer 'x'\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var x = new BigInteger(eb.toHex(), 16);\n\n  // do RSA encryption\n  var y = _modPow(x, key, pub);\n\n  // convert y into the encrypted data byte string, if y is shorter in\n  // bytes than k, then prepend zero bytes to fill up ed\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var yhex = y.toString(16);\n  var ed = forge.util.createBuffer();\n  var zeros = k - Math.ceil(yhex.length / 2);\n  while(zeros > 0) {\n    ed.putByte(0x00);\n    --zeros;\n  }\n  ed.putBytes(forge.util.hexToBytes(yhex));\n  return ed.getBytes();\n};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED, use 'decrypt' on a private key object or\n * 'verify' on a public key object instead.\n *\n * Performs RSA decryption.\n *\n * The parameter ml controls whether to apply PKCS#1 v1.5 padding\n * or not.  Set ml = false to disable padding removal completely\n * (in order to handle e.g. EMSA-PSS later on) and simply pass back\n * the RSA encryption block.\n *\n * @param ed the encrypted data to decrypt in as a byte string.\n * @param key the RSA key to use.\n * @param pub true for a public key operation, false for private.\n * @param ml the message length, if known, false to disable padding.\n *\n * @return the decrypted message as a byte string.\n */\npki.rsa.decrypt = function(ed, key, pub, ml) {\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  // error if the length of the encrypted data ED is not k\n  if(ed.length !== k) {\n    var error = new Error('Encrypted message length is invalid.');\n    error.length = ed.length;\n    error.expected = k;\n    throw error;\n  }\n\n  // convert encrypted data into a big integer\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var y = new BigInteger(forge.util.createBuffer(ed).toHex(), 16);\n\n  // y must be less than the modulus or it wasn't the result of\n  // a previous mod operation (encryption) using that modulus\n  if(y.compareTo(key.n) >= 0) {\n    throw new Error('Encrypted message is invalid.');\n  }\n\n  // do RSA decryption\n  var x = _modPow(y, key, pub);\n\n  // create the encryption block, if x is shorter in bytes than k, then\n  // prepend zero bytes to fill up eb\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var xhex = x.toString(16);\n  var eb = forge.util.createBuffer();\n  var zeros = k - Math.ceil(xhex.length / 2);\n  while(zeros > 0) {\n    eb.putByte(0x00);\n    --zeros;\n  }\n  eb.putBytes(forge.util.hexToBytes(xhex));\n\n  if(ml !== false) {\n    // legacy, default to PKCS#1 v1.5 padding\n    return _decodePkcs1_v1_5(eb.getBytes(), key, pub);\n  }\n\n  // return message\n  return eb.getBytes();\n};\n\n/**\n * Creates an RSA key-pair generation state object. It is used to allow\n * key-generation to be performed in steps. It also allows for a UI to\n * display progress updates.\n *\n * @param bits the size for the private key in bits, defaults to 2048.\n * @param e the public exponent to use, defaults to 65537 (0x10001).\n * @param [options] the options to use.\n *          prng a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n *          algorithm the algorithm to use (default: 'PRIMEINC').\n *\n * @return the state object to use to generate the key-pair.\n */\npki.rsa.createKeyPairGenerationState = function(bits, e, options) {\n  // TODO: migrate step-based prime generation code to forge.prime\n\n  // set default bits\n  if(typeof(bits) === 'string') {\n    bits = parseInt(bits, 10);\n  }\n  bits = bits || 2048;\n\n  // create prng with api that matches BigInteger secure random\n  options = options || {};\n  var prng = options.prng || forge.random;\n  var rng = {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      var b = prng.getBytesSync(x.length);\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = b.charCodeAt(i);\n      }\n    }\n  };\n\n  var algorithm = options.algorithm || 'PRIMEINC';\n\n  // create PRIMEINC algorithm state\n  var rval;\n  if(algorithm === 'PRIMEINC') {\n    rval = {\n      algorithm: algorithm,\n      state: 0,\n      bits: bits,\n      rng: rng,\n      eInt: e || 65537,\n      e: new BigInteger(null),\n      p: null,\n      q: null,\n      qBits: bits >> 1,\n      pBits: bits - (bits >> 1),\n      pqState: 0,\n      num: null,\n      keys: null\n    };\n    rval.e.fromInt(rval.eInt);\n  } else {\n    throw new Error('Invalid key generation algorithm: ' + algorithm);\n  }\n\n  return rval;\n};\n\n/**\n * Attempts to runs the key-generation algorithm for at most n seconds\n * (approximately) using the given state. When key-generation has completed,\n * the keys will be stored in state.keys.\n *\n * To use this function to update a UI while generating a key or to prevent\n * causing browser lockups/warnings, set \"n\" to a value other than 0. A\n * simple pattern for generating a key and showing a progress indicator is:\n *\n * var state = pki.rsa.createKeyPairGenerationState(2048);\n * var step = function() {\n *   // step key-generation, run algorithm for 100 ms, repeat\n *   if(!forge.pki.rsa.stepKeyPairGenerationState(state, 100)) {\n *     setTimeout(step, 1);\n *   } else {\n *     // key-generation complete\n *     // TODO: turn off progress indicator here\n *     // TODO: use the generated key-pair in \"state.keys\"\n *   }\n * };\n * // TODO: turn on progress indicator here\n * setTimeout(step, 0);\n *\n * @param state the state to use.\n * @param n the maximum number of milliseconds to run the algorithm for, 0\n *          to run the algorithm to completion.\n *\n * @return true if the key-generation completed, false if not.\n */\npki.rsa.stepKeyPairGenerationState = function(state, n) {\n  // set default algorithm if not set\n  if(!('algorithm' in state)) {\n    state.algorithm = 'PRIMEINC';\n  }\n\n  // TODO: migrate step-based prime generation code to forge.prime\n  // TODO: abstract as PRIMEINC algorithm\n\n  // do key generation (based on Tom Wu's rsa.js, see jsbn.js license)\n  // with some minor optimizations and designed to run in steps\n\n  // local state vars\n  var THIRTY = new BigInteger(null);\n  THIRTY.fromInt(30);\n  var deltaIdx = 0;\n  var op_or = function(x, y) {return x | y;};\n\n  // keep stepping until time limit is reached or done\n  var t1 = +new Date();\n  var t2;\n  var total = 0;\n  while(state.keys === null && (n <= 0 || total < n)) {\n    // generate p or q\n    if(state.state === 0) {\n      /* Note: All primes are of the form:\n\n        30k+i, for i < 30 and gcd(30, i)=1, where there are 8 values for i\n\n        When we generate a random number, we always align it at 30k + 1. Each\n        time the number is determined not to be prime we add to get to the\n        next 'i', eg: if the number was at 30k + 1 we add 6. */\n      var bits = (state.p === null) ? state.pBits : state.qBits;\n      var bits1 = bits - 1;\n\n      // get a random number\n      if(state.pqState === 0) {\n        state.num = new BigInteger(bits, state.rng);\n        // force MSB set\n        if(!state.num.testBit(bits1)) {\n          state.num.bitwiseTo(\n            BigInteger.ONE.shiftLeft(bits1), op_or, state.num);\n        }\n        // align number on 30k+1 boundary\n        state.num.dAddOffset(31 - state.num.mod(THIRTY).byteValue(), 0);\n        deltaIdx = 0;\n\n        ++state.pqState;\n      } else if(state.pqState === 1) {\n        // try to make the number a prime\n        if(state.num.bitLength() > bits) {\n          // overflow, try again\n          state.pqState = 0;\n          // do primality test\n        } else if(state.num.isProbablePrime(\n          _getMillerRabinTests(state.num.bitLength()))) {\n          ++state.pqState;\n        } else {\n          // get next potential prime\n          state.num.dAddOffset(GCD_30_DELTA[deltaIdx++ % 8], 0);\n        }\n      } else if(state.pqState === 2) {\n        // ensure number is coprime with e\n        state.pqState =\n          (state.num.subtract(BigInteger.ONE).gcd(state.e)\n            .compareTo(BigInteger.ONE) === 0) ? 3 : 0;\n      } else if(state.pqState === 3) {\n        // store p or q\n        state.pqState = 0;\n        if(state.p === null) {\n          state.p = state.num;\n        } else {\n          state.q = state.num;\n        }\n\n        // advance state if both p and q are ready\n        if(state.p !== null && state.q !== null) {\n          ++state.state;\n        }\n        state.num = null;\n      }\n    } else if(state.state === 1) {\n      // ensure p is larger than q (swap them if not)\n      if(state.p.compareTo(state.q) < 0) {\n        state.num = state.p;\n        state.p = state.q;\n        state.q = state.num;\n      }\n      ++state.state;\n    } else if(state.state === 2) {\n      // compute phi: (p - 1)(q - 1) (Euler's totient function)\n      state.p1 = state.p.subtract(BigInteger.ONE);\n      state.q1 = state.q.subtract(BigInteger.ONE);\n      state.phi = state.p1.multiply(state.q1);\n      ++state.state;\n    } else if(state.state === 3) {\n      // ensure e and phi are coprime\n      if(state.phi.gcd(state.e).compareTo(BigInteger.ONE) === 0) {\n        // phi and e are coprime, advance\n        ++state.state;\n      } else {\n        // phi and e aren't coprime, so generate a new p and q\n        state.p = null;\n        state.q = null;\n        state.state = 0;\n      }\n    } else if(state.state === 4) {\n      // create n, ensure n is has the right number of bits\n      state.n = state.p.multiply(state.q);\n\n      // ensure n is right number of bits\n      if(state.n.bitLength() === state.bits) {\n        // success, advance\n        ++state.state;\n      } else {\n        // failed, get new q\n        state.q = null;\n        state.state = 0;\n      }\n    } else if(state.state === 5) {\n      // set keys\n      var d = state.e.modInverse(state.phi);\n      state.keys = {\n        privateKey: pki.rsa.setPrivateKey(\n          state.n, state.e, d, state.p, state.q,\n          d.mod(state.p1), d.mod(state.q1),\n          state.q.modInverse(state.p)),\n        publicKey: pki.rsa.setPublicKey(state.n, state.e)\n      };\n    }\n\n    // update timing\n    t2 = +new Date();\n    total += t2 - t1;\n    t1 = t2;\n  }\n\n  return state.keys !== null;\n};\n\n/**\n * Generates an RSA public-private key pair in a single call.\n *\n * To generate a key-pair in steps (to allow for progress updates and to\n * prevent blocking or warnings in slow browsers) then use the key-pair\n * generation state functions.\n *\n * To generate a key-pair asynchronously (either through web-workers, if\n * available, or by breaking up the work on the main thread), pass a\n * callback function.\n *\n * @param [bits] the size for the private key in bits, defaults to 2048.\n * @param [e] the public exponent to use, defaults to 65537.\n * @param [options] options for key-pair generation, if given then 'bits'\n *            and 'e' must *not* be given:\n *          bits the size for the private key in bits, (default: 2048).\n *          e the public exponent to use, (default: 65537 (0x10001)).\n *          workerScript the worker script URL.\n *          workers the number of web workers (if supported) to use,\n *            (default: 2).\n *          workLoad the size of the work load, ie: number of possible prime\n *            numbers for each web worker to check per work assignment,\n *            (default: 100).\n *          prng a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\". Disables use of native APIs.\n *          algorithm the algorithm to use (default: 'PRIMEINC').\n * @param [callback(err, keypair)] called once the operation completes.\n *\n * @return an object with privateKey and publicKey properties.\n */\npki.rsa.generateKeyPair = function(bits, e, options, callback) {\n  // (bits), (options), (callback)\n  if(arguments.length === 1) {\n    if(typeof bits === 'object') {\n      options = bits;\n      bits = undefined;\n    } else if(typeof bits === 'function') {\n      callback = bits;\n      bits = undefined;\n    }\n  } else if(arguments.length === 2) {\n    // (bits, e), (bits, options), (bits, callback), (options, callback)\n    if(typeof bits === 'number') {\n      if(typeof e === 'function') {\n        callback = e;\n        e = undefined;\n      } else if(typeof e !== 'number') {\n        options = e;\n        e = undefined;\n      }\n    } else {\n      options = bits;\n      callback = e;\n      bits = undefined;\n      e = undefined;\n    }\n  } else if(arguments.length === 3) {\n    // (bits, e, options), (bits, e, callback), (bits, options, callback)\n    if(typeof e === 'number') {\n      if(typeof options === 'function') {\n        callback = options;\n        options = undefined;\n      }\n    } else {\n      callback = options;\n      options = e;\n      e = undefined;\n    }\n  }\n  options = options || {};\n  if(bits === undefined) {\n    bits = options.bits || 2048;\n  }\n  if(e === undefined) {\n    e = options.e || 0x10001;\n  }\n\n  // use native code if permitted, available, and parameters are acceptable\n  if(!forge.options.usePureJavaScript && !options.prng &&\n    bits >= 256 && bits <= 16384 && (e === 0x10001 || e === 3)) {\n    if(callback) {\n      // try native async\n      if(_detectNodeCrypto('generateKeyPair')) {\n        return _crypto.generateKeyPair('rsa', {\n          modulusLength: bits,\n          publicExponent: e,\n          publicKeyEncoding: {\n            type: 'spki',\n            format: 'pem'\n          },\n          privateKeyEncoding: {\n            type: 'pkcs8',\n            format: 'pem'\n          }\n        }, function(err, pub, priv) {\n          if(err) {\n            return callback(err);\n          }\n          callback(null, {\n            privateKey: pki.privateKeyFromPem(priv),\n            publicKey: pki.publicKeyFromPem(pub)\n          });\n        });\n      }\n      if(_detectSubtleCrypto('generateKey') &&\n        _detectSubtleCrypto('exportKey')) {\n        // use standard native generateKey\n        return util.globalScope.crypto.subtle.generateKey({\n          name: 'RSASSA-PKCS1-v1_5',\n          modulusLength: bits,\n          publicExponent: _intToUint8Array(e),\n          hash: {name: 'SHA-256'}\n        }, true /* key can be exported*/, ['sign', 'verify'])\n        .then(function(pair) {\n          return util.globalScope.crypto.subtle.exportKey(\n            'pkcs8', pair.privateKey);\n        // avoiding catch(function(err) {...}) to support IE <= 8\n        }).then(undefined, function(err) {\n          callback(err);\n        }).then(function(pkcs8) {\n          if(pkcs8) {\n            var privateKey = pki.privateKeyFromAsn1(\n              asn1.fromDer(forge.util.createBuffer(pkcs8)));\n            callback(null, {\n              privateKey: privateKey,\n              publicKey: pki.setRsaPublicKey(privateKey.n, privateKey.e)\n            });\n          }\n        });\n      }\n      if(_detectSubtleMsCrypto('generateKey') &&\n        _detectSubtleMsCrypto('exportKey')) {\n        var genOp = util.globalScope.msCrypto.subtle.generateKey({\n          name: 'RSASSA-PKCS1-v1_5',\n          modulusLength: bits,\n          publicExponent: _intToUint8Array(e),\n          hash: {name: 'SHA-256'}\n        }, true /* key can be exported*/, ['sign', 'verify']);\n        genOp.oncomplete = function(e) {\n          var pair = e.target.result;\n          var exportOp = util.globalScope.msCrypto.subtle.exportKey(\n            'pkcs8', pair.privateKey);\n          exportOp.oncomplete = function(e) {\n            var pkcs8 = e.target.result;\n            var privateKey = pki.privateKeyFromAsn1(\n              asn1.fromDer(forge.util.createBuffer(pkcs8)));\n            callback(null, {\n              privateKey: privateKey,\n              publicKey: pki.setRsaPublicKey(privateKey.n, privateKey.e)\n            });\n          };\n          exportOp.onerror = function(err) {\n            callback(err);\n          };\n        };\n        genOp.onerror = function(err) {\n          callback(err);\n        };\n        return;\n      }\n    } else {\n      // try native sync\n      if(_detectNodeCrypto('generateKeyPairSync')) {\n        var keypair = _crypto.generateKeyPairSync('rsa', {\n          modulusLength: bits,\n          publicExponent: e,\n          publicKeyEncoding: {\n            type: 'spki',\n            format: 'pem'\n          },\n          privateKeyEncoding: {\n            type: 'pkcs8',\n            format: 'pem'\n          }\n        });\n        return {\n          privateKey: pki.privateKeyFromPem(keypair.privateKey),\n          publicKey: pki.publicKeyFromPem(keypair.publicKey)\n        };\n      }\n    }\n  }\n\n  // use JavaScript implementation\n  var state = pki.rsa.createKeyPairGenerationState(bits, e, options);\n  if(!callback) {\n    pki.rsa.stepKeyPairGenerationState(state, 0);\n    return state.keys;\n  }\n  _generateKeyPair(state, options, callback);\n};\n\n/**\n * Sets an RSA public key from BigIntegers modulus and exponent.\n *\n * @param n the modulus.\n * @param e the exponent.\n *\n * @return the public key.\n */\npki.setRsaPublicKey = pki.rsa.setPublicKey = function(n, e) {\n  var key = {\n    n: n,\n    e: e\n  };\n\n  /**\n   * Encrypts the given data with this public key. Newer applications\n   * should use the 'RSA-OAEP' decryption scheme, 'RSAES-PKCS1-V1_5' is for\n   * legacy applications.\n   *\n   * @param data the byte string to encrypt.\n   * @param scheme the encryption scheme to use:\n   *          'RSAES-PKCS1-V1_5' (default),\n   *          'RSA-OAEP',\n   *          'RAW', 'NONE', or null to perform raw RSA encryption,\n   *          an object with an 'encode' property set to a function\n   *          with the signature 'function(data, key)' that returns\n   *          a binary-encoded string representing the encoded data.\n   * @param schemeOptions any scheme-specific options.\n   *\n   * @return the encrypted byte string.\n   */\n  key.encrypt = function(data, scheme, schemeOptions) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSAES-PKCS1-V1_5';\n    }\n\n    if(scheme === 'RSAES-PKCS1-V1_5') {\n      scheme = {\n        encode: function(m, key, pub) {\n          return _encodePkcs1_v1_5(m, key, 0x02).getBytes();\n        }\n      };\n    } else if(scheme === 'RSA-OAEP' || scheme === 'RSAES-OAEP') {\n      scheme = {\n        encode: function(m, key) {\n          return forge.pkcs1.encode_rsa_oaep(key, m, schemeOptions);\n        }\n      };\n    } else if(['RAW', 'NONE', 'NULL', null].indexOf(scheme) !== -1) {\n      scheme = {encode: function(e) {return e;}};\n    } else if(typeof scheme === 'string') {\n      throw new Error('Unsupported encryption scheme: \"' + scheme + '\".');\n    }\n\n    // do scheme-based encoding then rsa encryption\n    var e = scheme.encode(data, key, true);\n    return pki.rsa.encrypt(e, key, true);\n  };\n\n  /**\n   * Verifies the given signature against the given digest.\n   *\n   * PKCS#1 supports multiple (currently two) signature schemes:\n   * RSASSA-PKCS1-V1_5 and RSASSA-PSS.\n   *\n   * By default this implementation uses the \"old scheme\", i.e.\n   * RSASSA-PKCS1-V1_5, in which case once RSA-decrypted, the\n   * signature is an OCTET STRING that holds a DigestInfo.\n   *\n   * DigestInfo ::= SEQUENCE {\n   *   digestAlgorithm DigestAlgorithmIdentifier,\n   *   digest Digest\n   * }\n   * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n   * Digest ::= OCTET STRING\n   *\n   * To perform PSS signature verification, provide an instance\n   * of Forge PSS object as the scheme parameter.\n   *\n   * @param digest the message digest hash to compare against the signature,\n   *          as a binary-encoded string.\n   * @param signature the signature to verify, as a binary-encoded string.\n   * @param scheme signature verification scheme to use:\n   *          'RSASSA-PKCS1-V1_5' or undefined for RSASSA PKCS#1 v1.5,\n   *          a Forge PSS object for RSASSA-PSS,\n   *          'NONE' or null for none, DigestInfo will not be expected, but\n   *            PKCS#1 v1.5 padding will still be used.\n   * @param options optional verify options\n   *          _parseAllDigestBytes testing flag to control parsing of all\n   *            digest bytes. Unsupported and not for general usage.\n   *            (default: true)\n   *\n   * @return true if the signature was verified, false if not.\n   */\n  key.verify = function(digest, signature, scheme, options) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSASSA-PKCS1-V1_5';\n    }\n    if(options === undefined) {\n      options = {\n        _parseAllDigestBytes: true\n      };\n    }\n    if(!('_parseAllDigestBytes' in options)) {\n      options._parseAllDigestBytes = true;\n    }\n\n    if(scheme === 'RSASSA-PKCS1-V1_5') {\n      scheme = {\n        verify: function(digest, d) {\n          // remove padding\n          d = _decodePkcs1_v1_5(d, key, true);\n          // d is ASN.1 BER-encoded DigestInfo\n          var obj = asn1.fromDer(d, {\n            parseAllBytes: options._parseAllDigestBytes\n          });\n\n          // validate DigestInfo\n          var capture = {};\n          var errors = [];\n          if(!asn1.validate(obj, digestInfoValidator, capture, errors)) {\n            var error = new Error(\n              'ASN.1 object does not contain a valid RSASSA-PKCS1-v1_5 ' +\n              'DigestInfo value.');\n            error.errors = errors;\n            throw error;\n          }\n          // check hash algorithm identifier\n          // see PKCS1-v1-5DigestAlgorithms in RFC 8017\n          // FIXME: add support to vaidator for strict value choices\n          var oid = asn1.derToOid(capture.algorithmIdentifier);\n          if(!(oid === forge.oids.md2 ||\n            oid === forge.oids.md5 ||\n            oid === forge.oids.sha1 ||\n            oid === forge.oids.sha224 ||\n            oid === forge.oids.sha256 ||\n            oid === forge.oids.sha384 ||\n            oid === forge.oids.sha512 ||\n            oid === forge.oids['sha512-224'] ||\n            oid === forge.oids['sha512-256'])) {\n            var error = new Error(\n              'Unknown RSASSA-PKCS1-v1_5 DigestAlgorithm identifier.');\n            error.oid = oid;\n            throw error;\n          }\n\n          // special check for md2 and md5 that NULL parameters exist\n          if(oid === forge.oids.md2 || oid === forge.oids.md5) {\n            if(!('parameters' in capture)) {\n              throw new Error(\n                'ASN.1 object does not contain a valid RSASSA-PKCS1-v1_5 ' +\n                'DigestInfo value. ' +\n                'Missing algorithm identifer NULL parameters.');\n            }\n          }\n\n          // compare the given digest to the decrypted one\n          return digest === capture.digest;\n        }\n      };\n    } else if(scheme === 'NONE' || scheme === 'NULL' || scheme === null) {\n      scheme = {\n        verify: function(digest, d) {\n          // remove padding\n          d = _decodePkcs1_v1_5(d, key, true);\n          return digest === d;\n        }\n      };\n    }\n\n    // do rsa decryption w/o any decoding, then verify -- which does decoding\n    var d = pki.rsa.decrypt(signature, key, true, false);\n    return scheme.verify(digest, d, key.n.bitLength());\n  };\n\n  return key;\n};\n\n/**\n * Sets an RSA private key from BigIntegers modulus, exponent, primes,\n * prime exponents, and modular multiplicative inverse.\n *\n * @param n the modulus.\n * @param e the public exponent.\n * @param d the private exponent ((inverse of e) mod n).\n * @param p the first prime.\n * @param q the second prime.\n * @param dP exponent1 (d mod (p-1)).\n * @param dQ exponent2 (d mod (q-1)).\n * @param qInv ((inverse of q) mod p)\n *\n * @return the private key.\n */\npki.setRsaPrivateKey = pki.rsa.setPrivateKey = function(\n  n, e, d, p, q, dP, dQ, qInv) {\n  var key = {\n    n: n,\n    e: e,\n    d: d,\n    p: p,\n    q: q,\n    dP: dP,\n    dQ: dQ,\n    qInv: qInv\n  };\n\n  /**\n   * Decrypts the given data with this private key. The decryption scheme\n   * must match the one used to encrypt the data.\n   *\n   * @param data the byte string to decrypt.\n   * @param scheme the decryption scheme to use:\n   *          'RSAES-PKCS1-V1_5' (default),\n   *          'RSA-OAEP',\n   *          'RAW', 'NONE', or null to perform raw RSA decryption.\n   * @param schemeOptions any scheme-specific options.\n   *\n   * @return the decrypted byte string.\n   */\n  key.decrypt = function(data, scheme, schemeOptions) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSAES-PKCS1-V1_5';\n    }\n\n    // do rsa decryption w/o any decoding\n    var d = pki.rsa.decrypt(data, key, false, false);\n\n    if(scheme === 'RSAES-PKCS1-V1_5') {\n      scheme = {decode: _decodePkcs1_v1_5};\n    } else if(scheme === 'RSA-OAEP' || scheme === 'RSAES-OAEP') {\n      scheme = {\n        decode: function(d, key) {\n          return forge.pkcs1.decode_rsa_oaep(key, d, schemeOptions);\n        }\n      };\n    } else if(['RAW', 'NONE', 'NULL', null].indexOf(scheme) !== -1) {\n      scheme = {decode: function(d) {return d;}};\n    } else {\n      throw new Error('Unsupported encryption scheme: \"' + scheme + '\".');\n    }\n\n    // decode according to scheme\n    return scheme.decode(d, key, false);\n  };\n\n  /**\n   * Signs the given digest, producing a signature.\n   *\n   * PKCS#1 supports multiple (currently two) signature schemes:\n   * RSASSA-PKCS1-V1_5 and RSASSA-PSS.\n   *\n   * By default this implementation uses the \"old scheme\", i.e.\n   * RSASSA-PKCS1-V1_5. In order to generate a PSS signature, provide\n   * an instance of Forge PSS object as the scheme parameter.\n   *\n   * @param md the message digest object with the hash to sign.\n   * @param scheme the signature scheme to use:\n   *          'RSASSA-PKCS1-V1_5' or undefined for RSASSA PKCS#1 v1.5,\n   *          a Forge PSS object for RSASSA-PSS,\n   *          'NONE' or null for none, DigestInfo will not be used but\n   *            PKCS#1 v1.5 padding will still be used.\n   *\n   * @return the signature as a byte string.\n   */\n  key.sign = function(md, scheme) {\n    /* Note: The internal implementation of RSA operations is being\n      transitioned away from a PKCS#1 v1.5 hard-coded scheme. Some legacy\n      code like the use of an encoding block identifier 'bt' will eventually\n      be removed. */\n\n    // private key operation\n    var bt = false;\n\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    }\n\n    if(scheme === undefined || scheme === 'RSASSA-PKCS1-V1_5') {\n      scheme = {encode: emsaPkcs1v15encode};\n      bt = 0x01;\n    } else if(scheme === 'NONE' || scheme === 'NULL' || scheme === null) {\n      scheme = {encode: function() {return md;}};\n      bt = 0x01;\n    }\n\n    // encode and then encrypt\n    var d = scheme.encode(md, key.n.bitLength());\n    return pki.rsa.encrypt(d, key, bt);\n  };\n\n  return key;\n};\n\n/**\n * Wraps an RSAPrivateKey ASN.1 object in an ASN.1 PrivateKeyInfo object.\n *\n * @param rsaKey the ASN.1 RSAPrivateKey.\n *\n * @return the ASN.1 PrivateKeyInfo.\n */\npki.wrapRsaPrivateKey = function(rsaKey) {\n  // PrivateKeyInfo\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (0)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(0).getBytes()),\n    // privateKeyAlgorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(pki.oids.rsaEncryption).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // PrivateKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      asn1.toDer(rsaKey).getBytes())\n  ]);\n};\n\n/**\n * Converts a private key from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a PrivateKeyInfo containing an\n *          RSAPrivateKey or an RSAPrivateKey.\n *\n * @return the private key.\n */\npki.privateKeyFromAsn1 = function(obj) {\n  // get PrivateKeyInfo\n  var capture = {};\n  var errors = [];\n  if(asn1.validate(obj, privateKeyValidator, capture, errors)) {\n    obj = asn1.fromDer(forge.util.createBuffer(capture.privateKey));\n  }\n\n  // get RSAPrivateKey\n  capture = {};\n  errors = [];\n  if(!asn1.validate(obj, rsaPrivateKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read private key. ' +\n      'ASN.1 object does not contain an RSAPrivateKey.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // Note: Version is currently ignored.\n  // capture.privateKeyVersion\n  // FIXME: inefficient, get a BigInteger that uses byte strings\n  var n, e, d, p, q, dP, dQ, qInv;\n  n = forge.util.createBuffer(capture.privateKeyModulus).toHex();\n  e = forge.util.createBuffer(capture.privateKeyPublicExponent).toHex();\n  d = forge.util.createBuffer(capture.privateKeyPrivateExponent).toHex();\n  p = forge.util.createBuffer(capture.privateKeyPrime1).toHex();\n  q = forge.util.createBuffer(capture.privateKeyPrime2).toHex();\n  dP = forge.util.createBuffer(capture.privateKeyExponent1).toHex();\n  dQ = forge.util.createBuffer(capture.privateKeyExponent2).toHex();\n  qInv = forge.util.createBuffer(capture.privateKeyCoefficient).toHex();\n\n  // set private key\n  return pki.setRsaPrivateKey(\n    new BigInteger(n, 16),\n    new BigInteger(e, 16),\n    new BigInteger(d, 16),\n    new BigInteger(p, 16),\n    new BigInteger(q, 16),\n    new BigInteger(dP, 16),\n    new BigInteger(dQ, 16),\n    new BigInteger(qInv, 16));\n};\n\n/**\n * Converts a private key to an ASN.1 RSAPrivateKey.\n *\n * @param key the private key.\n *\n * @return the ASN.1 representation of an RSAPrivateKey.\n */\npki.privateKeyToAsn1 = pki.privateKeyToRSAPrivateKey = function(key) {\n  // RSAPrivateKey\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (0 = only 2 primes, 1 multiple primes)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(0).getBytes()),\n    // modulus (n)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.n)),\n    // publicExponent (e)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.e)),\n    // privateExponent (d)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.d)),\n    // privateKeyPrime1 (p)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.p)),\n    // privateKeyPrime2 (q)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.q)),\n    // privateKeyExponent1 (dP)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.dP)),\n    // privateKeyExponent2 (dQ)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.dQ)),\n    // coefficient (qInv)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.qInv))\n  ]);\n};\n\n/**\n * Converts a public key from an ASN.1 SubjectPublicKeyInfo or RSAPublicKey.\n *\n * @param obj the asn1 representation of a SubjectPublicKeyInfo or RSAPublicKey.\n *\n * @return the public key.\n */\npki.publicKeyFromAsn1 = function(obj) {\n  // get SubjectPublicKeyInfo\n  var capture = {};\n  var errors = [];\n  if(asn1.validate(obj, publicKeyValidator, capture, errors)) {\n    // get oid\n    var oid = asn1.derToOid(capture.publicKeyOid);\n    if(oid !== pki.oids.rsaEncryption) {\n      var error = new Error('Cannot read public key. Unknown OID.');\n      error.oid = oid;\n      throw error;\n    }\n    obj = capture.rsaPublicKey;\n  }\n\n  // get RSA params\n  errors = [];\n  if(!asn1.validate(obj, rsaPublicKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read public key. ' +\n      'ASN.1 object does not contain an RSAPublicKey.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // FIXME: inefficient, get a BigInteger that uses byte strings\n  var n = forge.util.createBuffer(capture.publicKeyModulus).toHex();\n  var e = forge.util.createBuffer(capture.publicKeyExponent).toHex();\n\n  // set public key\n  return pki.setRsaPublicKey(\n    new BigInteger(n, 16),\n    new BigInteger(e, 16));\n};\n\n/**\n * Converts a public key to an ASN.1 SubjectPublicKeyInfo.\n *\n * @param key the public key.\n *\n * @return the asn1 representation of a SubjectPublicKeyInfo.\n */\npki.publicKeyToAsn1 = pki.publicKeyToSubjectPublicKeyInfo = function(key) {\n  // SubjectPublicKeyInfo\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // AlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(pki.oids.rsaEncryption).getBytes()),\n      // parameters (null)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // subjectPublicKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, [\n      pki.publicKeyToRSAPublicKey(key)\n    ])\n  ]);\n};\n\n/**\n * Converts a public key to an ASN.1 RSAPublicKey.\n *\n * @param key the public key.\n *\n * @return the asn1 representation of a RSAPublicKey.\n */\npki.publicKeyToRSAPublicKey = function(key) {\n  // RSAPublicKey\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // modulus (n)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.n)),\n    // publicExponent (e)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.e))\n  ]);\n};\n\n/**\n * Encodes a message using PKCS#1 v1.5 padding.\n *\n * @param m the message to encode.\n * @param key the RSA key to use.\n * @param bt the block type to use, i.e. either 0x01 (for signing) or 0x02\n *          (for encryption).\n *\n * @return the padded byte buffer.\n */\nfunction _encodePkcs1_v1_5(m, key, bt) {\n  var eb = forge.util.createBuffer();\n\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  /* use PKCS#1 v1.5 padding */\n  if(m.length > (k - 11)) {\n    var error = new Error('Message is too long for PKCS#1 v1.5 padding.');\n    error.length = m.length;\n    error.max = k - 11;\n    throw error;\n  }\n\n  /* A block type BT, a padding string PS, and the data D shall be\n    formatted into an octet string EB, the encryption block:\n\n    EB = 00 || BT || PS || 00 || D\n\n    The block type BT shall be a single octet indicating the structure of\n    the encryption block. For this version of the document it shall have\n    value 00, 01, or 02. For a private-key operation, the block type\n    shall be 00 or 01. For a public-key operation, it shall be 02.\n\n    The padding string PS shall consist of k-3-||D|| octets. For block\n    type 00, the octets shall have value 00; for block type 01, they\n    shall have value FF; and for block type 02, they shall be\n    pseudorandomly generated and nonzero. This makes the length of the\n    encryption block EB equal to k. */\n\n  // build the encryption block\n  eb.putByte(0x00);\n  eb.putByte(bt);\n\n  // create the padding\n  var padNum = k - 3 - m.length;\n  var padByte;\n  // private key op\n  if(bt === 0x00 || bt === 0x01) {\n    padByte = (bt === 0x00) ? 0x00 : 0xFF;\n    for(var i = 0; i < padNum; ++i) {\n      eb.putByte(padByte);\n    }\n  } else {\n    // public key op\n    // pad with random non-zero values\n    while(padNum > 0) {\n      var numZeros = 0;\n      var padBytes = forge.random.getBytes(padNum);\n      for(var i = 0; i < padNum; ++i) {\n        padByte = padBytes.charCodeAt(i);\n        if(padByte === 0) {\n          ++numZeros;\n        } else {\n          eb.putByte(padByte);\n        }\n      }\n      padNum = numZeros;\n    }\n  }\n\n  // zero followed by message\n  eb.putByte(0x00);\n  eb.putBytes(m);\n\n  return eb;\n}\n\n/**\n * Decodes a message using PKCS#1 v1.5 padding.\n *\n * @param em the message to decode.\n * @param key the RSA key to use.\n * @param pub true if the key is a public key, false if it is private.\n * @param ml the message length, if specified.\n *\n * @return the decoded bytes.\n */\nfunction _decodePkcs1_v1_5(em, key, pub, ml) {\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  /* It is an error if any of the following conditions occurs:\n\n    1. The encryption block EB cannot be parsed unambiguously.\n    2. The padding string PS consists of fewer than eight octets\n      or is inconsisent with the block type BT.\n    3. The decryption process is a public-key operation and the block\n      type BT is not 00 or 01, or the decryption process is a\n      private-key operation and the block type is not 02.\n   */\n\n  // parse the encryption block\n  var eb = forge.util.createBuffer(em);\n  var first = eb.getByte();\n  var bt = eb.getByte();\n  if(first !== 0x00 ||\n    (pub && bt !== 0x00 && bt !== 0x01) ||\n    (!pub && bt != 0x02) ||\n    (pub && bt === 0x00 && typeof(ml) === 'undefined')) {\n    throw new Error('Encryption block is invalid.');\n  }\n\n  var padNum = 0;\n  if(bt === 0x00) {\n    // check all padding bytes for 0x00\n    padNum = k - 3 - ml;\n    for(var i = 0; i < padNum; ++i) {\n      if(eb.getByte() !== 0x00) {\n        throw new Error('Encryption block is invalid.');\n      }\n    }\n  } else if(bt === 0x01) {\n    // find the first byte that isn't 0xFF, should be after all padding\n    padNum = 0;\n    while(eb.length() > 1) {\n      if(eb.getByte() !== 0xFF) {\n        --eb.read;\n        break;\n      }\n      ++padNum;\n    }\n  } else if(bt === 0x02) {\n    // look for 0x00 byte\n    padNum = 0;\n    while(eb.length() > 1) {\n      if(eb.getByte() === 0x00) {\n        --eb.read;\n        break;\n      }\n      ++padNum;\n    }\n  }\n\n  // zero must be 0x00 and padNum must be (k - 3 - message length)\n  var zero = eb.getByte();\n  if(zero !== 0x00 || padNum !== (k - 3 - eb.length())) {\n    throw new Error('Encryption block is invalid.');\n  }\n\n  return eb.getBytes();\n}\n\n/**\n * Runs the key-generation algorithm asynchronously, either in the background\n * via Web Workers, or using the main thread and setImmediate.\n *\n * @param state the key-pair generation state.\n * @param [options] options for key-pair generation:\n *          workerScript the worker script URL.\n *          workers the number of web workers (if supported) to use,\n *            (default: 2, -1 to use estimated cores minus one).\n *          workLoad the size of the work load, ie: number of possible prime\n *            numbers for each web worker to check per work assignment,\n *            (default: 100).\n * @param callback(err, keypair) called once the operation completes.\n */\nfunction _generateKeyPair(state, options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  var opts = {\n    algorithm: {\n      name: options.algorithm || 'PRIMEINC',\n      options: {\n        workers: options.workers || 2,\n        workLoad: options.workLoad || 100,\n        workerScript: options.workerScript\n      }\n    }\n  };\n  if('prng' in options) {\n    opts.prng = options.prng;\n  }\n\n  generate();\n\n  function generate() {\n    // find p and then q (done in series to simplify)\n    getPrime(state.pBits, function(err, num) {\n      if(err) {\n        return callback(err);\n      }\n      state.p = num;\n      if(state.q !== null) {\n        return finish(err, state.q);\n      }\n      getPrime(state.qBits, finish);\n    });\n  }\n\n  function getPrime(bits, callback) {\n    forge.prime.generateProbablePrime(bits, opts, callback);\n  }\n\n  function finish(err, num) {\n    if(err) {\n      return callback(err);\n    }\n\n    // set q\n    state.q = num;\n\n    // ensure p is larger than q (swap them if not)\n    if(state.p.compareTo(state.q) < 0) {\n      var tmp = state.p;\n      state.p = state.q;\n      state.q = tmp;\n    }\n\n    // ensure p is coprime with e\n    if(state.p.subtract(BigInteger.ONE).gcd(state.e)\n      .compareTo(BigInteger.ONE) !== 0) {\n      state.p = null;\n      generate();\n      return;\n    }\n\n    // ensure q is coprime with e\n    if(state.q.subtract(BigInteger.ONE).gcd(state.e)\n      .compareTo(BigInteger.ONE) !== 0) {\n      state.q = null;\n      getPrime(state.qBits, finish);\n      return;\n    }\n\n    // compute phi: (p - 1)(q - 1) (Euler's totient function)\n    state.p1 = state.p.subtract(BigInteger.ONE);\n    state.q1 = state.q.subtract(BigInteger.ONE);\n    state.phi = state.p1.multiply(state.q1);\n\n    // ensure e and phi are coprime\n    if(state.phi.gcd(state.e).compareTo(BigInteger.ONE) !== 0) {\n      // phi and e aren't coprime, so generate a new p and q\n      state.p = state.q = null;\n      generate();\n      return;\n    }\n\n    // create n, ensure n is has the right number of bits\n    state.n = state.p.multiply(state.q);\n    if(state.n.bitLength() !== state.bits) {\n      // failed, get new q\n      state.q = null;\n      getPrime(state.qBits, finish);\n      return;\n    }\n\n    // set keys\n    var d = state.e.modInverse(state.phi);\n    state.keys = {\n      privateKey: pki.rsa.setPrivateKey(\n        state.n, state.e, d, state.p, state.q,\n        d.mod(state.p1), d.mod(state.q1),\n        state.q.modInverse(state.p)),\n      publicKey: pki.rsa.setPublicKey(state.n, state.e)\n    };\n\n    callback(null, state.keys);\n  }\n}\n\n/**\n * Converts a positive BigInteger into 2's-complement big-endian bytes.\n *\n * @param b the big integer to convert.\n *\n * @return the bytes.\n */\nfunction _bnToBytes(b) {\n  // prepend 0x00 if first byte >= 0x80\n  var hex = b.toString(16);\n  if(hex[0] >= '8') {\n    hex = '00' + hex;\n  }\n  var bytes = forge.util.hexToBytes(hex);\n\n  // ensure integer is minimally-encoded\n  if(bytes.length > 1 &&\n    // leading 0x00 for positive integer\n    ((bytes.charCodeAt(0) === 0 &&\n    (bytes.charCodeAt(1) & 0x80) === 0) ||\n    // leading 0xFF for negative integer\n    (bytes.charCodeAt(0) === 0xFF &&\n    (bytes.charCodeAt(1) & 0x80) === 0x80))) {\n    return bytes.substr(1);\n  }\n  return bytes;\n}\n\n/**\n * Returns the required number of Miller-Rabin tests to generate a\n * prime with an error probability of (1/2)^80.\n *\n * See Handbook of Applied Cryptography Chapter 4, Table 4.4.\n *\n * @param bits the bit size.\n *\n * @return the required number of iterations.\n */\nfunction _getMillerRabinTests(bits) {\n  if(bits <= 100) return 27;\n  if(bits <= 150) return 18;\n  if(bits <= 200) return 15;\n  if(bits <= 250) return 12;\n  if(bits <= 300) return 9;\n  if(bits <= 350) return 8;\n  if(bits <= 400) return 7;\n  if(bits <= 500) return 6;\n  if(bits <= 600) return 5;\n  if(bits <= 800) return 4;\n  if(bits <= 1250) return 3;\n  return 2;\n}\n\n/**\n * Performs feature detection on the Node crypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectNodeCrypto(fn) {\n  return forge.util.isNodejs && typeof _crypto[fn] === 'function';\n}\n\n/**\n * Performs feature detection on the SubtleCrypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectSubtleCrypto(fn) {\n  return (typeof util.globalScope !== 'undefined' &&\n    typeof util.globalScope.crypto === 'object' &&\n    typeof util.globalScope.crypto.subtle === 'object' &&\n    typeof util.globalScope.crypto.subtle[fn] === 'function');\n}\n\n/**\n * Performs feature detection on the deprecated Microsoft Internet Explorer\n * outdated SubtleCrypto interface. This function should only be used after\n * checking for the modern, standard SubtleCrypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectSubtleMsCrypto(fn) {\n  return (typeof util.globalScope !== 'undefined' &&\n    typeof util.globalScope.msCrypto === 'object' &&\n    typeof util.globalScope.msCrypto.subtle === 'object' &&\n    typeof util.globalScope.msCrypto.subtle[fn] === 'function');\n}\n\nfunction _intToUint8Array(x) {\n  var bytes = forge.util.hexToBytes(x.toString(16));\n  var buffer = new Uint8Array(bytes.length);\n  for(var i = 0; i < bytes.length; ++i) {\n    buffer[i] = bytes.charCodeAt(i);\n  }\n  return buffer;\n}\n\nfunction _privateKeyFromJwk(jwk) {\n  if(jwk.kty !== 'RSA') {\n    throw new Error(\n      'Unsupported key algorithm \"' + jwk.kty + '\"; algorithm must be \"RSA\".');\n  }\n  return pki.setRsaPrivateKey(\n    _base64ToBigInt(jwk.n),\n    _base64ToBigInt(jwk.e),\n    _base64ToBigInt(jwk.d),\n    _base64ToBigInt(jwk.p),\n    _base64ToBigInt(jwk.q),\n    _base64ToBigInt(jwk.dp),\n    _base64ToBigInt(jwk.dq),\n    _base64ToBigInt(jwk.qi));\n}\n\nfunction _publicKeyFromJwk(jwk) {\n  if(jwk.kty !== 'RSA') {\n    throw new Error('Key algorithm must be \"RSA\".');\n  }\n  return pki.setRsaPublicKey(\n    _base64ToBigInt(jwk.n),\n    _base64ToBigInt(jwk.e));\n}\n\nfunction _base64ToBigInt(b64) {\n  return new BigInteger(forge.util.bytesToHex(forge.util.decode64(b64)), 16);\n}\n","/**\n * Secure Hash Algorithm with 160-bit digest (SHA-1) implementation.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar sha1 = module.exports = forge.sha1 = forge.sha1 || {};\nforge.md.sha1 = forge.md.algorithms.sha1 = sha1;\n\n/**\n * Creates a SHA-1 message digest object.\n *\n * @return a message digest object.\n */\nsha1.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // SHA-1 state contains five 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(80);\n\n  // message digest object\n  var md = {\n    algorithm: 'sha1',\n    blockLength: 64,\n    digestLength: 20,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x67452301,\n      h1: 0xEFCDAB89,\n      h2: 0x98BADCFE,\n      h3: 0x10325476,\n      h4: 0xC3D2E1F0\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-1 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3,\n      h4: _state.h4\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32(s2.h0);\n    rval.putInt32(s2.h1);\n    rval.putInt32(s2.h2);\n    rval.putInt32(s2.h3);\n    rval.putInt32(s2.h4);\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-1 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-1 state with the given byte buffer.\n *\n * @param s the SHA-1 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t, a, b, c, d, e, f, i;\n  var len = bytes.length();\n  while(len >= 64) {\n    // the w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 80 32-bit words according to SHA-1 algorithm\n    // and for 32-79 using Max Locktyukhin's optimization\n\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n\n    // round 1\n    for(i = 0; i < 16; ++i) {\n      t = bytes.getInt32();\n      w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    for(; i < 20; ++i) {\n      t = (w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 2\n    for(; i < 32; ++i) {\n      t = (w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    for(; i < 40; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 3\n    for(; i < 60; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = (b & c) | (d & (b ^ c));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x8F1BBCDC + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 4\n    for(; i < 80; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0xCA62C1D6 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n\n    len -= 64;\n  }\n}\n","/**\n * Secure Hash Algorithm with 256-bit digest (SHA-256) implementation.\n *\n * See FIPS 180-2 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar sha256 = module.exports = forge.sha256 = forge.sha256 || {};\nforge.md.sha256 = forge.md.algorithms.sha256 = sha256;\n\n/**\n * Creates a SHA-256 message digest object.\n *\n * @return a message digest object.\n */\nsha256.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // SHA-256 state contains eight 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(64);\n\n  // message digest object\n  var md = {\n    algorithm: 'sha256',\n    blockLength: 64,\n    digestLength: 32,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x6A09E667,\n      h1: 0xBB67AE85,\n      h2: 0x3C6EF372,\n      h3: 0xA54FF53A,\n      h4: 0x510E527F,\n      h5: 0x9B05688C,\n      h6: 0x1F83D9AB,\n      h7: 0x5BE0CD19\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-256 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3,\n      h4: _state.h4,\n      h5: _state.h5,\n      h6: _state.h6,\n      h7: _state.h7\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32(s2.h0);\n    rval.putInt32(s2.h1);\n    rval.putInt32(s2.h2);\n    rval.putInt32(s2.h3);\n    rval.putInt32(s2.h4);\n    rval.putInt32(s2.h5);\n    rval.putInt32(s2.h6);\n    rval.putInt32(s2.h7);\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-256 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n// table of constants\nvar _k = null;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // create K table for SHA-256\n  _k = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n    0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n    0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n    0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n    0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n    0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n    0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-256 state with the given byte buffer.\n *\n * @param s the SHA-256 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t1, t2, s0, s1, ch, maj, i, a, b, c, d, e, f, g, h;\n  var len = bytes.length();\n  while(len >= 64) {\n    // the w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 64 32-bit words according to SHA-256\n    for(i = 0; i < 16; ++i) {\n      w[i] = bytes.getInt32();\n    }\n    for(; i < 64; ++i) {\n      // XOR word 2 words ago rot right 17, rot right 19, shft right 10\n      t1 = w[i - 2];\n      t1 =\n        ((t1 >>> 17) | (t1 << 15)) ^\n        ((t1 >>> 19) | (t1 << 13)) ^\n        (t1 >>> 10);\n      // XOR word 15 words ago rot right 7, rot right 18, shft right 3\n      t2 = w[i - 15];\n      t2 =\n        ((t2 >>> 7) | (t2 << 25)) ^\n        ((t2 >>> 18) | (t2 << 14)) ^\n        (t2 >>> 3);\n      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^32\n      w[i] = (t1 + w[i - 7] + t2 + w[i - 16]) | 0;\n    }\n\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n    f = s.h5;\n    g = s.h6;\n    h = s.h7;\n\n    // round function\n    for(i = 0; i < 64; ++i) {\n      // Sum1(e)\n      s1 =\n        ((e >>> 6) | (e << 26)) ^\n        ((e >>> 11) | (e << 21)) ^\n        ((e >>> 25) | (e << 7));\n      // Ch(e, f, g) (optimized the same way as SHA-1)\n      ch = g ^ (e & (f ^ g));\n      // Sum0(a)\n      s0 =\n        ((a >>> 2) | (a << 30)) ^\n        ((a >>> 13) | (a << 19)) ^\n        ((a >>> 22) | (a << 10));\n      // Maj(a, b, c) (optimized the same way as SHA-1)\n      maj = (a & b) | (c & (a ^ b));\n\n      // main algorithm\n      t1 = h + s1 + ch + _k[i] + w[i];\n      t2 = s0 + maj;\n      h = g;\n      g = f;\n      f = e;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      // can't truncate with `| 0`\n      e = (d + t1) >>> 0;\n      d = c;\n      c = b;\n      b = a;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      // can't truncate with `| 0`\n      a = (t1 + t2) >>> 0;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n    s.h5 = (s.h5 + f) | 0;\n    s.h6 = (s.h6 + g) | 0;\n    s.h7 = (s.h7 + h) | 0;\n    len -= 64;\n  }\n}\n","/**\n * Secure Hash Algorithm with a 1024-bit block size implementation.\n *\n * This includes: SHA-512, SHA-384, SHA-512/224, and SHA-512/256. For\n * SHA-256 (block size 512 bits), see sha256.js.\n *\n * See FIPS 180-4 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2014-2015 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar sha512 = module.exports = forge.sha512 = forge.sha512 || {};\n\n// SHA-512\nforge.md.sha512 = forge.md.algorithms.sha512 = sha512;\n\n// SHA-384\nvar sha384 = forge.sha384 = forge.sha512.sha384 = forge.sha512.sha384 || {};\nsha384.create = function() {\n  return sha512.create('SHA-384');\n};\nforge.md.sha384 = forge.md.algorithms.sha384 = sha384;\n\n// SHA-512/256\nforge.sha512.sha256 = forge.sha512.sha256 || {\n  create: function() {\n    return sha512.create('SHA-512/256');\n  }\n};\nforge.md['sha512/256'] = forge.md.algorithms['sha512/256'] =\n  forge.sha512.sha256;\n\n// SHA-512/224\nforge.sha512.sha224 = forge.sha512.sha224 || {\n  create: function() {\n    return sha512.create('SHA-512/224');\n  }\n};\nforge.md['sha512/224'] = forge.md.algorithms['sha512/224'] =\n  forge.sha512.sha224;\n\n/**\n * Creates a SHA-2 message digest object.\n *\n * @param algorithm the algorithm to use (SHA-512, SHA-384, SHA-512/224,\n *          SHA-512/256).\n *\n * @return a message digest object.\n */\nsha512.create = function(algorithm) {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  if(typeof algorithm === 'undefined') {\n    algorithm = 'SHA-512';\n  }\n\n  if(!(algorithm in _states)) {\n    throw new Error('Invalid SHA-512 algorithm: ' + algorithm);\n  }\n\n  // SHA-512 state contains eight 64-bit integers (each as two 32-bit ints)\n  var _state = _states[algorithm];\n  var _h = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for 64-bit word storage\n  var _w = new Array(80);\n  for(var wi = 0; wi < 80; ++wi) {\n    _w[wi] = new Array(2);\n  }\n\n  // determine digest length by algorithm name (default)\n  var digestLength = 64;\n  switch(algorithm) {\n    case 'SHA-384':\n      digestLength = 48;\n      break;\n    case 'SHA-512/256':\n      digestLength = 32;\n      break;\n    case 'SHA-512/224':\n      digestLength = 28;\n      break;\n  }\n\n  // message digest object\n  var md = {\n    // SHA-512 => sha512\n    algorithm: algorithm.replace('-', '').toLowerCase(),\n    blockLength: 128,\n    digestLength: digestLength,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 16\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength128 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength128 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _h = new Array(_state.length);\n    for(var i = 0; i < _state.length; ++i) {\n      _h[i] = _state[i].slice(0);\n    }\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_h, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-512 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 896 mod 1024. In other words,\n    the data to be digested must be a multiple of 1024 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 16 bytes (128\n    bits), that means that the last segment of the data must have 112 bytes\n    (896 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 896 mod 1024 because\n    1024 - 128 = 896.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 896 mod 1024, then 1024 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var h = new Array(_h.length);\n    for(var i = 0; i < _h.length; ++i) {\n      h[i] = _h[i].slice(0);\n    }\n    _update(h, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    var hlen;\n    if(algorithm === 'SHA-512') {\n      hlen = h.length;\n    } else if(algorithm === 'SHA-384') {\n      hlen = h.length - 2;\n    } else {\n      hlen = h.length - 4;\n    }\n    for(var i = 0; i < hlen; ++i) {\n      rval.putInt32(h[i][0]);\n      if(i !== hlen - 1 || algorithm !== 'SHA-512/224') {\n        rval.putInt32(h[i][1]);\n      }\n    }\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-512 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n// table of constants\nvar _k = null;\n\n// initial hash states\nvar _states = null;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 128);\n\n  // create K table for SHA-512\n  _k = [\n    [0x428a2f98, 0xd728ae22], [0x71374491, 0x23ef65cd],\n    [0xb5c0fbcf, 0xec4d3b2f], [0xe9b5dba5, 0x8189dbbc],\n    [0x3956c25b, 0xf348b538], [0x59f111f1, 0xb605d019],\n    [0x923f82a4, 0xaf194f9b], [0xab1c5ed5, 0xda6d8118],\n    [0xd807aa98, 0xa3030242], [0x12835b01, 0x45706fbe],\n    [0x243185be, 0x4ee4b28c], [0x550c7dc3, 0xd5ffb4e2],\n    [0x72be5d74, 0xf27b896f], [0x80deb1fe, 0x3b1696b1],\n    [0x9bdc06a7, 0x25c71235], [0xc19bf174, 0xcf692694],\n    [0xe49b69c1, 0x9ef14ad2], [0xefbe4786, 0x384f25e3],\n    [0x0fc19dc6, 0x8b8cd5b5], [0x240ca1cc, 0x77ac9c65],\n    [0x2de92c6f, 0x592b0275], [0x4a7484aa, 0x6ea6e483],\n    [0x5cb0a9dc, 0xbd41fbd4], [0x76f988da, 0x831153b5],\n    [0x983e5152, 0xee66dfab], [0xa831c66d, 0x2db43210],\n    [0xb00327c8, 0x98fb213f], [0xbf597fc7, 0xbeef0ee4],\n    [0xc6e00bf3, 0x3da88fc2], [0xd5a79147, 0x930aa725],\n    [0x06ca6351, 0xe003826f], [0x14292967, 0x0a0e6e70],\n    [0x27b70a85, 0x46d22ffc], [0x2e1b2138, 0x5c26c926],\n    [0x4d2c6dfc, 0x5ac42aed], [0x53380d13, 0x9d95b3df],\n    [0x650a7354, 0x8baf63de], [0x766a0abb, 0x3c77b2a8],\n    [0x81c2c92e, 0x47edaee6], [0x92722c85, 0x1482353b],\n    [0xa2bfe8a1, 0x4cf10364], [0xa81a664b, 0xbc423001],\n    [0xc24b8b70, 0xd0f89791], [0xc76c51a3, 0x0654be30],\n    [0xd192e819, 0xd6ef5218], [0xd6990624, 0x5565a910],\n    [0xf40e3585, 0x5771202a], [0x106aa070, 0x32bbd1b8],\n    [0x19a4c116, 0xb8d2d0c8], [0x1e376c08, 0x5141ab53],\n    [0x2748774c, 0xdf8eeb99], [0x34b0bcb5, 0xe19b48a8],\n    [0x391c0cb3, 0xc5c95a63], [0x4ed8aa4a, 0xe3418acb],\n    [0x5b9cca4f, 0x7763e373], [0x682e6ff3, 0xd6b2b8a3],\n    [0x748f82ee, 0x5defb2fc], [0x78a5636f, 0x43172f60],\n    [0x84c87814, 0xa1f0ab72], [0x8cc70208, 0x1a6439ec],\n    [0x90befffa, 0x23631e28], [0xa4506ceb, 0xde82bde9],\n    [0xbef9a3f7, 0xb2c67915], [0xc67178f2, 0xe372532b],\n    [0xca273ece, 0xea26619c], [0xd186b8c7, 0x21c0c207],\n    [0xeada7dd6, 0xcde0eb1e], [0xf57d4f7f, 0xee6ed178],\n    [0x06f067aa, 0x72176fba], [0x0a637dc5, 0xa2c898a6],\n    [0x113f9804, 0xbef90dae], [0x1b710b35, 0x131c471b],\n    [0x28db77f5, 0x23047d84], [0x32caab7b, 0x40c72493],\n    [0x3c9ebe0a, 0x15c9bebc], [0x431d67c4, 0x9c100d4c],\n    [0x4cc5d4be, 0xcb3e42b6], [0x597f299c, 0xfc657e2a],\n    [0x5fcb6fab, 0x3ad6faec], [0x6c44198c, 0x4a475817]\n  ];\n\n  // initial hash states\n  _states = {};\n  _states['SHA-512'] = [\n    [0x6a09e667, 0xf3bcc908],\n    [0xbb67ae85, 0x84caa73b],\n    [0x3c6ef372, 0xfe94f82b],\n    [0xa54ff53a, 0x5f1d36f1],\n    [0x510e527f, 0xade682d1],\n    [0x9b05688c, 0x2b3e6c1f],\n    [0x1f83d9ab, 0xfb41bd6b],\n    [0x5be0cd19, 0x137e2179]\n  ];\n  _states['SHA-384'] = [\n    [0xcbbb9d5d, 0xc1059ed8],\n    [0x629a292a, 0x367cd507],\n    [0x9159015a, 0x3070dd17],\n    [0x152fecd8, 0xf70e5939],\n    [0x67332667, 0xffc00b31],\n    [0x8eb44a87, 0x68581511],\n    [0xdb0c2e0d, 0x64f98fa7],\n    [0x47b5481d, 0xbefa4fa4]\n  ];\n  _states['SHA-512/256'] = [\n    [0x22312194, 0xFC2BF72C],\n    [0x9F555FA3, 0xC84C64C2],\n    [0x2393B86B, 0x6F53B151],\n    [0x96387719, 0x5940EABD],\n    [0x96283EE2, 0xA88EFFE3],\n    [0xBE5E1E25, 0x53863992],\n    [0x2B0199FC, 0x2C85B8AA],\n    [0x0EB72DDC, 0x81C52CA2]\n  ];\n  _states['SHA-512/224'] = [\n    [0x8C3D37C8, 0x19544DA2],\n    [0x73E19966, 0x89DCD4D6],\n    [0x1DFAB7AE, 0x32FF9C82],\n    [0x679DD514, 0x582F9FCF],\n    [0x0F6D2B69, 0x7BD44DA8],\n    [0x77E36F73, 0x04C48942],\n    [0x3F9D85A8, 0x6A1D36C8],\n    [0x1112E6AD, 0x91D692A1]\n  ];\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-512 state with the given byte buffer.\n *\n * @param s the SHA-512 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (128 byte) chunks\n  var t1_hi, t1_lo;\n  var t2_hi, t2_lo;\n  var s0_hi, s0_lo;\n  var s1_hi, s1_lo;\n  var ch_hi, ch_lo;\n  var maj_hi, maj_lo;\n  var a_hi, a_lo;\n  var b_hi, b_lo;\n  var c_hi, c_lo;\n  var d_hi, d_lo;\n  var e_hi, e_lo;\n  var f_hi, f_lo;\n  var g_hi, g_lo;\n  var h_hi, h_lo;\n  var i, hi, lo, w2, w7, w15, w16;\n  var len = bytes.length();\n  while(len >= 128) {\n    // the w array will be populated with sixteen 64-bit big-endian words\n    // and then extended into 64 64-bit words according to SHA-512\n    for(i = 0; i < 16; ++i) {\n      w[i][0] = bytes.getInt32() >>> 0;\n      w[i][1] = bytes.getInt32() >>> 0;\n    }\n    for(; i < 80; ++i) {\n      // for word 2 words ago: ROTR 19(x) ^ ROTR 61(x) ^ SHR 6(x)\n      w2 = w[i - 2];\n      hi = w2[0];\n      lo = w2[1];\n\n      // high bits\n      t1_hi = (\n        ((hi >>> 19) | (lo << 13)) ^ // ROTR 19\n        ((lo >>> 29) | (hi << 3)) ^ // ROTR 61/(swap + ROTR 29)\n        (hi >>> 6)) >>> 0; // SHR 6\n      // low bits\n      t1_lo = (\n        ((hi << 13) | (lo >>> 19)) ^ // ROTR 19\n        ((lo << 3) | (hi >>> 29)) ^ // ROTR 61/(swap + ROTR 29)\n        ((hi << 26) | (lo >>> 6))) >>> 0; // SHR 6\n\n      // for word 15 words ago: ROTR 1(x) ^ ROTR 8(x) ^ SHR 7(x)\n      w15 = w[i - 15];\n      hi = w15[0];\n      lo = w15[1];\n\n      // high bits\n      t2_hi = (\n        ((hi >>> 1) | (lo << 31)) ^ // ROTR 1\n        ((hi >>> 8) | (lo << 24)) ^ // ROTR 8\n        (hi >>> 7)) >>> 0; // SHR 7\n      // low bits\n      t2_lo = (\n        ((hi << 31) | (lo >>> 1)) ^ // ROTR 1\n        ((hi << 24) | (lo >>> 8)) ^ // ROTR 8\n        ((hi << 25) | (lo >>> 7))) >>> 0; // SHR 7\n\n      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^64 (carry lo overflow)\n      w7 = w[i - 7];\n      w16 = w[i - 16];\n      lo = (t1_lo + w7[1] + t2_lo + w16[1]);\n      w[i][0] = (t1_hi + w7[0] + t2_hi + w16[0] +\n        ((lo / 0x100000000) >>> 0)) >>> 0;\n      w[i][1] = lo >>> 0;\n    }\n\n    // initialize hash value for this chunk\n    a_hi = s[0][0];\n    a_lo = s[0][1];\n    b_hi = s[1][0];\n    b_lo = s[1][1];\n    c_hi = s[2][0];\n    c_lo = s[2][1];\n    d_hi = s[3][0];\n    d_lo = s[3][1];\n    e_hi = s[4][0];\n    e_lo = s[4][1];\n    f_hi = s[5][0];\n    f_lo = s[5][1];\n    g_hi = s[6][0];\n    g_lo = s[6][1];\n    h_hi = s[7][0];\n    h_lo = s[7][1];\n\n    // round function\n    for(i = 0; i < 80; ++i) {\n      // Sum1(e) = ROTR 14(e) ^ ROTR 18(e) ^ ROTR 41(e)\n      s1_hi = (\n        ((e_hi >>> 14) | (e_lo << 18)) ^ // ROTR 14\n        ((e_hi >>> 18) | (e_lo << 14)) ^ // ROTR 18\n        ((e_lo >>> 9) | (e_hi << 23))) >>> 0; // ROTR 41/(swap + ROTR 9)\n      s1_lo = (\n        ((e_hi << 18) | (e_lo >>> 14)) ^ // ROTR 14\n        ((e_hi << 14) | (e_lo >>> 18)) ^ // ROTR 18\n        ((e_lo << 23) | (e_hi >>> 9))) >>> 0; // ROTR 41/(swap + ROTR 9)\n\n      // Ch(e, f, g) (optimized the same way as SHA-1)\n      ch_hi = (g_hi ^ (e_hi & (f_hi ^ g_hi))) >>> 0;\n      ch_lo = (g_lo ^ (e_lo & (f_lo ^ g_lo))) >>> 0;\n\n      // Sum0(a) = ROTR 28(a) ^ ROTR 34(a) ^ ROTR 39(a)\n      s0_hi = (\n        ((a_hi >>> 28) | (a_lo << 4)) ^ // ROTR 28\n        ((a_lo >>> 2) | (a_hi << 30)) ^ // ROTR 34/(swap + ROTR 2)\n        ((a_lo >>> 7) | (a_hi << 25))) >>> 0; // ROTR 39/(swap + ROTR 7)\n      s0_lo = (\n        ((a_hi << 4) | (a_lo >>> 28)) ^ // ROTR 28\n        ((a_lo << 30) | (a_hi >>> 2)) ^ // ROTR 34/(swap + ROTR 2)\n        ((a_lo << 25) | (a_hi >>> 7))) >>> 0; // ROTR 39/(swap + ROTR 7)\n\n      // Maj(a, b, c) (optimized the same way as SHA-1)\n      maj_hi = ((a_hi & b_hi) | (c_hi & (a_hi ^ b_hi))) >>> 0;\n      maj_lo = ((a_lo & b_lo) | (c_lo & (a_lo ^ b_lo))) >>> 0;\n\n      // main algorithm\n      // t1 = (h + s1 + ch + _k[i] + _w[i]) modulo 2^64 (carry lo overflow)\n      lo = (h_lo + s1_lo + ch_lo + _k[i][1] + w[i][1]);\n      t1_hi = (h_hi + s1_hi + ch_hi + _k[i][0] + w[i][0] +\n        ((lo / 0x100000000) >>> 0)) >>> 0;\n      t1_lo = lo >>> 0;\n\n      // t2 = s0 + maj modulo 2^64 (carry lo overflow)\n      lo = s0_lo + maj_lo;\n      t2_hi = (s0_hi + maj_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      t2_lo = lo >>> 0;\n\n      h_hi = g_hi;\n      h_lo = g_lo;\n\n      g_hi = f_hi;\n      g_lo = f_lo;\n\n      f_hi = e_hi;\n      f_lo = e_lo;\n\n      // e = (d + t1) modulo 2^64 (carry lo overflow)\n      lo = d_lo + t1_lo;\n      e_hi = (d_hi + t1_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      e_lo = lo >>> 0;\n\n      d_hi = c_hi;\n      d_lo = c_lo;\n\n      c_hi = b_hi;\n      c_lo = b_lo;\n\n      b_hi = a_hi;\n      b_lo = a_lo;\n\n      // a = (t1 + t2) modulo 2^64 (carry lo overflow)\n      lo = t1_lo + t2_lo;\n      a_hi = (t1_hi + t2_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      a_lo = lo >>> 0;\n    }\n\n    // update hash state (additional modulo 2^64)\n    lo = s[0][1] + a_lo;\n    s[0][0] = (s[0][0] + a_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[0][1] = lo >>> 0;\n\n    lo = s[1][1] + b_lo;\n    s[1][0] = (s[1][0] + b_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[1][1] = lo >>> 0;\n\n    lo = s[2][1] + c_lo;\n    s[2][0] = (s[2][0] + c_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[2][1] = lo >>> 0;\n\n    lo = s[3][1] + d_lo;\n    s[3][0] = (s[3][0] + d_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[3][1] = lo >>> 0;\n\n    lo = s[4][1] + e_lo;\n    s[4][0] = (s[4][0] + e_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[4][1] = lo >>> 0;\n\n    lo = s[5][1] + f_lo;\n    s[5][0] = (s[5][0] + f_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[5][1] = lo >>> 0;\n\n    lo = s[6][1] + g_lo;\n    s[6][0] = (s[6][0] + g_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[6][1] = lo >>> 0;\n\n    lo = s[7][1] + h_lo;\n    s[7][0] = (s[7][0] + h_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[7][1] = lo >>> 0;\n\n    len -= 128;\n  }\n}\n","/**\n * Functions to output keys in SSH-friendly formats.\n *\n * This is part of the Forge project which may be used under the terms of\n * either the BSD License or the GNU General Public License (GPL) Version 2.\n *\n * See: https://github.com/digitalbazaar/forge/blob/cbebca3780658703d925b61b2caffb1d263a6c1d/LICENSE\n *\n * @author https://github.com/shellac\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./hmac');\nrequire('./md5');\nrequire('./sha1');\nrequire('./util');\n\nvar ssh = module.exports = forge.ssh = forge.ssh || {};\n\n/**\n * Encodes (and optionally encrypts) a private RSA key as a Putty PPK file.\n *\n * @param privateKey the key.\n * @param passphrase a passphrase to protect the key (falsy for no encryption).\n * @param comment a comment to include in the key file.\n *\n * @return the PPK file as a string.\n */\nssh.privateKeyToPutty = function(privateKey, passphrase, comment) {\n  comment = comment || '';\n  passphrase = passphrase || '';\n  var algorithm = 'ssh-rsa';\n  var encryptionAlgorithm = (passphrase === '') ? 'none' : 'aes256-cbc';\n\n  var ppk = 'PuTTY-User-Key-File-2: ' + algorithm + '\\r\\n';\n  ppk += 'Encryption: ' + encryptionAlgorithm + '\\r\\n';\n  ppk += 'Comment: ' + comment + '\\r\\n';\n\n  // public key into buffer for ppk\n  var pubbuffer = forge.util.createBuffer();\n  _addStringToBuffer(pubbuffer, algorithm);\n  _addBigIntegerToBuffer(pubbuffer, privateKey.e);\n  _addBigIntegerToBuffer(pubbuffer, privateKey.n);\n\n  // write public key\n  var pub = forge.util.encode64(pubbuffer.bytes(), 64);\n  var length = Math.floor(pub.length / 66) + 1; // 66 = 64 + \\r\\n\n  ppk += 'Public-Lines: ' + length + '\\r\\n';\n  ppk += pub;\n\n  // private key into a buffer\n  var privbuffer = forge.util.createBuffer();\n  _addBigIntegerToBuffer(privbuffer, privateKey.d);\n  _addBigIntegerToBuffer(privbuffer, privateKey.p);\n  _addBigIntegerToBuffer(privbuffer, privateKey.q);\n  _addBigIntegerToBuffer(privbuffer, privateKey.qInv);\n\n  // optionally encrypt the private key\n  var priv;\n  if(!passphrase) {\n    // use the unencrypted buffer\n    priv = forge.util.encode64(privbuffer.bytes(), 64);\n  } else {\n    // encrypt RSA key using passphrase\n    var encLen = privbuffer.length() + 16 - 1;\n    encLen -= encLen % 16;\n\n    // pad private key with sha1-d data -- needs to be a multiple of 16\n    var padding = _sha1(privbuffer.bytes());\n\n    padding.truncate(padding.length() - encLen + privbuffer.length());\n    privbuffer.putBuffer(padding);\n\n    var aeskey = forge.util.createBuffer();\n    aeskey.putBuffer(_sha1('\\x00\\x00\\x00\\x00', passphrase));\n    aeskey.putBuffer(_sha1('\\x00\\x00\\x00\\x01', passphrase));\n\n    // encrypt some bytes using CBC mode\n    // key is 40 bytes, so truncate *by* 8 bytes\n    var cipher = forge.aes.createEncryptionCipher(aeskey.truncate(8), 'CBC');\n    cipher.start(forge.util.createBuffer().fillWithByte(0, 16));\n    cipher.update(privbuffer.copy());\n    cipher.finish();\n    var encrypted = cipher.output;\n\n    // Note: this appears to differ from Putty -- is forge wrong, or putty?\n    // due to padding we finish as an exact multiple of 16\n    encrypted.truncate(16); // all padding\n\n    priv = forge.util.encode64(encrypted.bytes(), 64);\n  }\n\n  // output private key\n  length = Math.floor(priv.length / 66) + 1; // 64 + \\r\\n\n  ppk += '\\r\\nPrivate-Lines: ' + length + '\\r\\n';\n  ppk += priv;\n\n  // MAC\n  var mackey = _sha1('putty-private-key-file-mac-key', passphrase);\n\n  var macbuffer = forge.util.createBuffer();\n  _addStringToBuffer(macbuffer, algorithm);\n  _addStringToBuffer(macbuffer, encryptionAlgorithm);\n  _addStringToBuffer(macbuffer, comment);\n  macbuffer.putInt32(pubbuffer.length());\n  macbuffer.putBuffer(pubbuffer);\n  macbuffer.putInt32(privbuffer.length());\n  macbuffer.putBuffer(privbuffer);\n\n  var hmac = forge.hmac.create();\n  hmac.start('sha1', mackey);\n  hmac.update(macbuffer.bytes());\n\n  ppk += '\\r\\nPrivate-MAC: ' + hmac.digest().toHex() + '\\r\\n';\n\n  return ppk;\n};\n\n/**\n * Encodes a public RSA key as an OpenSSH file.\n *\n * @param key the key.\n * @param comment a comment.\n *\n * @return the public key in OpenSSH format.\n */\nssh.publicKeyToOpenSSH = function(key, comment) {\n  var type = 'ssh-rsa';\n  comment = comment || '';\n\n  var buffer = forge.util.createBuffer();\n  _addStringToBuffer(buffer, type);\n  _addBigIntegerToBuffer(buffer, key.e);\n  _addBigIntegerToBuffer(buffer, key.n);\n\n  return type + ' ' + forge.util.encode64(buffer.bytes()) + ' ' + comment;\n};\n\n/**\n * Encodes a private RSA key as an OpenSSH file.\n *\n * @param key the key.\n * @param passphrase a passphrase to protect the key (falsy for no encryption).\n *\n * @return the public key in OpenSSH format.\n */\nssh.privateKeyToOpenSSH = function(privateKey, passphrase) {\n  if(!passphrase) {\n    return forge.pki.privateKeyToPem(privateKey);\n  }\n  // OpenSSH private key is just a legacy format, it seems\n  return forge.pki.encryptRsaPrivateKey(privateKey, passphrase,\n    {legacy: true, algorithm: 'aes128'});\n};\n\n/**\n * Gets the SSH fingerprint for the given public key.\n *\n * @param options the options to use.\n *          [md] the message digest object to use (defaults to forge.md.md5).\n *          [encoding] an alternative output encoding, such as 'hex'\n *            (defaults to none, outputs a byte buffer).\n *          [delimiter] the delimiter to use between bytes for 'hex' encoded\n *            output, eg: ':' (defaults to none).\n *\n * @return the fingerprint as a byte buffer or other encoding based on options.\n */\nssh.getPublicKeyFingerprint = function(key, options) {\n  options = options || {};\n  var md = options.md || forge.md.md5.create();\n\n  var type = 'ssh-rsa';\n  var buffer = forge.util.createBuffer();\n  _addStringToBuffer(buffer, type);\n  _addBigIntegerToBuffer(buffer, key.e);\n  _addBigIntegerToBuffer(buffer, key.n);\n\n  // hash public key bytes\n  md.start();\n  md.update(buffer.getBytes());\n  var digest = md.digest();\n  if(options.encoding === 'hex') {\n    var hex = digest.toHex();\n    if(options.delimiter) {\n      return hex.match(/.{2}/g).join(options.delimiter);\n    }\n    return hex;\n  } else if(options.encoding === 'binary') {\n    return digest.getBytes();\n  } else if(options.encoding) {\n    throw new Error('Unknown encoding \"' + options.encoding + '\".');\n  }\n  return digest;\n};\n\n/**\n * Adds len(val) then val to a buffer.\n *\n * @param buffer the buffer to add to.\n * @param val a big integer.\n */\nfunction _addBigIntegerToBuffer(buffer, val) {\n  var hexVal = val.toString(16);\n  // ensure 2s complement +ve\n  if(hexVal[0] >= '8') {\n    hexVal = '00' + hexVal;\n  }\n  var bytes = forge.util.hexToBytes(hexVal);\n  buffer.putInt32(bytes.length);\n  buffer.putBytes(bytes);\n}\n\n/**\n * Adds len(val) then val to a buffer.\n *\n * @param buffer the buffer to add to.\n * @param val a string.\n */\nfunction _addStringToBuffer(buffer, val) {\n  buffer.putInt32(val.length);\n  buffer.putString(val);\n}\n\n/**\n * Hashes the arguments into one value using SHA-1.\n *\n * @return the sha1 hash of the provided arguments.\n */\nfunction _sha1() {\n  var sha = forge.md.sha1.create();\n  var num = arguments.length;\n  for (var i = 0; i < num; ++i) {\n    sha.update(arguments[i]);\n  }\n  return sha.digest();\n}\n","/**\n * A Javascript implementation of Transport Layer Security (TLS).\n *\n * @author Dave Longley\n *\n * Copyright (c) 2009-2014 Digital Bazaar, Inc.\n *\n * The TLS Handshake Protocol involves the following steps:\n *\n * - Exchange hello messages to agree on algorithms, exchange random values,\n * and check for session resumption.\n *\n * - Exchange the necessary cryptographic parameters to allow the client and\n * server to agree on a premaster secret.\n *\n * - Exchange certificates and cryptographic information to allow the client\n * and server to authenticate themselves.\n *\n * - Generate a master secret from the premaster secret and exchanged random\n * values.\n *\n * - Provide security parameters to the record layer.\n *\n * - Allow the client and server to verify that their peer has calculated the\n * same security parameters and that the handshake occurred without tampering\n * by an attacker.\n *\n * Up to 4 different messages may be sent during a key exchange. The server\n * certificate, the server key exchange, the client certificate, and the\n * client key exchange.\n *\n * A typical handshake (from the client's perspective).\n *\n * 1. Client sends ClientHello.\n * 2. Client receives ServerHello.\n * 3. Client receives optional Certificate.\n * 4. Client receives optional ServerKeyExchange.\n * 5. Client receives ServerHelloDone.\n * 6. Client sends optional Certificate.\n * 7. Client sends ClientKeyExchange.\n * 8. Client sends optional CertificateVerify.\n * 9. Client sends ChangeCipherSpec.\n * 10. Client sends Finished.\n * 11. Client receives ChangeCipherSpec.\n * 12. Client receives Finished.\n * 13. Client sends/receives application data.\n *\n * To reuse an existing session:\n *\n * 1. Client sends ClientHello with session ID for reuse.\n * 2. Client receives ServerHello with same session ID if reusing.\n * 3. Client receives ChangeCipherSpec message if reusing.\n * 4. Client receives Finished.\n * 5. Client sends ChangeCipherSpec.\n * 6. Client sends Finished.\n *\n * Note: Client ignores HelloRequest if in the middle of a handshake.\n *\n * Record Layer:\n *\n * The record layer fragments information blocks into TLSPlaintext records\n * carrying data in chunks of 2^14 bytes or less. Client message boundaries are\n * not preserved in the record layer (i.e., multiple client messages of the\n * same ContentType MAY be coalesced into a single TLSPlaintext record, or a\n * single message MAY be fragmented across several records).\n *\n * struct {\n *   uint8 major;\n *   uint8 minor;\n * } ProtocolVersion;\n *\n * struct {\n *   ContentType type;\n *   ProtocolVersion version;\n *   uint16 length;\n *   opaque fragment[TLSPlaintext.length];\n * } TLSPlaintext;\n *\n * type:\n *   The higher-level protocol used to process the enclosed fragment.\n *\n * version:\n *   The version of the protocol being employed. TLS Version 1.2 uses version\n *   {3, 3}. TLS Version 1.0 uses version {3, 1}. Note that a client that\n *   supports multiple versions of TLS may not know what version will be\n *   employed before it receives the ServerHello.\n *\n * length:\n *   The length (in bytes) of the following TLSPlaintext.fragment. The length\n *   MUST NOT exceed 2^14 = 16384 bytes.\n *\n * fragment:\n *   The application data. This data is transparent and treated as an\n *   independent block to be dealt with by the higher-level protocol specified\n *   by the type field.\n *\n * Implementations MUST NOT send zero-length fragments of Handshake, Alert, or\n * ChangeCipherSpec content types. Zero-length fragments of Application data\n * MAY be sent as they are potentially useful as a traffic analysis\n * countermeasure.\n *\n * Note: Data of different TLS record layer content types MAY be interleaved.\n * Application data is generally of lower precedence for transmission than\n * other content types. However, records MUST be delivered to the network in\n * the same order as they are protected by the record layer. Recipients MUST\n * receive and process interleaved application layer traffic during handshakes\n * subsequent to the first one on a connection.\n *\n * struct {\n *   ContentType type;       // same as TLSPlaintext.type\n *   ProtocolVersion version;// same as TLSPlaintext.version\n *   uint16 length;\n *   opaque fragment[TLSCompressed.length];\n * } TLSCompressed;\n *\n * length:\n *   The length (in bytes) of the following TLSCompressed.fragment.\n *   The length MUST NOT exceed 2^14 + 1024.\n *\n * fragment:\n *   The compressed form of TLSPlaintext.fragment.\n *\n * Note: A CompressionMethod.null operation is an identity operation; no fields\n * are altered. In this implementation, since no compression is supported,\n * uncompressed records are always the same as compressed records.\n *\n * Encryption Information:\n *\n * The encryption and MAC functions translate a TLSCompressed structure into a\n * TLSCiphertext. The decryption functions reverse the process. The MAC of the\n * record also includes a sequence number so that missing, extra, or repeated\n * messages are detectable.\n *\n * struct {\n *   ContentType type;\n *   ProtocolVersion version;\n *   uint16 length;\n *   select (SecurityParameters.cipher_type) {\n *     case stream: GenericStreamCipher;\n *     case block:  GenericBlockCipher;\n *     case aead:   GenericAEADCipher;\n *   } fragment;\n * } TLSCiphertext;\n *\n * type:\n *   The type field is identical to TLSCompressed.type.\n *\n * version:\n *   The version field is identical to TLSCompressed.version.\n *\n * length:\n *   The length (in bytes) of the following TLSCiphertext.fragment.\n *   The length MUST NOT exceed 2^14 + 2048.\n *\n * fragment:\n *   The encrypted form of TLSCompressed.fragment, with the MAC.\n *\n * Note: Only CBC Block Ciphers are supported by this implementation.\n *\n * The TLSCompressed.fragment structures are converted to/from block\n * TLSCiphertext.fragment structures.\n *\n * struct {\n *   opaque IV[SecurityParameters.record_iv_length];\n *   block-ciphered struct {\n *     opaque content[TLSCompressed.length];\n *     opaque MAC[SecurityParameters.mac_length];\n *     uint8 padding[GenericBlockCipher.padding_length];\n *     uint8 padding_length;\n *   };\n * } GenericBlockCipher;\n *\n * The MAC is generated as described in Section 6.2.3.1.\n *\n * IV:\n *   The Initialization Vector (IV) SHOULD be chosen at random, and MUST be\n *   unpredictable. Note that in versions of TLS prior to 1.1, there was no\n *   IV field, and the last ciphertext block of the previous record (the \"CBC\n *   residue\") was used as the IV. This was changed to prevent the attacks\n *   described in [CBCATT]. For block ciphers, the IV length is of length\n *   SecurityParameters.record_iv_length, which is equal to the\n *   SecurityParameters.block_size.\n *\n * padding:\n *   Padding that is added to force the length of the plaintext to be an\n *   integral multiple of the block cipher's block length. The padding MAY be\n *   any length up to 255 bytes, as long as it results in the\n *   TLSCiphertext.length being an integral multiple of the block length.\n *   Lengths longer than necessary might be desirable to frustrate attacks on\n *   a protocol that are based on analysis of the lengths of exchanged\n *   messages. Each uint8 in the padding data vector MUST be filled with the\n *   padding length value. The receiver MUST check this padding and MUST use\n *   the bad_record_mac alert to indicate padding errors.\n *\n * padding_length:\n *   The padding length MUST be such that the total size of the\n *   GenericBlockCipher structure is a multiple of the cipher's block length.\n *   Legal values range from zero to 255, inclusive. This length specifies the\n *   length of the padding field exclusive of the padding_length field itself.\n *\n * The encrypted data length (TLSCiphertext.length) is one more than the sum of\n * SecurityParameters.block_length, TLSCompressed.length,\n * SecurityParameters.mac_length, and padding_length.\n *\n * Example: If the block length is 8 bytes, the content length\n * (TLSCompressed.length) is 61 bytes, and the MAC length is 20 bytes, then the\n * length before padding is 82 bytes (this does not include the IV. Thus, the\n * padding length modulo 8 must be equal to 6 in order to make the total length\n * an even multiple of 8 bytes (the block length). The padding length can be\n * 6, 14, 22, and so on, through 254. If the padding length were the minimum\n * necessary, 6, the padding would be 6 bytes, each containing the value 6.\n * Thus, the last 8 octets of the GenericBlockCipher before block encryption\n * would be xx 06 06 06 06 06 06 06, where xx is the last octet of the MAC.\n *\n * Note: With block ciphers in CBC mode (Cipher Block Chaining), it is critical\n * that the entire plaintext of the record be known before any ciphertext is\n * transmitted. Otherwise, it is possible for the attacker to mount the attack\n * described in [CBCATT].\n *\n * Implementation note: Canvel et al. [CBCTIME] have demonstrated a timing\n * attack on CBC padding based on the time required to compute the MAC. In\n * order to defend against this attack, implementations MUST ensure that\n * record processing time is essentially the same whether or not the padding\n * is correct. In general, the best way to do this is to compute the MAC even\n * if the padding is incorrect, and only then reject the packet. For instance,\n * if the pad appears to be incorrect, the implementation might assume a\n * zero-length pad and then compute the MAC. This leaves a small timing\n * channel, since MAC performance depends, to some extent, on the size of the\n * data fragment, but it is not believed to be large enough to be exploitable,\n * due to the large block size of existing MACs and the small size of the\n * timing signal.\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./hmac');\nrequire('./md5');\nrequire('./pem');\nrequire('./pki');\nrequire('./random');\nrequire('./sha1');\nrequire('./util');\n\n/**\n * Generates pseudo random bytes by mixing the result of two hash functions,\n * MD5 and SHA-1.\n *\n * prf_TLS1(secret, label, seed) =\n *   P_MD5(S1, label + seed) XOR P_SHA-1(S2, label + seed);\n *\n * Each P_hash function functions as follows:\n *\n * P_hash(secret, seed) = HMAC_hash(secret, A(1) + seed) +\n *                        HMAC_hash(secret, A(2) + seed) +\n *                        HMAC_hash(secret, A(3) + seed) + ...\n * A() is defined as:\n *   A(0) = seed\n *   A(i) = HMAC_hash(secret, A(i-1))\n *\n * The '+' operator denotes concatenation.\n *\n * As many iterations A(N) as are needed are performed to generate enough\n * pseudo random byte output. If an iteration creates more data than is\n * necessary, then it is truncated.\n *\n * Therefore:\n * A(1) = HMAC_hash(secret, A(0))\n *      = HMAC_hash(secret, seed)\n * A(2) = HMAC_hash(secret, A(1))\n *      = HMAC_hash(secret, HMAC_hash(secret, seed))\n *\n * Therefore:\n * P_hash(secret, seed) =\n *   HMAC_hash(secret, HMAC_hash(secret, A(0)) + seed) +\n *   HMAC_hash(secret, HMAC_hash(secret, A(1)) + seed) +\n *   ...\n *\n * Therefore:\n * P_hash(secret, seed) =\n *   HMAC_hash(secret, HMAC_hash(secret, seed) + seed) +\n *   HMAC_hash(secret, HMAC_hash(secret, HMAC_hash(secret, seed)) + seed) +\n *   ...\n *\n * @param secret the secret to use.\n * @param label the label to use.\n * @param seed the seed value to use.\n * @param length the number of bytes to generate.\n *\n * @return the pseudo random bytes in a byte buffer.\n */\nvar prf_TLS1 = function(secret, label, seed, length) {\n  var rval = forge.util.createBuffer();\n\n  /* For TLS 1.0, the secret is split in half, into two secrets of equal\n    length. If the secret has an odd length then the last byte of the first\n    half will be the same as the first byte of the second. The length of the\n    two secrets is half of the secret rounded up. */\n  var idx = (secret.length >> 1);\n  var slen = idx + (secret.length & 1);\n  var s1 = secret.substr(0, slen);\n  var s2 = secret.substr(idx, slen);\n  var ai = forge.util.createBuffer();\n  var hmac = forge.hmac.create();\n  seed = label + seed;\n\n  // determine the number of iterations that must be performed to generate\n  // enough output bytes, md5 creates 16 byte hashes, sha1 creates 20\n  var md5itr = Math.ceil(length / 16);\n  var sha1itr = Math.ceil(length / 20);\n\n  // do md5 iterations\n  hmac.start('MD5', s1);\n  var md5bytes = forge.util.createBuffer();\n  ai.putBytes(seed);\n  for(var i = 0; i < md5itr; ++i) {\n    // HMAC_hash(secret, A(i-1))\n    hmac.start(null, null);\n    hmac.update(ai.getBytes());\n    ai.putBuffer(hmac.digest());\n\n    // HMAC_hash(secret, A(i) + seed)\n    hmac.start(null, null);\n    hmac.update(ai.bytes() + seed);\n    md5bytes.putBuffer(hmac.digest());\n  }\n\n  // do sha1 iterations\n  hmac.start('SHA1', s2);\n  var sha1bytes = forge.util.createBuffer();\n  ai.clear();\n  ai.putBytes(seed);\n  for(var i = 0; i < sha1itr; ++i) {\n    // HMAC_hash(secret, A(i-1))\n    hmac.start(null, null);\n    hmac.update(ai.getBytes());\n    ai.putBuffer(hmac.digest());\n\n    // HMAC_hash(secret, A(i) + seed)\n    hmac.start(null, null);\n    hmac.update(ai.bytes() + seed);\n    sha1bytes.putBuffer(hmac.digest());\n  }\n\n  // XOR the md5 bytes with the sha1 bytes\n  rval.putBytes(forge.util.xorBytes(\n    md5bytes.getBytes(), sha1bytes.getBytes(), length));\n\n  return rval;\n};\n\n/**\n * Generates pseudo random bytes using a SHA256 algorithm. For TLS 1.2.\n *\n * @param secret the secret to use.\n * @param label the label to use.\n * @param seed the seed value to use.\n * @param length the number of bytes to generate.\n *\n * @return the pseudo random bytes in a byte buffer.\n */\nvar prf_sha256 = function(secret, label, seed, length) {\n   // FIXME: implement me for TLS 1.2\n};\n\n/**\n * Gets a MAC for a record using the SHA-1 hash algorithm.\n *\n * @param key the mac key.\n * @param state the sequence number (array of two 32-bit integers).\n * @param record the record.\n *\n * @return the sha-1 hash (20 bytes) for the given record.\n */\nvar hmac_sha1 = function(key, seqNum, record) {\n  /* MAC is computed like so:\n  HMAC_hash(\n    key, seqNum +\n      TLSCompressed.type +\n      TLSCompressed.version +\n      TLSCompressed.length +\n      TLSCompressed.fragment)\n  */\n  var hmac = forge.hmac.create();\n  hmac.start('SHA1', key);\n  var b = forge.util.createBuffer();\n  b.putInt32(seqNum[0]);\n  b.putInt32(seqNum[1]);\n  b.putByte(record.type);\n  b.putByte(record.version.major);\n  b.putByte(record.version.minor);\n  b.putInt16(record.length);\n  b.putBytes(record.fragment.bytes());\n  hmac.update(b.getBytes());\n  return hmac.digest().getBytes();\n};\n\n/**\n * Compresses the TLSPlaintext record into a TLSCompressed record using the\n * deflate algorithm.\n *\n * @param c the TLS connection.\n * @param record the TLSPlaintext record to compress.\n * @param s the ConnectionState to use.\n *\n * @return true on success, false on failure.\n */\nvar deflate = function(c, record, s) {\n  var rval = false;\n\n  try {\n    var bytes = c.deflate(record.fragment.getBytes());\n    record.fragment = forge.util.createBuffer(bytes);\n    record.length = bytes.length;\n    rval = true;\n  } catch(ex) {\n    // deflate error, fail out\n  }\n\n  return rval;\n};\n\n/**\n * Decompresses the TLSCompressed record into a TLSPlaintext record using the\n * deflate algorithm.\n *\n * @param c the TLS connection.\n * @param record the TLSCompressed record to decompress.\n * @param s the ConnectionState to use.\n *\n * @return true on success, false on failure.\n */\nvar inflate = function(c, record, s) {\n  var rval = false;\n\n  try {\n    var bytes = c.inflate(record.fragment.getBytes());\n    record.fragment = forge.util.createBuffer(bytes);\n    record.length = bytes.length;\n    rval = true;\n  } catch(ex) {\n    // inflate error, fail out\n  }\n\n  return rval;\n};\n\n/**\n * Reads a TLS variable-length vector from a byte buffer.\n *\n * Variable-length vectors are defined by specifying a subrange of legal\n * lengths, inclusively, using the notation <floor..ceiling>. When these are\n * encoded, the actual length precedes the vector's contents in the byte\n * stream. The length will be in the form of a number consuming as many bytes\n * as required to hold the vector's specified maximum (ceiling) length. A\n * variable-length vector with an actual length field of zero is referred to\n * as an empty vector.\n *\n * @param b the byte buffer.\n * @param lenBytes the number of bytes required to store the length.\n *\n * @return the resulting byte buffer.\n */\nvar readVector = function(b, lenBytes) {\n  var len = 0;\n  switch(lenBytes) {\n  case 1:\n    len = b.getByte();\n    break;\n  case 2:\n    len = b.getInt16();\n    break;\n  case 3:\n    len = b.getInt24();\n    break;\n  case 4:\n    len = b.getInt32();\n    break;\n  }\n\n  // read vector bytes into a new buffer\n  return forge.util.createBuffer(b.getBytes(len));\n};\n\n/**\n * Writes a TLS variable-length vector to a byte buffer.\n *\n * @param b the byte buffer.\n * @param lenBytes the number of bytes required to store the length.\n * @param v the byte buffer vector.\n */\nvar writeVector = function(b, lenBytes, v) {\n  // encode length at the start of the vector, where the number of bytes for\n  // the length is the maximum number of bytes it would take to encode the\n  // vector's ceiling\n  b.putInt(v.length(), lenBytes << 3);\n  b.putBuffer(v);\n};\n\n/**\n * The tls implementation.\n */\nvar tls = {};\n\n/**\n * Version: TLS 1.2 = 3.3, TLS 1.1 = 3.2, TLS 1.0 = 3.1. Both TLS 1.1 and\n * TLS 1.2 were still too new (ie: openSSL didn't implement them) at the time\n * of this implementation so TLS 1.0 was implemented instead.\n */\ntls.Versions = {\n  TLS_1_0: {major: 3, minor: 1},\n  TLS_1_1: {major: 3, minor: 2},\n  TLS_1_2: {major: 3, minor: 3}\n};\ntls.SupportedVersions = [\n  tls.Versions.TLS_1_1,\n  tls.Versions.TLS_1_0\n];\ntls.Version = tls.SupportedVersions[0];\n\n/**\n * Maximum fragment size. True maximum is 16384, but we fragment before that\n * to allow for unusual small increases during compression.\n */\ntls.MaxFragment = 16384 - 1024;\n\n/**\n * Whether this entity is considered the \"client\" or \"server\".\n * enum { server, client } ConnectionEnd;\n */\ntls.ConnectionEnd = {\n  server: 0,\n  client: 1\n};\n\n/**\n * Pseudo-random function algorithm used to generate keys from the master\n * secret.\n * enum { tls_prf_sha256 } PRFAlgorithm;\n */\ntls.PRFAlgorithm = {\n  tls_prf_sha256: 0\n};\n\n/**\n * Bulk encryption algorithms.\n * enum { null, rc4, des3, aes } BulkCipherAlgorithm;\n */\ntls.BulkCipherAlgorithm = {\n  none: null,\n  rc4: 0,\n  des3: 1,\n  aes: 2\n};\n\n/**\n * Cipher types.\n * enum { stream, block, aead } CipherType;\n */\ntls.CipherType = {\n  stream: 0,\n  block: 1,\n  aead: 2\n};\n\n/**\n * MAC (Message Authentication Code) algorithms.\n * enum { null, hmac_md5, hmac_sha1, hmac_sha256,\n *   hmac_sha384, hmac_sha512} MACAlgorithm;\n */\ntls.MACAlgorithm = {\n  none: null,\n  hmac_md5: 0,\n  hmac_sha1: 1,\n  hmac_sha256: 2,\n  hmac_sha384: 3,\n  hmac_sha512: 4\n};\n\n/**\n * Compression algorithms.\n * enum { null(0), deflate(1), (255) } CompressionMethod;\n */\ntls.CompressionMethod = {\n  none: 0,\n  deflate: 1\n};\n\n/**\n * TLS record content types.\n * enum {\n *   change_cipher_spec(20), alert(21), handshake(22),\n *   application_data(23), (255)\n * } ContentType;\n */\ntls.ContentType = {\n  change_cipher_spec: 20,\n  alert: 21,\n  handshake: 22,\n  application_data: 23,\n  heartbeat: 24\n};\n\n/**\n * TLS handshake types.\n * enum {\n *   hello_request(0), client_hello(1), server_hello(2),\n *   certificate(11), server_key_exchange (12),\n *   certificate_request(13), server_hello_done(14),\n *   certificate_verify(15), client_key_exchange(16),\n *   finished(20), (255)\n * } HandshakeType;\n */\ntls.HandshakeType = {\n  hello_request: 0,\n  client_hello: 1,\n  server_hello: 2,\n  certificate: 11,\n  server_key_exchange: 12,\n  certificate_request: 13,\n  server_hello_done: 14,\n  certificate_verify: 15,\n  client_key_exchange: 16,\n  finished: 20\n};\n\n/**\n * TLS Alert Protocol.\n *\n * enum { warning(1), fatal(2), (255) } AlertLevel;\n *\n * enum {\n *   close_notify(0),\n *   unexpected_message(10),\n *   bad_record_mac(20),\n *   decryption_failed(21),\n *   record_overflow(22),\n *   decompression_failure(30),\n *   handshake_failure(40),\n *   bad_certificate(42),\n *   unsupported_certificate(43),\n *   certificate_revoked(44),\n *   certificate_expired(45),\n *   certificate_unknown(46),\n *   illegal_parameter(47),\n *   unknown_ca(48),\n *   access_denied(49),\n *   decode_error(50),\n *   decrypt_error(51),\n *   export_restriction(60),\n *   protocol_version(70),\n *   insufficient_security(71),\n *   internal_error(80),\n *   user_canceled(90),\n *   no_renegotiation(100),\n *   (255)\n * } AlertDescription;\n *\n * struct {\n *   AlertLevel level;\n *   AlertDescription description;\n * } Alert;\n */\ntls.Alert = {};\ntls.Alert.Level = {\n  warning: 1,\n  fatal: 2\n};\ntls.Alert.Description = {\n  close_notify: 0,\n  unexpected_message: 10,\n  bad_record_mac: 20,\n  decryption_failed: 21,\n  record_overflow: 22,\n  decompression_failure: 30,\n  handshake_failure: 40,\n  bad_certificate: 42,\n  unsupported_certificate: 43,\n  certificate_revoked: 44,\n  certificate_expired: 45,\n  certificate_unknown: 46,\n  illegal_parameter: 47,\n  unknown_ca: 48,\n  access_denied: 49,\n  decode_error: 50,\n  decrypt_error: 51,\n  export_restriction: 60,\n  protocol_version: 70,\n  insufficient_security: 71,\n  internal_error: 80,\n  user_canceled: 90,\n  no_renegotiation: 100\n};\n\n/**\n * TLS Heartbeat Message types.\n * enum {\n *   heartbeat_request(1),\n *   heartbeat_response(2),\n *   (255)\n * } HeartbeatMessageType;\n */\ntls.HeartbeatMessageType = {\n  heartbeat_request: 1,\n  heartbeat_response: 2\n};\n\n/**\n * Supported cipher suites.\n */\ntls.CipherSuites = {};\n\n/**\n * Gets a supported cipher suite from its 2 byte ID.\n *\n * @param twoBytes two bytes in a string.\n *\n * @return the matching supported cipher suite or null.\n */\ntls.getCipherSuite = function(twoBytes) {\n  var rval = null;\n  for(var key in tls.CipherSuites) {\n    var cs = tls.CipherSuites[key];\n    if(cs.id[0] === twoBytes.charCodeAt(0) &&\n      cs.id[1] === twoBytes.charCodeAt(1)) {\n      rval = cs;\n      break;\n    }\n  }\n  return rval;\n};\n\n/**\n * Called when an unexpected record is encountered.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleUnexpected = function(c, record) {\n  // if connection is client and closed, ignore unexpected messages\n  var ignore = (!c.open && c.entity === tls.ConnectionEnd.client);\n  if(!ignore) {\n    c.error(c, {\n      message: 'Unexpected message. Received TLS record out of order.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.unexpected_message\n      }\n    });\n  }\n};\n\n/**\n * Called when a client receives a HelloRequest record.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleHelloRequest = function(c, record, length) {\n  // ignore renegotiation requests from the server during a handshake, but\n  // if handshaking, send a warning alert that renegotation is denied\n  if(!c.handshaking && c.handshakes > 0) {\n    // send alert warning\n    tls.queue(c, tls.createAlert(c, {\n       level: tls.Alert.Level.warning,\n       description: tls.Alert.Description.no_renegotiation\n    }));\n    tls.flush(c);\n  }\n\n  // continue\n  c.process();\n};\n\n/**\n * Parses a hello message from a ClientHello or ServerHello record.\n *\n * @param record the record to parse.\n *\n * @return the parsed message.\n */\ntls.parseHelloMessage = function(c, record, length) {\n  var msg = null;\n\n  var client = (c.entity === tls.ConnectionEnd.client);\n\n  // minimum of 38 bytes in message\n  if(length < 38) {\n    c.error(c, {\n      message: client ?\n        'Invalid ServerHello message. Message too short.' :\n        'Invalid ClientHello message. Message too short.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  } else {\n    // use 'remaining' to calculate # of remaining bytes in the message\n    var b = record.fragment;\n    var remaining = b.length();\n    msg = {\n      version: {\n        major: b.getByte(),\n        minor: b.getByte()\n      },\n      random: forge.util.createBuffer(b.getBytes(32)),\n      session_id: readVector(b, 1),\n      extensions: []\n    };\n    if(client) {\n      msg.cipher_suite = b.getBytes(2);\n      msg.compression_method = b.getByte();\n    } else {\n      msg.cipher_suites = readVector(b, 2);\n      msg.compression_methods = readVector(b, 1);\n    }\n\n    // read extensions if there are any bytes left in the message\n    remaining = length - (remaining - b.length());\n    if(remaining > 0) {\n      // parse extensions\n      var exts = readVector(b, 2);\n      while(exts.length() > 0) {\n        msg.extensions.push({\n          type: [exts.getByte(), exts.getByte()],\n          data: readVector(exts, 2)\n        });\n      }\n\n      // TODO: make extension support modular\n      if(!client) {\n        for(var i = 0; i < msg.extensions.length; ++i) {\n          var ext = msg.extensions[i];\n\n          // support SNI extension\n          if(ext.type[0] === 0x00 && ext.type[1] === 0x00) {\n            // get server name list\n            var snl = readVector(ext.data, 2);\n            while(snl.length() > 0) {\n              // read server name type\n              var snType = snl.getByte();\n\n              // only HostName type (0x00) is known, break out if\n              // another type is detected\n              if(snType !== 0x00) {\n                break;\n              }\n\n              // add host name to server name list\n              c.session.extensions.server_name.serverNameList.push(\n                readVector(snl, 2).getBytes());\n            }\n          }\n        }\n      }\n    }\n\n    // version already set, do not allow version change\n    if(c.session.version) {\n      if(msg.version.major !== c.session.version.major ||\n        msg.version.minor !== c.session.version.minor) {\n        return c.error(c, {\n          message: 'TLS version change is disallowed during renegotiation.',\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.protocol_version\n          }\n        });\n      }\n    }\n\n    // get the chosen (ServerHello) cipher suite\n    if(client) {\n      // FIXME: should be checking configured acceptable cipher suites\n      c.session.cipherSuite = tls.getCipherSuite(msg.cipher_suite);\n    } else {\n      // get a supported preferred (ClientHello) cipher suite\n      // choose the first supported cipher suite\n      var tmp = forge.util.createBuffer(msg.cipher_suites.bytes());\n      while(tmp.length() > 0) {\n        // FIXME: should be checking configured acceptable suites\n        // cipher suites take up 2 bytes\n        c.session.cipherSuite = tls.getCipherSuite(tmp.getBytes(2));\n        if(c.session.cipherSuite !== null) {\n          break;\n        }\n      }\n    }\n\n    // cipher suite not supported\n    if(c.session.cipherSuite === null) {\n      return c.error(c, {\n        message: 'No cipher suites in common.',\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.handshake_failure\n        },\n        cipherSuite: forge.util.bytesToHex(msg.cipher_suite)\n      });\n    }\n\n    // TODO: handle compression methods\n    if(client) {\n      c.session.compressionMethod = msg.compression_method;\n    } else {\n      // no compression\n      c.session.compressionMethod = tls.CompressionMethod.none;\n    }\n  }\n\n  return msg;\n};\n\n/**\n * Creates security parameters for the given connection based on the given\n * hello message.\n *\n * @param c the TLS connection.\n * @param msg the hello message.\n */\ntls.createSecurityParameters = function(c, msg) {\n  /* Note: security params are from TLS 1.2, some values like prf_algorithm\n  are ignored for TLS 1.0/1.1 and the builtin as specified in the spec is\n  used. */\n\n  // TODO: handle other options from server when more supported\n\n  // get client and server randoms\n  var client = (c.entity === tls.ConnectionEnd.client);\n  var msgRandom = msg.random.bytes();\n  var cRandom = client ? c.session.sp.client_random : msgRandom;\n  var sRandom = client ? msgRandom : tls.createRandom().getBytes();\n\n  // create new security parameters\n  c.session.sp = {\n    entity: c.entity,\n    prf_algorithm: tls.PRFAlgorithm.tls_prf_sha256,\n    bulk_cipher_algorithm: null,\n    cipher_type: null,\n    enc_key_length: null,\n    block_length: null,\n    fixed_iv_length: null,\n    record_iv_length: null,\n    mac_algorithm: null,\n    mac_length: null,\n    mac_key_length: null,\n    compression_algorithm: c.session.compressionMethod,\n    pre_master_secret: null,\n    master_secret: null,\n    client_random: cRandom,\n    server_random: sRandom\n  };\n};\n\n/**\n * Called when a client receives a ServerHello record.\n *\n * When a ServerHello message will be sent:\n *   The server will send this message in response to a client hello message\n *   when it was able to find an acceptable set of algorithms. If it cannot\n *   find such a match, it will respond with a handshake failure alert.\n *\n * uint24 length;\n * struct {\n *   ProtocolVersion server_version;\n *   Random random;\n *   SessionID session_id;\n *   CipherSuite cipher_suite;\n *   CompressionMethod compression_method;\n *   select(extensions_present) {\n *     case false:\n *       struct {};\n *     case true:\n *       Extension extensions<0..2^16-1>;\n *   };\n * } ServerHello;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleServerHello = function(c, record, length) {\n  var msg = tls.parseHelloMessage(c, record, length);\n  if(c.fail) {\n    return;\n  }\n\n  // ensure server version is compatible\n  if(msg.version.minor <= c.version.minor) {\n    c.version.minor = msg.version.minor;\n  } else {\n    return c.error(c, {\n      message: 'Incompatible TLS version.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.protocol_version\n      }\n    });\n  }\n\n  // indicate session version has been set\n  c.session.version = c.version;\n\n  // get the session ID from the message\n  var sessionId = msg.session_id.bytes();\n\n  // if the session ID is not blank and matches the cached one, resume\n  // the session\n  if(sessionId.length > 0 && sessionId === c.session.id) {\n    // resuming session, expect a ChangeCipherSpec next\n    c.expect = SCC;\n    c.session.resuming = true;\n\n    // get new server random\n    c.session.sp.server_random = msg.random.bytes();\n  } else {\n    // not resuming, expect a server Certificate message next\n    c.expect = SCE;\n    c.session.resuming = false;\n\n    // create new security parameters\n    tls.createSecurityParameters(c, msg);\n  }\n\n  // set new session ID\n  c.session.id = sessionId;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a server receives a ClientHello record.\n *\n * When a ClientHello message will be sent:\n *   When a client first connects to a server it is required to send the\n *   client hello as its first message. The client can also send a client\n *   hello in response to a hello request or on its own initiative in order\n *   to renegotiate the security parameters in an existing connection.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleClientHello = function(c, record, length) {\n  var msg = tls.parseHelloMessage(c, record, length);\n  if(c.fail) {\n    return;\n  }\n\n  // get the session ID from the message\n  var sessionId = msg.session_id.bytes();\n\n  // see if the given session ID is in the cache\n  var session = null;\n  if(c.sessionCache) {\n    session = c.sessionCache.getSession(sessionId);\n    if(session === null) {\n      // session ID not found\n      sessionId = '';\n    } else if(session.version.major !== msg.version.major ||\n      session.version.minor > msg.version.minor) {\n      // if session version is incompatible with client version, do not resume\n      session = null;\n      sessionId = '';\n    }\n  }\n\n  // no session found to resume, generate a new session ID\n  if(sessionId.length === 0) {\n    sessionId = forge.random.getBytes(32);\n  }\n\n  // update session\n  c.session.id = sessionId;\n  c.session.clientHelloVersion = msg.version;\n  c.session.sp = {};\n  if(session) {\n    // use version and security parameters from resumed session\n    c.version = c.session.version = session.version;\n    c.session.sp = session.sp;\n  } else {\n    // use highest compatible minor version\n    var version;\n    for(var i = 1; i < tls.SupportedVersions.length; ++i) {\n      version = tls.SupportedVersions[i];\n      if(version.minor <= msg.version.minor) {\n        break;\n      }\n    }\n    c.version = {major: version.major, minor: version.minor};\n    c.session.version = c.version;\n  }\n\n  // if a session is set, resume it\n  if(session !== null) {\n    // resuming session, expect a ChangeCipherSpec next\n    c.expect = CCC;\n    c.session.resuming = true;\n\n    // get new client random\n    c.session.sp.client_random = msg.random.bytes();\n  } else {\n    // not resuming, expect a Certificate or ClientKeyExchange\n    c.expect = (c.verifyClient !== false) ? CCE : CKE;\n    c.session.resuming = false;\n\n    // create new security parameters\n    tls.createSecurityParameters(c, msg);\n  }\n\n  // connection now open\n  c.open = true;\n\n  // queue server hello\n  tls.queue(c, tls.createRecord(c, {\n    type: tls.ContentType.handshake,\n    data: tls.createServerHello(c)\n  }));\n\n  if(c.session.resuming) {\n    // queue change cipher spec message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.change_cipher_spec,\n      data: tls.createChangeCipherSpec()\n    }));\n\n    // create pending state\n    c.state.pending = tls.createConnectionState(c);\n\n    // change current write state to pending write state\n    c.state.current.write = c.state.pending.write;\n\n    // queue finished\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createFinished(c)\n    }));\n  } else {\n    // queue server certificate\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createCertificate(c)\n    }));\n\n    if(!c.fail) {\n      // queue server key exchange\n      tls.queue(c, tls.createRecord(c, {\n        type: tls.ContentType.handshake,\n        data: tls.createServerKeyExchange(c)\n      }));\n\n      // request client certificate if set\n      if(c.verifyClient !== false) {\n        // queue certificate request\n        tls.queue(c, tls.createRecord(c, {\n          type: tls.ContentType.handshake,\n          data: tls.createCertificateRequest(c)\n        }));\n      }\n\n      // queue server hello done\n      tls.queue(c, tls.createRecord(c, {\n        type: tls.ContentType.handshake,\n        data: tls.createServerHelloDone(c)\n      }));\n    }\n  }\n\n  // send records\n  tls.flush(c);\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a Certificate record.\n *\n * When this message will be sent:\n *   The server must send a certificate whenever the agreed-upon key exchange\n *   method is not an anonymous one. This message will always immediately\n *   follow the server hello message.\n *\n * Meaning of this message:\n *   The certificate type must be appropriate for the selected cipher suite's\n *   key exchange algorithm, and is generally an X.509v3 certificate. It must\n *   contain a key which matches the key exchange method, as follows. Unless\n *   otherwise specified, the signing algorithm for the certificate must be\n *   the same as the algorithm for the certificate key. Unless otherwise\n *   specified, the public key may be of any length.\n *\n * opaque ASN.1Cert<1..2^24-1>;\n * struct {\n *   ASN.1Cert certificate_list<1..2^24-1>;\n * } Certificate;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleCertificate = function(c, record, length) {\n  // minimum of 3 bytes in message\n  if(length < 3) {\n    return c.error(c, {\n      message: 'Invalid Certificate message. Message too short.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  }\n\n  var b = record.fragment;\n  var msg = {\n    certificate_list: readVector(b, 3)\n  };\n\n  /* The sender's certificate will be first in the list (chain), each\n    subsequent one that follows will certify the previous one, but root\n    certificates (self-signed) that specify the certificate authority may\n    be omitted under the assumption that clients must already possess it. */\n  var cert, asn1;\n  var certs = [];\n  try {\n    while(msg.certificate_list.length() > 0) {\n      // each entry in msg.certificate_list is a vector with 3 len bytes\n      cert = readVector(msg.certificate_list, 3);\n      asn1 = forge.asn1.fromDer(cert);\n      cert = forge.pki.certificateFromAsn1(asn1, true);\n      certs.push(cert);\n    }\n  } catch(ex) {\n    return c.error(c, {\n      message: 'Could not parse certificate list.',\n      cause: ex,\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.bad_certificate\n      }\n    });\n  }\n\n  // ensure at least 1 certificate was provided if in client-mode\n  // or if verifyClient was set to true to require a certificate\n  // (as opposed to 'optional')\n  var client = (c.entity === tls.ConnectionEnd.client);\n  if((client || c.verifyClient === true) && certs.length === 0) {\n    // error, no certificate\n    c.error(c, {\n      message: client ?\n        'No server certificate provided.' :\n        'No client certificate provided.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  } else if(certs.length === 0) {\n    // no certs to verify\n    // expect a ServerKeyExchange or ClientKeyExchange message next\n    c.expect = client ? SKE : CKE;\n  } else {\n    // save certificate in session\n    if(client) {\n      c.session.serverCertificate = certs[0];\n    } else {\n      c.session.clientCertificate = certs[0];\n    }\n\n    if(tls.verifyCertificateChain(c, certs)) {\n      // expect a ServerKeyExchange or ClientKeyExchange message next\n      c.expect = client ? SKE : CKE;\n    }\n  }\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a ServerKeyExchange record.\n *\n * When this message will be sent:\n *   This message will be sent immediately after the server certificate\n *   message (or the server hello message, if this is an anonymous\n *   negotiation).\n *\n *   The server key exchange message is sent by the server only when the\n *   server certificate message (if sent) does not contain enough data to\n *   allow the client to exchange a premaster secret.\n *\n * Meaning of this message:\n *   This message conveys cryptographic information to allow the client to\n *   communicate the premaster secret: either an RSA public key to encrypt\n *   the premaster secret with, or a Diffie-Hellman public key with which the\n *   client can complete a key exchange (with the result being the premaster\n *   secret.)\n *\n * enum {\n *   dhe_dss, dhe_rsa, dh_anon, rsa, dh_dss, dh_rsa\n * } KeyExchangeAlgorithm;\n *\n * struct {\n *   opaque dh_p<1..2^16-1>;\n *   opaque dh_g<1..2^16-1>;\n *   opaque dh_Ys<1..2^16-1>;\n * } ServerDHParams;\n *\n * struct {\n *   select(KeyExchangeAlgorithm) {\n *     case dh_anon:\n *       ServerDHParams params;\n *     case dhe_dss:\n *     case dhe_rsa:\n *       ServerDHParams params;\n *       digitally-signed struct {\n *         opaque client_random[32];\n *         opaque server_random[32];\n *         ServerDHParams params;\n *       } signed_params;\n *     case rsa:\n *     case dh_dss:\n *     case dh_rsa:\n *       struct {};\n *   };\n * } ServerKeyExchange;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleServerKeyExchange = function(c, record, length) {\n  // this implementation only supports RSA, no Diffie-Hellman support\n  // so any length > 0 is invalid\n  if(length > 0) {\n    return c.error(c, {\n      message: 'Invalid key parameters. Only RSA is supported.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.unsupported_certificate\n      }\n    });\n  }\n\n  // expect an optional CertificateRequest message next\n  c.expect = SCR;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a ClientKeyExchange record.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleClientKeyExchange = function(c, record, length) {\n  // this implementation only supports RSA, no Diffie-Hellman support\n  // so any length < 48 is invalid\n  if(length < 48) {\n    return c.error(c, {\n      message: 'Invalid key parameters. Only RSA is supported.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.unsupported_certificate\n      }\n    });\n  }\n\n  var b = record.fragment;\n  var msg = {\n    enc_pre_master_secret: readVector(b, 2).getBytes()\n  };\n\n  // do rsa decryption\n  var privateKey = null;\n  if(c.getPrivateKey) {\n    try {\n      privateKey = c.getPrivateKey(c, c.session.serverCertificate);\n      privateKey = forge.pki.privateKeyFromPem(privateKey);\n    } catch(ex) {\n      c.error(c, {\n        message: 'Could not get private key.',\n        cause: ex,\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.internal_error\n        }\n      });\n    }\n  }\n\n  if(privateKey === null) {\n    return c.error(c, {\n      message: 'No private key set.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.internal_error\n      }\n    });\n  }\n\n  try {\n    // decrypt 48-byte pre-master secret\n    var sp = c.session.sp;\n    sp.pre_master_secret = privateKey.decrypt(msg.enc_pre_master_secret);\n\n    // ensure client hello version matches first 2 bytes\n    var version = c.session.clientHelloVersion;\n    if(version.major !== sp.pre_master_secret.charCodeAt(0) ||\n      version.minor !== sp.pre_master_secret.charCodeAt(1)) {\n      // error, do not send alert (see BLEI attack below)\n      throw new Error('TLS version rollback attack detected.');\n    }\n  } catch(ex) {\n    /* Note: Daniel Bleichenbacher [BLEI] can be used to attack a\n      TLS server which is using PKCS#1 encoded RSA, so instead of\n      failing here, we generate 48 random bytes and use that as\n      the pre-master secret. */\n    sp.pre_master_secret = forge.random.getBytes(48);\n  }\n\n  // expect a CertificateVerify message if a Certificate was received that\n  // does not have fixed Diffie-Hellman params, otherwise expect\n  // ChangeCipherSpec\n  c.expect = CCC;\n  if(c.session.clientCertificate !== null) {\n    // only RSA support, so expect CertificateVerify\n    // TODO: support Diffie-Hellman\n    c.expect = CCV;\n  }\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a CertificateRequest record.\n *\n * When this message will be sent:\n *   A non-anonymous server can optionally request a certificate from the\n *   client, if appropriate for the selected cipher suite. This message, if\n *   sent, will immediately follow the Server Key Exchange message (if it is\n *   sent; otherwise, the Server Certificate message).\n *\n * enum {\n *   rsa_sign(1), dss_sign(2), rsa_fixed_dh(3), dss_fixed_dh(4),\n *   rsa_ephemeral_dh_RESERVED(5), dss_ephemeral_dh_RESERVED(6),\n *   fortezza_dms_RESERVED(20), (255)\n * } ClientCertificateType;\n *\n * opaque DistinguishedName<1..2^16-1>;\n *\n * struct {\n *   ClientCertificateType certificate_types<1..2^8-1>;\n *   SignatureAndHashAlgorithm supported_signature_algorithms<2^16-1>;\n *   DistinguishedName certificate_authorities<0..2^16-1>;\n * } CertificateRequest;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleCertificateRequest = function(c, record, length) {\n  // minimum of 3 bytes in message\n  if(length < 3) {\n    return c.error(c, {\n      message: 'Invalid CertificateRequest. Message too short.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  }\n\n  // TODO: TLS 1.2+ has different format including\n  // SignatureAndHashAlgorithm after cert types\n  var b = record.fragment;\n  var msg = {\n    certificate_types: readVector(b, 1),\n    certificate_authorities: readVector(b, 2)\n  };\n\n  // save certificate request in session\n  c.session.certificateRequest = msg;\n\n  // expect a ServerHelloDone message next\n  c.expect = SHD;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a server receives a CertificateVerify record.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleCertificateVerify = function(c, record, length) {\n  if(length < 2) {\n    return c.error(c, {\n      message: 'Invalid CertificateVerify. Message too short.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  }\n\n  // rewind to get full bytes for message so it can be manually\n  // digested below (special case for CertificateVerify messages because\n  // they must be digested *after* handling as opposed to all others)\n  var b = record.fragment;\n  b.read -= 4;\n  var msgBytes = b.bytes();\n  b.read += 4;\n\n  var msg = {\n    signature: readVector(b, 2).getBytes()\n  };\n\n  // TODO: add support for DSA\n\n  // generate data to verify\n  var verify = forge.util.createBuffer();\n  verify.putBuffer(c.session.md5.digest());\n  verify.putBuffer(c.session.sha1.digest());\n  verify = verify.getBytes();\n\n  try {\n    var cert = c.session.clientCertificate;\n    /*b = forge.pki.rsa.decrypt(\n      msg.signature, cert.publicKey, true, verify.length);\n    if(b !== verify) {*/\n    if(!cert.publicKey.verify(verify, msg.signature, 'NONE')) {\n      throw new Error('CertificateVerify signature does not match.');\n    }\n\n    // digest message now that it has been handled\n    c.session.md5.update(msgBytes);\n    c.session.sha1.update(msgBytes);\n  } catch(ex) {\n    return c.error(c, {\n      message: 'Bad signature in CertificateVerify.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.handshake_failure\n      }\n    });\n  }\n\n  // expect ChangeCipherSpec\n  c.expect = CCC;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a ServerHelloDone record.\n *\n * When this message will be sent:\n *   The server hello done message is sent by the server to indicate the end\n *   of the server hello and associated messages. After sending this message\n *   the server will wait for a client response.\n *\n * Meaning of this message:\n *   This message means that the server is done sending messages to support\n *   the key exchange, and the client can proceed with its phase of the key\n *   exchange.\n *\n *   Upon receipt of the server hello done message the client should verify\n *   that the server provided a valid certificate if required and check that\n *   the server hello parameters are acceptable.\n *\n * struct {} ServerHelloDone;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleServerHelloDone = function(c, record, length) {\n  // len must be 0 bytes\n  if(length > 0) {\n    return c.error(c, {\n      message: 'Invalid ServerHelloDone message. Invalid length.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.record_overflow\n      }\n    });\n  }\n\n  if(c.serverCertificate === null) {\n    // no server certificate was provided\n    var error = {\n      message: 'No server certificate provided. Not enough security.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.insufficient_security\n      }\n    };\n\n    // call application callback\n    var depth = 0;\n    var ret = c.verify(c, error.alert.description, depth, []);\n    if(ret !== true) {\n      // check for custom alert info\n      if(ret || ret === 0) {\n        // set custom message and alert description\n        if(typeof ret === 'object' && !forge.util.isArray(ret)) {\n          if(ret.message) {\n            error.message = ret.message;\n          }\n          if(ret.alert) {\n            error.alert.description = ret.alert;\n          }\n        } else if(typeof ret === 'number') {\n          // set custom alert description\n          error.alert.description = ret;\n        }\n      }\n\n      // send error\n      return c.error(c, error);\n    }\n  }\n\n  // create client certificate message if requested\n  if(c.session.certificateRequest !== null) {\n    record = tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createCertificate(c)\n    });\n    tls.queue(c, record);\n  }\n\n  // create client key exchange message\n  record = tls.createRecord(c, {\n     type: tls.ContentType.handshake,\n     data: tls.createClientKeyExchange(c)\n  });\n  tls.queue(c, record);\n\n  // expect no messages until the following callback has been called\n  c.expect = SER;\n\n  // create callback to handle client signature (for client-certs)\n  var callback = function(c, signature) {\n    if(c.session.certificateRequest !== null &&\n      c.session.clientCertificate !== null) {\n      // create certificate verify message\n      tls.queue(c, tls.createRecord(c, {\n        type: tls.ContentType.handshake,\n        data: tls.createCertificateVerify(c, signature)\n      }));\n    }\n\n    // create change cipher spec message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.change_cipher_spec,\n      data: tls.createChangeCipherSpec()\n    }));\n\n    // create pending state\n    c.state.pending = tls.createConnectionState(c);\n\n    // change current write state to pending write state\n    c.state.current.write = c.state.pending.write;\n\n    // create finished message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createFinished(c)\n    }));\n\n    // expect a server ChangeCipherSpec message next\n    c.expect = SCC;\n\n    // send records\n    tls.flush(c);\n\n    // continue\n    c.process();\n  };\n\n  // if there is no certificate request or no client certificate, do\n  // callback immediately\n  if(c.session.certificateRequest === null ||\n    c.session.clientCertificate === null) {\n    return callback(c, null);\n  }\n\n  // otherwise get the client signature\n  tls.getClientSignature(c, callback);\n};\n\n/**\n * Called when a ChangeCipherSpec record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleChangeCipherSpec = function(c, record) {\n  if(record.fragment.getByte() !== 0x01) {\n    return c.error(c, {\n      message: 'Invalid ChangeCipherSpec message received.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  }\n\n  // create pending state if:\n  // 1. Resuming session in client mode OR\n  // 2. NOT resuming session in server mode\n  var client = (c.entity === tls.ConnectionEnd.client);\n  if((c.session.resuming && client) || (!c.session.resuming && !client)) {\n    c.state.pending = tls.createConnectionState(c);\n  }\n\n  // change current read state to pending read state\n  c.state.current.read = c.state.pending.read;\n\n  // clear pending state if:\n  // 1. NOT resuming session in client mode OR\n  // 2. resuming a session in server mode\n  if((!c.session.resuming && client) || (c.session.resuming && !client)) {\n    c.state.pending = null;\n  }\n\n  // expect a Finished record next\n  c.expect = client ? SFI : CFI;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a Finished record is received.\n *\n * When this message will be sent:\n *   A finished message is always sent immediately after a change\n *   cipher spec message to verify that the key exchange and\n *   authentication processes were successful. It is essential that a\n *   change cipher spec message be received between the other\n *   handshake messages and the Finished message.\n *\n * Meaning of this message:\n *   The finished message is the first protected with the just-\n *   negotiated algorithms, keys, and secrets. Recipients of finished\n *   messages must verify that the contents are correct.  Once a side\n *   has sent its Finished message and received and validated the\n *   Finished message from its peer, it may begin to send and receive\n *   application data over the connection.\n *\n * struct {\n *   opaque verify_data[verify_data_length];\n * } Finished;\n *\n * verify_data\n *   PRF(master_secret, finished_label, Hash(handshake_messages))\n *     [0..verify_data_length-1];\n *\n * finished_label\n *   For Finished messages sent by the client, the string\n *   \"client finished\". For Finished messages sent by the server, the\n *   string \"server finished\".\n *\n * verify_data_length depends on the cipher suite. If it is not specified\n * by the cipher suite, then it is 12. Versions of TLS < 1.2 always used\n * 12 bytes.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleFinished = function(c, record, length) {\n  // rewind to get full bytes for message so it can be manually\n  // digested below (special case for Finished messages because they\n  // must be digested *after* handling as opposed to all others)\n  var b = record.fragment;\n  b.read -= 4;\n  var msgBytes = b.bytes();\n  b.read += 4;\n\n  // message contains only verify_data\n  var vd = record.fragment.getBytes();\n\n  // ensure verify data is correct\n  b = forge.util.createBuffer();\n  b.putBuffer(c.session.md5.digest());\n  b.putBuffer(c.session.sha1.digest());\n\n  // set label based on entity type\n  var client = (c.entity === tls.ConnectionEnd.client);\n  var label = client ? 'server finished' : 'client finished';\n\n  // TODO: determine prf function and verify length for TLS 1.2\n  var sp = c.session.sp;\n  var vdl = 12;\n  var prf = prf_TLS1;\n  b = prf(sp.master_secret, label, b.getBytes(), vdl);\n  if(b.getBytes() !== vd) {\n    return c.error(c, {\n      message: 'Invalid verify_data in Finished message.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.decrypt_error\n      }\n    });\n  }\n\n  // digest finished message now that it has been handled\n  c.session.md5.update(msgBytes);\n  c.session.sha1.update(msgBytes);\n\n  // resuming session as client or NOT resuming session as server\n  if((c.session.resuming && client) || (!c.session.resuming && !client)) {\n    // create change cipher spec message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.change_cipher_spec,\n      data: tls.createChangeCipherSpec()\n    }));\n\n    // change current write state to pending write state, clear pending\n    c.state.current.write = c.state.pending.write;\n    c.state.pending = null;\n\n    // create finished message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createFinished(c)\n    }));\n  }\n\n  // expect application data next\n  c.expect = client ? SAD : CAD;\n\n  // handshake complete\n  c.handshaking = false;\n  ++c.handshakes;\n\n  // save access to peer certificate\n  c.peerCertificate = client ?\n    c.session.serverCertificate : c.session.clientCertificate;\n\n  // send records\n  tls.flush(c);\n\n  // now connected\n  c.isConnected = true;\n  c.connected(c);\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when an Alert record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleAlert = function(c, record) {\n  // read alert\n  var b = record.fragment;\n  var alert = {\n    level: b.getByte(),\n    description: b.getByte()\n  };\n\n  // TODO: consider using a table?\n  // get appropriate message\n  var msg;\n  switch(alert.description) {\n  case tls.Alert.Description.close_notify:\n    msg = 'Connection closed.';\n    break;\n  case tls.Alert.Description.unexpected_message:\n    msg = 'Unexpected message.';\n    break;\n  case tls.Alert.Description.bad_record_mac:\n    msg = 'Bad record MAC.';\n    break;\n  case tls.Alert.Description.decryption_failed:\n    msg = 'Decryption failed.';\n    break;\n  case tls.Alert.Description.record_overflow:\n    msg = 'Record overflow.';\n    break;\n  case tls.Alert.Description.decompression_failure:\n    msg = 'Decompression failed.';\n    break;\n  case tls.Alert.Description.handshake_failure:\n    msg = 'Handshake failure.';\n    break;\n  case tls.Alert.Description.bad_certificate:\n    msg = 'Bad certificate.';\n    break;\n  case tls.Alert.Description.unsupported_certificate:\n    msg = 'Unsupported certificate.';\n    break;\n  case tls.Alert.Description.certificate_revoked:\n    msg = 'Certificate revoked.';\n    break;\n  case tls.Alert.Description.certificate_expired:\n    msg = 'Certificate expired.';\n    break;\n  case tls.Alert.Description.certificate_unknown:\n    msg = 'Certificate unknown.';\n    break;\n  case tls.Alert.Description.illegal_parameter:\n    msg = 'Illegal parameter.';\n    break;\n  case tls.Alert.Description.unknown_ca:\n    msg = 'Unknown certificate authority.';\n    break;\n  case tls.Alert.Description.access_denied:\n    msg = 'Access denied.';\n    break;\n  case tls.Alert.Description.decode_error:\n    msg = 'Decode error.';\n    break;\n  case tls.Alert.Description.decrypt_error:\n    msg = 'Decrypt error.';\n    break;\n  case tls.Alert.Description.export_restriction:\n    msg = 'Export restriction.';\n    break;\n  case tls.Alert.Description.protocol_version:\n    msg = 'Unsupported protocol version.';\n    break;\n  case tls.Alert.Description.insufficient_security:\n    msg = 'Insufficient security.';\n    break;\n  case tls.Alert.Description.internal_error:\n    msg = 'Internal error.';\n    break;\n  case tls.Alert.Description.user_canceled:\n    msg = 'User canceled.';\n    break;\n  case tls.Alert.Description.no_renegotiation:\n    msg = 'Renegotiation not supported.';\n    break;\n  default:\n    msg = 'Unknown error.';\n    break;\n  }\n\n  // close connection on close_notify, not an error\n  if(alert.description === tls.Alert.Description.close_notify) {\n    return c.close();\n  }\n\n  // call error handler\n  c.error(c, {\n    message: msg,\n    send: false,\n    // origin is the opposite end\n    origin: (c.entity === tls.ConnectionEnd.client) ? 'server' : 'client',\n    alert: alert\n  });\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a Handshake record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleHandshake = function(c, record) {\n  // get the handshake type and message length\n  var b = record.fragment;\n  var type = b.getByte();\n  var length = b.getInt24();\n\n  // see if the record fragment doesn't yet contain the full message\n  if(length > b.length()) {\n    // cache the record, clear its fragment, and reset the buffer read\n    // pointer before the type and length were read\n    c.fragmented = record;\n    record.fragment = forge.util.createBuffer();\n    b.read -= 4;\n\n    // continue\n    return c.process();\n  }\n\n  // full message now available, clear cache, reset read pointer to\n  // before type and length\n  c.fragmented = null;\n  b.read -= 4;\n\n  // save the handshake bytes for digestion after handler is found\n  // (include type and length of handshake msg)\n  var bytes = b.bytes(length + 4);\n\n  // restore read pointer\n  b.read += 4;\n\n  // handle expected message\n  if(type in hsTable[c.entity][c.expect]) {\n    // initialize server session\n    if(c.entity === tls.ConnectionEnd.server && !c.open && !c.fail) {\n      c.handshaking = true;\n      c.session = {\n        version: null,\n        extensions: {\n          server_name: {\n            serverNameList: []\n          }\n        },\n        cipherSuite: null,\n        compressionMethod: null,\n        serverCertificate: null,\n        clientCertificate: null,\n        md5: forge.md.md5.create(),\n        sha1: forge.md.sha1.create()\n      };\n    }\n\n    /* Update handshake messages digest. Finished and CertificateVerify\n      messages are not digested here. They can't be digested as part of\n      the verify_data that they contain. These messages are manually\n      digested in their handlers. HelloRequest messages are simply never\n      included in the handshake message digest according to spec. */\n    if(type !== tls.HandshakeType.hello_request &&\n      type !== tls.HandshakeType.certificate_verify &&\n      type !== tls.HandshakeType.finished) {\n      c.session.md5.update(bytes);\n      c.session.sha1.update(bytes);\n    }\n\n    // handle specific handshake type record\n    hsTable[c.entity][c.expect][type](c, record, length);\n  } else {\n    // unexpected record\n    tls.handleUnexpected(c, record);\n  }\n};\n\n/**\n * Called when an ApplicationData record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleApplicationData = function(c, record) {\n  // buffer data, notify that its ready\n  c.data.putBuffer(record.fragment);\n  c.dataReady(c);\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a Heartbeat record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleHeartbeat = function(c, record) {\n  // get the heartbeat type and payload\n  var b = record.fragment;\n  var type = b.getByte();\n  var length = b.getInt16();\n  var payload = b.getBytes(length);\n\n  if(type === tls.HeartbeatMessageType.heartbeat_request) {\n    // discard request during handshake or if length is too large\n    if(c.handshaking || length > payload.length) {\n      // continue\n      return c.process();\n    }\n    // retransmit payload\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.heartbeat,\n      data: tls.createHeartbeat(\n        tls.HeartbeatMessageType.heartbeat_response, payload)\n    }));\n    tls.flush(c);\n  } else if(type === tls.HeartbeatMessageType.heartbeat_response) {\n    // check payload against expected payload, discard heartbeat if no match\n    if(payload !== c.expectedHeartbeatPayload) {\n      // continue\n      return c.process();\n    }\n\n    // notify that a valid heartbeat was received\n    if(c.heartbeatReceived) {\n      c.heartbeatReceived(c, forge.util.createBuffer(payload));\n    }\n  }\n\n  // continue\n  c.process();\n};\n\n/**\n * The transistional state tables for receiving TLS records. It maps the\n * current TLS engine state and a received record to a function to handle the\n * record and update the state.\n *\n * For instance, if the current state is SHE, then the TLS engine is expecting\n * a ServerHello record. Once a record is received, the handler function is\n * looked up using the state SHE and the record's content type.\n *\n * The resulting function will either be an error handler or a record handler.\n * The function will take whatever action is appropriate and update the state\n * for the next record.\n *\n * The states are all based on possible server record types. Note that the\n * client will never specifically expect to receive a HelloRequest or an alert\n * from the server so there is no state that reflects this. These messages may\n * occur at any time.\n *\n * There are two tables for mapping states because there is a second tier of\n * types for handshake messages. Once a record with a content type of handshake\n * is received, the handshake record handler will look up the handshake type in\n * the secondary map to get its appropriate handler.\n *\n * Valid message orders are as follows:\n *\n * =======================FULL HANDSHAKE======================\n * Client                                               Server\n *\n * ClientHello                  -------->\n *                                                 ServerHello\n *                                                Certificate*\n *                                          ServerKeyExchange*\n *                                         CertificateRequest*\n *                              <--------      ServerHelloDone\n * Certificate*\n * ClientKeyExchange\n * CertificateVerify*\n * [ChangeCipherSpec]\n * Finished                     -------->\n *                                          [ChangeCipherSpec]\n *                              <--------             Finished\n * Application Data             <------->     Application Data\n *\n * =====================SESSION RESUMPTION=====================\n * Client                                                Server\n *\n * ClientHello                   -------->\n *                                                  ServerHello\n *                                           [ChangeCipherSpec]\n *                               <--------             Finished\n * [ChangeCipherSpec]\n * Finished                      -------->\n * Application Data              <------->     Application Data\n */\n// client expect states (indicate which records are expected to be received)\nvar SHE = 0; // rcv server hello\nvar SCE = 1; // rcv server certificate\nvar SKE = 2; // rcv server key exchange\nvar SCR = 3; // rcv certificate request\nvar SHD = 4; // rcv server hello done\nvar SCC = 5; // rcv change cipher spec\nvar SFI = 6; // rcv finished\nvar SAD = 7; // rcv application data\nvar SER = 8; // not expecting any messages at this point\n\n// server expect states\nvar CHE = 0; // rcv client hello\nvar CCE = 1; // rcv client certificate\nvar CKE = 2; // rcv client key exchange\nvar CCV = 3; // rcv certificate verify\nvar CCC = 4; // rcv change cipher spec\nvar CFI = 5; // rcv finished\nvar CAD = 6; // rcv application data\nvar CER = 7; // not expecting any messages at this point\n\n// map client current expect state and content type to function\nvar __ = tls.handleUnexpected;\nvar R0 = tls.handleChangeCipherSpec;\nvar R1 = tls.handleAlert;\nvar R2 = tls.handleHandshake;\nvar R3 = tls.handleApplicationData;\nvar R4 = tls.handleHeartbeat;\nvar ctTable = [];\nctTable[tls.ConnectionEnd.client] = [\n//      CC,AL,HS,AD,HB\n/*SHE*/[__,R1,R2,__,R4],\n/*SCE*/[__,R1,R2,__,R4],\n/*SKE*/[__,R1,R2,__,R4],\n/*SCR*/[__,R1,R2,__,R4],\n/*SHD*/[__,R1,R2,__,R4],\n/*SCC*/[R0,R1,__,__,R4],\n/*SFI*/[__,R1,R2,__,R4],\n/*SAD*/[__,R1,R2,R3,R4],\n/*SER*/[__,R1,R2,__,R4]\n];\n\n// map server current expect state and content type to function\nctTable[tls.ConnectionEnd.server] = [\n//      CC,AL,HS,AD\n/*CHE*/[__,R1,R2,__,R4],\n/*CCE*/[__,R1,R2,__,R4],\n/*CKE*/[__,R1,R2,__,R4],\n/*CCV*/[__,R1,R2,__,R4],\n/*CCC*/[R0,R1,__,__,R4],\n/*CFI*/[__,R1,R2,__,R4],\n/*CAD*/[__,R1,R2,R3,R4],\n/*CER*/[__,R1,R2,__,R4]\n];\n\n// map client current expect state and handshake type to function\nvar H0 = tls.handleHelloRequest;\nvar H1 = tls.handleServerHello;\nvar H2 = tls.handleCertificate;\nvar H3 = tls.handleServerKeyExchange;\nvar H4 = tls.handleCertificateRequest;\nvar H5 = tls.handleServerHelloDone;\nvar H6 = tls.handleFinished;\nvar hsTable = [];\nhsTable[tls.ConnectionEnd.client] = [\n//      HR,01,SH,03,04,05,06,07,08,09,10,SC,SK,CR,HD,15,CK,17,18,19,FI\n/*SHE*/[__,__,H1,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*SCE*/[H0,__,__,__,__,__,__,__,__,__,__,H2,H3,H4,H5,__,__,__,__,__,__],\n/*SKE*/[H0,__,__,__,__,__,__,__,__,__,__,__,H3,H4,H5,__,__,__,__,__,__],\n/*SCR*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,H4,H5,__,__,__,__,__,__],\n/*SHD*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,H5,__,__,__,__,__,__],\n/*SCC*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*SFI*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,H6],\n/*SAD*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*SER*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__]\n];\n\n// map server current expect state and handshake type to function\n// Note: CAD[CH] does not map to FB because renegotation is prohibited\nvar H7 = tls.handleClientHello;\nvar H8 = tls.handleClientKeyExchange;\nvar H9 = tls.handleCertificateVerify;\nhsTable[tls.ConnectionEnd.server] = [\n//      01,CH,02,03,04,05,06,07,08,09,10,CC,12,13,14,CV,CK,17,18,19,FI\n/*CHE*/[__,H7,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*CCE*/[__,__,__,__,__,__,__,__,__,__,__,H2,__,__,__,__,__,__,__,__,__],\n/*CKE*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,H8,__,__,__,__],\n/*CCV*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,H9,__,__,__,__,__],\n/*CCC*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*CFI*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,H6],\n/*CAD*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*CER*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__]\n];\n\n/**\n * Generates the master_secret and keys using the given security parameters.\n *\n * The security parameters for a TLS connection state are defined as such:\n *\n * struct {\n *   ConnectionEnd          entity;\n *   PRFAlgorithm           prf_algorithm;\n *   BulkCipherAlgorithm    bulk_cipher_algorithm;\n *   CipherType             cipher_type;\n *   uint8                  enc_key_length;\n *   uint8                  block_length;\n *   uint8                  fixed_iv_length;\n *   uint8                  record_iv_length;\n *   MACAlgorithm           mac_algorithm;\n *   uint8                  mac_length;\n *   uint8                  mac_key_length;\n *   CompressionMethod      compression_algorithm;\n *   opaque                 master_secret[48];\n *   opaque                 client_random[32];\n *   opaque                 server_random[32];\n * } SecurityParameters;\n *\n * Note that this definition is from TLS 1.2. In TLS 1.0 some of these\n * parameters are ignored because, for instance, the PRFAlgorithm is a\n * builtin-fixed algorithm combining iterations of MD5 and SHA-1 in TLS 1.0.\n *\n * The Record Protocol requires an algorithm to generate keys required by the\n * current connection state.\n *\n * The master secret is expanded into a sequence of secure bytes, which is then\n * split to a client write MAC key, a server write MAC key, a client write\n * encryption key, and a server write encryption key. In TLS 1.0 a client write\n * IV and server write IV are also generated. Each of these is generated from\n * the byte sequence in that order. Unused values are empty. In TLS 1.2, some\n * AEAD ciphers may additionally require a client write IV and a server write\n * IV (see Section 6.2.3.3).\n *\n * When keys, MAC keys, and IVs are generated, the master secret is used as an\n * entropy source.\n *\n * To generate the key material, compute:\n *\n * master_secret = PRF(pre_master_secret, \"master secret\",\n *                     ClientHello.random + ServerHello.random)\n *\n * key_block = PRF(SecurityParameters.master_secret,\n *                 \"key expansion\",\n *                 SecurityParameters.server_random +\n *                 SecurityParameters.client_random);\n *\n * until enough output has been generated. Then, the key_block is\n * partitioned as follows:\n *\n * client_write_MAC_key[SecurityParameters.mac_key_length]\n * server_write_MAC_key[SecurityParameters.mac_key_length]\n * client_write_key[SecurityParameters.enc_key_length]\n * server_write_key[SecurityParameters.enc_key_length]\n * client_write_IV[SecurityParameters.fixed_iv_length]\n * server_write_IV[SecurityParameters.fixed_iv_length]\n *\n * In TLS 1.2, the client_write_IV and server_write_IV are only generated for\n * implicit nonce techniques as described in Section 3.2.1 of [AEAD]. This\n * implementation uses TLS 1.0 so IVs are generated.\n *\n * Implementation note: The currently defined cipher suite which requires the\n * most material is AES_256_CBC_SHA256. It requires 2 x 32 byte keys and 2 x 32\n * byte MAC keys, for a total 128 bytes of key material. In TLS 1.0 it also\n * requires 2 x 16 byte IVs, so it actually takes 160 bytes of key material.\n *\n * @param c the connection.\n * @param sp the security parameters to use.\n *\n * @return the security keys.\n */\ntls.generateKeys = function(c, sp) {\n  // TLS_RSA_WITH_AES_128_CBC_SHA (required to be compliant with TLS 1.2) &\n  // TLS_RSA_WITH_AES_256_CBC_SHA are the only cipher suites implemented\n  // at present\n\n  // TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA is required to be compliant with\n  // TLS 1.0 but we don't care right now because AES is better and we have\n  // an implementation for it\n\n  // TODO: TLS 1.2 implementation\n  /*\n  // determine the PRF\n  var prf;\n  switch(sp.prf_algorithm) {\n  case tls.PRFAlgorithm.tls_prf_sha256:\n    prf = prf_sha256;\n    break;\n  default:\n    // should never happen\n    throw new Error('Invalid PRF');\n  }\n  */\n\n  // TLS 1.0/1.1 implementation\n  var prf = prf_TLS1;\n\n  // concatenate server and client random\n  var random = sp.client_random + sp.server_random;\n\n  // only create master secret if session is new\n  if(!c.session.resuming) {\n    // create master secret, clean up pre-master secret\n    sp.master_secret = prf(\n      sp.pre_master_secret, 'master secret', random, 48).bytes();\n    sp.pre_master_secret = null;\n  }\n\n  // generate the amount of key material needed\n  random = sp.server_random + sp.client_random;\n  var length = 2 * sp.mac_key_length + 2 * sp.enc_key_length;\n\n  // include IV for TLS/1.0\n  var tls10 = (c.version.major === tls.Versions.TLS_1_0.major &&\n    c.version.minor === tls.Versions.TLS_1_0.minor);\n  if(tls10) {\n    length += 2 * sp.fixed_iv_length;\n  }\n  var km = prf(sp.master_secret, 'key expansion', random, length);\n\n  // split the key material into the MAC and encryption keys\n  var rval = {\n    client_write_MAC_key: km.getBytes(sp.mac_key_length),\n    server_write_MAC_key: km.getBytes(sp.mac_key_length),\n    client_write_key: km.getBytes(sp.enc_key_length),\n    server_write_key: km.getBytes(sp.enc_key_length)\n  };\n\n  // include TLS 1.0 IVs\n  if(tls10) {\n    rval.client_write_IV = km.getBytes(sp.fixed_iv_length);\n    rval.server_write_IV = km.getBytes(sp.fixed_iv_length);\n  }\n\n  return rval;\n};\n\n/**\n * Creates a new initialized TLS connection state. A connection state has\n * a read mode and a write mode.\n *\n * compression state:\n *   The current state of the compression algorithm.\n *\n * cipher state:\n *   The current state of the encryption algorithm. This will consist of the\n *   scheduled key for that connection. For stream ciphers, this will also\n *   contain whatever state information is necessary to allow the stream to\n *   continue to encrypt or decrypt data.\n *\n * MAC key:\n *   The MAC key for the connection.\n *\n * sequence number:\n *   Each connection state contains a sequence number, which is maintained\n *   separately for read and write states. The sequence number MUST be set to\n *   zero whenever a connection state is made the active state. Sequence\n *   numbers are of type uint64 and may not exceed 2^64-1. Sequence numbers do\n *   not wrap. If a TLS implementation would need to wrap a sequence number,\n *   it must renegotiate instead. A sequence number is incremented after each\n *   record: specifically, the first record transmitted under a particular\n *   connection state MUST use sequence number 0.\n *\n * @param c the connection.\n *\n * @return the new initialized TLS connection state.\n */\ntls.createConnectionState = function(c) {\n  var client = (c.entity === tls.ConnectionEnd.client);\n\n  var createMode = function() {\n    var mode = {\n      // two 32-bit numbers, first is most significant\n      sequenceNumber: [0, 0],\n      macKey: null,\n      macLength: 0,\n      macFunction: null,\n      cipherState: null,\n      cipherFunction: function(record) {return true;},\n      compressionState: null,\n      compressFunction: function(record) {return true;},\n      updateSequenceNumber: function() {\n        if(mode.sequenceNumber[1] === 0xFFFFFFFF) {\n          mode.sequenceNumber[1] = 0;\n          ++mode.sequenceNumber[0];\n        } else {\n          ++mode.sequenceNumber[1];\n        }\n      }\n    };\n    return mode;\n  };\n  var state = {\n    read: createMode(),\n    write: createMode()\n  };\n\n  // update function in read mode will decrypt then decompress a record\n  state.read.update = function(c, record) {\n    if(!state.read.cipherFunction(record, state.read)) {\n      c.error(c, {\n        message: 'Could not decrypt record or bad MAC.',\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          // doesn't matter if decryption failed or MAC was\n          // invalid, return the same error so as not to reveal\n          // which one occurred\n          description: tls.Alert.Description.bad_record_mac\n        }\n      });\n    } else if(!state.read.compressFunction(c, record, state.read)) {\n      c.error(c, {\n        message: 'Could not decompress record.',\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.decompression_failure\n        }\n      });\n    }\n    return !c.fail;\n  };\n\n  // update function in write mode will compress then encrypt a record\n  state.write.update = function(c, record) {\n    if(!state.write.compressFunction(c, record, state.write)) {\n      // error, but do not send alert since it would require\n      // compression as well\n      c.error(c, {\n        message: 'Could not compress record.',\n        send: false,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.internal_error\n        }\n      });\n    } else if(!state.write.cipherFunction(record, state.write)) {\n      // error, but do not send alert since it would require\n      // encryption as well\n      c.error(c, {\n        message: 'Could not encrypt record.',\n        send: false,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.internal_error\n        }\n      });\n    }\n    return !c.fail;\n  };\n\n  // handle security parameters\n  if(c.session) {\n    var sp = c.session.sp;\n    c.session.cipherSuite.initSecurityParameters(sp);\n\n    // generate keys\n    sp.keys = tls.generateKeys(c, sp);\n    state.read.macKey = client ?\n      sp.keys.server_write_MAC_key : sp.keys.client_write_MAC_key;\n    state.write.macKey = client ?\n      sp.keys.client_write_MAC_key : sp.keys.server_write_MAC_key;\n\n    // cipher suite setup\n    c.session.cipherSuite.initConnectionState(state, c, sp);\n\n    // compression setup\n    switch(sp.compression_algorithm) {\n    case tls.CompressionMethod.none:\n      break;\n    case tls.CompressionMethod.deflate:\n      state.read.compressFunction = inflate;\n      state.write.compressFunction = deflate;\n      break;\n    default:\n      throw new Error('Unsupported compression algorithm.');\n    }\n  }\n\n  return state;\n};\n\n/**\n * Creates a Random structure.\n *\n * struct {\n *   uint32 gmt_unix_time;\n *   opaque random_bytes[28];\n * } Random;\n *\n * gmt_unix_time:\n *   The current time and date in standard UNIX 32-bit format (seconds since\n *   the midnight starting Jan 1, 1970, UTC, ignoring leap seconds) according\n *   to the sender's internal clock. Clocks are not required to be set\n *   correctly by the basic TLS protocol; higher-level or application\n *   protocols may define additional requirements. Note that, for historical\n *   reasons, the data element is named using GMT, the predecessor of the\n *   current worldwide time base, UTC.\n * random_bytes:\n *   28 bytes generated by a secure random number generator.\n *\n * @return the Random structure as a byte array.\n */\ntls.createRandom = function() {\n  // get UTC milliseconds\n  var d = new Date();\n  var utc = +d + d.getTimezoneOffset() * 60000;\n  var rval = forge.util.createBuffer();\n  rval.putInt32(utc);\n  rval.putBytes(forge.random.getBytes(28));\n  return rval;\n};\n\n/**\n * Creates a TLS record with the given type and data.\n *\n * @param c the connection.\n * @param options:\n *   type: the record type.\n *   data: the plain text data in a byte buffer.\n *\n * @return the created record.\n */\ntls.createRecord = function(c, options) {\n  if(!options.data) {\n    return null;\n  }\n  var record = {\n    type: options.type,\n    version: {\n      major: c.version.major,\n      minor: c.version.minor\n    },\n    length: options.data.length(),\n    fragment: options.data\n  };\n  return record;\n};\n\n/**\n * Creates a TLS alert record.\n *\n * @param c the connection.\n * @param alert:\n *   level: the TLS alert level.\n *   description: the TLS alert description.\n *\n * @return the created alert record.\n */\ntls.createAlert = function(c, alert) {\n  var b = forge.util.createBuffer();\n  b.putByte(alert.level);\n  b.putByte(alert.description);\n  return tls.createRecord(c, {\n    type: tls.ContentType.alert,\n    data: b\n  });\n};\n\n/* The structure of a TLS handshake message.\n *\n * struct {\n *    HandshakeType msg_type;    // handshake type\n *    uint24 length;             // bytes in message\n *    select(HandshakeType) {\n *       case hello_request:       HelloRequest;\n *       case client_hello:        ClientHello;\n *       case server_hello:        ServerHello;\n *       case certificate:         Certificate;\n *       case server_key_exchange: ServerKeyExchange;\n *       case certificate_request: CertificateRequest;\n *       case server_hello_done:   ServerHelloDone;\n *       case certificate_verify:  CertificateVerify;\n *       case client_key_exchange: ClientKeyExchange;\n *       case finished:            Finished;\n *    } body;\n * } Handshake;\n */\n\n/**\n * Creates a ClientHello message.\n *\n * opaque SessionID<0..32>;\n * enum { null(0), deflate(1), (255) } CompressionMethod;\n * uint8 CipherSuite[2];\n *\n * struct {\n *   ProtocolVersion client_version;\n *   Random random;\n *   SessionID session_id;\n *   CipherSuite cipher_suites<2..2^16-2>;\n *   CompressionMethod compression_methods<1..2^8-1>;\n *   select(extensions_present) {\n *     case false:\n *       struct {};\n *     case true:\n *       Extension extensions<0..2^16-1>;\n *   };\n * } ClientHello;\n *\n * The extension format for extended client hellos and server hellos is:\n *\n * struct {\n *   ExtensionType extension_type;\n *   opaque extension_data<0..2^16-1>;\n * } Extension;\n *\n * Here:\n *\n * - \"extension_type\" identifies the particular extension type.\n * - \"extension_data\" contains information specific to the particular\n * extension type.\n *\n * The extension types defined in this document are:\n *\n * enum {\n *   server_name(0), max_fragment_length(1),\n *   client_certificate_url(2), trusted_ca_keys(3),\n *   truncated_hmac(4), status_request(5), (65535)\n * } ExtensionType;\n *\n * @param c the connection.\n *\n * @return the ClientHello byte buffer.\n */\ntls.createClientHello = function(c) {\n  // save hello version\n  c.session.clientHelloVersion = {\n    major: c.version.major,\n    minor: c.version.minor\n  };\n\n  // create supported cipher suites\n  var cipherSuites = forge.util.createBuffer();\n  for(var i = 0; i < c.cipherSuites.length; ++i) {\n    var cs = c.cipherSuites[i];\n    cipherSuites.putByte(cs.id[0]);\n    cipherSuites.putByte(cs.id[1]);\n  }\n  var cSuites = cipherSuites.length();\n\n  // create supported compression methods, null always supported, but\n  // also support deflate if connection has inflate and deflate methods\n  var compressionMethods = forge.util.createBuffer();\n  compressionMethods.putByte(tls.CompressionMethod.none);\n  // FIXME: deflate support disabled until issues with raw deflate data\n  // without zlib headers are resolved\n  /*\n  if(c.inflate !== null && c.deflate !== null) {\n    compressionMethods.putByte(tls.CompressionMethod.deflate);\n  }\n  */\n  var cMethods = compressionMethods.length();\n\n  // create TLS SNI (server name indication) extension if virtual host\n  // has been specified, see RFC 3546\n  var extensions = forge.util.createBuffer();\n  if(c.virtualHost) {\n    // create extension struct\n    var ext = forge.util.createBuffer();\n    ext.putByte(0x00); // type server_name (ExtensionType is 2 bytes)\n    ext.putByte(0x00);\n\n    /* In order to provide the server name, clients MAY include an\n     * extension of type \"server_name\" in the (extended) client hello.\n     * The \"extension_data\" field of this extension SHALL contain\n     * \"ServerNameList\" where:\n     *\n     * struct {\n     *   NameType name_type;\n     *   select(name_type) {\n     *     case host_name: HostName;\n     *   } name;\n     * } ServerName;\n     *\n     * enum {\n     *   host_name(0), (255)\n     * } NameType;\n     *\n     * opaque HostName<1..2^16-1>;\n     *\n     * struct {\n     *   ServerName server_name_list<1..2^16-1>\n     * } ServerNameList;\n     */\n    var serverName = forge.util.createBuffer();\n    serverName.putByte(0x00); // type host_name\n    writeVector(serverName, 2, forge.util.createBuffer(c.virtualHost));\n\n    // ServerNameList is in extension_data\n    var snList = forge.util.createBuffer();\n    writeVector(snList, 2, serverName);\n    writeVector(ext, 2, snList);\n    extensions.putBuffer(ext);\n  }\n  var extLength = extensions.length();\n  if(extLength > 0) {\n    // add extension vector length\n    extLength += 2;\n  }\n\n  // determine length of the handshake message\n  // cipher suites and compression methods size will need to be\n  // updated if more get added to the list\n  var sessionId = c.session.id;\n  var length =\n    sessionId.length + 1 + // session ID vector\n    2 +                    // version (major + minor)\n    4 + 28 +               // random time and random bytes\n    2 + cSuites +          // cipher suites vector\n    1 + cMethods +         // compression methods vector\n    extLength;             // extensions vector\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.client_hello);\n  rval.putInt24(length);                     // handshake length\n  rval.putByte(c.version.major);             // major version\n  rval.putByte(c.version.minor);             // minor version\n  rval.putBytes(c.session.sp.client_random); // random time + bytes\n  writeVector(rval, 1, forge.util.createBuffer(sessionId));\n  writeVector(rval, 2, cipherSuites);\n  writeVector(rval, 1, compressionMethods);\n  if(extLength > 0) {\n    writeVector(rval, 2, extensions);\n  }\n  return rval;\n};\n\n/**\n * Creates a ServerHello message.\n *\n * @param c the connection.\n *\n * @return the ServerHello byte buffer.\n */\ntls.createServerHello = function(c) {\n  // determine length of the handshake message\n  var sessionId = c.session.id;\n  var length =\n    sessionId.length + 1 + // session ID vector\n    2 +                    // version (major + minor)\n    4 + 28 +               // random time and random bytes\n    2 +                    // chosen cipher suite\n    1;                     // chosen compression method\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.server_hello);\n  rval.putInt24(length);                     // handshake length\n  rval.putByte(c.version.major);             // major version\n  rval.putByte(c.version.minor);             // minor version\n  rval.putBytes(c.session.sp.server_random); // random time + bytes\n  writeVector(rval, 1, forge.util.createBuffer(sessionId));\n  rval.putByte(c.session.cipherSuite.id[0]);\n  rval.putByte(c.session.cipherSuite.id[1]);\n  rval.putByte(c.session.compressionMethod);\n  return rval;\n};\n\n/**\n * Creates a Certificate message.\n *\n * When this message will be sent:\n *   This is the first message the client can send after receiving a server\n *   hello done message and the first message the server can send after\n *   sending a ServerHello. This client message is only sent if the server\n *   requests a certificate. If no suitable certificate is available, the\n *   client should send a certificate message containing no certificates. If\n *   client authentication is required by the server for the handshake to\n *   continue, it may respond with a fatal handshake failure alert.\n *\n * opaque ASN.1Cert<1..2^24-1>;\n *\n * struct {\n *   ASN.1Cert certificate_list<0..2^24-1>;\n * } Certificate;\n *\n * @param c the connection.\n *\n * @return the Certificate byte buffer.\n */\ntls.createCertificate = function(c) {\n  // TODO: check certificate request to ensure types are supported\n\n  // get a certificate (a certificate as a PEM string)\n  var client = (c.entity === tls.ConnectionEnd.client);\n  var cert = null;\n  if(c.getCertificate) {\n    var hint;\n    if(client) {\n      hint = c.session.certificateRequest;\n    } else {\n      hint = c.session.extensions.server_name.serverNameList;\n    }\n    cert = c.getCertificate(c, hint);\n  }\n\n  // buffer to hold certificate list\n  var certList = forge.util.createBuffer();\n  if(cert !== null) {\n    try {\n      // normalize cert to a chain of certificates\n      if(!forge.util.isArray(cert)) {\n        cert = [cert];\n      }\n      var asn1 = null;\n      for(var i = 0; i < cert.length; ++i) {\n        var msg = forge.pem.decode(cert[i])[0];\n        if(msg.type !== 'CERTIFICATE' &&\n          msg.type !== 'X509 CERTIFICATE' &&\n          msg.type !== 'TRUSTED CERTIFICATE') {\n          var error = new Error('Could not convert certificate from PEM; PEM ' +\n            'header type is not \"CERTIFICATE\", \"X509 CERTIFICATE\", or ' +\n            '\"TRUSTED CERTIFICATE\".');\n          error.headerType = msg.type;\n          throw error;\n        }\n        if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n          throw new Error('Could not convert certificate from PEM; PEM is encrypted.');\n        }\n\n        var der = forge.util.createBuffer(msg.body);\n        if(asn1 === null) {\n          asn1 = forge.asn1.fromDer(der.bytes(), false);\n        }\n\n        // certificate entry is itself a vector with 3 length bytes\n        var certBuffer = forge.util.createBuffer();\n        writeVector(certBuffer, 3, der);\n\n        // add cert vector to cert list vector\n        certList.putBuffer(certBuffer);\n      }\n\n      // save certificate\n      cert = forge.pki.certificateFromAsn1(asn1);\n      if(client) {\n        c.session.clientCertificate = cert;\n      } else {\n        c.session.serverCertificate = cert;\n      }\n    } catch(ex) {\n      return c.error(c, {\n        message: 'Could not send certificate list.',\n        cause: ex,\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.bad_certificate\n        }\n      });\n    }\n  }\n\n  // determine length of the handshake message\n  var length = 3 + certList.length(); // cert list vector\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.certificate);\n  rval.putInt24(length);\n  writeVector(rval, 3, certList);\n  return rval;\n};\n\n/**\n * Creates a ClientKeyExchange message.\n *\n * When this message will be sent:\n *   This message is always sent by the client. It will immediately follow the\n *   client certificate message, if it is sent. Otherwise it will be the first\n *   message sent by the client after it receives the server hello done\n *   message.\n *\n * Meaning of this message:\n *   With this message, the premaster secret is set, either though direct\n *   transmission of the RSA-encrypted secret, or by the transmission of\n *   Diffie-Hellman parameters which will allow each side to agree upon the\n *   same premaster secret. When the key exchange method is DH_RSA or DH_DSS,\n *   client certification has been requested, and the client was able to\n *   respond with a certificate which contained a Diffie-Hellman public key\n *   whose parameters (group and generator) matched those specified by the\n *   server in its certificate, this message will not contain any data.\n *\n * Meaning of this message:\n *   If RSA is being used for key agreement and authentication, the client\n *   generates a 48-byte premaster secret, encrypts it using the public key\n *   from the server's certificate or the temporary RSA key provided in a\n *   server key exchange message, and sends the result in an encrypted\n *   premaster secret message. This structure is a variant of the client\n *   key exchange message, not a message in itself.\n *\n * struct {\n *   select(KeyExchangeAlgorithm) {\n *     case rsa: EncryptedPreMasterSecret;\n *     case diffie_hellman: ClientDiffieHellmanPublic;\n *   } exchange_keys;\n * } ClientKeyExchange;\n *\n * struct {\n *   ProtocolVersion client_version;\n *   opaque random[46];\n * } PreMasterSecret;\n *\n * struct {\n *   public-key-encrypted PreMasterSecret pre_master_secret;\n * } EncryptedPreMasterSecret;\n *\n * A public-key-encrypted element is encoded as a vector <0..2^16-1>.\n *\n * @param c the connection.\n *\n * @return the ClientKeyExchange byte buffer.\n */\ntls.createClientKeyExchange = function(c) {\n  // create buffer to encrypt\n  var b = forge.util.createBuffer();\n\n  // add highest client-supported protocol to help server avoid version\n  // rollback attacks\n  b.putByte(c.session.clientHelloVersion.major);\n  b.putByte(c.session.clientHelloVersion.minor);\n\n  // generate and add 46 random bytes\n  b.putBytes(forge.random.getBytes(46));\n\n  // save pre-master secret\n  var sp = c.session.sp;\n  sp.pre_master_secret = b.getBytes();\n\n  // RSA-encrypt the pre-master secret\n  var key = c.session.serverCertificate.publicKey;\n  b = key.encrypt(sp.pre_master_secret);\n\n  /* Note: The encrypted pre-master secret will be stored in a\n    public-key-encrypted opaque vector that has the length prefixed using\n    2 bytes, so include those 2 bytes in the handshake message length. This\n    is done as a minor optimization instead of calling writeVector(). */\n\n  // determine length of the handshake message\n  var length = b.length + 2;\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.client_key_exchange);\n  rval.putInt24(length);\n  // add vector length bytes\n  rval.putInt16(b.length);\n  rval.putBytes(b);\n  return rval;\n};\n\n/**\n * Creates a ServerKeyExchange message.\n *\n * @param c the connection.\n *\n * @return the ServerKeyExchange byte buffer.\n */\ntls.createServerKeyExchange = function(c) {\n  // this implementation only supports RSA, no Diffie-Hellman support,\n  // so this record is empty\n\n  // determine length of the handshake message\n  var length = 0;\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  if(length > 0) {\n    rval.putByte(tls.HandshakeType.server_key_exchange);\n    rval.putInt24(length);\n  }\n  return rval;\n};\n\n/**\n * Gets the signed data used to verify a client-side certificate. See\n * tls.createCertificateVerify() for details.\n *\n * @param c the connection.\n * @param callback the callback to call once the signed data is ready.\n */\ntls.getClientSignature = function(c, callback) {\n  // generate data to RSA encrypt\n  var b = forge.util.createBuffer();\n  b.putBuffer(c.session.md5.digest());\n  b.putBuffer(c.session.sha1.digest());\n  b = b.getBytes();\n\n  // create default signing function as necessary\n  c.getSignature = c.getSignature || function(c, b, callback) {\n    // do rsa encryption, call callback\n    var privateKey = null;\n    if(c.getPrivateKey) {\n      try {\n        privateKey = c.getPrivateKey(c, c.session.clientCertificate);\n        privateKey = forge.pki.privateKeyFromPem(privateKey);\n      } catch(ex) {\n        c.error(c, {\n          message: 'Could not get private key.',\n          cause: ex,\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.internal_error\n          }\n        });\n      }\n    }\n    if(privateKey === null) {\n      c.error(c, {\n        message: 'No private key set.',\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.internal_error\n        }\n      });\n    } else {\n      b = privateKey.sign(b, null);\n    }\n    callback(c, b);\n  };\n\n  // get client signature\n  c.getSignature(c, b, callback);\n};\n\n/**\n * Creates a CertificateVerify message.\n *\n * Meaning of this message:\n *   This structure conveys the client's Diffie-Hellman public value\n *   (Yc) if it was not already included in the client's certificate.\n *   The encoding used for Yc is determined by the enumerated\n *   PublicValueEncoding. This structure is a variant of the client\n *   key exchange message, not a message in itself.\n *\n * When this message will be sent:\n *   This message is used to provide explicit verification of a client\n *   certificate. This message is only sent following a client\n *   certificate that has signing capability (i.e. all certificates\n *   except those containing fixed Diffie-Hellman parameters). When\n *   sent, it will immediately follow the client key exchange message.\n *\n * struct {\n *   Signature signature;\n * } CertificateVerify;\n *\n * CertificateVerify.signature.md5_hash\n *   MD5(handshake_messages);\n *\n * Certificate.signature.sha_hash\n *   SHA(handshake_messages);\n *\n * Here handshake_messages refers to all handshake messages sent or\n * received starting at client hello up to but not including this\n * message, including the type and length fields of the handshake\n * messages.\n *\n * select(SignatureAlgorithm) {\n *   case anonymous: struct { };\n *   case rsa:\n *     digitally-signed struct {\n *       opaque md5_hash[16];\n *       opaque sha_hash[20];\n *     };\n *   case dsa:\n *     digitally-signed struct {\n *       opaque sha_hash[20];\n *     };\n * } Signature;\n *\n * In digital signing, one-way hash functions are used as input for a\n * signing algorithm. A digitally-signed element is encoded as an opaque\n * vector <0..2^16-1>, where the length is specified by the signing\n * algorithm and key.\n *\n * In RSA signing, a 36-byte structure of two hashes (one SHA and one\n * MD5) is signed (encrypted with the private key). It is encoded with\n * PKCS #1 block type 0 or type 1 as described in [PKCS1].\n *\n * In DSS, the 20 bytes of the SHA hash are run directly through the\n * Digital Signing Algorithm with no additional hashing.\n *\n * @param c the connection.\n * @param signature the signature to include in the message.\n *\n * @return the CertificateVerify byte buffer.\n */\ntls.createCertificateVerify = function(c, signature) {\n  /* Note: The signature will be stored in a \"digitally-signed\" opaque\n    vector that has the length prefixed using 2 bytes, so include those\n    2 bytes in the handshake message length. This is done as a minor\n    optimization instead of calling writeVector(). */\n\n  // determine length of the handshake message\n  var length = signature.length + 2;\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.certificate_verify);\n  rval.putInt24(length);\n  // add vector length bytes\n  rval.putInt16(signature.length);\n  rval.putBytes(signature);\n  return rval;\n};\n\n/**\n * Creates a CertificateRequest message.\n *\n * @param c the connection.\n *\n * @return the CertificateRequest byte buffer.\n */\ntls.createCertificateRequest = function(c) {\n  // TODO: support other certificate types\n  var certTypes = forge.util.createBuffer();\n\n  // common RSA certificate type\n  certTypes.putByte(0x01);\n\n  // add distinguished names from CA store\n  var cAs = forge.util.createBuffer();\n  for(var key in c.caStore.certs) {\n    var cert = c.caStore.certs[key];\n    var dn = forge.pki.distinguishedNameToAsn1(cert.subject);\n    var byteBuffer = forge.asn1.toDer(dn);\n    cAs.putInt16(byteBuffer.length());\n    cAs.putBuffer(byteBuffer);\n  }\n\n  // TODO: TLS 1.2+ has a different format\n\n  // determine length of the handshake message\n  var length =\n    1 + certTypes.length() +\n    2 + cAs.length();\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.certificate_request);\n  rval.putInt24(length);\n  writeVector(rval, 1, certTypes);\n  writeVector(rval, 2, cAs);\n  return rval;\n};\n\n/**\n * Creates a ServerHelloDone message.\n *\n * @param c the connection.\n *\n * @return the ServerHelloDone byte buffer.\n */\ntls.createServerHelloDone = function(c) {\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.server_hello_done);\n  rval.putInt24(0);\n  return rval;\n};\n\n/**\n * Creates a ChangeCipherSpec message.\n *\n * The change cipher spec protocol exists to signal transitions in\n * ciphering strategies. The protocol consists of a single message,\n * which is encrypted and compressed under the current (not the pending)\n * connection state. The message consists of a single byte of value 1.\n *\n * struct {\n *   enum { change_cipher_spec(1), (255) } type;\n * } ChangeCipherSpec;\n *\n * @return the ChangeCipherSpec byte buffer.\n */\ntls.createChangeCipherSpec = function() {\n  var rval = forge.util.createBuffer();\n  rval.putByte(0x01);\n  return rval;\n};\n\n/**\n * Creates a Finished message.\n *\n * struct {\n *   opaque verify_data[12];\n * } Finished;\n *\n * verify_data\n *   PRF(master_secret, finished_label, MD5(handshake_messages) +\n *   SHA-1(handshake_messages)) [0..11];\n *\n * finished_label\n *   For Finished messages sent by the client, the string \"client\n *   finished\". For Finished messages sent by the server, the\n *   string \"server finished\".\n *\n * handshake_messages\n *   All of the data from all handshake messages up to but not\n *   including this message. This is only data visible at the\n *   handshake layer and does not include record layer headers.\n *   This is the concatenation of all the Handshake structures as\n *   defined in 7.4 exchanged thus far.\n *\n * @param c the connection.\n *\n * @return the Finished byte buffer.\n */\ntls.createFinished = function(c) {\n  // generate verify_data\n  var b = forge.util.createBuffer();\n  b.putBuffer(c.session.md5.digest());\n  b.putBuffer(c.session.sha1.digest());\n\n  // TODO: determine prf function and verify length for TLS 1.2\n  var client = (c.entity === tls.ConnectionEnd.client);\n  var sp = c.session.sp;\n  var vdl = 12;\n  var prf = prf_TLS1;\n  var label = client ? 'client finished' : 'server finished';\n  b = prf(sp.master_secret, label, b.getBytes(), vdl);\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.finished);\n  rval.putInt24(b.length());\n  rval.putBuffer(b);\n  return rval;\n};\n\n/**\n * Creates a HeartbeatMessage (See RFC 6520).\n *\n * struct {\n *   HeartbeatMessageType type;\n *   uint16 payload_length;\n *   opaque payload[HeartbeatMessage.payload_length];\n *   opaque padding[padding_length];\n * } HeartbeatMessage;\n *\n * The total length of a HeartbeatMessage MUST NOT exceed 2^14 or\n * max_fragment_length when negotiated as defined in [RFC6066].\n *\n * type: The message type, either heartbeat_request or heartbeat_response.\n *\n * payload_length: The length of the payload.\n *\n * payload: The payload consists of arbitrary content.\n *\n * padding: The padding is random content that MUST be ignored by the\n *   receiver. The length of a HeartbeatMessage is TLSPlaintext.length\n *   for TLS and DTLSPlaintext.length for DTLS. Furthermore, the\n *   length of the type field is 1 byte, and the length of the\n *   payload_length is 2. Therefore, the padding_length is\n *   TLSPlaintext.length - payload_length - 3 for TLS and\n *   DTLSPlaintext.length - payload_length - 3 for DTLS. The\n *   padding_length MUST be at least 16.\n *\n * The sender of a HeartbeatMessage MUST use a random padding of at\n * least 16 bytes. The padding of a received HeartbeatMessage message\n * MUST be ignored.\n *\n * If the payload_length of a received HeartbeatMessage is too large,\n * the received HeartbeatMessage MUST be discarded silently.\n *\n * @param c the connection.\n * @param type the tls.HeartbeatMessageType.\n * @param payload the heartbeat data to send as the payload.\n * @param [payloadLength] the payload length to use, defaults to the\n *          actual payload length.\n *\n * @return the HeartbeatRequest byte buffer.\n */\ntls.createHeartbeat = function(type, payload, payloadLength) {\n  if(typeof payloadLength === 'undefined') {\n    payloadLength = payload.length;\n  }\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(type);               // heartbeat message type\n  rval.putInt16(payloadLength);     // payload length\n  rval.putBytes(payload);           // payload\n  // padding\n  var plaintextLength = rval.length();\n  var paddingLength = Math.max(16, plaintextLength - payloadLength - 3);\n  rval.putBytes(forge.random.getBytes(paddingLength));\n  return rval;\n};\n\n/**\n * Fragments, compresses, encrypts, and queues a record for delivery.\n *\n * @param c the connection.\n * @param record the record to queue.\n */\ntls.queue = function(c, record) {\n  // error during record creation\n  if(!record) {\n    return;\n  }\n\n  if(record.fragment.length() === 0) {\n    if(record.type === tls.ContentType.handshake ||\n      record.type === tls.ContentType.alert ||\n      record.type === tls.ContentType.change_cipher_spec) {\n      // Empty handshake, alert of change cipher spec messages are not allowed per the TLS specification and should not be sent.\n      return;\n    }\n  }\n\n  // if the record is a handshake record, update handshake hashes\n  if(record.type === tls.ContentType.handshake) {\n    var bytes = record.fragment.bytes();\n    c.session.md5.update(bytes);\n    c.session.sha1.update(bytes);\n    bytes = null;\n  }\n\n  // handle record fragmentation\n  var records;\n  if(record.fragment.length() <= tls.MaxFragment) {\n    records = [record];\n  } else {\n    // fragment data as long as it is too long\n    records = [];\n    var data = record.fragment.bytes();\n    while(data.length > tls.MaxFragment) {\n      records.push(tls.createRecord(c, {\n        type: record.type,\n        data: forge.util.createBuffer(data.slice(0, tls.MaxFragment))\n      }));\n      data = data.slice(tls.MaxFragment);\n    }\n    // add last record\n    if(data.length > 0) {\n      records.push(tls.createRecord(c, {\n        type: record.type,\n        data: forge.util.createBuffer(data)\n      }));\n    }\n  }\n\n  // compress and encrypt all fragmented records\n  for(var i = 0; i < records.length && !c.fail; ++i) {\n    // update the record using current write state\n    var rec = records[i];\n    var s = c.state.current.write;\n    if(s.update(c, rec)) {\n      // store record\n      c.records.push(rec);\n    }\n  }\n};\n\n/**\n * Flushes all queued records to the output buffer and calls the\n * tlsDataReady() handler on the given connection.\n *\n * @param c the connection.\n *\n * @return true on success, false on failure.\n */\ntls.flush = function(c) {\n  for(var i = 0; i < c.records.length; ++i) {\n    var record = c.records[i];\n\n    // add record header and fragment\n    c.tlsData.putByte(record.type);\n    c.tlsData.putByte(record.version.major);\n    c.tlsData.putByte(record.version.minor);\n    c.tlsData.putInt16(record.fragment.length());\n    c.tlsData.putBuffer(c.records[i].fragment);\n  }\n  c.records = [];\n  return c.tlsDataReady(c);\n};\n\n/**\n * Maps a pki.certificateError to a tls.Alert.Description.\n *\n * @param error the error to map.\n *\n * @return the alert description.\n */\nvar _certErrorToAlertDesc = function(error) {\n  switch(error) {\n  case true:\n    return true;\n  case forge.pki.certificateError.bad_certificate:\n    return tls.Alert.Description.bad_certificate;\n  case forge.pki.certificateError.unsupported_certificate:\n    return tls.Alert.Description.unsupported_certificate;\n  case forge.pki.certificateError.certificate_revoked:\n    return tls.Alert.Description.certificate_revoked;\n  case forge.pki.certificateError.certificate_expired:\n    return tls.Alert.Description.certificate_expired;\n  case forge.pki.certificateError.certificate_unknown:\n    return tls.Alert.Description.certificate_unknown;\n  case forge.pki.certificateError.unknown_ca:\n    return tls.Alert.Description.unknown_ca;\n  default:\n    return tls.Alert.Description.bad_certificate;\n  }\n};\n\n/**\n * Maps a tls.Alert.Description to a pki.certificateError.\n *\n * @param desc the alert description.\n *\n * @return the certificate error.\n */\nvar _alertDescToCertError = function(desc) {\n  switch(desc) {\n  case true:\n    return true;\n  case tls.Alert.Description.bad_certificate:\n    return forge.pki.certificateError.bad_certificate;\n  case tls.Alert.Description.unsupported_certificate:\n    return forge.pki.certificateError.unsupported_certificate;\n  case tls.Alert.Description.certificate_revoked:\n    return forge.pki.certificateError.certificate_revoked;\n  case tls.Alert.Description.certificate_expired:\n    return forge.pki.certificateError.certificate_expired;\n  case tls.Alert.Description.certificate_unknown:\n    return forge.pki.certificateError.certificate_unknown;\n  case tls.Alert.Description.unknown_ca:\n    return forge.pki.certificateError.unknown_ca;\n  default:\n    return forge.pki.certificateError.bad_certificate;\n  }\n};\n\n/**\n * Verifies a certificate chain against the given connection's\n * Certificate Authority store.\n *\n * @param c the TLS connection.\n * @param chain the certificate chain to verify, with the root or highest\n *          authority at the end.\n *\n * @return true if successful, false if not.\n */\ntls.verifyCertificateChain = function(c, chain) {\n  try {\n    // Make a copy of c.verifyOptions so that we can modify options.verify\n    // without modifying c.verifyOptions.\n    var options = {};\n    for (var key in c.verifyOptions) {\n      options[key] = c.verifyOptions[key];\n    }\n\n    options.verify = function(vfd, depth, chain) {\n      // convert pki.certificateError to tls alert description\n      var desc = _certErrorToAlertDesc(vfd);\n\n      // call application callback\n      var ret = c.verify(c, vfd, depth, chain);\n      if(ret !== true) {\n        if(typeof ret === 'object' && !forge.util.isArray(ret)) {\n          // throw custom error\n          var error = new Error('The application rejected the certificate.');\n          error.send = true;\n          error.alert = {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.bad_certificate\n          };\n          if(ret.message) {\n            error.message = ret.message;\n          }\n          if(ret.alert) {\n            error.alert.description = ret.alert;\n          }\n          throw error;\n        }\n\n        // convert tls alert description to pki.certificateError\n        if(ret !== vfd) {\n          ret = _alertDescToCertError(ret);\n        }\n      }\n\n      return ret;\n    };\n\n    // verify chain\n    forge.pki.verifyCertificateChain(c.caStore, chain, options);\n  } catch(ex) {\n    // build tls error if not already customized\n    var err = ex;\n    if(typeof err !== 'object' || forge.util.isArray(err)) {\n      err = {\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: _certErrorToAlertDesc(ex)\n        }\n      };\n    }\n    if(!('send' in err)) {\n      err.send = true;\n    }\n    if(!('alert' in err)) {\n      err.alert = {\n        level: tls.Alert.Level.fatal,\n        description: _certErrorToAlertDesc(err.error)\n      };\n    }\n\n    // send error\n    c.error(c, err);\n  }\n\n  return !c.fail;\n};\n\n/**\n * Creates a new TLS session cache.\n *\n * @param cache optional map of session ID to cached session.\n * @param capacity the maximum size for the cache (default: 100).\n *\n * @return the new TLS session cache.\n */\ntls.createSessionCache = function(cache, capacity) {\n  var rval = null;\n\n  // assume input is already a session cache object\n  if(cache && cache.getSession && cache.setSession && cache.order) {\n    rval = cache;\n  } else {\n    // create cache\n    rval = {};\n    rval.cache = cache || {};\n    rval.capacity = Math.max(capacity || 100, 1);\n    rval.order = [];\n\n    // store order for sessions, delete session overflow\n    for(var key in cache) {\n      if(rval.order.length <= capacity) {\n        rval.order.push(key);\n      } else {\n        delete cache[key];\n      }\n    }\n\n    // get a session from a session ID (or get any session)\n    rval.getSession = function(sessionId) {\n      var session = null;\n      var key = null;\n\n      // if session ID provided, use it\n      if(sessionId) {\n        key = forge.util.bytesToHex(sessionId);\n      } else if(rval.order.length > 0) {\n        // get first session from cache\n        key = rval.order[0];\n      }\n\n      if(key !== null && key in rval.cache) {\n        // get cached session and remove from cache\n        session = rval.cache[key];\n        delete rval.cache[key];\n        for(var i in rval.order) {\n          if(rval.order[i] === key) {\n            rval.order.splice(i, 1);\n            break;\n          }\n        }\n      }\n\n      return session;\n    };\n\n    // set a session in the cache\n    rval.setSession = function(sessionId, session) {\n      // remove session from cache if at capacity\n      if(rval.order.length === rval.capacity) {\n        var key = rval.order.shift();\n        delete rval.cache[key];\n      }\n      // add session to cache\n      var key = forge.util.bytesToHex(sessionId);\n      rval.order.push(key);\n      rval.cache[key] = session;\n    };\n  }\n\n  return rval;\n};\n\n/**\n * Creates a new TLS connection.\n *\n * See public createConnection() docs for more details.\n *\n * @param options the options for this connection.\n *\n * @return the new TLS connection.\n */\ntls.createConnection = function(options) {\n  var caStore = null;\n  if(options.caStore) {\n    // if CA store is an array, convert it to a CA store object\n    if(forge.util.isArray(options.caStore)) {\n      caStore = forge.pki.createCaStore(options.caStore);\n    } else {\n      caStore = options.caStore;\n    }\n  } else {\n    // create empty CA store\n    caStore = forge.pki.createCaStore();\n  }\n\n  // setup default cipher suites\n  var cipherSuites = options.cipherSuites || null;\n  if(cipherSuites === null) {\n    cipherSuites = [];\n    for(var key in tls.CipherSuites) {\n      cipherSuites.push(tls.CipherSuites[key]);\n    }\n  }\n\n  // set default entity\n  var entity = (options.server || false) ?\n    tls.ConnectionEnd.server : tls.ConnectionEnd.client;\n\n  // create session cache if requested\n  var sessionCache = options.sessionCache ?\n    tls.createSessionCache(options.sessionCache) : null;\n\n  // create TLS connection\n  var c = {\n    version: {major: tls.Version.major, minor: tls.Version.minor},\n    entity: entity,\n    sessionId: options.sessionId,\n    caStore: caStore,\n    sessionCache: sessionCache,\n    cipherSuites: cipherSuites,\n    connected: options.connected,\n    virtualHost: options.virtualHost || null,\n    verifyClient: options.verifyClient || false,\n    verify: options.verify || function(cn, vfd, dpth, cts) {return vfd;},\n    verifyOptions: options.verifyOptions || {},\n    getCertificate: options.getCertificate || null,\n    getPrivateKey: options.getPrivateKey || null,\n    getSignature: options.getSignature || null,\n    input: forge.util.createBuffer(),\n    tlsData: forge.util.createBuffer(),\n    data: forge.util.createBuffer(),\n    tlsDataReady: options.tlsDataReady,\n    dataReady: options.dataReady,\n    heartbeatReceived: options.heartbeatReceived,\n    closed: options.closed,\n    error: function(c, ex) {\n      // set origin if not set\n      ex.origin = ex.origin ||\n        ((c.entity === tls.ConnectionEnd.client) ? 'client' : 'server');\n\n      // send TLS alert\n      if(ex.send) {\n        tls.queue(c, tls.createAlert(c, ex.alert));\n        tls.flush(c);\n      }\n\n      // error is fatal by default\n      var fatal = (ex.fatal !== false);\n      if(fatal) {\n        // set fail flag\n        c.fail = true;\n      }\n\n      // call error handler first\n      options.error(c, ex);\n\n      if(fatal) {\n        // fatal error, close connection, do not clear fail\n        c.close(false);\n      }\n    },\n    deflate: options.deflate || null,\n    inflate: options.inflate || null\n  };\n\n  /**\n   * Resets a closed TLS connection for reuse. Called in c.close().\n   *\n   * @param clearFail true to clear the fail flag (default: true).\n   */\n  c.reset = function(clearFail) {\n    c.version = {major: tls.Version.major, minor: tls.Version.minor};\n    c.record = null;\n    c.session = null;\n    c.peerCertificate = null;\n    c.state = {\n      pending: null,\n      current: null\n    };\n    c.expect = (c.entity === tls.ConnectionEnd.client) ? SHE : CHE;\n    c.fragmented = null;\n    c.records = [];\n    c.open = false;\n    c.handshakes = 0;\n    c.handshaking = false;\n    c.isConnected = false;\n    c.fail = !(clearFail || typeof(clearFail) === 'undefined');\n    c.input.clear();\n    c.tlsData.clear();\n    c.data.clear();\n    c.state.current = tls.createConnectionState(c);\n  };\n\n  // do initial reset of connection\n  c.reset();\n\n  /**\n   * Updates the current TLS engine state based on the given record.\n   *\n   * @param c the TLS connection.\n   * @param record the TLS record to act on.\n   */\n  var _update = function(c, record) {\n    // get record handler (align type in table by subtracting lowest)\n    var aligned = record.type - tls.ContentType.change_cipher_spec;\n    var handlers = ctTable[c.entity][c.expect];\n    if(aligned in handlers) {\n      handlers[aligned](c, record);\n    } else {\n      // unexpected record\n      tls.handleUnexpected(c, record);\n    }\n  };\n\n  /**\n   * Reads the record header and initializes the next record on the given\n   * connection.\n   *\n   * @param c the TLS connection with the next record.\n   *\n   * @return 0 if the input data could be processed, otherwise the\n   *         number of bytes required for data to be processed.\n   */\n  var _readRecordHeader = function(c) {\n    var rval = 0;\n\n    // get input buffer and its length\n    var b = c.input;\n    var len = b.length();\n\n    // need at least 5 bytes to initialize a record\n    if(len < 5) {\n      rval = 5 - len;\n    } else {\n      // enough bytes for header\n      // initialize record\n      c.record = {\n        type: b.getByte(),\n        version: {\n          major: b.getByte(),\n          minor: b.getByte()\n        },\n        length: b.getInt16(),\n        fragment: forge.util.createBuffer(),\n        ready: false\n      };\n\n      // check record version\n      var compatibleVersion = (c.record.version.major === c.version.major);\n      if(compatibleVersion && c.session && c.session.version) {\n        // session version already set, require same minor version\n        compatibleVersion = (c.record.version.minor === c.version.minor);\n      }\n      if(!compatibleVersion) {\n        c.error(c, {\n          message: 'Incompatible TLS version.',\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.protocol_version\n          }\n        });\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Reads the next record's contents and appends its message to any\n   * previously fragmented message.\n   *\n   * @param c the TLS connection with the next record.\n   *\n   * @return 0 if the input data could be processed, otherwise the\n   *         number of bytes required for data to be processed.\n   */\n  var _readRecord = function(c) {\n    var rval = 0;\n\n    // ensure there is enough input data to get the entire record\n    var b = c.input;\n    var len = b.length();\n    if(len < c.record.length) {\n      // not enough data yet, return how much is required\n      rval = c.record.length - len;\n    } else {\n      // there is enough data to parse the pending record\n      // fill record fragment and compact input buffer\n      c.record.fragment.putBytes(b.getBytes(c.record.length));\n      b.compact();\n\n      // update record using current read state\n      var s = c.state.current.read;\n      if(s.update(c, c.record)) {\n        // see if there is a previously fragmented message that the\n        // new record's message fragment should be appended to\n        if(c.fragmented !== null) {\n          // if the record type matches a previously fragmented\n          // record, append the record fragment to it\n          if(c.fragmented.type === c.record.type) {\n            // concatenate record fragments\n            c.fragmented.fragment.putBuffer(c.record.fragment);\n            c.record = c.fragmented;\n          } else {\n            // error, invalid fragmented record\n            c.error(c, {\n              message: 'Invalid fragmented record.',\n              send: true,\n              alert: {\n                level: tls.Alert.Level.fatal,\n                description:\n                  tls.Alert.Description.unexpected_message\n              }\n            });\n          }\n        }\n\n        // record is now ready\n        c.record.ready = true;\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Performs a handshake using the TLS Handshake Protocol, as a client.\n   *\n   * This method should only be called if the connection is in client mode.\n   *\n   * @param sessionId the session ID to use, null to start a new one.\n   */\n  c.handshake = function(sessionId) {\n    // error to call this in non-client mode\n    if(c.entity !== tls.ConnectionEnd.client) {\n      // not fatal error\n      c.error(c, {\n        message: 'Cannot initiate handshake as a server.',\n        fatal: false\n      });\n    } else if(c.handshaking) {\n      // handshake is already in progress, fail but not fatal error\n      c.error(c, {\n        message: 'Handshake already in progress.',\n        fatal: false\n      });\n    } else {\n      // clear fail flag on reuse\n      if(c.fail && !c.open && c.handshakes === 0) {\n        c.fail = false;\n      }\n\n      // now handshaking\n      c.handshaking = true;\n\n      // default to blank (new session)\n      sessionId = sessionId || '';\n\n      // if a session ID was specified, try to find it in the cache\n      var session = null;\n      if(sessionId.length > 0) {\n        if(c.sessionCache) {\n          session = c.sessionCache.getSession(sessionId);\n        }\n\n        // matching session not found in cache, clear session ID\n        if(session === null) {\n          sessionId = '';\n        }\n      }\n\n      // no session given, grab a session from the cache, if available\n      if(sessionId.length === 0 && c.sessionCache) {\n        session = c.sessionCache.getSession();\n        if(session !== null) {\n          sessionId = session.id;\n        }\n      }\n\n      // set up session\n      c.session = {\n        id: sessionId,\n        version: null,\n        cipherSuite: null,\n        compressionMethod: null,\n        serverCertificate: null,\n        certificateRequest: null,\n        clientCertificate: null,\n        sp: {},\n        md5: forge.md.md5.create(),\n        sha1: forge.md.sha1.create()\n      };\n\n      // use existing session information\n      if(session) {\n        // only update version on connection, session version not yet set\n        c.version = session.version;\n        c.session.sp = session.sp;\n      }\n\n      // generate new client random\n      c.session.sp.client_random = tls.createRandom().getBytes();\n\n      // connection now open\n      c.open = true;\n\n      // send hello\n      tls.queue(c, tls.createRecord(c, {\n        type: tls.ContentType.handshake,\n        data: tls.createClientHello(c)\n      }));\n      tls.flush(c);\n    }\n  };\n\n  /**\n   * Called when TLS protocol data has been received from somewhere and should\n   * be processed by the TLS engine.\n   *\n   * @param data the TLS protocol data, as a string, to process.\n   *\n   * @return 0 if the data could be processed, otherwise the number of bytes\n   *         required for data to be processed.\n   */\n  c.process = function(data) {\n    var rval = 0;\n\n    // buffer input data\n    if(data) {\n      c.input.putBytes(data);\n    }\n\n    // process next record if no failure, process will be called after\n    // each record is handled (since handling can be asynchronous)\n    if(!c.fail) {\n      // reset record if ready and now empty\n      if(c.record !== null &&\n        c.record.ready && c.record.fragment.isEmpty()) {\n        c.record = null;\n      }\n\n      // if there is no pending record, try to read record header\n      if(c.record === null) {\n        rval = _readRecordHeader(c);\n      }\n\n      // read the next record (if record not yet ready)\n      if(!c.fail && c.record !== null && !c.record.ready) {\n        rval = _readRecord(c);\n      }\n\n      // record ready to be handled, update engine state\n      if(!c.fail && c.record !== null && c.record.ready) {\n        _update(c, c.record);\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Requests that application data be packaged into a TLS record. The\n   * tlsDataReady handler will be called when the TLS record(s) have been\n   * prepared.\n   *\n   * @param data the application data, as a raw 'binary' encoded string, to\n   *          be sent; to send utf-16/utf-8 string data, use the return value\n   *          of util.encodeUtf8(str).\n   *\n   * @return true on success, false on failure.\n   */\n  c.prepare = function(data) {\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.application_data,\n      data: forge.util.createBuffer(data)\n    }));\n    return tls.flush(c);\n  };\n\n  /**\n   * Requests that a heartbeat request be packaged into a TLS record for\n   * transmission. The tlsDataReady handler will be called when TLS record(s)\n   * have been prepared.\n   *\n   * When a heartbeat response has been received, the heartbeatReceived\n   * handler will be called with the matching payload. This handler can\n   * be used to clear a retransmission timer, etc.\n   *\n   * @param payload the heartbeat data to send as the payload in the message.\n   * @param [payloadLength] the payload length to use, defaults to the\n   *          actual payload length.\n   *\n   * @return true on success, false on failure.\n   */\n  c.prepareHeartbeatRequest = function(payload, payloadLength) {\n    if(payload instanceof forge.util.ByteBuffer) {\n      payload = payload.bytes();\n    }\n    if(typeof payloadLength === 'undefined') {\n      payloadLength = payload.length;\n    }\n    c.expectedHeartbeatPayload = payload;\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.heartbeat,\n      data: tls.createHeartbeat(\n        tls.HeartbeatMessageType.heartbeat_request, payload, payloadLength)\n    }));\n    return tls.flush(c);\n  };\n\n  /**\n   * Closes the connection (sends a close_notify alert).\n   *\n   * @param clearFail true to clear the fail flag (default: true).\n   */\n  c.close = function(clearFail) {\n    // save session if connection didn't fail\n    if(!c.fail && c.sessionCache && c.session) {\n      // only need to preserve session ID, version, and security params\n      var session = {\n        id: c.session.id,\n        version: c.session.version,\n        sp: c.session.sp\n      };\n      session.sp.keys = null;\n      c.sessionCache.setSession(session.id, session);\n    }\n\n    if(c.open) {\n      // connection no longer open, clear input\n      c.open = false;\n      c.input.clear();\n\n      // if connected or handshaking, send an alert\n      if(c.isConnected || c.handshaking) {\n        c.isConnected = c.handshaking = false;\n\n        // send close_notify alert\n        tls.queue(c, tls.createAlert(c, {\n          level: tls.Alert.Level.warning,\n          description: tls.Alert.Description.close_notify\n        }));\n        tls.flush(c);\n      }\n\n      // call handler\n      c.closed(c);\n    }\n\n    // reset TLS connection, do not clear fail flag\n    c.reset(clearFail);\n  };\n\n  return c;\n};\n\n/* TLS API */\nmodule.exports = forge.tls = forge.tls || {};\n\n// expose non-functions\nfor(var key in tls) {\n  if(typeof tls[key] !== 'function') {\n    forge.tls[key] = tls[key];\n  }\n}\n\n// expose prf_tls1 for testing\nforge.tls.prf_tls1 = prf_TLS1;\n\n// expose sha1 hmac method\nforge.tls.hmac_sha1 = hmac_sha1;\n\n// expose session cache creation\nforge.tls.createSessionCache = tls.createSessionCache;\n\n/**\n * Creates a new TLS connection. This does not make any assumptions about the\n * transport layer that TLS is working on top of, ie: it does not assume there\n * is a TCP/IP connection or establish one. A TLS connection is totally\n * abstracted away from the layer is runs on top of, it merely establishes a\n * secure channel between a client\" and a \"server\".\n *\n * A TLS connection contains 4 connection states: pending read and write, and\n * current read and write.\n *\n * At initialization, the current read and write states will be null. Only once\n * the security parameters have been set and the keys have been generated can\n * the pending states be converted into current states. Current states will be\n * updated for each record processed.\n *\n * A custom certificate verify callback may be provided to check information\n * like the common name on the server's certificate. It will be called for\n * every certificate in the chain. It has the following signature:\n *\n * variable func(c, certs, index, preVerify)\n * Where:\n * c         The TLS connection\n * verified  Set to true if certificate was verified, otherwise the alert\n *           tls.Alert.Description for why the certificate failed.\n * depth     The current index in the chain, where 0 is the server's cert.\n * certs     The certificate chain, *NOTE* if the server was anonymous then\n *           the chain will be empty.\n *\n * The function returns true on success and on failure either the appropriate\n * tls.Alert.Description or an object with 'alert' set to the appropriate\n * tls.Alert.Description and 'message' set to a custom error message. If true\n * is not returned then the connection will abort using, in order of\n * availability, first the returned alert description, second the preVerify\n * alert description, and lastly the default 'bad_certificate'.\n *\n * There are three callbacks that can be used to make use of client-side\n * certificates where each takes the TLS connection as the first parameter:\n *\n * getCertificate(conn, hint)\n *   The second parameter is a hint as to which certificate should be\n *   returned. If the connection entity is a client, then the hint will be\n *   the CertificateRequest message from the server that is part of the\n *   TLS protocol. If the connection entity is a server, then it will be\n *   the servername list provided via an SNI extension the ClientHello, if\n *   one was provided (empty array if not). The hint can be examined to\n *   determine which certificate to use (advanced). Most implementations\n *   will just return a certificate. The return value must be a\n *   PEM-formatted certificate or an array of PEM-formatted certificates\n *   that constitute a certificate chain, with the first in the array/chain\n *   being the client's certificate.\n * getPrivateKey(conn, certificate)\n *   The second parameter is an forge.pki X.509 certificate object that\n *   is associated with the requested private key. The return value must\n *   be a PEM-formatted private key.\n * getSignature(conn, bytes, callback)\n *   This callback can be used instead of getPrivateKey if the private key\n *   is not directly accessible in javascript or should not be. For\n *   instance, a secure external web service could provide the signature\n *   in exchange for appropriate credentials. The second parameter is a\n *   string of bytes to be signed that are part of the TLS protocol. These\n *   bytes are used to verify that the private key for the previously\n *   provided client-side certificate is accessible to the client. The\n *   callback is a function that takes 2 parameters, the TLS connection\n *   and the RSA encrypted (signed) bytes as a string. This callback must\n *   be called once the signature is ready.\n *\n * @param options the options for this connection:\n *   server: true if the connection is server-side, false for client.\n *   sessionId: a session ID to reuse, null for a new connection.\n *   caStore: an array of certificates to trust.\n *   sessionCache: a session cache to use.\n *   cipherSuites: an optional array of cipher suites to use,\n *     see tls.CipherSuites.\n *   connected: function(conn) called when the first handshake completes.\n *   virtualHost: the virtual server name to use in a TLS SNI extension.\n *   verifyClient: true to require a client certificate in server mode,\n *     'optional' to request one, false not to (default: false).\n *   verify: a handler used to custom verify certificates in the chain.\n *   verifyOptions: an object with options for the certificate chain validation.\n *     See documentation of pki.verifyCertificateChain for possible options.\n *     verifyOptions.verify is ignored. If you wish to specify a verify handler\n *     use the verify key.\n *   getCertificate: an optional callback used to get a certificate or\n *     a chain of certificates (as an array).\n *   getPrivateKey: an optional callback used to get a private key.\n *   getSignature: an optional callback used to get a signature.\n *   tlsDataReady: function(conn) called when TLS protocol data has been\n *     prepared and is ready to be used (typically sent over a socket\n *     connection to its destination), read from conn.tlsData buffer.\n *   dataReady: function(conn) called when application data has\n *     been parsed from a TLS record and should be consumed by the\n *     application, read from conn.data buffer.\n *   closed: function(conn) called when the connection has been closed.\n *   error: function(conn, error) called when there was an error.\n *   deflate: function(inBytes) if provided, will deflate TLS records using\n *     the deflate algorithm if the server supports it.\n *   inflate: function(inBytes) if provided, will inflate TLS records using\n *     the deflate algorithm if the server supports it.\n *\n * @return the new TLS connection.\n */\nforge.tls.createConnection = tls.createConnection;\n","/**\n * Utility functions for web applications.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2018 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nvar baseN = require('./baseN');\n\n/* Utilities API */\nvar util = module.exports = forge.util = forge.util || {};\n\n// define setImmediate and nextTick\n(function() {\n  // use native nextTick (unless we're in webpack)\n  // webpack (or better node-libs-browser polyfill) sets process.browser.\n  // this way we can detect webpack properly\n  if(typeof process !== 'undefined' && process.nextTick && !process.browser) {\n    util.nextTick = process.nextTick;\n    if(typeof setImmediate === 'function') {\n      util.setImmediate = setImmediate;\n    } else {\n      // polyfill setImmediate with nextTick, older versions of node\n      // (those w/o setImmediate) won't totally starve IO\n      util.setImmediate = util.nextTick;\n    }\n    return;\n  }\n\n  // polyfill nextTick with native setImmediate\n  if(typeof setImmediate === 'function') {\n    util.setImmediate = function() { return setImmediate.apply(undefined, arguments); };\n    util.nextTick = function(callback) {\n      return setImmediate(callback);\n    };\n    return;\n  }\n\n  /* Note: A polyfill upgrade pattern is used here to allow combining\n  polyfills. For example, MutationObserver is fast, but blocks UI updates,\n  so it needs to allow UI updates periodically, so it falls back on\n  postMessage or setTimeout. */\n\n  // polyfill with setTimeout\n  util.setImmediate = function(callback) {\n    setTimeout(callback, 0);\n  };\n\n  // upgrade polyfill to use postMessage\n  if(typeof window !== 'undefined' &&\n    typeof window.postMessage === 'function') {\n    var msg = 'forge.setImmediate';\n    var callbacks = [];\n    util.setImmediate = function(callback) {\n      callbacks.push(callback);\n      // only send message when one hasn't been sent in\n      // the current turn of the event loop\n      if(callbacks.length === 1) {\n        window.postMessage(msg, '*');\n      }\n    };\n    function handler(event) {\n      if(event.source === window && event.data === msg) {\n        event.stopPropagation();\n        var copy = callbacks.slice();\n        callbacks.length = 0;\n        copy.forEach(function(callback) {\n          callback();\n        });\n      }\n    }\n    window.addEventListener('message', handler, true);\n  }\n\n  // upgrade polyfill to use MutationObserver\n  if(typeof MutationObserver !== 'undefined') {\n    // polyfill with MutationObserver\n    var now = Date.now();\n    var attr = true;\n    var div = document.createElement('div');\n    var callbacks = [];\n    new MutationObserver(function() {\n      var copy = callbacks.slice();\n      callbacks.length = 0;\n      copy.forEach(function(callback) {\n        callback();\n      });\n    }).observe(div, {attributes: true});\n    var oldSetImmediate = util.setImmediate;\n    util.setImmediate = function(callback) {\n      if(Date.now() - now > 15) {\n        now = Date.now();\n        oldSetImmediate(callback);\n      } else {\n        callbacks.push(callback);\n        // only trigger observer when it hasn't been triggered in\n        // the current turn of the event loop\n        if(callbacks.length === 1) {\n          div.setAttribute('a', attr = !attr);\n        }\n      }\n    };\n  }\n\n  util.nextTick = util.setImmediate;\n})();\n\n// check if running under Node.js\nutil.isNodejs =\n  typeof process !== 'undefined' && process.versions && process.versions.node;\n\n\n// 'self' will also work in Web Workers (instance of WorkerGlobalScope) while\n// it will point to `window` in the main thread.\n// To remain compatible with older browsers, we fall back to 'window' if 'self'\n// is not available.\nutil.globalScope = (function() {\n  if(util.isNodejs) {\n    return global;\n  }\n\n  return typeof self === 'undefined' ? window : self;\n})();\n\n// define isArray\nutil.isArray = Array.isArray || function(x) {\n  return Object.prototype.toString.call(x) === '[object Array]';\n};\n\n// define isArrayBuffer\nutil.isArrayBuffer = function(x) {\n  return typeof ArrayBuffer !== 'undefined' && x instanceof ArrayBuffer;\n};\n\n// define isArrayBufferView\nutil.isArrayBufferView = function(x) {\n  return x && util.isArrayBuffer(x.buffer) && x.byteLength !== undefined;\n};\n\n/**\n * Ensure a bits param is 8, 16, 24, or 32. Used to validate input for\n * algorithms where bit manipulation, JavaScript limitations, and/or algorithm\n * design only allow for byte operations of a limited size.\n *\n * @param n number of bits.\n *\n * Throw Error if n invalid.\n */\nfunction _checkBitsParam(n) {\n  if(!(n === 8 || n === 16 || n === 24 || n === 32)) {\n    throw new Error('Only 8, 16, 24, or 32 bits supported: ' + n);\n  }\n}\n\n// TODO: set ByteBuffer to best available backing\nutil.ByteBuffer = ByteStringBuffer;\n\n/** Buffer w/BinaryString backing */\n\n/**\n * Constructor for a binary string backed byte buffer.\n *\n * @param [b] the bytes to wrap (either encoded as string, one byte per\n *          character, or as an ArrayBuffer or Typed Array).\n */\nfunction ByteStringBuffer(b) {\n  // TODO: update to match DataBuffer API\n\n  // the data in this buffer\n  this.data = '';\n  // the pointer for reading from this buffer\n  this.read = 0;\n\n  if(typeof b === 'string') {\n    this.data = b;\n  } else if(util.isArrayBuffer(b) || util.isArrayBufferView(b)) {\n    if(typeof Buffer !== 'undefined' && b instanceof Buffer) {\n      this.data = b.toString('binary');\n    } else {\n      // convert native buffer to forge buffer\n      // FIXME: support native buffers internally instead\n      var arr = new Uint8Array(b);\n      try {\n        this.data = String.fromCharCode.apply(null, arr);\n      } catch(e) {\n        for(var i = 0; i < arr.length; ++i) {\n          this.putByte(arr[i]);\n        }\n      }\n    }\n  } else if(b instanceof ByteStringBuffer ||\n    (typeof b === 'object' && typeof b.data === 'string' &&\n    typeof b.read === 'number')) {\n    // copy existing buffer\n    this.data = b.data;\n    this.read = b.read;\n  }\n\n  // used for v8 optimization\n  this._constructedStringLength = 0;\n}\nutil.ByteStringBuffer = ByteStringBuffer;\n\n/* Note: This is an optimization for V8-based browsers. When V8 concatenates\n  a string, the strings are only joined logically using a \"cons string\" or\n  \"constructed/concatenated string\". These containers keep references to one\n  another and can result in very large memory usage. For example, if a 2MB\n  string is constructed by concatenating 4 bytes together at a time, the\n  memory usage will be ~44MB; so ~22x increase. The strings are only joined\n  together when an operation requiring their joining takes place, such as\n  substr(). This function is called when adding data to this buffer to ensure\n  these types of strings are periodically joined to reduce the memory\n  footprint. */\nvar _MAX_CONSTRUCTED_STRING_LENGTH = 4096;\nutil.ByteStringBuffer.prototype._optimizeConstructedString = function(x) {\n  this._constructedStringLength += x;\n  if(this._constructedStringLength > _MAX_CONSTRUCTED_STRING_LENGTH) {\n    // this substr() should cause the constructed string to join\n    this.data.substr(0, 1);\n    this._constructedStringLength = 0;\n  }\n};\n\n/**\n * Gets the number of bytes in this buffer.\n *\n * @return the number of bytes in this buffer.\n */\nutil.ByteStringBuffer.prototype.length = function() {\n  return this.data.length - this.read;\n};\n\n/**\n * Gets whether or not this buffer is empty.\n *\n * @return true if this buffer is empty, false if not.\n */\nutil.ByteStringBuffer.prototype.isEmpty = function() {\n  return this.length() <= 0;\n};\n\n/**\n * Puts a byte in this buffer.\n *\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putByte = function(b) {\n  return this.putBytes(String.fromCharCode(b));\n};\n\n/**\n * Puts a byte in this buffer N times.\n *\n * @param b the byte to put.\n * @param n the number of bytes of value b to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.fillWithByte = function(b, n) {\n  b = String.fromCharCode(b);\n  var d = this.data;\n  while(n > 0) {\n    if(n & 1) {\n      d += b;\n    }\n    n >>>= 1;\n    if(n > 0) {\n      b += b;\n    }\n  }\n  this.data = d;\n  this._optimizeConstructedString(n);\n  return this;\n};\n\n/**\n * Puts bytes in this buffer.\n *\n * @param bytes the bytes (as a binary encoded string) to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putBytes = function(bytes) {\n  this.data += bytes;\n  this._optimizeConstructedString(bytes.length);\n  return this;\n};\n\n/**\n * Puts a UTF-16 encoded string into this buffer.\n *\n * @param str the string to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putString = function(str) {\n  return this.putBytes(util.encodeUtf8(str));\n};\n\n/**\n * Puts a 16-bit integer in this buffer in big-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt16 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 24-bit integer in this buffer in big-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt24 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 32-bit integer in this buffer in big-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt32 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 24 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 16-bit integer in this buffer in little-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt16Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF));\n};\n\n/**\n * Puts a 24-bit integer in this buffer in little-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt24Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF));\n};\n\n/**\n * Puts a 32-bit integer in this buffer in little-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt32Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 24 & 0xFF));\n};\n\n/**\n * Puts an n-bit integer in this buffer in big-endian order.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt = function(i, n) {\n  _checkBitsParam(n);\n  var bytes = '';\n  do {\n    n -= 8;\n    bytes += String.fromCharCode((i >> n) & 0xFF);\n  } while(n > 0);\n  return this.putBytes(bytes);\n};\n\n/**\n * Puts a signed n-bit integer in this buffer in big-endian order. Two's\n * complement representation is used.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putSignedInt = function(i, n) {\n  // putInt checks n\n  if(i < 0) {\n    i += 2 << (n - 1);\n  }\n  return this.putInt(i, n);\n};\n\n/**\n * Puts the given buffer into this buffer.\n *\n * @param buffer the buffer to put into this one.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putBuffer = function(buffer) {\n  return this.putBytes(buffer.getBytes());\n};\n\n/**\n * Gets a byte from this buffer and advances the read pointer by 1.\n *\n * @return the byte.\n */\nutil.ByteStringBuffer.prototype.getByte = function() {\n  return this.data.charCodeAt(this.read++);\n};\n\n/**\n * Gets a uint16 from this buffer in big-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.ByteStringBuffer.prototype.getInt16 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 8 ^\n    this.data.charCodeAt(this.read + 1));\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in big-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.ByteStringBuffer.prototype.getInt24 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 16 ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2));\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in big-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.ByteStringBuffer.prototype.getInt32 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 24 ^\n    this.data.charCodeAt(this.read + 1) << 16 ^\n    this.data.charCodeAt(this.read + 2) << 8 ^\n    this.data.charCodeAt(this.read + 3));\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets a uint16 from this buffer in little-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.ByteStringBuffer.prototype.getInt16Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in little-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.ByteStringBuffer.prototype.getInt24Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2) << 16);\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in little-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.ByteStringBuffer.prototype.getInt32Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2) << 16 ^\n    this.data.charCodeAt(this.read + 3) << 24);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets an n-bit integer from this buffer in big-endian order and advances the\n * read pointer by ceil(n/8).\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.ByteStringBuffer.prototype.getInt = function(n) {\n  _checkBitsParam(n);\n  var rval = 0;\n  do {\n    // TODO: Use (rval * 0x100) if adding support for 33 to 53 bits.\n    rval = (rval << 8) + this.data.charCodeAt(this.read++);\n    n -= 8;\n  } while(n > 0);\n  return rval;\n};\n\n/**\n * Gets a signed n-bit integer from this buffer in big-endian order, using\n * two's complement, and advances the read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.ByteStringBuffer.prototype.getSignedInt = function(n) {\n  // getInt checks n\n  var x = this.getInt(n);\n  var max = 2 << (n - 2);\n  if(x >= max) {\n    x -= max << 1;\n  }\n  return x;\n};\n\n/**\n * Reads bytes out as a binary encoded string and clears them from the\n * buffer. Note that the resulting string is binary encoded (in node.js this\n * encoding is referred to as `binary`, it is *not* `utf8`).\n *\n * @param count the number of bytes to read, undefined or null for all.\n *\n * @return a binary encoded string of bytes.\n */\nutil.ByteStringBuffer.prototype.getBytes = function(count) {\n  var rval;\n  if(count) {\n    // read count bytes\n    count = Math.min(this.length(), count);\n    rval = this.data.slice(this.read, this.read + count);\n    this.read += count;\n  } else if(count === 0) {\n    rval = '';\n  } else {\n    // read all bytes, optimize to only copy when needed\n    rval = (this.read === 0) ? this.data : this.data.slice(this.read);\n    this.clear();\n  }\n  return rval;\n};\n\n/**\n * Gets a binary encoded string of the bytes from this buffer without\n * modifying the read pointer.\n *\n * @param count the number of bytes to get, omit to get all.\n *\n * @return a string full of binary encoded characters.\n */\nutil.ByteStringBuffer.prototype.bytes = function(count) {\n  return (typeof(count) === 'undefined' ?\n    this.data.slice(this.read) :\n    this.data.slice(this.read, this.read + count));\n};\n\n/**\n * Gets a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n *\n * @return the byte.\n */\nutil.ByteStringBuffer.prototype.at = function(i) {\n  return this.data.charCodeAt(this.read + i);\n};\n\n/**\n * Puts a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.setAt = function(i, b) {\n  this.data = this.data.substr(0, this.read + i) +\n    String.fromCharCode(b) +\n    this.data.substr(this.read + i + 1);\n  return this;\n};\n\n/**\n * Gets the last byte without modifying the read pointer.\n *\n * @return the last byte.\n */\nutil.ByteStringBuffer.prototype.last = function() {\n  return this.data.charCodeAt(this.data.length - 1);\n};\n\n/**\n * Creates a copy of this buffer.\n *\n * @return the copy.\n */\nutil.ByteStringBuffer.prototype.copy = function() {\n  var c = util.createBuffer(this.data);\n  c.read = this.read;\n  return c;\n};\n\n/**\n * Compacts this buffer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.compact = function() {\n  if(this.read > 0) {\n    this.data = this.data.slice(this.read);\n    this.read = 0;\n  }\n  return this;\n};\n\n/**\n * Clears this buffer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.clear = function() {\n  this.data = '';\n  this.read = 0;\n  return this;\n};\n\n/**\n * Shortens this buffer by triming bytes off of the end of this buffer.\n *\n * @param count the number of bytes to trim off.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.truncate = function(count) {\n  var len = Math.max(0, this.length() - count);\n  this.data = this.data.substr(this.read, len);\n  this.read = 0;\n  return this;\n};\n\n/**\n * Converts this buffer to a hexadecimal string.\n *\n * @return a hexadecimal string.\n */\nutil.ByteStringBuffer.prototype.toHex = function() {\n  var rval = '';\n  for(var i = this.read; i < this.data.length; ++i) {\n    var b = this.data.charCodeAt(i);\n    if(b < 16) {\n      rval += '0';\n    }\n    rval += b.toString(16);\n  }\n  return rval;\n};\n\n/**\n * Converts this buffer to a UTF-16 string (standard JavaScript string).\n *\n * @return a UTF-16 string.\n */\nutil.ByteStringBuffer.prototype.toString = function() {\n  return util.decodeUtf8(this.bytes());\n};\n\n/** End Buffer w/BinaryString backing */\n\n/** Buffer w/UInt8Array backing */\n\n/**\n * FIXME: Experimental. Do not use yet.\n *\n * Constructor for an ArrayBuffer-backed byte buffer.\n *\n * The buffer may be constructed from a string, an ArrayBuffer, DataView, or a\n * TypedArray.\n *\n * If a string is given, its encoding should be provided as an option,\n * otherwise it will default to 'binary'. A 'binary' string is encoded such\n * that each character is one byte in length and size.\n *\n * If an ArrayBuffer, DataView, or TypedArray is given, it will be used\n * *directly* without any copying. Note that, if a write to the buffer requires\n * more space, the buffer will allocate a new backing ArrayBuffer to\n * accommodate. The starting read and write offsets for the buffer may be\n * given as options.\n *\n * @param [b] the initial bytes for this buffer.\n * @param options the options to use:\n *          [readOffset] the starting read offset to use (default: 0).\n *          [writeOffset] the starting write offset to use (default: the\n *            length of the first parameter).\n *          [growSize] the minimum amount, in bytes, to grow the buffer by to\n *            accommodate writes (default: 1024).\n *          [encoding] the encoding ('binary', 'utf8', 'utf16', 'hex') for the\n *            first parameter, if it is a string (default: 'binary').\n */\nfunction DataBuffer(b, options) {\n  // default options\n  options = options || {};\n\n  // pointers for read from/write to buffer\n  this.read = options.readOffset || 0;\n  this.growSize = options.growSize || 1024;\n\n  var isArrayBuffer = util.isArrayBuffer(b);\n  var isArrayBufferView = util.isArrayBufferView(b);\n  if(isArrayBuffer || isArrayBufferView) {\n    // use ArrayBuffer directly\n    if(isArrayBuffer) {\n      this.data = new DataView(b);\n    } else {\n      // TODO: adjust read/write offset based on the type of view\n      // or specify that this must be done in the options ... that the\n      // offsets are byte-based\n      this.data = new DataView(b.buffer, b.byteOffset, b.byteLength);\n    }\n    this.write = ('writeOffset' in options ?\n      options.writeOffset : this.data.byteLength);\n    return;\n  }\n\n  // initialize to empty array buffer and add any given bytes using putBytes\n  this.data = new DataView(new ArrayBuffer(0));\n  this.write = 0;\n\n  if(b !== null && b !== undefined) {\n    this.putBytes(b);\n  }\n\n  if('writeOffset' in options) {\n    this.write = options.writeOffset;\n  }\n}\nutil.DataBuffer = DataBuffer;\n\n/**\n * Gets the number of bytes in this buffer.\n *\n * @return the number of bytes in this buffer.\n */\nutil.DataBuffer.prototype.length = function() {\n  return this.write - this.read;\n};\n\n/**\n * Gets whether or not this buffer is empty.\n *\n * @return true if this buffer is empty, false if not.\n */\nutil.DataBuffer.prototype.isEmpty = function() {\n  return this.length() <= 0;\n};\n\n/**\n * Ensures this buffer has enough empty space to accommodate the given number\n * of bytes. An optional parameter may be given that indicates a minimum\n * amount to grow the buffer if necessary. If the parameter is not given,\n * the buffer will be grown by some previously-specified default amount\n * or heuristic.\n *\n * @param amount the number of bytes to accommodate.\n * @param [growSize] the minimum amount, in bytes, to grow the buffer by if\n *          necessary.\n */\nutil.DataBuffer.prototype.accommodate = function(amount, growSize) {\n  if(this.length() >= amount) {\n    return this;\n  }\n  growSize = Math.max(growSize || this.growSize, amount);\n\n  // grow buffer\n  var src = new Uint8Array(\n    this.data.buffer, this.data.byteOffset, this.data.byteLength);\n  var dst = new Uint8Array(this.length() + growSize);\n  dst.set(src);\n  this.data = new DataView(dst.buffer);\n\n  return this;\n};\n\n/**\n * Puts a byte in this buffer.\n *\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putByte = function(b) {\n  this.accommodate(1);\n  this.data.setUint8(this.write++, b);\n  return this;\n};\n\n/**\n * Puts a byte in this buffer N times.\n *\n * @param b the byte to put.\n * @param n the number of bytes of value b to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.fillWithByte = function(b, n) {\n  this.accommodate(n);\n  for(var i = 0; i < n; ++i) {\n    this.data.setUint8(b);\n  }\n  return this;\n};\n\n/**\n * Puts bytes in this buffer. The bytes may be given as a string, an\n * ArrayBuffer, a DataView, or a TypedArray.\n *\n * @param bytes the bytes to put.\n * @param [encoding] the encoding for the first parameter ('binary', 'utf8',\n *          'utf16', 'hex'), if it is a string (default: 'binary').\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putBytes = function(bytes, encoding) {\n  if(util.isArrayBufferView(bytes)) {\n    var src = new Uint8Array(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    var len = src.byteLength - src.byteOffset;\n    this.accommodate(len);\n    var dst = new Uint8Array(this.data.buffer, this.write);\n    dst.set(src);\n    this.write += len;\n    return this;\n  }\n\n  if(util.isArrayBuffer(bytes)) {\n    var src = new Uint8Array(bytes);\n    this.accommodate(src.byteLength);\n    var dst = new Uint8Array(this.data.buffer);\n    dst.set(src, this.write);\n    this.write += src.byteLength;\n    return this;\n  }\n\n  // bytes is a util.DataBuffer or equivalent\n  if(bytes instanceof util.DataBuffer ||\n    (typeof bytes === 'object' &&\n    typeof bytes.read === 'number' && typeof bytes.write === 'number' &&\n    util.isArrayBufferView(bytes.data))) {\n    var src = new Uint8Array(bytes.data.byteLength, bytes.read, bytes.length());\n    this.accommodate(src.byteLength);\n    var dst = new Uint8Array(bytes.data.byteLength, this.write);\n    dst.set(src);\n    this.write += src.byteLength;\n    return this;\n  }\n\n  if(bytes instanceof util.ByteStringBuffer) {\n    // copy binary string and process as the same as a string parameter below\n    bytes = bytes.data;\n    encoding = 'binary';\n  }\n\n  // string conversion\n  encoding = encoding || 'binary';\n  if(typeof bytes === 'string') {\n    var view;\n\n    // decode from string\n    if(encoding === 'hex') {\n      this.accommodate(Math.ceil(bytes.length / 2));\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.hex.decode(bytes, view, this.write);\n      return this;\n    }\n    if(encoding === 'base64') {\n      this.accommodate(Math.ceil(bytes.length / 4) * 3);\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.base64.decode(bytes, view, this.write);\n      return this;\n    }\n\n    // encode text as UTF-8 bytes\n    if(encoding === 'utf8') {\n      // encode as UTF-8 then decode string as raw binary\n      bytes = util.encodeUtf8(bytes);\n      encoding = 'binary';\n    }\n\n    // decode string as raw binary\n    if(encoding === 'binary' || encoding === 'raw') {\n      // one byte per character\n      this.accommodate(bytes.length);\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.raw.decode(view);\n      return this;\n    }\n\n    // encode text as UTF-16 bytes\n    if(encoding === 'utf16') {\n      // two bytes per character\n      this.accommodate(bytes.length * 2);\n      view = new Uint16Array(this.data.buffer, this.write);\n      this.write += util.text.utf16.encode(view);\n      return this;\n    }\n\n    throw new Error('Invalid encoding: ' + encoding);\n  }\n\n  throw Error('Invalid parameter: ' + bytes);\n};\n\n/**\n * Puts the given buffer into this buffer.\n *\n * @param buffer the buffer to put into this one.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putBuffer = function(buffer) {\n  this.putBytes(buffer);\n  buffer.clear();\n  return this;\n};\n\n/**\n * Puts a string into this buffer.\n *\n * @param str the string to put.\n * @param [encoding] the encoding for the string (default: 'utf16').\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putString = function(str) {\n  return this.putBytes(str, 'utf16');\n};\n\n/**\n * Puts a 16-bit integer in this buffer in big-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt16 = function(i) {\n  this.accommodate(2);\n  this.data.setInt16(this.write, i);\n  this.write += 2;\n  return this;\n};\n\n/**\n * Puts a 24-bit integer in this buffer in big-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt24 = function(i) {\n  this.accommodate(3);\n  this.data.setInt16(this.write, i >> 8 & 0xFFFF);\n  this.data.setInt8(this.write, i >> 16 & 0xFF);\n  this.write += 3;\n  return this;\n};\n\n/**\n * Puts a 32-bit integer in this buffer in big-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt32 = function(i) {\n  this.accommodate(4);\n  this.data.setInt32(this.write, i);\n  this.write += 4;\n  return this;\n};\n\n/**\n * Puts a 16-bit integer in this buffer in little-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt16Le = function(i) {\n  this.accommodate(2);\n  this.data.setInt16(this.write, i, true);\n  this.write += 2;\n  return this;\n};\n\n/**\n * Puts a 24-bit integer in this buffer in little-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt24Le = function(i) {\n  this.accommodate(3);\n  this.data.setInt8(this.write, i >> 16 & 0xFF);\n  this.data.setInt16(this.write, i >> 8 & 0xFFFF, true);\n  this.write += 3;\n  return this;\n};\n\n/**\n * Puts a 32-bit integer in this buffer in little-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt32Le = function(i) {\n  this.accommodate(4);\n  this.data.setInt32(this.write, i, true);\n  this.write += 4;\n  return this;\n};\n\n/**\n * Puts an n-bit integer in this buffer in big-endian order.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt = function(i, n) {\n  _checkBitsParam(n);\n  this.accommodate(n / 8);\n  do {\n    n -= 8;\n    this.data.setInt8(this.write++, (i >> n) & 0xFF);\n  } while(n > 0);\n  return this;\n};\n\n/**\n * Puts a signed n-bit integer in this buffer in big-endian order. Two's\n * complement representation is used.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putSignedInt = function(i, n) {\n  _checkBitsParam(n);\n  this.accommodate(n / 8);\n  if(i < 0) {\n    i += 2 << (n - 1);\n  }\n  return this.putInt(i, n);\n};\n\n/**\n * Gets a byte from this buffer and advances the read pointer by 1.\n *\n * @return the byte.\n */\nutil.DataBuffer.prototype.getByte = function() {\n  return this.data.getInt8(this.read++);\n};\n\n/**\n * Gets a uint16 from this buffer in big-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.DataBuffer.prototype.getInt16 = function() {\n  var rval = this.data.getInt16(this.read);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in big-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.DataBuffer.prototype.getInt24 = function() {\n  var rval = (\n    this.data.getInt16(this.read) << 8 ^\n    this.data.getInt8(this.read + 2));\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in big-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.DataBuffer.prototype.getInt32 = function() {\n  var rval = this.data.getInt32(this.read);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets a uint16 from this buffer in little-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.DataBuffer.prototype.getInt16Le = function() {\n  var rval = this.data.getInt16(this.read, true);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in little-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.DataBuffer.prototype.getInt24Le = function() {\n  var rval = (\n    this.data.getInt8(this.read) ^\n    this.data.getInt16(this.read + 1, true) << 8);\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in little-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.DataBuffer.prototype.getInt32Le = function() {\n  var rval = this.data.getInt32(this.read, true);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets an n-bit integer from this buffer in big-endian order and advances the\n * read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.DataBuffer.prototype.getInt = function(n) {\n  _checkBitsParam(n);\n  var rval = 0;\n  do {\n    // TODO: Use (rval * 0x100) if adding support for 33 to 53 bits.\n    rval = (rval << 8) + this.data.getInt8(this.read++);\n    n -= 8;\n  } while(n > 0);\n  return rval;\n};\n\n/**\n * Gets a signed n-bit integer from this buffer in big-endian order, using\n * two's complement, and advances the read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.DataBuffer.prototype.getSignedInt = function(n) {\n  // getInt checks n\n  var x = this.getInt(n);\n  var max = 2 << (n - 2);\n  if(x >= max) {\n    x -= max << 1;\n  }\n  return x;\n};\n\n/**\n * Reads bytes out as a binary encoded string and clears them from the\n * buffer.\n *\n * @param count the number of bytes to read, undefined or null for all.\n *\n * @return a binary encoded string of bytes.\n */\nutil.DataBuffer.prototype.getBytes = function(count) {\n  // TODO: deprecate this method, it is poorly named and\n  // this.toString('binary') replaces it\n  // add a toTypedArray()/toArrayBuffer() function\n  var rval;\n  if(count) {\n    // read count bytes\n    count = Math.min(this.length(), count);\n    rval = this.data.slice(this.read, this.read + count);\n    this.read += count;\n  } else if(count === 0) {\n    rval = '';\n  } else {\n    // read all bytes, optimize to only copy when needed\n    rval = (this.read === 0) ? this.data : this.data.slice(this.read);\n    this.clear();\n  }\n  return rval;\n};\n\n/**\n * Gets a binary encoded string of the bytes from this buffer without\n * modifying the read pointer.\n *\n * @param count the number of bytes to get, omit to get all.\n *\n * @return a string full of binary encoded characters.\n */\nutil.DataBuffer.prototype.bytes = function(count) {\n  // TODO: deprecate this method, it is poorly named, add \"getString()\"\n  return (typeof(count) === 'undefined' ?\n    this.data.slice(this.read) :\n    this.data.slice(this.read, this.read + count));\n};\n\n/**\n * Gets a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n *\n * @return the byte.\n */\nutil.DataBuffer.prototype.at = function(i) {\n  return this.data.getUint8(this.read + i);\n};\n\n/**\n * Puts a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.setAt = function(i, b) {\n  this.data.setUint8(i, b);\n  return this;\n};\n\n/**\n * Gets the last byte without modifying the read pointer.\n *\n * @return the last byte.\n */\nutil.DataBuffer.prototype.last = function() {\n  return this.data.getUint8(this.write - 1);\n};\n\n/**\n * Creates a copy of this buffer.\n *\n * @return the copy.\n */\nutil.DataBuffer.prototype.copy = function() {\n  return new util.DataBuffer(this);\n};\n\n/**\n * Compacts this buffer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.compact = function() {\n  if(this.read > 0) {\n    var src = new Uint8Array(this.data.buffer, this.read);\n    var dst = new Uint8Array(src.byteLength);\n    dst.set(src);\n    this.data = new DataView(dst);\n    this.write -= this.read;\n    this.read = 0;\n  }\n  return this;\n};\n\n/**\n * Clears this buffer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.clear = function() {\n  this.data = new DataView(new ArrayBuffer(0));\n  this.read = this.write = 0;\n  return this;\n};\n\n/**\n * Shortens this buffer by triming bytes off of the end of this buffer.\n *\n * @param count the number of bytes to trim off.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.truncate = function(count) {\n  this.write = Math.max(0, this.length() - count);\n  this.read = Math.min(this.read, this.write);\n  return this;\n};\n\n/**\n * Converts this buffer to a hexadecimal string.\n *\n * @return a hexadecimal string.\n */\nutil.DataBuffer.prototype.toHex = function() {\n  var rval = '';\n  for(var i = this.read; i < this.data.byteLength; ++i) {\n    var b = this.data.getUint8(i);\n    if(b < 16) {\n      rval += '0';\n    }\n    rval += b.toString(16);\n  }\n  return rval;\n};\n\n/**\n * Converts this buffer to a string, using the given encoding. If no\n * encoding is given, 'utf8' (UTF-8) is used.\n *\n * @param [encoding] the encoding to use: 'binary', 'utf8', 'utf16', 'hex',\n *          'base64' (default: 'utf8').\n *\n * @return a string representation of the bytes in this buffer.\n */\nutil.DataBuffer.prototype.toString = function(encoding) {\n  var view = new Uint8Array(this.data, this.read, this.length());\n  encoding = encoding || 'utf8';\n\n  // encode to string\n  if(encoding === 'binary' || encoding === 'raw') {\n    return util.binary.raw.encode(view);\n  }\n  if(encoding === 'hex') {\n    return util.binary.hex.encode(view);\n  }\n  if(encoding === 'base64') {\n    return util.binary.base64.encode(view);\n  }\n\n  // decode to text\n  if(encoding === 'utf8') {\n    return util.text.utf8.decode(view);\n  }\n  if(encoding === 'utf16') {\n    return util.text.utf16.decode(view);\n  }\n\n  throw new Error('Invalid encoding: ' + encoding);\n};\n\n/** End Buffer w/UInt8Array backing */\n\n/**\n * Creates a buffer that stores bytes. A value may be given to populate the\n * buffer with data. This value can either be string of encoded bytes or a\n * regular string of characters. When passing a string of binary encoded\n * bytes, the encoding `raw` should be given. This is also the default. When\n * passing a string of characters, the encoding `utf8` should be given.\n *\n * @param [input] a string with encoded bytes to store in the buffer.\n * @param [encoding] (default: 'raw', other: 'utf8').\n */\nutil.createBuffer = function(input, encoding) {\n  // TODO: deprecate, use new ByteBuffer() instead\n  encoding = encoding || 'raw';\n  if(input !== undefined && encoding === 'utf8') {\n    input = util.encodeUtf8(input);\n  }\n  return new util.ByteBuffer(input);\n};\n\n/**\n * Fills a string with a particular value. If you want the string to be a byte\n * string, pass in String.fromCharCode(theByte).\n *\n * @param c the character to fill the string with, use String.fromCharCode\n *          to fill the string with a byte value.\n * @param n the number of characters of value c to fill with.\n *\n * @return the filled string.\n */\nutil.fillString = function(c, n) {\n  var s = '';\n  while(n > 0) {\n    if(n & 1) {\n      s += c;\n    }\n    n >>>= 1;\n    if(n > 0) {\n      c += c;\n    }\n  }\n  return s;\n};\n\n/**\n * Performs a per byte XOR between two byte strings and returns the result as a\n * string of bytes.\n *\n * @param s1 first string of bytes.\n * @param s2 second string of bytes.\n * @param n the number of bytes to XOR.\n *\n * @return the XOR'd result.\n */\nutil.xorBytes = function(s1, s2, n) {\n  var s3 = '';\n  var b = '';\n  var t = '';\n  var i = 0;\n  var c = 0;\n  for(; n > 0; --n, ++i) {\n    b = s1.charCodeAt(i) ^ s2.charCodeAt(i);\n    if(c >= 10) {\n      s3 += t;\n      t = '';\n      c = 0;\n    }\n    t += String.fromCharCode(b);\n    ++c;\n  }\n  s3 += t;\n  return s3;\n};\n\n/**\n * Converts a hex string into a 'binary' encoded string of bytes.\n *\n * @param hex the hexadecimal string to convert.\n *\n * @return the binary-encoded string of bytes.\n */\nutil.hexToBytes = function(hex) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.hex.decode instead.\"\n  var rval = '';\n  var i = 0;\n  if(hex.length & 1 == 1) {\n    // odd number of characters, convert first character alone\n    i = 1;\n    rval += String.fromCharCode(parseInt(hex[0], 16));\n  }\n  // convert 2 characters (1 byte) at a time\n  for(; i < hex.length; i += 2) {\n    rval += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n  }\n  return rval;\n};\n\n/**\n * Converts a 'binary' encoded string of bytes to hex.\n *\n * @param bytes the byte string to convert.\n *\n * @return the string of hexadecimal characters.\n */\nutil.bytesToHex = function(bytes) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.hex.encode instead.\"\n  return util.createBuffer(bytes).toHex();\n};\n\n/**\n * Converts an 32-bit integer to 4-big-endian byte string.\n *\n * @param i the integer.\n *\n * @return the byte string.\n */\nutil.int32ToBytes = function(i) {\n  return (\n    String.fromCharCode(i >> 24 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n// base64 characters, reverse mapping\nvar _base64 =\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nvar _base64Idx = [\n/*43 -43 = 0*/\n/*'+',  1,  2,  3,'/' */\n   62, -1, -1, -1, 63,\n\n/*'0','1','2','3','4','5','6','7','8','9' */\n   52, 53, 54, 55, 56, 57, 58, 59, 60, 61,\n\n/*15, 16, 17,'=', 19, 20, 21 */\n  -1, -1, -1, 64, -1, -1, -1,\n\n/*65 - 43 = 22*/\n/*'A','B','C','D','E','F','G','H','I','J','K','L','M', */\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12,\n\n/*'N','O','P','Q','R','S','T','U','V','W','X','Y','Z' */\n   13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\n\n/*91 - 43 = 48 */\n/*48, 49, 50, 51, 52, 53 */\n  -1, -1, -1, -1, -1, -1,\n\n/*97 - 43 = 54*/\n/*'a','b','c','d','e','f','g','h','i','j','k','l','m' */\n   26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\n\n/*'n','o','p','q','r','s','t','u','v','w','x','y','z' */\n   39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51\n];\n\n// base58 characters (Bitcoin alphabet)\nvar _base58 = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\n\n/**\n * Base64 encodes a 'binary' encoded string of bytes.\n *\n * @param input the binary encoded string of bytes to base64-encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the base64-encoded output.\n */\nutil.encode64 = function(input, maxline) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.base64.encode instead.\"\n  var line = '';\n  var output = '';\n  var chr1, chr2, chr3;\n  var i = 0;\n  while(i < input.length) {\n    chr1 = input.charCodeAt(i++);\n    chr2 = input.charCodeAt(i++);\n    chr3 = input.charCodeAt(i++);\n\n    // encode 4 character group\n    line += _base64.charAt(chr1 >> 2);\n    line += _base64.charAt(((chr1 & 3) << 4) | (chr2 >> 4));\n    if(isNaN(chr2)) {\n      line += '==';\n    } else {\n      line += _base64.charAt(((chr2 & 15) << 2) | (chr3 >> 6));\n      line += isNaN(chr3) ? '=' : _base64.charAt(chr3 & 63);\n    }\n\n    if(maxline && line.length > maxline) {\n      output += line.substr(0, maxline) + '\\r\\n';\n      line = line.substr(maxline);\n    }\n  }\n  output += line;\n  return output;\n};\n\n/**\n * Base64 decodes a string into a 'binary' encoded string of bytes.\n *\n * @param input the base64-encoded input.\n *\n * @return the binary encoded string.\n */\nutil.decode64 = function(input) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.base64.decode instead.\"\n\n  // remove all non-base64 characters\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n  var output = '';\n  var enc1, enc2, enc3, enc4;\n  var i = 0;\n\n  while(i < input.length) {\n    enc1 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc2 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc3 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc4 = _base64Idx[input.charCodeAt(i++) - 43];\n\n    output += String.fromCharCode((enc1 << 2) | (enc2 >> 4));\n    if(enc3 !== 64) {\n      // decoded at least 2 bytes\n      output += String.fromCharCode(((enc2 & 15) << 4) | (enc3 >> 2));\n      if(enc4 !== 64) {\n        // decoded 3 bytes\n        output += String.fromCharCode(((enc3 & 3) << 6) | enc4);\n      }\n    }\n  }\n\n  return output;\n};\n\n/**\n * Encodes the given string of characters (a standard JavaScript\n * string) as a binary encoded string where the bytes represent\n * a UTF-8 encoded string of characters. Non-ASCII characters will be\n * encoded as multiple bytes according to UTF-8.\n *\n * @param str a standard string of characters to encode.\n *\n * @return the binary encoded string.\n */\nutil.encodeUtf8 = function(str) {\n  return unescape(encodeURIComponent(str));\n};\n\n/**\n * Decodes a binary encoded string that contains bytes that\n * represent a UTF-8 encoded string of characters -- into a\n * string of characters (a standard JavaScript string).\n *\n * @param str the binary encoded string to decode.\n *\n * @return the resulting standard string of characters.\n */\nutil.decodeUtf8 = function(str) {\n  return decodeURIComponent(escape(str));\n};\n\n// binary encoding/decoding tools\n// FIXME: Experimental. Do not use yet.\nutil.binary = {\n  raw: {},\n  hex: {},\n  base64: {},\n  base58: {},\n  baseN : {\n    encode: baseN.encode,\n    decode: baseN.decode\n  }\n};\n\n/**\n * Encodes a Uint8Array as a binary-encoded string. This encoding uses\n * a value between 0 and 255 for each character.\n *\n * @param bytes the Uint8Array to encode.\n *\n * @return the binary-encoded string.\n */\nutil.binary.raw.encode = function(bytes) {\n  return String.fromCharCode.apply(null, bytes);\n};\n\n/**\n * Decodes a binary-encoded string to a Uint8Array. This encoding uses\n * a value between 0 and 255 for each character.\n *\n * @param str the binary-encoded string to decode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.raw.decode = function(str, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length);\n  }\n  offset = offset || 0;\n  var j = offset;\n  for(var i = 0; i < str.length; ++i) {\n    out[j++] = str.charCodeAt(i);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Encodes a 'binary' string, ArrayBuffer, DataView, TypedArray, or\n * ByteBuffer as a string of hexadecimal characters.\n *\n * @param bytes the bytes to convert.\n *\n * @return the string of hexadecimal characters.\n */\nutil.binary.hex.encode = util.bytesToHex;\n\n/**\n * Decodes a hex-encoded string to a Uint8Array.\n *\n * @param hex the hexadecimal string to convert.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.hex.decode = function(hex, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(Math.ceil(hex.length / 2));\n  }\n  offset = offset || 0;\n  var i = 0, j = offset;\n  if(hex.length & 1) {\n    // odd number of characters, convert first character alone\n    i = 1;\n    out[j++] = parseInt(hex[0], 16);\n  }\n  // convert 2 characters (1 byte) at a time\n  for(; i < hex.length; i += 2) {\n    out[j++] = parseInt(hex.substr(i, 2), 16);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Base64-encodes a Uint8Array.\n *\n * @param input the Uint8Array to encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the base64-encoded output string.\n */\nutil.binary.base64.encode = function(input, maxline) {\n  var line = '';\n  var output = '';\n  var chr1, chr2, chr3;\n  var i = 0;\n  while(i < input.byteLength) {\n    chr1 = input[i++];\n    chr2 = input[i++];\n    chr3 = input[i++];\n\n    // encode 4 character group\n    line += _base64.charAt(chr1 >> 2);\n    line += _base64.charAt(((chr1 & 3) << 4) | (chr2 >> 4));\n    if(isNaN(chr2)) {\n      line += '==';\n    } else {\n      line += _base64.charAt(((chr2 & 15) << 2) | (chr3 >> 6));\n      line += isNaN(chr3) ? '=' : _base64.charAt(chr3 & 63);\n    }\n\n    if(maxline && line.length > maxline) {\n      output += line.substr(0, maxline) + '\\r\\n';\n      line = line.substr(maxline);\n    }\n  }\n  output += line;\n  return output;\n};\n\n/**\n * Decodes a base64-encoded string to a Uint8Array.\n *\n * @param input the base64-encoded input string.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.base64.decode = function(input, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(Math.ceil(input.length / 4) * 3);\n  }\n\n  // remove all non-base64 characters\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n  offset = offset || 0;\n  var enc1, enc2, enc3, enc4;\n  var i = 0, j = offset;\n\n  while(i < input.length) {\n    enc1 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc2 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc3 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc4 = _base64Idx[input.charCodeAt(i++) - 43];\n\n    out[j++] = (enc1 << 2) | (enc2 >> 4);\n    if(enc3 !== 64) {\n      // decoded at least 2 bytes\n      out[j++] = ((enc2 & 15) << 4) | (enc3 >> 2);\n      if(enc4 !== 64) {\n        // decoded 3 bytes\n        out[j++] = ((enc3 & 3) << 6) | enc4;\n      }\n    }\n  }\n\n  // make sure result is the exact decoded length\n  return output ? (j - offset) : out.subarray(0, j);\n};\n\n// add support for base58 encoding/decoding with Bitcoin alphabet\nutil.binary.base58.encode = function(input, maxline) {\n  return util.binary.baseN.encode(input, _base58, maxline);\n};\nutil.binary.base58.decode = function(input, maxline) {\n  return util.binary.baseN.decode(input, _base58, maxline);\n};\n\n// text encoding/decoding tools\n// FIXME: Experimental. Do not use yet.\nutil.text = {\n  utf8: {},\n  utf16: {}\n};\n\n/**\n * Encodes the given string as UTF-8 in a Uint8Array.\n *\n * @param str the string to encode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.text.utf8.encode = function(str, output, offset) {\n  str = util.encodeUtf8(str);\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length);\n  }\n  offset = offset || 0;\n  var j = offset;\n  for(var i = 0; i < str.length; ++i) {\n    out[j++] = str.charCodeAt(i);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Decodes the UTF-8 contents from a Uint8Array.\n *\n * @param bytes the Uint8Array to decode.\n *\n * @return the resulting string.\n */\nutil.text.utf8.decode = function(bytes) {\n  return util.decodeUtf8(String.fromCharCode.apply(null, bytes));\n};\n\n/**\n * Encodes the given string as UTF-16 in a Uint8Array.\n *\n * @param str the string to encode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.text.utf16.encode = function(str, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length * 2);\n  }\n  var view = new Uint16Array(out.buffer);\n  offset = offset || 0;\n  var j = offset;\n  var k = offset;\n  for(var i = 0; i < str.length; ++i) {\n    view[k++] = str.charCodeAt(i);\n    j += 2;\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Decodes the UTF-16 contents from a Uint8Array.\n *\n * @param bytes the Uint8Array to decode.\n *\n * @return the resulting string.\n */\nutil.text.utf16.decode = function(bytes) {\n  return String.fromCharCode.apply(null, new Uint16Array(bytes.buffer));\n};\n\n/**\n * Deflates the given data using a flash interface.\n *\n * @param api the flash interface.\n * @param bytes the data.\n * @param raw true to return only raw deflate data, false to include zlib\n *          header and trailer.\n *\n * @return the deflated data as a string.\n */\nutil.deflate = function(api, bytes, raw) {\n  bytes = util.decode64(api.deflate(util.encode64(bytes)).rval);\n\n  // strip zlib header and trailer if necessary\n  if(raw) {\n    // zlib header is 2 bytes (CMF,FLG) where FLG indicates that\n    // there is a 4-byte DICT (alder-32) block before the data if\n    // its 5th bit is set\n    var start = 2;\n    var flg = bytes.charCodeAt(1);\n    if(flg & 0x20) {\n      start = 6;\n    }\n    // zlib trailer is 4 bytes of adler-32\n    bytes = bytes.substring(start, bytes.length - 4);\n  }\n\n  return bytes;\n};\n\n/**\n * Inflates the given data using a flash interface.\n *\n * @param api the flash interface.\n * @param bytes the data.\n * @param raw true if the incoming data has no zlib header or trailer and is\n *          raw DEFLATE data.\n *\n * @return the inflated data as a string, null on error.\n */\nutil.inflate = function(api, bytes, raw) {\n  // TODO: add zlib header and trailer if necessary/possible\n  var rval = api.inflate(util.encode64(bytes)).rval;\n  return (rval === null) ? null : util.decode64(rval);\n};\n\n/**\n * Sets a storage object.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param obj the storage object, null to remove.\n */\nvar _setStorageObject = function(api, id, obj) {\n  if(!api) {\n    throw new Error('WebStorage not available.');\n  }\n\n  var rval;\n  if(obj === null) {\n    rval = api.removeItem(id);\n  } else {\n    // json-encode and base64-encode object\n    obj = util.encode64(JSON.stringify(obj));\n    rval = api.setItem(id, obj);\n  }\n\n  // handle potential flash error\n  if(typeof(rval) !== 'undefined' && rval.rval !== true) {\n    var error = new Error(rval.error.message);\n    error.id = rval.error.id;\n    error.name = rval.error.name;\n    throw error;\n  }\n};\n\n/**\n * Gets a storage object.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n *\n * @return the storage object entry or null if none exists.\n */\nvar _getStorageObject = function(api, id) {\n  if(!api) {\n    throw new Error('WebStorage not available.');\n  }\n\n  // get the existing entry\n  var rval = api.getItem(id);\n\n  /* Note: We check api.init because we can't do (api == localStorage)\n    on IE because of \"Class doesn't support Automation\" exception. Only\n    the flash api has an init method so this works too, but we need a\n    better solution in the future. */\n\n  // flash returns item wrapped in an object, handle special case\n  if(api.init) {\n    if(rval.rval === null) {\n      if(rval.error) {\n        var error = new Error(rval.error.message);\n        error.id = rval.error.id;\n        error.name = rval.error.name;\n        throw error;\n      }\n      // no error, but also no item\n      rval = null;\n    } else {\n      rval = rval.rval;\n    }\n  }\n\n  // handle decoding\n  if(rval !== null) {\n    // base64-decode and json-decode data\n    rval = JSON.parse(util.decode64(rval));\n  }\n\n  return rval;\n};\n\n/**\n * Stores an item in local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param data the data for the item (any javascript object/primitive).\n */\nvar _setItem = function(api, id, key, data) {\n  // get storage object\n  var obj = _getStorageObject(api, id);\n  if(obj === null) {\n    // create a new storage object\n    obj = {};\n  }\n  // update key\n  obj[key] = data;\n\n  // set storage object\n  _setStorageObject(api, id, obj);\n};\n\n/**\n * Gets an item from local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n *\n * @return the item.\n */\nvar _getItem = function(api, id, key) {\n  // get storage object\n  var rval = _getStorageObject(api, id);\n  if(rval !== null) {\n    // return data at key\n    rval = (key in rval) ? rval[key] : null;\n  }\n\n  return rval;\n};\n\n/**\n * Removes an item from local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n */\nvar _removeItem = function(api, id, key) {\n  // get storage object\n  var obj = _getStorageObject(api, id);\n  if(obj !== null && key in obj) {\n    // remove key\n    delete obj[key];\n\n    // see if entry has no keys remaining\n    var empty = true;\n    for(var prop in obj) {\n      empty = false;\n      break;\n    }\n    if(empty) {\n      // remove entry entirely if no keys are left\n      obj = null;\n    }\n\n    // set storage object\n    _setStorageObject(api, id, obj);\n  }\n};\n\n/**\n * Clears the local disk storage identified by the given ID.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n */\nvar _clearItems = function(api, id) {\n  _setStorageObject(api, id, null);\n};\n\n/**\n * Calls a storage function.\n *\n * @param func the function to call.\n * @param args the arguments for the function.\n * @param location the location argument.\n *\n * @return the return value from the function.\n */\nvar _callStorageFunction = function(func, args, location) {\n  var rval = null;\n\n  // default storage types\n  if(typeof(location) === 'undefined') {\n    location = ['web', 'flash'];\n  }\n\n  // apply storage types in order of preference\n  var type;\n  var done = false;\n  var exception = null;\n  for(var idx in location) {\n    type = location[idx];\n    try {\n      if(type === 'flash' || type === 'both') {\n        if(args[0] === null) {\n          throw new Error('Flash local storage not available.');\n        }\n        rval = func.apply(this, args);\n        done = (type === 'flash');\n      }\n      if(type === 'web' || type === 'both') {\n        args[0] = localStorage;\n        rval = func.apply(this, args);\n        done = true;\n      }\n    } catch(ex) {\n      exception = ex;\n    }\n    if(done) {\n      break;\n    }\n  }\n\n  if(!done) {\n    throw exception;\n  }\n\n  return rval;\n};\n\n/**\n * Stores an item on local disk.\n *\n * The available types of local storage include 'flash', 'web', and 'both'.\n *\n * The type 'flash' refers to flash local storage (SharedObject). In order\n * to use flash local storage, the 'api' parameter must be valid. The type\n * 'web' refers to WebStorage, if supported by the browser. The type 'both'\n * refers to storing using both 'flash' and 'web', not just one or the\n * other.\n *\n * The location array should list the storage types to use in order of\n * preference:\n *\n * ['flash']: flash only storage\n * ['web']: web only storage\n * ['both']: try to store in both\n * ['flash','web']: store in flash first, but if not available, 'web'\n * ['web','flash']: store in web first, but if not available, 'flash'\n *\n * The location array defaults to: ['web', 'flash']\n *\n * @param api the flash interface, null to use only WebStorage.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param data the data for the item (any javascript object/primitive).\n * @param location an array with the preferred types of storage to use.\n */\nutil.setItem = function(api, id, key, data, location) {\n  _callStorageFunction(_setItem, arguments, location);\n};\n\n/**\n * Gets an item on local disk.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface, null to use only WebStorage.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param location an array with the preferred types of storage to use.\n *\n * @return the item.\n */\nutil.getItem = function(api, id, key, location) {\n  return _callStorageFunction(_getItem, arguments, location);\n};\n\n/**\n * Removes an item on local disk.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param location an array with the preferred types of storage to use.\n */\nutil.removeItem = function(api, id, key, location) {\n  _callStorageFunction(_removeItem, arguments, location);\n};\n\n/**\n * Clears the local disk storage identified by the given ID.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface if flash is available.\n * @param id the storage ID to use.\n * @param location an array with the preferred types of storage to use.\n */\nutil.clearItems = function(api, id, location) {\n  _callStorageFunction(_clearItems, arguments, location);\n};\n\n/**\n * Check if an object is empty.\n *\n * Taken from:\n * http://stackoverflow.com/questions/679915/how-do-i-test-for-an-empty-javascript-object-from-json/679937#679937\n *\n * @param object the object to check.\n */\nutil.isEmpty = function(obj) {\n  for(var prop in obj) {\n    if(obj.hasOwnProperty(prop)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Format with simple printf-style interpolation.\n *\n * %%: literal '%'\n * %s,%o: convert next argument into a string.\n *\n * @param format the string to format.\n * @param ... arguments to interpolate into the format string.\n */\nutil.format = function(format) {\n  var re = /%./g;\n  // current match\n  var match;\n  // current part\n  var part;\n  // current arg index\n  var argi = 0;\n  // collected parts to recombine later\n  var parts = [];\n  // last index found\n  var last = 0;\n  // loop while matches remain\n  while((match = re.exec(format))) {\n    part = format.substring(last, re.lastIndex - 2);\n    // don't add empty strings (ie, parts between %s%s)\n    if(part.length > 0) {\n      parts.push(part);\n    }\n    last = re.lastIndex;\n    // switch on % code\n    var code = match[0][1];\n    switch(code) {\n    case 's':\n    case 'o':\n      // check if enough arguments were given\n      if(argi < arguments.length) {\n        parts.push(arguments[argi++ + 1]);\n      } else {\n        parts.push('<?>');\n      }\n      break;\n    // FIXME: do proper formating for numbers, etc\n    //case 'f':\n    //case 'd':\n    case '%':\n      parts.push('%');\n      break;\n    default:\n      parts.push('<%' + code + '?>');\n    }\n  }\n  // add trailing part of format string\n  parts.push(format.substring(last));\n  return parts.join('');\n};\n\n/**\n * Formats a number.\n *\n * http://snipplr.com/view/5945/javascript-numberformat--ported-from-php/\n */\nutil.formatNumber = function(number, decimals, dec_point, thousands_sep) {\n  // http://kevin.vanzonneveld.net\n  // +   original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // +     bugfix by: Michael White (http://crestidg.com)\n  // +     bugfix by: Benjamin Lupton\n  // +     bugfix by: Allan Jensen (http://www.winternet.no)\n  // +    revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // *     example 1: number_format(1234.5678, 2, '.', '');\n  // *     returns 1: 1234.57\n\n  var n = number, c = isNaN(decimals = Math.abs(decimals)) ? 2 : decimals;\n  var d = dec_point === undefined ? ',' : dec_point;\n  var t = thousands_sep === undefined ?\n   '.' : thousands_sep, s = n < 0 ? '-' : '';\n  var i = parseInt((n = Math.abs(+n || 0).toFixed(c)), 10) + '';\n  var j = (i.length > 3) ? i.length % 3 : 0;\n  return s + (j ? i.substr(0, j) + t : '') +\n    i.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + t) +\n    (c ? d + Math.abs(n - i).toFixed(c).slice(2) : '');\n};\n\n/**\n * Formats a byte size.\n *\n * http://snipplr.com/view/5949/format-humanize-file-byte-size-presentation-in-javascript/\n */\nutil.formatSize = function(size) {\n  if(size >= 1073741824) {\n    size = util.formatNumber(size / 1073741824, 2, '.', '') + ' GiB';\n  } else if(size >= 1048576) {\n    size = util.formatNumber(size / 1048576, 2, '.', '') + ' MiB';\n  } else if(size >= 1024) {\n    size = util.formatNumber(size / 1024, 0) + ' KiB';\n  } else {\n    size = util.formatNumber(size, 0) + ' bytes';\n  }\n  return size;\n};\n\n/**\n * Converts an IPv4 or IPv6 string representation into bytes (in network order).\n *\n * @param ip the IPv4 or IPv6 address to convert.\n *\n * @return the 4-byte IPv6 or 16-byte IPv6 address or null if the address can't\n *         be parsed.\n */\nutil.bytesFromIP = function(ip) {\n  if(ip.indexOf('.') !== -1) {\n    return util.bytesFromIPv4(ip);\n  }\n  if(ip.indexOf(':') !== -1) {\n    return util.bytesFromIPv6(ip);\n  }\n  return null;\n};\n\n/**\n * Converts an IPv4 string representation into bytes (in network order).\n *\n * @param ip the IPv4 address to convert.\n *\n * @return the 4-byte address or null if the address can't be parsed.\n */\nutil.bytesFromIPv4 = function(ip) {\n  ip = ip.split('.');\n  if(ip.length !== 4) {\n    return null;\n  }\n  var b = util.createBuffer();\n  for(var i = 0; i < ip.length; ++i) {\n    var num = parseInt(ip[i], 10);\n    if(isNaN(num)) {\n      return null;\n    }\n    b.putByte(num);\n  }\n  return b.getBytes();\n};\n\n/**\n * Converts an IPv6 string representation into bytes (in network order).\n *\n * @param ip the IPv6 address to convert.\n *\n * @return the 16-byte address or null if the address can't be parsed.\n */\nutil.bytesFromIPv6 = function(ip) {\n  var blanks = 0;\n  ip = ip.split(':').filter(function(e) {\n    if(e.length === 0) ++blanks;\n    return true;\n  });\n  var zeros = (8 - ip.length + blanks) * 2;\n  var b = util.createBuffer();\n  for(var i = 0; i < 8; ++i) {\n    if(!ip[i] || ip[i].length === 0) {\n      b.fillWithByte(0, zeros);\n      zeros = 0;\n      continue;\n    }\n    var bytes = util.hexToBytes(ip[i]);\n    if(bytes.length < 2) {\n      b.putByte(0);\n    }\n    b.putBytes(bytes);\n  }\n  return b.getBytes();\n};\n\n/**\n * Converts 4-bytes into an IPv4 string representation or 16-bytes into\n * an IPv6 string representation. The bytes must be in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv4 or IPv6 string representation if 4 or 16 bytes,\n *         respectively, are given, otherwise null.\n */\nutil.bytesToIP = function(bytes) {\n  if(bytes.length === 4) {\n    return util.bytesToIPv4(bytes);\n  }\n  if(bytes.length === 16) {\n    return util.bytesToIPv6(bytes);\n  }\n  return null;\n};\n\n/**\n * Converts 4-bytes into an IPv4 string representation. The bytes must be\n * in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv4 string representation or null for an invalid # of bytes.\n */\nutil.bytesToIPv4 = function(bytes) {\n  if(bytes.length !== 4) {\n    return null;\n  }\n  var ip = [];\n  for(var i = 0; i < bytes.length; ++i) {\n    ip.push(bytes.charCodeAt(i));\n  }\n  return ip.join('.');\n};\n\n/**\n * Converts 16-bytes into an IPv16 string representation. The bytes must be\n * in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv16 string representation or null for an invalid # of bytes.\n */\nutil.bytesToIPv6 = function(bytes) {\n  if(bytes.length !== 16) {\n    return null;\n  }\n  var ip = [];\n  var zeroGroups = [];\n  var zeroMaxGroup = 0;\n  for(var i = 0; i < bytes.length; i += 2) {\n    var hex = util.bytesToHex(bytes[i] + bytes[i + 1]);\n    // canonicalize zero representation\n    while(hex[0] === '0' && hex !== '0') {\n      hex = hex.substr(1);\n    }\n    if(hex === '0') {\n      var last = zeroGroups[zeroGroups.length - 1];\n      var idx = ip.length;\n      if(!last || idx !== last.end + 1) {\n        zeroGroups.push({start: idx, end: idx});\n      } else {\n        last.end = idx;\n        if((last.end - last.start) >\n          (zeroGroups[zeroMaxGroup].end - zeroGroups[zeroMaxGroup].start)) {\n          zeroMaxGroup = zeroGroups.length - 1;\n        }\n      }\n    }\n    ip.push(hex);\n  }\n  if(zeroGroups.length > 0) {\n    var group = zeroGroups[zeroMaxGroup];\n    // only shorten group of length > 0\n    if(group.end - group.start > 0) {\n      ip.splice(group.start, group.end - group.start + 1, '');\n      if(group.start === 0) {\n        ip.unshift('');\n      }\n      if(group.end === 7) {\n        ip.push('');\n      }\n    }\n  }\n  return ip.join(':');\n};\n\n/**\n * Estimates the number of processes that can be run concurrently. If\n * creating Web Workers, keep in mind that the main JavaScript process needs\n * its own core.\n *\n * @param options the options to use:\n *          update true to force an update (not use the cached value).\n * @param callback(err, max) called once the operation completes.\n */\nutil.estimateCores = function(options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  if('cores' in util && !options.update) {\n    return callback(null, util.cores);\n  }\n  if(typeof navigator !== 'undefined' &&\n    'hardwareConcurrency' in navigator &&\n    navigator.hardwareConcurrency > 0) {\n    util.cores = navigator.hardwareConcurrency;\n    return callback(null, util.cores);\n  }\n  if(typeof Worker === 'undefined') {\n    // workers not available\n    util.cores = 1;\n    return callback(null, util.cores);\n  }\n  if(typeof Blob === 'undefined') {\n    // can't estimate, default to 2\n    util.cores = 2;\n    return callback(null, util.cores);\n  }\n\n  // create worker concurrency estimation code as blob\n  var blobUrl = URL.createObjectURL(new Blob(['(',\n    function() {\n      self.addEventListener('message', function(e) {\n        // run worker for 4 ms\n        var st = Date.now();\n        var et = st + 4;\n        while(Date.now() < et);\n        self.postMessage({st: st, et: et});\n      });\n    }.toString(),\n  ')()'], {type: 'application/javascript'}));\n\n  // take 5 samples using 16 workers\n  sample([], 5, 16);\n\n  function sample(max, samples, numWorkers) {\n    if(samples === 0) {\n      // get overlap average\n      var avg = Math.floor(max.reduce(function(avg, x) {\n        return avg + x;\n      }, 0) / max.length);\n      util.cores = Math.max(1, avg);\n      URL.revokeObjectURL(blobUrl);\n      return callback(null, util.cores);\n    }\n    map(numWorkers, function(err, results) {\n      max.push(reduce(numWorkers, results));\n      sample(max, samples - 1, numWorkers);\n    });\n  }\n\n  function map(numWorkers, callback) {\n    var workers = [];\n    var results = [];\n    for(var i = 0; i < numWorkers; ++i) {\n      var worker = new Worker(blobUrl);\n      worker.addEventListener('message', function(e) {\n        results.push(e.data);\n        if(results.length === numWorkers) {\n          for(var i = 0; i < numWorkers; ++i) {\n            workers[i].terminate();\n          }\n          callback(null, results);\n        }\n      });\n      workers.push(worker);\n    }\n    for(var i = 0; i < numWorkers; ++i) {\n      workers[i].postMessage(i);\n    }\n  }\n\n  function reduce(numWorkers, results) {\n    // find overlapping time windows\n    var overlaps = [];\n    for(var n = 0; n < numWorkers; ++n) {\n      var r1 = results[n];\n      var overlap = overlaps[n] = [];\n      for(var i = 0; i < numWorkers; ++i) {\n        if(n === i) {\n          continue;\n        }\n        var r2 = results[i];\n        if((r1.st > r2.st && r1.st < r2.et) ||\n          (r2.st > r1.st && r2.st < r1.et)) {\n          overlap.push(i);\n        }\n      }\n    }\n    // get maximum overlaps ... don't include overlapping worker itself\n    // as the main JS process was also being scheduled during the work and\n    // would have to be subtracted from the estimate anyway\n    return overlaps.reduce(function(max, overlap) {\n      return Math.max(max, overlap.length);\n    }, 0);\n  }\n};\n","/**\n * Javascript implementation of X.509 and related components (such as\n * Certification Signing Requests) of a Public Key Infrastructure.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n *\n * The ASN.1 representation of an X.509v3 certificate is as follows\n * (see RFC 2459):\n *\n * Certificate ::= SEQUENCE {\n *   tbsCertificate       TBSCertificate,\n *   signatureAlgorithm   AlgorithmIdentifier,\n *   signatureValue       BIT STRING\n * }\n *\n * TBSCertificate ::= SEQUENCE {\n *   version         [0]  EXPLICIT Version DEFAULT v1,\n *   serialNumber         CertificateSerialNumber,\n *   signature            AlgorithmIdentifier,\n *   issuer               Name,\n *   validity             Validity,\n *   subject              Name,\n *   subjectPublicKeyInfo SubjectPublicKeyInfo,\n *   issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,\n *                        -- If present, version shall be v2 or v3\n *   subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL,\n *                        -- If present, version shall be v2 or v3\n *   extensions      [3]  EXPLICIT Extensions OPTIONAL\n *                        -- If present, version shall be v3\n * }\n *\n * Version ::= INTEGER  { v1(0), v2(1), v3(2) }\n *\n * CertificateSerialNumber ::= INTEGER\n *\n * Name ::= CHOICE {\n *   // only one possible choice for now\n *   RDNSequence\n * }\n *\n * RDNSequence ::= SEQUENCE OF RelativeDistinguishedName\n *\n * RelativeDistinguishedName ::= SET OF AttributeTypeAndValue\n *\n * AttributeTypeAndValue ::= SEQUENCE {\n *   type     AttributeType,\n *   value    AttributeValue\n * }\n * AttributeType ::= OBJECT IDENTIFIER\n * AttributeValue ::= ANY DEFINED BY AttributeType\n *\n * Validity ::= SEQUENCE {\n *   notBefore      Time,\n *   notAfter       Time\n * }\n *\n * Time ::= CHOICE {\n *   utcTime        UTCTime,\n *   generalTime    GeneralizedTime\n * }\n *\n * UniqueIdentifier ::= BIT STRING\n *\n * SubjectPublicKeyInfo ::= SEQUENCE {\n *   algorithm            AlgorithmIdentifier,\n *   subjectPublicKey     BIT STRING\n * }\n *\n * Extensions ::= SEQUENCE SIZE (1..MAX) OF Extension\n *\n * Extension ::= SEQUENCE {\n *   extnID      OBJECT IDENTIFIER,\n *   critical    BOOLEAN DEFAULT FALSE,\n *   extnValue   OCTET STRING\n * }\n *\n * The only key algorithm currently supported for PKI is RSA.\n *\n * RSASSA-PSS signatures are described in RFC 3447 and RFC 4055.\n *\n * PKCS#10 v1.7 describes certificate signing requests:\n *\n * CertificationRequestInfo:\n *\n * CertificationRequestInfo ::= SEQUENCE {\n *   version       INTEGER { v1(0) } (v1,...),\n *   subject       Name,\n *   subjectPKInfo SubjectPublicKeyInfo{{ PKInfoAlgorithms }},\n *   attributes    [0] Attributes{{ CRIAttributes }}\n * }\n *\n * Attributes { ATTRIBUTE:IOSet } ::= SET OF Attribute{{ IOSet }}\n *\n * CRIAttributes  ATTRIBUTE  ::= {\n *   ... -- add any locally defined attributes here -- }\n *\n * Attribute { ATTRIBUTE:IOSet } ::= SEQUENCE {\n *   type   ATTRIBUTE.&id({IOSet}),\n *   values SET SIZE(1..MAX) OF ATTRIBUTE.&Type({IOSet}{@type})\n * }\n *\n * CertificationRequest ::= SEQUENCE {\n *   certificationRequestInfo CertificationRequestInfo,\n *   signatureAlgorithm AlgorithmIdentifier{{ SignatureAlgorithms }},\n *   signature          BIT STRING\n * }\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./md');\nrequire('./mgf');\nrequire('./oids');\nrequire('./pem');\nrequire('./pss');\nrequire('./rsa');\nrequire('./util');\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Public Key Infrastructure (PKI) implementation. */\nvar pki = module.exports = forge.pki = forge.pki || {};\nvar oids = pki.oids;\n\n// short name OID mappings\nvar _shortNames = {};\n_shortNames['CN'] = oids['commonName'];\n_shortNames['commonName'] = 'CN';\n_shortNames['C'] = oids['countryName'];\n_shortNames['countryName'] = 'C';\n_shortNames['L'] = oids['localityName'];\n_shortNames['localityName'] = 'L';\n_shortNames['ST'] = oids['stateOrProvinceName'];\n_shortNames['stateOrProvinceName'] = 'ST';\n_shortNames['O'] = oids['organizationName'];\n_shortNames['organizationName'] = 'O';\n_shortNames['OU'] = oids['organizationalUnitName'];\n_shortNames['organizationalUnitName'] = 'OU';\n_shortNames['E'] = oids['emailAddress'];\n_shortNames['emailAddress'] = 'E';\n\n// validator for an SubjectPublicKeyInfo structure\n// Note: Currently only works with an RSA public key\nvar publicKeyValidator = forge.pki.rsa.publicKeyValidator;\n\n// validator for an X.509v3 certificate\nvar x509CertificateValidator = {\n  name: 'Certificate',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'Certificate.TBSCertificate',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    captureAsn1: 'tbsCertificate',\n    value: [{\n      name: 'Certificate.TBSCertificate.version',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 0,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.version.integer',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        capture: 'certVersion'\n      }]\n    }, {\n      name: 'Certificate.TBSCertificate.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'certSerialNumber'\n    }, {\n      name: 'Certificate.TBSCertificate.signature',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.signature.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'certinfoSignatureOid'\n      }, {\n        name: 'Certificate.TBSCertificate.signature.parameters',\n        tagClass: asn1.Class.UNIVERSAL,\n        optional: true,\n        captureAsn1: 'certinfoSignatureParams'\n      }]\n    }, {\n      name: 'Certificate.TBSCertificate.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'certIssuer'\n    }, {\n      name: 'Certificate.TBSCertificate.validity',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      // Note: UTC and generalized times may both appear so the capture\n      // names are based on their detected order, the names used below\n      // are only for the common case, which validity time really means\n      // \"notBefore\" and which means \"notAfter\" will be determined by order\n      value: [{\n        // notBefore (Time) (UTC time case)\n        name: 'Certificate.TBSCertificate.validity.notBefore (utc)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.UTCTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity1UTCTime'\n      }, {\n        // notBefore (Time) (generalized time case)\n        name: 'Certificate.TBSCertificate.validity.notBefore (generalized)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.GENERALIZEDTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity2GeneralizedTime'\n      }, {\n        // notAfter (Time) (only UTC time is supported)\n        name: 'Certificate.TBSCertificate.validity.notAfter (utc)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.UTCTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity3UTCTime'\n      }, {\n        // notAfter (Time) (only UTC time is supported)\n        name: 'Certificate.TBSCertificate.validity.notAfter (generalized)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.GENERALIZEDTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity4GeneralizedTime'\n      }]\n    }, {\n      // Name (subject) (RDNSequence)\n      name: 'Certificate.TBSCertificate.subject',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'certSubject'\n    },\n    // SubjectPublicKeyInfo\n    publicKeyValidator,\n    {\n      // issuerUniqueID (optional)\n      name: 'Certificate.TBSCertificate.issuerUniqueID',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 1,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.issuerUniqueID.id',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.BITSTRING,\n        constructed: false,\n        // TODO: support arbitrary bit length ids\n        captureBitStringValue: 'certIssuerUniqueId'\n      }]\n    }, {\n      // subjectUniqueID (optional)\n      name: 'Certificate.TBSCertificate.subjectUniqueID',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 2,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.subjectUniqueID.id',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.BITSTRING,\n        constructed: false,\n        // TODO: support arbitrary bit length ids\n        captureBitStringValue: 'certSubjectUniqueId'\n      }]\n    }, {\n      // Extensions (optional)\n      name: 'Certificate.TBSCertificate.extensions',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 3,\n      constructed: true,\n      captureAsn1: 'certExtensions',\n      optional: true\n    }]\n  }, {\n    // AlgorithmIdentifier (signature algorithm)\n    name: 'Certificate.signatureAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      // algorithm\n      name: 'Certificate.signatureAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'certSignatureOid'\n    }, {\n      name: 'Certificate.TBSCertificate.signature.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      optional: true,\n      captureAsn1: 'certSignatureParams'\n    }]\n  }, {\n    // SignatureValue\n    name: 'Certificate.signatureValue',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    captureBitStringValue: 'certSignature'\n  }]\n};\n\nvar rsassaPssParameterValidator = {\n  name: 'rsapss',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'rsapss.hashAlgorithm',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    value: [{\n      name: 'rsapss.hashAlgorithm.AlgorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.SEQUENCE,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'rsapss.hashAlgorithm.AlgorithmIdentifier.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'hashOid'\n        /* parameter block omitted, for SHA1 NULL anyhow. */\n      }]\n    }]\n  }, {\n    name: 'rsapss.maskGenAlgorithm',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    constructed: true,\n    value: [{\n      name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.SEQUENCE,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'maskGenOid'\n      }, {\n        name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.params',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,\n        constructed: true,\n        value: [{\n          name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.params.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'maskGenHashOid'\n          /* parameter block omitted, for SHA1 NULL anyhow. */\n        }]\n      }]\n    }]\n  }, {\n    name: 'rsapss.saltLength',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 2,\n    optional: true,\n    value: [{\n      name: 'rsapss.saltLength.saltLength',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.INTEGER,\n      constructed: false,\n      capture: 'saltLength'\n    }]\n  }, {\n    name: 'rsapss.trailerField',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 3,\n    optional: true,\n    value: [{\n      name: 'rsapss.trailer.trailer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.INTEGER,\n      constructed: false,\n      capture: 'trailer'\n    }]\n  }]\n};\n\n// validator for a CertificationRequestInfo structure\nvar certificationRequestInfoValidator = {\n  name: 'CertificationRequestInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'certificationRequestInfo',\n  value: [{\n    name: 'CertificationRequestInfo.integer',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'certificationRequestInfoVersion'\n  }, {\n    // Name (subject) (RDNSequence)\n    name: 'CertificationRequestInfo.subject',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    captureAsn1: 'certificationRequestInfoSubject'\n  },\n  // SubjectPublicKeyInfo\n  publicKeyValidator,\n  {\n    name: 'CertificationRequestInfo.attributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    capture: 'certificationRequestInfoAttributes',\n    value: [{\n      name: 'CertificationRequestInfo.attributes',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'CertificationRequestInfo.attributes.type',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false\n      }, {\n        name: 'CertificationRequestInfo.attributes.value',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SET,\n        constructed: true\n      }]\n    }]\n  }]\n};\n\n// validator for a CertificationRequest structure\nvar certificationRequestValidator = {\n  name: 'CertificationRequest',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'csr',\n  value: [\n    certificationRequestInfoValidator, {\n      // AlgorithmIdentifier (signature algorithm)\n      name: 'CertificationRequest.signatureAlgorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        // algorithm\n        name: 'CertificationRequest.signatureAlgorithm.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'csrSignatureOid'\n      }, {\n        name: 'CertificationRequest.signatureAlgorithm.parameters',\n        tagClass: asn1.Class.UNIVERSAL,\n        optional: true,\n        captureAsn1: 'csrSignatureParams'\n      }]\n    }, {\n      // signature\n      name: 'CertificationRequest.signature',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.BITSTRING,\n      constructed: false,\n      captureBitStringValue: 'csrSignature'\n    }\n  ]\n};\n\n/**\n * Converts an RDNSequence of ASN.1 DER-encoded RelativeDistinguishedName\n * sets into an array with objects that have type and value properties.\n *\n * @param rdn the RDNSequence to convert.\n * @param md a message digest to append type and value to if provided.\n */\npki.RDNAttributesAsArray = function(rdn, md) {\n  var rval = [];\n\n  // each value in 'rdn' in is a SET of RelativeDistinguishedName\n  var set, attr, obj;\n  for(var si = 0; si < rdn.value.length; ++si) {\n    // get the RelativeDistinguishedName set\n    set = rdn.value[si];\n\n    // each value in the SET is an AttributeTypeAndValue sequence\n    // containing first a type (an OID) and second a value (defined by\n    // the OID)\n    for(var i = 0; i < set.value.length; ++i) {\n      obj = {};\n      attr = set.value[i];\n      obj.type = asn1.derToOid(attr.value[0].value);\n      obj.value = attr.value[1].value;\n      obj.valueTagClass = attr.value[1].type;\n      // if the OID is known, get its name and short name\n      if(obj.type in oids) {\n        obj.name = oids[obj.type];\n        if(obj.name in _shortNames) {\n          obj.shortName = _shortNames[obj.name];\n        }\n      }\n      if(md) {\n        md.update(obj.type);\n        md.update(obj.value);\n      }\n      rval.push(obj);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Converts ASN.1 CRIAttributes into an array with objects that have type and\n * value properties.\n *\n * @param attributes the CRIAttributes to convert.\n */\npki.CRIAttributesAsArray = function(attributes) {\n  var rval = [];\n\n  // each value in 'attributes' in is a SEQUENCE with an OID and a SET\n  for(var si = 0; si < attributes.length; ++si) {\n    // get the attribute sequence\n    var seq = attributes[si];\n\n    // each value in the SEQUENCE containing first a type (an OID) and\n    // second a set of values (defined by the OID)\n    var type = asn1.derToOid(seq.value[0].value);\n    var values = seq.value[1].value;\n    for(var vi = 0; vi < values.length; ++vi) {\n      var obj = {};\n      obj.type = type;\n      obj.value = values[vi].value;\n      obj.valueTagClass = values[vi].type;\n      // if the OID is known, get its name and short name\n      if(obj.type in oids) {\n        obj.name = oids[obj.type];\n        if(obj.name in _shortNames) {\n          obj.shortName = _shortNames[obj.name];\n        }\n      }\n      // parse extensions\n      if(obj.type === oids.extensionRequest) {\n        obj.extensions = [];\n        for(var ei = 0; ei < obj.value.length; ++ei) {\n          obj.extensions.push(pki.certificateExtensionFromAsn1(obj.value[ei]));\n        }\n      }\n      rval.push(obj);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Gets an issuer or subject attribute from its name, type, or short name.\n *\n * @param obj the issuer or subject object.\n * @param options a short name string or an object with:\n *          shortName the short name for the attribute.\n *          name the name for the attribute.\n *          type the type for the attribute.\n *\n * @return the attribute.\n */\nfunction _getAttribute(obj, options) {\n  if(typeof options === 'string') {\n    options = {shortName: options};\n  }\n\n  var rval = null;\n  var attr;\n  for(var i = 0; rval === null && i < obj.attributes.length; ++i) {\n    attr = obj.attributes[i];\n    if(options.type && options.type === attr.type) {\n      rval = attr;\n    } else if(options.name && options.name === attr.name) {\n      rval = attr;\n    } else if(options.shortName && options.shortName === attr.shortName) {\n      rval = attr;\n    }\n  }\n  return rval;\n}\n\n/**\n * Converts signature parameters from ASN.1 structure.\n *\n * Currently only RSASSA-PSS supported.  The PKCS#1 v1.5 signature scheme had\n * no parameters.\n *\n * RSASSA-PSS-params  ::=  SEQUENCE  {\n *   hashAlgorithm      [0] HashAlgorithm DEFAULT\n *                             sha1Identifier,\n *   maskGenAlgorithm   [1] MaskGenAlgorithm DEFAULT\n *                             mgf1SHA1Identifier,\n *   saltLength         [2] INTEGER DEFAULT 20,\n *   trailerField       [3] INTEGER DEFAULT 1\n * }\n *\n * HashAlgorithm  ::=  AlgorithmIdentifier\n *\n * MaskGenAlgorithm  ::=  AlgorithmIdentifier\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *   algorithm OBJECT IDENTIFIER,\n *   parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * @param oid The OID specifying the signature algorithm\n * @param obj The ASN.1 structure holding the parameters\n * @param fillDefaults Whether to use return default values where omitted\n * @return signature parameter object\n */\nvar _readSignatureParameters = function(oid, obj, fillDefaults) {\n  var params = {};\n\n  if(oid !== oids['RSASSA-PSS']) {\n    return params;\n  }\n\n  if(fillDefaults) {\n    params = {\n      hash: {\n        algorithmOid: oids['sha1']\n      },\n      mgf: {\n        algorithmOid: oids['mgf1'],\n        hash: {\n          algorithmOid: oids['sha1']\n        }\n      },\n      saltLength: 20\n    };\n  }\n\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, rsassaPssParameterValidator, capture, errors)) {\n    var error = new Error('Cannot read RSASSA-PSS parameter block.');\n    error.errors = errors;\n    throw error;\n  }\n\n  if(capture.hashOid !== undefined) {\n    params.hash = params.hash || {};\n    params.hash.algorithmOid = asn1.derToOid(capture.hashOid);\n  }\n\n  if(capture.maskGenOid !== undefined) {\n    params.mgf = params.mgf || {};\n    params.mgf.algorithmOid = asn1.derToOid(capture.maskGenOid);\n    params.mgf.hash = params.mgf.hash || {};\n    params.mgf.hash.algorithmOid = asn1.derToOid(capture.maskGenHashOid);\n  }\n\n  if(capture.saltLength !== undefined) {\n    params.saltLength = capture.saltLength.charCodeAt(0);\n  }\n\n  return params;\n};\n\n/**\n * Create signature digest for OID.\n *\n * @param options\n *   signatureOid: the OID specifying the signature algorithm.\n *   type: a human readable type for error messages\n * @return a created md instance. throws if unknown oid.\n */\nvar _createSignatureDigest = function(options) {\n  switch(oids[options.signatureOid]) {\n    case 'sha1WithRSAEncryption':\n    // deprecated alias\n    case 'sha1WithRSASignature':\n      return forge.md.sha1.create();\n    case 'md5WithRSAEncryption':\n      return forge.md.md5.create();\n    case 'sha256WithRSAEncryption':\n      return forge.md.sha256.create();\n    case 'sha384WithRSAEncryption':\n      return forge.md.sha384.create();\n    case 'sha512WithRSAEncryption':\n      return forge.md.sha512.create();\n    case 'RSASSA-PSS':\n      return forge.md.sha256.create();\n    default:\n      var error = new Error(\n        'Could not compute ' + options.type + ' digest. ' +\n        'Unknown signature OID.');\n      error.signatureOid = options.signatureOid;\n      throw error;\n  }\n};\n\n/**\n * Verify signature on certificate or CSR.\n *\n * @param options:\n *   certificate the certificate or CSR to verify.\n *   md the signature digest.\n *   signature the signature\n * @return a created md instance. throws if unknown oid.\n */\nvar _verifySignature = function(options) {\n  var cert = options.certificate;\n  var scheme;\n\n  switch(cert.signatureOid) {\n    case oids.sha1WithRSAEncryption:\n    // deprecated alias\n    case oids.sha1WithRSASignature:\n      /* use PKCS#1 v1.5 padding scheme */\n      break;\n    case oids['RSASSA-PSS']:\n      var hash, mgf;\n\n      /* initialize mgf */\n      hash = oids[cert.signatureParameters.mgf.hash.algorithmOid];\n      if(hash === undefined || forge.md[hash] === undefined) {\n        var error = new Error('Unsupported MGF hash function.');\n        error.oid = cert.signatureParameters.mgf.hash.algorithmOid;\n        error.name = hash;\n        throw error;\n      }\n\n      mgf = oids[cert.signatureParameters.mgf.algorithmOid];\n      if(mgf === undefined || forge.mgf[mgf] === undefined) {\n        var error = new Error('Unsupported MGF function.');\n        error.oid = cert.signatureParameters.mgf.algorithmOid;\n        error.name = mgf;\n        throw error;\n      }\n\n      mgf = forge.mgf[mgf].create(forge.md[hash].create());\n\n      /* initialize hash function */\n      hash = oids[cert.signatureParameters.hash.algorithmOid];\n      if(hash === undefined || forge.md[hash] === undefined) {\n        var error = new Error('Unsupported RSASSA-PSS hash function.');\n        error.oid = cert.signatureParameters.hash.algorithmOid;\n        error.name = hash;\n        throw error;\n      }\n\n      scheme = forge.pss.create(\n        forge.md[hash].create(), mgf, cert.signatureParameters.saltLength\n      );\n      break;\n  }\n\n  // verify signature on cert using public key\n  return cert.publicKey.verify(\n    options.md.digest().getBytes(), options.signature, scheme\n  );\n};\n\n/**\n * Converts an X.509 certificate from PEM format.\n *\n * Note: If the certificate is to be verified then compute hash should\n * be set to true. This will scan the TBSCertificate part of the ASN.1\n * object while it is converted so it doesn't need to be converted back\n * to ASN.1-DER-encoding later.\n *\n * @param pem the PEM-formatted certificate.\n * @param computeHash true to compute the hash for verification.\n * @param strict true to be strict when checking ASN.1 value lengths, false to\n *          allow truncated values (default: true).\n *\n * @return the certificate.\n */\npki.certificateFromPem = function(pem, computeHash, strict) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'CERTIFICATE' &&\n    msg.type !== 'X509 CERTIFICATE' &&\n    msg.type !== 'TRUSTED CERTIFICATE') {\n    var error = new Error(\n      'Could not convert certificate from PEM; PEM header type ' +\n      'is not \"CERTIFICATE\", \"X509 CERTIFICATE\", or \"TRUSTED CERTIFICATE\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error(\n      'Could not convert certificate from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body, strict);\n\n  return pki.certificateFromAsn1(obj, computeHash);\n};\n\n/**\n * Converts an X.509 certificate to PEM format.\n *\n * @param cert the certificate.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted certificate.\n */\npki.certificateToPem = function(cert, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'CERTIFICATE',\n    body: asn1.toDer(pki.certificateToAsn1(cert)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts an RSA public key from PEM format.\n *\n * @param pem the PEM-formatted public key.\n *\n * @return the public key.\n */\npki.publicKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PUBLIC KEY' && msg.type !== 'RSA PUBLIC KEY') {\n    var error = new Error('Could not convert public key from PEM; PEM header ' +\n      'type is not \"PUBLIC KEY\" or \"RSA PUBLIC KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert public key from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return pki.publicKeyFromAsn1(obj);\n};\n\n/**\n * Converts an RSA public key to PEM format (using a SubjectPublicKeyInfo).\n *\n * @param key the public key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted public key.\n */\npki.publicKeyToPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'PUBLIC KEY',\n    body: asn1.toDer(pki.publicKeyToAsn1(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts an RSA public key to PEM format (using an RSAPublicKey).\n *\n * @param key the public key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted public key.\n */\npki.publicKeyToRSAPublicKeyPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'RSA PUBLIC KEY',\n    body: asn1.toDer(pki.publicKeyToRSAPublicKey(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Gets a fingerprint for the given public key.\n *\n * @param options the options to use.\n *          [md] the message digest object to use (defaults to forge.md.sha1).\n *          [type] the type of fingerprint, such as 'RSAPublicKey',\n *            'SubjectPublicKeyInfo' (defaults to 'RSAPublicKey').\n *          [encoding] an alternative output encoding, such as 'hex'\n *            (defaults to none, outputs a byte buffer).\n *          [delimiter] the delimiter to use between bytes for 'hex' encoded\n *            output, eg: ':' (defaults to none).\n *\n * @return the fingerprint as a byte buffer or other encoding based on options.\n */\npki.getPublicKeyFingerprint = function(key, options) {\n  options = options || {};\n  var md = options.md || forge.md.sha1.create();\n  var type = options.type || 'RSAPublicKey';\n\n  var bytes;\n  switch(type) {\n    case 'RSAPublicKey':\n      bytes = asn1.toDer(pki.publicKeyToRSAPublicKey(key)).getBytes();\n      break;\n    case 'SubjectPublicKeyInfo':\n      bytes = asn1.toDer(pki.publicKeyToAsn1(key)).getBytes();\n      break;\n    default:\n      throw new Error('Unknown fingerprint type \"' + options.type + '\".');\n  }\n\n  // hash public key bytes\n  md.start();\n  md.update(bytes);\n  var digest = md.digest();\n  if(options.encoding === 'hex') {\n    var hex = digest.toHex();\n    if(options.delimiter) {\n      return hex.match(/.{2}/g).join(options.delimiter);\n    }\n    return hex;\n  } else if(options.encoding === 'binary') {\n    return digest.getBytes();\n  } else if(options.encoding) {\n    throw new Error('Unknown encoding \"' + options.encoding + '\".');\n  }\n  return digest;\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) from PEM format.\n *\n * Note: If the certification request is to be verified then compute hash\n * should be set to true. This will scan the CertificationRequestInfo part of\n * the ASN.1 object while it is converted so it doesn't need to be converted\n * back to ASN.1-DER-encoding later.\n *\n * @param pem the PEM-formatted certificate.\n * @param computeHash true to compute the hash for verification.\n * @param strict true to be strict when checking ASN.1 value lengths, false to\n *          allow truncated values (default: true).\n *\n * @return the certification request (CSR).\n */\npki.certificationRequestFromPem = function(pem, computeHash, strict) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'CERTIFICATE REQUEST') {\n    var error = new Error('Could not convert certification request from PEM; ' +\n      'PEM header type is not \"CERTIFICATE REQUEST\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert certification request from PEM; ' +\n      'PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body, strict);\n\n  return pki.certificationRequestFromAsn1(obj, computeHash);\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) to PEM format.\n *\n * @param csr the certification request.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted certification request.\n */\npki.certificationRequestToPem = function(csr, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'CERTIFICATE REQUEST',\n    body: asn1.toDer(pki.certificationRequestToAsn1(csr)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Creates an empty X.509v3 RSA certificate.\n *\n * @return the certificate.\n */\npki.createCertificate = function() {\n  var cert = {};\n  cert.version = 0x02;\n  cert.serialNumber = '00';\n  cert.signatureOid = null;\n  cert.signature = null;\n  cert.siginfo = {};\n  cert.siginfo.algorithmOid = null;\n  cert.validity = {};\n  cert.validity.notBefore = new Date();\n  cert.validity.notAfter = new Date();\n\n  cert.issuer = {};\n  cert.issuer.getField = function(sn) {\n    return _getAttribute(cert.issuer, sn);\n  };\n  cert.issuer.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.issuer.attributes.push(attr);\n  };\n  cert.issuer.attributes = [];\n  cert.issuer.hash = null;\n\n  cert.subject = {};\n  cert.subject.getField = function(sn) {\n    return _getAttribute(cert.subject, sn);\n  };\n  cert.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.subject.attributes.push(attr);\n  };\n  cert.subject.attributes = [];\n  cert.subject.hash = null;\n\n  cert.extensions = [];\n  cert.publicKey = null;\n  cert.md = null;\n\n  /**\n   * Sets the subject of this certificate.\n   *\n   * @param attrs the array of subject attributes to use.\n   * @param uniqueId an optional a unique ID to use.\n   */\n  cert.setSubject = function(attrs, uniqueId) {\n    // set new attributes, clear hash\n    _fillMissingFields(attrs);\n    cert.subject.attributes = attrs;\n    delete cert.subject.uniqueId;\n    if(uniqueId) {\n      // TODO: support arbitrary bit length ids\n      cert.subject.uniqueId = uniqueId;\n    }\n    cert.subject.hash = null;\n  };\n\n  /**\n   * Sets the issuer of this certificate.\n   *\n   * @param attrs the array of issuer attributes to use.\n   * @param uniqueId an optional a unique ID to use.\n   */\n  cert.setIssuer = function(attrs, uniqueId) {\n    // set new attributes, clear hash\n    _fillMissingFields(attrs);\n    cert.issuer.attributes = attrs;\n    delete cert.issuer.uniqueId;\n    if(uniqueId) {\n      // TODO: support arbitrary bit length ids\n      cert.issuer.uniqueId = uniqueId;\n    }\n    cert.issuer.hash = null;\n  };\n\n  /**\n   * Sets the extensions of this certificate.\n   *\n   * @param exts the array of extensions to use.\n   */\n  cert.setExtensions = function(exts) {\n    for(var i = 0; i < exts.length; ++i) {\n      _fillMissingExtensionFields(exts[i], {cert: cert});\n    }\n    // set new extensions\n    cert.extensions = exts;\n  };\n\n  /**\n   * Gets an extension by its name or id.\n   *\n   * @param options the name to use or an object with:\n   *          name the name to use.\n   *          id the id to use.\n   *\n   * @return the extension or null if not found.\n   */\n  cert.getExtension = function(options) {\n    if(typeof options === 'string') {\n      options = {name: options};\n    }\n\n    var rval = null;\n    var ext;\n    for(var i = 0; rval === null && i < cert.extensions.length; ++i) {\n      ext = cert.extensions[i];\n      if(options.id && ext.id === options.id) {\n        rval = ext;\n      } else if(options.name && ext.name === options.name) {\n        rval = ext;\n      }\n    }\n    return rval;\n  };\n\n  /**\n   * Signs this certificate using the given private key.\n   *\n   * @param key the private key to sign with.\n   * @param md the message digest object to use (defaults to forge.md.sha1).\n   */\n  cert.sign = function(key, md) {\n    // TODO: get signature OID from private key\n    cert.md = md || forge.md.sha1.create();\n    var algorithmOid = oids[cert.md.algorithm + 'WithRSAEncryption'];\n    if(!algorithmOid) {\n      var error = new Error('Could not compute certificate digest. ' +\n        'Unknown message digest algorithm OID.');\n      error.algorithm = cert.md.algorithm;\n      throw error;\n    }\n    cert.signatureOid = cert.siginfo.algorithmOid = algorithmOid;\n\n    // get TBSCertificate, convert to DER\n    cert.tbsCertificate = pki.getTBSCertificate(cert);\n    var bytes = asn1.toDer(cert.tbsCertificate);\n\n    // digest and sign\n    cert.md.update(bytes.getBytes());\n    cert.signature = key.sign(cert.md);\n  };\n\n  /**\n   * Attempts verify the signature on the passed certificate using this\n   * certificate's public key.\n   *\n   * @param child the certificate to verify.\n   *\n   * @return true if verified, false if not.\n   */\n  cert.verify = function(child) {\n    var rval = false;\n\n    if(!cert.issued(child)) {\n      var issuer = child.issuer;\n      var subject = cert.subject;\n      var error = new Error(\n        'The parent certificate did not issue the given child ' +\n        'certificate; the child certificate\\'s issuer does not match the ' +\n        'parent\\'s subject.');\n      error.expectedIssuer = subject.attributes;\n      error.actualIssuer = issuer.attributes;\n      throw error;\n    }\n\n    var md = child.md;\n    if(md === null) {\n      // create digest for OID signature types\n      md = _createSignatureDigest({\n        signatureOid: child.signatureOid,\n        type: 'certificate'\n      });\n\n      // produce DER formatted TBSCertificate and digest it\n      var tbsCertificate = child.tbsCertificate || pki.getTBSCertificate(child);\n      var bytes = asn1.toDer(tbsCertificate);\n      md.update(bytes.getBytes());\n    }\n\n    if(md !== null) {\n      rval = _verifySignature({\n        certificate: cert, md: md, signature: child.signature\n      });\n    }\n\n    return rval;\n  };\n\n  /**\n   * Returns true if this certificate's issuer matches the passed\n   * certificate's subject. Note that no signature check is performed.\n   *\n   * @param parent the certificate to check.\n   *\n   * @return true if this certificate's issuer matches the passed certificate's\n   *         subject.\n   */\n  cert.isIssuer = function(parent) {\n    var rval = false;\n\n    var i = cert.issuer;\n    var s = parent.subject;\n\n    // compare hashes if present\n    if(i.hash && s.hash) {\n      rval = (i.hash === s.hash);\n    } else if(i.attributes.length === s.attributes.length) {\n      // all attributes are the same so issuer matches subject\n      rval = true;\n      var iattr, sattr;\n      for(var n = 0; rval && n < i.attributes.length; ++n) {\n        iattr = i.attributes[n];\n        sattr = s.attributes[n];\n        if(iattr.type !== sattr.type || iattr.value !== sattr.value) {\n          // attribute mismatch\n          rval = false;\n        }\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Returns true if this certificate's subject matches the issuer of the\n   * given certificate). Note that not signature check is performed.\n   *\n   * @param child the certificate to check.\n   *\n   * @return true if this certificate's subject matches the passed\n   *         certificate's issuer.\n   */\n  cert.issued = function(child) {\n    return child.isIssuer(cert);\n  };\n\n  /**\n   * Generates the subjectKeyIdentifier for this certificate as byte buffer.\n   *\n   * @return the subjectKeyIdentifier for this certificate as byte buffer.\n   */\n  cert.generateSubjectKeyIdentifier = function() {\n    /* See: 4.2.1.2 section of the the RFC3280, keyIdentifier is either:\n\n      (1) The keyIdentifier is composed of the 160-bit SHA-1 hash of the\n        value of the BIT STRING subjectPublicKey (excluding the tag,\n        length, and number of unused bits).\n\n      (2) The keyIdentifier is composed of a four bit type field with\n        the value 0100 followed by the least significant 60 bits of the\n        SHA-1 hash of the value of the BIT STRING subjectPublicKey\n        (excluding the tag, length, and number of unused bit string bits).\n    */\n\n    // skipping the tag, length, and number of unused bits is the same\n    // as just using the RSAPublicKey (for RSA keys, which are the\n    // only ones supported)\n    return pki.getPublicKeyFingerprint(cert.publicKey, {type: 'RSAPublicKey'});\n  };\n\n  /**\n   * Verifies the subjectKeyIdentifier extension value for this certificate\n   * against its public key. If no extension is found, false will be\n   * returned.\n   *\n   * @return true if verified, false if not.\n   */\n  cert.verifySubjectKeyIdentifier = function() {\n    var oid = oids['subjectKeyIdentifier'];\n    for(var i = 0; i < cert.extensions.length; ++i) {\n      var ext = cert.extensions[i];\n      if(ext.id === oid) {\n        var ski = cert.generateSubjectKeyIdentifier().getBytes();\n        return (forge.util.hexToBytes(ext.subjectKeyIdentifier) === ski);\n      }\n    }\n    return false;\n  };\n\n  return cert;\n};\n\n/**\n * Converts an X.509v3 RSA certificate from an ASN.1 object.\n *\n * Note: If the certificate is to be verified then compute hash should\n * be set to true. There is currently no implementation for converting\n * a certificate back to ASN.1 so the TBSCertificate part of the ASN.1\n * object needs to be scanned before the cert object is created.\n *\n * @param obj the asn1 representation of an X.509v3 RSA certificate.\n * @param computeHash true to compute the hash for verification.\n *\n * @return the certificate.\n */\npki.certificateFromAsn1 = function(obj, computeHash) {\n  // validate certificate and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, x509CertificateValidator, capture, errors)) {\n    var error = new Error('Cannot read X.509 certificate. ' +\n      'ASN.1 object is not an X509v3 Certificate.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get oid\n  var oid = asn1.derToOid(capture.publicKeyOid);\n  if(oid !== pki.oids.rsaEncryption) {\n    throw new Error('Cannot read public key. OID is not RSA.');\n  }\n\n  // create certificate\n  var cert = pki.createCertificate();\n  cert.version = capture.certVersion ?\n    capture.certVersion.charCodeAt(0) : 0;\n  var serial = forge.util.createBuffer(capture.certSerialNumber);\n  cert.serialNumber = serial.toHex();\n  cert.signatureOid = forge.asn1.derToOid(capture.certSignatureOid);\n  cert.signatureParameters = _readSignatureParameters(\n    cert.signatureOid, capture.certSignatureParams, true);\n  cert.siginfo.algorithmOid = forge.asn1.derToOid(capture.certinfoSignatureOid);\n  cert.siginfo.parameters = _readSignatureParameters(cert.siginfo.algorithmOid,\n    capture.certinfoSignatureParams, false);\n  cert.signature = capture.certSignature;\n\n  var validity = [];\n  if(capture.certValidity1UTCTime !== undefined) {\n    validity.push(asn1.utcTimeToDate(capture.certValidity1UTCTime));\n  }\n  if(capture.certValidity2GeneralizedTime !== undefined) {\n    validity.push(asn1.generalizedTimeToDate(\n      capture.certValidity2GeneralizedTime));\n  }\n  if(capture.certValidity3UTCTime !== undefined) {\n    validity.push(asn1.utcTimeToDate(capture.certValidity3UTCTime));\n  }\n  if(capture.certValidity4GeneralizedTime !== undefined) {\n    validity.push(asn1.generalizedTimeToDate(\n      capture.certValidity4GeneralizedTime));\n  }\n  if(validity.length > 2) {\n    throw new Error('Cannot read notBefore/notAfter validity times; more ' +\n      'than two times were provided in the certificate.');\n  }\n  if(validity.length < 2) {\n    throw new Error('Cannot read notBefore/notAfter validity times; they ' +\n      'were not provided as either UTCTime or GeneralizedTime.');\n  }\n  cert.validity.notBefore = validity[0];\n  cert.validity.notAfter = validity[1];\n\n  // keep TBSCertificate to preserve signature when exporting\n  cert.tbsCertificate = capture.tbsCertificate;\n\n  if(computeHash) {\n    // create digest for OID signature type\n    cert.md = _createSignatureDigest({\n      signatureOid: cert.signatureOid,\n      type: 'certificate'\n    });\n\n    // produce DER formatted TBSCertificate and digest it\n    var bytes = asn1.toDer(cert.tbsCertificate);\n    cert.md.update(bytes.getBytes());\n  }\n\n  // handle issuer, build issuer message digest\n  var imd = forge.md.sha1.create();\n  var ibytes = asn1.toDer(capture.certIssuer);\n  imd.update(ibytes.getBytes());\n  cert.issuer.getField = function(sn) {\n    return _getAttribute(cert.issuer, sn);\n  };\n  cert.issuer.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.issuer.attributes.push(attr);\n  };\n  cert.issuer.attributes = pki.RDNAttributesAsArray(capture.certIssuer);\n  if(capture.certIssuerUniqueId) {\n    cert.issuer.uniqueId = capture.certIssuerUniqueId;\n  }\n  cert.issuer.hash = imd.digest().toHex();\n\n  // handle subject, build subject message digest\n  var smd = forge.md.sha1.create();\n  var sbytes = asn1.toDer(capture.certSubject);\n  smd.update(sbytes.getBytes());\n  cert.subject.getField = function(sn) {\n    return _getAttribute(cert.subject, sn);\n  };\n  cert.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.subject.attributes.push(attr);\n  };\n  cert.subject.attributes = pki.RDNAttributesAsArray(capture.certSubject);\n  if(capture.certSubjectUniqueId) {\n    cert.subject.uniqueId = capture.certSubjectUniqueId;\n  }\n  cert.subject.hash = smd.digest().toHex();\n\n  // handle extensions\n  if(capture.certExtensions) {\n    cert.extensions = pki.certificateExtensionsFromAsn1(capture.certExtensions);\n  } else {\n    cert.extensions = [];\n  }\n\n  // convert RSA public key from ASN.1\n  cert.publicKey = pki.publicKeyFromAsn1(capture.subjectPublicKeyInfo);\n\n  return cert;\n};\n\n/**\n * Converts an ASN.1 extensions object (with extension sequences as its\n * values) into an array of extension objects with types and values.\n *\n * Supported extensions:\n *\n * id-ce-keyUsage OBJECT IDENTIFIER ::=  { id-ce 15 }\n * KeyUsage ::= BIT STRING {\n *   digitalSignature        (0),\n *   nonRepudiation          (1),\n *   keyEncipherment         (2),\n *   dataEncipherment        (3),\n *   keyAgreement            (4),\n *   keyCertSign             (5),\n *   cRLSign                 (6),\n *   encipherOnly            (7),\n *   decipherOnly            (8)\n * }\n *\n * id-ce-basicConstraints OBJECT IDENTIFIER ::=  { id-ce 19 }\n * BasicConstraints ::= SEQUENCE {\n *   cA                      BOOLEAN DEFAULT FALSE,\n *   pathLenConstraint       INTEGER (0..MAX) OPTIONAL\n * }\n *\n * subjectAltName EXTENSION ::= {\n *   SYNTAX GeneralNames\n *   IDENTIFIED BY id-ce-subjectAltName\n * }\n *\n * GeneralNames ::= SEQUENCE SIZE (1..MAX) OF GeneralName\n *\n * GeneralName ::= CHOICE {\n *   otherName      [0] INSTANCE OF OTHER-NAME,\n *   rfc822Name     [1] IA5String,\n *   dNSName        [2] IA5String,\n *   x400Address    [3] ORAddress,\n *   directoryName  [4] Name,\n *   ediPartyName   [5] EDIPartyName,\n *   uniformResourceIdentifier [6] IA5String,\n *   IPAddress      [7] OCTET STRING,\n *   registeredID   [8] OBJECT IDENTIFIER\n * }\n *\n * OTHER-NAME ::= TYPE-IDENTIFIER\n *\n * EDIPartyName ::= SEQUENCE {\n *   nameAssigner [0] DirectoryString {ub-name} OPTIONAL,\n *   partyName    [1] DirectoryString {ub-name}\n * }\n *\n * @param exts the extensions ASN.1 with extension sequences to parse.\n *\n * @return the array.\n */\npki.certificateExtensionsFromAsn1 = function(exts) {\n  var rval = [];\n  for(var i = 0; i < exts.value.length; ++i) {\n    // get extension sequence\n    var extseq = exts.value[i];\n    for(var ei = 0; ei < extseq.value.length; ++ei) {\n      rval.push(pki.certificateExtensionFromAsn1(extseq.value[ei]));\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Parses a single certificate extension from ASN.1.\n *\n * @param ext the extension in ASN.1 format.\n *\n * @return the parsed extension as an object.\n */\npki.certificateExtensionFromAsn1 = function(ext) {\n  // an extension has:\n  // [0] extnID      OBJECT IDENTIFIER\n  // [1] critical    BOOLEAN DEFAULT FALSE\n  // [2] extnValue   OCTET STRING\n  var e = {};\n  e.id = asn1.derToOid(ext.value[0].value);\n  e.critical = false;\n  if(ext.value[1].type === asn1.Type.BOOLEAN) {\n    e.critical = (ext.value[1].value.charCodeAt(0) !== 0x00);\n    e.value = ext.value[2].value;\n  } else {\n    e.value = ext.value[1].value;\n  }\n  // if the oid is known, get its name\n  if(e.id in oids) {\n    e.name = oids[e.id];\n\n    // handle key usage\n    if(e.name === 'keyUsage') {\n      // get value as BIT STRING\n      var ev = asn1.fromDer(e.value);\n      var b2 = 0x00;\n      var b3 = 0x00;\n      if(ev.value.length > 1) {\n        // skip first byte, just indicates unused bits which\n        // will be padded with 0s anyway\n        // get bytes with flag bits\n        b2 = ev.value.charCodeAt(1);\n        b3 = ev.value.length > 2 ? ev.value.charCodeAt(2) : 0;\n      }\n      // set flags\n      e.digitalSignature = (b2 & 0x80) === 0x80;\n      e.nonRepudiation = (b2 & 0x40) === 0x40;\n      e.keyEncipherment = (b2 & 0x20) === 0x20;\n      e.dataEncipherment = (b2 & 0x10) === 0x10;\n      e.keyAgreement = (b2 & 0x08) === 0x08;\n      e.keyCertSign = (b2 & 0x04) === 0x04;\n      e.cRLSign = (b2 & 0x02) === 0x02;\n      e.encipherOnly = (b2 & 0x01) === 0x01;\n      e.decipherOnly = (b3 & 0x80) === 0x80;\n    } else if(e.name === 'basicConstraints') {\n      // handle basic constraints\n      // get value as SEQUENCE\n      var ev = asn1.fromDer(e.value);\n      // get cA BOOLEAN flag (defaults to false)\n      if(ev.value.length > 0 && ev.value[0].type === asn1.Type.BOOLEAN) {\n        e.cA = (ev.value[0].value.charCodeAt(0) !== 0x00);\n      } else {\n        e.cA = false;\n      }\n      // get path length constraint\n      var value = null;\n      if(ev.value.length > 0 && ev.value[0].type === asn1.Type.INTEGER) {\n        value = ev.value[0].value;\n      } else if(ev.value.length > 1) {\n        value = ev.value[1].value;\n      }\n      if(value !== null) {\n        e.pathLenConstraint = asn1.derToInteger(value);\n      }\n    } else if(e.name === 'extKeyUsage') {\n      // handle extKeyUsage\n      // value is a SEQUENCE of OIDs\n      var ev = asn1.fromDer(e.value);\n      for(var vi = 0; vi < ev.value.length; ++vi) {\n        var oid = asn1.derToOid(ev.value[vi].value);\n        if(oid in oids) {\n          e[oids[oid]] = true;\n        } else {\n          e[oid] = true;\n        }\n      }\n    } else if(e.name === 'nsCertType') {\n      // handle nsCertType\n      // get value as BIT STRING\n      var ev = asn1.fromDer(e.value);\n      var b2 = 0x00;\n      if(ev.value.length > 1) {\n        // skip first byte, just indicates unused bits which\n        // will be padded with 0s anyway\n        // get bytes with flag bits\n        b2 = ev.value.charCodeAt(1);\n      }\n      // set flags\n      e.client = (b2 & 0x80) === 0x80;\n      e.server = (b2 & 0x40) === 0x40;\n      e.email = (b2 & 0x20) === 0x20;\n      e.objsign = (b2 & 0x10) === 0x10;\n      e.reserved = (b2 & 0x08) === 0x08;\n      e.sslCA = (b2 & 0x04) === 0x04;\n      e.emailCA = (b2 & 0x02) === 0x02;\n      e.objCA = (b2 & 0x01) === 0x01;\n    } else if(\n      e.name === 'subjectAltName' ||\n      e.name === 'issuerAltName') {\n      // handle subjectAltName/issuerAltName\n      e.altNames = [];\n\n      // ev is a SYNTAX SEQUENCE\n      var gn;\n      var ev = asn1.fromDer(e.value);\n      for(var n = 0; n < ev.value.length; ++n) {\n        // get GeneralName\n        gn = ev.value[n];\n\n        var altName = {\n          type: gn.type,\n          value: gn.value\n        };\n        e.altNames.push(altName);\n\n        // Note: Support for types 1,2,6,7,8\n        switch(gn.type) {\n          // rfc822Name\n          case 1:\n          // dNSName\n          case 2:\n          // uniformResourceIdentifier (URI)\n          case 6:\n            break;\n          // IPAddress\n          case 7:\n            // convert to IPv4/IPv6 string representation\n            altName.ip = forge.util.bytesToIP(gn.value);\n            break;\n          // registeredID\n          case 8:\n            altName.oid = asn1.derToOid(gn.value);\n            break;\n          default:\n            // unsupported\n        }\n      }\n    } else if(e.name === 'subjectKeyIdentifier') {\n      // value is an OCTETSTRING w/the hash of the key-type specific\n      // public key structure (eg: RSAPublicKey)\n      var ev = asn1.fromDer(e.value);\n      e.subjectKeyIdentifier = forge.util.bytesToHex(ev.value);\n    }\n  }\n  return e;\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) from an ASN.1 object.\n *\n * Note: If the certification request is to be verified then compute hash\n * should be set to true. There is currently no implementation for converting\n * a certificate back to ASN.1 so the CertificationRequestInfo part of the\n * ASN.1 object needs to be scanned before the csr object is created.\n *\n * @param obj the asn1 representation of a PKCS#10 certification request (CSR).\n * @param computeHash true to compute the hash for verification.\n *\n * @return the certification request (CSR).\n */\npki.certificationRequestFromAsn1 = function(obj, computeHash) {\n  // validate certification request and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, certificationRequestValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#10 certificate request. ' +\n      'ASN.1 object is not a PKCS#10 CertificationRequest.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get oid\n  var oid = asn1.derToOid(capture.publicKeyOid);\n  if(oid !== pki.oids.rsaEncryption) {\n    throw new Error('Cannot read public key. OID is not RSA.');\n  }\n\n  // create certification request\n  var csr = pki.createCertificationRequest();\n  csr.version = capture.csrVersion ? capture.csrVersion.charCodeAt(0) : 0;\n  csr.signatureOid = forge.asn1.derToOid(capture.csrSignatureOid);\n  csr.signatureParameters = _readSignatureParameters(\n    csr.signatureOid, capture.csrSignatureParams, true);\n  csr.siginfo.algorithmOid = forge.asn1.derToOid(capture.csrSignatureOid);\n  csr.siginfo.parameters = _readSignatureParameters(\n    csr.siginfo.algorithmOid, capture.csrSignatureParams, false);\n  csr.signature = capture.csrSignature;\n\n  // keep CertificationRequestInfo to preserve signature when exporting\n  csr.certificationRequestInfo = capture.certificationRequestInfo;\n\n  if(computeHash) {\n    // create digest for OID signature type\n    csr.md = _createSignatureDigest({\n      signatureOid: csr.signatureOid,\n      type: 'certification request'\n    });\n\n    // produce DER formatted CertificationRequestInfo and digest it\n    var bytes = asn1.toDer(csr.certificationRequestInfo);\n    csr.md.update(bytes.getBytes());\n  }\n\n  // handle subject, build subject message digest\n  var smd = forge.md.sha1.create();\n  csr.subject.getField = function(sn) {\n    return _getAttribute(csr.subject, sn);\n  };\n  csr.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    csr.subject.attributes.push(attr);\n  };\n  csr.subject.attributes = pki.RDNAttributesAsArray(\n    capture.certificationRequestInfoSubject, smd);\n  csr.subject.hash = smd.digest().toHex();\n\n  // convert RSA public key from ASN.1\n  csr.publicKey = pki.publicKeyFromAsn1(capture.subjectPublicKeyInfo);\n\n  // convert attributes from ASN.1\n  csr.getAttribute = function(sn) {\n    return _getAttribute(csr, sn);\n  };\n  csr.addAttribute = function(attr) {\n    _fillMissingFields([attr]);\n    csr.attributes.push(attr);\n  };\n  csr.attributes = pki.CRIAttributesAsArray(\n    capture.certificationRequestInfoAttributes || []);\n\n  return csr;\n};\n\n/**\n * Creates an empty certification request (a CSR or certificate signing\n * request). Once created, its public key and attributes can be set and then\n * it can be signed.\n *\n * @return the empty certification request.\n */\npki.createCertificationRequest = function() {\n  var csr = {};\n  csr.version = 0x00;\n  csr.signatureOid = null;\n  csr.signature = null;\n  csr.siginfo = {};\n  csr.siginfo.algorithmOid = null;\n\n  csr.subject = {};\n  csr.subject.getField = function(sn) {\n    return _getAttribute(csr.subject, sn);\n  };\n  csr.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    csr.subject.attributes.push(attr);\n  };\n  csr.subject.attributes = [];\n  csr.subject.hash = null;\n\n  csr.publicKey = null;\n  csr.attributes = [];\n  csr.getAttribute = function(sn) {\n    return _getAttribute(csr, sn);\n  };\n  csr.addAttribute = function(attr) {\n    _fillMissingFields([attr]);\n    csr.attributes.push(attr);\n  };\n  csr.md = null;\n\n  /**\n   * Sets the subject of this certification request.\n   *\n   * @param attrs the array of subject attributes to use.\n   */\n  csr.setSubject = function(attrs) {\n    // set new attributes\n    _fillMissingFields(attrs);\n    csr.subject.attributes = attrs;\n    csr.subject.hash = null;\n  };\n\n  /**\n   * Sets the attributes of this certification request.\n   *\n   * @param attrs the array of attributes to use.\n   */\n  csr.setAttributes = function(attrs) {\n    // set new attributes\n    _fillMissingFields(attrs);\n    csr.attributes = attrs;\n  };\n\n  /**\n   * Signs this certification request using the given private key.\n   *\n   * @param key the private key to sign with.\n   * @param md the message digest object to use (defaults to forge.md.sha1).\n   */\n  csr.sign = function(key, md) {\n    // TODO: get signature OID from private key\n    csr.md = md || forge.md.sha1.create();\n    var algorithmOid = oids[csr.md.algorithm + 'WithRSAEncryption'];\n    if(!algorithmOid) {\n      var error = new Error('Could not compute certification request digest. ' +\n        'Unknown message digest algorithm OID.');\n      error.algorithm = csr.md.algorithm;\n      throw error;\n    }\n    csr.signatureOid = csr.siginfo.algorithmOid = algorithmOid;\n\n    // get CertificationRequestInfo, convert to DER\n    csr.certificationRequestInfo = pki.getCertificationRequestInfo(csr);\n    var bytes = asn1.toDer(csr.certificationRequestInfo);\n\n    // digest and sign\n    csr.md.update(bytes.getBytes());\n    csr.signature = key.sign(csr.md);\n  };\n\n  /**\n   * Attempts verify the signature on the passed certification request using\n   * its public key.\n   *\n   * A CSR that has been exported to a file in PEM format can be verified using\n   * OpenSSL using this command:\n   *\n   * openssl req -in <the-csr-pem-file> -verify -noout -text\n   *\n   * @return true if verified, false if not.\n   */\n  csr.verify = function() {\n    var rval = false;\n\n    var md = csr.md;\n    if(md === null) {\n      md = _createSignatureDigest({\n        signatureOid: csr.signatureOid,\n        type: 'certification request'\n      });\n\n      // produce DER formatted CertificationRequestInfo and digest it\n      var cri = csr.certificationRequestInfo ||\n        pki.getCertificationRequestInfo(csr);\n      var bytes = asn1.toDer(cri);\n      md.update(bytes.getBytes());\n    }\n\n    if(md !== null) {\n      rval = _verifySignature({\n        certificate: csr, md: md, signature: csr.signature\n      });\n    }\n\n    return rval;\n  };\n\n  return csr;\n};\n\n/**\n * Converts an X.509 subject or issuer to an ASN.1 RDNSequence.\n *\n * @param obj the subject or issuer (distinguished name).\n *\n * @return the ASN.1 RDNSequence.\n */\nfunction _dnToAsn1(obj) {\n  // create an empty RDNSequence\n  var rval = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n  // iterate over attributes\n  var attr, set;\n  var attrs = obj.attributes;\n  for(var i = 0; i < attrs.length; ++i) {\n    attr = attrs[i];\n    var value = attr.value;\n\n    // reuse tag class for attribute value if available\n    var valueTagClass = asn1.Type.PRINTABLESTRING;\n    if('valueTagClass' in attr) {\n      valueTagClass = attr.valueTagClass;\n\n      if(valueTagClass === asn1.Type.UTF8) {\n        value = forge.util.encodeUtf8(value);\n      }\n      // FIXME: handle more encodings\n    }\n\n    // create a RelativeDistinguishedName set\n    // each value in the set is an AttributeTypeAndValue first\n    // containing the type (an OID) and second the value\n    set = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // AttributeType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(attr.type).getBytes()),\n        // AttributeValue\n        asn1.create(asn1.Class.UNIVERSAL, valueTagClass, false, value)\n      ])\n    ]);\n    rval.value.push(set);\n  }\n\n  return rval;\n}\n\n/**\n * Gets all printable attributes (typically of an issuer or subject) in a\n * simplified JSON format for display.\n *\n * @param attrs the attributes.\n *\n * @return the JSON for display.\n */\nfunction _getAttributesAsJson(attrs) {\n  var rval = {};\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    if(attr.shortName && (\n      attr.valueTagClass === asn1.Type.UTF8 ||\n      attr.valueTagClass === asn1.Type.PRINTABLESTRING ||\n      attr.valueTagClass === asn1.Type.IA5STRING)) {\n      var value = attr.value;\n      if(attr.valueTagClass === asn1.Type.UTF8) {\n        value = forge.util.encodeUtf8(attr.value);\n      }\n      if(!(attr.shortName in rval)) {\n        rval[attr.shortName] = value;\n      } else if(forge.util.isArray(rval[attr.shortName])) {\n        rval[attr.shortName].push(value);\n      } else {\n        rval[attr.shortName] = [rval[attr.shortName], value];\n      }\n    }\n  }\n  return rval;\n}\n\n/**\n * Fills in missing fields in attributes.\n *\n * @param attrs the attributes to fill missing fields in.\n */\nfunction _fillMissingFields(attrs) {\n  var attr;\n  for(var i = 0; i < attrs.length; ++i) {\n    attr = attrs[i];\n\n    // populate missing name\n    if(typeof attr.name === 'undefined') {\n      if(attr.type && attr.type in pki.oids) {\n        attr.name = pki.oids[attr.type];\n      } else if(attr.shortName && attr.shortName in _shortNames) {\n        attr.name = pki.oids[_shortNames[attr.shortName]];\n      }\n    }\n\n    // populate missing type (OID)\n    if(typeof attr.type === 'undefined') {\n      if(attr.name && attr.name in pki.oids) {\n        attr.type = pki.oids[attr.name];\n      } else {\n        var error = new Error('Attribute type not specified.');\n        error.attribute = attr;\n        throw error;\n      }\n    }\n\n    // populate missing shortname\n    if(typeof attr.shortName === 'undefined') {\n      if(attr.name && attr.name in _shortNames) {\n        attr.shortName = _shortNames[attr.name];\n      }\n    }\n\n    // convert extensions to value\n    if(attr.type === oids.extensionRequest) {\n      attr.valueConstructed = true;\n      attr.valueTagClass = asn1.Type.SEQUENCE;\n      if(!attr.value && attr.extensions) {\n        attr.value = [];\n        for(var ei = 0; ei < attr.extensions.length; ++ei) {\n          attr.value.push(pki.certificateExtensionToAsn1(\n            _fillMissingExtensionFields(attr.extensions[ei])));\n        }\n      }\n    }\n\n    if(typeof attr.value === 'undefined') {\n      var error = new Error('Attribute value not specified.');\n      error.attribute = attr;\n      throw error;\n    }\n  }\n}\n\n/**\n * Fills in missing fields in certificate extensions.\n *\n * @param e the extension.\n * @param [options] the options to use.\n *          [cert] the certificate the extensions are for.\n *\n * @return the extension.\n */\nfunction _fillMissingExtensionFields(e, options) {\n  options = options || {};\n\n  // populate missing name\n  if(typeof e.name === 'undefined') {\n    if(e.id && e.id in pki.oids) {\n      e.name = pki.oids[e.id];\n    }\n  }\n\n  // populate missing id\n  if(typeof e.id === 'undefined') {\n    if(e.name && e.name in pki.oids) {\n      e.id = pki.oids[e.name];\n    } else {\n      var error = new Error('Extension ID not specified.');\n      error.extension = e;\n      throw error;\n    }\n  }\n\n  if(typeof e.value !== 'undefined') {\n    return e;\n  }\n\n  // handle missing value:\n\n  // value is a BIT STRING\n  if(e.name === 'keyUsage') {\n    // build flags\n    var unused = 0;\n    var b2 = 0x00;\n    var b3 = 0x00;\n    if(e.digitalSignature) {\n      b2 |= 0x80;\n      unused = 7;\n    }\n    if(e.nonRepudiation) {\n      b2 |= 0x40;\n      unused = 6;\n    }\n    if(e.keyEncipherment) {\n      b2 |= 0x20;\n      unused = 5;\n    }\n    if(e.dataEncipherment) {\n      b2 |= 0x10;\n      unused = 4;\n    }\n    if(e.keyAgreement) {\n      b2 |= 0x08;\n      unused = 3;\n    }\n    if(e.keyCertSign) {\n      b2 |= 0x04;\n      unused = 2;\n    }\n    if(e.cRLSign) {\n      b2 |= 0x02;\n      unused = 1;\n    }\n    if(e.encipherOnly) {\n      b2 |= 0x01;\n      unused = 0;\n    }\n    if(e.decipherOnly) {\n      b3 |= 0x80;\n      unused = 7;\n    }\n\n    // create bit string\n    var value = String.fromCharCode(unused);\n    if(b3 !== 0) {\n      value += String.fromCharCode(b2) + String.fromCharCode(b3);\n    } else if(b2 !== 0) {\n      value += String.fromCharCode(b2);\n    }\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, value);\n  } else if(e.name === 'basicConstraints') {\n    // basicConstraints is a SEQUENCE\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    // cA BOOLEAN flag defaults to false\n    if(e.cA) {\n      e.value.value.push(asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.BOOLEAN, false,\n        String.fromCharCode(0xFF)));\n    }\n    if('pathLenConstraint' in e) {\n      e.value.value.push(asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(e.pathLenConstraint).getBytes()));\n    }\n  } else if(e.name === 'extKeyUsage') {\n    // extKeyUsage is a SEQUENCE of OIDs\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n    for(var key in e) {\n      if(e[key] !== true) {\n        continue;\n      }\n      // key is name in OID map\n      if(key in oids) {\n        seq.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID,\n          false, asn1.oidToDer(oids[key]).getBytes()));\n      } else if(key.indexOf('.') !== -1) {\n        // assume key is an OID\n        seq.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID,\n          false, asn1.oidToDer(key).getBytes()));\n      }\n    }\n  } else if(e.name === 'nsCertType') {\n    // nsCertType is a BIT STRING\n    // build flags\n    var unused = 0;\n    var b2 = 0x00;\n\n    if(e.client) {\n      b2 |= 0x80;\n      unused = 7;\n    }\n    if(e.server) {\n      b2 |= 0x40;\n      unused = 6;\n    }\n    if(e.email) {\n      b2 |= 0x20;\n      unused = 5;\n    }\n    if(e.objsign) {\n      b2 |= 0x10;\n      unused = 4;\n    }\n    if(e.reserved) {\n      b2 |= 0x08;\n      unused = 3;\n    }\n    if(e.sslCA) {\n      b2 |= 0x04;\n      unused = 2;\n    }\n    if(e.emailCA) {\n      b2 |= 0x02;\n      unused = 1;\n    }\n    if(e.objCA) {\n      b2 |= 0x01;\n      unused = 0;\n    }\n\n    // create bit string\n    var value = String.fromCharCode(unused);\n    if(b2 !== 0) {\n      value += String.fromCharCode(b2);\n    }\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, value);\n  } else if(e.name === 'subjectAltName' || e.name === 'issuerAltName') {\n    // SYNTAX SEQUENCE\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n    var altName;\n    for(var n = 0; n < e.altNames.length; ++n) {\n      altName = e.altNames[n];\n      var value = altName.value;\n      // handle IP\n      if(altName.type === 7 && altName.ip) {\n        value = forge.util.bytesFromIP(altName.ip);\n        if(value === null) {\n          var error = new Error(\n            'Extension \"ip\" value is not a valid IPv4 or IPv6 address.');\n          error.extension = e;\n          throw error;\n        }\n      } else if(altName.type === 8) {\n        // handle OID\n        if(altName.oid) {\n          value = asn1.oidToDer(asn1.oidToDer(altName.oid));\n        } else {\n          // deprecated ... convert value to OID\n          value = asn1.oidToDer(value);\n        }\n      }\n      e.value.value.push(asn1.create(\n        asn1.Class.CONTEXT_SPECIFIC, altName.type, false,\n        value));\n    }\n  } else if(e.name === 'nsComment' && options.cert) {\n    // sanity check value is ASCII (req'd) and not too big\n    if(!(/^[\\x00-\\x7F]*$/.test(e.comment)) ||\n      (e.comment.length < 1) || (e.comment.length > 128)) {\n      throw new Error('Invalid \"nsComment\" content.');\n    }\n    // IA5STRING opaque comment\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.IA5STRING, false, e.comment);\n  } else if(e.name === 'subjectKeyIdentifier' && options.cert) {\n    var ski = options.cert.generateSubjectKeyIdentifier();\n    e.subjectKeyIdentifier = ski.toHex();\n    // OCTETSTRING w/digest\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, ski.getBytes());\n  } else if(e.name === 'authorityKeyIdentifier' && options.cert) {\n    // SYNTAX SEQUENCE\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n\n    if(e.keyIdentifier) {\n      var keyIdentifier = (e.keyIdentifier === true ?\n        options.cert.generateSubjectKeyIdentifier().getBytes() :\n        e.keyIdentifier);\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, false, keyIdentifier));\n    }\n\n    if(e.authorityCertIssuer) {\n      var authorityCertIssuer = [\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 4, true, [\n          _dnToAsn1(e.authorityCertIssuer === true ?\n            options.cert.issuer : e.authorityCertIssuer)\n        ])\n      ];\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, authorityCertIssuer));\n    }\n\n    if(e.serialNumber) {\n      var serialNumber = forge.util.hexToBytes(e.serialNumber === true ?\n        options.cert.serialNumber : e.serialNumber);\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, false, serialNumber));\n    }\n  } else if(e.name === 'cRLDistributionPoints') {\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n\n    // Create sub SEQUENCE of DistributionPointName\n    var subSeq = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n    // Create fullName CHOICE\n    var fullNameGeneralNames = asn1.create(\n      asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n    var altName;\n    for(var n = 0; n < e.altNames.length; ++n) {\n      altName = e.altNames[n];\n      var value = altName.value;\n      // handle IP\n      if(altName.type === 7 && altName.ip) {\n        value = forge.util.bytesFromIP(altName.ip);\n        if(value === null) {\n          var error = new Error(\n            'Extension \"ip\" value is not a valid IPv4 or IPv6 address.');\n          error.extension = e;\n          throw error;\n        }\n      } else if(altName.type === 8) {\n        // handle OID\n        if(altName.oid) {\n          value = asn1.oidToDer(asn1.oidToDer(altName.oid));\n        } else {\n          // deprecated ... convert value to OID\n          value = asn1.oidToDer(value);\n        }\n      }\n      fullNameGeneralNames.value.push(asn1.create(\n        asn1.Class.CONTEXT_SPECIFIC, altName.type, false,\n        value));\n    }\n\n    // Add to the parent SEQUENCE\n    subSeq.value.push(asn1.create(\n      asn1.Class.CONTEXT_SPECIFIC, 0, true, [fullNameGeneralNames]));\n    seq.push(subSeq);\n  }\n\n  // ensure value has been defined by now\n  if(typeof e.value === 'undefined') {\n    var error = new Error('Extension value not specified.');\n    error.extension = e;\n    throw error;\n  }\n\n  return e;\n}\n\n/**\n * Convert signature parameters object to ASN.1\n *\n * @param {String} oid Signature algorithm OID\n * @param params The signature parametrs object\n * @return ASN.1 object representing signature parameters\n */\nfunction _signatureParametersToAsn1(oid, params) {\n  switch(oid) {\n    case oids['RSASSA-PSS']:\n      var parts = [];\n\n      if(params.hash.algorithmOid !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(params.hash.algorithmOid).getBytes()),\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n          ])\n        ]));\n      }\n\n      if(params.mgf.algorithmOid !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(params.mgf.algorithmOid).getBytes()),\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n              asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n                asn1.oidToDer(params.mgf.hash.algorithmOid).getBytes()),\n              asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n            ])\n          ])\n        ]));\n      }\n\n      if(params.saltLength !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n            asn1.integerToDer(params.saltLength).getBytes())\n        ]));\n      }\n\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, parts);\n\n    default:\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '');\n  }\n}\n\n/**\n * Converts a certification request's attributes to an ASN.1 set of\n * CRIAttributes.\n *\n * @param csr certification request.\n *\n * @return the ASN.1 set of CRIAttributes.\n */\nfunction _CRIAttributesToAsn1(csr) {\n  // create an empty context-specific container\n  var rval = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n\n  // no attributes, return empty container\n  if(csr.attributes.length === 0) {\n    return rval;\n  }\n\n  // each attribute has a sequence with a type and a set of values\n  var attrs = csr.attributes;\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    var value = attr.value;\n\n    // reuse tag class for attribute value if available\n    var valueTagClass = asn1.Type.UTF8;\n    if('valueTagClass' in attr) {\n      valueTagClass = attr.valueTagClass;\n    }\n    if(valueTagClass === asn1.Type.UTF8) {\n      value = forge.util.encodeUtf8(value);\n    }\n    var valueConstructed = false;\n    if('valueConstructed' in attr) {\n      valueConstructed = attr.valueConstructed;\n    }\n    // FIXME: handle more encodings\n\n    // create a RelativeDistinguishedName set\n    // each value in the set is an AttributeTypeAndValue first\n    // containing the type (an OID) and second the value\n    var seq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // AttributeType\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(attr.type).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n        // AttributeValue\n        asn1.create(\n          asn1.Class.UNIVERSAL, valueTagClass, valueConstructed, value)\n      ])\n    ]);\n    rval.value.push(seq);\n  }\n\n  return rval;\n}\n\nvar jan_1_1950 = new Date('1950-01-01T00:00:00Z');\nvar jan_1_2050 = new Date('2050-01-01T00:00:00Z');\n\n/**\n * Converts a Date object to ASN.1\n * Handles the different format before and after 1st January 2050\n *\n * @param date date object.\n *\n * @return the ASN.1 object representing the date.\n */\nfunction _dateToAsn1(date) {\n  if(date >= jan_1_1950 && date < jan_1_2050) {\n    return asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.UTCTIME, false,\n      asn1.dateToUtcTime(date));\n  } else {\n    return asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.GENERALIZEDTIME, false,\n      asn1.dateToGeneralizedTime(date));\n  }\n}\n\n/**\n * Gets the ASN.1 TBSCertificate part of an X.509v3 certificate.\n *\n * @param cert the certificate.\n *\n * @return the asn1 TBSCertificate.\n */\npki.getTBSCertificate = function(cert) {\n  // TBSCertificate\n  var notBefore = _dateToAsn1(cert.validity.notBefore);\n  var notAfter = _dateToAsn1(cert.validity.notAfter);\n  var tbs = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n      // integer\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(cert.version).getBytes())\n    ]),\n    // serialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      forge.util.hexToBytes(cert.serialNumber)),\n    // signature\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(cert.siginfo.algorithmOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(\n        cert.siginfo.algorithmOid, cert.siginfo.parameters)\n    ]),\n    // issuer\n    _dnToAsn1(cert.issuer),\n    // validity\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      notBefore,\n      notAfter\n    ]),\n    // subject\n    _dnToAsn1(cert.subject),\n    // SubjectPublicKeyInfo\n    pki.publicKeyToAsn1(cert.publicKey)\n  ]);\n\n  if(cert.issuer.uniqueId) {\n    // issuerUniqueID (optional)\n    tbs.value.push(\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n          // TODO: support arbitrary bit length ids\n          String.fromCharCode(0x00) +\n          cert.issuer.uniqueId\n        )\n      ])\n    );\n  }\n  if(cert.subject.uniqueId) {\n    // subjectUniqueID (optional)\n    tbs.value.push(\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n          // TODO: support arbitrary bit length ids\n          String.fromCharCode(0x00) +\n          cert.subject.uniqueId\n        )\n      ])\n    );\n  }\n\n  if(cert.extensions.length > 0) {\n    // extensions (optional)\n    tbs.value.push(pki.certificateExtensionsToAsn1(cert.extensions));\n  }\n\n  return tbs;\n};\n\n/**\n * Gets the ASN.1 CertificationRequestInfo part of a\n * PKCS#10 CertificationRequest.\n *\n * @param csr the certification request.\n *\n * @return the asn1 CertificationRequestInfo.\n */\npki.getCertificationRequestInfo = function(csr) {\n  // CertificationRequestInfo\n  var cri = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(csr.version).getBytes()),\n    // subject\n    _dnToAsn1(csr.subject),\n    // SubjectPublicKeyInfo\n    pki.publicKeyToAsn1(csr.publicKey),\n    // attributes\n    _CRIAttributesToAsn1(csr)\n  ]);\n\n  return cri;\n};\n\n/**\n * Converts a DistinguishedName (subject or issuer) to an ASN.1 object.\n *\n * @param dn the DistinguishedName.\n *\n * @return the asn1 representation of a DistinguishedName.\n */\npki.distinguishedNameToAsn1 = function(dn) {\n  return _dnToAsn1(dn);\n};\n\n/**\n * Converts an X.509v3 RSA certificate to an ASN.1 object.\n *\n * @param cert the certificate.\n *\n * @return the asn1 representation of an X.509v3 RSA certificate.\n */\npki.certificateToAsn1 = function(cert) {\n  // prefer cached TBSCertificate over generating one\n  var tbsCertificate = cert.tbsCertificate || pki.getTBSCertificate(cert);\n\n  // Certificate\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // TBSCertificate\n    tbsCertificate,\n    // AlgorithmIdentifier (signature algorithm)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(cert.signatureOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(cert.signatureOid, cert.signatureParameters)\n    ]),\n    // SignatureValue\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n      String.fromCharCode(0x00) + cert.signature)\n  ]);\n};\n\n/**\n * Converts X.509v3 certificate extensions to ASN.1.\n *\n * @param exts the extensions to convert.\n *\n * @return the extensions in ASN.1 format.\n */\npki.certificateExtensionsToAsn1 = function(exts) {\n  // create top-level extension container\n  var rval = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 3, true, []);\n\n  // create extension sequence (stores a sequence for each extension)\n  var seq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  rval.value.push(seq);\n\n  for(var i = 0; i < exts.length; ++i) {\n    seq.value.push(pki.certificateExtensionToAsn1(exts[i]));\n  }\n\n  return rval;\n};\n\n/**\n * Converts a single certificate extension to ASN.1.\n *\n * @param ext the extension to convert.\n *\n * @return the extension in ASN.1 format.\n */\npki.certificateExtensionToAsn1 = function(ext) {\n  // create a sequence for each extension\n  var extseq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n  // extnID (OID)\n  extseq.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n    asn1.oidToDer(ext.id).getBytes()));\n\n  // critical defaults to false\n  if(ext.critical) {\n    // critical BOOLEAN DEFAULT FALSE\n    extseq.value.push(asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BOOLEAN, false,\n      String.fromCharCode(0xFF)));\n  }\n\n  var value = ext.value;\n  if(typeof ext.value !== 'string') {\n    // value is asn.1\n    value = asn1.toDer(value).getBytes();\n  }\n\n  // extnValue (OCTET STRING)\n  extseq.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, value));\n\n  return extseq;\n};\n\n/**\n * Converts a PKCS#10 certification request to an ASN.1 object.\n *\n * @param csr the certification request.\n *\n * @return the asn1 representation of a certification request.\n */\npki.certificationRequestToAsn1 = function(csr) {\n  // prefer cached CertificationRequestInfo over generating one\n  var cri = csr.certificationRequestInfo ||\n    pki.getCertificationRequestInfo(csr);\n\n  // Certificate\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // CertificationRequestInfo\n    cri,\n    // AlgorithmIdentifier (signature algorithm)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(csr.signatureOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(csr.signatureOid, csr.signatureParameters)\n    ]),\n    // signature\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n      String.fromCharCode(0x00) + csr.signature)\n  ]);\n};\n\n/**\n * Creates a CA store.\n *\n * @param certs an optional array of certificate objects or PEM-formatted\n *          certificate strings to add to the CA store.\n *\n * @return the CA store.\n */\npki.createCaStore = function(certs) {\n  // create CA store\n  var caStore = {\n    // stored certificates\n    certs: {}\n  };\n\n  /**\n   * Gets the certificate that issued the passed certificate or its\n   * 'parent'.\n   *\n   * @param cert the certificate to get the parent for.\n   *\n   * @return the parent certificate or null if none was found.\n   */\n  caStore.getIssuer = function(cert) {\n    var rval = getBySubject(cert.issuer);\n\n    // see if there are multiple matches\n    /*if(forge.util.isArray(rval)) {\n      // TODO: resolve multiple matches by checking\n      // authorityKey/subjectKey/issuerUniqueID/other identifiers, etc.\n      // FIXME: or alternatively do authority key mapping\n      // if possible (X.509v1 certs can't work?)\n      throw new Error('Resolving multiple issuer matches not implemented yet.');\n    }*/\n\n    return rval;\n  };\n\n  /**\n   * Adds a trusted certificate to the store.\n   *\n   * @param cert the certificate to add as a trusted certificate (either a\n   *          pki.certificate object or a PEM-formatted certificate).\n   */\n  caStore.addCertificate = function(cert) {\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n\n    ensureSubjectHasHash(cert.subject);\n\n    if(!caStore.hasCertificate(cert)) { // avoid duplicate certificates in store\n      if(cert.subject.hash in caStore.certs) {\n        // subject hash already exists, append to array\n        var tmp = caStore.certs[cert.subject.hash];\n        if(!forge.util.isArray(tmp)) {\n          tmp = [tmp];\n        }\n        tmp.push(cert);\n        caStore.certs[cert.subject.hash] = tmp;\n      } else {\n        caStore.certs[cert.subject.hash] = cert;\n      }\n    }\n  };\n\n  /**\n   * Checks to see if the given certificate is in the store.\n   *\n   * @param cert the certificate to check (either a pki.certificate or a\n   *          PEM-formatted certificate).\n   *\n   * @return true if the certificate is in the store, false if not.\n   */\n  caStore.hasCertificate = function(cert) {\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n\n    var match = getBySubject(cert.subject);\n    if(!match) {\n      return false;\n    }\n    if(!forge.util.isArray(match)) {\n      match = [match];\n    }\n    // compare DER-encoding of certificates\n    var der1 = asn1.toDer(pki.certificateToAsn1(cert)).getBytes();\n    for(var i = 0; i < match.length; ++i) {\n      var der2 = asn1.toDer(pki.certificateToAsn1(match[i])).getBytes();\n      if(der1 === der2) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Lists all of the certificates kept in the store.\n   *\n   * @return an array of all of the pki.certificate objects in the store.\n   */\n  caStore.listAllCertificates = function() {\n    var certList = [];\n\n    for(var hash in caStore.certs) {\n      if(caStore.certs.hasOwnProperty(hash)) {\n        var value = caStore.certs[hash];\n        if(!forge.util.isArray(value)) {\n          certList.push(value);\n        } else {\n          for(var i = 0; i < value.length; ++i) {\n            certList.push(value[i]);\n          }\n        }\n      }\n    }\n\n    return certList;\n  };\n\n  /**\n   * Removes a certificate from the store.\n   *\n   * @param cert the certificate to remove (either a pki.certificate or a\n   *          PEM-formatted certificate).\n   *\n   * @return the certificate that was removed or null if the certificate\n   *           wasn't in store.\n   */\n  caStore.removeCertificate = function(cert) {\n    var result;\n\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n    ensureSubjectHasHash(cert.subject);\n    if(!caStore.hasCertificate(cert)) {\n      return null;\n    }\n\n    var match = getBySubject(cert.subject);\n\n    if(!forge.util.isArray(match)) {\n      result = caStore.certs[cert.subject.hash];\n      delete caStore.certs[cert.subject.hash];\n      return result;\n    }\n\n    // compare DER-encoding of certificates\n    var der1 = asn1.toDer(pki.certificateToAsn1(cert)).getBytes();\n    for(var i = 0; i < match.length; ++i) {\n      var der2 = asn1.toDer(pki.certificateToAsn1(match[i])).getBytes();\n      if(der1 === der2) {\n        result = match[i];\n        match.splice(i, 1);\n      }\n    }\n    if(match.length === 0) {\n      delete caStore.certs[cert.subject.hash];\n    }\n\n    return result;\n  };\n\n  function getBySubject(subject) {\n    ensureSubjectHasHash(subject);\n    return caStore.certs[subject.hash] || null;\n  }\n\n  function ensureSubjectHasHash(subject) {\n    // produce subject hash if it doesn't exist\n    if(!subject.hash) {\n      var md = forge.md.sha1.create();\n      subject.attributes = pki.RDNAttributesAsArray(_dnToAsn1(subject), md);\n      subject.hash = md.digest().toHex();\n    }\n  }\n\n  // auto-add passed in certs\n  if(certs) {\n    // parse PEM-formatted certificates as necessary\n    for(var i = 0; i < certs.length; ++i) {\n      var cert = certs[i];\n      caStore.addCertificate(cert);\n    }\n  }\n\n  return caStore;\n};\n\n/**\n * Certificate verification errors, based on TLS.\n */\npki.certificateError = {\n  bad_certificate: 'forge.pki.BadCertificate',\n  unsupported_certificate: 'forge.pki.UnsupportedCertificate',\n  certificate_revoked: 'forge.pki.CertificateRevoked',\n  certificate_expired: 'forge.pki.CertificateExpired',\n  certificate_unknown: 'forge.pki.CertificateUnknown',\n  unknown_ca: 'forge.pki.UnknownCertificateAuthority'\n};\n\n/**\n * Verifies a certificate chain against the given Certificate Authority store\n * with an optional custom verify callback.\n *\n * @param caStore a certificate store to verify against.\n * @param chain the certificate chain to verify, with the root or highest\n *          authority at the end (an array of certificates).\n * @param options a callback to be called for every certificate in the chain or\n *                  an object with:\n *                  verify a callback to be called for every certificate in the\n *                    chain\n *                  validityCheckDate the date against which the certificate\n *                    validity period should be checked. Pass null to not check\n *                    the validity period. By default, the current date is used.\n *\n * The verify callback has the following signature:\n *\n * verified - Set to true if certificate was verified, otherwise the\n *   pki.certificateError for why the certificate failed.\n * depth - The current index in the chain, where 0 is the end point's cert.\n * certs - The certificate chain, *NOTE* an empty chain indicates an anonymous\n *   end point.\n *\n * The function returns true on success and on failure either the appropriate\n * pki.certificateError or an object with 'error' set to the appropriate\n * pki.certificateError and 'message' set to a custom error message.\n *\n * @return true if successful, error thrown if not.\n */\npki.verifyCertificateChain = function(caStore, chain, options) {\n  /* From: RFC3280 - Internet X.509 Public Key Infrastructure Certificate\n    Section 6: Certification Path Validation\n    See inline parentheticals related to this particular implementation.\n\n    The primary goal of path validation is to verify the binding between\n    a subject distinguished name or a subject alternative name and subject\n    public key, as represented in the end entity certificate, based on the\n    public key of the trust anchor. This requires obtaining a sequence of\n    certificates that support that binding. That sequence should be provided\n    in the passed 'chain'. The trust anchor should be in the given CA\n    store. The 'end entity' certificate is the certificate provided by the\n    end point (typically a server) and is the first in the chain.\n\n    To meet this goal, the path validation process verifies, among other\n    things, that a prospective certification path (a sequence of n\n    certificates or a 'chain') satisfies the following conditions:\n\n    (a) for all x in {1, ..., n-1}, the subject of certificate x is\n          the issuer of certificate x+1;\n\n    (b) certificate 1 is issued by the trust anchor;\n\n    (c) certificate n is the certificate to be validated; and\n\n    (d) for all x in {1, ..., n}, the certificate was valid at the\n          time in question.\n\n    Note that here 'n' is index 0 in the chain and 1 is the last certificate\n    in the chain and it must be signed by a certificate in the connection's\n    CA store.\n\n    The path validation process also determines the set of certificate\n    policies that are valid for this path, based on the certificate policies\n    extension, policy mapping extension, policy constraints extension, and\n    inhibit any-policy extension.\n\n    Note: Policy mapping extension not supported (Not Required).\n\n    Note: If the certificate has an unsupported critical extension, then it\n    must be rejected.\n\n    Note: A certificate is self-issued if the DNs that appear in the subject\n    and issuer fields are identical and are not empty.\n\n    The path validation algorithm assumes the following seven inputs are\n    provided to the path processing logic. What this specific implementation\n    will use is provided parenthetically:\n\n    (a) a prospective certification path of length n (the 'chain')\n    (b) the current date/time: ('now').\n    (c) user-initial-policy-set: A set of certificate policy identifiers\n          naming the policies that are acceptable to the certificate user.\n          The user-initial-policy-set contains the special value any-policy\n          if the user is not concerned about certificate policy\n          (Not implemented. Any policy is accepted).\n    (d) trust anchor information, describing a CA that serves as a trust\n          anchor for the certification path. The trust anchor information\n          includes:\n\n      (1)  the trusted issuer name,\n      (2)  the trusted public key algorithm,\n      (3)  the trusted public key, and\n      (4)  optionally, the trusted public key parameters associated\n             with the public key.\n\n      (Trust anchors are provided via certificates in the CA store).\n\n      The trust anchor information may be provided to the path processing\n      procedure in the form of a self-signed certificate. The trusted anchor\n      information is trusted because it was delivered to the path processing\n      procedure by some trustworthy out-of-band procedure. If the trusted\n      public key algorithm requires parameters, then the parameters are\n      provided along with the trusted public key (No parameters used in this\n      implementation).\n\n    (e) initial-policy-mapping-inhibit, which indicates if policy mapping is\n          allowed in the certification path.\n          (Not implemented, no policy checking)\n\n    (f) initial-explicit-policy, which indicates if the path must be valid\n          for at least one of the certificate policies in the user-initial-\n          policy-set.\n          (Not implemented, no policy checking)\n\n    (g) initial-any-policy-inhibit, which indicates whether the\n          anyPolicy OID should be processed if it is included in a\n          certificate.\n          (Not implemented, so any policy is valid provided that it is\n          not marked as critical) */\n\n  /* Basic Path Processing:\n\n    For each certificate in the 'chain', the following is checked:\n\n    1. The certificate validity period includes the current time.\n    2. The certificate was signed by its parent (where the parent is either\n       the next in the chain or from the CA store). Allow processing to\n       continue to the next step if no parent is found but the certificate is\n       in the CA store.\n    3. TODO: The certificate has not been revoked.\n    4. The certificate issuer name matches the parent's subject name.\n    5. TODO: If the certificate is self-issued and not the final certificate\n       in the chain, skip this step, otherwise verify that the subject name\n       is within one of the permitted subtrees of X.500 distinguished names\n       and that each of the alternative names in the subjectAltName extension\n       (critical or non-critical) is within one of the permitted subtrees for\n       that name type.\n    6. TODO: If the certificate is self-issued and not the final certificate\n       in the chain, skip this step, otherwise verify that the subject name\n       is not within one of the excluded subtrees for X.500 distinguished\n       names and none of the subjectAltName extension names are excluded for\n       that name type.\n    7. The other steps in the algorithm for basic path processing involve\n       handling the policy extension which is not presently supported in this\n       implementation. Instead, if a critical policy extension is found, the\n       certificate is rejected as not supported.\n    8. If the certificate is not the first or if its the only certificate in\n       the chain (having no parent from the CA store or is self-signed) and it\n       has a critical key usage extension, verify that the keyCertSign bit is\n       set. If the key usage extension exists, verify that the basic\n       constraints extension exists. If the basic constraints extension exists,\n       verify that the cA flag is set. If pathLenConstraint is set, ensure that\n       the number of certificates that precede in the chain (come earlier\n       in the chain as implemented below), excluding the very first in the\n       chain (typically the end-entity one), isn't greater than the\n       pathLenConstraint. This constraint limits the number of intermediate\n       CAs that may appear below a CA before only end-entity certificates\n       may be issued. */\n\n  // if a verify callback is passed as the third parameter, package it within\n  // the options object. This is to support a legacy function signature that\n  // expected the verify callback as the third parameter.\n  if(typeof options === 'function') {\n    options = {verify: options};\n  }\n  options = options || {};\n\n  // copy cert chain references to another array to protect against changes\n  // in verify callback\n  chain = chain.slice(0);\n  var certs = chain.slice(0);\n\n  var validityCheckDate = options.validityCheckDate;\n  // if no validityCheckDate is specified, default to the current date. Make\n  // sure to maintain the value null because it indicates that the validity\n  // period should not be checked.\n  if(typeof validityCheckDate === 'undefined') {\n    validityCheckDate = new Date();\n  }\n\n  // verify each cert in the chain using its parent, where the parent\n  // is either the next in the chain or from the CA store\n  var first = true;\n  var error = null;\n  var depth = 0;\n  do {\n    var cert = chain.shift();\n    var parent = null;\n    var selfSigned = false;\n\n    if(validityCheckDate) {\n      // 1. check valid time\n      if(validityCheckDate < cert.validity.notBefore ||\n         validityCheckDate > cert.validity.notAfter) {\n        error = {\n          message: 'Certificate is not valid yet or has expired.',\n          error: pki.certificateError.certificate_expired,\n          notBefore: cert.validity.notBefore,\n          notAfter: cert.validity.notAfter,\n          // TODO: we might want to reconsider renaming 'now' to\n          // 'validityCheckDate' should this API be changed in the future.\n          now: validityCheckDate\n        };\n      }\n    }\n\n    // 2. verify with parent from chain or CA store\n    if(error === null) {\n      parent = chain[0] || caStore.getIssuer(cert);\n      if(parent === null) {\n        // check for self-signed cert\n        if(cert.isIssuer(cert)) {\n          selfSigned = true;\n          parent = cert;\n        }\n      }\n\n      if(parent) {\n        // FIXME: current CA store implementation might have multiple\n        // certificates where the issuer can't be determined from the\n        // certificate (happens rarely with, eg: old certificates) so normalize\n        // by always putting parents into an array\n        // TODO: there's may be an extreme degenerate case currently uncovered\n        // where an old intermediate certificate seems to have a matching parent\n        // but none of the parents actually verify ... but the intermediate\n        // is in the CA and it should pass this check; needs investigation\n        var parents = parent;\n        if(!forge.util.isArray(parents)) {\n          parents = [parents];\n        }\n\n        // try to verify with each possible parent (typically only one)\n        var verified = false;\n        while(!verified && parents.length > 0) {\n          parent = parents.shift();\n          try {\n            verified = parent.verify(cert);\n          } catch(ex) {\n            // failure to verify, don't care why, try next one\n          }\n        }\n\n        if(!verified) {\n          error = {\n            message: 'Certificate signature is invalid.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n\n      if(error === null && (!parent || selfSigned) &&\n        !caStore.hasCertificate(cert)) {\n        // no parent issuer and certificate itself is not trusted\n        error = {\n          message: 'Certificate is not trusted.',\n          error: pki.certificateError.unknown_ca\n        };\n      }\n    }\n\n    // TODO: 3. check revoked\n\n    // 4. check for matching issuer/subject\n    if(error === null && parent && !cert.isIssuer(parent)) {\n      // parent is not issuer\n      error = {\n        message: 'Certificate issuer is invalid.',\n        error: pki.certificateError.bad_certificate\n      };\n    }\n\n    // 5. TODO: check names with permitted names tree\n\n    // 6. TODO: check names against excluded names tree\n\n    // 7. check for unsupported critical extensions\n    if(error === null) {\n      // supported extensions\n      var se = {\n        keyUsage: true,\n        basicConstraints: true\n      };\n      for(var i = 0; error === null && i < cert.extensions.length; ++i) {\n        var ext = cert.extensions[i];\n        if(ext.critical && !(ext.name in se)) {\n          error = {\n            message:\n              'Certificate has an unsupported critical extension.',\n            error: pki.certificateError.unsupported_certificate\n          };\n        }\n      }\n    }\n\n    // 8. check for CA if cert is not first or is the only certificate\n    // remaining in chain with no parent or is self-signed\n    if(error === null &&\n      (!first || (chain.length === 0 && (!parent || selfSigned)))) {\n      // first check keyUsage extension and then basic constraints\n      var bcExt = cert.getExtension('basicConstraints');\n      var keyUsageExt = cert.getExtension('keyUsage');\n      if(keyUsageExt !== null) {\n        // keyCertSign must be true and there must be a basic\n        // constraints extension\n        if(!keyUsageExt.keyCertSign || bcExt === null) {\n          // bad certificate\n          error = {\n            message:\n              'Certificate keyUsage or basicConstraints conflict ' +\n              'or indicate that the certificate is not a CA. ' +\n              'If the certificate is the only one in the chain or ' +\n              'isn\\'t the first then the certificate must be a ' +\n              'valid CA.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n      // basic constraints cA flag must be set\n      if(error === null && bcExt !== null && !bcExt.cA) {\n        // bad certificate\n        error = {\n          message:\n            'Certificate basicConstraints indicates the certificate ' +\n            'is not a CA.',\n          error: pki.certificateError.bad_certificate\n        };\n      }\n      // if error is not null and keyUsage is available, then we know it\n      // has keyCertSign and there is a basic constraints extension too,\n      // which means we can check pathLenConstraint (if it exists)\n      if(error === null && keyUsageExt !== null &&\n        'pathLenConstraint' in bcExt) {\n        // pathLen is the maximum # of intermediate CA certs that can be\n        // found between the current certificate and the end-entity (depth 0)\n        // certificate; this number does not include the end-entity (depth 0,\n        // last in the chain) even if it happens to be a CA certificate itself\n        var pathLen = depth - 1;\n        if(pathLen > bcExt.pathLenConstraint) {\n          // pathLenConstraint violated, bad certificate\n          error = {\n            message:\n              'Certificate basicConstraints pathLenConstraint violated.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n    }\n\n    // call application callback\n    var vfd = (error === null) ? true : error.error;\n    var ret = options.verify ? options.verify(vfd, depth, certs) : vfd;\n    if(ret === true) {\n      // clear any set error\n      error = null;\n    } else {\n      // if passed basic tests, set default message and alert\n      if(vfd === true) {\n        error = {\n          message: 'The application rejected the certificate.',\n          error: pki.certificateError.bad_certificate\n        };\n      }\n\n      // check for custom error info\n      if(ret || ret === 0) {\n        // set custom message and error\n        if(typeof ret === 'object' && !forge.util.isArray(ret)) {\n          if(ret.message) {\n            error.message = ret.message;\n          }\n          if(ret.error) {\n            error.error = ret.error;\n          }\n        } else if(typeof ret === 'string') {\n          // set custom error\n          error.error = ret;\n        }\n      }\n\n      // throw error\n      throw error;\n    }\n\n    // no longer first cert in chain\n    first = false;\n    ++depth;\n  } while(chain.length > 0);\n\n  return true;\n};\n","/* @license\nPapa Parse\nv5.3.2\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\n!function(e,t){\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof module&&\"undefined\"!=typeof exports?module.exports=t():e.Papa=t()}(this,function s(){\"use strict\";var f=\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:void 0!==f?f:{};var n=!f.document&&!!f.postMessage,o=n&&/blob:/i.test((f.location||{}).protocol),a={},h=0,b={parse:function(e,t){var i=(t=t||{}).dynamicTyping||!1;M(i)&&(t.dynamicTypingFunction=i,i={});if(t.dynamicTyping=i,t.transform=!!M(t.transform)&&t.transform,t.worker&&b.WORKERS_SUPPORTED){var r=function(){if(!b.WORKERS_SUPPORTED)return!1;var e=(i=f.URL||f.webkitURL||null,r=s.toString(),b.BLOB_URL||(b.BLOB_URL=i.createObjectURL(new Blob([\"(\",r,\")();\"],{type:\"text/javascript\"})))),t=new f.Worker(e);var i,r;return t.onmessage=_,t.id=h++,a[t.id]=t}();return r.userStep=t.step,r.userChunk=t.chunk,r.userComplete=t.complete,r.userError=t.error,t.step=M(t.step),t.chunk=M(t.chunk),t.complete=M(t.complete),t.error=M(t.error),delete t.worker,void r.postMessage({input:e,config:t,workerId:r.id})}var n=null;b.NODE_STREAM_INPUT,\"string\"==typeof e?n=t.download?new l(t):new p(t):!0===e.readable&&M(e.read)&&M(e.on)?n=new g(t):(f.File&&e instanceof File||e instanceof Object)&&(n=new c(t));return n.stream(e)},unparse:function(e,t){var n=!1,_=!0,m=\",\",y=\"\\r\\n\",s='\"',a=s+s,i=!1,r=null,o=!1;!function(){if(\"object\"!=typeof t)return;\"string\"!=typeof t.delimiter||b.BAD_DELIMITERS.filter(function(e){return-1!==t.delimiter.indexOf(e)}).length||(m=t.delimiter);(\"boolean\"==typeof t.quotes||\"function\"==typeof t.quotes||Array.isArray(t.quotes))&&(n=t.quotes);\"boolean\"!=typeof t.skipEmptyLines&&\"string\"!=typeof t.skipEmptyLines||(i=t.skipEmptyLines);\"string\"==typeof t.newline&&(y=t.newline);\"string\"==typeof t.quoteChar&&(s=t.quoteChar);\"boolean\"==typeof t.header&&(_=t.header);if(Array.isArray(t.columns)){if(0===t.columns.length)throw new Error(\"Option columns is empty\");r=t.columns}void 0!==t.escapeChar&&(a=t.escapeChar+s);(\"boolean\"==typeof t.escapeFormulae||t.escapeFormulae instanceof RegExp)&&(o=t.escapeFormulae instanceof RegExp?t.escapeFormulae:/^[=+\\-@\\t\\r].*$/)}();var h=new RegExp(j(s),\"g\");\"string\"==typeof e&&(e=JSON.parse(e));if(Array.isArray(e)){if(!e.length||Array.isArray(e[0]))return u(null,e,i);if(\"object\"==typeof e[0])return u(r||Object.keys(e[0]),e,i)}else if(\"object\"==typeof e)return\"string\"==typeof e.data&&(e.data=JSON.parse(e.data)),Array.isArray(e.data)&&(e.fields||(e.fields=e.meta&&e.meta.fields||r),e.fields||(e.fields=Array.isArray(e.data[0])?e.fields:\"object\"==typeof e.data[0]?Object.keys(e.data[0]):[]),Array.isArray(e.data[0])||\"object\"==typeof e.data[0]||(e.data=[e.data])),u(e.fields||[],e.data||[],i);throw new Error(\"Unable to serialize unrecognized input\");function u(e,t,i){var r=\"\";\"string\"==typeof e&&(e=JSON.parse(e)),\"string\"==typeof t&&(t=JSON.parse(t));var n=Array.isArray(e)&&0<e.length,s=!Array.isArray(t[0]);if(n&&_){for(var a=0;a<e.length;a++)0<a&&(r+=m),r+=v(e[a],a);0<t.length&&(r+=y)}for(var o=0;o<t.length;o++){var h=n?e.length:t[o].length,u=!1,f=n?0===Object.keys(t[o]).length:0===t[o].length;if(i&&!n&&(u=\"greedy\"===i?\"\"===t[o].join(\"\").trim():1===t[o].length&&0===t[o][0].length),\"greedy\"===i&&n){for(var d=[],l=0;l<h;l++){var c=s?e[l]:l;d.push(t[o][c])}u=\"\"===d.join(\"\").trim()}if(!u){for(var p=0;p<h;p++){0<p&&!f&&(r+=m);var g=n&&s?e[p]:p;r+=v(t[o][g],p)}o<t.length-1&&(!i||0<h&&!f)&&(r+=y)}}return r}function v(e,t){if(null==e)return\"\";if(e.constructor===Date)return JSON.stringify(e).slice(1,25);var i=!1;o&&\"string\"==typeof e&&o.test(e)&&(e=\"'\"+e,i=!0);var r=e.toString().replace(h,a);return(i=i||!0===n||\"function\"==typeof n&&n(e,t)||Array.isArray(n)&&n[t]||function(e,t){for(var i=0;i<t.length;i++)if(-1<e.indexOf(t[i]))return!0;return!1}(r,b.BAD_DELIMITERS)||-1<r.indexOf(m)||\" \"===r.charAt(0)||\" \"===r.charAt(r.length-1))?s+r+s:r}}};if(b.RECORD_SEP=String.fromCharCode(30),b.UNIT_SEP=String.fromCharCode(31),b.BYTE_ORDER_MARK=\"\\ufeff\",b.BAD_DELIMITERS=[\"\\r\",\"\\n\",'\"',b.BYTE_ORDER_MARK],b.WORKERS_SUPPORTED=!n&&!!f.Worker,b.NODE_STREAM_INPUT=1,b.LocalChunkSize=10485760,b.RemoteChunkSize=5242880,b.DefaultDelimiter=\",\",b.Parser=E,b.ParserHandle=i,b.NetworkStreamer=l,b.FileStreamer=c,b.StringStreamer=p,b.ReadableStreamStreamer=g,f.jQuery){var d=f.jQuery;d.fn.parse=function(o){var i=o.config||{},h=[];return this.each(function(e){if(!(\"INPUT\"===d(this).prop(\"tagName\").toUpperCase()&&\"file\"===d(this).attr(\"type\").toLowerCase()&&f.FileReader)||!this.files||0===this.files.length)return!0;for(var t=0;t<this.files.length;t++)h.push({file:this.files[t],inputElem:this,instanceConfig:d.extend({},i)})}),e(),this;function e(){if(0!==h.length){var e,t,i,r,n=h[0];if(M(o.before)){var s=o.before(n.file,n.inputElem);if(\"object\"==typeof s){if(\"abort\"===s.action)return e=\"AbortError\",t=n.file,i=n.inputElem,r=s.reason,void(M(o.error)&&o.error({name:e},t,i,r));if(\"skip\"===s.action)return void u();\"object\"==typeof s.config&&(n.instanceConfig=d.extend(n.instanceConfig,s.config))}else if(\"skip\"===s)return void u()}var a=n.instanceConfig.complete;n.instanceConfig.complete=function(e){M(a)&&a(e,n.file,n.inputElem),u()},b.parse(n.file,n.instanceConfig)}else M(o.complete)&&o.complete()}function u(){h.splice(0,1),e()}}}function u(e){this._handle=null,this._finished=!1,this._completed=!1,this._halted=!1,this._input=null,this._baseIndex=0,this._partialLine=\"\",this._rowCount=0,this._start=0,this._nextChunk=null,this.isFirstChunk=!0,this._completeResults={data:[],errors:[],meta:{}},function(e){var t=w(e);t.chunkSize=parseInt(t.chunkSize),e.step||e.chunk||(t.chunkSize=null);this._handle=new i(t),(this._handle.streamer=this)._config=t}.call(this,e),this.parseChunk=function(e,t){if(this.isFirstChunk&&M(this._config.beforeFirstChunk)){var i=this._config.beforeFirstChunk(e);void 0!==i&&(e=i)}this.isFirstChunk=!1,this._halted=!1;var r=this._partialLine+e;this._partialLine=\"\";var n=this._handle.parse(r,this._baseIndex,!this._finished);if(!this._handle.paused()&&!this._handle.aborted()){var s=n.meta.cursor;this._finished||(this._partialLine=r.substring(s-this._baseIndex),this._baseIndex=s),n&&n.data&&(this._rowCount+=n.data.length);var a=this._finished||this._config.preview&&this._rowCount>=this._config.preview;if(o)f.postMessage({results:n,workerId:b.WORKER_ID,finished:a});else if(M(this._config.chunk)&&!t){if(this._config.chunk(n,this._handle),this._handle.paused()||this._handle.aborted())return void(this._halted=!0);n=void 0,this._completeResults=void 0}return this._config.step||this._config.chunk||(this._completeResults.data=this._completeResults.data.concat(n.data),this._completeResults.errors=this._completeResults.errors.concat(n.errors),this._completeResults.meta=n.meta),this._completed||!a||!M(this._config.complete)||n&&n.meta.aborted||(this._config.complete(this._completeResults,this._input),this._completed=!0),a||n&&n.meta.paused||this._nextChunk(),n}this._halted=!0},this._sendError=function(e){M(this._config.error)?this._config.error(e):o&&this._config.error&&f.postMessage({workerId:b.WORKER_ID,error:e,finished:!1})}}function l(e){var r;(e=e||{}).chunkSize||(e.chunkSize=b.RemoteChunkSize),u.call(this,e),this._nextChunk=n?function(){this._readChunk(),this._chunkLoaded()}:function(){this._readChunk()},this.stream=function(e){this._input=e,this._nextChunk()},this._readChunk=function(){if(this._finished)this._chunkLoaded();else{if(r=new XMLHttpRequest,this._config.withCredentials&&(r.withCredentials=this._config.withCredentials),n||(r.onload=v(this._chunkLoaded,this),r.onerror=v(this._chunkError,this)),r.open(this._config.downloadRequestBody?\"POST\":\"GET\",this._input,!n),this._config.downloadRequestHeaders){var e=this._config.downloadRequestHeaders;for(var t in e)r.setRequestHeader(t,e[t])}if(this._config.chunkSize){var i=this._start+this._config.chunkSize-1;r.setRequestHeader(\"Range\",\"bytes=\"+this._start+\"-\"+i)}try{r.send(this._config.downloadRequestBody)}catch(e){this._chunkError(e.message)}n&&0===r.status&&this._chunkError()}},this._chunkLoaded=function(){4===r.readyState&&(r.status<200||400<=r.status?this._chunkError():(this._start+=this._config.chunkSize?this._config.chunkSize:r.responseText.length,this._finished=!this._config.chunkSize||this._start>=function(e){var t=e.getResponseHeader(\"Content-Range\");if(null===t)return-1;return parseInt(t.substring(t.lastIndexOf(\"/\")+1))}(r),this.parseChunk(r.responseText)))},this._chunkError=function(e){var t=r.statusText||e;this._sendError(new Error(t))}}function c(e){var r,n;(e=e||{}).chunkSize||(e.chunkSize=b.LocalChunkSize),u.call(this,e);var s=\"undefined\"!=typeof FileReader;this.stream=function(e){this._input=e,n=e.slice||e.webkitSlice||e.mozSlice,s?((r=new FileReader).onload=v(this._chunkLoaded,this),r.onerror=v(this._chunkError,this)):r=new FileReaderSync,this._nextChunk()},this._nextChunk=function(){this._finished||this._config.preview&&!(this._rowCount<this._config.preview)||this._readChunk()},this._readChunk=function(){var e=this._input;if(this._config.chunkSize){var t=Math.min(this._start+this._config.chunkSize,this._input.size);e=n.call(e,this._start,t)}var i=r.readAsText(e,this._config.encoding);s||this._chunkLoaded({target:{result:i}})},this._chunkLoaded=function(e){this._start+=this._config.chunkSize,this._finished=!this._config.chunkSize||this._start>=this._input.size,this.parseChunk(e.target.result)},this._chunkError=function(){this._sendError(r.error)}}function p(e){var i;u.call(this,e=e||{}),this.stream=function(e){return i=e,this._nextChunk()},this._nextChunk=function(){if(!this._finished){var e,t=this._config.chunkSize;return t?(e=i.substring(0,t),i=i.substring(t)):(e=i,i=\"\"),this._finished=!i,this.parseChunk(e)}}}function g(e){u.call(this,e=e||{});var t=[],i=!0,r=!1;this.pause=function(){u.prototype.pause.apply(this,arguments),this._input.pause()},this.resume=function(){u.prototype.resume.apply(this,arguments),this._input.resume()},this.stream=function(e){this._input=e,this._input.on(\"data\",this._streamData),this._input.on(\"end\",this._streamEnd),this._input.on(\"error\",this._streamError)},this._checkIsFinished=function(){r&&1===t.length&&(this._finished=!0)},this._nextChunk=function(){this._checkIsFinished(),t.length?this.parseChunk(t.shift()):i=!0},this._streamData=v(function(e){try{t.push(\"string\"==typeof e?e:e.toString(this._config.encoding)),i&&(i=!1,this._checkIsFinished(),this.parseChunk(t.shift()))}catch(e){this._streamError(e)}},this),this._streamError=v(function(e){this._streamCleanUp(),this._sendError(e)},this),this._streamEnd=v(function(){this._streamCleanUp(),r=!0,this._streamData(\"\")},this),this._streamCleanUp=v(function(){this._input.removeListener(\"data\",this._streamData),this._input.removeListener(\"end\",this._streamEnd),this._input.removeListener(\"error\",this._streamError)},this)}function i(m){var a,o,h,r=Math.pow(2,53),n=-r,s=/^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)([eE][-+]?\\d+)?\\s*$/,u=/^(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))$/,t=this,i=0,f=0,d=!1,e=!1,l=[],c={data:[],errors:[],meta:{}};if(M(m.step)){var p=m.step;m.step=function(e){if(c=e,_())g();else{if(g(),0===c.data.length)return;i+=e.data.length,m.preview&&i>m.preview?o.abort():(c.data=c.data[0],p(c,t))}}}function y(e){return\"greedy\"===m.skipEmptyLines?\"\"===e.join(\"\").trim():1===e.length&&0===e[0].length}function g(){return c&&h&&(k(\"Delimiter\",\"UndetectableDelimiter\",\"Unable to auto-detect delimiting character; defaulted to '\"+b.DefaultDelimiter+\"'\"),h=!1),m.skipEmptyLines&&(c.data=c.data.filter(function(e){return!y(e)})),_()&&function(){if(!c)return;function e(e,t){M(m.transformHeader)&&(e=m.transformHeader(e,t)),l.push(e)}if(Array.isArray(c.data[0])){for(var t=0;_()&&t<c.data.length;t++)c.data[t].forEach(e);c.data.splice(0,1)}else c.data.forEach(e)}(),function(){if(!c||!m.header&&!m.dynamicTyping&&!m.transform)return c;function e(e,t){var i,r=m.header?{}:[];for(i=0;i<e.length;i++){var n=i,s=e[i];m.header&&(n=i>=l.length?\"__parsed_extra\":l[i]),m.transform&&(s=m.transform(s,n)),s=v(n,s),\"__parsed_extra\"===n?(r[n]=r[n]||[],r[n].push(s)):r[n]=s}return m.header&&(i>l.length?k(\"FieldMismatch\",\"TooManyFields\",\"Too many fields: expected \"+l.length+\" fields but parsed \"+i,f+t):i<l.length&&k(\"FieldMismatch\",\"TooFewFields\",\"Too few fields: expected \"+l.length+\" fields but parsed \"+i,f+t)),r}var t=1;!c.data.length||Array.isArray(c.data[0])?(c.data=c.data.map(e),t=c.data.length):c.data=e(c.data,0);m.header&&c.meta&&(c.meta.fields=l);return f+=t,c}()}function _(){return m.header&&0===l.length}function v(e,t){return i=e,m.dynamicTypingFunction&&void 0===m.dynamicTyping[i]&&(m.dynamicTyping[i]=m.dynamicTypingFunction(i)),!0===(m.dynamicTyping[i]||m.dynamicTyping)?\"true\"===t||\"TRUE\"===t||\"false\"!==t&&\"FALSE\"!==t&&(function(e){if(s.test(e)){var t=parseFloat(e);if(n<t&&t<r)return!0}return!1}(t)?parseFloat(t):u.test(t)?new Date(t):\"\"===t?null:t):t;var i}function k(e,t,i,r){var n={type:e,code:t,message:i};void 0!==r&&(n.row=r),c.errors.push(n)}this.parse=function(e,t,i){var r=m.quoteChar||'\"';if(m.newline||(m.newline=function(e,t){e=e.substring(0,1048576);var i=new RegExp(j(t)+\"([^]*?)\"+j(t),\"gm\"),r=(e=e.replace(i,\"\")).split(\"\\r\"),n=e.split(\"\\n\"),s=1<n.length&&n[0].length<r[0].length;if(1===r.length||s)return\"\\n\";for(var a=0,o=0;o<r.length;o++)\"\\n\"===r[o][0]&&a++;return a>=r.length/2?\"\\r\\n\":\"\\r\"}(e,r)),h=!1,m.delimiter)M(m.delimiter)&&(m.delimiter=m.delimiter(e),c.meta.delimiter=m.delimiter);else{var n=function(e,t,i,r,n){var s,a,o,h;n=n||[\",\",\"\\t\",\"|\",\";\",b.RECORD_SEP,b.UNIT_SEP];for(var u=0;u<n.length;u++){var f=n[u],d=0,l=0,c=0;o=void 0;for(var p=new E({comments:r,delimiter:f,newline:t,preview:10}).parse(e),g=0;g<p.data.length;g++)if(i&&y(p.data[g]))c++;else{var _=p.data[g].length;l+=_,void 0!==o?0<_&&(d+=Math.abs(_-o),o=_):o=_}0<p.data.length&&(l/=p.data.length-c),(void 0===a||d<=a)&&(void 0===h||h<l)&&1.99<l&&(a=d,s=f,h=l)}return{successful:!!(m.delimiter=s),bestDelimiter:s}}(e,m.newline,m.skipEmptyLines,m.comments,m.delimitersToGuess);n.successful?m.delimiter=n.bestDelimiter:(h=!0,m.delimiter=b.DefaultDelimiter),c.meta.delimiter=m.delimiter}var s=w(m);return m.preview&&m.header&&s.preview++,a=e,o=new E(s),c=o.parse(a,t,i),g(),d?{meta:{paused:!0}}:c||{meta:{paused:!1}}},this.paused=function(){return d},this.pause=function(){d=!0,o.abort(),a=M(m.chunk)?\"\":a.substring(o.getCharIndex())},this.resume=function(){t.streamer._halted?(d=!1,t.streamer.parseChunk(a,!0)):setTimeout(t.resume,3)},this.aborted=function(){return e},this.abort=function(){e=!0,o.abort(),c.meta.aborted=!0,M(m.complete)&&m.complete(c),a=\"\"}}function j(e){return e.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\")}function E(e){var S,O=(e=e||{}).delimiter,x=e.newline,I=e.comments,T=e.step,D=e.preview,A=e.fastMode,L=S=void 0===e.quoteChar||null===e.quoteChar?'\"':e.quoteChar;if(void 0!==e.escapeChar&&(L=e.escapeChar),(\"string\"!=typeof O||-1<b.BAD_DELIMITERS.indexOf(O))&&(O=\",\"),I===O)throw new Error(\"Comment character same as delimiter\");!0===I?I=\"#\":(\"string\"!=typeof I||-1<b.BAD_DELIMITERS.indexOf(I))&&(I=!1),\"\\n\"!==x&&\"\\r\"!==x&&\"\\r\\n\"!==x&&(x=\"\\n\");var F=0,z=!1;this.parse=function(r,t,i){if(\"string\"!=typeof r)throw new Error(\"Input must be a string\");var n=r.length,e=O.length,s=x.length,a=I.length,o=M(T),h=[],u=[],f=[],d=F=0;if(!r)return C();if(A||!1!==A&&-1===r.indexOf(S)){for(var l=r.split(x),c=0;c<l.length;c++){if(f=l[c],F+=f.length,c!==l.length-1)F+=x.length;else if(i)return C();if(!I||f.substring(0,a)!==I){if(o){if(h=[],k(f.split(O)),R(),z)return C()}else k(f.split(O));if(D&&D<=c)return h=h.slice(0,D),C(!0)}}return C()}for(var p=r.indexOf(O,F),g=r.indexOf(x,F),_=new RegExp(j(L)+j(S),\"g\"),m=r.indexOf(S,F);;)if(r[F]!==S)if(I&&0===f.length&&r.substring(F,F+a)===I){if(-1===g)return C();F=g+s,g=r.indexOf(x,F),p=r.indexOf(O,F)}else if(-1!==p&&(p<g||-1===g))f.push(r.substring(F,p)),F=p+e,p=r.indexOf(O,F);else{if(-1===g)break;if(f.push(r.substring(F,g)),w(g+s),o&&(R(),z))return C();if(D&&h.length>=D)return C(!0)}else for(m=F,F++;;){if(-1===(m=r.indexOf(S,m+1)))return i||u.push({type:\"Quotes\",code:\"MissingQuotes\",message:\"Quoted field unterminated\",row:h.length,index:F}),E();if(m===n-1)return E(r.substring(F,m).replace(_,S));if(S!==L||r[m+1]!==L){if(S===L||0===m||r[m-1]!==L){-1!==p&&p<m+1&&(p=r.indexOf(O,m+1)),-1!==g&&g<m+1&&(g=r.indexOf(x,m+1));var y=b(-1===g?p:Math.min(p,g));if(r.substr(m+1+y,e)===O){f.push(r.substring(F,m).replace(_,S)),r[F=m+1+y+e]!==S&&(m=r.indexOf(S,F)),p=r.indexOf(O,F),g=r.indexOf(x,F);break}var v=b(g);if(r.substring(m+1+v,m+1+v+s)===x){if(f.push(r.substring(F,m).replace(_,S)),w(m+1+v+s),p=r.indexOf(O,F),m=r.indexOf(S,F),o&&(R(),z))return C();if(D&&h.length>=D)return C(!0);break}u.push({type:\"Quotes\",code:\"InvalidQuotes\",message:\"Trailing quote on quoted field is malformed\",row:h.length,index:F}),m++}}else m++}return E();function k(e){h.push(e),d=F}function b(e){var t=0;if(-1!==e){var i=r.substring(m+1,e);i&&\"\"===i.trim()&&(t=i.length)}return t}function E(e){return i||(void 0===e&&(e=r.substring(F)),f.push(e),F=n,k(f),o&&R()),C()}function w(e){F=e,k(f),f=[],g=r.indexOf(x,F)}function C(e){return{data:h,errors:u,meta:{delimiter:O,linebreak:x,aborted:z,truncated:!!e,cursor:d+(t||0)}}}function R(){T(C()),h=[],u=[]}},this.abort=function(){z=!0},this.getCharIndex=function(){return F}}function _(e){var t=e.data,i=a[t.workerId],r=!1;if(t.error)i.userError(t.error,t.file);else if(t.results&&t.results.data){var n={abort:function(){r=!0,m(t.workerId,{data:[],errors:[],meta:{aborted:!0}})},pause:y,resume:y};if(M(i.userStep)){for(var s=0;s<t.results.data.length&&(i.userStep({data:t.results.data[s],errors:t.results.errors,meta:t.results.meta},n),!r);s++);delete t.results}else M(i.userChunk)&&(i.userChunk(t.results,n,t.file),delete t.results)}t.finished&&!r&&m(t.workerId,t.results)}function m(e,t){var i=a[e];M(i.userComplete)&&i.userComplete(t),i.terminate(),delete a[e]}function y(){throw new Error(\"Not implemented.\")}function w(e){if(\"object\"!=typeof e||null===e)return e;var t=Array.isArray(e)?[]:{};for(var i in e)t[i]=w(e[i]);return t}function v(e,t){return function(){e.apply(t,arguments)}}function M(e){return\"function\"==typeof e}return o&&(f.onmessage=function(e){var t=e.data;void 0===b.WORKER_ID&&t&&(b.WORKER_ID=t.workerId);if(\"string\"==typeof t.input)f.postMessage({workerId:b.WORKER_ID,results:b.parse(t.input,t.config),finished:!0});else if(f.File&&t.input instanceof File||t.input instanceof Object){var i=b.parse(t.input,t.config);i&&f.postMessage({workerId:b.WORKER_ID,results:i,finished:!0})}}),(l.prototype=Object.create(u.prototype)).constructor=l,(c.prototype=Object.create(u.prototype)).constructor=c,(p.prototype=Object.create(p.prototype)).constructor=p,(g.prototype=Object.create(u.prototype)).constructor=g,b});","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n",null,null,null,null,null,null,null,"module.exports = \"\"","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport function getClosureSafeProperty<T>(objWithPropertyToExtract: T): string {\n  for (let key in objWithPropertyToExtract) {\n    if (objWithPropertyToExtract[key] === getClosureSafeProperty as any) {\n      return key;\n    }\n  }\n  throw Error('Could not find renamed property on target object.');\n}\n\n/**\n * Sets properties on a target object from a source object, but only if\n * the property doesn't already exist on the target object.\n * @param target The target to set properties on\n * @param source The source of the property keys and values to set\n */\nexport function fillProperties(target: {[key: string]: string}, source: {[key: string]: string}) {\n  for (const key in source) {\n    if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport function stringify(token: any): string {\n  if (typeof token === 'string') {\n    return token;\n  }\n\n  if (Array.isArray(token)) {\n    return '[' + token.map(stringify).join(', ') + ']';\n  }\n\n  if (token == null) {\n    return '' + token;\n  }\n\n  if (token.overriddenName) {\n    return `${token.overriddenName}`;\n  }\n\n  if (token.name) {\n    return `${token.name}`;\n  }\n\n  const res = token.toString();\n\n  if (res == null) {\n    return '' + res;\n  }\n\n  const newLineIndex = res.indexOf('\\n');\n  return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * Concatenates two strings with separator, allocating new strings only when necessary.\n *\n * @param before before string.\n * @param separator separator string.\n * @param after after string.\n * @returns concatenated string.\n */\nexport function concatStringsWithSpace(before: string|null, after: string|null): string {\n  return (before == null || before === '') ?\n      (after === null ? '' : after) :\n      ((after == null || after === '') ? before : before + ' ' + after);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../interface/type';\nimport {getClosureSafeProperty} from '../util/property';\nimport {stringify} from '../util/stringify';\n\n\n\n/**\n * An interface that a function passed into {@link forwardRef} has to implement.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * @publicApi\n */\nexport interface ForwardRefFn {\n  (): any;\n}\n\nconst __forward_ref__ = getClosureSafeProperty({__forward_ref__: getClosureSafeProperty});\n\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n * a query is not yet defined.\n *\n * @usageNotes\n * ### Example\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * @publicApi\n */\nexport function forwardRef(forwardRefFn: ForwardRefFn): Type<any> {\n  (<any>forwardRefFn).__forward_ref__ = forwardRef;\n  (<any>forwardRefFn).toString = function() {\n    return stringify(this());\n  };\n  return (<Type<any>><any>forwardRefFn);\n}\n\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * @see `forwardRef`\n * @publicApi\n */\nexport function resolveForwardRef<T>(type: T): T {\n  return isForwardRef(type) ? type() : type;\n}\n\n/** Checks whether a function is wrapped by a `forwardRef`. */\nexport function isForwardRef(fn: any): fn is() => any {\n  return typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n      fn.__forward_ref__ === forwardRef;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ERROR_DETAILS_PAGE_BASE_URL} from './error_details_base_url';\n\n/**\n * The list of error codes used in runtime code of the `core` package.\n * Reserved error code range: 100-999.\n *\n * Note: the minus sign denotes the fact that a particular code has a detailed guide on\n * angular.io. This extra annotation is needed to avoid introducing a separate set to store\n * error codes which have guides, which might leak into runtime code.\n *\n * Full list of available error guides can be found at https://angular.io/errors.\n */\nexport const enum RuntimeErrorCode {\n  // Change Detection Errors\n  EXPRESSION_CHANGED_AFTER_CHECKED = -100,\n  RECURSIVE_APPLICATION_REF_TICK = 101,\n\n  // Dependency Injection Errors\n  CYCLIC_DI_DEPENDENCY = -200,\n  PROVIDER_NOT_FOUND = -201,\n  INVALID_FACTORY_DEPENDENCY = 202,\n  MISSING_INJECTION_CONTEXT = -203,\n  INVALID_INJECTION_TOKEN = 204,\n  INJECTOR_ALREADY_DESTROYED = 205,\n  PROVIDER_IN_WRONG_CONTEXT = 207,\n  MISSING_INJECTION_TOKEN = 208,\n  INVALID_MULTI_PROVIDER = 209,\n\n  // Template Errors\n  MULTIPLE_COMPONENTS_MATCH = -300,\n  EXPORT_NOT_FOUND = -301,\n  PIPE_NOT_FOUND = -302,\n  UNKNOWN_BINDING = 303,\n  UNKNOWN_ELEMENT = 304,\n  TEMPLATE_STRUCTURE_ERROR = 305,\n  INVALID_EVENT_BINDING = 306,\n\n  // Bootstrap Errors\n  MULTIPLE_PLATFORMS = 400,\n  PLATFORM_NOT_FOUND = 401,\n  ERROR_HANDLER_NOT_FOUND = 402,\n  BOOTSTRAP_COMPONENTS_NOT_FOUND = 403,\n  PLATFORM_ALREADY_DESTROYED = 404,\n  ASYNC_INITIALIZERS_STILL_RUNNING = 405,\n  APPLICATION_REF_ALREADY_DESTROYED = 406,\n  RENDERER_NOT_FOUND = 407,\n\n  // Styling Errors\n\n  // Declarations Errors\n\n  // i18n Errors\n  INVALID_I18N_STRUCTURE = 700,\n  MISSING_LOCALE_DATA = 701,\n\n  // standalone errors\n  IMPORT_PROVIDERS_FROM_STANDALONE = 800,\n\n  // JIT Compilation Errors\n  // Other\n  INVALID_DIFFER_INPUT = 900,\n  NO_SUPPORTING_DIFFER_FACTORY = 901,\n  VIEW_ALREADY_ATTACHED = 902,\n  INVALID_INHERITANCE = 903,\n  UNSAFE_VALUE_IN_RESOURCE_URL = 904,\n  UNSAFE_VALUE_IN_SCRIPT = 905,\n  MISSING_GENERATED_DEF = 906,\n  TYPE_IS_NOT_STANDALONE = 907,\n  MISSING_ZONEJS = 908,\n  UNEXPECTED_ZONE_STATE = 909,\n}\n\n/**\n * Class that represents a runtime error.\n * Formats and outputs the error message in a consistent way.\n *\n * Example:\n * ```\n *  throw new RuntimeError(\n *    RuntimeErrorCode.INJECTOR_ALREADY_DESTROYED,\n *    ngDevMode && 'Injector has already been destroyed.');\n * ```\n *\n * Note: the `message` argument contains a descriptive error message as a string in development\n * mode (when the `ngDevMode` is defined). In production mode (after tree-shaking pass), the\n * `message` argument becomes `false`, thus we account for it in the typings and the runtime logic.\n */\nexport class RuntimeError<T extends number = RuntimeErrorCode> extends Error {\n  constructor(public code: T, message: null|false|string) {\n    super(formatRuntimeError<T>(code, message));\n  }\n}\n\n/**\n * Called to format a runtime error.\n * See additional info on the `message` argument type in the `RuntimeError` class description.\n */\nexport function formatRuntimeError<T extends number = RuntimeErrorCode>(\n    code: T, message: null|false|string): string {\n  // Error code might be a negative number, which is a special marker that instructs the logic to\n  // generate a link to the error details page on angular.io.\n  const fullCode = `NG0${Math.abs(code)}`;\n\n  let errorMessage = `${fullCode}${message ? ': ' + message.trim() : ''}`;\n\n  if (ngDevMode && code < 0) {\n    const addPeriodSeparator = !errorMessage.match(/[.,;!?]$/);\n    const separator = addPeriodSeparator ? '.' : '';\n    errorMessage =\n        `${errorMessage}${separator} Find more at ${ERROR_DETAILS_PAGE_BASE_URL}/${fullCode}`;\n  }\n  return errorMessage;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Used for stringify render output in Ivy.\n * Important! This function is very performance-sensitive and we should\n * be extra careful not to introduce megamorphic reads in it.\n * Check `core/test/render3/perf/render_stringify` for benchmarks and alternate implementations.\n */\nexport function renderStringify(value: any): string {\n  if (typeof value === 'string') return value;\n  if (value == null) return '';\n  // Use `String` so that it invokes the `toString` method of the value. Note that this\n  // appears to be faster than calling `value.toString` (see `render_stringify` benchmark).\n  return String(value);\n}\n\n\n/**\n * Used to stringify a value so that it can be displayed in an error message.\n * Important! This function contains a megamorphic read and should only be\n * used for error messages.\n */\nexport function stringifyForError(value: any): string {\n  if (typeof value === 'function') return value.name || value.toString();\n  if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n    return value.type.name || value.type.toString();\n  }\n\n  return renderStringify(value);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ImportedNgModuleProviders} from '../di/interface/provider';\nimport {RuntimeError, RuntimeErrorCode} from '../errors';\nimport {Type} from '../interface/type';\nimport {stringify} from '../util/stringify';\n\nimport {stringifyForError} from './util/stringify_utils';\n\n\n/** Called when directives inject each other (creating a circular dependency) */\nexport function throwCyclicDependencyError(token: string, path?: string[]): never {\n  const depPath = path ? `. Dependency path: ${path.join(' > ')} > ${token}` : '';\n  throw new RuntimeError(\n      RuntimeErrorCode.CYCLIC_DI_DEPENDENCY,\n      `Circular dependency in DI detected for ${token}${depPath}`);\n}\n\nexport function throwMixedMultiProviderError() {\n  throw new Error(`Cannot mix multi providers and regular providers`);\n}\n\nexport function throwInvalidProviderError(\n    ngModuleType?: Type<unknown>, providers?: any[], provider?: any): never {\n  if (ngModuleType && providers) {\n    const providerDetail = providers.map(v => v == provider ? '?' + provider + '?' : '...');\n    throw new Error(`Invalid provider for the NgModule '${\n        stringify(ngModuleType)}' - only instances of Provider and Type are allowed, got: [${\n        providerDetail.join(', ')}]`);\n  } else if ((provider as ImportedNgModuleProviders).ɵproviders) {\n    throw new RuntimeError(\n        RuntimeErrorCode.PROVIDER_IN_WRONG_CONTEXT,\n        `Invalid providers from 'importProvidersFrom' present in a non-environment injector. 'importProvidersFrom' can't be used for component providers.`);\n  } else {\n    throw new Error('Invalid provider');\n  }\n}\n\n\n/** Throws an error when a token is not found in DI. */\nexport function throwProviderNotFoundError(token: any, injectorName?: string): never {\n  const injectorDetails = injectorName ? ` in ${injectorName}` : '';\n  throw new RuntimeError(\n      RuntimeErrorCode.PROVIDER_NOT_FOUND,\n      ngDevMode && `No provider for ${stringifyForError(token)} found${injectorDetails}`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// The functions in this file verify that the assumptions we are making\n// about state in an instruction are correct before implementing any logic.\n// They are meant only to be called in dev mode as sanity checks.\n\nimport {stringify} from './stringify';\n\nexport function assertNumber(actual: any, msg: string): asserts actual is number {\n  if (!(typeof actual === 'number')) {\n    throwError(msg, typeof actual, 'number', '===');\n  }\n}\n\nexport function assertNumberInRange(\n    actual: any, minInclusive: number, maxInclusive: number): asserts actual is number {\n  assertNumber(actual, 'Expected a number');\n  assertLessThanOrEqual(actual, maxInclusive, 'Expected number to be less than or equal to');\n  assertGreaterThanOrEqual(actual, minInclusive, 'Expected number to be greater than or equal to');\n}\n\nexport function assertString(actual: any, msg: string): asserts actual is string {\n  if (!(typeof actual === 'string')) {\n    throwError(msg, actual === null ? 'null' : typeof actual, 'string', '===');\n  }\n}\n\nexport function assertFunction(actual: any, msg: string): asserts actual is Function {\n  if (!(typeof actual === 'function')) {\n    throwError(msg, actual === null ? 'null' : typeof actual, 'function', '===');\n  }\n}\n\nexport function assertEqual<T>(actual: T, expected: T, msg: string) {\n  if (!(actual == expected)) {\n    throwError(msg, actual, expected, '==');\n  }\n}\n\nexport function assertNotEqual<T>(actual: T, expected: T, msg: string): asserts actual is T {\n  if (!(actual != expected)) {\n    throwError(msg, actual, expected, '!=');\n  }\n}\n\nexport function assertSame<T>(actual: T, expected: T, msg: string): asserts actual is T {\n  if (!(actual === expected)) {\n    throwError(msg, actual, expected, '===');\n  }\n}\n\nexport function assertNotSame<T>(actual: T, expected: T, msg: string) {\n  if (!(actual !== expected)) {\n    throwError(msg, actual, expected, '!==');\n  }\n}\n\nexport function assertLessThan<T>(actual: T, expected: T, msg: string): asserts actual is T {\n  if (!(actual < expected)) {\n    throwError(msg, actual, expected, '<');\n  }\n}\n\nexport function assertLessThanOrEqual<T>(actual: T, expected: T, msg: string): asserts actual is T {\n  if (!(actual <= expected)) {\n    throwError(msg, actual, expected, '<=');\n  }\n}\n\nexport function assertGreaterThan<T>(actual: T, expected: T, msg: string): asserts actual is T {\n  if (!(actual > expected)) {\n    throwError(msg, actual, expected, '>');\n  }\n}\n\nexport function assertGreaterThanOrEqual<T>(\n    actual: T, expected: T, msg: string): asserts actual is T {\n  if (!(actual >= expected)) {\n    throwError(msg, actual, expected, '>=');\n  }\n}\n\nexport function assertNotDefined<T>(actual: T, msg: string) {\n  if (actual != null) {\n    throwError(msg, actual, null, '==');\n  }\n}\n\nexport function assertDefined<T>(actual: T|null|undefined, msg: string): asserts actual is T {\n  if (actual == null) {\n    throwError(msg, actual, null, '!=');\n  }\n}\n\nexport function throwError(msg: string): never;\nexport function throwError(msg: string, actual: any, expected: any, comparison: string): never;\nexport function throwError(msg: string, actual?: any, expected?: any, comparison?: string): never {\n  throw new Error(\n      `ASSERTION ERROR: ${msg}` +\n      (comparison == null ? '' : ` [Expected=> ${expected} ${comparison} ${actual} <=Actual]`));\n}\n\nexport function assertDomNode(node: any): asserts node is Node {\n  // If we're in a worker, `Node` will not be defined.\n  if (!(typeof Node !== 'undefined' && node instanceof Node) &&\n      !(typeof node === 'object' && node != null &&\n        node.constructor.name === 'WebWorkerRenderNode')) {\n    throwError(`The provided value must be an instance of a DOM Node but got ${stringify(node)}`);\n  }\n}\n\n\nexport function assertIndexInRange(arr: any[], index: number) {\n  assertDefined(arr, 'Array must be defined.');\n  const maxLen = arr.length;\n  if (index < 0 || index >= maxLen) {\n    throwError(`Index expected to be less than ${maxLen} but got ${index}`);\n  }\n}\n\n\nexport function assertOneOf(value: any, ...validValues: any[]) {\n  if (validValues.indexOf(value) !== -1) return true;\n  throwError(`Expected value to be one of ${JSON.stringify(validValues)} but was ${\n      JSON.stringify(value)}.`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../../interface/type';\nimport {getClosureSafeProperty} from '../../util/property';\n\nimport {ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, StaticClassProvider, ValueProvider} from './provider';\n\n\n\n/**\n * Information about how a type or `InjectionToken` interfaces with the DI system.\n *\n * At a minimum, this includes a `factory` which defines how to create the given type `T`, possibly\n * requesting injection of other types if necessary.\n *\n * Optionally, a `providedIn` parameter specifies that the given type belongs to a particular\n * `Injector`, `NgModule`, or a special scope (e.g. `'root'`). A value of `null` indicates\n * that the injectable does not belong to any scope.\n *\n * @codeGenApi\n * @publicApi The ViewEngine compiler emits code with this type for injectables. This code is\n *   deployed to npm, and should be treated as public api.\n\n */\nexport interface ɵɵInjectableDeclaration<T> {\n  /**\n   * Specifies that the given type belongs to a particular injector:\n   * - `InjectorType` such as `NgModule`,\n   * - `'root'` the root injector\n   * - `'any'` all injectors.\n   * - `null`, does not belong to any injector. Must be explicitly listed in the injector\n   *   `providers`.\n   */\n  providedIn: InjectorType<any>|'root'|'platform'|'any'|'environment'|null;\n\n  /**\n   * The token to which this definition belongs.\n   *\n   * Note that this may not be the same as the type that the `factory` will create.\n   */\n  token: unknown;\n\n  /**\n   * Factory method to execute to create an instance of the injectable.\n   */\n  factory: (t?: Type<any>) => T;\n\n  /**\n   * In a case of no explicit injector, a location where the instance of the injectable is stored.\n   */\n  value: T|undefined;\n}\n\n/**\n * Information about the providers to be included in an `Injector` as well as how the given type\n * which carries the information should be created by the DI system.\n *\n * An `InjectorDef` can import other types which have `InjectorDefs`, forming a deep nested\n * structure of providers with a defined priority (identically to how `NgModule`s also have\n * an import/dependency structure).\n *\n * NOTE: This is a private type and should not be exported\n *\n * @codeGenApi\n */\nexport interface ɵɵInjectorDef<T> {\n  // TODO(alxhub): Narrow down the type here once decorators properly change the return type of the\n  // class they are decorating (to add the ɵprov property for example).\n  providers: (Type<any>|ValueProvider|ExistingProvider|FactoryProvider|ConstructorProvider|\n              StaticClassProvider|ClassProvider|any[])[];\n\n  imports: (InjectorType<any>|InjectorTypeWithProviders<any>)[];\n}\n\n/**\n * A `Type` which has a `ɵprov: ɵɵInjectableDeclaration` static field.\n *\n * `InjectableType`s contain their own Dependency Injection metadata and are usable in an\n * `InjectorDef`-based `StaticInjector`.\n *\n * @publicApi\n */\nexport interface InjectableType<T> extends Type<T> {\n  /**\n   * Opaque type whose structure is highly version dependent. Do not rely on any properties.\n   */\n  ɵprov: unknown;\n}\n\n/**\n * A type which has an `InjectorDef` static field.\n *\n * `InjectorTypes` can be used to configure a `StaticInjector`.\n *\n * This is an opaque type whose structure is highly version dependent. Do not rely on any\n * properties.\n *\n * @publicApi\n */\nexport interface InjectorType<T> extends Type<T> {\n  ɵfac?: unknown;\n  ɵinj: unknown;\n}\n\n/**\n * Describes the `InjectorDef` equivalent of a `ModuleWithProviders`, an `InjectorType` with an\n * associated array of providers.\n *\n * Objects of this type can be listed in the imports section of an `InjectorDef`.\n *\n * NOTE: This is a private type and should not be exported\n */\nexport interface InjectorTypeWithProviders<T> {\n  ngModule: InjectorType<T>;\n  providers?: (Type<any>|ValueProvider|ExistingProvider|FactoryProvider|ConstructorProvider|\n               StaticClassProvider|ClassProvider|any[])[];\n}\n\n\n/**\n * Construct an injectable definition which defines how a token will be constructed by the DI\n * system, and in which injectors (if any) it will be available.\n *\n * This should be assigned to a static `ɵprov` field on a type, which will then be an\n * `InjectableType`.\n *\n * Options:\n * * `providedIn` determines which injectors will include the injectable, by either associating it\n *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n * * `factory` gives the zero argument function which will create an instance of the injectable.\n *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n *\n * @codeGenApi\n * @publicApi This instruction has been emitted by ViewEngine for some time and is deployed to npm.\n */\nexport function ɵɵdefineInjectable<T>(opts: {\n  token: unknown,\n  providedIn?: Type<any>|'root'|'platform'|'any'|'environment'|null, factory: () => T,\n}): unknown {\n  return {\n    token: opts.token,\n    providedIn: opts.providedIn as any || null,\n    factory: opts.factory,\n    value: undefined,\n  } as ɵɵInjectableDeclaration<T>;\n}\n\n/**\n * @deprecated in v8, delete after v10. This API should be used only by generated code, and that\n * code should now use ɵɵdefineInjectable instead.\n * @publicApi\n */\nexport const defineInjectable = ɵɵdefineInjectable;\n\n/**\n * Construct an `InjectorDef` which configures an injector.\n *\n * This should be assigned to a static injector def (`ɵinj`) field on a type, which will then be an\n * `InjectorType`.\n *\n * Options:\n *\n * * `providers`: an optional array of providers to add to the injector. Each provider must\n *   either have a factory or point to a type which has a `ɵprov` static property (the\n *   type must be an `InjectableType`).\n * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n *   whose providers will also be added to the injector. Locally provided types will override\n *   providers from imports.\n *\n * @codeGenApi\n */\nexport function ɵɵdefineInjector(options: {providers?: any[], imports?: any[]}): unknown {\n  return {providers: options.providers || [], imports: options.imports || []};\n}\n\n/**\n * Read the injectable def (`ɵprov`) for `type` in a way which is immune to accidentally reading\n * inherited value.\n *\n * @param type A type which may have its own (non-inherited) `ɵprov`.\n */\nexport function getInjectableDef<T>(type: any): ɵɵInjectableDeclaration<T>|null {\n  return getOwnDefinition(type, NG_PROV_DEF) || getOwnDefinition(type, NG_INJECTABLE_DEF);\n}\n\n/**\n * Return definition only if it is defined directly on `type` and is not inherited from a base\n * class of `type`.\n */\nfunction getOwnDefinition<T>(type: any, field: string): ɵɵInjectableDeclaration<T>|null {\n  return type.hasOwnProperty(field) ? type[field] : null;\n}\n\n/**\n * Read the injectable def (`ɵprov`) for `type` or read the `ɵprov` from one of its ancestors.\n *\n * @param type A type which may have `ɵprov`, via inheritance.\n *\n * @deprecated Will be removed in a future version of Angular, where an error will occur in the\n *     scenario if we find the `ɵprov` on an ancestor only.\n */\nexport function getInheritedInjectableDef<T>(type: any): ɵɵInjectableDeclaration<T>|null {\n  const def = type && (type[NG_PROV_DEF] || type[NG_INJECTABLE_DEF]);\n\n  if (def) {\n    const typeName = getTypeName(type);\n    // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n    // ngDevMode &&\n    console.warn(\n        `DEPRECATED: DI is instantiating a token \"${\n            typeName}\" that inherits its @Injectable decorator but does not provide one itself.\\n` +\n        `This will become an error in a future version of Angular. Please add @Injectable() to the \"${\n            typeName}\" class.`);\n    return def;\n  } else {\n    return null;\n  }\n}\n\n/** Gets the name of a type, accounting for some cross-browser differences. */\nfunction getTypeName(type: any): string {\n  // `Function.prototype.name` behaves differently between IE and other browsers. In most browsers\n  // it'll always return the name of the function itself, no matter how many other functions it\n  // inherits from. On IE the function doesn't have its own `name` property, but it takes it from\n  // the lowest level in the prototype chain. E.g. if we have `class Foo extends Parent` most\n  // browsers will evaluate `Foo.name` to `Foo` while IE will return `Parent`. We work around\n  // the issue by converting the function to a string and parsing its name out that way via a regex.\n  if (type.hasOwnProperty('name')) {\n    return type.name;\n  }\n\n  const match = ('' + type).match(/^function\\s*([^\\s(]+)/);\n  return match === null ? '' : match[1];\n}\n\n/**\n * Read the injector def type in a way which is immune to accidentally reading inherited value.\n *\n * @param type type which may have an injector def (`ɵinj`)\n */\nexport function getInjectorDef<T>(type: any): ɵɵInjectorDef<T>|null {\n  return type && (type.hasOwnProperty(NG_INJ_DEF) || type.hasOwnProperty(NG_INJECTOR_DEF)) ?\n      (type as any)[NG_INJ_DEF] :\n      null;\n}\n\nexport const NG_PROV_DEF = getClosureSafeProperty({ɵprov: getClosureSafeProperty});\nexport const NG_INJ_DEF = getClosureSafeProperty({ɵinj: getClosureSafeProperty});\n\n// We need to keep these around so we can read off old defs if new defs are unavailable\nexport const NG_INJECTABLE_DEF = getClosureSafeProperty({ngInjectableDef: getClosureSafeProperty});\nexport const NG_INJECTOR_DEF = getClosureSafeProperty({ngInjectorDef: getClosureSafeProperty});\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n/**\n * Special flag indicating that a decorator is of type `Inject`. It's used to make `Inject`\n * decorator tree-shakable (so we don't have to rely on the `instanceof` checks).\n * Note: this flag is not included into the `InjectFlags` since it's an internal-only API.\n */\nexport const enum DecoratorFlags {\n  Inject = -1\n}\n\n/**\n * Injection flags for DI.\n *\n * @publicApi\n * @deprecated use an options object for `inject` instead.\n */\nexport enum InjectFlags {\n  // TODO(alxhub): make this 'const' (and remove `InternalInjectFlags` enum) when ngc no longer\n  // writes exports of it into ngfactory files.\n\n  /** Check self and check parent injector if needed */\n  Default = 0b0000,\n\n  /**\n   * Specifies that an injector should retrieve a dependency from any injector until reaching the\n   * host element of the current component. (Only used with Element Injector)\n   */\n  Host = 0b0001,\n\n  /** Don't ascend to ancestors of the node requesting injection. */\n  Self = 0b0010,\n\n  /** Skip the node that is requesting injection. */\n  SkipSelf = 0b0100,\n\n  /** Inject `defaultValue` instead if token not found. */\n  Optional = 0b1000,\n}\n\n/**\n * This enum is an exact copy of the `InjectFlags` enum above, but the difference is that this is a\n * const enum, so actual enum values would be inlined in generated code. The `InjectFlags` enum can\n * be turned into a const enum when ViewEngine is removed (see TODO at the `InjectFlags` enum\n * above). The benefit of inlining is that we can use these flags at the top level without affecting\n * tree-shaking (see \"no-toplevel-property-access\" tslint rule for more info).\n * Keep this enum in sync with `InjectFlags` enum above.\n */\nexport const enum InternalInjectFlags {\n  /** Check self and check parent injector if needed */\n  Default = 0b0000,\n\n  /**\n   * Specifies that an injector should retrieve a dependency from any injector until reaching the\n   * host element of the current component. (Only used with Element Injector)\n   */\n  Host = 0b0001,\n\n  /** Don't ascend to ancestors of the node requesting injection. */\n  Self = 0b0010,\n\n  /** Skip the node that is requesting injection. */\n  SkipSelf = 0b0100,\n\n  /** Inject `defaultValue` instead if token not found. */\n  Optional = 0b1000,\n\n  /**\n   * This token is being injected into a pipe.\n   *\n   * This flag is intentionally not in the public facing `InjectFlags` because it is only added by\n   * the compiler and is not a developer applicable flag.\n   */\n  ForPipe = 0b10000,\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {throwProviderNotFoundError} from '../render3/errors_di';\nimport {assertNotEqual} from '../util/assert';\nimport {stringify} from '../util/stringify';\n\nimport {getInjectableDef, ɵɵInjectableDeclaration} from './interface/defs';\nimport {InjectFlags} from './interface/injector';\nimport {ProviderToken} from './provider_token';\n\n\n/**\n * Current implementation of inject.\n *\n * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n * way for two reasons:\n *  1. `Injector` should not depend on ivy logic.\n *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n */\nlet _injectImplementation: (<T>(token: ProviderToken<T>, flags?: InjectFlags) => T | null)|\n    undefined;\nexport function getInjectImplementation() {\n  return _injectImplementation;\n}\n\n\n/**\n * Sets the current inject implementation.\n */\nexport function setInjectImplementation(\n    impl: (<T>(token: ProviderToken<T>, flags?: InjectFlags) => T | null)|\n    undefined): (<T>(token: ProviderToken<T>, flags?: InjectFlags) => T | null)|undefined {\n  const previous = _injectImplementation;\n  _injectImplementation = impl;\n  return previous;\n}\n\n\n/**\n * Injects `root` tokens in limp mode.\n *\n * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n * injectable definition.\n */\nexport function injectRootLimpMode<T>(\n    token: ProviderToken<T>, notFoundValue: T|undefined, flags: InjectFlags): T|null {\n  const injectableDef: ɵɵInjectableDeclaration<T>|null = getInjectableDef(token);\n  if (injectableDef && injectableDef.providedIn == 'root') {\n    return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                                               injectableDef.value;\n  }\n  if (flags & InjectFlags.Optional) return null;\n  if (notFoundValue !== undefined) return notFoundValue;\n  throwProviderNotFoundError(stringify(token), 'Injector');\n}\n\n\n/**\n * Assert that `_injectImplementation` is not `fn`.\n *\n * This is useful, to prevent infinite recursion.\n *\n * @param fn Function which it should not equal to\n */\nexport function assertInjectImplementationNotEqual(\n    fn: (<T>(token: ProviderToken<T>, flags?: InjectFlags) => T | null)) {\n  ngDevMode &&\n      assertNotEqual(_injectImplementation, fn, 'Calling ɵɵinject would cause infinite recursion');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Convince closure compiler that the wrapped function has no side-effects.\n *\n * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n * It is important that the return value for the `noSideEffects` function be assigned\n * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n * compiler.\n */\nexport function noSideEffects<T>(fn: () => T): T {\n  return {toString: fn}.toString() as unknown as T;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n/**\n * The strategy that the default change detector uses to detect changes.\n * When set, takes effect the next time change detection is triggered.\n *\n * @see {@link ChangeDetectorRef#usage-notes Change detection usage}\n *\n * @publicApi\n */\nexport enum ChangeDetectionStrategy {\n  /**\n   * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n   * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n   * Change detection can still be explicitly invoked.\n   * This strategy applies to all child directives and cannot be overridden.\n   */\n  OnPush = 0,\n\n  /**\n   * Use the default `CheckAlways` strategy, in which change detection is automatic until\n   * explicitly deactivated.\n   */\n  Default = 1,\n}\n\n/**\n * Defines the possible states of the default change detector.\n * @see `ChangeDetectorRef`\n */\nexport enum ChangeDetectorStatus {\n  /**\n   * A state in which, after calling `detectChanges()`, the change detector\n   * state becomes `Checked`, and must be explicitly invoked or reactivated.\n   */\n  CheckOnce,\n\n  /**\n   * A state in which change detection is skipped until the change detector mode\n   * becomes `CheckOnce`.\n   */\n  Checked,\n\n  /**\n   * A state in which change detection continues automatically until explicitly\n   * deactivated.\n   */\n  CheckAlways,\n\n  /**\n   * A state in which a change detector sub tree is not a part of the main tree and\n   * should be skipped.\n   */\n  Detached,\n\n  /**\n   * Indicates that the change detector encountered an error checking a binding\n   * or calling a directive lifecycle method and is now in an inconsistent state. Change\n   * detectors in this state do not detect changes.\n   */\n  Errored,\n\n  /**\n   * Indicates that the change detector has been destroyed.\n   */\n  Destroyed,\n}\n\n/**\n * Reports whether a given strategy is currently the default for change detection.\n * @param changeDetectionStrategy The strategy to check.\n * @returns True if the given strategy is the current default, false otherwise.\n * @see `ChangeDetectorStatus`\n * @see `ChangeDetectorRef`\n */\nexport function isDefaultChangeDetectionStrategy(changeDetectionStrategy: ChangeDetectionStrategy):\n    boolean {\n  return changeDetectionStrategy == null ||\n      changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Defines the CSS styles encapsulation policies for the {@link Component} decorator's\n * `encapsulation` option.\n *\n * See {@link Component#encapsulation encapsulation}.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/ts/metadata/encapsulation.ts region='longform'}\n *\n * @publicApi\n */\nexport enum ViewEncapsulation {\n  // TODO: consider making `ViewEncapsulation` a `const enum` instead. See\n  // https://github.com/angular/angular/issues/44119 for additional information.\n\n  /**\n   * Emulates a native Shadow DOM encapsulation behavior by adding a specific attribute to the\n   * component's host element and applying the same attribute to all the CSS selectors provided\n   * via {@link Component#styles styles} or {@link Component#styleUrls styleUrls}.\n   *\n   * This is the default option.\n   */\n  Emulated = 0,\n\n  // Historically the 1 value was for `Native` encapsulation which has been removed as of v11.\n\n  /**\n   * Doesn't provide any sort of CSS style encapsulation, meaning that all the styles provided\n   * via {@link Component#styles styles} or {@link Component#styleUrls styleUrls} are applicable\n   * to any HTML element of the application regardless of their host Component.\n   */\n  None = 2,\n\n  /**\n   * Uses the browser's native Shadow DOM API to encapsulate CSS styles, meaning that it creates\n   * a ShadowRoot for the component's host element which is then used to encapsulate\n   * all the Component's styling.\n   */\n  ShadowDom = 3\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// TODO(jteplitz602): Load WorkerGlobalScope from lib.webworker.d.ts file #3492\ndeclare var WorkerGlobalScope: any /** TODO #9100 */;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\ndeclare var global: any /** TODO #9100 */;\n\n// Always use __globalThis if available, which is the spec-defined global variable across all\n// environments, then fallback to __global first, because in Node tests both __global and\n// __window may be defined and _global should be __global in that case. Note: Typeof/Instanceof\n// checks are considered side-effects in Terser. We explicitly mark this as side-effect free:\n// https://github.com/terser/terser/issues/250.\nconst _global: any = (/* @__PURE__ */ (\n    () => (typeof globalThis !== 'undefined' && globalThis) ||\n        (typeof global !== 'undefined' && global) || (typeof window !== 'undefined' && window) ||\n        (typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n         self instanceof WorkerGlobalScope && self))());\n\n/**\n * Attention: whenever providing a new value, be sure to add an\n * entry into the corresponding `....externs.js` file,\n * so that closure won't use that global for its purposes.\n */\nexport {_global as global};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {initNgDevMode} from './ng_dev_mode';\n\n/**\n * This file contains reuseable \"empty\" symbols that can be used as default return values\n * in different parts of the rendering code. Because the same symbols are returned, this\n * allows for identity checks against these values to be consistently used by the framework\n * code.\n */\n\nexport const EMPTY_OBJ: {} = {};\nexport const EMPTY_ARRAY: any[] = [];\n\n// freezing the values prevents any code from accidentally inserting new values in\nif ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) {\n  // These property accesses can be ignored because ngDevMode will be set to false\n  // when optimizing code and the whole if statement will be dropped.\n  // tslint:disable-next-line:no-toplevel-property-access\n  Object.freeze(EMPTY_OBJ);\n  // tslint:disable-next-line:no-toplevel-property-access\n  Object.freeze(EMPTY_ARRAY);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getClosureSafeProperty} from '../util/property';\n\nexport const NG_COMP_DEF = getClosureSafeProperty({ɵcmp: getClosureSafeProperty});\nexport const NG_DIR_DEF = getClosureSafeProperty({ɵdir: getClosureSafeProperty});\nexport const NG_PIPE_DEF = getClosureSafeProperty({ɵpipe: getClosureSafeProperty});\nexport const NG_MOD_DEF = getClosureSafeProperty({ɵmod: getClosureSafeProperty});\nexport const NG_FACTORY_DEF = getClosureSafeProperty({ɵfac: getClosureSafeProperty});\n\n/**\n * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n * the key and the directive's unique ID as the value. This allows us to map directives to their\n * bloom filter bit for DI.\n */\n// TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\nexport const NG_ELEMENT_ID = getClosureSafeProperty({__NG_ELEMENT_ID__: getClosureSafeProperty});\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy} from '../change_detection/constants';\nimport {Mutable, Type} from '../interface/type';\nimport {NgModuleDef, NgModuleType} from '../metadata/ng_module_def';\nimport {SchemaMetadata} from '../metadata/schema';\nimport {ViewEncapsulation} from '../metadata/view';\nimport {noSideEffects} from '../util/closure';\nimport {EMPTY_ARRAY, EMPTY_OBJ} from '../util/empty';\nimport {initNgDevMode} from '../util/ng_dev_mode';\nimport {stringify} from '../util/stringify';\n\nimport {NG_COMP_DEF, NG_DIR_DEF, NG_MOD_DEF, NG_PIPE_DEF} from './fields';\nimport {ComponentDef, ComponentDefFeature, ComponentTemplate, ComponentType, ContentQueriesFunction, DependencyTypeList, DirectiveDef, DirectiveDefFeature, DirectiveDefList, HostBindingsFunction, PipeDef, PipeDefList, TypeOrFactory, ViewQueriesFunction} from './interfaces/definition';\nimport {TAttributes, TConstantsOrFactory} from './interfaces/node';\nimport {CssSelectorList} from './interfaces/projection';\n\n\n/** Counter used to generate unique IDs for component definitions. */\nlet componentDefCount = 0;\n\n\n/**\n * Create a component definition object.\n *\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ɵcmp = defineComponent({\n *     ...\n *   });\n * }\n * ```\n * @codeGenApi\n */\nexport function ɵɵdefineComponent<T>(componentDefinition: {\n  /**\n   * Directive type, needed to configure the injector.\n   */\n  type: Type<T>;\n\n  /** The selectors that will be used to match nodes to this component. */\n  selectors?: CssSelectorList;\n\n  /**\n   * The number of nodes, local refs, and pipes in this component template.\n   *\n   * Used to calculate the length of this component's LView array, so we\n   * can pre-fill the array and set the binding start index.\n   */\n  // TODO(kara): remove queries from this count\n  decls: number;\n\n  /**\n   * The number of bindings in this component template (including pure fn bindings).\n   *\n   * Used to calculate the length of this component's LView array, so we\n   * can pre-fill the array and set the host binding start index.\n   */\n  vars: number;\n\n  /**\n   * A map of input names.\n   *\n   * The format is in: `{[actualPropertyName: string]:(string|[string, string])}`.\n   *\n   * Given:\n   * ```\n   * class MyComponent {\n   *   @Input()\n   *   publicInput1: string;\n   *\n   *   @Input('publicInput2')\n   *   declaredInput2: string;\n   * }\n   * ```\n   *\n   * is described as:\n   * ```\n   * {\n   *   publicInput1: 'publicInput1',\n   *   declaredInput2: ['publicInput2', 'declaredInput2'],\n   * }\n   * ```\n   *\n   * Which the minifier may translate to:\n   * ```\n   * {\n   *   minifiedPublicInput1: 'publicInput1',\n   *   minifiedDeclaredInput2: ['publicInput2', 'declaredInput2'],\n   * }\n   * ```\n   *\n   * This allows the render to re-construct the minified, public, and declared names\n   * of properties.\n   *\n   * NOTE:\n   *  - Because declared and public name are usually same we only generate the array\n   *    `['public', 'declared']` format when they differ.\n   *  - The reason why this API and `outputs` API is not the same is that `NgOnChanges` has\n   *    inconsistent behavior in that it uses declared names rather than minified or public. For\n   *    this reason `NgOnChanges` will be deprecated and removed in future version and this\n   *    API will be simplified to be consistent with `output`.\n   */\n  inputs?: {[P in keyof T]?: string | [string, string]};\n\n  /**\n   * A map of output names.\n   *\n   * The format is in: `{[actualPropertyName: string]:string}`.\n   *\n   * Which the minifier may translate to: `{[minifiedPropertyName: string]:string}`.\n   *\n   * This allows the render to re-construct the minified and non-minified names\n   * of properties.\n   */\n  outputs?: {[P in keyof T]?: string};\n\n  /**\n   * Function executed by the parent template to allow child directive to apply host bindings.\n   */\n  hostBindings?: HostBindingsFunction<T>;\n\n  /**\n   * The number of bindings in this directive `hostBindings` (including pure fn bindings).\n   *\n   * Used to calculate the length of the component's LView array, so we\n   * can pre-fill the array and set the host binding start index.\n   */\n  hostVars?: number;\n\n  /**\n   * Assign static attribute values to a host element.\n   *\n   * This property will assign static attribute values as well as class and style\n   * values to a host element. Since attribute values can consist of different types of values, the\n   * `hostAttrs` array must include the values in the following format:\n   *\n   * attrs = [\n   *   // static attributes (like `title`, `name`, `id`...)\n   *   attr1, value1, attr2, value,\n   *\n   *   // a single namespace value (like `x:id`)\n   *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n   *\n   *   // another single namespace value (like `x:name`)\n   *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n   *\n   *   // a series of CSS classes that will be applied to the element (no spaces)\n   *   CLASSES_MARKER, class1, class2, class3,\n   *\n   *   // a series of CSS styles (property + value) that will be applied to the element\n   *   STYLES_MARKER, prop1, value1, prop2, value2\n   * ]\n   *\n   * All non-class and non-style attributes must be defined at the start of the list\n   * first before all class and style values are set. When there is a change in value\n   * type (like when classes and styles are introduced) a marker must be used to separate\n   * the entries. The marker values themselves are set via entries found in the\n   * [AttributeMarker] enum.\n   */\n  hostAttrs?: TAttributes;\n\n  /**\n   * Function to create instances of content queries associated with a given directive.\n   */\n  contentQueries?: ContentQueriesFunction<T>;\n\n  /**\n   * Defines the name that can be used in the template to assign this directive to a variable.\n   *\n   * See: {@link Directive.exportAs}\n   */\n  exportAs?: string[];\n\n  /**\n   * Template function use for rendering DOM.\n   *\n   * This function has following structure.\n   *\n   * ```\n   * function Template<T>(ctx:T, creationMode: boolean) {\n   *   if (creationMode) {\n   *     // Contains creation mode instructions.\n   *   }\n   *   // Contains binding update instructions\n   * }\n   * ```\n   *\n   * Common instructions are:\n   * Creation mode instructions:\n   *  - `elementStart`, `elementEnd`\n   *  - `text`\n   *  - `container`\n   *  - `listener`\n   *\n   * Binding update instructions:\n   * - `bind`\n   * - `elementAttribute`\n   * - `elementProperty`\n   * - `elementClass`\n   * - `elementStyle`\n   *\n   */\n  template: ComponentTemplate<T>;\n\n  /**\n   * Constants for the nodes in the component's view.\n   * Includes attribute arrays, local definition arrays etc.\n   */\n  consts?: TConstantsOrFactory;\n\n  /**\n   * An array of `ngContent[selector]` values that were found in the template.\n   */\n  ngContentSelectors?: string[];\n\n  /**\n   * Additional set of instructions specific to view query processing. This could be seen as a\n   * set of instruction to be inserted into the template function.\n   *\n   * Query-related instructions need to be pulled out to a specific function as a timing of\n   * execution is different as compared to all other instructions (after change detection hooks but\n   * before view hooks).\n   */\n  viewQuery?: ViewQueriesFunction<T>| null;\n\n  /**\n   * A list of optional features to apply.\n   *\n   * See: {@link NgOnChangesFeature}, {@link ProvidersFeature}\n   */\n  features?: ComponentDefFeature[];\n\n  /**\n   * Defines template and style encapsulation options available for Component's {@link Component}.\n   */\n  encapsulation?: ViewEncapsulation;\n\n  /**\n   * Defines arbitrary developer-defined data to be stored on a renderer instance.\n   * This is useful for renderers that delegate to other renderers.\n   *\n   * see: animation\n   */\n  data?: {[kind: string]: any};\n\n  /**\n   * A set of styles that the component needs to be present for component to render correctly.\n   */\n  styles?: string[];\n\n  /**\n   * The strategy that the default change detector uses to detect changes.\n   * When set, takes effect the next time change detection is triggered.\n   */\n  changeDetection?: ChangeDetectionStrategy;\n\n  /**\n   * Registry of directives, components, and pipes that may be found in this component's view.\n   *\n   * This property is either an array of types or a function that returns the array of types. This\n   * function may be necessary to support forward declarations.\n   */\n  dependencies?: TypeOrFactory<DependencyTypeList>;\n\n  /**\n   * The set of schemas that declare elements to be allowed in the component's template.\n   */\n  schemas?: SchemaMetadata[] | null;\n\n  /**\n   * Whether this directive/component is standalone.\n   */\n  standalone?: boolean;\n}): unknown {\n  return noSideEffects(() => {\n    // Initialize ngDevMode. This must be the first statement in ɵɵdefineComponent.\n    // See the `initNgDevMode` docstring for more information.\n    (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n\n    const type = componentDefinition.type;\n    const standalone = componentDefinition.standalone === true;\n    const declaredInputs: {[key: string]: string} = {} as any;\n    const def: Mutable<ComponentDef<any>, keyof ComponentDef<any>> = {\n      type: type,\n      providersResolver: null,\n      decls: componentDefinition.decls,\n      vars: componentDefinition.vars,\n      factory: null,\n      template: componentDefinition.template || null!,\n      consts: componentDefinition.consts || null,\n      ngContentSelectors: componentDefinition.ngContentSelectors,\n      hostBindings: componentDefinition.hostBindings || null,\n      hostVars: componentDefinition.hostVars || 0,\n      hostAttrs: componentDefinition.hostAttrs || null,\n      contentQueries: componentDefinition.contentQueries || null,\n      declaredInputs: declaredInputs,\n      inputs: null!,   // assigned in noSideEffects\n      outputs: null!,  // assigned in noSideEffects\n      exportAs: componentDefinition.exportAs || null,\n      onPush: componentDefinition.changeDetection === ChangeDetectionStrategy.OnPush,\n      directiveDefs: null!,  // assigned in noSideEffects\n      pipeDefs: null!,       // assigned in noSideEffects\n      standalone,\n      dependencies: standalone && componentDefinition.dependencies || null,\n      getStandaloneInjector: null,\n      selectors: componentDefinition.selectors || EMPTY_ARRAY,\n      viewQuery: componentDefinition.viewQuery || null,\n      features: componentDefinition.features as DirectiveDefFeature[] || null,\n      data: componentDefinition.data || {},\n      encapsulation: componentDefinition.encapsulation || ViewEncapsulation.Emulated,\n      id: `c${componentDefCount++}`,\n      styles: componentDefinition.styles || EMPTY_ARRAY,\n      _: null,\n      setInput: null,\n      schemas: componentDefinition.schemas || null,\n      tView: null,\n    };\n    const dependencies = componentDefinition.dependencies;\n    const feature = componentDefinition.features;\n    def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n    def.outputs = invertObject(componentDefinition.outputs),\n    feature && feature.forEach((fn) => fn(def));\n    def.directiveDefs = dependencies ?\n        (() => (typeof dependencies === 'function' ? dependencies() : dependencies)\n                   .map(extractDirectiveDef)\n                   .filter(nonNull)) :\n        null;\n    def.pipeDefs = dependencies ?\n        (() => (typeof dependencies === 'function' ? dependencies() : dependencies)\n                   .map(getPipeDef)\n                   .filter(nonNull)) :\n        null;\n\n    return def;\n  });\n}\n\n/**\n * Generated next to NgModules to monkey-patch directive and pipe references onto a component's\n * definition, when generating a direct reference in the component file would otherwise create an\n * import cycle.\n *\n * See [this explanation](https://hackmd.io/Odw80D0pR6yfsOjg_7XCJg?view) for more details.\n *\n * @codeGenApi\n */\nexport function ɵɵsetComponentScope(\n    type: ComponentType<any>, directives: Type<any>[]|(() => Type<any>[]),\n    pipes: Type<any>[]|(() => Type<any>[])): void {\n  const def = (type.ɵcmp as ComponentDef<any>);\n  def.directiveDefs = () =>\n      (typeof directives === 'function' ? directives() : directives).map(extractDirectiveDef) as\n      DirectiveDefList;\n  def.pipeDefs = () =>\n      (typeof pipes === 'function' ? pipes() : pipes).map(getPipeDef) as PipeDefList;\n}\n\nexport function extractDirectiveDef(type: Type<any>): DirectiveDef<any>|ComponentDef<any>|null {\n  return getComponentDef(type) || getDirectiveDef(type);\n}\n\nfunction nonNull<T>(value: T|null): value is T {\n  return value !== null;\n}\n\nexport const autoRegisterModuleById: {[id: string]: NgModuleType} = {};\n\n/**\n * @codeGenApi\n */\nexport function ɵɵdefineNgModule<T>(def: {\n  /** Token representing the module. Used by DI. */\n  type: T;\n\n  /** List of components to bootstrap. */\n  bootstrap?: Type<any>[] | (() => Type<any>[]);\n\n  /** List of components, directives, and pipes declared by this module. */\n  declarations?: Type<any>[] | (() => Type<any>[]);\n\n  /** List of modules or `ModuleWithProviders` imported by this module. */\n  imports?: Type<any>[] | (() => Type<any>[]);\n\n  /**\n   * List of modules, `ModuleWithProviders`, components, directives, or pipes exported by this\n   * module.\n   */\n  exports?: Type<any>[] | (() => Type<any>[]);\n\n  /** The set of schemas that declare elements to be allowed in the NgModule. */\n  schemas?: SchemaMetadata[] | null;\n\n  /** Unique ID for the module that is used with `getModuleFactory`. */\n  id?: string | null;\n}): unknown {\n  return noSideEffects(() => {\n    const res: NgModuleDef<T> = {\n      type: def.type,\n      bootstrap: def.bootstrap || EMPTY_ARRAY,\n      declarations: def.declarations || EMPTY_ARRAY,\n      imports: def.imports || EMPTY_ARRAY,\n      exports: def.exports || EMPTY_ARRAY,\n      transitiveCompileScopes: null,\n      schemas: def.schemas || null,\n      id: def.id || null,\n    };\n    if (def.id != null) {\n      autoRegisterModuleById[def.id!] = def.type as unknown as NgModuleType;\n    }\n    return res;\n  });\n}\n\n/**\n * Adds the module metadata that is necessary to compute the module's transitive scope to an\n * existing module definition.\n *\n * Scope metadata of modules is not used in production builds, so calls to this function can be\n * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n * to become eligible for tree-shaking as well.\n *\n * @codeGenApi\n */\nexport function ɵɵsetNgModuleScope(type: any, scope: {\n  /** List of components, directives, and pipes declared by this module. */\n  declarations?: Type<any>[]|(() => Type<any>[]);\n\n  /** List of modules or `ModuleWithProviders` imported by this module. */\n  imports?: Type<any>[] | (() => Type<any>[]);\n\n  /**\n   * List of modules, `ModuleWithProviders`, components, directives, or pipes exported by this\n   * module.\n   */\n  exports?: Type<any>[] | (() => Type<any>[]);\n}): unknown {\n  return noSideEffects(() => {\n    const ngModuleDef = getNgModuleDef(type, true);\n    ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n    ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n    ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n  });\n}\n\n/**\n * Inverts an inputs or outputs lookup such that the keys, which were the\n * minified keys, are part of the values, and the values are parsed so that\n * the publicName of the property is the new key\n *\n * e.g. for\n *\n * ```\n * class Comp {\n *   @Input()\n *   propName1: string;\n *\n *   @Input('publicName2')\n *   declaredPropName2: number;\n * }\n * ```\n *\n * will be serialized as\n *\n * ```\n * {\n *   propName1: 'propName1',\n *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n * }\n * ```\n *\n * which is than translated by the minifier as:\n *\n * ```\n * {\n *   minifiedPropName1: 'propName1',\n *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n * }\n * ```\n *\n * becomes: (public name => minifiedName)\n *\n * ```\n * {\n *  'propName1': 'minifiedPropName1',\n *  'publicName2': 'minifiedPropName2',\n * }\n * ```\n *\n * Optionally the function can take `secondary` which will result in: (public name => declared name)\n *\n * ```\n * {\n *  'propName1': 'propName1',\n *  'publicName2': 'declaredPropName2',\n * }\n * ```\n *\n\n */\nfunction invertObject<T>(\n    obj?: {[P in keyof T]?: string|[string, string]},\n    secondary?: {[key: string]: string}): {[P in keyof T]: string} {\n  if (obj == null) return EMPTY_OBJ as any;\n  const newLookup: any = {};\n  for (const minifiedKey in obj) {\n    if (obj.hasOwnProperty(minifiedKey)) {\n      let publicName: string|[string, string] = obj[minifiedKey]!;\n      let declaredName = publicName;\n      if (Array.isArray(publicName)) {\n        declaredName = publicName[1];\n        publicName = publicName[0];\n      }\n      newLookup[publicName] = minifiedKey;\n      if (secondary) {\n        (secondary[publicName] = declaredName as string);\n      }\n    }\n  }\n  return newLookup;\n}\n\n/**\n * Create a directive definition object.\n *\n * # Example\n * ```ts\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ɵdir = ɵɵdefineDirective({\n *     ...\n *   });\n * }\n * ```\n *\n * @codeGenApi\n */\nexport const ɵɵdefineDirective =\n    ɵɵdefineComponent as any as<T>(directiveDefinition: {\n      /**\n       * Directive type, needed to configure the injector.\n       */\n      type: Type<T>;\n\n      /** The selectors that will be used to match nodes to this directive. */\n      selectors?: CssSelectorList;\n\n      /**\n       * A map of input names.\n       *\n       * The format is in: `{[actualPropertyName: string]:(string|[string, string])}`.\n       *\n       * Given:\n       * ```\n       * class MyComponent {\n       *   @Input()\n       *   publicInput1: string;\n       *\n       *   @Input('publicInput2')\n       *   declaredInput2: string;\n       * }\n       * ```\n       *\n       * is described as:\n       * ```\n       * {\n       *   publicInput1: 'publicInput1',\n       *   declaredInput2: ['declaredInput2', 'publicInput2'],\n       * }\n       * ```\n       *\n       * Which the minifier may translate to:\n       * ```\n       * {\n       *   minifiedPublicInput1: 'publicInput1',\n       *   minifiedDeclaredInput2: [ 'publicInput2', 'declaredInput2'],\n       * }\n       * ```\n       *\n       * This allows the render to re-construct the minified, public, and declared names\n       * of properties.\n       *\n       * NOTE:\n       *  - Because declared and public name are usually same we only generate the array\n       *    `['declared', 'public']` format when they differ.\n       *  - The reason why this API and `outputs` API is not the same is that `NgOnChanges` has\n       *    inconsistent behavior in that it uses declared names rather than minified or public. For\n       *    this reason `NgOnChanges` will be deprecated and removed in future version and this\n       *    API will be simplified to be consistent with `output`.\n       */\n      inputs?: {[P in keyof T]?: string | [string, string]};\n\n      /**\n       * A map of output names.\n       *\n       * The format is in: `{[actualPropertyName: string]:string}`.\n       *\n       * Which the minifier may translate to: `{[minifiedPropertyName: string]:string}`.\n       *\n       * This allows the render to re-construct the minified and non-minified names\n       * of properties.\n       */\n      outputs?: {[P in keyof T]?: string};\n\n      /**\n       * A list of optional features to apply.\n       *\n       * See: {@link NgOnChangesFeature}, {@link ProvidersFeature}, {@link InheritDefinitionFeature}\n       */\n      features?: DirectiveDefFeature[];\n\n      /**\n       * Function executed by the parent template to allow child directive to apply host bindings.\n       */\n      hostBindings?: HostBindingsFunction<T>;\n\n      /**\n       * The number of bindings in this directive `hostBindings` (including pure fn bindings).\n       *\n       * Used to calculate the length of the component's LView array, so we\n       * can pre-fill the array and set the host binding start index.\n       */\n      hostVars?: number;\n\n      /**\n       * Assign static attribute values to a host element.\n       *\n       * This property will assign static attribute values as well as class and style\n       * values to a host element. Since attribute values can consist of different types of values,\n       * the `hostAttrs` array must include the values in the following format:\n       *\n       * attrs = [\n       *   // static attributes (like `title`, `name`, `id`...)\n       *   attr1, value1, attr2, value,\n       *\n       *   // a single namespace value (like `x:id`)\n       *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n       *\n       *   // another single namespace value (like `x:name`)\n       *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n       *\n       *   // a series of CSS classes that will be applied to the element (no spaces)\n       *   CLASSES_MARKER, class1, class2, class3,\n       *\n       *   // a series of CSS styles (property + value) that will be applied to the element\n       *   STYLES_MARKER, prop1, value1, prop2, value2\n       * ]\n       *\n       * All non-class and non-style attributes must be defined at the start of the list\n       * first before all class and style values are set. When there is a change in value\n       * type (like when classes and styles are introduced) a marker must be used to separate\n       * the entries. The marker values themselves are set via entries found in the\n       * [AttributeMarker] enum.\n       */\n      hostAttrs?: TAttributes;\n\n      /**\n       * Function to create instances of content queries associated with a given directive.\n       */\n      contentQueries?: ContentQueriesFunction<T>;\n\n      /**\n       * Additional set of instructions specific to view query processing. This could be seen as a\n       * set of instructions to be inserted into the template function.\n       */\n      viewQuery?: ViewQueriesFunction<T>| null;\n\n      /**\n       * Defines the name that can be used in the template to assign this directive to a variable.\n       *\n       * See: {@link Directive.exportAs}\n       */\n      exportAs?: string[];\n    }) => never;\n\n/**\n * Create a pipe definition object.\n *\n * # Example\n * ```\n * class MyPipe implements PipeTransform {\n *   // Generated by Angular Template Compiler\n *   static ɵpipe = definePipe({\n *     ...\n *   });\n * }\n * ```\n * @param pipeDef Pipe definition generated by the compiler\n *\n * @codeGenApi\n */\nexport function ɵɵdefinePipe<T>(pipeDef: {\n  /** Name of the pipe. Used for matching pipes in template to pipe defs. */\n  name: string,\n\n  /** Pipe class reference. Needed to extract pipe lifecycle hooks. */\n  type: Type<T>,\n\n  /** Whether the pipe is pure. */\n  pure?: boolean,\n\n  /**\n   * Whether the pipe is standalone.\n   */\n  standalone?: boolean,\n}): unknown {\n  return (<PipeDef<T>>{\n    type: pipeDef.type,\n    name: pipeDef.name,\n    factory: null,\n    pure: pipeDef.pure !== false,\n    standalone: pipeDef.standalone === true,\n    onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n  });\n}\n\n/**\n * The following getter methods retrieve the definition from the type. Currently the retrieval\n * honors inheritance, but in the future we may change the rule to require that definitions are\n * explicit. This would require some sort of migration strategy.\n */\n\nexport function getComponentDef<T>(type: any): ComponentDef<T>|null {\n  return type[NG_COMP_DEF] || null;\n}\n\nexport function getDirectiveDef<T>(type: any): DirectiveDef<T>|null {\n  return type[NG_DIR_DEF] || null;\n}\n\nexport function getPipeDef<T>(type: any): PipeDef<T>|null {\n  return type[NG_PIPE_DEF] || null;\n}\n\nexport function getNgModuleDef<T>(type: any, throwNotFound: true): NgModuleDef<T>;\nexport function getNgModuleDef<T>(type: any): NgModuleDef<T>|null;\nexport function getNgModuleDef<T>(type: any, throwNotFound?: boolean): NgModuleDef<T>|null {\n  const ngModuleDef = type[NG_MOD_DEF] || null;\n  if (!ngModuleDef && throwNotFound === true) {\n    throw new Error(`Type ${stringify(type)} does not have 'ɵmod' property.`);\n  }\n  return ngModuleDef;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../../di/injector';\nimport {ProviderToken} from '../../di/provider_token';\nimport {Type} from '../../interface/type';\nimport {SchemaMetadata} from '../../metadata/schema';\nimport {Sanitizer} from '../../sanitization/sanitizer';\n\nimport {LContainer} from './container';\nimport {ComponentDef, ComponentTemplate, DirectiveDef, DirectiveDefList, HostBindingsFunction, PipeDef, PipeDefList, ViewQueriesFunction} from './definition';\nimport {I18nUpdateOpCodes, TI18n, TIcu} from './i18n';\nimport {TConstants, TNode} from './node';\nimport {PlayerHandler} from './player';\nimport {LQueries, TQueries} from './query';\nimport {Renderer, RendererFactory} from './renderer';\nimport {RComment, RElement} from './renderer_dom';\nimport {TStylingKey, TStylingRange} from './styling';\n\n\n\n// Below are constants for LView indices to help us look up LView members\n// without having to remember the specific indices.\n// Uglify will inline these when minifying so there shouldn't be a cost.\nexport const HOST = 0;\nexport const TVIEW = 1;\nexport const FLAGS = 2;\nexport const PARENT = 3;\nexport const NEXT = 4;\nexport const TRANSPLANTED_VIEWS_TO_REFRESH = 5;\nexport const T_HOST = 6;\nexport const CLEANUP = 7;\nexport const CONTEXT = 8;\nexport const INJECTOR = 9;\nexport const RENDERER_FACTORY = 10;\nexport const RENDERER = 11;\nexport const SANITIZER = 12;\nexport const CHILD_HEAD = 13;\nexport const CHILD_TAIL = 14;\n// FIXME(misko): Investigate if the three declarations aren't all same thing.\nexport const DECLARATION_VIEW = 15;\nexport const DECLARATION_COMPONENT_VIEW = 16;\nexport const DECLARATION_LCONTAINER = 17;\nexport const PREORDER_HOOK_FLAGS = 18;\nexport const QUERIES = 19;\nexport const ID = 20;\nexport const EMBEDDED_VIEW_INJECTOR = 21;\n/**\n * Size of LView's header. Necessary to adjust for it when setting slots.\n *\n * IMPORTANT: `HEADER_OFFSET` should only be referred to the in the `ɵɵ*` instructions to translate\n * instruction index into `LView` index. All other indexes should be in the `LView` index space and\n * there should be no need to refer to `HEADER_OFFSET` anywhere else.\n */\nexport const HEADER_OFFSET = 22;\n\n\n// This interface replaces the real LView interface if it is an arg or a\n// return value of a public instruction. This ensures we don't need to expose\n// the actual interface, which should be kept private.\nexport interface OpaqueViewState {\n  '__brand__': 'Brand for OpaqueViewState that nothing will match';\n}\n\n\n/**\n * `LView` stores all of the information needed to process the instructions as\n * they are invoked from the template. Each embedded view and component view has its\n * own `LView`. When processing a particular view, we set the `viewData` to that\n * `LView`. When that view is done processing, the `viewData` is set back to\n * whatever the original `viewData` was before (the parent `LView`).\n *\n * Keeping separate state for each view facilities view insertion / deletion, so we\n * don't have to edit the data array based on which views are present.\n */\nexport interface LView<T = unknown> extends Array<any> {\n  /**\n   * Human readable representation of the `LView`.\n   *\n   * NOTE: This property only exists if `ngDevMode` is set to `true` and it is not present in\n   * production. Its presence is purely to help debug issue in development, and should not be relied\n   * on in production application.\n   */\n  debug?: LViewDebug;\n\n  /**\n   * The node into which this `LView` is inserted.\n   */\n  [HOST]: RElement|null;\n\n  /**\n   * The static data for this view. We need a reference to this so we can easily walk up the\n   * node tree in DI and get the TView.data array associated with a node (where the\n   * directive defs are stored).\n   */\n  readonly[TVIEW]: TView;\n\n  /** Flags for this view. See LViewFlags for more info. */\n  [FLAGS]: LViewFlags;\n\n  /**\n   * This may store an {@link LView} or {@link LContainer}.\n   *\n   * `LView` - The parent view. This is needed when we exit the view and must restore the previous\n   * LView. Without this, the render method would have to keep a stack of\n   * views as it is recursively rendering templates.\n   *\n   * `LContainer` - The current view is part of a container, and is an embedded view.\n   */\n  [PARENT]: LView|LContainer|null;\n\n  /**\n   *\n   * The next sibling LView or LContainer.\n   *\n   * Allows us to propagate between sibling view states that aren't in the same\n   * container. Embedded views already have a node.next, but it is only set for\n   * views in the same container. We need a way to link component views and views\n   * across containers as well.\n   */\n  [NEXT]: LView|LContainer|null;\n\n  /** Queries active for this view - nodes from a view are reported to those queries. */\n  [QUERIES]: LQueries|null;\n\n  /**\n   * Store the `TNode` of the location where the current `LView` is inserted into.\n   *\n   * Given:\n   * ```\n   * <div>\n   *   <ng-template><span></span></ng-template>\n   * </div>\n   * ```\n   *\n   * We end up with two `TView`s.\n   * - `parent` `TView` which contains `<div><!-- anchor --></div>`\n   * - `child` `TView` which contains `<span></span>`\n   *\n   * Typically the `child` is inserted into the declaration location of the `parent`, but it can be\n   * inserted anywhere. Because it can be inserted anywhere it is not possible to store the\n   * insertion information in the `TView` and instead we must store it in the `LView[T_HOST]`.\n   *\n   * So to determine where is our insertion parent we would execute:\n   * ```\n   * const parentLView = lView[PARENT];\n   * const parentTNode = lView[T_HOST];\n   * const insertionParent = parentLView[parentTNode.index];\n   * ```\n   *\n   *\n   * If `null`, this is the root view of an application (root component is in this view) and it has\n   * no parents.\n   */\n  [T_HOST]: TNode|null;\n\n  /**\n   * When a view is destroyed, listeners need to be released and outputs need to be\n   * unsubscribed. This context array stores both listener functions wrapped with\n   * their context and output subscription instances for a particular view.\n   *\n   * These change per LView instance, so they cannot be stored on TView. Instead,\n   * TView.cleanup saves an index to the necessary context in this array.\n   *\n   * After `LView` is created it is possible to attach additional instance specific functions at the\n   * end of the `lView[CLEANUP]` because we know that no more `T` level cleanup functions will be\n   * added here.\n   */\n  [CLEANUP]: any[]|null;\n\n  /**\n   * - For dynamic views, this is the context with which to render the template (e.g.\n   *   `NgForContext`), or `{}` if not defined explicitly.\n   * - For root view of the root component the context contains change detection data.\n   * - For non-root components, the context is the component instance,\n   * - For inline views, the context is null.\n   */\n  [CONTEXT]: T;\n\n  /** An optional Module Injector to be used as fall back after Element Injectors are consulted. */\n  readonly[INJECTOR]: Injector|null;\n\n  /** Factory to be used for creating Renderer. */\n  [RENDERER_FACTORY]: RendererFactory;\n\n  /** Renderer to be used for this view. */\n  [RENDERER]: Renderer;\n\n  /** An optional custom sanitizer. */\n  [SANITIZER]: Sanitizer|null;\n\n  /**\n   * Reference to the first LView or LContainer beneath this LView in\n   * the hierarchy.\n   *\n   * Necessary to store this so views can traverse through their nested views\n   * to remove listeners and call onDestroy callbacks.\n   */\n  [CHILD_HEAD]: LView|LContainer|null;\n\n  /**\n   * The last LView or LContainer beneath this LView in the hierarchy.\n   *\n   * The tail allows us to quickly add a new state to the end of the view list\n   * without having to propagate starting from the first child.\n   */\n  [CHILD_TAIL]: LView|LContainer|null;\n\n  /**\n   * View where this view's template was declared.\n   *\n   * The template for a dynamically created view may be declared in a different view than\n   * it is inserted. We already track the \"insertion view\" (view where the template was\n   * inserted) in LView[PARENT], but we also need access to the \"declaration view\"\n   * (view where the template was declared). Otherwise, we wouldn't be able to call the\n   * view's template function with the proper contexts. Context should be inherited from\n   * the declaration view tree, not the insertion view tree.\n   *\n   * Example (AppComponent template):\n   *\n   * <ng-template #foo></ng-template>       <-- declared here -->\n   * <some-comp [tpl]=\"foo\"></some-comp>    <-- inserted inside this component -->\n   *\n   * The <ng-template> above is declared in the AppComponent template, but it will be passed into\n   * SomeComp and inserted there. In this case, the declaration view would be the AppComponent,\n   * but the insertion view would be SomeComp. When we are removing views, we would want to\n   * traverse through the insertion view to clean up listeners. When we are calling the\n   * template function during change detection, we need the declaration view to get inherited\n   * context.\n   */\n  [DECLARATION_VIEW]: LView|null;\n\n\n  /**\n   * Points to the declaration component view, used to track transplanted `LView`s.\n   *\n   * See: `DECLARATION_VIEW` which points to the actual `LView` where it was declared, whereas\n   * `DECLARATION_COMPONENT_VIEW` points to the component which may not be same as\n   * `DECLARATION_VIEW`.\n   *\n   * Example:\n   * ```\n   * <#VIEW #myComp>\n   *  <div *ngIf=\"true\">\n   *   <ng-template #myTmpl>...</ng-template>\n   *  </div>\n   * </#VIEW>\n   * ```\n   * In the above case `DECLARATION_VIEW` for `myTmpl` points to the `LView` of `ngIf` whereas\n   * `DECLARATION_COMPONENT_VIEW` points to `LView` of the `myComp` which owns the template.\n   *\n   * The reason for this is that all embedded views are always check-always whereas the component\n   * view can be check-always or on-push. When we have a transplanted view it is important to\n   * determine if we have transplanted a view from check-always declaration to on-push insertion\n   * point. In such a case the transplanted view needs to be added to the `LContainer` in the\n   * declared `LView` and CD during the declared view CD (in addition to the CD at the insertion\n   * point.) (Any transplanted views which are intra Component are of no interest because the CD\n   * strategy of declaration and insertion will always be the same, because it is the same\n   * component.)\n   *\n   * Queries already track moved views in `LView[DECLARATION_LCONTAINER]` and\n   * `LContainer[MOVED_VIEWS]`. However the queries also track `LView`s which moved within the same\n   * component `LView`. Transplanted views are a subset of moved views, and we use\n   * `DECLARATION_COMPONENT_VIEW` to differentiate them. As in this example.\n   *\n   * Example showing intra component `LView` movement.\n   * ```\n   * <#VIEW #myComp>\n   *   <div *ngIf=\"condition; then thenBlock else elseBlock\"></div>\n   *   <ng-template #thenBlock>Content to render when condition is true.</ng-template>\n   *   <ng-template #elseBlock>Content to render when condition is false.</ng-template>\n   * </#VIEW>\n   * ```\n   * The `thenBlock` and `elseBlock` is moved but not transplanted.\n   *\n   * Example showing inter component `LView` movement (transplanted view).\n   * ```\n   * <#VIEW #myComp>\n   *   <ng-template #myTmpl>...</ng-template>\n   *   <insertion-component [template]=\"myTmpl\"></insertion-component>\n   * </#VIEW>\n   * ```\n   * In the above example `myTmpl` is passed into a different component. If `insertion-component`\n   * instantiates `myTmpl` and `insertion-component` is on-push then the `LContainer` needs to be\n   * marked as containing transplanted views and those views need to be CD as part of the\n   * declaration CD.\n   *\n   *\n   * When change detection runs, it iterates over `[MOVED_VIEWS]` and CDs any child `LView`s where\n   * the `DECLARATION_COMPONENT_VIEW` of the current component and the child `LView` does not match\n   * (it has been transplanted across components.)\n   *\n   * Note: `[DECLARATION_COMPONENT_VIEW]` points to itself if the LView is a component view (the\n   *       simplest / most common case).\n   *\n   * see also:\n   *   - https://hackmd.io/@mhevery/rJUJsvv9H write up of the problem\n   *   - `LContainer[HAS_TRANSPLANTED_VIEWS]` which marks which `LContainer` has transplanted views.\n   *   - `LContainer[TRANSPLANT_HEAD]` and `LContainer[TRANSPLANT_TAIL]` storage for transplanted\n   *   - `LView[DECLARATION_LCONTAINER]` similar problem for queries\n   *   - `LContainer[MOVED_VIEWS]` similar problem for queries\n   */\n  [DECLARATION_COMPONENT_VIEW]: LView;\n\n  /**\n   * A declaration point of embedded views (ones instantiated based on the content of a\n   * <ng-template>), null for other types of views.\n   *\n   * We need to track all embedded views created from a given declaration point so we can prepare\n   * query matches in a proper order (query matches are ordered based on their declaration point and\n   * _not_ the insertion point).\n   */\n  [DECLARATION_LCONTAINER]: LContainer|null;\n\n  /**\n   * More flags for this view. See PreOrderHookFlags for more info.\n   */\n  [PREORDER_HOOK_FLAGS]: PreOrderHookFlags;\n\n  /**\n   * The number of direct transplanted views which need a refresh or have descendants themselves\n   * that need a refresh but have not marked their ancestors as Dirty. This tells us that during\n   * change detection we should still descend to find those children to refresh, even if the parents\n   * are not `Dirty`/`CheckAlways`.\n   */\n  [TRANSPLANTED_VIEWS_TO_REFRESH]: number;\n\n  /** Unique ID of the view. Used for `__ngContext__` lookups in the `LView` registry. */\n  [ID]: number;\n\n  /**\n   * Optional injector assigned to embedded views that takes\n   * precedence over the element and module injectors.\n   */\n  readonly[EMBEDDED_VIEW_INJECTOR]: Injector|null;\n}\n\n/** Flags associated with an LView (saved in LView[FLAGS]) */\nexport const enum LViewFlags {\n  /** The state of the init phase on the first 2 bits */\n  InitPhaseStateIncrementer = 0b00000000001,\n  InitPhaseStateMask = 0b00000000011,\n\n  /**\n   * Whether or not the view is in creationMode.\n   *\n   * This must be stored in the view rather than using `data` as a marker so that\n   * we can properly support embedded views. Otherwise, when exiting a child view\n   * back into the parent view, `data` will be defined and `creationMode` will be\n   * improperly reported as false.\n   */\n  CreationMode = 0b00000000100,\n\n  /**\n   * Whether or not this LView instance is on its first processing pass.\n   *\n   * An LView instance is considered to be on its \"first pass\" until it\n   * has completed one creation mode run and one update mode run. At this\n   * time, the flag is turned off.\n   */\n  FirstLViewPass = 0b00000001000,\n\n  /** Whether this view has default change detection strategy (checks always) or onPush */\n  CheckAlways = 0b00000010000,\n\n  /** Whether or not this view is currently dirty (needing check) */\n  Dirty = 0b00000100000,\n\n  /** Whether or not this view is currently attached to change detection tree. */\n  Attached = 0b000001000000,\n\n  /** Whether or not this view is destroyed. */\n  Destroyed = 0b000010000000,\n\n  /** Whether or not this view is the root view */\n  IsRoot = 0b000100000000,\n\n  /**\n   * Whether this moved LView was needs to be refreshed at the insertion location because the\n   * declaration was dirty.\n   */\n  RefreshTransplantedView = 0b001000000000,\n\n  /** Indicates that the view **or any of its ancestors** have an embedded view injector. */\n  HasEmbeddedViewInjector = 0b0010000000000,\n\n  /**\n   * Index of the current init phase on last 21 bits\n   */\n  IndexWithinInitPhaseIncrementer = 0b0100000000000,\n  IndexWithinInitPhaseShift = 11,\n  IndexWithinInitPhaseReset = 0b0011111111111,\n}\n\n/**\n * Possible states of the init phase:\n * - 00: OnInit hooks to be run.\n * - 01: AfterContentInit hooks to be run\n * - 10: AfterViewInit hooks to be run\n * - 11: All init hooks have been run\n */\nexport const enum InitPhaseState {\n  OnInitHooksToBeRun = 0b00,\n  AfterContentInitHooksToBeRun = 0b01,\n  AfterViewInitHooksToBeRun = 0b10,\n  InitPhaseCompleted = 0b11,\n}\n\n/** More flags associated with an LView (saved in LView[PREORDER_HOOK_FLAGS]) */\nexport const enum PreOrderHookFlags {\n  /**\n     The index of the next pre-order hook to be called in the hooks array, on the first 16\n     bits\n   */\n  IndexOfTheNextPreOrderHookMaskMask = 0b01111111111111111,\n\n  /**\n   * The number of init hooks that have already been called, on the last 16 bits\n   */\n  NumberOfInitHooksCalledIncrementer = 0b010000000000000000,\n  NumberOfInitHooksCalledShift = 16,\n  NumberOfInitHooksCalledMask = 0b11111111111111110000000000000000,\n}\n\n/**\n * Stores a set of OpCodes to process `HostBindingsFunction` associated with a current view.\n *\n * In order to invoke `HostBindingsFunction` we need:\n * 1. 'elementIdx`: Index to the element associated with the `HostBindingsFunction`.\n * 2. 'directiveIdx`: Index to the directive associated with the `HostBindingsFunction`. (This will\n *    become the context for the `HostBindingsFunction` invocation.)\n * 3. `bindingRootIdx`: Location where the bindings for the `HostBindingsFunction` start. Internally\n *    `HostBindingsFunction` binding indexes start from `0` so we need to add `bindingRootIdx` to\n *    it.\n * 4. `HostBindingsFunction`: A host binding function to execute.\n *\n * The above information needs to be encoded into the `HostBindingOpCodes` in an efficient manner.\n *\n * 1. `elementIdx` is encoded into the `HostBindingOpCodes` as `~elementIdx` (so a negative number);\n * 2. `directiveIdx`\n * 3. `bindingRootIdx`\n * 4. `HostBindingsFunction` is passed in as is.\n *\n * The `HostBindingOpCodes` array contains:\n * - negative number to select the element index.\n * - followed by 1 or more of:\n *    - a number to select the directive index\n *    - a number to select the bindingRoot index\n *    - and a function to invoke.\n *\n * ## Example\n *\n * ```\n * const hostBindingOpCodes = [\n *   ~30,                               // Select element 30\n *   40, 45, MyDir.ɵdir.hostBindings    // Invoke host bindings on MyDir on element 30;\n *                                      // directiveIdx = 40; bindingRootIdx = 45;\n *   50, 55, OtherDir.ɵdir.hostBindings // Invoke host bindings on OtherDire on element 30\n *                                      // directiveIdx = 50; bindingRootIdx = 55;\n * ]\n * ```\n *\n * ## Pseudocode\n * ```\n * const hostBindingOpCodes = tView.hostBindingOpCodes;\n * if (hostBindingOpCodes === null) return;\n * for (let i = 0; i < hostBindingOpCodes.length; i++) {\n *   const opCode = hostBindingOpCodes[i] as number;\n *   if (opCode < 0) {\n *     // Negative numbers are element indexes.\n *     setSelectedIndex(~opCode);\n *   } else {\n *     // Positive numbers are NumberTuple which store bindingRootIndex and directiveIndex.\n *     const directiveIdx = opCode;\n *     const bindingRootIndx = hostBindingOpCodes[++i] as number;\n *     const hostBindingFn = hostBindingOpCodes[++i] as HostBindingsFunction<any>;\n *     setBindingRootForHostBindings(bindingRootIndx, directiveIdx);\n *     const context = lView[directiveIdx];\n *     hostBindingFn(RenderFlags.Update, context);\n *   }\n * }\n * ```\n *\n */\nexport interface HostBindingOpCodes extends Array<number|HostBindingsFunction<any>> {\n  __brand__: 'HostBindingOpCodes';\n  debug?: string[];\n}\n\n/**\n * Explicitly marks `TView` as a specific type in `ngDevMode`\n *\n * It is useful to know conceptually what time of `TView` we are dealing with when\n * debugging an application (even if the runtime does not need it.) For this reason\n * we store this information in the `ngDevMode` `TView` and than use it for\n * better debugging experience.\n */\nexport const enum TViewType {\n  /**\n   * Root `TView` is the used to bootstrap components into. It is used in conjunction with\n   * `LView` which takes an existing DOM node not owned by Angular and wraps it in `TView`/`LView`\n   * so that other components can be loaded into it.\n   */\n  Root = 0,\n\n  /**\n   * `TView` associated with a Component. This would be the `TView` directly associated with the\n   * component view (as opposed an `Embedded` `TView` which would be a child of `Component` `TView`)\n   */\n  Component = 1,\n\n  /**\n   * `TView` associated with a template. Such as `*ngIf`, `<ng-template>` etc... A `Component`\n   * can have zero or more `Embedded` `TView`s.\n   */\n  Embedded = 2,\n}\n\n/**\n * Converts `TViewType` into human readable text.\n * Make sure this matches with `TViewType`\n */\nexport const TViewTypeAsString = [\n  'Root',       // 0\n  'Component',  // 1\n  'Embedded',   // 2\n] as const;\n\n\n/**\n * The static data for an LView (shared between all templates of a\n * given type).\n *\n * Stored on the `ComponentDef.tView`.\n */\nexport interface TView {\n  /**\n   * Type of `TView` (`Root`|`Component`|`Embedded`).\n   */\n  type: TViewType;\n\n  /**\n   * This is a blueprint used to generate LView instances for this TView. Copying this\n   * blueprint is faster than creating a new LView from scratch.\n   */\n  blueprint: LView;\n\n  /**\n   * The template function used to refresh the view of dynamically created views\n   * and components. Will be null for inline views.\n   */\n  template: ComponentTemplate<{}>|null;\n\n  /**\n   * A function containing query-related instructions.\n   */\n  viewQuery: ViewQueriesFunction<{}>|null;\n\n  /**\n   * A `TNode` representing the declaration location of this `TView` (not part of this TView).\n   */\n  declTNode: TNode|null;\n\n  // FIXME(misko): Why does `TView` not have `declarationTView` property?\n\n  /** Whether or not this template has been processed in creation mode. */\n  firstCreatePass: boolean;\n\n  /**\n   *  Whether or not this template has been processed in update mode (e.g. change detected)\n   *\n   * `firstUpdatePass` is used by styling to set up `TData` to contain metadata about the styling\n   * instructions. (Mainly to build up a linked list of styling priority order.)\n   *\n   * Typically this function gets cleared after first execution. If exception is thrown then this\n   * flag can remain turned un until there is first successful (no exception) pass. This means that\n   * individual styling instructions keep track of if they have already been added to the linked\n   * list to prevent double adding.\n   */\n  firstUpdatePass: boolean;\n\n  /** Static data equivalent of LView.data[]. Contains TNodes, PipeDefInternal or TI18n. */\n  data: TData;\n\n  /**\n   * The binding start index is the index at which the data array\n   * starts to store bindings only. Saving this value ensures that we\n   * will begin reading bindings at the correct point in the array when\n   * we are in update mode.\n   *\n   * -1 means that it has not been initialized.\n   */\n  bindingStartIndex: number;\n\n  /**\n   * The index where the \"expando\" section of `LView` begins. The expando\n   * section contains injectors, directive instances, and host binding values.\n   * Unlike the \"decls\" and \"vars\" sections of `LView`, the length of this\n   * section cannot be calculated at compile-time because directives are matched\n   * at runtime to preserve locality.\n   *\n   * We store this start index so we know where to start checking host bindings\n   * in `setHostBindings`.\n   */\n  expandoStartIndex: number;\n\n  /**\n   * Whether or not there are any static view queries tracked on this view.\n   *\n   * We store this so we know whether or not we should do a view query\n   * refresh after creation mode to collect static query results.\n   */\n  staticViewQueries: boolean;\n\n  /**\n   * Whether or not there are any static content queries tracked on this view.\n   *\n   * We store this so we know whether or not we should do a content query\n   * refresh after creation mode to collect static query results.\n   */\n  staticContentQueries: boolean;\n\n  /**\n   * A reference to the first child node located in the view.\n   */\n  firstChild: TNode|null;\n\n  /**\n   * Stores the OpCodes to be replayed during change-detection to process the `HostBindings`\n   *\n   * See `HostBindingOpCodes` for encoding details.\n   */\n  hostBindingOpCodes: HostBindingOpCodes|null;\n\n  /**\n   * Full registry of directives and components that may be found in this view.\n   *\n   * It's necessary to keep a copy of the full def list on the TView so it's possible\n   * to render template functions without a host component.\n   */\n  directiveRegistry: DirectiveDefList|null;\n\n  /**\n   * Full registry of pipes that may be found in this view.\n   *\n   * The property is either an array of `PipeDefs`s or a function which returns the array of\n   * `PipeDefs`s. The function is necessary to be able to support forward declarations.\n   *\n   * It's necessary to keep a copy of the full def list on the TView so it's possible\n   * to render template functions without a host component.\n   */\n  pipeRegistry: PipeDefList|null;\n\n  /**\n   * Array of ngOnInit, ngOnChanges and ngDoCheck hooks that should be executed for this view in\n   * creation mode.\n   *\n   * This array has a flat structure and contains TNode indices, directive indices (where an\n   * instance can be found in `LView`) and hook functions. TNode index is followed by the directive\n   * index and a hook function. If there are multiple hooks for a given TNode, the TNode index is\n   * not repeated and the next lifecycle hook information is stored right after the previous hook\n   * function. This is done so that at runtime the system can efficiently iterate over all of the\n   * functions to invoke without having to make any decisions/lookups.\n   */\n  preOrderHooks: HookData|null;\n\n  /**\n   * Array of ngOnChanges and ngDoCheck hooks that should be executed for this view in update mode.\n   *\n   * This array has the same structure as the `preOrderHooks` one.\n   */\n  preOrderCheckHooks: HookData|null;\n\n  /**\n   * Array of ngAfterContentInit and ngAfterContentChecked hooks that should be executed\n   * for this view in creation mode.\n   *\n   * Even indices: Directive index\n   * Odd indices: Hook function\n   */\n  contentHooks: HookData|null;\n\n  /**\n   * Array of ngAfterContentChecked hooks that should be executed for this view in update\n   * mode.\n   *\n   * Even indices: Directive index\n   * Odd indices: Hook function\n   */\n  contentCheckHooks: HookData|null;\n\n  /**\n   * Array of ngAfterViewInit and ngAfterViewChecked hooks that should be executed for\n   * this view in creation mode.\n   *\n   * Even indices: Directive index\n   * Odd indices: Hook function\n   */\n  viewHooks: HookData|null;\n\n  /**\n   * Array of ngAfterViewChecked hooks that should be executed for this view in\n   * update mode.\n   *\n   * Even indices: Directive index\n   * Odd indices: Hook function\n   */\n  viewCheckHooks: HookData|null;\n\n  /**\n   * Array of ngOnDestroy hooks that should be executed when this view is destroyed.\n   *\n   * Even indices: Directive index\n   * Odd indices: Hook function\n   */\n  destroyHooks: DestroyHookData|null;\n\n  /**\n   * When a view is destroyed, listeners need to be released and outputs need to be\n   * unsubscribed. This cleanup array stores both listener data (in chunks of 4)\n   * and output data (in chunks of 2) for a particular view. Combining the arrays\n   * saves on memory (70 bytes per array) and on a few bytes of code size (for two\n   * separate for loops).\n   *\n   * If it's a native DOM listener or output subscription being stored:\n   * 1st index is: event name  `name = tView.cleanup[i+0]`\n   * 2nd index is: index of native element or a function that retrieves global target (window,\n   *               document or body) reference based on the native element:\n   *    `typeof idxOrTargetGetter === 'function'`: global target getter function\n   *    `typeof idxOrTargetGetter === 'number'`: index of native element\n   *\n   * 3rd index is: index of listener function `listener = lView[CLEANUP][tView.cleanup[i+2]]`\n   * 4th index is: `useCaptureOrIndx = tView.cleanup[i+3]`\n   *    `typeof useCaptureOrIndx == 'boolean' : useCapture boolean\n   *    `typeof useCaptureOrIndx == 'number':\n   *         `useCaptureOrIndx >= 0` `removeListener = LView[CLEANUP][useCaptureOrIndx]`\n   *         `useCaptureOrIndx <  0` `subscription = LView[CLEANUP][-useCaptureOrIndx]`\n   *\n   * If it's an output subscription or query list destroy hook:\n   * 1st index is: output unsubscribe function / query list destroy function\n   * 2nd index is: index of function context in LView.cleanupInstances[]\n   *               `tView.cleanup[i+0].call(lView[CLEANUP][tView.cleanup[i+1]])`\n   */\n  cleanup: any[]|null;\n\n  /**\n   * A list of element indices for child components that will need to be\n   * refreshed when the current view has finished its check. These indices have\n   * already been adjusted for the HEADER_OFFSET.\n   *\n   */\n  components: number[]|null;\n\n  /**\n   * A collection of queries tracked in a given view.\n   */\n  queries: TQueries|null;\n\n  /**\n   * An array of indices pointing to directives with content queries alongside with the\n   * corresponding query index. Each entry in this array is a tuple of:\n   * - index of the first content query index declared by a given directive;\n   * - index of a directive.\n   *\n   * We are storing those indexes so we can refresh content queries as part of a view refresh\n   * process.\n   */\n  contentQueries: number[]|null;\n\n  /**\n   * Set of schemas that declare elements to be allowed inside the view.\n   */\n  schemas: SchemaMetadata[]|null;\n\n  /**\n   * Array of constants for the view. Includes attribute arrays, local definition arrays etc.\n   * Used for directive matching, attribute bindings, local definitions and more.\n   */\n  consts: TConstants|null;\n\n  /**\n   * Indicates that there was an error before we managed to complete the first create pass of the\n   * view. This means that the view is likely corrupted and we should try to recover it.\n   */\n  incompleteFirstPass: boolean;\n}\n\nexport const enum RootContextFlags {\n  Empty = 0b00,\n  DetectChanges = 0b01,\n  FlushPlayers = 0b10\n}\n\n\n/**\n * RootContext contains information which is shared for all components which\n * were bootstrapped with {@link renderComponent}.\n */\nexport interface RootContext<T = unknown> {\n  /**\n   * A function used for scheduling change detection in the future. Usually\n   * this is `requestAnimationFrame`.\n   */\n  scheduler: (workFn: () => void) => void;\n\n  /**\n   * A promise which is resolved when all components are considered clean (not dirty).\n   *\n   * This promise is overwritten every time a first call to {@link markDirty} is invoked.\n   */\n  clean: Promise<null>;\n\n  /**\n   * RootComponents - The components that were instantiated by the call to\n   * {@link renderComponent}.\n   */\n  components: T[];\n\n  /**\n   * The player flushing handler to kick off all animations\n   */\n  playerHandler: PlayerHandler|null;\n\n  /**\n   * What render-related operations to run once a scheduler has been set\n   */\n  flags: RootContextFlags;\n}\n\n/** Single hook callback function. */\nexport type HookFn = () => void;\n\n/**\n * Information necessary to call a hook. E.g. the callback that\n * needs to invoked and the index at which to find its context.\n */\nexport type HookEntry = number|HookFn;\n\n/**\n * Array of hooks that should be executed for a view and their directive indices.\n *\n * For each node of the view, the following data is stored:\n * 1) Node index (optional)\n * 2) A series of number/function pairs where:\n *  - even indices are directive indices\n *  - odd indices are hook functions\n *\n * Special cases:\n *  - a negative directive index flags an init hook (ngOnInit, ngAfterContentInit, ngAfterViewInit)\n */\nexport type HookData = HookEntry[];\n\n/**\n * Array of destroy hooks that should be executed for a view and their directive indices.\n *\n * The array is set up as a series of number/function or number/(number|function)[]:\n * - Even indices represent the context with which hooks should be called.\n * - Odd indices are the hook functions themselves. If a value at an odd index is an array,\n *   it represents the destroy hooks of a `multi` provider where:\n *     - Even indices represent the index of the provider for which we've registered a destroy hook,\n *       inside of the `multi` provider array.\n *     - Odd indices are the destroy hook functions.\n * For example:\n * LView: `[0, 1, 2, AService, 4, [BService, CService, DService]]`\n * destroyHooks: `[3, AService.ngOnDestroy, 5, [0, BService.ngOnDestroy, 2, DService.ngOnDestroy]]`\n *\n * In the example above `AService` is a type provider with an `ngOnDestroy`, whereas `BService`,\n * `CService` and `DService` are part of a `multi` provider where only `BService` and `DService`\n * have an `ngOnDestroy` hook.\n */\nexport type DestroyHookData = (HookEntry|HookData)[];\n\n/**\n * Static data that corresponds to the instance-specific data array on an LView.\n *\n * Each node's static data is stored in tData at the same index that it's stored\n * in the data array.  Any nodes that do not have static data store a null value in\n * tData to avoid a sparse array.\n *\n * Each pipe's definition is stored here at the same index as its pipe instance in\n * the data array.\n *\n * Each host property's name is stored here at the same index as its value in the\n * data array.\n *\n * Each property binding name is stored here at the same index as its value in\n * the data array. If the binding is an interpolation, the static string values\n * are stored parallel to the dynamic values. Example:\n *\n * id=\"prefix {{ v0 }} a {{ v1 }} b {{ v2 }} suffix\"\n *\n * LView       |   TView.data\n *------------------------\n *  v0 value   |   'a'\n *  v1 value   |   'b'\n *  v2 value   |   id � prefix � suffix\n *\n * Injector bloom filters are also stored here.\n */\nexport type TData = (TNode|PipeDef<any>|DirectiveDef<any>|ComponentDef<any>|number|TStylingRange|\n                     TStylingKey|ProviderToken<any>|TI18n|I18nUpdateOpCodes|TIcu|null|string)[];\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nexport const unusedValueExportToPlacateAjd = 1;\n\n/**\n * Human readable version of the `LView`.\n *\n * `LView` is a data structure used internally to keep track of views. The `LView` is designed for\n * efficiency and so at times it is difficult to read or write tests which assert on its values. For\n * this reason when `ngDevMode` is true we patch a `LView.debug` property which points to\n * `LViewDebug` for easier debugging and test writing. It is the intent of `LViewDebug` to be used\n * in tests.\n */\nexport interface LViewDebug<T = unknown> {\n  /**\n   * Flags associated with the `LView` unpacked into a more readable state.\n   *\n   * See `LViewFlags` for the flag meanings.\n   */\n  readonly flags: {\n    initPhaseState: number,\n    creationMode: boolean,\n    firstViewPass: boolean,\n    checkAlways: boolean,\n    dirty: boolean,\n    attached: boolean,\n    destroyed: boolean,\n    isRoot: boolean,\n    indexWithinInitPhase: number,\n  };\n\n  /**\n   * Associated TView\n   */\n  readonly tView: TView;\n\n  /**\n   * Parent view (or container)\n   */\n  readonly parent: LViewDebug|LContainerDebug|null;\n\n  /**\n   * Next sibling to the `LView`.\n   */\n  readonly next: LViewDebug|LContainerDebug|null;\n\n  /**\n   * The context used for evaluation of the `LView`\n   *\n   * (Usually the component)\n   */\n  readonly context: T;\n\n  /**\n   * Hierarchical tree of nodes.\n   */\n  readonly nodes: DebugNode[];\n\n  /**\n   * Template structure (no instance data).\n   * (Shows how TNodes are connected)\n   */\n  readonly template: string;\n\n  /**\n   * HTML representation of the `LView`.\n   *\n   * This is only approximate to actual HTML as child `LView`s are removed.\n   */\n  readonly html: string;\n\n  /**\n   * The host element to which this `LView` is attached.\n   */\n  readonly hostHTML: string|null;\n\n  /**\n   * Child `LView`s\n   */\n  readonly childViews: Array<LViewDebug|LContainerDebug>;\n\n  /**\n   * Sub range of `LView` containing decls (DOM elements).\n   */\n  readonly decls: LViewDebugRange;\n\n  /**\n   * Sub range of `LView` containing vars (bindings).\n   */\n  readonly vars: LViewDebugRange;\n\n  /**\n   * Sub range of `LView` containing expando (used by DI).\n   */\n  readonly expando: LViewDebugRange;\n}\n\n/**\n * Human readable version of the `LContainer`\n *\n * `LContainer` is a data structure used internally to keep track of child views. The `LContainer`\n * is designed for efficiency and so at times it is difficult to read or write tests which assert on\n * its values. For this reason when `ngDevMode` is true we patch a `LContainer.debug` property which\n * points to `LContainerDebug` for easier debugging and test writing. It is the intent of\n * `LContainerDebug` to be used in tests.\n */\nexport interface LContainerDebug {\n  readonly native: RComment;\n  /**\n   * Child `LView`s.\n   */\n  readonly views: LViewDebug[];\n  readonly parent: LViewDebug|null;\n  readonly movedViews: LView[]|null;\n  readonly host: RElement|RComment|LView;\n  readonly next: LViewDebug|LContainerDebug|null;\n  readonly hasTransplantedViews: boolean;\n}\n\n\n\n/**\n * `LView` is subdivided to ranges where the actual data is stored. Some of these ranges such as\n * `decls` and `vars` are known at compile time. Other such as `i18n` and `expando` are runtime only\n * concepts.\n */\nexport interface LViewDebugRange {\n  /**\n   * The starting index in `LView` where the range begins. (Inclusive)\n   */\n  start: number;\n\n  /**\n   * The ending index in `LView` where the range ends. (Exclusive)\n   */\n  end: number;\n\n  /**\n   * The length of the range\n   */\n  length: number;\n\n  /**\n   * The merged content of the range. `t` contains data from `TView.data` and `l` contains `LView`\n   * data at an index.\n   */\n  content: LViewDebugRangeContent[];\n}\n\n/**\n * For convenience the static and instance portions of `TView` and `LView` are merged into a single\n * object in `LViewRange`.\n */\nexport interface LViewDebugRangeContent {\n  /**\n   * Index into original `LView` or `TView.data`.\n   */\n  index: number;\n\n  /**\n   * Value from the `TView.data[index]` location.\n   */\n  t: any;\n\n  /**\n   * Value from the `LView[index]` location.\n   */\n  l: any;\n}\n\n\n/**\n * A logical node which comprise into `LView`s.\n *\n */\nexport interface DebugNode {\n  /**\n   * HTML representation of the node.\n   */\n  html: string|null;\n\n  /**\n   * Associated `TNode`\n   */\n  tNode: TNode;\n\n  /**\n   * Human readable node type.\n   */\n  type: string;\n\n  /**\n   * DOM native node.\n   */\n  native: Node;\n\n  /**\n   * Child nodes\n   */\n  children: DebugNode[];\n\n  /**\n   * A list of Component/Directive types which need to be instantiated an this location.\n   */\n  factories: Type<unknown>[];\n\n  /**\n   * A list of Component/Directive instances which were instantiated an this location.\n   */\n  instances: unknown[];\n\n  /**\n   * NodeInjector information.\n   */\n  injector: NodeInjectorDebug;\n\n  /**\n   * Injector resolution path.\n   */\n  injectorResolutionPath: any;\n}\n\nexport interface NodeInjectorDebug {\n  /**\n   * Instance bloom. Does the current injector have a provider with a given bloom mask.\n   */\n  bloom: string;\n\n\n  /**\n   * Cumulative bloom. Do any of the above injectors have a provider with a given bloom mask.\n   */\n  cumulativeBloom: string;\n\n  /**\n   * A list of providers associated with this injector.\n   */\n  providers: (Type<unknown>|DirectiveDef<unknown>|ComponentDef<unknown>)[];\n\n  /**\n   * A list of providers associated with this injector visible to the view of the component only.\n   */\n  viewProviders: Type<unknown>[];\n\n\n  /**\n   * Location of the parent `TNode`.\n   */\n  parentInjectorIndex: number;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TNode} from './node';\nimport {RComment, RElement} from './renderer_dom';\nimport {HOST, LView, NEXT, PARENT, T_HOST, TRANSPLANTED_VIEWS_TO_REFRESH} from './view';\n\n\n\n/**\n * Special location which allows easy identification of type. If we have an array which was\n * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n * `LContainer`.\n */\nexport const TYPE = 1;\n\n/**\n * Below are constants for LContainer indices to help us look up LContainer members\n * without having to remember the specific indices.\n * Uglify will inline these when minifying so there shouldn't be a cost.\n */\n\n/**\n * Flag to signify that this `LContainer` may have transplanted views which need to be change\n * detected. (see: `LView[DECLARATION_COMPONENT_VIEW])`.\n *\n * This flag, once set, is never unset for the `LContainer`. This means that when unset we can skip\n * a lot of work in `refreshEmbeddedViews`. But when set we still need to verify\n * that the `MOVED_VIEWS` are transplanted and on-push.\n */\nexport const HAS_TRANSPLANTED_VIEWS = 2;\n\n// PARENT, NEXT, TRANSPLANTED_VIEWS_TO_REFRESH are indices 3, 4, and 5\n// As we already have these constants in LView, we don't need to re-create them.\n\n// T_HOST is index 6\n// We already have this constants in LView, we don't need to re-create it.\n\nexport const NATIVE = 7;\nexport const VIEW_REFS = 8;\nexport const MOVED_VIEWS = 9;\n\n\n/**\n * Size of LContainer's header. Represents the index after which all views in the\n * container will be inserted. We need to keep a record of current views so we know\n * which views are already in the DOM (and don't need to be re-added) and so we can\n * remove views from the DOM when they are no longer required.\n */\nexport const CONTAINER_HEADER_OFFSET = 10;\n\n/**\n * The state associated with a container.\n *\n * This is an array so that its structure is closer to LView. This helps\n * when traversing the view tree (which is a mix of containers and component\n * views), so we can jump to viewOrContainer[NEXT] in the same way regardless\n * of type.\n */\nexport interface LContainer extends Array<any> {\n  /**\n   * The host element of this LContainer.\n   *\n   * The host could be an LView if this container is on a component node.\n   * In that case, the component LView is its HOST.\n   */\n  readonly[HOST]: RElement|RComment|LView;\n\n  /**\n   * This is a type field which allows us to differentiate `LContainer` from `StylingContext` in an\n   * efficient way. The value is always set to `true`\n   */\n  [TYPE]: true;\n\n  /**\n   * Flag to signify that this `LContainer` may have transplanted views which need to be change\n   * detected. (see: `LView[DECLARATION_COMPONENT_VIEW])`.\n   *\n   * This flag, once set, is never unset for the `LContainer`.\n   */\n  [HAS_TRANSPLANTED_VIEWS]: boolean;\n\n  /**\n   * Access to the parent view is necessary so we can propagate back\n   * up from inside a container to parent[NEXT].\n   */\n  [PARENT]: LView;\n\n  /**\n   * This allows us to jump from a container to a sibling container or component\n   * view with the same parent, so we can remove listeners efficiently.\n   */\n  [NEXT]: LView|LContainer|null;\n\n  /**\n   * The number of direct transplanted views which need a refresh or have descendants themselves\n   * that need a refresh but have not marked their ancestors as Dirty. This tells us that during\n   * change detection we should still descend to find those children to refresh, even if the parents\n   * are not `Dirty`/`CheckAlways`.\n   */\n  [TRANSPLANTED_VIEWS_TO_REFRESH]: number;\n\n  /**\n   * A collection of views created based on the underlying `<ng-template>` element but inserted into\n   * a different `LContainer`. We need to track views created from a given declaration point since\n   * queries collect matches from the embedded view declaration point and _not_ the insertion point.\n   */\n  [MOVED_VIEWS]: LView[]|null;\n\n  /**\n   * Pointer to the `TNode` which represents the host of the container.\n   */\n  [T_HOST]: TNode;\n\n  /** The comment element that serves as an anchor for this LContainer. */\n  readonly[NATIVE]:\n      RComment;  // TODO(misko): remove as this value can be gotten by unwrapping `[HOST]`\n\n  /**\n   * Array of `ViewRef`s used by any `ViewContainerRef`s that point to this container.\n   *\n   * This is lazily initialized by `ViewContainerRef` when the first view is inserted.\n   *\n   * NOTE: This is stored as `any[]` because render3 should really not be aware of `ViewRef` and\n   * doing so creates circular dependency.\n   */\n  [VIEW_REFS]: unknown[]|null;\n}\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nexport const unusedValueExportToPlacateAjd = 1;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LContainer, TYPE} from './container';\nimport {ComponentDef, DirectiveDef} from './definition';\nimport {TNode, TNodeFlags} from './node';\nimport {RNode} from './renderer_dom';\nimport {FLAGS, LView, LViewFlags} from './view';\n\n\n/**\n * True if `value` is `LView`.\n * @param value wrapped value of `RNode`, `LView`, `LContainer`\n */\nexport function isLView(value: RNode|LView|LContainer|{}|null): value is LView {\n  return Array.isArray(value) && typeof value[TYPE] === 'object';\n}\n\n/**\n * True if `value` is `LContainer`.\n * @param value wrapped value of `RNode`, `LView`, `LContainer`\n */\nexport function isLContainer(value: RNode|LView|LContainer|{}|null): value is LContainer {\n  return Array.isArray(value) && value[TYPE] === true;\n}\n\nexport function isContentQueryHost(tNode: TNode): boolean {\n  return (tNode.flags & TNodeFlags.hasContentQuery) !== 0;\n}\n\nexport function isComponentHost(tNode: TNode): boolean {\n  return (tNode.flags & TNodeFlags.isComponentHost) === TNodeFlags.isComponentHost;\n}\n\nexport function isDirectiveHost(tNode: TNode): boolean {\n  return (tNode.flags & TNodeFlags.isDirectiveHost) === TNodeFlags.isDirectiveHost;\n}\n\nexport function isComponentDef<T>(def: DirectiveDef<T>): def is ComponentDef<T> {\n  return (def as ComponentDef<T>).template !== null;\n}\n\nexport function isRootView(target: LView): boolean {\n  return (target[FLAGS] & LViewFlags.IsRoot) !== 0;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../interface/type';\nimport {stringify} from '../util/stringify';\nimport {NG_FACTORY_DEF} from './fields';\n\n\n/**\n * Definition of what a factory function should look like.\n */\nexport type FactoryFn<T> = {\n  /**\n   * Subclasses without an explicit constructor call through to the factory of their base\n   * definition, providing it with their own constructor to instantiate.\n   */\n  <U extends T>(t?: Type<U>): U;\n\n  /**\n   * If no constructor to instantiate is provided, an instance of type T itself is created.\n   */\n  (t?: undefined): T;\n};\n\n\nexport function getFactoryDef<T>(type: any, throwNotFound: true): FactoryFn<T>;\nexport function getFactoryDef<T>(type: any): FactoryFn<T>|null;\nexport function getFactoryDef<T>(type: any, throwNotFound?: boolean): FactoryFn<T>|null {\n  const hasFactoryDef = type.hasOwnProperty(NG_FACTORY_DEF);\n  if (!hasFactoryDef && throwNotFound === true && ngDevMode) {\n    throw new Error(`Type ${stringify(type)} does not have 'ɵfac' property.`);\n  }\n  return hasFactoryDef ? type[NG_FACTORY_DEF] : null;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Represents a basic change from a previous to a new value for a single\n * property on a directive instance. Passed as a value in a\n * {@link SimpleChanges} object to the `ngOnChanges` hook.\n *\n * @see `OnChanges`\n *\n * @publicApi\n */\nexport class SimpleChange {\n  constructor(public previousValue: any, public currentValue: any, public firstChange: boolean) {}\n  /**\n   * Check whether the new value is the first value assigned.\n   */\n  isFirstChange(): boolean {\n    return this.firstChange;\n  }\n}\n\n/**\n * A hashtable of changes represented by {@link SimpleChange} objects stored\n * at the declared property name they belong to on a Directive or Component. This is\n * the type passed to the `ngOnChanges` hook.\n *\n * @see `OnChanges`\n *\n * @publicApi\n */\nexport interface SimpleChanges {\n  [propName: string]: SimpleChange;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OnChanges} from '../../interface/lifecycle_hooks';\nimport {SimpleChange, SimpleChanges} from '../../interface/simple_change';\nimport {EMPTY_OBJ} from '../../util/empty';\nimport {DirectiveDef, DirectiveDefFeature} from '../interfaces/definition';\n\n/**\n * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n * lifecycle hook, so it should be included in any component that implements\n * that hook.\n *\n * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n * inherited properties will not be propagated to the ngOnChanges lifecycle\n * hook.\n *\n * Example usage:\n *\n * ```\n * static ɵcmp = defineComponent({\n *   ...\n *   inputs: {name: 'publicName'},\n *   features: [NgOnChangesFeature]\n * });\n * ```\n *\n * @codeGenApi\n */\nexport function ɵɵNgOnChangesFeature<T>(): DirectiveDefFeature {\n  return NgOnChangesFeatureImpl;\n}\n\nexport function NgOnChangesFeatureImpl<T>(definition: DirectiveDef<T>) {\n  if (definition.type.prototype.ngOnChanges) {\n    definition.setInput = ngOnChangesSetInput;\n  }\n  return rememberChangeHistoryAndInvokeOnChangesHook;\n}\n\n// This option ensures that the ngOnChanges lifecycle hook will be inherited\n// from superclasses (in InheritDefinitionFeature).\n/** @nocollapse */\n// tslint:disable-next-line:no-toplevel-property-access\n(ɵɵNgOnChangesFeature as DirectiveDefFeature).ngInherit = true;\n\n/**\n * This is a synthetic lifecycle hook which gets inserted into `TView.preOrderHooks` to simulate\n * `ngOnChanges`.\n *\n * The hook reads the `NgSimpleChangesStore` data from the component instance and if changes are\n * found it invokes `ngOnChanges` on the component instance.\n *\n * @param this Component instance. Because this function gets inserted into `TView.preOrderHooks`,\n *     it is guaranteed to be called with component instance.\n */\nfunction rememberChangeHistoryAndInvokeOnChangesHook(this: OnChanges) {\n  const simpleChangesStore = getSimpleChangesStore(this);\n  const current = simpleChangesStore?.current;\n\n  if (current) {\n    const previous = simpleChangesStore!.previous;\n    if (previous === EMPTY_OBJ) {\n      simpleChangesStore!.previous = current;\n    } else {\n      // New changes are copied to the previous store, so that we don't lose history for inputs\n      // which were not changed this time\n      for (let key in current) {\n        previous[key] = current[key];\n      }\n    }\n    simpleChangesStore!.current = null;\n    this.ngOnChanges(current);\n  }\n}\n\n\nfunction ngOnChangesSetInput<T>(\n    this: DirectiveDef<T>, instance: T, value: any, publicName: string, privateName: string): void {\n  const simpleChangesStore = getSimpleChangesStore(instance) ||\n      setSimpleChangesStore(instance, {previous: EMPTY_OBJ, current: null});\n  const current = simpleChangesStore.current || (simpleChangesStore.current = {});\n  const previous = simpleChangesStore.previous;\n\n  const declaredName = (this.declaredInputs as {[key: string]: string})[publicName];\n  const previousChange = previous[declaredName];\n  current[declaredName] = new SimpleChange(\n      previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n\n  (instance as any)[privateName] = value;\n}\n\nconst SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n\nfunction getSimpleChangesStore(instance: any): null|NgSimpleChangesStore {\n  return instance[SIMPLE_CHANGES_STORE] || null;\n}\n\nfunction setSimpleChangesStore(instance: any, store: NgSimpleChangesStore): NgSimpleChangesStore {\n  return instance[SIMPLE_CHANGES_STORE] = store;\n}\n\n/**\n * Data structure which is monkey-patched on the component instance and used by `ngOnChanges`\n * life-cycle hook to track previous input values.\n */\ninterface NgSimpleChangesStore {\n  previous: SimpleChanges;\n  current: SimpleChanges|null;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Profiler events is an enum used by the profiler to distinguish between different calls of user\n * code invoked throughout the application lifecycle.\n */\nexport const enum ProfilerEvent {\n  /**\n   * Corresponds to the point in time before the runtime has called the template function of a\n   * component with `RenderFlags.Create`.\n   */\n  TemplateCreateStart,\n\n  /**\n   * Corresponds to the point in time after the runtime has called the template function of a\n   * component with `RenderFlags.Create`.\n   */\n  TemplateCreateEnd,\n\n  /**\n   * Corresponds to the point in time before the runtime has called the template function of a\n   * component with `RenderFlags.Update`.\n   */\n  TemplateUpdateStart,\n\n  /**\n   * Corresponds to the point in time after the runtime has called the template function of a\n   * component with `RenderFlags.Update`.\n   */\n  TemplateUpdateEnd,\n\n  /**\n   * Corresponds to the point in time before the runtime has called a lifecycle hook of a component\n   * or directive.\n   */\n  LifecycleHookStart,\n\n  /**\n   * Corresponds to the point in time after the runtime has called a lifecycle hook of a component\n   * or directive.\n   */\n  LifecycleHookEnd,\n\n  /**\n   * Corresponds to the point in time before the runtime has evaluated an expression associated with\n   * an event or an output.\n   */\n  OutputStart,\n\n  /**\n   * Corresponds to the point in time after the runtime has evaluated an expression associated with\n   * an event or an output.\n   */\n  OutputEnd,\n}\n\n/**\n * Profiler function which the runtime will invoke before and after user code.\n */\nexport interface Profiler {\n  (event: ProfilerEvent, instance: {}|null, hookOrListener?: (e?: any) => any): void;\n}\n\n\nlet profilerCallback: Profiler|null = null;\n\n/**\n * Sets the callback function which will be invoked before and after performing certain actions at\n * runtime (for example, before and after running change detection).\n *\n * Warning: this function is *INTERNAL* and should not be relied upon in application's code.\n * The contract of the function might be changed in any release and/or the function can be removed\n * completely.\n *\n * @param profiler function provided by the caller or null value to disable profiling.\n */\nexport const setProfiler = (profiler: Profiler|null) => {\n  profilerCallback = profiler;\n};\n\n/**\n * Profiler function which wraps user code executed by the runtime.\n *\n * @param event ProfilerEvent corresponding to the execution context\n * @param instance component instance\n * @param hookOrListener lifecycle hook function or output listener. The value depends on the\n *  execution context\n * @returns\n */\nexport const profiler: Profiler = function(\n    event: ProfilerEvent, instance: {}|null, hookOrListener?: (e?: any) => any) {\n  if (profilerCallback != null /* both `null` and `undefined` */) {\n    profilerCallback(event, instance, hookOrListener);\n  }\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport const SVG_NAMESPACE = 'svg';\nexport const SVG_NAMESPACE_URI = 'http://www.w3.org/2000/svg';\nexport const MATH_ML_NAMESPACE = 'math';\nexport const MATH_ML_NAMESPACE_URI = 'http://www.w3.org/1998/MathML/';\n\nexport function getNamespaceUri(namespace: string): string|null {\n  const name = namespace.toLowerCase();\n  return name === SVG_NAMESPACE ? SVG_NAMESPACE_URI :\n                                  (name === MATH_ML_NAMESPACE ? MATH_ML_NAMESPACE_URI : null);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {assertGreaterThan, assertGreaterThanOrEqual, assertIndexInRange, assertLessThan} from '../../util/assert';\nimport {assertTNode, assertTNodeForLView} from '../assert';\nimport {LContainer, TYPE} from '../interfaces/container';\nimport {TConstants, TNode} from '../interfaces/node';\nimport {RNode} from '../interfaces/renderer_dom';\nimport {isLContainer, isLView} from '../interfaces/type_checks';\nimport {FLAGS, HEADER_OFFSET, HOST, LView, LViewFlags, PARENT, PREORDER_HOOK_FLAGS, TData, TRANSPLANTED_VIEWS_TO_REFRESH, TView} from '../interfaces/view';\n\n\n\n/**\n * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n * in same location in `LView`. This is because we don't want to pre-allocate space for it\n * because the storage is sparse. This file contains utilities for dealing with such data types.\n *\n * How do we know what is stored at a given location in `LView`.\n * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n *   - `typeof value[TYPE] === 'object'` => `LView`\n *      - This happens when we have a component at a given location\n *   - `typeof value[TYPE] === true` => `LContainer`\n *      - This happens when we have `LContainer` binding at a given location.\n *\n *\n * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n */\n\n/**\n * Returns `RNode`.\n * @param value wrapped value of `RNode`, `LView`, `LContainer`\n */\nexport function unwrapRNode(value: RNode|LView|LContainer): RNode {\n  while (Array.isArray(value)) {\n    value = value[HOST] as any;\n  }\n  return value as RNode;\n}\n\n/**\n * Returns `LView` or `null` if not found.\n * @param value wrapped value of `RNode`, `LView`, `LContainer`\n */\nexport function unwrapLView(value: RNode|LView|LContainer): LView|null {\n  while (Array.isArray(value)) {\n    // This check is same as `isLView()` but we don't call at as we don't want to call\n    // `Array.isArray()` twice and give JITer more work for inlining.\n    if (typeof value[TYPE] === 'object') return value as LView;\n    value = value[HOST] as any;\n  }\n  return null;\n}\n\n/**\n * Returns `LContainer` or `null` if not found.\n * @param value wrapped value of `RNode`, `LView`, `LContainer`\n */\nexport function unwrapLContainer(value: RNode|LView|LContainer): LContainer|null {\n  while (Array.isArray(value)) {\n    // This check is same as `isLContainer()` but we don't call at as we don't want to call\n    // `Array.isArray()` twice and give JITer more work for inlining.\n    if (value[TYPE] === true) return value as LContainer;\n    value = value[HOST] as any;\n  }\n  return null;\n}\n\n/**\n * Retrieves an element value from the provided `viewData`, by unwrapping\n * from any containers, component views, or style contexts.\n */\nexport function getNativeByIndex(index: number, lView: LView): RNode {\n  ngDevMode && assertIndexInRange(lView, index);\n  ngDevMode && assertGreaterThanOrEqual(index, HEADER_OFFSET, 'Expected to be past HEADER_OFFSET');\n  return unwrapRNode(lView[index]);\n}\n\n/**\n * Retrieve an `RNode` for a given `TNode` and `LView`.\n *\n * This function guarantees in dev mode to retrieve a non-null `RNode`.\n *\n * @param tNode\n * @param lView\n */\nexport function getNativeByTNode(tNode: TNode, lView: LView): RNode {\n  ngDevMode && assertTNodeForLView(tNode, lView);\n  ngDevMode && assertIndexInRange(lView, tNode.index);\n  const node: RNode = unwrapRNode(lView[tNode.index]);\n  return node;\n}\n\n/**\n * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n *\n * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n *\n * @param tNode\n * @param lView\n */\nexport function getNativeByTNodeOrNull(tNode: TNode|null, lView: LView): RNode|null {\n  const index = tNode === null ? -1 : tNode.index;\n  if (index !== -1) {\n    ngDevMode && assertTNodeForLView(tNode!, lView);\n    const node: RNode|null = unwrapRNode(lView[index]);\n    return node;\n  }\n  return null;\n}\n\n\n// fixme(misko): The return Type should be `TNode|null`\nexport function getTNode(tView: TView, index: number): TNode {\n  ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n  ngDevMode && assertLessThan(index, tView.data.length, 'wrong index for TNode');\n  const tNode = tView.data[index] as TNode;\n  ngDevMode && tNode !== null && assertTNode(tNode);\n  return tNode;\n}\n\n/** Retrieves a value from any `LView` or `TData`. */\nexport function load<T>(view: LView|TData, index: number): T {\n  ngDevMode && assertIndexInRange(view, index);\n  return view[index];\n}\n\nexport function getComponentLViewByIndex(nodeIndex: number, hostView: LView): LView {\n  // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n  ngDevMode && assertIndexInRange(hostView, nodeIndex);\n  const slotValue = hostView[nodeIndex];\n  const lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n  return lView;\n}\n\n/** Checks whether a given view is in creation mode */\nexport function isCreationMode(view: LView): boolean {\n  return (view[FLAGS] & LViewFlags.CreationMode) === LViewFlags.CreationMode;\n}\n\n/**\n * Returns a boolean for whether the view is attached to the change detection tree.\n *\n * Note: This determines whether a view should be checked, not whether it's inserted\n * into a container. For that, you'll want `viewAttachedToContainer` below.\n */\nexport function viewAttachedToChangeDetector(view: LView): boolean {\n  return (view[FLAGS] & LViewFlags.Attached) === LViewFlags.Attached;\n}\n\n/** Returns a boolean for whether the view is attached to a container. */\nexport function viewAttachedToContainer(view: LView): boolean {\n  return isLContainer(view[PARENT]);\n}\n\n/** Returns a constant from `TConstants` instance. */\nexport function getConstant<T>(consts: TConstants|null, index: null|undefined): null;\nexport function getConstant<T>(consts: TConstants, index: number): T|null;\nexport function getConstant<T>(consts: TConstants|null, index: number|null|undefined): T|null;\nexport function getConstant<T>(consts: TConstants|null, index: number|null|undefined): T|null {\n  if (index === null || index === undefined) return null;\n  ngDevMode && assertIndexInRange(consts!, index);\n  return consts![index] as unknown as T;\n}\n\n/**\n * Resets the pre-order hook flags of the view.\n * @param lView the LView on which the flags are reset\n */\nexport function resetPreOrderHookFlags(lView: LView) {\n  lView[PREORDER_HOOK_FLAGS] = 0;\n}\n\n/**\n * Updates the `TRANSPLANTED_VIEWS_TO_REFRESH` counter on the `LContainer` as well as the parents\n * whose\n *  1. counter goes from 0 to 1, indicating that there is a new child that has a view to refresh\n *  or\n *  2. counter goes from 1 to 0, indicating there are no more descendant views to refresh\n */\nexport function updateTransplantedViewCount(lContainer: LContainer, amount: 1|- 1) {\n  lContainer[TRANSPLANTED_VIEWS_TO_REFRESH] += amount;\n  let viewOrContainer: LView|LContainer = lContainer;\n  let parent: LView|LContainer|null = lContainer[PARENT];\n  while (parent !== null &&\n         ((amount === 1 && viewOrContainer[TRANSPLANTED_VIEWS_TO_REFRESH] === 1) ||\n          (amount === -1 && viewOrContainer[TRANSPLANTED_VIEWS_TO_REFRESH] === 0))) {\n    parent[TRANSPLANTED_VIEWS_TO_REFRESH] += amount;\n    viewOrContainer = parent;\n    parent = parent[PARENT];\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectFlags} from '../di/interface/injector';\nimport {assertDefined, assertEqual, assertGreaterThanOrEqual, assertLessThan, assertNotEqual, throwError} from '../util/assert';\n\nimport {assertLViewOrUndefined, assertTNodeForLView, assertTNodeForTView} from './assert';\nimport {DirectiveDef} from './interfaces/definition';\nimport {TNode, TNodeType} from './interfaces/node';\nimport {CONTEXT, DECLARATION_VIEW, HEADER_OFFSET, LView, OpaqueViewState, T_HOST, TData, TVIEW, TView, TViewType} from './interfaces/view';\nimport {MATH_ML_NAMESPACE, SVG_NAMESPACE} from './namespaces';\nimport {getTNode} from './util/view_utils';\n\n\n/**\n *\n */\ninterface LFrame {\n  /**\n   * Parent LFrame.\n   *\n   * This is needed when `leaveView` is called to restore the previous state.\n   */\n  parent: LFrame;\n\n  /**\n   * Child LFrame.\n   *\n   * This is used to cache existing LFrames to relieve the memory pressure.\n   */\n  child: LFrame|null;\n\n  /**\n   * State of the current view being processed.\n   *\n   * An array of nodes (text, element, container, etc), pipes, their bindings, and\n   * any local variables that need to be stored between invocations.\n   */\n  lView: LView;\n\n  /**\n   * Current `TView` associated with the `LFrame.lView`.\n   *\n   * One can get `TView` from `lFrame[TVIEW]` however because it is so common it makes sense to\n   * store it in `LFrame` for perf reasons.\n   */\n  tView: TView;\n\n  /**\n   * Used to set the parent property when nodes are created and track query results.\n   *\n   * This is used in conjunction with `isParent`.\n   */\n  currentTNode: TNode|null;\n\n  /**\n   * If `isParent` is:\n   *  - `true`: then `currentTNode` points to a parent node.\n   *  - `false`: then `currentTNode` points to previous node (sibling).\n   */\n  isParent: boolean;\n\n  /**\n   * Index of currently selected element in LView.\n   *\n   * Used by binding instructions. Updated as part of advance instruction.\n   */\n  selectedIndex: number;\n\n  /**\n   * Current pointer to the binding index.\n   */\n  bindingIndex: number;\n\n  /**\n   * The last viewData retrieved by nextContext().\n   * Allows building nextContext() and reference() calls.\n   *\n   * e.g. const inner = x().$implicit; const outer = x().$implicit;\n   */\n  contextLView: LView|null;\n\n  /**\n   * Store the element depth count. This is used to identify the root elements of the template\n   * so that we can then attach patch data `LView` to only those elements. We know that those\n   * are the only places where the patch data could change, this way we will save on number\n   * of places where tha patching occurs.\n   */\n  elementDepthCount: number;\n\n  /**\n   * Current namespace to be used when creating elements\n   */\n  currentNamespace: string|null;\n\n\n  /**\n   * The root index from which pure function instructions should calculate their binding\n   * indices. In component views, this is TView.bindingStartIndex. In a host binding\n   * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n   */\n  bindingRootIndex: number;\n\n  /**\n   * Current index of a View or Content Query which needs to be processed next.\n   * We iterate over the list of Queries and increment current query index at every step.\n   */\n  currentQueryIndex: number;\n\n  /**\n   * When host binding is executing this points to the directive index.\n   * `TView.data[currentDirectiveIndex]` is `DirectiveDef`\n   * `LView[currentDirectiveIndex]` is directive instance.\n   */\n  currentDirectiveIndex: number;\n\n  /**\n   * Are we currently in i18n block as denoted by `ɵɵelementStart` and `ɵɵelementEnd`.\n   *\n   * This information is needed because while we are in i18n block all elements must be pre-declared\n   * in the translation. (i.e. `Hello �#2�World�/#2�!` pre-declares element at `�#2�` location.)\n   * This allocates `TNodeType.Placeholder` element at location `2`. If translator removes `�#2�`\n   * from translation than the runtime must also ensure tha element at `2` does not get inserted\n   * into the DOM. The translation does not carry information about deleted elements. Therefor the\n   * only way to know that an element is deleted is that it was not pre-declared in the translation.\n   *\n   * This flag works by ensuring that elements which are created without pre-declaration\n   * (`TNodeType.Placeholder`) are not inserted into the DOM render tree. (It does mean that the\n   * element still gets instantiated along with all of its behavior [directives])\n   */\n  inI18n: boolean;\n}\n\n/**\n * All implicit instruction state is stored here.\n *\n * It is useful to have a single object where all of the state is stored as a mental model\n * (rather it being spread across many different variables.)\n *\n * PERF NOTE: Turns out that writing to a true global variable is slower than\n * having an intermediate object with properties.\n */\ninterface InstructionState {\n  /**\n   * Current `LFrame`\n   *\n   * `null` if we have not called `enterView`\n   */\n  lFrame: LFrame;\n\n  /**\n   * Stores whether directives should be matched to elements.\n   *\n   * When template contains `ngNonBindable` then we need to prevent the runtime from matching\n   * directives on children of that element.\n   *\n   * Example:\n   * ```\n   * <my-comp my-directive>\n   *   Should match component / directive.\n   * </my-comp>\n   * <div ngNonBindable>\n   *   <my-comp my-directive>\n   *     Should not match component / directive because we are in ngNonBindable.\n   *   </my-comp>\n   * </div>\n   * ```\n   */\n  bindingsEnabled: boolean;\n}\n\nconst instructionState: InstructionState = {\n  lFrame: createLFrame(null),\n  bindingsEnabled: true,\n};\n\n/**\n * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n *\n * Necessary to support ChangeDetectorRef.checkNoChanges().\n *\n * The `checkNoChanges` function is invoked only in ngDevMode=true and verifies that no unintended\n * changes exist in the change detector or its children.\n */\nlet _isInCheckNoChangesMode = false;\n\n/**\n * Returns true if the instruction state stack is empty.\n *\n * Intended to be called from tests only (tree shaken otherwise).\n */\nexport function specOnlyIsInstructionStateEmpty(): boolean {\n  return instructionState.lFrame.parent === null;\n}\n\n\nexport function getElementDepthCount() {\n  return instructionState.lFrame.elementDepthCount;\n}\n\nexport function increaseElementDepthCount() {\n  instructionState.lFrame.elementDepthCount++;\n}\n\nexport function decreaseElementDepthCount() {\n  instructionState.lFrame.elementDepthCount--;\n}\n\nexport function getBindingsEnabled(): boolean {\n  return instructionState.bindingsEnabled;\n}\n\n\n/**\n * Enables directive matching on elements.\n *\n *  * Example:\n * ```\n * <my-comp my-directive>\n *   Should match component / directive.\n * </my-comp>\n * <div ngNonBindable>\n *   <!-- ɵɵdisableBindings() -->\n *   <my-comp my-directive>\n *     Should not match component / directive because we are in ngNonBindable.\n *   </my-comp>\n *   <!-- ɵɵenableBindings() -->\n * </div>\n * ```\n *\n * @codeGenApi\n */\nexport function ɵɵenableBindings(): void {\n  instructionState.bindingsEnabled = true;\n}\n\n/**\n * Disables directive matching on element.\n *\n *  * Example:\n * ```\n * <my-comp my-directive>\n *   Should match component / directive.\n * </my-comp>\n * <div ngNonBindable>\n *   <!-- ɵɵdisableBindings() -->\n *   <my-comp my-directive>\n *     Should not match component / directive because we are in ngNonBindable.\n *   </my-comp>\n *   <!-- ɵɵenableBindings() -->\n * </div>\n * ```\n *\n * @codeGenApi\n */\nexport function ɵɵdisableBindings(): void {\n  instructionState.bindingsEnabled = false;\n}\n\n/**\n * Return the current `LView`.\n */\nexport function getLView<T>(): LView<T> {\n  return instructionState.lFrame.lView as LView<T>;\n}\n\n/**\n * Return the current `TView`.\n */\nexport function getTView(): TView {\n  return instructionState.lFrame.tView;\n}\n\n/**\n * Restores `contextViewData` to the given OpaqueViewState instance.\n *\n * Used in conjunction with the getCurrentView() instruction to save a snapshot\n * of the current view and restore it when listeners are invoked. This allows\n * walking the declaration view tree in listeners to get vars from parent views.\n *\n * @param viewToRestore The OpaqueViewState instance to restore.\n * @returns Context of the restored OpaqueViewState instance.\n *\n * @codeGenApi\n */\nexport function ɵɵrestoreView<T = any>(viewToRestore: OpaqueViewState): T {\n  instructionState.lFrame.contextLView = viewToRestore as any as LView;\n  return (viewToRestore as any as LView)[CONTEXT] as unknown as T;\n}\n\n\n/**\n * Clears the view set in `ɵɵrestoreView` from memory. Returns the passed in\n * value so that it can be used as a return value of an instruction.\n *\n * @codeGenApi\n */\nexport function ɵɵresetView<T>(value?: T): T|undefined {\n  instructionState.lFrame.contextLView = null;\n  return value;\n}\n\n\nexport function getCurrentTNode(): TNode|null {\n  let currentTNode = getCurrentTNodePlaceholderOk();\n  while (currentTNode !== null && currentTNode.type === TNodeType.Placeholder) {\n    currentTNode = currentTNode.parent;\n  }\n  return currentTNode;\n}\n\nexport function getCurrentTNodePlaceholderOk(): TNode|null {\n  return instructionState.lFrame.currentTNode;\n}\n\nexport function getCurrentParentTNode(): TNode|null {\n  const lFrame = instructionState.lFrame;\n  const currentTNode = lFrame.currentTNode;\n  return lFrame.isParent ? currentTNode : currentTNode!.parent;\n}\n\nexport function setCurrentTNode(tNode: TNode|null, isParent: boolean) {\n  ngDevMode && tNode && assertTNodeForTView(tNode, instructionState.lFrame.tView);\n  const lFrame = instructionState.lFrame;\n  lFrame.currentTNode = tNode;\n  lFrame.isParent = isParent;\n}\n\nexport function isCurrentTNodeParent(): boolean {\n  return instructionState.lFrame.isParent;\n}\n\nexport function setCurrentTNodeAsNotParent(): void {\n  instructionState.lFrame.isParent = false;\n}\nexport function setCurrentTNodeAsParent(): void {\n  instructionState.lFrame.isParent = true;\n}\n\nexport function getContextLView(): LView {\n  const contextLView = instructionState.lFrame.contextLView;\n  ngDevMode && assertDefined(contextLView, 'contextLView must be defined.');\n  return contextLView!;\n}\n\nexport function isInCheckNoChangesMode(): boolean {\n  !ngDevMode && throwError('Must never be called in production mode');\n  return _isInCheckNoChangesMode;\n}\n\nexport function setIsInCheckNoChangesMode(mode: boolean): void {\n  !ngDevMode && throwError('Must never be called in production mode');\n  _isInCheckNoChangesMode = mode;\n}\n\n// top level variables should not be exported for performance reasons (PERF_NOTES.md)\nexport function getBindingRoot() {\n  const lFrame = instructionState.lFrame;\n  let index = lFrame.bindingRootIndex;\n  if (index === -1) {\n    index = lFrame.bindingRootIndex = lFrame.tView.bindingStartIndex;\n  }\n  return index;\n}\n\nexport function getBindingIndex(): number {\n  return instructionState.lFrame.bindingIndex;\n}\n\nexport function setBindingIndex(value: number): number {\n  return instructionState.lFrame.bindingIndex = value;\n}\n\nexport function nextBindingIndex(): number {\n  return instructionState.lFrame.bindingIndex++;\n}\n\nexport function incrementBindingIndex(count: number): number {\n  const lFrame = instructionState.lFrame;\n  const index = lFrame.bindingIndex;\n  lFrame.bindingIndex = lFrame.bindingIndex + count;\n  return index;\n}\n\nexport function isInI18nBlock() {\n  return instructionState.lFrame.inI18n;\n}\n\nexport function setInI18nBlock(isInI18nBlock: boolean): void {\n  instructionState.lFrame.inI18n = isInI18nBlock;\n}\n\n/**\n * Set a new binding root index so that host template functions can execute.\n *\n * Bindings inside the host template are 0 index. But because we don't know ahead of time\n * how many host bindings we have we can't pre-compute them. For this reason they are all\n * 0 index and we just shift the root so that they match next available location in the LView.\n *\n * @param bindingRootIndex Root index for `hostBindings`\n * @param currentDirectiveIndex `TData[currentDirectiveIndex]` will point to the current directive\n *        whose `hostBindings` are being processed.\n */\nexport function setBindingRootForHostBindings(\n    bindingRootIndex: number, currentDirectiveIndex: number) {\n  const lFrame = instructionState.lFrame;\n  lFrame.bindingIndex = lFrame.bindingRootIndex = bindingRootIndex;\n  setCurrentDirectiveIndex(currentDirectiveIndex);\n}\n\n/**\n * When host binding is executing this points to the directive index.\n * `TView.data[getCurrentDirectiveIndex()]` is `DirectiveDef`\n * `LView[getCurrentDirectiveIndex()]` is directive instance.\n */\nexport function getCurrentDirectiveIndex(): number {\n  return instructionState.lFrame.currentDirectiveIndex;\n}\n\n/**\n * Sets an index of a directive whose `hostBindings` are being processed.\n *\n * @param currentDirectiveIndex `TData` index where current directive instance can be found.\n */\nexport function setCurrentDirectiveIndex(currentDirectiveIndex: number): void {\n  instructionState.lFrame.currentDirectiveIndex = currentDirectiveIndex;\n}\n\n/**\n * Retrieve the current `DirectiveDef` which is active when `hostBindings` instruction is being\n * executed.\n *\n * @param tData Current `TData` where the `DirectiveDef` will be looked up at.\n */\nexport function getCurrentDirectiveDef(tData: TData): DirectiveDef<any>|null {\n  const currentDirectiveIndex = instructionState.lFrame.currentDirectiveIndex;\n  return currentDirectiveIndex === -1 ? null : tData[currentDirectiveIndex] as DirectiveDef<any>;\n}\n\nexport function getCurrentQueryIndex(): number {\n  return instructionState.lFrame.currentQueryIndex;\n}\n\nexport function setCurrentQueryIndex(value: number): void {\n  instructionState.lFrame.currentQueryIndex = value;\n}\n\n/**\n * Returns a `TNode` of the location where the current `LView` is declared at.\n *\n * @param lView an `LView` that we want to find parent `TNode` for.\n */\nfunction getDeclarationTNode(lView: LView): TNode|null {\n  const tView = lView[TVIEW];\n\n  // Return the declaration parent for embedded views\n  if (tView.type === TViewType.Embedded) {\n    ngDevMode && assertDefined(tView.declTNode, 'Embedded TNodes should have declaration parents.');\n    return tView.declTNode;\n  }\n\n  // Components don't have `TView.declTNode` because each instance of component could be\n  // inserted in different location, hence `TView.declTNode` is meaningless.\n  // Falling back to `T_HOST` in case we cross component boundary.\n  if (tView.type === TViewType.Component) {\n    return lView[T_HOST];\n  }\n\n  // Remaining TNode type is `TViewType.Root` which doesn't have a parent TNode.\n  return null;\n}\n\n/**\n * This is a light weight version of the `enterView` which is needed by the DI system.\n *\n * @param lView `LView` location of the DI context.\n * @param tNode `TNode` for DI context\n * @param flags DI context flags. if `SkipSelf` flag is set than we walk up the declaration\n *     tree from `tNode`  until we find parent declared `TElementNode`.\n * @returns `true` if we have successfully entered DI associated with `tNode` (or with declared\n *     `TNode` if `flags` has  `SkipSelf`). Failing to enter DI implies that no associated\n *     `NodeInjector` can be found and we should instead use `ModuleInjector`.\n *     - If `true` than this call must be fallowed by `leaveDI`\n *     - If `false` than this call failed and we should NOT call `leaveDI`\n */\nexport function enterDI(lView: LView, tNode: TNode, flags: InjectFlags) {\n  ngDevMode && assertLViewOrUndefined(lView);\n\n  if (flags & InjectFlags.SkipSelf) {\n    ngDevMode && assertTNodeForTView(tNode, lView[TVIEW]);\n\n    let parentTNode = tNode as TNode | null;\n    let parentLView = lView;\n\n    while (true) {\n      ngDevMode && assertDefined(parentTNode, 'Parent TNode should be defined');\n      parentTNode = parentTNode!.parent as TNode | null;\n      if (parentTNode === null && !(flags & InjectFlags.Host)) {\n        parentTNode = getDeclarationTNode(parentLView);\n        if (parentTNode === null) break;\n\n        // In this case, a parent exists and is definitely an element. So it will definitely\n        // have an existing lView as the declaration view, which is why we can assume it's defined.\n        ngDevMode && assertDefined(parentLView, 'Parent LView should be defined');\n        parentLView = parentLView[DECLARATION_VIEW]!;\n\n        // In Ivy there are Comment nodes that correspond to ngIf and NgFor embedded directives\n        // We want to skip those and look only at Elements and ElementContainers to ensure\n        // we're looking at true parent nodes, and not content or other types.\n        if (parentTNode.type & (TNodeType.Element | TNodeType.ElementContainer)) {\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n    if (parentTNode === null) {\n      // If we failed to find a parent TNode this means that we should use module injector.\n      return false;\n    } else {\n      tNode = parentTNode;\n      lView = parentLView;\n    }\n  }\n\n  ngDevMode && assertTNodeForLView(tNode, lView);\n  const lFrame = instructionState.lFrame = allocLFrame();\n  lFrame.currentTNode = tNode;\n  lFrame.lView = lView;\n\n  return true;\n}\n\n/**\n * Swap the current lView with a new lView.\n *\n * For performance reasons we store the lView in the top level of the module.\n * This way we minimize the number of properties to read. Whenever a new view\n * is entered we have to store the lView for later, and when the view is\n * exited the state has to be restored\n *\n * @param newView New lView to become active\n * @returns the previously active lView;\n */\nexport function enterView(newView: LView): void {\n  ngDevMode && assertNotEqual(newView[0], newView[1] as any, '????');\n  ngDevMode && assertLViewOrUndefined(newView);\n  const newLFrame = allocLFrame();\n  if (ngDevMode) {\n    assertEqual(newLFrame.isParent, true, 'Expected clean LFrame');\n    assertEqual(newLFrame.lView, null, 'Expected clean LFrame');\n    assertEqual(newLFrame.tView, null, 'Expected clean LFrame');\n    assertEqual(newLFrame.selectedIndex, -1, 'Expected clean LFrame');\n    assertEqual(newLFrame.elementDepthCount, 0, 'Expected clean LFrame');\n    assertEqual(newLFrame.currentDirectiveIndex, -1, 'Expected clean LFrame');\n    assertEqual(newLFrame.currentNamespace, null, 'Expected clean LFrame');\n    assertEqual(newLFrame.bindingRootIndex, -1, 'Expected clean LFrame');\n    assertEqual(newLFrame.currentQueryIndex, 0, 'Expected clean LFrame');\n  }\n  const tView = newView[TVIEW];\n  instructionState.lFrame = newLFrame;\n  ngDevMode && tView.firstChild && assertTNodeForTView(tView.firstChild, tView);\n  newLFrame.currentTNode = tView.firstChild!;\n  newLFrame.lView = newView;\n  newLFrame.tView = tView;\n  newLFrame.contextLView = newView;\n  newLFrame.bindingIndex = tView.bindingStartIndex;\n  newLFrame.inI18n = false;\n}\n\n/**\n * Allocates next free LFrame. This function tries to reuse the `LFrame`s to lower memory pressure.\n */\nfunction allocLFrame() {\n  const currentLFrame = instructionState.lFrame;\n  const childLFrame = currentLFrame === null ? null : currentLFrame.child;\n  const newLFrame = childLFrame === null ? createLFrame(currentLFrame) : childLFrame;\n  return newLFrame;\n}\n\nfunction createLFrame(parent: LFrame|null): LFrame {\n  const lFrame: LFrame = {\n    currentTNode: null,\n    isParent: true,\n    lView: null!,\n    tView: null!,\n    selectedIndex: -1,\n    contextLView: null,\n    elementDepthCount: 0,\n    currentNamespace: null,\n    currentDirectiveIndex: -1,\n    bindingRootIndex: -1,\n    bindingIndex: -1,\n    currentQueryIndex: 0,\n    parent: parent!,\n    child: null,\n    inI18n: false,\n  };\n  parent !== null && (parent.child = lFrame);  // link the new LFrame for reuse.\n  return lFrame;\n}\n\n/**\n * A lightweight version of leave which is used with DI.\n *\n * This function only resets `currentTNode` and `LView` as those are the only properties\n * used with DI (`enterDI()`).\n *\n * NOTE: This function is reexported as `leaveDI`. However `leaveDI` has return type of `void` where\n * as `leaveViewLight` has `LFrame`. This is so that `leaveViewLight` can be used in `leaveView`.\n */\nfunction leaveViewLight(): LFrame {\n  const oldLFrame = instructionState.lFrame;\n  instructionState.lFrame = oldLFrame.parent;\n  oldLFrame.currentTNode = null!;\n  oldLFrame.lView = null!;\n  return oldLFrame;\n}\n\n/**\n * This is a lightweight version of the `leaveView` which is needed by the DI system.\n *\n * NOTE: this function is an alias so that we can change the type of the function to have `void`\n * return type.\n */\nexport const leaveDI: () => void = leaveViewLight;\n\n/**\n * Leave the current `LView`\n *\n * This pops the `LFrame` with the associated `LView` from the stack.\n *\n * IMPORTANT: We must zero out the `LFrame` values here otherwise they will be retained. This is\n * because for performance reasons we don't release `LFrame` but rather keep it for next use.\n */\nexport function leaveView() {\n  const oldLFrame = leaveViewLight();\n  oldLFrame.isParent = true;\n  oldLFrame.tView = null!;\n  oldLFrame.selectedIndex = -1;\n  oldLFrame.contextLView = null;\n  oldLFrame.elementDepthCount = 0;\n  oldLFrame.currentDirectiveIndex = -1;\n  oldLFrame.currentNamespace = null;\n  oldLFrame.bindingRootIndex = -1;\n  oldLFrame.bindingIndex = -1;\n  oldLFrame.currentQueryIndex = 0;\n}\n\nexport function nextContextImpl<T = any>(level: number): T {\n  const contextLView = instructionState.lFrame.contextLView =\n      walkUpViews(level, instructionState.lFrame.contextLView!);\n  return contextLView[CONTEXT] as unknown as T;\n}\n\nfunction walkUpViews(nestingLevel: number, currentView: LView): LView {\n  while (nestingLevel > 0) {\n    ngDevMode &&\n        assertDefined(\n            currentView[DECLARATION_VIEW],\n            'Declaration view should be defined if nesting level is greater than 0.');\n    currentView = currentView[DECLARATION_VIEW]!;\n    nestingLevel--;\n  }\n  return currentView;\n}\n\n/**\n * Gets the currently selected element index.\n *\n * Used with {@link property} instruction (and more in the future) to identify the index in the\n * current `LView` to act on.\n */\nexport function getSelectedIndex() {\n  return instructionState.lFrame.selectedIndex;\n}\n\n/**\n * Sets the most recent index passed to {@link select}\n *\n * Used with {@link property} instruction (and more in the future) to identify the index in the\n * current `LView` to act on.\n *\n * (Note that if an \"exit function\" was set earlier (via `setElementExitFn()`) then that will be\n * run if and when the provided `index` value is different from the current selected index value.)\n */\nexport function setSelectedIndex(index: number) {\n  ngDevMode && index !== -1 &&\n      assertGreaterThanOrEqual(index, HEADER_OFFSET, 'Index must be past HEADER_OFFSET (or -1).');\n  ngDevMode &&\n      assertLessThan(\n          index, instructionState.lFrame.lView.length, 'Can\\'t set index passed end of LView');\n  instructionState.lFrame.selectedIndex = index;\n}\n\n/**\n * Gets the `tNode` that represents currently selected element.\n */\nexport function getSelectedTNode() {\n  const lFrame = instructionState.lFrame;\n  return getTNode(lFrame.tView, lFrame.selectedIndex);\n}\n\n/**\n * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n *\n * @codeGenApi\n */\nexport function ɵɵnamespaceSVG() {\n  instructionState.lFrame.currentNamespace = SVG_NAMESPACE;\n}\n\n/**\n * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n *\n * @codeGenApi\n */\nexport function ɵɵnamespaceMathML() {\n  instructionState.lFrame.currentNamespace = MATH_ML_NAMESPACE;\n}\n\n/**\n * Sets the namespace used to create elements to `null`, which forces element creation to use\n * `createElement` rather than `createElementNS`.\n *\n * @codeGenApi\n */\nexport function ɵɵnamespaceHTML() {\n  namespaceHTMLInternal();\n}\n\n/**\n * Sets the namespace used to create elements to `null`, which forces element creation to use\n * `createElement` rather than `createElementNS`.\n */\nexport function namespaceHTMLInternal() {\n  instructionState.lFrame.currentNamespace = null;\n}\n\nexport function getNamespace(): string|null {\n  return instructionState.lFrame.currentNamespace;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AfterContentChecked, AfterContentInit, AfterViewChecked, AfterViewInit, DoCheck, OnChanges, OnDestroy, OnInit} from '../interface/lifecycle_hooks';\nimport {assertDefined, assertEqual, assertNotEqual} from '../util/assert';\nimport {assertFirstCreatePass} from './assert';\nimport {NgOnChangesFeatureImpl} from './features/ng_onchanges_feature';\nimport {DirectiveDef} from './interfaces/definition';\nimport {TNode} from './interfaces/node';\nimport {FLAGS, HookData, InitPhaseState, LView, LViewFlags, PREORDER_HOOK_FLAGS, PreOrderHookFlags, TView} from './interfaces/view';\nimport {profiler, ProfilerEvent} from './profiler';\nimport {isInCheckNoChangesMode} from './state';\n\n\n\n/**\n * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n *\n * Must be run *only* on the first template pass.\n *\n * Sets up the pre-order hooks on the provided `tView`,\n * see {@link HookData} for details about the data structure.\n *\n * @param directiveIndex The index of the directive in LView\n * @param directiveDef The definition containing the hooks to setup in tView\n * @param tView The current TView\n */\nexport function registerPreOrderHooks(\n    directiveIndex: number, directiveDef: DirectiveDef<any>, tView: TView): void {\n  ngDevMode && assertFirstCreatePass(tView);\n  const {ngOnChanges, ngOnInit, ngDoCheck} =\n      directiveDef.type.prototype as OnChanges & OnInit & DoCheck;\n\n  if (ngOnChanges as Function | undefined) {\n    const wrappedOnChanges = NgOnChangesFeatureImpl(directiveDef);\n    (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, wrappedOnChanges);\n    (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = []))\n        .push(directiveIndex, wrappedOnChanges);\n  }\n\n  if (ngOnInit) {\n    (tView.preOrderHooks || (tView.preOrderHooks = [])).push(0 - directiveIndex, ngOnInit);\n  }\n\n  if (ngDoCheck) {\n    (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, ngDoCheck);\n    (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, ngDoCheck);\n  }\n}\n\n/**\n *\n * Loops through the directives on the provided `tNode` and queues hooks to be\n * run that are not initialization hooks.\n *\n * Should be executed during `elementEnd()` and similar to\n * preserve hook execution order. Content, view, and destroy hooks for projected\n * components and directives must be called *before* their hosts.\n *\n * Sets up the content, view, and destroy hooks on the provided `tView`,\n * see {@link HookData} for details about the data structure.\n *\n * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n * separately at `elementStart`.\n *\n * @param tView The current TView\n * @param tNode The TNode whose directives are to be searched for hooks to queue\n */\nexport function registerPostOrderHooks(tView: TView, tNode: TNode): void {\n  ngDevMode && assertFirstCreatePass(tView);\n  // It's necessary to loop through the directives at elementEnd() (rather than processing in\n  // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n  // hooks for projected components and directives must be called *before* their hosts.\n  for (let i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n    const directiveDef = tView.data[i] as DirectiveDef<any>;\n    ngDevMode && assertDefined(directiveDef, 'Expecting DirectiveDef');\n    const lifecycleHooks: AfterContentInit&AfterContentChecked&AfterViewInit&AfterViewChecked&\n        OnDestroy = directiveDef.type.prototype;\n    const {\n      ngAfterContentInit,\n      ngAfterContentChecked,\n      ngAfterViewInit,\n      ngAfterViewChecked,\n      ngOnDestroy\n    } = lifecycleHooks;\n\n    if (ngAfterContentInit) {\n      (tView.contentHooks || (tView.contentHooks = [])).push(-i, ngAfterContentInit);\n    }\n\n    if (ngAfterContentChecked) {\n      (tView.contentHooks || (tView.contentHooks = [])).push(i, ngAfterContentChecked);\n      (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, ngAfterContentChecked);\n    }\n\n    if (ngAfterViewInit) {\n      (tView.viewHooks || (tView.viewHooks = [])).push(-i, ngAfterViewInit);\n    }\n\n    if (ngAfterViewChecked) {\n      (tView.viewHooks || (tView.viewHooks = [])).push(i, ngAfterViewChecked);\n      (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, ngAfterViewChecked);\n    }\n\n    if (ngOnDestroy != null) {\n      (tView.destroyHooks || (tView.destroyHooks = [])).push(i, ngOnDestroy);\n    }\n  }\n}\n\n/**\n * Executing hooks requires complex logic as we need to deal with 2 constraints.\n *\n * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n * once, across many change detection cycles. This must be true even if some hooks throw, or if\n * some recursively trigger a change detection cycle.\n * To solve that, it is required to track the state of the execution of these init hooks.\n * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n * and the index within that phase. They can be seen as a cursor in the following structure:\n * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n * They are are stored as flags in LView[FLAGS].\n *\n * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n * To be able to pause and resume their execution, we also need some state about the hook's array\n * that is being processed:\n * - the index of the next hook to be executed\n * - the number of init hooks already found in the processed part of the  array\n * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n */\n\n\n/**\n * Executes pre-order check hooks ( OnChanges, DoChanges) given a view where all the init hooks were\n * executed once. This is a light version of executeInitAndCheckPreOrderHooks where we can skip read\n * / write of the init-hooks related flags.\n * @param lView The LView where hooks are defined\n * @param hooks Hooks to be run\n * @param nodeIndex 3 cases depending on the value:\n * - undefined: all hooks from the array should be executed (post-order case)\n * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n * flushing the remaining hooks)\n * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n * case, when executing select(number))\n */\nexport function executeCheckHooks(lView: LView, hooks: HookData, nodeIndex?: number|null) {\n  callHooks(lView, hooks, InitPhaseState.InitPhaseCompleted, nodeIndex);\n}\n\n/**\n * Executes post-order init and check hooks (one of AfterContentInit, AfterContentChecked,\n * AfterViewInit, AfterViewChecked) given a view where there are pending init hooks to be executed.\n * @param lView The LView where hooks are defined\n * @param hooks Hooks to be run\n * @param initPhase A phase for which hooks should be run\n * @param nodeIndex 3 cases depending on the value:\n * - undefined: all hooks from the array should be executed (post-order case)\n * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n * flushing the remaining hooks)\n * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n * case, when executing select(number))\n */\nexport function executeInitAndCheckHooks(\n    lView: LView, hooks: HookData, initPhase: InitPhaseState, nodeIndex?: number|null) {\n  ngDevMode &&\n      assertNotEqual(\n          initPhase, InitPhaseState.InitPhaseCompleted,\n          'Init pre-order hooks should not be called more than once');\n  if ((lView[FLAGS] & LViewFlags.InitPhaseStateMask) === initPhase) {\n    callHooks(lView, hooks, initPhase, nodeIndex);\n  }\n}\n\nexport function incrementInitPhaseFlags(lView: LView, initPhase: InitPhaseState): void {\n  ngDevMode &&\n      assertNotEqual(\n          initPhase, InitPhaseState.InitPhaseCompleted,\n          'Init hooks phase should not be incremented after all init hooks have been run.');\n  let flags = lView[FLAGS];\n  if ((flags & LViewFlags.InitPhaseStateMask) === initPhase) {\n    flags &= LViewFlags.IndexWithinInitPhaseReset;\n    flags += LViewFlags.InitPhaseStateIncrementer;\n    lView[FLAGS] = flags;\n  }\n}\n\n/**\n * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n * the first LView pass\n *\n * @param currentView The current view\n * @param arr The array in which the hooks are found\n * @param initPhaseState the current state of the init phase\n * @param currentNodeIndex 3 cases depending on the value:\n * - undefined: all hooks from the array should be executed (post-order case)\n * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n * flushing the remaining hooks)\n * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n * case, when executing select(number))\n */\nfunction callHooks(\n    currentView: LView, arr: HookData, initPhase: InitPhaseState,\n    currentNodeIndex: number|null|undefined): void {\n  ngDevMode &&\n      assertEqual(\n          isInCheckNoChangesMode(), false,\n          'Hooks should never be run when in check no changes mode.');\n  const startIndex = currentNodeIndex !== undefined ?\n      (currentView[PREORDER_HOOK_FLAGS] & PreOrderHookFlags.IndexOfTheNextPreOrderHookMaskMask) :\n      0;\n  const nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n  const max = arr.length - 1;  // Stop the loop at length - 1, because we look for the hook at i + 1\n  let lastNodeIndexFound = 0;\n  for (let i = startIndex; i < max; i++) {\n    const hook = arr[i + 1] as number | (() => void);\n    if (typeof hook === 'number') {\n      lastNodeIndexFound = arr[i] as number;\n      if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n        break;\n      }\n    } else {\n      const isInitHook = arr[i] < 0;\n      if (isInitHook)\n        currentView[PREORDER_HOOK_FLAGS] += PreOrderHookFlags.NumberOfInitHooksCalledIncrementer;\n      if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n        callHook(currentView, initPhase, arr, i);\n        currentView[PREORDER_HOOK_FLAGS] =\n            (currentView[PREORDER_HOOK_FLAGS] & PreOrderHookFlags.NumberOfInitHooksCalledMask) + i +\n            2;\n      }\n      i++;\n    }\n  }\n}\n\n/**\n * Execute one hook against the current `LView`.\n *\n * @param currentView The current view\n * @param initPhaseState the current state of the init phase\n * @param arr The array in which the hooks are found\n * @param i The current index within the hook data array\n */\nfunction callHook(currentView: LView, initPhase: InitPhaseState, arr: HookData, i: number) {\n  const isInitHook = arr[i] < 0;\n  const hook = arr[i + 1] as () => void;\n  const directiveIndex = isInitHook ? -arr[i] : arr[i] as number;\n  const directive = currentView[directiveIndex];\n  if (isInitHook) {\n    const indexWithintInitPhase = currentView[FLAGS] >> LViewFlags.IndexWithinInitPhaseShift;\n    // The init phase state must be always checked here as it may have been recursively updated.\n    if (indexWithintInitPhase <\n            (currentView[PREORDER_HOOK_FLAGS] >> PreOrderHookFlags.NumberOfInitHooksCalledShift) &&\n        (currentView[FLAGS] & LViewFlags.InitPhaseStateMask) === initPhase) {\n      currentView[FLAGS] += LViewFlags.IndexWithinInitPhaseIncrementer;\n      profiler(ProfilerEvent.LifecycleHookStart, directive, hook);\n      try {\n        hook.call(directive);\n      } finally {\n        profiler(ProfilerEvent.LifecycleHookEnd, directive, hook);\n      }\n    }\n  } else {\n    profiler(ProfilerEvent.LifecycleHookStart, directive, hook);\n    try {\n      hook.call(directive);\n    } finally {\n      profiler(ProfilerEvent.LifecycleHookEnd, directive, hook);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectFlags} from '../../di/interface/injector';\nimport {ProviderToken} from '../../di/provider_token';\nimport {assertDefined, assertEqual} from '../../util/assert';\n\nimport {TDirectiveHostNode} from './node';\nimport {LView, TData} from './view';\n\n/**\n * Offsets of the `NodeInjector` data structure in the expando.\n *\n * `NodeInjector` is stored in both `LView` as well as `TView.data`. All storage requires 9 words.\n * First 8 are reserved for bloom filter and the 9th is reserved for the associated `TNode` as well\n * as parent `NodeInjector` pointer. All indexes are starting with `index` and have an offset as\n * shown.\n *\n * `LView` layout:\n * ```\n * index + 0: cumulative bloom filter\n * index + 1: cumulative bloom filter\n * index + 2: cumulative bloom filter\n * index + 3: cumulative bloom filter\n * index + 4: cumulative bloom filter\n * index + 5: cumulative bloom filter\n * index + 6: cumulative bloom filter\n * index + 7: cumulative bloom filter\n * index + 8: cumulative bloom filter\n * index + PARENT: Index to the parent injector. See `RelativeInjectorLocation`\n *                 `const parent = lView[index + NodeInjectorOffset.PARENT]`\n * ```\n *\n * `TViewData` layout:\n * ```\n * index + 0: cumulative bloom filter\n * index + 1: cumulative bloom filter\n * index + 2: cumulative bloom filter\n * index + 3: cumulative bloom filter\n * index + 4: cumulative bloom filter\n * index + 5: cumulative bloom filter\n * index + 6: cumulative bloom filter\n * index + 7: cumulative bloom filter\n * index + 8: cumulative bloom filter\n * index + TNODE: TNode associated with this `NodeInjector`\n *                `const tNode = tView.data[index + NodeInjectorOffset.TNODE]`\n * ```\n */\nexport const enum NodeInjectorOffset {\n  TNODE = 8,\n  PARENT = 8,\n  BLOOM_SIZE = 8,\n  SIZE = 9,\n}\n\n/**\n * Represents a relative location of parent injector.\n *\n * The interfaces encodes number of parents `LView`s to traverse and index in the `LView`\n * pointing to the parent injector.\n */\nexport interface RelativeInjectorLocation {\n  __brand__: 'RelativeInjectorLocationFlags';\n}\n\nexport const enum RelativeInjectorLocationFlags {\n  InjectorIndexMask = 0b111111111111111,\n  ViewOffsetShift = 16,\n  NO_PARENT = -1,\n}\n\nexport const NO_PARENT_INJECTOR: RelativeInjectorLocation = -1 as any;\n\n/**\n * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n * `TView.data`. This allows us to store information about the current node's tokens (which\n * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n * shared, so they live in `LView`).\n *\n * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n * determines whether a directive is available on the associated node or not. This prevents us\n * from searching the directives array at this level unless it's probable the directive is in it.\n *\n * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n *\n * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n * will differ based on where it is flattened into the main array, so it's not possible to know\n * the indices ahead of time and save their types here. The interfaces are still included here\n * for documentation purposes.\n *\n * export interface LInjector extends Array<any> {\n *\n *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n *    [0]: number;\n *\n *    // Cumulative bloom for directive IDs 32-63\n *    [1]: number;\n *\n *    // Cumulative bloom for directive IDs 64-95\n *    [2]: number;\n *\n *    // Cumulative bloom for directive IDs 96-127\n *    [3]: number;\n *\n *    // Cumulative bloom for directive IDs 128-159\n *    [4]: number;\n *\n *    // Cumulative bloom for directive IDs 160 - 191\n *    [5]: number;\n *\n *    // Cumulative bloom for directive IDs 192 - 223\n *    [6]: number;\n *\n *    // Cumulative bloom for directive IDs 224 - 255\n *    [7]: number;\n *\n *    // We need to store a reference to the injector's parent so DI can keep looking up\n *    // the injector tree until it finds the dependency it's looking for.\n *    [PARENT_INJECTOR]: number;\n * }\n *\n * export interface TInjector extends Array<any> {\n *\n *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n *    [0]: number;\n *\n *    // Shared node bloom for directive IDs 32-63\n *    [1]: number;\n *\n *    // Shared node bloom for directive IDs 64-95\n *    [2]: number;\n *\n *    // Shared node bloom for directive IDs 96-127\n *    [3]: number;\n *\n *    // Shared node bloom for directive IDs 128-159\n *    [4]: number;\n *\n *    // Shared node bloom for directive IDs 160 - 191\n *    [5]: number;\n *\n *    // Shared node bloom for directive IDs 192 - 223\n *    [6]: number;\n *\n *    // Shared node bloom for directive IDs 224 - 255\n *    [7]: number;\n *\n *    // Necessary to find directive indices for a particular node.\n *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n *  }\n */\n\n/**\n * Factory for creating instances of injectors in the NodeInjector.\n *\n * This factory is complicated by the fact that it can resolve `multi` factories as well.\n *\n * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n * - One without `multi` support (most common)\n * - One with `multi` values, (rare).\n *\n * Since VMs can cache up to 4 inline hidden classes this is OK.\n *\n * - Single factory: Only `resolving` and `factory` is defined.\n * - `providers` factory: `componentProviders` is a number and `index = -1`.\n * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n */\nexport class NodeInjectorFactory {\n  /**\n   * The inject implementation to be activated when using the factory.\n   */\n  injectImpl: null|(<T>(token: ProviderToken<T>, flags?: InjectFlags) => T);\n\n  /**\n   * Marker set to true during factory invocation to see if we get into recursive loop.\n   * Recursive loop causes an error to be displayed.\n   */\n  resolving = false;\n\n  /**\n   * Marks that the token can see other Tokens declared in `viewProviders` on the same node.\n   */\n  canSeeViewProviders: boolean;\n\n  /**\n   * An array of factories to use in case of `multi` provider.\n   */\n  multi?: Array<() => any>;\n\n  /**\n   * Number of `multi`-providers which belong to the component.\n   *\n   * This is needed because when multiple components and directives declare the `multi` provider\n   * they have to be concatenated in the correct order.\n   *\n   * Example:\n   *\n   * If we have a component and directive active an a single element as declared here\n   * ```\n   * component:\n   *   provides: [ {provide: String, useValue: 'component', multi: true} ],\n   *   viewProvides: [ {provide: String, useValue: 'componentView', multi: true} ],\n   *\n   * directive:\n   *   provides: [ {provide: String, useValue: 'directive', multi: true} ],\n   * ```\n   *\n   * Then the expected results are:\n   *\n   * ```\n   * providers: ['component', 'directive']\n   * viewProviders: ['component', 'componentView', 'directive']\n   * ```\n   *\n   * The way to think about it is that the `viewProviders` have been inserted after the component\n   * but before the directives, which is why we need to know how many `multi`s have been declared by\n   * the component.\n   */\n  componentProviders?: number;\n\n  /**\n   * Current index of the Factory in the `data`. Needed for `viewProviders` and `providers` merging.\n   * See `providerFactory`.\n   */\n  index?: number;\n\n  /**\n   * Because the same `multi` provider can be declared in `provides` and `viewProvides` it is\n   * possible for `viewProvides` to shadow the `provides`. For this reason we store the\n   * `provideFactory` of the `providers` so that `providers` can be extended with `viewProviders`.\n   *\n   * Example:\n   *\n   * Given:\n   * ```\n   * provides: [ {provide: String, useValue: 'all', multi: true} ],\n   * viewProvides: [ {provide: String, useValue: 'viewOnly', multi: true} ],\n   * ```\n   *\n   * We have to return `['all']` in case of content injection, but `['all', 'viewOnly']` in case\n   * of view injection. We further have to make sure that the shared instances (in our case\n   * `all`) are the exact same instance in both the content as well as the view injection. (We\n   * have to make sure that we don't double instantiate.) For this reason the `viewProvides`\n   * `Factory` has a pointer to the shadowed `provides` factory so that it can instantiate the\n   * `providers` (`['all']`) and then extend it with `viewProviders` (`['all'] + ['viewOnly'] =\n   * ['all', 'viewOnly']`).\n   */\n  providerFactory?: NodeInjectorFactory|null;\n\n\n  constructor(\n      /**\n       * Factory to invoke in order to create a new instance.\n       */\n      public factory:\n          (this: NodeInjectorFactory, _: undefined,\n           /**\n            * array where injectables tokens are stored. This is used in\n            * case of an error reporting to produce friendlier errors.\n            */\n           tData: TData,\n           /**\n            * array where existing instances of injectables are stored. This is used in case\n            * of multi shadow is needed. See `multi` field documentation.\n            */\n           lView: LView,\n           /**\n            * The TNode of the same element injector.\n            */\n           tNode: TDirectiveHostNode) => any,\n      /**\n       * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n       */\n      isViewProvider: boolean,\n      injectImplementation: null|(<T>(token: ProviderToken<T>, flags?: InjectFlags) => T)) {\n    ngDevMode && assertDefined(factory, 'Factory not specified');\n    ngDevMode && assertEqual(typeof factory, 'function', 'Expected factory function.');\n    this.canSeeViewProviders = isViewProvider;\n    this.injectImpl = injectImplementation;\n  }\n}\n\nexport function isFactory(obj: any): obj is NodeInjectorFactory {\n  return obj instanceof NodeInjectorFactory;\n}\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nexport const unusedValueExportToPlacateAjd = 1;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {CharCode} from '../../util/char_code';\nimport {AttributeMarker, TAttributes} from '../interfaces/node';\nimport {CssSelector} from '../interfaces/projection';\nimport {Renderer} from '../interfaces/renderer';\nimport {RElement} from '../interfaces/renderer_dom';\n\n\n\n/**\n * Assigns all attribute values to the provided element via the inferred renderer.\n *\n * This function accepts two forms of attribute entries:\n *\n * default: (key, value):\n *  attrs = [key1, value1, key2, value2]\n *\n * namespaced: (NAMESPACE_MARKER, uri, name, value)\n *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n *\n * The `attrs` array can contain a mix of both the default and namespaced entries.\n * The \"default\" values are set without a marker, but if the function comes across\n * a marker value then it will attempt to set a namespaced value. If the marker is\n * not of a namespaced value then the function will quit and return the index value\n * where it stopped during the iteration of the attrs array.\n *\n * See [AttributeMarker] to understand what the namespace marker value is.\n *\n * Note that this instruction does not support assigning style and class values to\n * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n * are applied to an element.\n * @param renderer The renderer to be used\n * @param native The element that the attributes will be assigned to\n * @param attrs The attribute array of values that will be assigned to the element\n * @returns the index value that was last accessed in the attributes array\n */\nexport function setUpAttributes(renderer: Renderer, native: RElement, attrs: TAttributes): number {\n  let i = 0;\n  while (i < attrs.length) {\n    const value = attrs[i];\n    if (typeof value === 'number') {\n      // only namespaces are supported. Other value types (such as style/class\n      // entries) are not supported in this function.\n      if (value !== AttributeMarker.NamespaceURI) {\n        break;\n      }\n\n      // we just landed on the marker value ... therefore\n      // we should skip to the next entry\n      i++;\n\n      const namespaceURI = attrs[i++] as string;\n      const attrName = attrs[i++] as string;\n      const attrVal = attrs[i++] as string;\n      ngDevMode && ngDevMode.rendererSetAttribute++;\n      renderer.setAttribute(native, attrName, attrVal, namespaceURI);\n    } else {\n      // attrName is string;\n      const attrName = value as string;\n      const attrVal = attrs[++i];\n      // Standard attributes\n      ngDevMode && ngDevMode.rendererSetAttribute++;\n      if (isAnimationProp(attrName)) {\n        renderer.setProperty(native, attrName, attrVal);\n      } else {\n        renderer.setAttribute(native, attrName, attrVal as string);\n      }\n      i++;\n    }\n  }\n\n  // another piece of code may iterate over the same attributes array. Therefore\n  // it may be helpful to return the exact spot where the attributes array exited\n  // whether by running into an unsupported marker or if all the static values were\n  // iterated over.\n  return i;\n}\n\n/**\n * Test whether the given value is a marker that indicates that the following\n * attribute values in a `TAttributes` array are only the names of attributes,\n * and not name-value pairs.\n * @param marker The attribute marker to test.\n * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n */\nexport function isNameOnlyAttributeMarker(marker: string|AttributeMarker|CssSelector) {\n  return marker === AttributeMarker.Bindings || marker === AttributeMarker.Template ||\n      marker === AttributeMarker.I18n;\n}\n\nexport function isAnimationProp(name: string): boolean {\n  // Perf note: accessing charCodeAt to check for the first character of a string is faster as\n  // compared to accessing a character at index 0 (ex. name[0]). The main reason for this is that\n  // charCodeAt doesn't allocate memory to return a substring.\n  return name.charCodeAt(0) === CharCode.AT_SIGN;\n}\n\n/**\n * Merges `src` `TAttributes` into `dst` `TAttributes` removing any duplicates in the process.\n *\n * This merge function keeps the order of attrs same.\n *\n * @param dst Location of where the merged `TAttributes` should end up.\n * @param src `TAttributes` which should be appended to `dst`\n */\nexport function mergeHostAttrs(dst: TAttributes|null, src: TAttributes|null): TAttributes|null {\n  if (src === null || src.length === 0) {\n    // do nothing\n  } else if (dst === null || dst.length === 0) {\n    // We have source, but dst is empty, just make a copy.\n    dst = src.slice();\n  } else {\n    let srcMarker: AttributeMarker = AttributeMarker.ImplicitAttributes;\n    for (let i = 0; i < src.length; i++) {\n      const item = src[i];\n      if (typeof item === 'number') {\n        srcMarker = item;\n      } else {\n        if (srcMarker === AttributeMarker.NamespaceURI) {\n          // Case where we need to consume `key1`, `key2`, `value` items.\n        } else if (\n            srcMarker === AttributeMarker.ImplicitAttributes ||\n            srcMarker === AttributeMarker.Styles) {\n          // Case where we have to consume `key1` and `value` only.\n          mergeHostAttribute(dst, srcMarker, item as string, null, src[++i] as string);\n        } else {\n          // Case where we have to consume `key1` only.\n          mergeHostAttribute(dst, srcMarker, item as string, null, null);\n        }\n      }\n    }\n  }\n  return dst;\n}\n\n/**\n * Append `key`/`value` to existing `TAttributes` taking region marker and duplicates into account.\n *\n * @param dst `TAttributes` to append to.\n * @param marker Region where the `key`/`value` should be added.\n * @param key1 Key to add to `TAttributes`\n * @param key2 Key to add to `TAttributes` (in case of `AttributeMarker.NamespaceURI`)\n * @param value Value to add or to overwrite to `TAttributes` Only used if `marker` is not Class.\n */\nexport function mergeHostAttribute(\n    dst: TAttributes, marker: AttributeMarker, key1: string, key2: string|null,\n    value: string|null): void {\n  let i = 0;\n  // Assume that new markers will be inserted at the end.\n  let markerInsertPosition = dst.length;\n  // scan until correct type.\n  if (marker === AttributeMarker.ImplicitAttributes) {\n    markerInsertPosition = -1;\n  } else {\n    while (i < dst.length) {\n      const dstValue = dst[i++];\n      if (typeof dstValue === 'number') {\n        if (dstValue === marker) {\n          markerInsertPosition = -1;\n          break;\n        } else if (dstValue > marker) {\n          // We need to save this as we want the markers to be inserted in specific order.\n          markerInsertPosition = i - 1;\n          break;\n        }\n      }\n    }\n  }\n\n  // search until you find place of insertion\n  while (i < dst.length) {\n    const item = dst[i];\n    if (typeof item === 'number') {\n      // since `i` started as the index after the marker, we did not find it if we are at the next\n      // marker\n      break;\n    } else if (item === key1) {\n      // We already have same token\n      if (key2 === null) {\n        if (value !== null) {\n          dst[i + 1] = value;\n        }\n        return;\n      } else if (key2 === dst[i + 1]) {\n        dst[i + 2] = value!;\n        return;\n      }\n    }\n    // Increment counter.\n    i++;\n    if (key2 !== null) i++;\n    if (value !== null) i++;\n  }\n\n  // insert at location.\n  if (markerInsertPosition !== -1) {\n    dst.splice(markerInsertPosition, 0, marker);\n    i = markerInsertPosition + 1;\n  }\n  dst.splice(i++, 0, key1);\n  if (key2 !== null) {\n    dst.splice(i++, 0, key2);\n  }\n  if (value !== null) {\n    dst.splice(i++, 0, value);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {assertGreaterThan, assertNotEqual, assertNumber} from '../../util/assert';\nimport {NO_PARENT_INJECTOR, RelativeInjectorLocation, RelativeInjectorLocationFlags} from '../interfaces/injector';\nimport {DECLARATION_VIEW, HEADER_OFFSET, LView} from '../interfaces/view';\n\n\n/// Parent Injector Utils ///////////////////////////////////////////////////////////////\nexport function hasParentInjector(parentLocation: RelativeInjectorLocation): boolean {\n  return parentLocation !== NO_PARENT_INJECTOR;\n}\n\nexport function getParentInjectorIndex(parentLocation: RelativeInjectorLocation): number {\n  ngDevMode && assertNumber(parentLocation, 'Number expected');\n  ngDevMode && assertNotEqual(parentLocation as any, -1, 'Not a valid state.');\n  const parentInjectorIndex =\n      (parentLocation as any as number) & RelativeInjectorLocationFlags.InjectorIndexMask;\n  ngDevMode &&\n      assertGreaterThan(\n          parentInjectorIndex, HEADER_OFFSET,\n          'Parent injector must be pointing past HEADER_OFFSET.');\n  return (parentLocation as any as number) & RelativeInjectorLocationFlags.InjectorIndexMask;\n}\n\nexport function getParentInjectorViewOffset(parentLocation: RelativeInjectorLocation): number {\n  return (parentLocation as any as number) >> RelativeInjectorLocationFlags.ViewOffsetShift;\n}\n\n/**\n * Unwraps a parent injector location number to find the view offset from the current injector,\n * then walks up the declaration view tree until the view is found that contains the parent\n * injector.\n *\n * @param location The location of the parent injector, which contains the view offset\n * @param startView The LView instance from which to start walking up the view tree\n * @returns The LView instance that contains the parent injector\n */\nexport function getParentInjectorView(location: RelativeInjectorLocation, startView: LView): LView {\n  let viewOffset = getParentInjectorViewOffset(location);\n  let parentView = startView;\n  // For most cases, the parent injector can be found on the host node (e.g. for component\n  // or container), but we must keep the loop here to support the rarer case of deeply nested\n  // <ng-template> tags or inline views, where the parent injector might live many views\n  // above the child injector.\n  while (viewOffset > 0) {\n    parentView = parentView[DECLARATION_VIEW]!;\n    viewOffset--;\n  }\n  return parentView;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isForwardRef, resolveForwardRef} from '../di/forward_ref';\nimport {injectRootLimpMode, setInjectImplementation} from '../di/inject_switch';\nimport {Injector} from '../di/injector';\nimport {InjectorMarkers} from '../di/injector_marker';\nimport {InjectFlags} from '../di/interface/injector';\nimport {ProviderToken} from '../di/provider_token';\nimport {Type} from '../interface/type';\nimport {assertDefined, assertEqual, assertIndexInRange} from '../util/assert';\nimport {noSideEffects} from '../util/closure';\n\nimport {assertDirectiveDef, assertNodeInjector, assertTNodeForLView} from './assert';\nimport {FactoryFn, getFactoryDef} from './definition_factory';\nimport {throwCyclicDependencyError, throwProviderNotFoundError} from './errors_di';\nimport {NG_ELEMENT_ID, NG_FACTORY_DEF} from './fields';\nimport {registerPreOrderHooks} from './hooks';\nimport {DirectiveDef} from './interfaces/definition';\nimport {isFactory, NO_PARENT_INJECTOR, NodeInjectorFactory, NodeInjectorOffset, RelativeInjectorLocation, RelativeInjectorLocationFlags} from './interfaces/injector';\nimport {AttributeMarker, TContainerNode, TDirectiveHostNode, TElementContainerNode, TElementNode, TNode, TNodeProviderIndexes, TNodeType} from './interfaces/node';\nimport {isComponentDef, isComponentHost} from './interfaces/type_checks';\nimport {DECLARATION_COMPONENT_VIEW, DECLARATION_VIEW, EMBEDDED_VIEW_INJECTOR, FLAGS, INJECTOR, LView, LViewFlags, T_HOST, TData, TVIEW, TView, TViewType} from './interfaces/view';\nimport {assertTNodeType} from './node_assert';\nimport {enterDI, getCurrentTNode, getLView, leaveDI} from './state';\nimport {isNameOnlyAttributeMarker} from './util/attrs_utils';\nimport {getParentInjectorIndex, getParentInjectorView, hasParentInjector} from './util/injector_utils';\nimport {stringifyForError} from './util/stringify_utils';\n\n\n\n/**\n * Defines if the call to `inject` should include `viewProviders` in its resolution.\n *\n * This is set to true when we try to instantiate a component. This value is reset in\n * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n * instantiated. This is done so that if we are injecting a token which was declared outside of\n * `viewProviders` we don't accidentally pull `viewProviders` in.\n *\n * Example:\n *\n * ```\n * @Injectable()\n * class MyService {\n *   constructor(public value: String) {}\n * }\n *\n * @Component({\n *   providers: [\n *     MyService,\n *     {provide: String, value: 'providers' }\n *   ]\n *   viewProviders: [\n *     {provide: String, value: 'viewProviders'}\n *   ]\n * })\n * class MyComponent {\n *   constructor(myService: MyService, value: String) {\n *     // We expect that Component can see into `viewProviders`.\n *     expect(value).toEqual('viewProviders');\n *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n *     expect(myService.value).toEqual('providers');\n *   }\n * }\n *\n * ```\n */\nlet includeViewProviders = true;\n\nexport function setIncludeViewProviders(v: boolean): boolean {\n  const oldValue = includeViewProviders;\n  includeViewProviders = v;\n  return oldValue;\n}\n\n/**\n * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n * directives that will share slots, and thus, the fewer false positives when checking for\n * the existence of a directive.\n */\nconst BLOOM_SIZE = 256;\nconst BLOOM_MASK = BLOOM_SIZE - 1;\n\n/**\n * The number of bits that is represented by a single bloom bucket. JS bit operations are 32 bits,\n * so each bucket represents 32 distinct tokens which accounts for log2(32) = 5 bits of a bloom hash\n * number.\n */\nconst BLOOM_BUCKET_BITS = 5;\n\n/** Counter used to generate unique IDs for directives. */\nlet nextNgElementId = 0;\n\n/** Value used when something wasn't found by an injector. */\nconst NOT_FOUND = {};\n\n/**\n * Registers this directive as present in its node's injector by flipping the directive's\n * corresponding bit in the injector's bloom filter.\n *\n * @param injectorIndex The index of the node injector where this token should be registered\n * @param tView The TView for the injector's bloom filters\n * @param type The directive token to register\n */\nexport function bloomAdd(\n    injectorIndex: number, tView: TView, type: ProviderToken<any>|string): void {\n  ngDevMode && assertEqual(tView.firstCreatePass, true, 'expected firstCreatePass to be true');\n  let id: number|undefined;\n  if (typeof type === 'string') {\n    id = type.charCodeAt(0) || 0;\n  } else if (type.hasOwnProperty(NG_ELEMENT_ID)) {\n    id = (type as any)[NG_ELEMENT_ID];\n  }\n\n  // Set a unique ID on the directive type, so if something tries to inject the directive,\n  // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n  if (id == null) {\n    id = (type as any)[NG_ELEMENT_ID] = nextNgElementId++;\n  }\n\n  // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n  // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n  const bloomHash = id & BLOOM_MASK;\n\n  // Create a mask that targets the specific bit associated with the directive.\n  // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n  // to bit positions 0 - 31 in a 32 bit integer.\n  const mask = 1 << bloomHash;\n\n  // Each bloom bucket in `tData` represents `BLOOM_BUCKET_BITS` number of bits of `bloomHash`.\n  // Any bits in `bloomHash` beyond `BLOOM_BUCKET_BITS` indicate the bucket offset that the mask\n  // should be written to.\n  (tView.data as number[])[injectorIndex + (bloomHash >> BLOOM_BUCKET_BITS)] |= mask;\n}\n\n/**\n * Creates (or gets an existing) injector for a given element or container.\n *\n * @param tNode for which an injector should be retrieved / created.\n * @param lView View where the node is stored\n * @returns Node injector\n */\nexport function getOrCreateNodeInjectorForNode(\n    tNode: TElementNode|TContainerNode|TElementContainerNode, lView: LView): number {\n  const existingInjectorIndex = getInjectorIndex(tNode, lView);\n  if (existingInjectorIndex !== -1) {\n    return existingInjectorIndex;\n  }\n\n  const tView = lView[TVIEW];\n  if (tView.firstCreatePass) {\n    tNode.injectorIndex = lView.length;\n    insertBloom(tView.data, tNode);  // foundation for node bloom\n    insertBloom(lView, null);        // foundation for cumulative bloom\n    insertBloom(tView.blueprint, null);\n  }\n\n  const parentLoc = getParentInjectorLocation(tNode, lView);\n  const injectorIndex = tNode.injectorIndex;\n\n  // If a parent injector can't be found, its location is set to -1.\n  // In that case, we don't need to set up a cumulative bloom\n  if (hasParentInjector(parentLoc)) {\n    const parentIndex = getParentInjectorIndex(parentLoc);\n    const parentLView = getParentInjectorView(parentLoc, lView);\n    const parentData = parentLView[TVIEW].data as any;\n    // Creates a cumulative bloom filter that merges the parent's bloom filter\n    // and its own cumulative bloom (which contains tokens for all ancestors)\n    for (let i = 0; i < NodeInjectorOffset.BLOOM_SIZE; i++) {\n      lView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n    }\n  }\n\n  lView[injectorIndex + NodeInjectorOffset.PARENT] = parentLoc;\n  return injectorIndex;\n}\n\nfunction insertBloom(arr: any[], footer: TNode|null): void {\n  arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n}\n\n\nexport function getInjectorIndex(tNode: TNode, lView: LView): number {\n  if (tNode.injectorIndex === -1 ||\n      // If the injector index is the same as its parent's injector index, then the index has been\n      // copied down from the parent node. No injector has been created yet on this node.\n      (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n      // After the first template pass, the injector index might exist but the parent values\n      // might not have been calculated yet for this instance\n      lView[tNode.injectorIndex + NodeInjectorOffset.PARENT] === null) {\n    return -1;\n  } else {\n    ngDevMode && assertIndexInRange(lView, tNode.injectorIndex);\n    return tNode.injectorIndex;\n  }\n}\n\n/**\n * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n * parent injector initially.\n *\n * @returns Returns a number that is the combination of the number of LViews that we have to go up\n * to find the LView containing the parent inject AND the index of the injector within that LView.\n */\nexport function getParentInjectorLocation(tNode: TNode, lView: LView): RelativeInjectorLocation {\n  if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n    // If we have a parent `TNode` and there is an injector associated with it we are done, because\n    // the parent injector is within the current `LView`.\n    return tNode.parent.injectorIndex as any;  // ViewOffset is 0\n  }\n\n  // When parent injector location is computed it may be outside of the current view. (ie it could\n  // be pointing to a declared parent location). This variable stores number of declaration parents\n  // we need to walk up in order to find the parent injector location.\n  let declarationViewOffset = 0;\n  let parentTNode: TNode|null = null;\n  let lViewCursor: LView|null = lView;\n\n  // The parent injector is not in the current `LView`. We will have to walk the declared parent\n  // `LView` hierarchy and look for it. If we walk of the top, that means that there is no parent\n  // `NodeInjector`.\n  while (lViewCursor !== null) {\n    parentTNode = getTNodeFromLView(lViewCursor);\n\n    if (parentTNode === null) {\n      // If we have no parent, than we are done.\n      return NO_PARENT_INJECTOR;\n    }\n\n    ngDevMode && parentTNode && assertTNodeForLView(parentTNode!, lViewCursor[DECLARATION_VIEW]!);\n    // Every iteration of the loop requires that we go to the declared parent.\n    declarationViewOffset++;\n    lViewCursor = lViewCursor[DECLARATION_VIEW];\n\n    if (parentTNode.injectorIndex !== -1) {\n      // We found a NodeInjector which points to something.\n      return (parentTNode.injectorIndex |\n              (declarationViewOffset << RelativeInjectorLocationFlags.ViewOffsetShift)) as any;\n    }\n  }\n  return NO_PARENT_INJECTOR;\n}\n/**\n * Makes a type or an injection token public to the DI system by adding it to an\n * injector's bloom filter.\n *\n * @param di The node injector in which a directive will be added\n * @param token The type or the injection token to be made public\n */\nexport function diPublicInInjector(\n    injectorIndex: number, tView: TView, token: ProviderToken<any>): void {\n  bloomAdd(injectorIndex, tView, token);\n}\n\n/**\n * Inject static attribute value into directive constructor.\n *\n * This method is used with `factory` functions which are generated as part of\n * `defineDirective` or `defineComponent`. The method retrieves the static value\n * of an attribute. (Dynamic attributes are not supported since they are not resolved\n *  at the time of injection and can change over time.)\n *\n * # Example\n * Given:\n * ```\n * @Component(...)\n * class MyComponent {\n *   constructor(@Attribute('title') title: string) { ... }\n * }\n * ```\n * When instantiated with\n * ```\n * <my-component title=\"Hello\"></my-component>\n * ```\n *\n * Then factory method generated is:\n * ```\n * MyComponent.ɵcmp = defineComponent({\n *   factory: () => new MyComponent(injectAttribute('title'))\n *   ...\n * })\n * ```\n *\n * @publicApi\n */\nexport function injectAttributeImpl(tNode: TNode, attrNameToInject: string): string|null {\n  ngDevMode && assertTNodeType(tNode, TNodeType.AnyContainer | TNodeType.AnyRNode);\n  ngDevMode && assertDefined(tNode, 'expecting tNode');\n  if (attrNameToInject === 'class') {\n    return tNode.classes;\n  }\n  if (attrNameToInject === 'style') {\n    return tNode.styles;\n  }\n\n  const attrs = tNode.attrs;\n  if (attrs) {\n    const attrsLength = attrs.length;\n    let i = 0;\n    while (i < attrsLength) {\n      const value = attrs[i];\n\n      // If we hit a `Bindings` or `Template` marker then we are done.\n      if (isNameOnlyAttributeMarker(value)) break;\n\n      // Skip namespaced attributes\n      if (value === AttributeMarker.NamespaceURI) {\n        // we skip the next two values\n        // as namespaced attributes looks like\n        // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n        // 'existValue', ...]\n        i = i + 2;\n      } else if (typeof value === 'number') {\n        // Skip to the first value of the marked attribute.\n        i++;\n        while (i < attrsLength && typeof attrs[i] === 'string') {\n          i++;\n        }\n      } else if (value === attrNameToInject) {\n        return attrs[i + 1] as string;\n      } else {\n        i = i + 2;\n      }\n    }\n  }\n  return null;\n}\n\n\nfunction notFoundValueOrThrow<T>(\n    notFoundValue: T|null, token: ProviderToken<T>, flags: InjectFlags): T|null {\n  if (flags & InjectFlags.Optional) {\n    return notFoundValue;\n  } else {\n    throwProviderNotFoundError(token, 'NodeInjector');\n  }\n}\n\n/**\n * Returns the value associated to the given token from the ModuleInjector or throws exception\n *\n * @param lView The `LView` that contains the `tNode`\n * @param token The token to look for\n * @param flags Injection flags\n * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n * @returns the value from the injector or throws an exception\n */\nfunction lookupTokenUsingModuleInjector<T>(\n    lView: LView, token: ProviderToken<T>, flags: InjectFlags, notFoundValue?: any): T|null {\n  if (flags & InjectFlags.Optional && notFoundValue === undefined) {\n    // This must be set or the NullInjector will throw for optional deps\n    notFoundValue = null;\n  }\n\n  if ((flags & (InjectFlags.Self | InjectFlags.Host)) === 0) {\n    const moduleInjector = lView[INJECTOR];\n    // switch to `injectInjectorOnly` implementation for module injector, since module injector\n    // should not have access to Component/Directive DI scope (that may happen through\n    // `directiveInject` implementation)\n    const previousInjectImplementation = setInjectImplementation(undefined);\n    try {\n      if (moduleInjector) {\n        return moduleInjector.get(token, notFoundValue, flags & InjectFlags.Optional);\n      } else {\n        return injectRootLimpMode(token, notFoundValue, flags & InjectFlags.Optional);\n      }\n    } finally {\n      setInjectImplementation(previousInjectImplementation);\n    }\n  }\n  return notFoundValueOrThrow<T>(notFoundValue, token, flags);\n}\n\n/**\n * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n *\n * Look for the injector providing the token by walking up the node injector tree and then\n * the module injector tree.\n *\n * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n * filter. `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n *\n * @param tNode The Node where the search for the injector should start\n * @param lView The `LView` that contains the `tNode`\n * @param token The token to look for\n * @param flags Injection flags\n * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n */\nexport function getOrCreateInjectable<T>(\n    tNode: TDirectiveHostNode|null, lView: LView, token: ProviderToken<T>,\n    flags: InjectFlags = InjectFlags.Default, notFoundValue?: any): T|null {\n  if (tNode !== null) {\n    // If the view or any of its ancestors have an embedded\n    // view injector, we have to look it up there first.\n    if (lView[FLAGS] & LViewFlags.HasEmbeddedViewInjector) {\n      const embeddedInjectorValue =\n          lookupTokenUsingEmbeddedInjector(tNode, lView, token, flags, NOT_FOUND);\n      if (embeddedInjectorValue !== NOT_FOUND) {\n        return embeddedInjectorValue;\n      }\n    }\n\n    // Otherwise try the node injector.\n    const value = lookupTokenUsingNodeInjector(tNode, lView, token, flags, NOT_FOUND);\n    if (value !== NOT_FOUND) {\n      return value;\n    }\n  }\n\n  // Finally, fall back to the module injector.\n  return lookupTokenUsingModuleInjector<T>(lView, token, flags, notFoundValue);\n}\n\n/**\n * Returns the value associated to the given token from the node injector.\n *\n * @param tNode The Node where the search for the injector should start\n * @param lView The `LView` that contains the `tNode`\n * @param token The token to look for\n * @param flags Injection flags\n * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n */\nfunction lookupTokenUsingNodeInjector<T>(\n    tNode: TDirectiveHostNode, lView: LView, token: ProviderToken<T>, flags: InjectFlags,\n    notFoundValue?: any) {\n  const bloomHash = bloomHashBitOrFactory(token);\n  // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n  // so just call the factory function to create it.\n  if (typeof bloomHash === 'function') {\n    if (!enterDI(lView, tNode, flags)) {\n      // Failed to enter DI, try module injector instead. If a token is injected with the @Host\n      // flag, the module injector is not searched for that token in Ivy.\n      return (flags & InjectFlags.Host) ?\n          notFoundValueOrThrow<T>(notFoundValue, token, flags) :\n          lookupTokenUsingModuleInjector<T>(lView, token, flags, notFoundValue);\n    }\n    try {\n      const value = bloomHash(flags);\n      if (value == null && !(flags & InjectFlags.Optional)) {\n        throwProviderNotFoundError(token);\n      } else {\n        return value;\n      }\n    } finally {\n      leaveDI();\n    }\n  } else if (typeof bloomHash === 'number') {\n    // A reference to the previous injector TView that was found while climbing the element\n    // injector tree. This is used to know if viewProviders can be accessed on the current\n    // injector.\n    let previousTView: TView|null = null;\n    let injectorIndex = getInjectorIndex(tNode, lView);\n    let parentLocation: RelativeInjectorLocation = NO_PARENT_INJECTOR;\n    let hostTElementNode: TNode|null =\n        flags & InjectFlags.Host ? lView[DECLARATION_COMPONENT_VIEW][T_HOST] : null;\n\n    // If we should skip this injector, or if there is no injector on this node, start by\n    // searching the parent injector.\n    if (injectorIndex === -1 || flags & InjectFlags.SkipSelf) {\n      parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                                              lView[injectorIndex + NodeInjectorOffset.PARENT];\n\n      if (parentLocation === NO_PARENT_INJECTOR || !shouldSearchParent(flags, false)) {\n        injectorIndex = -1;\n      } else {\n        previousTView = lView[TVIEW];\n        injectorIndex = getParentInjectorIndex(parentLocation);\n        lView = getParentInjectorView(parentLocation, lView);\n      }\n    }\n\n    // Traverse up the injector tree until we find a potential match or until we know there\n    // *isn't* a match.\n    while (injectorIndex !== -1) {\n      ngDevMode && assertNodeInjector(lView, injectorIndex);\n\n      // Check the current injector. If it matches, see if it contains token.\n      const tView = lView[TVIEW];\n      ngDevMode &&\n          assertTNodeForLView(tView.data[injectorIndex + NodeInjectorOffset.TNODE] as TNode, lView);\n      if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n        // At this point, we have an injector which *may* contain the token, so we step through\n        // the providers and directives associated with the injector's corresponding node to get\n        // the instance.\n        const instance: T|{}|null = searchTokensOnInjector<T>(\n            injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n        if (instance !== NOT_FOUND) {\n          return instance;\n        }\n      }\n      parentLocation = lView[injectorIndex + NodeInjectorOffset.PARENT];\n      if (parentLocation !== NO_PARENT_INJECTOR &&\n          shouldSearchParent(\n              flags,\n              lView[TVIEW].data[injectorIndex + NodeInjectorOffset.TNODE] === hostTElementNode) &&\n          bloomHasToken(bloomHash, injectorIndex, lView)) {\n        // The def wasn't found anywhere on this node, so it was a false positive.\n        // Traverse up the tree and continue searching.\n        previousTView = tView;\n        injectorIndex = getParentInjectorIndex(parentLocation);\n        lView = getParentInjectorView(parentLocation, lView);\n      } else {\n        // If we should not search parent OR If the ancestor bloom filter value does not have the\n        // bit corresponding to the directive we can give up on traversing up to find the specific\n        // injector.\n        injectorIndex = -1;\n      }\n    }\n  }\n\n  return notFoundValue;\n}\n\nfunction searchTokensOnInjector<T>(\n    injectorIndex: number, lView: LView, token: ProviderToken<T>, previousTView: TView|null,\n    flags: InjectFlags, hostTElementNode: TNode|null) {\n  const currentTView = lView[TVIEW];\n  const tNode = currentTView.data[injectorIndex + NodeInjectorOffset.TNODE] as TNode;\n  // First, we need to determine if view providers can be accessed by the starting element.\n  // There are two possibilities\n  const canAccessViewProviders = previousTView == null ?\n      // 1) This is the first invocation `previousTView == null` which means that we are at the\n      // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n      // to look into the ViewProviders is if:\n      // - we are on a component\n      // - AND the injector set `includeViewProviders` to true (implying that the token can see\n      // ViewProviders because it is the Component or a Service which itself was declared in\n      // ViewProviders)\n      (isComponentHost(tNode) && includeViewProviders) :\n      // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n      // In such a case we are only allowed to look into the ViewProviders if:\n      // - We just crossed from child View to Parent View `previousTView != currentTView`\n      // - AND the parent TNode is an Element.\n      // This means that we just came from the Component's View and therefore are allowed to see\n      // into the ViewProviders.\n      (previousTView != currentTView && ((tNode.type & TNodeType.AnyRNode) !== 0));\n\n  // This special case happens when there is a @host on the inject and when we are searching\n  // on the host element node.\n  const isHostSpecialCase = (flags & InjectFlags.Host) && hostTElementNode === tNode;\n\n  const injectableIdx = locateDirectiveOrProvider(\n      tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n  if (injectableIdx !== null) {\n    return getNodeInjectable(lView, currentTView, injectableIdx, tNode as TElementNode);\n  } else {\n    return NOT_FOUND;\n  }\n}\n\n/**\n * Searches for the given token among the node's directives and providers.\n *\n * @param tNode TNode on which directives are present.\n * @param tView The tView we are currently processing\n * @param token Provider token or type of a directive to look for.\n * @param canAccessViewProviders Whether view providers should be considered.\n * @param isHostSpecialCase Whether the host special case applies.\n * @returns Index of a found directive or provider, or null when none found.\n */\nexport function locateDirectiveOrProvider<T>(\n    tNode: TNode, tView: TView, token: ProviderToken<T>|string, canAccessViewProviders: boolean,\n    isHostSpecialCase: boolean|number): number|null {\n  const nodeProviderIndexes = tNode.providerIndexes;\n  const tInjectables = tView.data;\n\n  const injectablesStart = nodeProviderIndexes & TNodeProviderIndexes.ProvidersStartIndexMask;\n  const directivesStart = tNode.directiveStart;\n  const directiveEnd = tNode.directiveEnd;\n  const cptViewProvidersCount =\n      nodeProviderIndexes >> TNodeProviderIndexes.CptViewProvidersCountShift;\n  const startingIndex =\n      canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n  // When the host special case applies, only the viewProviders and the component are visible\n  const endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n  for (let i = startingIndex; i < endIndex; i++) {\n    const providerTokenOrDef = tInjectables[i] as ProviderToken<any>| DirectiveDef<any>| string;\n    if (i < directivesStart && token === providerTokenOrDef ||\n        i >= directivesStart && (providerTokenOrDef as DirectiveDef<any>).type === token) {\n      return i;\n    }\n  }\n  if (isHostSpecialCase) {\n    const dirDef = tInjectables[directivesStart] as DirectiveDef<any>;\n    if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n      return directivesStart;\n    }\n  }\n  return null;\n}\n\n/**\n * Retrieve or instantiate the injectable from the `LView` at particular `index`.\n *\n * This function checks to see if the value has already been instantiated and if so returns the\n * cached `injectable`. Otherwise if it detects that the value is still a factory it\n * instantiates the `injectable` and caches the value.\n */\nexport function getNodeInjectable(\n    lView: LView, tView: TView, index: number, tNode: TDirectiveHostNode): any {\n  let value = lView[index];\n  const tData = tView.data;\n  if (isFactory(value)) {\n    const factory: NodeInjectorFactory = value;\n    if (factory.resolving) {\n      throwCyclicDependencyError(stringifyForError(tData[index]));\n    }\n    const previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n    factory.resolving = true;\n    const previousInjectImplementation =\n        factory.injectImpl ? setInjectImplementation(factory.injectImpl) : null;\n    const success = enterDI(lView, tNode, InjectFlags.Default);\n    ngDevMode &&\n        assertEqual(\n            success, true,\n            'Because flags do not contain \\`SkipSelf\\' we expect this to always succeed.');\n    try {\n      value = lView[index] = factory.factory(undefined, tData, lView, tNode);\n      // This code path is hit for both directives and providers.\n      // For perf reasons, we want to avoid searching for hooks on providers.\n      // It does no harm to try (the hooks just won't exist), but the extra\n      // checks are unnecessary and this is a hot path. So we check to see\n      // if the index of the dependency is in the directive range for this\n      // tNode. If it's not, we know it's a provider and skip hook registration.\n      if (tView.firstCreatePass && index >= tNode.directiveStart) {\n        ngDevMode && assertDirectiveDef(tData[index]);\n        registerPreOrderHooks(index, tData[index] as DirectiveDef<any>, tView);\n      }\n    } finally {\n      previousInjectImplementation !== null &&\n          setInjectImplementation(previousInjectImplementation);\n      setIncludeViewProviders(previousIncludeViewProviders);\n      factory.resolving = false;\n      leaveDI();\n    }\n  }\n  return value;\n}\n\n/**\n * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n * the directive might be provided by the injector.\n *\n * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n * is returned as the node injector can not possibly provide that token.\n *\n * @param token the injection token\n * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n *   When the returned value is negative then it represents special values such as `Injector`.\n */\nexport function bloomHashBitOrFactory(token: ProviderToken<any>|string): number|Function|undefined {\n  ngDevMode && assertDefined(token, 'token must be defined');\n  if (typeof token === 'string') {\n    return token.charCodeAt(0) || 0;\n  }\n  const tokenId: number|undefined =\n      // First check with `hasOwnProperty` so we don't get an inherited ID.\n      token.hasOwnProperty(NG_ELEMENT_ID) ? (token as any)[NG_ELEMENT_ID] : undefined;\n  // Negative token IDs are used for special objects such as `Injector`\n  if (typeof tokenId === 'number') {\n    if (tokenId >= 0) {\n      return tokenId & BLOOM_MASK;\n    } else {\n      ngDevMode &&\n          assertEqual(tokenId, InjectorMarkers.Injector, 'Expecting to get Special Injector Id');\n      return createNodeInjector;\n    }\n  } else {\n    return tokenId;\n  }\n}\n\nexport function bloomHasToken(bloomHash: number, injectorIndex: number, injectorView: LView|TData) {\n  // Create a mask that targets the specific bit associated with the directive we're looking for.\n  // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n  // to bit positions 0 - 31 in a 32 bit integer.\n  const mask = 1 << bloomHash;\n\n  // Each bloom bucket in `injectorView` represents `BLOOM_BUCKET_BITS` number of bits of\n  // `bloomHash`. Any bits in `bloomHash` beyond `BLOOM_BUCKET_BITS` indicate the bucket offset\n  // that should be used.\n  const value = injectorView[injectorIndex + (bloomHash >> BLOOM_BUCKET_BITS)];\n\n  // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n  // this injector is a potential match.\n  return !!(value & mask);\n}\n\n/** Returns true if flags prevent parent injector from being searched for tokens */\nfunction shouldSearchParent(flags: InjectFlags, isFirstHostTNode: boolean): boolean|number {\n  return !(flags & InjectFlags.Self) && !(flags & InjectFlags.Host && isFirstHostTNode);\n}\n\nexport class NodeInjector implements Injector {\n  constructor(\n      private _tNode: TElementNode|TContainerNode|TElementContainerNode|null,\n      private _lView: LView) {}\n\n  get(token: any, notFoundValue?: any, flags?: InjectFlags): any {\n    return getOrCreateInjectable(this._tNode, this._lView, token, flags, notFoundValue);\n  }\n}\n\n/** Creates a `NodeInjector` for the current node. */\nexport function createNodeInjector(): Injector {\n  return new NodeInjector(getCurrentTNode()! as TDirectiveHostNode, getLView()) as any;\n}\n\n/**\n * @codeGenApi\n */\nexport function ɵɵgetInheritedFactory<T>(type: Type<any>): (type: Type<T>) => T {\n  return noSideEffects(() => {\n    const ownConstructor = type.prototype.constructor;\n    const ownFactory = ownConstructor[NG_FACTORY_DEF] || getFactoryOf(ownConstructor);\n    const objectPrototype = Object.prototype;\n    let parent = Object.getPrototypeOf(type.prototype).constructor;\n\n    // Go up the prototype until we hit `Object`.\n    while (parent && parent !== objectPrototype) {\n      const factory = parent[NG_FACTORY_DEF] || getFactoryOf(parent);\n\n      // If we hit something that has a factory and the factory isn't the same as the type,\n      // we've found the inherited factory. Note the check that the factory isn't the type's\n      // own factory is redundant in most cases, but if the user has custom decorators on the\n      // class, this lookup will start one level down in the prototype chain, causing us to\n      // find the own factory first and potentially triggering an infinite loop downstream.\n      if (factory && factory !== ownFactory) {\n        return factory;\n      }\n\n      parent = Object.getPrototypeOf(parent);\n    }\n\n    // There is no factory defined. Either this was improper usage of inheritance\n    // (no Angular decorator on the superclass) or there is no constructor at all\n    // in the inheritance chain. Since the two cases cannot be distinguished, the\n    // latter has to be assumed.\n    return t => new t();\n  });\n}\n\nfunction getFactoryOf<T>(type: Type<any>): ((type?: Type<T>) => T | null)|null {\n  if (isForwardRef(type)) {\n    return () => {\n      const factory = getFactoryOf<T>(resolveForwardRef(type));\n      return factory && factory();\n    };\n  }\n  return getFactoryDef<T>(type);\n}\n\n/**\n * Returns a value from the closest embedded or node injector.\n *\n * @param tNode The Node where the search for the injector should start\n * @param lView The `LView` that contains the `tNode`\n * @param token The token to look for\n * @param flags Injection flags\n * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n */\nfunction lookupTokenUsingEmbeddedInjector<T>(\n    tNode: TDirectiveHostNode, lView: LView, token: ProviderToken<T>, flags: InjectFlags,\n    notFoundValue?: any) {\n  let currentTNode: TDirectiveHostNode|null = tNode;\n  let currentLView: LView|null = lView;\n\n  // When an LView with an embedded view injector is inserted, it'll likely be interlaced with\n  // nodes who may have injectors (e.g. node injector -> embedded view injector -> node injector).\n  // Since the bloom filters for the node injectors have already been constructed and we don't\n  // have a way of extracting the records from an injector, the only way to maintain the correct\n  // hierarchy when resolving the value is to walk it node-by-node while attempting to resolve\n  // the token at each level.\n  while (currentTNode !== null && currentLView !== null &&\n         (currentLView[FLAGS] & LViewFlags.HasEmbeddedViewInjector) &&\n         !(currentLView[FLAGS] & LViewFlags.IsRoot)) {\n    ngDevMode && assertTNodeForLView(currentTNode, currentLView);\n\n    // Note that this lookup on the node injector is using the `Self` flag, because\n    // we don't want the node injector to look at any parent injectors since we\n    // may hit the embedded view injector first.\n    const nodeInjectorValue = lookupTokenUsingNodeInjector(\n        currentTNode, currentLView, token, flags | InjectFlags.Self, NOT_FOUND);\n    if (nodeInjectorValue !== NOT_FOUND) {\n      return nodeInjectorValue;\n    }\n\n    // Has an explicit type due to a TS bug: https://github.com/microsoft/TypeScript/issues/33191\n    let parentTNode: TElementNode|TContainerNode|null = currentTNode.parent;\n\n    // `TNode.parent` includes the parent within the current view only. If it doesn't exist,\n    // it means that we've hit the view boundary and we need to go up to the next view.\n    if (!parentTNode) {\n      // Before we go to the next LView, check if the token exists on the current embedded injector.\n      const embeddedViewInjector = currentLView[EMBEDDED_VIEW_INJECTOR];\n      if (embeddedViewInjector) {\n        const embeddedViewInjectorValue =\n            embeddedViewInjector.get(token, NOT_FOUND as T | {}, flags);\n        if (embeddedViewInjectorValue !== NOT_FOUND) {\n          return embeddedViewInjectorValue;\n        }\n      }\n\n      // Otherwise keep going up the tree.\n      parentTNode = getTNodeFromLView(currentLView);\n      currentLView = currentLView[DECLARATION_VIEW];\n    }\n\n    currentTNode = parentTNode;\n  }\n\n  return notFoundValue;\n}\n\n/** Gets the TNode associated with an LView inside of the declaration view. */\nfunction getTNodeFromLView(lView: LView): TElementNode|TElementContainerNode|null {\n  const tView = lView[TVIEW];\n  const tViewType = tView.type;\n\n  // The parent pointer differs based on `TView.type`.\n  if (tViewType === TViewType.Embedded) {\n    ngDevMode && assertDefined(tView.declTNode, 'Embedded TNodes should have declaration parents.');\n    return tView.declTNode as TElementContainerNode;\n  } else if (tViewType === TViewType.Component) {\n    // Components don't have `TView.declTNode` because each instance of component could be\n    // inserted in different location, hence `TView.declTNode` is meaningless.\n    return lView[T_HOST] as TElementNode;\n  }\n\n  return null;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {injectAttributeImpl} from '../di';\nimport {getCurrentTNode} from '../state';\n\n/**\n * Facade for the attribute injection from DI.\n *\n * @codeGenApi\n */\nexport function ɵɵinjectAttribute(attrNameToInject: string): string|null {\n  return injectAttributeImpl(getCurrentTNode()!, attrNameToInject);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../interface/type';\n\nimport {noSideEffects} from './closure';\n\n\n\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as\n * decorators as well as Angular syntax.\n *\n * ```\n * @ng.Component({...})\n * class MyClass {...}\n * ```\n *\n * @publicApi\n */\nexport interface TypeDecorator {\n  /**\n   * Invoke as decorator.\n   */\n  <T extends Type<any>>(type: T): T;\n\n  // Make TypeDecorator assignable to built-in ParameterDecorator type.\n  // ParameterDecorator is declared in lib.d.ts as a `declare type`\n  // so we cannot declare this interface as a subtype.\n  // see https://github.com/angular/angular/issues/3379#issuecomment-126169417\n  (target: Object, propertyKey?: string|symbol, parameterIndex?: number): void;\n}\n\nexport const ANNOTATIONS = '__annotations__';\nexport const PARAMETERS = '__parameters__';\nexport const PROP_METADATA = '__prop__metadata__';\n\n/**\n * @suppress {globalThis}\n */\nexport function makeDecorator<T>(\n    name: string, props?: (...args: any[]) => any, parentClass?: any,\n    additionalProcessing?: (type: Type<T>) => void,\n    typeFn?: (type: Type<T>, ...args: any[]) => void):\n    {new (...args: any[]): any; (...args: any[]): any; (...args: any[]): (cls: any) => any;} {\n  return noSideEffects(() => {\n    const metaCtor = makeMetadataCtor(props);\n\n    function DecoratorFactory(\n        this: unknown|typeof DecoratorFactory, ...args: any[]): (cls: Type<T>) => any {\n      if (this instanceof DecoratorFactory) {\n        metaCtor.call(this, ...args);\n        return this as typeof DecoratorFactory;\n      }\n\n      const annotationInstance = new (DecoratorFactory as any)(...args);\n      return function TypeDecorator(cls: Type<T>) {\n        if (typeFn) typeFn(cls, ...args);\n        // Use of Object.defineProperty is important since it creates non-enumerable property which\n        // prevents the property is copied during subclassing.\n        const annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n            (cls as any)[ANNOTATIONS] :\n            (Object.defineProperty(cls, ANNOTATIONS, {value: []}) as any)[ANNOTATIONS];\n        annotations.push(annotationInstance);\n\n\n        if (additionalProcessing) additionalProcessing(cls);\n\n        return cls;\n      };\n    }\n\n    if (parentClass) {\n      DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n\n    DecoratorFactory.prototype.ngMetadataName = name;\n    (DecoratorFactory as any).annotationCls = DecoratorFactory;\n    return DecoratorFactory as any;\n  });\n}\n\nfunction makeMetadataCtor(props?: (...args: any[]) => any): any {\n  return function ctor(this: any, ...args: any[]) {\n    if (props) {\n      const values = props(...args);\n      for (const propName in values) {\n        this[propName] = values[propName];\n      }\n    }\n  };\n}\n\nexport function makeParamDecorator(\n    name: string, props?: (...args: any[]) => any, parentClass?: any): any {\n  return noSideEffects(() => {\n    const metaCtor = makeMetadataCtor(props);\n    function ParamDecoratorFactory(\n        this: unknown|typeof ParamDecoratorFactory, ...args: any[]): any {\n      if (this instanceof ParamDecoratorFactory) {\n        metaCtor.apply(this, args);\n        return this;\n      }\n      const annotationInstance = new (<any>ParamDecoratorFactory)(...args);\n\n      (<any>ParamDecorator).annotation = annotationInstance;\n      return ParamDecorator;\n\n      function ParamDecorator(cls: any, unusedKey: any, index: number): any {\n        // Use of Object.defineProperty is important since it creates non-enumerable property which\n        // prevents the property is copied during subclassing.\n        const parameters = cls.hasOwnProperty(PARAMETERS) ?\n            (cls as any)[PARAMETERS] :\n            Object.defineProperty(cls, PARAMETERS, {value: []})[PARAMETERS];\n\n        // there might be gaps if some in between parameters do not have annotations.\n        // we pad with nulls.\n        while (parameters.length <= index) {\n          parameters.push(null);\n        }\n\n        (parameters[index] = parameters[index] || []).push(annotationInstance);\n        return cls;\n      }\n    }\n    if (parentClass) {\n      ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    (<any>ParamDecoratorFactory).annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n  });\n}\n\nexport function makePropDecorator(\n    name: string, props?: (...args: any[]) => any, parentClass?: any,\n    additionalProcessing?: (target: any, name: string, ...args: any[]) => void): any {\n  return noSideEffects(() => {\n    const metaCtor = makeMetadataCtor(props);\n\n    function PropDecoratorFactory(this: unknown|typeof PropDecoratorFactory, ...args: any[]): any {\n      if (this instanceof PropDecoratorFactory) {\n        metaCtor.apply(this, args);\n        return this;\n      }\n\n      const decoratorInstance = new (<any>PropDecoratorFactory)(...args);\n\n      function PropDecorator(target: any, name: string) {\n        const constructor = target.constructor;\n        // Use of Object.defineProperty is important because it creates a non-enumerable property\n        // which prevents the property from being copied during subclassing.\n        const meta = constructor.hasOwnProperty(PROP_METADATA) ?\n            (constructor as any)[PROP_METADATA] :\n            Object.defineProperty(constructor, PROP_METADATA, {value: {}})[PROP_METADATA];\n        meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n        meta[name].unshift(decoratorInstance);\n\n        if (additionalProcessing) additionalProcessing(target, name, ...args);\n      }\n\n      return PropDecorator;\n    }\n\n    if (parentClass) {\n      PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n\n    PropDecoratorFactory.prototype.ngMetadataName = name;\n    (<any>PropDecoratorFactory).annotationCls = PropDecoratorFactory;\n    return PropDecoratorFactory;\n  });\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵɵinjectAttribute} from '../render3/instructions/di_attr';\nimport {makeParamDecorator} from '../util/decorators';\n\n\n/**\n * Type of the Attribute decorator / constructor function.\n *\n * @publicApi\n */\nexport interface AttributeDecorator {\n  /**\n   * Parameter decorator for a directive constructor that designates\n   * a host-element attribute whose value is injected as a constant string literal.\n   *\n   * @usageNotes\n   *\n   * Suppose we have an `<input>` element and want to know its `type`.\n   *\n   * ```html\n   * <input type=\"text\">\n   * ```\n   *\n   * The following example uses the decorator to inject the string literal `text` in a directive.\n   *\n   * {@example core/ts/metadata/metadata.ts region='attributeMetadata'}\n   *\n   * The following example uses the decorator in a component constructor.\n   *\n   * {@example core/ts/metadata/metadata.ts region='attributeFactory'}\n   *\n   */\n  (name: string): any;\n  new(name: string): Attribute;\n}\n\n/**\n * Type of the Attribute metadata.\n *\n * @publicApi\n */\nexport interface Attribute {\n  /**\n   * The name of the attribute whose value can be injected.\n   */\n  attributeName: string;\n}\n\n/**\n * Attribute decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Attribute: AttributeDecorator = makeParamDecorator(\n    'Attribute',\n    (attributeName?: string) =>\n        ({attributeName, __NG_ELEMENT_ID__: () => ɵɵinjectAttribute(attributeName!)}));\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../interface/type';\nimport {assertLessThan} from '../util/assert';\n\nimport {ɵɵdefineInjectable} from './interface/defs';\n\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parameterized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides an additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * const myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n * application's root injector. If the factory function, which takes zero arguments, needs to inject\n * dependencies, it can do so using the `inject` function.\n * As you can see in the Tree-shakable InjectionToken example below.\n *\n * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n * mentioned above, `'root'` is the default value for `providedIn`.\n *\n * @usageNotes\n * ### Basic Examples\n *\n * ### Plain InjectionToken\n *\n * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * ### Tree-shakable InjectionToken\n *\n * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n *\n *\n * @publicApi\n */\nexport class InjectionToken<T> {\n  /** @internal */\n  readonly ngMetadataName = 'InjectionToken';\n\n  readonly ɵprov: unknown;\n\n  /**\n   * @param _desc   Description for the token,\n   *                used only for debugging purposes,\n   *                it should but does not need to be unique\n   * @param options Options for the token's usage, as described above\n   */\n  constructor(protected _desc: string, options?: {\n    providedIn?: Type<any>|'root'|'platform'|'any'|null, factory: () => T\n  }) {\n    this.ɵprov = undefined;\n    if (typeof options == 'number') {\n      (typeof ngDevMode === 'undefined' || ngDevMode) &&\n          assertLessThan(options, 0, 'Only negative numbers are supported here');\n      // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n      // See `InjectorMarkers`\n      (this as any).__NG_ELEMENT_ID__ = options;\n    } else if (options !== undefined) {\n      this.ɵprov = ɵɵdefineInjectable({\n        token: this,\n        providedIn: options.providedIn || 'root',\n        factory: options.factory,\n      });\n    }\n  }\n\n  /**\n   * @internal\n   */\n  get multi(): InjectionToken<Array<T>> {\n    return this as InjectionToken<Array<T>>;\n  }\n\n  toString(): string {\n    return `InjectionToken ${this._desc}`;\n  }\n}\n\nexport interface InjectableDefToken<T> extends InjectionToken<T> {\n  ɵprov: unknown;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '../di/injection_token';\nimport {ProviderToken} from '../di/provider_token';\nimport {makePropDecorator} from '../util/decorators';\n\n/**\n * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n * that will populate the `entryComponents` field of components and NgModules\n * based on its `useValue` property value.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) are added to the `entryComponents` property.\n *\n * @usageNotes\n *\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on a router configuration that refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * @NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * @publicApi\n * @deprecated Since 9.0.0. With Ivy, this property is no longer necessary.\n */\nexport const ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken<any>('AnalyzeForEntryComponents');\n\n/**\n * Type of the `Attribute` decorator / constructor function.\n *\n * @publicApi\n */\nexport interface AttributeDecorator {\n  /**\n   * Specifies that a constant attribute value should be injected.\n   *\n   * The directive can inject constant string literals of host element attributes.\n   *\n   * @usageNotes\n   *\n   * Suppose we have an `<input>` element and want to know its `type`.\n   *\n   * ```html\n   * <input type=\"text\">\n   * ```\n   *\n   * A decorator can inject string literal `text` as in the following example.\n   *\n   * {@example core/ts/metadata/metadata.ts region='attributeMetadata'}\n   *\n   * @publicApi\n   */\n  (name: string): any;\n  new(name: string): Attribute;\n}\n\n\n/**\n * Type of the Attribute metadata.\n *\n * @publicApi\n */\nexport interface Attribute {\n  /**\n   * The name of the attribute to be injected into the constructor.\n   */\n  attributeName?: string;\n}\n\n/**\n * Type of the Query metadata.\n *\n * @publicApi\n */\nexport interface Query {\n  descendants: boolean;\n  emitDistinctChangesOnly: boolean;\n  first: boolean;\n  read: any;\n  isViewQuery: boolean;\n  selector: any;\n  static?: boolean;\n}\n\n// Stores the default value of `emitDistinctChangesOnly` when the `emitDistinctChangesOnly` is not\n// explicitly set.\nexport const emitDistinctChangesOnlyDefaultValue = true;\n\n\n/**\n * Base class for query metadata.\n *\n * @see `ContentChildren`.\n * @see `ContentChild`.\n * @see `ViewChildren`.\n * @see `ViewChild`.\n *\n * @publicApi\n */\nexport abstract class Query {}\n\n/**\n * Type of the ContentChildren decorator / constructor function.\n *\n * @see `ContentChildren`.\n * @publicApi\n */\nexport interface ContentChildrenDecorator {\n  /**\n   * @description\n   * Property decorator that configures a content query.\n   *\n   * Use to get the `QueryList` of elements or directives from the content DOM.\n   * Any time a child element is added, removed, or moved, the query list will be\n   * updated, and the changes observable of the query list will emit a new value.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   *\n   * Does not retrieve elements or directives that are in other components' templates,\n   * since a component's template is always a black box to its ancestors.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - The directive type or the name used for querying.\n   * * **descendants** - If `true` include all descendants of the element. If `false` then only\n   * query direct children of the element.\n   * * **emitDistinctChangesOnly** - The ` QueryList#changes` observable will emit new values only\n   *   if the QueryList result has changed. When `false` the `changes` observable might emit even\n   *   if the QueryList has not changed.\n   *   ** Note: *** This config option is **deprecated**, it will be permanently set to `true` and\n   *   removed in future versions of Angular.\n   * * **read** - Used to read a different token from the queried elements.\n   *\n   * The following selectors are supported.\n   *   * Any class with the `@Component` or `@Directive` decorator\n   *   * A template reference variable as a string (e.g. query `<my-component #cmp></my-component>`\n   * with `@ContentChildren('cmp')`)\n   *   * Any provider defined in the child component tree of the current component (e.g.\n   * `@ContentChildren(SomeService) someService: SomeService`)\n   *   * Any provider defined through a string token (e.g. `@ContentChildren('someToken')\n   * someTokenVal: any`)\n   *   * A `TemplateRef` (e.g. query `<ng-template></ng-template>` with\n   * `@ContentChildren(TemplateRef) template;`)\n   *\n   * In addition, multiple string selectors can be separated with a comma (e.g.\n   * `@ContentChildren('cmp1,cmp2')`)\n   *\n   * The following values are supported by `read`:\n   *   * Any class with the `@Component` or `@Directive` decorator\n   *   * Any provider defined on the injector of the component that is matched by the `selector` of\n   * this query\n   *   * Any provider defined through a string token (e.g. `{provide: 'token', useValue: 'val'}`)\n   *   * `TemplateRef`, `ElementRef`, and `ViewContainerRef`\n   *\n   * @usageNotes\n   *\n   * Here is a simple demonstration of how the `ContentChildren` decorator can be used.\n   *\n   * {@example core/di/ts/contentChildren/content_children_howto.ts region='HowTo'}\n   *\n   * ### Tab-pane example\n   *\n   * Here is a slightly more realistic example that shows how `ContentChildren` decorators\n   * can be used to implement a tab pane component.\n   *\n   * {@example core/di/ts/contentChildren/content_children_example.ts region='Component'}\n   *\n   * @Annotation\n   */\n  (selector: ProviderToken<unknown>|Function|string, opts?: {\n    descendants?: boolean,\n    emitDistinctChangesOnly?: boolean,\n    read?: any,\n  }): any;\n  new(selector: ProviderToken<unknown>|Function|string,\n      opts?: {descendants?: boolean, emitDistinctChangesOnly?: boolean, read?: any}): Query;\n}\n\n/**\n * Type of the ContentChildren metadata.\n *\n *\n * @Annotation\n * @publicApi\n */\nexport type ContentChildren = Query;\n\n/**\n * ContentChildren decorator and metadata.\n *\n *\n * @Annotation\n * @publicApi\n */\nexport const ContentChildren: ContentChildrenDecorator = makePropDecorator(\n    'ContentChildren', (selector?: any, data: any = {}) => ({\n                         selector,\n                         first: false,\n                         isViewQuery: false,\n                         descendants: false,\n                         emitDistinctChangesOnly: emitDistinctChangesOnlyDefaultValue,\n                         ...data\n                       }),\n    Query);\n\n/**\n * Type of the ContentChild decorator / constructor function.\n *\n * @publicApi\n */\nexport interface ContentChildDecorator {\n  /**\n   * @description\n   * Property decorator that configures a content query.\n   *\n   * Use to get the first element or the directive matching the selector from the content DOM.\n   * If the content DOM changes, and a new child matches the selector,\n   * the property will be updated.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   *\n   * Does not retrieve elements or directives that are in other components' templates,\n   * since a component's template is always a black box to its ancestors.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - The directive type or the name used for querying.\n   * * **descendants** - If `true` (default) include all descendants of the element. If `false` then\n   * only query direct children of the element.\n   * * **read** - Used to read a different token from the queried element.\n   * * **static** - True to resolve query results before change detection runs,\n   * false to resolve after change detection. Defaults to false.\n   *\n   * The following selectors are supported.\n   *   * Any class with the `@Component` or `@Directive` decorator\n   *   * A template reference variable as a string (e.g. query `<my-component #cmp></my-component>`\n   * with `@ContentChild('cmp')`)\n   *   * Any provider defined in the child component tree of the current component (e.g.\n   * `@ContentChild(SomeService) someService: SomeService`)\n   *   * Any provider defined through a string token (e.g. `@ContentChild('someToken') someTokenVal:\n   * any`)\n   *   * A `TemplateRef` (e.g. query `<ng-template></ng-template>` with `@ContentChild(TemplateRef)\n   * template;`)\n   *\n   * The following values are supported by `read`:\n   *   * Any class with the `@Component` or `@Directive` decorator\n   *   * Any provider defined on the injector of the component that is matched by the `selector` of\n   * this query\n   *   * Any provider defined through a string token (e.g. `{provide: 'token', useValue: 'val'}`)\n   *   * `TemplateRef`, `ElementRef`, and `ViewContainerRef`\n   *\n   * @usageNotes\n   *\n   * {@example core/di/ts/contentChild/content_child_howto.ts region='HowTo'}\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/contentChild/content_child_example.ts region='Component'}\n   *\n   * @Annotation\n   */\n  (selector: ProviderToken<unknown>|Function|string,\n   opts?: {descendants?: boolean, read?: any, static?: boolean}): any;\n  new(selector: ProviderToken<unknown>|Function|string,\n      opts?: {descendants?: boolean, read?: any, static?: boolean}): ContentChild;\n}\n\n/**\n * Type of the ContentChild metadata.\n *\n * @publicApi\n */\nexport type ContentChild = Query;\n\n/**\n * ContentChild decorator and metadata.\n *\n *\n * @Annotation\n *\n * @publicApi\n */\nexport const ContentChild: ContentChildDecorator = makePropDecorator(\n    'ContentChild',\n    (selector?: any, data: any = {}) =>\n        ({selector, first: true, isViewQuery: false, descendants: true, ...data}),\n    Query);\n\n/**\n * Type of the ViewChildren decorator / constructor function.\n *\n * @see `ViewChildren`.\n *\n * @publicApi\n */\nexport interface ViewChildrenDecorator {\n  /**\n   * @description\n   * Property decorator that configures a view query.\n   *\n   * Use to get the `QueryList` of elements or directives from the view DOM.\n   * Any time a child element is added, removed, or moved, the query list will be updated,\n   * and the changes observable of the query list will emit a new value.\n   *\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - The directive type or the name used for querying.\n   * * **read** - Used to read a different token from the queried elements.\n   * * **emitDistinctChangesOnly** - The ` QueryList#changes` observable will emit new values only\n   *   if the QueryList result has changed. When `false` the `changes` observable might emit even\n   *   if the QueryList has not changed.\n   *   ** Note: *** This config option is **deprecated**, it will be permanently set to `true` and\n   * removed in future versions of Angular.\n   *\n   * The following selectors are supported.\n   *   * Any class with the `@Component` or `@Directive` decorator\n   *   * A template reference variable as a string (e.g. query `<my-component #cmp></my-component>`\n   * with `@ViewChildren('cmp')`)\n   *   * Any provider defined in the child component tree of the current component (e.g.\n   * `@ViewChildren(SomeService) someService!: SomeService`)\n   *   * Any provider defined through a string token (e.g. `@ViewChildren('someToken')\n   * someTokenVal!: any`)\n   *   * A `TemplateRef` (e.g. query `<ng-template></ng-template>` with `@ViewChildren(TemplateRef)\n   * template;`)\n   *\n   * In addition, multiple string selectors can be separated with a comma (e.g.\n   * `@ViewChildren('cmp1,cmp2')`)\n   *\n   * The following values are supported by `read`:\n   *   * Any class with the `@Component` or `@Directive` decorator\n   *   * Any provider defined on the injector of the component that is matched by the `selector` of\n   * this query\n   *   * Any provider defined through a string token (e.g. `{provide: 'token', useValue: 'val'}`)\n   *   * `TemplateRef`, `ElementRef`, and `ViewContainerRef`\n   *\n   * @usageNotes\n   *\n   * {@example core/di/ts/viewChildren/view_children_howto.ts region='HowTo'}\n   *\n   * ### Another example\n   *\n   * {@example core/di/ts/viewChildren/view_children_example.ts region='Component'}\n   *\n   * @Annotation\n   */\n  (selector: ProviderToken<unknown>|Function|string,\n   opts?: {read?: any, emitDistinctChangesOnly?: boolean}): any;\n  new(selector: ProviderToken<unknown>|Function|string,\n      opts?: {read?: any, emitDistinctChangesOnly?: boolean}): ViewChildren;\n}\n\n/**\n * Type of the ViewChildren metadata.\n *\n * @publicApi\n */\nexport type ViewChildren = Query;\n\n/**\n * ViewChildren decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const ViewChildren: ViewChildrenDecorator = makePropDecorator(\n    'ViewChildren', (selector?: any, data: any = {}) => ({\n                      selector,\n                      first: false,\n                      isViewQuery: true,\n                      descendants: true,\n                      emitDistinctChangesOnly: emitDistinctChangesOnlyDefaultValue,\n                      ...data\n                    }),\n    Query);\n\n/**\n * Type of the ViewChild decorator / constructor function.\n *\n * @see `ViewChild`.\n * @publicApi\n */\nexport interface ViewChildDecorator {\n  /**\n   * @description\n   * Property decorator that configures a view query.\n   * The change detector looks for the first element or the directive matching the selector\n   * in the view DOM. If the view DOM changes, and a new child matches the selector,\n   * the property is updated.\n   *\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - The directive type or the name used for querying.\n   * * **read** - Used to read a different token from the queried elements.\n   * * **static** - True to resolve query results before change detection runs,\n   * false to resolve after change detection. Defaults to false.\n   *\n   *\n   * The following selectors are supported.\n   *   * Any class with the `@Component` or `@Directive` decorator\n   *   * A template reference variable as a string (e.g. query `<my-component #cmp></my-component>`\n   * with `@ViewChild('cmp')`)\n   *   * Any provider defined in the child component tree of the current component (e.g.\n   * `@ViewChild(SomeService) someService: SomeService`)\n   *   * Any provider defined through a string token (e.g. `@ViewChild('someToken') someTokenVal:\n   * any`)\n   *   * A `TemplateRef` (e.g. query `<ng-template></ng-template>` with `@ViewChild(TemplateRef)\n   * template;`)\n   *\n   * The following values are supported by `read`:\n   *   * Any class with the `@Component` or `@Directive` decorator\n   *   * Any provider defined on the injector of the component that is matched by the `selector` of\n   * this query\n   *   * Any provider defined through a string token (e.g. `{provide: 'token', useValue: 'val'}`)\n   *   * `TemplateRef`, `ElementRef`, and `ViewContainerRef`\n   *\n   * @usageNotes\n   *\n   * {@example core/di/ts/viewChild/view_child_example.ts region='Component'}\n   *\n   * ### Example 2\n   *\n   * {@example core/di/ts/viewChild/view_child_howto.ts region='HowTo'}\n   *\n   * @Annotation\n   */\n  (selector: ProviderToken<unknown>|Function|string, opts?: {read?: any, static?: boolean}): any;\n  new(selector: ProviderToken<unknown>|Function|string,\n      opts?: {read?: any, static?: boolean}): ViewChild;\n}\n\n/**\n * Type of the ViewChild metadata.\n *\n * @publicApi\n */\nexport type ViewChild = Query;\n\n/**\n * ViewChild decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const ViewChild: ViewChildDecorator = makePropDecorator(\n    'ViewChild',\n    (selector: any, data: any) =>\n        ({selector, first: true, isViewQuery: true, descendants: true, ...data}),\n    Query);\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A set of interfaces which are shared between `@angular/core` and `@angular/compiler` to allow\n * for late binding of `@angular/compiler` for JIT purposes.\n *\n * This file has two copies. Please ensure that they are in sync:\n *  - packages/compiler/src/compiler_facade_interface.ts          (main)\n *  - packages/core/src/compiler/compiler_facade_interface.ts     (replica)\n *\n * Please ensure that the two files are in sync using this command:\n * ```\n * cp packages/compiler/src/compiler_facade_interface.ts \\\n *    packages/core/src/compiler/compiler_facade_interface.ts\n * ```\n */\n\nexport interface ExportedCompilerFacade {\n  ɵcompilerFacade: CompilerFacade;\n}\n\nexport interface CompilerFacade {\n  compilePipe(angularCoreEnv: CoreEnvironment, sourceMapUrl: string, meta: R3PipeMetadataFacade):\n      any;\n  compilePipeDeclaration(\n      angularCoreEnv: CoreEnvironment, sourceMapUrl: string, declaration: R3DeclarePipeFacade): any;\n  compileInjectable(\n      angularCoreEnv: CoreEnvironment, sourceMapUrl: string, meta: R3InjectableMetadataFacade): any;\n  compileInjectableDeclaration(\n      angularCoreEnv: CoreEnvironment, sourceMapUrl: string, meta: R3DeclareInjectableFacade): any;\n  compileInjector(\n      angularCoreEnv: CoreEnvironment, sourceMapUrl: string, meta: R3InjectorMetadataFacade): any;\n  compileInjectorDeclaration(\n      angularCoreEnv: CoreEnvironment, sourceMapUrl: string,\n      declaration: R3DeclareInjectorFacade): any;\n  compileNgModule(\n      angularCoreEnv: CoreEnvironment, sourceMapUrl: string, meta: R3NgModuleMetadataFacade): any;\n  compileNgModuleDeclaration(\n      angularCoreEnv: CoreEnvironment, sourceMapUrl: string,\n      declaration: R3DeclareNgModuleFacade): any;\n  compileDirective(\n      angularCoreEnv: CoreEnvironment, sourceMapUrl: string, meta: R3DirectiveMetadataFacade): any;\n  compileDirectiveDeclaration(\n      angularCoreEnv: CoreEnvironment, sourceMapUrl: string,\n      declaration: R3DeclareDirectiveFacade): any;\n  compileComponent(\n      angularCoreEnv: CoreEnvironment, sourceMapUrl: string, meta: R3ComponentMetadataFacade): any;\n  compileComponentDeclaration(\n      angularCoreEnv: CoreEnvironment, sourceMapUrl: string,\n      declaration: R3DeclareComponentFacade): any;\n  compileFactory(\n      angularCoreEnv: CoreEnvironment, sourceMapUrl: string, meta: R3FactoryDefMetadataFacade): any;\n  compileFactoryDeclaration(\n      angularCoreEnv: CoreEnvironment, sourceMapUrl: string, meta: R3DeclareFactoryFacade): any;\n\n  createParseSourceSpan(kind: string, typeName: string, sourceUrl: string): ParseSourceSpan;\n\n  FactoryTarget: typeof FactoryTarget;\n  // Note that we do not use `{new(): ResourceLoader}` here because\n  // the resource loader class is abstract and not constructable.\n  ResourceLoader: Function&{prototype: ResourceLoader};\n}\n\nexport interface CoreEnvironment {\n  [name: string]: Function;\n}\n\nexport type ResourceLoader = {\n  get(url: string): Promise<string>|string;\n};\n\nexport type StringMap = {\n  [key: string]: string;\n};\n\nexport type StringMapWithRename = {\n  [key: string]: string|[string, string];\n};\n\nexport type Provider = unknown;\nexport type Type = Function;\nexport type OpaqueValue = unknown;\n\nexport enum FactoryTarget {\n  Directive = 0,\n  Component = 1,\n  Injectable = 2,\n  Pipe = 3,\n  NgModule = 4,\n}\n\nexport interface R3DependencyMetadataFacade {\n  token: OpaqueValue;\n  attribute: string|null;\n  host: boolean;\n  optional: boolean;\n  self: boolean;\n  skipSelf: boolean;\n}\n\nexport interface R3DeclareDependencyMetadataFacade {\n  token: OpaqueValue;\n  attribute?: boolean;\n  host?: boolean;\n  optional?: boolean;\n  self?: boolean;\n  skipSelf?: boolean;\n}\n\nexport interface R3PipeMetadataFacade {\n  name: string;\n  type: Type;\n  pipeName: string;\n  pure: boolean;\n  isStandalone: boolean;\n}\n\nexport interface R3InjectableMetadataFacade {\n  name: string;\n  type: Type;\n  typeArgumentCount: number;\n  providedIn?: Type|'root'|'platform'|'any'|null;\n  useClass?: OpaqueValue;\n  useFactory?: OpaqueValue;\n  useExisting?: OpaqueValue;\n  useValue?: OpaqueValue;\n  deps?: R3DependencyMetadataFacade[];\n}\n\nexport interface R3NgModuleMetadataFacade {\n  type: Type;\n  bootstrap: Function[];\n  declarations: Function[];\n  imports: Function[];\n  exports: Function[];\n  schemas: {name: string}[]|null;\n  id: string|null;\n}\n\nexport interface R3InjectorMetadataFacade {\n  name: string;\n  type: Type;\n  providers: Provider[];\n  imports: OpaqueValue[];\n}\n\nexport interface R3DirectiveMetadataFacade {\n  name: string;\n  type: Type;\n  typeSourceSpan: ParseSourceSpan;\n  selector: string|null;\n  queries: R3QueryMetadataFacade[];\n  host: {[key: string]: string};\n  propMetadata: {[key: string]: OpaqueValue[]};\n  lifecycle: {usesOnChanges: boolean;};\n  inputs: string[];\n  outputs: string[];\n  usesInheritance: boolean;\n  exportAs: string[]|null;\n  providers: Provider[]|null;\n  viewQueries: R3QueryMetadataFacade[];\n  isStandalone: boolean;\n}\n\nexport interface R3ComponentMetadataFacade extends R3DirectiveMetadataFacade {\n  template: string;\n  preserveWhitespaces: boolean;\n  animations: OpaqueValue[]|undefined;\n  declarations: R3TemplateDependencyFacade[];\n  styles: string[];\n  encapsulation: ViewEncapsulation;\n  viewProviders: Provider[]|null;\n  interpolation?: [string, string];\n  changeDetection?: ChangeDetectionStrategy;\n}\n\nexport interface R3DeclareDirectiveFacade {\n  selector?: string;\n  type: Type;\n  inputs?: {[classPropertyName: string]: string|[string, string]};\n  outputs?: {[classPropertyName: string]: string};\n  host?: {\n    attributes?: {[key: string]: OpaqueValue};\n    listeners?: {[key: string]: string};\n    properties?: {[key: string]: string};\n    classAttribute?: string;\n    styleAttribute?: string;\n  };\n  queries?: R3DeclareQueryMetadataFacade[];\n  viewQueries?: R3DeclareQueryMetadataFacade[];\n  providers?: OpaqueValue;\n  exportAs?: string[];\n  usesInheritance?: boolean;\n  usesOnChanges?: boolean;\n  isStandalone?: boolean;\n}\n\nexport interface R3DeclareComponentFacade extends R3DeclareDirectiveFacade {\n  template: string;\n  isInline?: boolean;\n  styles?: string[];\n\n  // Post-standalone libraries use a unified dependencies field.\n  dependencies?: R3DeclareTemplateDependencyFacade[];\n\n  // Pre-standalone libraries have separate component/directive/pipe fields:\n  components?: R3DeclareDirectiveDependencyFacade[];\n  directives?: R3DeclareDirectiveDependencyFacade[];\n  pipes?: {[pipeName: string]: OpaqueValue|(() => OpaqueValue)};\n\n\n  viewProviders?: OpaqueValue;\n  animations?: OpaqueValue;\n  changeDetection?: ChangeDetectionStrategy;\n  encapsulation?: ViewEncapsulation;\n  interpolation?: [string, string];\n  preserveWhitespaces?: boolean;\n}\n\nexport type R3DeclareTemplateDependencyFacade = {\n  kind: string\n}&(R3DeclareDirectiveDependencyFacade|R3DeclarePipeDependencyFacade|\n   R3DeclareNgModuleDependencyFacade);\n\nexport interface R3DeclareDirectiveDependencyFacade {\n  kind?: 'directive'|'component';\n  selector: string;\n  type: OpaqueValue|(() => OpaqueValue);\n  inputs?: string[];\n  outputs?: string[];\n  exportAs?: string[];\n}\n\nexport interface R3DeclarePipeDependencyFacade {\n  kind?: 'pipe';\n  name: string;\n  type: OpaqueValue|(() => OpaqueValue);\n}\n\nexport interface R3DeclareNgModuleDependencyFacade {\n  kind: 'ngmodule';\n  type: OpaqueValue|(() => OpaqueValue);\n}\n\nexport enum R3TemplateDependencyKind {\n  Directive = 0,\n  Pipe = 1,\n  NgModule = 2,\n}\n\nexport interface R3TemplateDependencyFacade {\n  kind: R3TemplateDependencyKind;\n  type: OpaqueValue|(() => OpaqueValue);\n}\nexport interface R3FactoryDefMetadataFacade {\n  name: string;\n  type: Type;\n  typeArgumentCount: number;\n  deps: R3DependencyMetadataFacade[]|null;\n  target: FactoryTarget;\n}\n\nexport interface R3DeclareFactoryFacade {\n  type: Type;\n  deps: R3DeclareDependencyMetadataFacade[]|'invalid'|null;\n  target: FactoryTarget;\n}\n\nexport interface R3DeclareInjectableFacade {\n  type: Type;\n  providedIn?: Type|'root'|'platform'|'any'|null;\n  useClass?: OpaqueValue;\n  useFactory?: OpaqueValue;\n  useExisting?: OpaqueValue;\n  useValue?: OpaqueValue;\n  deps?: R3DeclareDependencyMetadataFacade[];\n}\n\nexport enum ViewEncapsulation {\n  Emulated = 0,\n  // Historically the 1 value was for `Native` encapsulation which has been removed as of v11.\n  None = 2,\n  ShadowDom = 3\n}\n\nexport type ChangeDetectionStrategy = number;\n\nexport interface R3QueryMetadataFacade {\n  propertyName: string;\n  first: boolean;\n  predicate: OpaqueValue|string[];\n  descendants: boolean;\n  emitDistinctChangesOnly: boolean;\n  read: OpaqueValue|null;\n  static: boolean;\n}\n\nexport interface R3DeclareQueryMetadataFacade {\n  propertyName: string;\n  first?: boolean;\n  predicate: OpaqueValue|string[];\n  descendants?: boolean;\n  read?: OpaqueValue;\n  static?: boolean;\n  emitDistinctChangesOnly?: boolean;\n}\n\nexport interface R3DeclareInjectorFacade {\n  type: Type;\n  imports?: OpaqueValue[];\n  providers?: OpaqueValue[];\n}\n\nexport interface R3DeclareNgModuleFacade {\n  type: Type;\n  bootstrap?: OpaqueValue[]|(() => OpaqueValue[]);\n  declarations?: OpaqueValue[]|(() => OpaqueValue[]);\n  imports?: OpaqueValue[]|(() => OpaqueValue[]);\n  exports?: OpaqueValue[]|(() => OpaqueValue[]);\n  schemas?: OpaqueValue[];\n  id?: OpaqueValue;\n}\n\nexport interface R3DeclarePipeFacade {\n  type: Type;\n  name: string;\n  pure?: boolean;\n  isStandalone?: boolean;\n}\n\nexport interface ParseSourceSpan {\n  start: any;\n  end: any;\n  details: any;\n  fullStart: any;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {global} from '../util/global';\nimport {CompilerFacade, ExportedCompilerFacade, Type} from './compiler_facade_interface';\nexport * from './compiler_facade_interface';\n\nexport const enum JitCompilerUsage {\n  Decorator,\n  PartialDeclaration,\n}\n\ninterface JitCompilerUsageRequest {\n  usage: JitCompilerUsage;\n  kind: 'directive'|'component'|'pipe'|'injectable'|'NgModule';\n  type: Type;\n}\n\nexport function getCompilerFacade(request: JitCompilerUsageRequest): CompilerFacade {\n  const globalNg: ExportedCompilerFacade = global['ng'];\n  if (globalNg && globalNg.ɵcompilerFacade) {\n    return globalNg.ɵcompilerFacade;\n  }\n\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    // Log the type as an error so that a developer can easily navigate to the type from the\n    // console.\n    console.error(`JIT compilation failed for ${request.kind}`, request.type);\n\n    let message = `The ${request.kind} '${\n        request\n            .type.name}' needs to be compiled using the JIT compiler, but '@angular/compiler' is not available.\\n\\n`;\n    if (request.usage === JitCompilerUsage.PartialDeclaration) {\n      message += `The ${request.kind} is part of a library that has been partially compiled.\\n`;\n      message +=\n          `However, the Angular Linker has not processed the library such that JIT compilation is used as fallback.\\n`;\n      message += '\\n';\n      message +=\n          `Ideally, the library is processed using the Angular Linker to become fully AOT compiled.\\n`;\n    } else {\n      message +=\n          `JIT compilation is discouraged for production use-cases! Consider using AOT mode instead.\\n`;\n    }\n    message +=\n        `Alternatively, the JIT compiler should be loaded by bootstrapping using '@angular/platform-browser-dynamic' or '@angular/platform-server',\\n`;\n    message +=\n        `or manually provide the compiler with 'import \"@angular/compiler\";' before bootstrapping.`;\n    throw new Error(message);\n  } else {\n    throw new Error('JIT compiler unavailable');\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @description\n *\n * Represents a type that a Component or other object is instances of.\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is represented by\n * the `MyCustomComponent` constructor function.\n *\n * @publicApi\n */\nexport const Type = Function;\n\nexport function isType(v: any): v is Type<any> {\n  return typeof v === 'function';\n}\n\n/**\n * @description\n *\n * Represents an abstract class `T`, if applied to a concrete class it would stop being\n * instantiable.\n *\n * @publicApi\n */\nexport interface AbstractType<T> extends Function {\n  prototype: T;\n}\n\nexport interface Type<T> extends Function {\n  new(...args: any[]): T;\n}\n\nexport type Mutable<T extends {[x: string]: any}, K extends string> = {\n  [P in K]: T[P];\n};\n\n/**\n * Returns a writable type version of type.\n *\n * USAGE:\n * Given:\n * ```\n * interface Person {readonly name: string}\n * ```\n *\n * We would like to get a read/write version of `Person`.\n * ```\n * const WritablePerson = Writable<Person>;\n * ```\n *\n * The result is that you can do:\n *\n * ```\n * const readonlyPerson: Person = {name: 'Marry'};\n * readonlyPerson.name = 'John'; // TypeError\n * (readonlyPerson as WritablePerson).name = 'John'; // OK\n *\n * // Error: Correctly detects that `Person` did not have `age` property.\n * (readonlyPerson as WritablePerson).age = 30;\n * ```\n */\nexport type Writable<T> = {\n  -readonly[K in keyof T]: T[K];\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {assertEqual, assertLessThanOrEqual} from './assert';\n\n/**\n * Equivalent to ES6 spread, add each item to an array.\n *\n * @param items The items to add\n * @param arr The array to which you want to add the items\n */\nexport function addAllToArray(items: any[], arr: any[]) {\n  for (let i = 0; i < items.length; i++) {\n    arr.push(items[i]);\n  }\n}\n\n/**\n * Determines if the contents of two arrays is identical\n *\n * @param a first array\n * @param b second array\n * @param identityAccessor Optional function for extracting stable object identity from a value in\n *     the array.\n */\nexport function arrayEquals<T>(a: T[], b: T[], identityAccessor?: (value: T) => unknown): boolean {\n  if (a.length !== b.length) return false;\n  for (let i = 0; i < a.length; i++) {\n    let valueA = a[i];\n    let valueB = b[i];\n    if (identityAccessor) {\n      valueA = identityAccessor(valueA) as any;\n      valueB = identityAccessor(valueB) as any;\n    }\n    if (valueB !== valueA) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Flattens an array.\n */\nexport function flatten(list: any[], dst?: any[]): any[] {\n  if (dst === undefined) dst = list;\n  for (let i = 0; i < list.length; i++) {\n    let item = list[i];\n    if (Array.isArray(item)) {\n      // we need to inline it.\n      if (dst === list) {\n        // Our assumption that the list was already flat was wrong and\n        // we need to clone flat since we need to write to it.\n        dst = list.slice(0, i);\n      }\n      flatten(item, dst);\n    } else if (dst !== list) {\n      dst.push(item);\n    }\n  }\n  return dst;\n}\n\nexport function deepForEach<T>(input: (T|any[])[], fn: (value: T) => void): void {\n  input.forEach(value => Array.isArray(value) ? deepForEach(value, fn) : fn(value));\n}\n\nexport function addToArray(arr: any[], index: number, value: any): void {\n  // perf: array.push is faster than array.splice!\n  if (index >= arr.length) {\n    arr.push(value);\n  } else {\n    arr.splice(index, 0, value);\n  }\n}\n\nexport function removeFromArray(arr: any[], index: number): any {\n  // perf: array.pop is faster than array.splice!\n  if (index >= arr.length - 1) {\n    return arr.pop();\n  } else {\n    return arr.splice(index, 1)[0];\n  }\n}\n\nexport function newArray<T = any>(size: number): T[];\nexport function newArray<T>(size: number, value: T): T[];\nexport function newArray<T>(size: number, value?: T): T[] {\n  const list: T[] = [];\n  for (let i = 0; i < size; i++) {\n    list.push(value!);\n  }\n  return list;\n}\n\n/**\n * Remove item from array (Same as `Array.splice()` but faster.)\n *\n * `Array.splice()` is not as fast because it has to allocate an array for the elements which were\n * removed. This causes memory pressure and slows down code when most of the time we don't\n * care about the deleted items array.\n *\n * https://jsperf.com/fast-array-splice (About 20x faster)\n *\n * @param array Array to splice\n * @param index Index of element in array to remove.\n * @param count Number of items to remove.\n */\nexport function arraySplice(array: any[], index: number, count: number): void {\n  const length = array.length - count;\n  while (index < length) {\n    array[index] = array[index + count];\n    index++;\n  }\n  while (count--) {\n    array.pop();  // shrink the array\n  }\n}\n\n/**\n * Same as `Array.splice(index, 0, value)` but faster.\n *\n * `Array.splice()` is not fast because it has to allocate an array for the elements which were\n * removed. This causes memory pressure and slows down code when most of the time we don't\n * care about the deleted items array.\n *\n * @param array Array to splice.\n * @param index Index in array where the `value` should be added.\n * @param value Value to add to array.\n */\nexport function arrayInsert(array: any[], index: number, value: any): void {\n  ngDevMode && assertLessThanOrEqual(index, array.length, 'Can\\'t insert past array end.');\n  let end = array.length;\n  while (end > index) {\n    const previousEnd = end - 1;\n    array[end] = array[previousEnd];\n    end = previousEnd;\n  }\n  array[index] = value;\n}\n\n/**\n * Same as `Array.splice2(index, 0, value1, value2)` but faster.\n *\n * `Array.splice()` is not fast because it has to allocate an array for the elements which were\n * removed. This causes memory pressure and slows down code when most of the time we don't\n * care about the deleted items array.\n *\n * @param array Array to splice.\n * @param index Index in array where the `value` should be added.\n * @param value1 Value to add to array.\n * @param value2 Value to add to array.\n */\nexport function arrayInsert2(array: any[], index: number, value1: any, value2: any): void {\n  ngDevMode && assertLessThanOrEqual(index, array.length, 'Can\\'t insert past array end.');\n  let end = array.length;\n  if (end == index) {\n    // inserting at the end.\n    array.push(value1, value2);\n  } else if (end === 1) {\n    // corner case when we have less items in array than we have items to insert.\n    array.push(value2, array[0]);\n    array[0] = value1;\n  } else {\n    end--;\n    array.push(array[end - 1], array[end]);\n    while (end > index) {\n      const previousEnd = end - 2;\n      array[end] = array[previousEnd];\n      end--;\n    }\n    array[index] = value1;\n    array[index + 1] = value2;\n  }\n}\n\n/**\n * Insert a `value` into an `array` so that the array remains sorted.\n *\n * NOTE:\n * - Duplicates are not allowed, and are ignored.\n * - This uses binary search algorithm for fast inserts.\n *\n * @param array A sorted array to insert into.\n * @param value The value to insert.\n * @returns index of the inserted value.\n */\nexport function arrayInsertSorted(array: string[], value: string): number {\n  let index = arrayIndexOfSorted(array, value);\n  if (index < 0) {\n    // if we did not find it insert it.\n    index = ~index;\n    arrayInsert(array, index, value);\n  }\n  return index;\n}\n\n/**\n * Remove `value` from a sorted `array`.\n *\n * NOTE:\n * - This uses binary search algorithm for fast removals.\n *\n * @param array A sorted array to remove from.\n * @param value The value to remove.\n * @returns index of the removed value.\n *   - positive index if value found and removed.\n *   - negative index if value not found. (`~index` to get the value where it should have been\n *     inserted)\n */\nexport function arrayRemoveSorted(array: string[], value: string): number {\n  const index = arrayIndexOfSorted(array, value);\n  if (index >= 0) {\n    arraySplice(array, index, 1);\n  }\n  return index;\n}\n\n\n/**\n * Get an index of an `value` in a sorted `array`.\n *\n * NOTE:\n * - This uses binary search algorithm for fast removals.\n *\n * @param array A sorted array to binary search.\n * @param value The value to look for.\n * @returns index of the value.\n *   - positive index if value found.\n *   - negative index if value not found. (`~index` to get the value where it should have been\n *     located)\n */\nexport function arrayIndexOfSorted(array: string[], value: string): number {\n  return _arrayIndexOfSorted(array, value, 0);\n}\n\n\n/**\n * `KeyValueArray` is an array where even positions contain keys and odd positions contain values.\n *\n * `KeyValueArray` provides a very efficient way of iterating over its contents. For small\n * sets (~10) the cost of binary searching an `KeyValueArray` has about the same performance\n * characteristics that of a `Map` with significantly better memory footprint.\n *\n * If used as a `Map` the keys are stored in alphabetical order so that they can be binary searched\n * for retrieval.\n *\n * See: `keyValueArraySet`, `keyValueArrayGet`, `keyValueArrayIndexOf`, `keyValueArrayDelete`.\n */\nexport interface KeyValueArray<VALUE> extends Array<VALUE|string> {\n  __brand__: 'array-map';\n}\n\n/**\n * Set a `value` for a `key`.\n *\n * @param keyValueArray to modify.\n * @param key The key to locate or create.\n * @param value The value to set for a `key`.\n * @returns index (always even) of where the value vas set.\n */\nexport function keyValueArraySet<V>(\n    keyValueArray: KeyValueArray<V>, key: string, value: V): number {\n  let index = keyValueArrayIndexOf(keyValueArray, key);\n  if (index >= 0) {\n    // if we found it set it.\n    keyValueArray[index | 1] = value;\n  } else {\n    index = ~index;\n    arrayInsert2(keyValueArray, index, key, value);\n  }\n  return index;\n}\n\n/**\n * Retrieve a `value` for a `key` (on `undefined` if not found.)\n *\n * @param keyValueArray to search.\n * @param key The key to locate.\n * @return The `value` stored at the `key` location or `undefined if not found.\n */\nexport function keyValueArrayGet<V>(keyValueArray: KeyValueArray<V>, key: string): V|undefined {\n  const index = keyValueArrayIndexOf(keyValueArray, key);\n  if (index >= 0) {\n    // if we found it retrieve it.\n    return keyValueArray[index | 1] as V;\n  }\n  return undefined;\n}\n\n/**\n * Retrieve a `key` index value in the array or `-1` if not found.\n *\n * @param keyValueArray to search.\n * @param key The key to locate.\n * @returns index of where the key is (or should have been.)\n *   - positive (even) index if key found.\n *   - negative index if key not found. (`~index` (even) to get the index where it should have\n *     been inserted.)\n */\nexport function keyValueArrayIndexOf<V>(keyValueArray: KeyValueArray<V>, key: string): number {\n  return _arrayIndexOfSorted(keyValueArray as string[], key, 1);\n}\n\n/**\n * Delete a `key` (and `value`) from the `KeyValueArray`.\n *\n * @param keyValueArray to modify.\n * @param key The key to locate or delete (if exist).\n * @returns index of where the key was (or should have been.)\n *   - positive (even) index if key found and deleted.\n *   - negative index if key not found. (`~index` (even) to get the index where it should have\n *     been.)\n */\nexport function keyValueArrayDelete<V>(keyValueArray: KeyValueArray<V>, key: string): number {\n  const index = keyValueArrayIndexOf(keyValueArray, key);\n  if (index >= 0) {\n    // if we found it remove it.\n    arraySplice(keyValueArray, index, 2);\n  }\n  return index;\n}\n\n\n/**\n * INTERNAL: Get an index of an `value` in a sorted `array` by grouping search by `shift`.\n *\n * NOTE:\n * - This uses binary search algorithm for fast removals.\n *\n * @param array A sorted array to binary search.\n * @param value The value to look for.\n * @param shift grouping shift.\n *   - `0` means look at every location\n *   - `1` means only look at every other (even) location (the odd locations are to be ignored as\n *         they are values.)\n * @returns index of the value.\n *   - positive index if value found.\n *   - negative index if value not found. (`~index` to get the value where it should have been\n * inserted)\n */\nfunction _arrayIndexOfSorted(array: string[], value: string, shift: number): number {\n  ngDevMode && assertEqual(Array.isArray(array), true, 'Expecting an array');\n  let start = 0;\n  let end = array.length >> shift;\n  while (end !== start) {\n    const middle = start + ((end - start) >> 1);  // find the middle.\n    const current = array[middle << shift];\n    if (value === current) {\n      return (middle << shift);\n    } else if (current > value) {\n      end = middle;\n    } else {\n      start = middle + 1;  // We already searched middle so make it non-inclusive by adding 1\n    }\n  }\n  return ~(end << shift);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isType, Type} from '../interface/type';\nimport {newArray} from '../util/array_utils';\nimport {ANNOTATIONS, PARAMETERS, PROP_METADATA} from '../util/decorators';\nimport {global} from '../util/global';\n\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\n\n\n\n/*\n * #########################\n * Attention: These Regular expressions have to hold even if the code is minified!\n * ##########################\n */\n\n/**\n * Regular expression that detects pass-through constructors for ES5 output. This Regex\n * intends to capture the common delegation pattern emitted by TypeScript and Babel. Also\n * it intends to capture the pattern where existing constructors have been downleveled from\n * ES2015 to ES5 using TypeScript w/ downlevel iteration. e.g.\n *\n * ```\n *   function MyClass() {\n *     var _this = _super.apply(this, arguments) || this;\n * ```\n *\n * downleveled to ES5 with `downlevelIteration` for TypeScript < 4.2:\n * ```\n *   function MyClass() {\n *     var _this = _super.apply(this, __spread(arguments)) || this;\n * ```\n *\n * or downleveled to ES5 with `downlevelIteration` for TypeScript >= 4.2:\n * ```\n *   function MyClass() {\n *     var _this = _super.apply(this, __spreadArray([], __read(arguments), false)) || this;\n * ```\n *\n * More details can be found in: https://github.com/angular/angular/issues/38453.\n */\nexport const ES5_DELEGATE_CTOR =\n    /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*(arguments|(?:[^()]+\\(\\[\\],)?[^()]+\\(arguments\\).*)\\)/;\n/** Regular expression that detects ES2015 classes which extend from other classes. */\nexport const ES2015_INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n/**\n * Regular expression that detects ES2015 classes which extend from other classes and\n * have an explicit constructor defined.\n */\nexport const ES2015_INHERITED_CLASS_WITH_CTOR =\n    /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n/**\n * Regular expression that detects ES2015 classes which extend from other classes\n * and inherit a constructor.\n */\nexport const ES2015_INHERITED_CLASS_WITH_DELEGATE_CTOR =\n    /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{[^}]*super\\(\\.\\.\\.arguments\\)/;\n\n/**\n * Determine whether a stringified type is a class which delegates its constructor\n * to its parent.\n *\n * This is not trivial since compiled code can actually contain a constructor function\n * even if the original source code did not. For instance, when the child class contains\n * an initialized instance property.\n */\nexport function isDelegateCtor(typeStr: string): boolean {\n  return ES5_DELEGATE_CTOR.test(typeStr) ||\n      ES2015_INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n      (ES2015_INHERITED_CLASS.test(typeStr) && !ES2015_INHERITED_CLASS_WITH_CTOR.test(typeStr));\n}\n\nexport class ReflectionCapabilities implements PlatformReflectionCapabilities {\n  private _reflect: any;\n\n  constructor(reflect?: any) {\n    this._reflect = reflect || global['Reflect'];\n  }\n\n  factory<T>(t: Type<T>): (args: any[]) => T {\n    return (...args: any[]) => new t(...args);\n  }\n\n  /** @internal */\n  _zipTypesAndAnnotations(paramTypes: any[], paramAnnotations: any[]): any[][] {\n    let result: any[][];\n\n    if (typeof paramTypes === 'undefined') {\n      result = newArray(paramAnnotations.length);\n    } else {\n      result = newArray(paramTypes.length);\n    }\n\n    for (let i = 0; i < result.length; i++) {\n      // TS outputs Object for parameters without types, while Traceur omits\n      // the annotations. For now we preserve the Traceur behavior to aid\n      // migration, but this can be revisited.\n      if (typeof paramTypes === 'undefined') {\n        result[i] = [];\n      } else if (paramTypes[i] && paramTypes[i] != Object) {\n        result[i] = [paramTypes[i]];\n      } else {\n        result[i] = [];\n      }\n      if (paramAnnotations && paramAnnotations[i] != null) {\n        result[i] = result[i].concat(paramAnnotations[i]);\n      }\n    }\n    return result;\n  }\n\n  private _ownParameters(type: Type<any>, parentCtor: any): any[][]|null {\n    const typeStr = type.toString();\n    // If we have no decorators, we only have function.length as metadata.\n    // In that case, to detect whether a child class declared an own constructor or not,\n    // we need to look inside of that constructor to check whether it is\n    // just calling the parent.\n    // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n    // that sets 'design:paramtypes' to []\n    // if a class inherits from another class but has no ctor declared itself.\n    if (isDelegateCtor(typeStr)) {\n      return null;\n    }\n\n    // Prefer the direct API.\n    if ((<any>type).parameters && (<any>type).parameters !== parentCtor.parameters) {\n      return (<any>type).parameters;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    const tsickleCtorParams = (<any>type).ctorParameters;\n    if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n      // Newer tsickle uses a function closure\n      // Retain the non-function case for compatibility with older tsickle\n      const ctorParameters =\n          typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n      const paramTypes = ctorParameters.map((ctorParam: any) => ctorParam && ctorParam.type);\n      const paramAnnotations = ctorParameters.map(\n          (ctorParam: any) =>\n              ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators));\n      return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n    }\n\n    // API for metadata created by invoking the decorators.\n    const paramAnnotations = type.hasOwnProperty(PARAMETERS) && (type as any)[PARAMETERS];\n    const paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n        this._reflect.getOwnMetadata('design:paramtypes', type);\n    if (paramTypes || paramAnnotations) {\n      return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n    }\n\n    // If a class has no decorators, at least create metadata\n    // based on function.length.\n    // Note: We know that this is a real constructor as we checked\n    // the content of the constructor above.\n    return newArray<any[]>(type.length);\n  }\n\n  parameters(type: Type<any>): any[][] {\n    // Note: only report metadata if we have at least one class decorator\n    // to stay in sync with the static reflector.\n    if (!isType(type)) {\n      return [];\n    }\n    const parentCtor = getParentCtor(type);\n    let parameters = this._ownParameters(type, parentCtor);\n    if (!parameters && parentCtor !== Object) {\n      parameters = this.parameters(parentCtor);\n    }\n    return parameters || [];\n  }\n\n  private _ownAnnotations(typeOrFunc: Type<any>, parentCtor: any): any[]|null {\n    // Prefer the direct API.\n    if ((<any>typeOrFunc).annotations && (<any>typeOrFunc).annotations !== parentCtor.annotations) {\n      let annotations = (<any>typeOrFunc).annotations;\n      if (typeof annotations === 'function' && annotations.annotations) {\n        annotations = annotations.annotations;\n      }\n      return annotations;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if ((<any>typeOrFunc).decorators && (<any>typeOrFunc).decorators !== parentCtor.decorators) {\n      return convertTsickleDecoratorIntoMetadata((<any>typeOrFunc).decorators);\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n      return (typeOrFunc as any)[ANNOTATIONS];\n    }\n    return null;\n  }\n\n  annotations(typeOrFunc: Type<any>): any[] {\n    if (!isType(typeOrFunc)) {\n      return [];\n    }\n    const parentCtor = getParentCtor(typeOrFunc);\n    const ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n    const parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n    return parentAnnotations.concat(ownAnnotations);\n  }\n\n  private _ownPropMetadata(typeOrFunc: any, parentCtor: any): {[key: string]: any[]}|null {\n    // Prefer the direct API.\n    if ((<any>typeOrFunc).propMetadata &&\n        (<any>typeOrFunc).propMetadata !== parentCtor.propMetadata) {\n      let propMetadata = (<any>typeOrFunc).propMetadata;\n      if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n        propMetadata = propMetadata.propMetadata;\n      }\n      return propMetadata;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if ((<any>typeOrFunc).propDecorators &&\n        (<any>typeOrFunc).propDecorators !== parentCtor.propDecorators) {\n      const propDecorators = (<any>typeOrFunc).propDecorators;\n      const propMetadata = <{[key: string]: any[]}>{};\n      Object.keys(propDecorators).forEach(prop => {\n        propMetadata[prop] = convertTsickleDecoratorIntoMetadata(propDecorators[prop]);\n      });\n      return propMetadata;\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n      return (typeOrFunc as any)[PROP_METADATA];\n    }\n    return null;\n  }\n\n  propMetadata(typeOrFunc: any): {[key: string]: any[]} {\n    if (!isType(typeOrFunc)) {\n      return {};\n    }\n    const parentCtor = getParentCtor(typeOrFunc);\n    const propMetadata: {[key: string]: any[]} = {};\n    if (parentCtor !== Object) {\n      const parentPropMetadata = this.propMetadata(parentCtor);\n      Object.keys(parentPropMetadata).forEach((propName) => {\n        propMetadata[propName] = parentPropMetadata[propName];\n      });\n    }\n    const ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n    if (ownPropMetadata) {\n      Object.keys(ownPropMetadata).forEach((propName) => {\n        const decorators: any[] = [];\n        if (propMetadata.hasOwnProperty(propName)) {\n          decorators.push(...propMetadata[propName]);\n        }\n        decorators.push(...ownPropMetadata[propName]);\n        propMetadata[propName] = decorators;\n      });\n    }\n    return propMetadata;\n  }\n\n  ownPropMetadata(typeOrFunc: any): {[key: string]: any[]} {\n    if (!isType(typeOrFunc)) {\n      return {};\n    }\n    return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n  }\n\n  hasLifecycleHook(type: any, lcProperty: string): boolean {\n    return type instanceof Type && lcProperty in type.prototype;\n  }\n}\n\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations: any[]): any[] {\n  if (!decoratorInvocations) {\n    return [];\n  }\n  return decoratorInvocations.map(decoratorInvocation => {\n    const decoratorType = decoratorInvocation.type;\n    const annotationCls = decoratorType.annotationCls;\n    const annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n    return new annotationCls(...annotationArgs);\n  });\n}\n\nfunction getParentCtor(ctor: Function): Type<any> {\n  const parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n  const parentCtor = parentProto ? parentProto.constructor : null;\n  // Note: We always use `Object` as the null value\n  // to simplify checking later on.\n  return parentCtor || Object;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport '../util/ng_dev_mode';\n\nimport {RuntimeError, RuntimeErrorCode} from '../errors';\nimport {Type} from '../interface/type';\nimport {stringify} from '../util/stringify';\n\nimport {resolveForwardRef} from './forward_ref';\nimport {getInjectImplementation, injectRootLimpMode} from './inject_switch';\nimport {Injector} from './injector';\nimport {DecoratorFlags, InjectFlags, InternalInjectFlags} from './interface/injector';\nimport {ProviderToken} from './provider_token';\n\n\nconst _THROW_IF_NOT_FOUND = {};\nexport const THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n\n/*\n * Name of a property (that we patch onto DI decorator), which is used as an annotation of which\n * InjectFlag this decorator represents. This allows to avoid direct references to the DI decorators\n * in the code, thus making them tree-shakable.\n */\nconst DI_DECORATOR_FLAG = '__NG_DI_FLAG__';\n\nexport const NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nconst NG_TOKEN_PATH = 'ngTokenPath';\nconst NEW_LINE = /\\n/gm;\nconst NO_NEW_LINE = 'ɵ';\nexport const SOURCE = '__source';\n\n/**\n * Current injector value used by `inject`.\n * - `undefined`: it is an error to call `inject`\n * - `null`: `inject` can be called but there is no injector (limp-mode).\n * - Injector instance: Use the injector for resolution.\n */\nlet _currentInjector: Injector|undefined|null = undefined;\n\nexport function setCurrentInjector(injector: Injector|null|undefined): Injector|undefined|null {\n  const former = _currentInjector;\n  _currentInjector = injector;\n  return former;\n}\n\nexport function injectInjectorOnly<T>(token: ProviderToken<T>): T;\nexport function injectInjectorOnly<T>(token: ProviderToken<T>, flags?: InjectFlags): T|null;\nexport function injectInjectorOnly<T>(token: ProviderToken<T>, flags = InjectFlags.Default): T|\n    null {\n  if (_currentInjector === undefined) {\n    throw new RuntimeError(\n        RuntimeErrorCode.MISSING_INJECTION_CONTEXT,\n        ngDevMode &&\n            `inject() must be called from an injection context (a constructor, a factory function or a field initializer)`);\n  } else if (_currentInjector === null) {\n    return injectRootLimpMode(token, undefined, flags);\n  } else {\n    return _currentInjector.get(token, flags & InjectFlags.Optional ? null : undefined, flags);\n  }\n}\n\n/**\n * Generated instruction: injects a token from the currently active injector.\n *\n * (Additional documentation moved to `inject`, as it is the public API, and an alias for this\n * instruction)\n *\n * @see inject\n * @codeGenApi\n * @publicApi This instruction has been emitted by ViewEngine for some time and is deployed to npm.\n */\nexport function ɵɵinject<T>(token: ProviderToken<T>): T;\nexport function ɵɵinject<T>(token: ProviderToken<T>, flags?: InjectFlags): T|null;\nexport function ɵɵinject<T>(token: ProviderToken<T>, flags = InjectFlags.Default): T|null {\n  return (getInjectImplementation() || injectInjectorOnly)(resolveForwardRef(token), flags);\n}\n\n/**\n * Throws an error indicating that a factory function could not be generated by the compiler for a\n * particular class.\n *\n * The name of the class is not mentioned here, but will be in the generated factory function name\n * and thus in the stack trace.\n *\n * @codeGenApi\n */\nexport function ɵɵinvalidFactoryDep(index: number): never {\n  throw new RuntimeError(\n      RuntimeErrorCode.INVALID_FACTORY_DEPENDENCY,\n      ngDevMode &&\n          `This constructor is not compatible with Angular Dependency Injection because its dependency at index ${\n              index} of the parameter list is invalid.\nThis can happen if the dependency type is a primitive like a string or if an ancestor of this class is missing an Angular decorator.\n\nPlease check that 1) the type for the parameter at index ${\n              index} is correct and 2) the correct Angular decorators are defined for this class and its ancestors.`);\n}\n\n/**\n * Type of the options argument to `inject`.\n *\n * @publicApi\n */\nexport interface InjectOptions {\n  /**\n   * Use optional injection, and return `null` if the requested token is not found.\n   */\n  optional?: boolean;\n\n  /**\n   * Start injection at the parent of the current injector.\n   */\n  skipSelf?: boolean;\n\n  /**\n   * Only query the current injector for the token, and don't fall back to the parent injector if\n   * it's not found.\n   */\n  self?: boolean;\n\n  /**\n   * Stop injection at the host component's injector. Only relevant when injecting from an element\n   * injector, and a no-op for environment injectors.\n   */\n  host?: boolean;\n}\n\n/**\n * @param token A token that represents a dependency that should be injected.\n * @returns the injected value if operation is successful, `null` otherwise.\n * @throws if called outside of a supported context.\n *\n * @publicApi\n */\nexport function inject<T>(token: ProviderToken<T>): T;\n/**\n * @param token A token that represents a dependency that should be injected.\n * @param flags Control how injection is executed. The flags correspond to injection strategies that\n *     can be specified with parameter decorators `@Host`, `@Self`, `@SkipSelf`, and `@Optional`.\n * @returns the injected value if operation is successful, `null` otherwise.\n * @throws if called outside of a supported context.\n *\n * @publicApi\n * @deprecated prefer an options object instead of `InjectFlags`\n */\nexport function inject<T>(token: ProviderToken<T>, flags?: InjectFlags): T|null;\n/**\n * @param token A token that represents a dependency that should be injected.\n * @param options Control how injection is executed. Options correspond to injection strategies\n *     that can be specified with parameter decorators `@Host`, `@Self`, `@SkipSelf`, and\n *     `@Optional`.\n * @returns the injected value if operation is successful.\n * @throws if called outside of a supported context, or if the token is not found.\n *\n * @publicApi\n */\nexport function inject<T>(token: ProviderToken<T>, options: InjectOptions&{optional?: false}): T;\n/**\n * @param token A token that represents a dependency that should be injected.\n * @param options Control how injection is executed. Options correspond to injection strategies\n *     that can be specified with parameter decorators `@Host`, `@Self`, `@SkipSelf`, and\n *     `@Optional`.\n * @returns the injected value if operation is successful,  `null` if the token is not\n *     found and optional injection has been requested.\n * @throws if called outside of a supported context, or if the token is not found and optional\n *     injection was not requested.\n *\n * @publicApi\n */\nexport function inject<T>(token: ProviderToken<T>, options: InjectOptions): T|null;\n/**\n * Injects a token from the currently active injector.\n * `inject` is only supported during instantiation of a dependency by the DI system. It can be used\n * during:\n * - Construction (via the `constructor`) of a class being instantiated by the DI system, such\n * as an `@Injectable` or `@Component`.\n * - In the initializer for fields of such classes.\n * - In the factory function specified for `useFactory` of a `Provider` or an `@Injectable`.\n * - In the `factory` function specified for an `InjectionToken`.\n *\n * @param token A token that represents a dependency that should be injected.\n * @param flags Optional flags that control how injection is executed.\n * The flags correspond to injection strategies that can be specified with\n * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n * @returns the injected value if operation is successful, `null` otherwise.\n * @throws if called outside of a supported context.\n *\n * @usageNotes\n * In practice the `inject()` calls are allowed in a constructor, a constructor parameter and a\n * field initializer:\n *\n * ```typescript\n * @Injectable({providedIn: 'root'})\n * export class Car {\n *   radio: Radio|undefined;\n *   // OK: field initializer\n *   spareTyre = inject(Tyre);\n *\n *   constructor() {\n *     // OK: constructor body\n *     this.radio = inject(Radio);\n *   }\n * }\n * ```\n *\n * It is also legal to call `inject` from a provider's factory:\n *\n * ```typescript\n * providers: [\n *   {provide: Car, useFactory: () => {\n *     // OK: a class factory\n *     const engine = inject(Engine);\n *     return new Car(engine);\n *   }}\n * ]\n * ```\n *\n * Calls to the `inject()` function outside of the class creation context will result in error. Most\n * notably, calls to `inject()` are disallowed after a class instance was created, in methods\n * (including lifecycle hooks):\n *\n * ```typescript\n * @Component({ ... })\n * export class CarComponent {\n *   ngOnInit() {\n *     // ERROR: too late, the component instance was already created\n *     const engine = inject(Engine);\n *     engine.start();\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nexport function inject<T>(\n    token: ProviderToken<T>, flags: InjectFlags|InjectOptions = InjectFlags.Default): T|null {\n  if (typeof flags !== 'number') {\n    // While TypeScript doesn't accept it without a cast, bitwise OR with false-y values in\n    // JavaScript is a no-op. We can use that for a very codesize-efficient conversion from\n    // `InjectOptions` to `InjectFlags`.\n    flags = (InternalInjectFlags.Default |  // comment to force a line break in the formatter\n             ((flags.optional && InternalInjectFlags.Optional) as number) |\n             ((flags.host && InternalInjectFlags.Host) as number) |\n             ((flags.self && InternalInjectFlags.Self) as number) |\n             ((flags.skipSelf && InternalInjectFlags.SkipSelf) as number)) as InjectFlags;\n  }\n  return ɵɵinject(token, flags);\n}\n\nexport function injectArgs(types: (ProviderToken<any>|any[])[]): any[] {\n  const args: any[] = [];\n  for (let i = 0; i < types.length; i++) {\n    const arg = resolveForwardRef(types[i]);\n    if (Array.isArray(arg)) {\n      if (arg.length === 0) {\n        throw new RuntimeError(\n            RuntimeErrorCode.INVALID_DIFFER_INPUT,\n            ngDevMode && 'Arguments array must have arguments.');\n      }\n      let type: Type<any>|undefined = undefined;\n      let flags: InjectFlags = InjectFlags.Default;\n\n      for (let j = 0; j < arg.length; j++) {\n        const meta = arg[j];\n        const flag = getInjectFlag(meta);\n        if (typeof flag === 'number') {\n          // Special case when we handle @Inject decorator.\n          if (flag === DecoratorFlags.Inject) {\n            type = meta.token;\n          } else {\n            flags |= flag;\n          }\n        } else {\n          type = meta;\n        }\n      }\n\n      args.push(ɵɵinject(type!, flags));\n    } else {\n      args.push(ɵɵinject(arg));\n    }\n  }\n  return args;\n}\n\n/**\n * Attaches a given InjectFlag to a given decorator using monkey-patching.\n * Since DI decorators can be used in providers `deps` array (when provider is configured using\n * `useFactory`) without initialization (e.g. `Host`) and as an instance (e.g. `new Host()`), we\n * attach the flag to make it available both as a static property and as a field on decorator\n * instance.\n *\n * @param decorator Provided DI decorator.\n * @param flag InjectFlag that should be applied.\n */\nexport function attachInjectFlag(decorator: any, flag: InternalInjectFlags|DecoratorFlags): any {\n  decorator[DI_DECORATOR_FLAG] = flag;\n  decorator.prototype[DI_DECORATOR_FLAG] = flag;\n  return decorator;\n}\n\n/**\n * Reads monkey-patched property that contains InjectFlag attached to a decorator.\n *\n * @param token Token that may contain monkey-patched DI flags property.\n */\nexport function getInjectFlag(token: any): number|undefined {\n  return token[DI_DECORATOR_FLAG];\n}\n\nexport function catchInjectorError(\n    e: any, token: any, injectorErrorName: string, source: string|null): never {\n  const tokenPath: any[] = e[NG_TEMP_TOKEN_PATH];\n  if (token[SOURCE]) {\n    tokenPath.unshift(token[SOURCE]);\n  }\n  e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n  e[NG_TOKEN_PATH] = tokenPath;\n  e[NG_TEMP_TOKEN_PATH] = null;\n  throw e;\n}\n\nexport function formatError(\n    text: string, obj: any, injectorErrorName: string, source: string|null = null): string {\n  text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.slice(2) : text;\n  let context = stringify(obj);\n  if (Array.isArray(obj)) {\n    context = obj.map(stringify).join(' -> ');\n  } else if (typeof obj === 'object') {\n    let parts = <string[]>[];\n    for (let key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        let value = obj[key];\n        parts.push(\n            key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n      }\n    }\n    context = `{${parts.join(', ')}}`;\n  }\n  return `${injectorErrorName}${source ? '(' + source + ')' : ''}[${context}]: ${\n      text.replace(NEW_LINE, '\\n  ')}`;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {makeParamDecorator} from '../util/decorators';\n\nimport {attachInjectFlag} from './injector_compatibility';\nimport {DecoratorFlags, InternalInjectFlags} from './interface/injector';\n\n\n/**\n * Type of the Inject decorator / constructor function.\n *\n * @publicApi\n */\nexport interface InjectDecorator {\n  /**\n   * Parameter decorator on a dependency parameter of a class constructor\n   * that specifies a custom provider of the dependency.\n   *\n   * @usageNotes\n   * The following example shows a class constructor that specifies a\n   * custom provider of a dependency using the parameter decorator.\n   *\n   * When `@Inject()` is not present, the injector uses the type annotation of the\n   * parameter as the provider.\n   *\n   * <code-example path=\"core/di/ts/metadata_spec.ts\" region=\"InjectWithoutDecorator\">\n   * </code-example>\n   *\n   * @see [\"Dependency Injection Guide\"](guide/dependency-injection)\n   *\n   */\n  (token: any): any;\n  new(token: any): Inject;\n}\n\n/**\n * Type of the Inject metadata.\n *\n * @publicApi\n */\nexport interface Inject {\n  /**\n   * A [DI token](guide/glossary#di-token) that maps to the dependency to be injected.\n   */\n  token: any;\n}\n\n/**\n * Inject decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Inject: InjectDecorator = attachInjectFlag(\n    // Disable tslint because `DecoratorFlags` is a const enum which gets inlined.\n    // tslint:disable-next-line: no-toplevel-property-access\n    makeParamDecorator('Inject', (token: any) => ({token})), DecoratorFlags.Inject);\n\n/**\n * Type of the Optional decorator / constructor function.\n *\n * @publicApi\n */\nexport interface OptionalDecorator {\n  /**\n   * Parameter decorator to be used on constructor parameters,\n   * which marks the parameter as being an optional dependency.\n   * The DI framework provides `null` if the dependency is not found.\n   *\n   * Can be used together with other parameter decorators\n   * that modify how dependency injection operates.\n   *\n   * @usageNotes\n   *\n   * The following code allows the possibility of a `null` result:\n   *\n   * <code-example path=\"core/di/ts/metadata_spec.ts\" region=\"Optional\">\n   * </code-example>\n   *\n   * @see [\"Dependency Injection Guide\"](guide/dependency-injection).\n   */\n  (): any;\n  new(): Optional;\n}\n\n/**\n * Type of the Optional metadata.\n *\n * @publicApi\n */\nexport interface Optional {}\n\n/**\n * Optional decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Optional: OptionalDecorator =\n    // Disable tslint because `InternalInjectFlags` is a const enum which gets inlined.\n    // tslint:disable-next-line: no-toplevel-property-access\n    attachInjectFlag(makeParamDecorator('Optional'), InternalInjectFlags.Optional);\n\n/**\n * Type of the Self decorator / constructor function.\n *\n * @publicApi\n */\nexport interface SelfDecorator {\n  /**\n   * Parameter decorator to be used on constructor parameters,\n   * which tells the DI framework to start dependency resolution from the local injector.\n   *\n   * Resolution works upward through the injector hierarchy, so the children\n   * of this class must configure their own providers or be prepared for a `null` result.\n   *\n   * @usageNotes\n   *\n   * In the following example, the dependency can be resolved\n   * by the local injector when instantiating the class itself, but not\n   * when instantiating a child.\n   *\n   * <code-example path=\"core/di/ts/metadata_spec.ts\" region=\"Self\">\n   * </code-example>\n   *\n   * @see `SkipSelf`\n   * @see `Optional`\n   *\n   */\n  (): any;\n  new(): Self;\n}\n\n/**\n * Type of the Self metadata.\n *\n * @publicApi\n */\nexport interface Self {}\n\n/**\n * Self decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Self: SelfDecorator =\n    // Disable tslint because `InternalInjectFlags` is a const enum which gets inlined.\n    // tslint:disable-next-line: no-toplevel-property-access\n    attachInjectFlag(makeParamDecorator('Self'), InternalInjectFlags.Self);\n\n\n/**\n * Type of the `SkipSelf` decorator / constructor function.\n *\n * @publicApi\n */\nexport interface SkipSelfDecorator {\n  /**\n   * Parameter decorator to be used on constructor parameters,\n   * which tells the DI framework to start dependency resolution from the parent injector.\n   * Resolution works upward through the injector hierarchy, so the local injector\n   * is not checked for a provider.\n   *\n   * @usageNotes\n   *\n   * In the following example, the dependency can be resolved when\n   * instantiating a child, but not when instantiating the class itself.\n   *\n   * <code-example path=\"core/di/ts/metadata_spec.ts\" region=\"SkipSelf\">\n   * </code-example>\n   *\n   * @see [Dependency Injection guide](guide/dependency-injection-in-action#skip).\n   * @see `Self`\n   * @see `Optional`\n   *\n   */\n  (): any;\n  new(): SkipSelf;\n}\n\n/**\n * Type of the `SkipSelf` metadata.\n *\n * @publicApi\n */\nexport interface SkipSelf {}\n\n/**\n * `SkipSelf` decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const SkipSelf: SkipSelfDecorator =\n    // Disable tslint because `InternalInjectFlags` is a const enum which gets inlined.\n    // tslint:disable-next-line: no-toplevel-property-access\n    attachInjectFlag(makeParamDecorator('SkipSelf'), InternalInjectFlags.SkipSelf);\n\n/**\n * Type of the `Host` decorator / constructor function.\n *\n * @publicApi\n */\nexport interface HostDecorator {\n  /**\n   * Parameter decorator on a view-provider parameter of a class constructor\n   * that tells the DI framework to resolve the view by checking injectors of child\n   * elements, and stop when reaching the host element of the current component.\n   *\n   * @usageNotes\n   *\n   * The following shows use with the `@Optional` decorator, and allows for a `null` result.\n   *\n   * <code-example path=\"core/di/ts/metadata_spec.ts\" region=\"Host\">\n   * </code-example>\n   *\n   * For an extended example, see [\"Dependency Injection\n   * Guide\"](guide/dependency-injection-in-action#optional).\n   */\n  (): any;\n  new(): Host;\n}\n\n/**\n * Type of the Host metadata.\n *\n * @publicApi\n */\nexport interface Host {}\n\n/**\n * Host decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Host: HostDecorator =\n    // Disable tslint because `InternalInjectFlags` is a const enum which gets inlined.\n    // tslint:disable-next-line: no-toplevel-property-access\n    attachInjectFlag(makeParamDecorator('Host'), InternalInjectFlags.Host);\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {R3DependencyMetadataFacade} from '../../compiler/compiler_facade';\nimport {RuntimeError, RuntimeErrorCode} from '../../errors';\nimport {Type} from '../../interface/type';\nimport {ReflectionCapabilities} from '../../reflection/reflection_capabilities';\nimport {Host, Inject, Optional, Self, SkipSelf} from '../metadata';\nimport {Attribute} from '../metadata_attr';\n\nlet _reflect: ReflectionCapabilities|null = null;\n\nexport function getReflect(): ReflectionCapabilities {\n  return (_reflect = _reflect || new ReflectionCapabilities());\n}\n\nexport function reflectDependencies(type: Type<any>): R3DependencyMetadataFacade[] {\n  return convertDependencies(getReflect().parameters(type));\n}\n\nexport function convertDependencies(deps: any[]): R3DependencyMetadataFacade[] {\n  return deps.map(dep => reflectDependency(dep));\n}\n\nfunction reflectDependency(dep: any|any[]): R3DependencyMetadataFacade {\n  const meta: R3DependencyMetadataFacade = {\n    token: null,\n    attribute: null,\n    host: false,\n    optional: false,\n    self: false,\n    skipSelf: false,\n  };\n\n  if (Array.isArray(dep) && dep.length > 0) {\n    for (let j = 0; j < dep.length; j++) {\n      const param = dep[j];\n      if (param === undefined) {\n        // param may be undefined if type of dep is not set by ngtsc\n        continue;\n      }\n\n      const proto = Object.getPrototypeOf(param);\n\n      if (param instanceof Optional || proto.ngMetadataName === 'Optional') {\n        meta.optional = true;\n      } else if (param instanceof SkipSelf || proto.ngMetadataName === 'SkipSelf') {\n        meta.skipSelf = true;\n      } else if (param instanceof Self || proto.ngMetadataName === 'Self') {\n        meta.self = true;\n      } else if (param instanceof Host || proto.ngMetadataName === 'Host') {\n        meta.host = true;\n      } else if (param instanceof Inject) {\n        meta.token = param.token;\n      } else if (param instanceof Attribute) {\n        if (param.attributeName === undefined) {\n          throw new RuntimeError(\n              RuntimeErrorCode.INVALID_INJECTION_TOKEN,\n              ngDevMode && `Attribute name must be defined.`);\n        }\n        meta.attribute = param.attributeName;\n      } else {\n        meta.token = param;\n      }\n    }\n  } else if (dep === undefined || (Array.isArray(dep) && dep.length === 0)) {\n    meta.token = null;\n  } else {\n    meta.token = dep;\n  }\n  return meta;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../interface/type';\nimport {Component} from './directives';\n\n\n/**\n * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n *\n * Example:\n * ```\n * @Component({\n *   selector: 'my-comp',\n *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n * })\n * class MyComponent{\n * }\n *\n * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n *\n * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n *\n * // Use browser's `fetch()` function as the default resource resolution strategy.\n * resolveComponentResources(fetch).then(() => {\n *   // After resolution all URLs have been converted into `template` strings.\n *   renderComponent(MyComponent);\n * });\n *\n * ```\n *\n * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n * to call this method outside JIT mode.\n *\n * @param resourceResolver a function which is responsible for returning a `Promise` to the\n * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n */\nexport function resolveComponentResources(\n    resourceResolver: (url: string) => (Promise<string|{text(): Promise<string>}>)): Promise<void> {\n  // Store all promises which are fetching the resources.\n  const componentResolved: Promise<void>[] = [];\n\n  // Cache so that we don't fetch the same resource more than once.\n  const urlMap = new Map<string, Promise<string>>();\n  function cachedResourceResolve(url: string): Promise<string> {\n    let promise = urlMap.get(url);\n    if (!promise) {\n      const resp = resourceResolver(url);\n      urlMap.set(url, promise = resp.then(unwrapResponse));\n    }\n    return promise;\n  }\n\n  componentResourceResolutionQueue.forEach((component: Component, type: Type<any>) => {\n    const promises: Promise<void>[] = [];\n    if (component.templateUrl) {\n      promises.push(cachedResourceResolve(component.templateUrl).then((template) => {\n        component.template = template;\n      }));\n    }\n    const styleUrls = component.styleUrls;\n    const styles = component.styles || (component.styles = []);\n    const styleOffset = component.styles.length;\n    styleUrls && styleUrls.forEach((styleUrl, index) => {\n      styles.push('');  // pre-allocate array.\n      promises.push(cachedResourceResolve(styleUrl).then((style) => {\n        styles[styleOffset + index] = style;\n        styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n        if (styleUrls.length == 0) {\n          component.styleUrls = undefined;\n        }\n      }));\n    });\n    const fullyResolved = Promise.all(promises).then(() => componentDefResolved(type));\n    componentResolved.push(fullyResolved);\n  });\n  clearResolutionOfComponentResourcesQueue();\n  return Promise.all(componentResolved).then(() => undefined);\n}\n\nlet componentResourceResolutionQueue = new Map<Type<any>, Component>();\n\n// Track when existing ɵcmp for a Type is waiting on resources.\nconst componentDefPendingResolution = new Set<Type<any>>();\n\nexport function maybeQueueResolutionOfComponentResources(type: Type<any>, metadata: Component) {\n  if (componentNeedsResolution(metadata)) {\n    componentResourceResolutionQueue.set(type, metadata);\n    componentDefPendingResolution.add(type);\n  }\n}\n\nexport function isComponentDefPendingResolution(type: Type<any>): boolean {\n  return componentDefPendingResolution.has(type);\n}\n\nexport function componentNeedsResolution(component: Component): boolean {\n  return !!(\n      (component.templateUrl && !component.hasOwnProperty('template')) ||\n      component.styleUrls && component.styleUrls.length);\n}\nexport function clearResolutionOfComponentResourcesQueue(): Map<Type<any>, Component> {\n  const old = componentResourceResolutionQueue;\n  componentResourceResolutionQueue = new Map();\n  return old;\n}\n\nexport function restoreComponentResolutionQueue(queue: Map<Type<any>, Component>): void {\n  componentDefPendingResolution.clear();\n  queue.forEach((_, type) => componentDefPendingResolution.add(type));\n  componentResourceResolutionQueue = queue;\n}\n\nexport function isComponentResourceResolutionQueueEmpty() {\n  return componentResourceResolutionQueue.size === 0;\n}\n\nfunction unwrapResponse(response: string|{text(): Promise<string>}): string|Promise<string> {\n  return typeof response == 'string' ? response : response.text();\n}\n\nfunction componentDefResolved(type: Type<any>): void {\n  componentDefPendingResolution.delete(type);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Type} from '../interface/type';\nimport {NgModuleType} from '../metadata/ng_module_def';\nimport {getNgModuleDef} from '../render3/definition';\nimport {stringify} from '../util/stringify';\n\n/**\n * Map of module-id to the corresponding NgModule.\n */\nconst modules = new Map<string, NgModuleType>();\n\n/**\n * Whether to check for duplicate NgModule registrations.\n *\n * This can be disabled for testing.\n */\nlet checkForDuplicateNgModules = true;\n\nfunction assertSameOrNotExisting(id: string, type: Type<any>|null, incoming: Type<any>): void {\n  if (type && type !== incoming && checkForDuplicateNgModules) {\n    throw new Error(\n        `Duplicate module registered for ${id} - ${stringify(type)} vs ${stringify(type.name)}`);\n  }\n}\n\n/**\n * Adds the given NgModule type to Angular's NgModule registry.\n *\n * This is generated as a side-effect of NgModule compilation. Note that the `id` is passed in\n * explicitly and not read from the NgModule definition. This is for two reasons: it avoids a\n * megamorphic read, and in JIT there's a chicken-and-egg problem where the NgModule may not be\n * fully resolved when it's registered.\n *\n * @codeGenApi\n */\nexport function registerNgModuleType(ngModuleType: NgModuleType, id: string): void {\n  const existing = modules.get(id) || null;\n  assertSameOrNotExisting(id, existing, ngModuleType);\n  modules.set(id, ngModuleType);\n}\n\nexport function clearModulesForTest(): void {\n  modules.clear();\n}\n\nexport function getRegisteredNgModuleType(id: string): NgModuleType|undefined {\n  return modules.get(id);\n}\n\n/**\n * Control whether the NgModule registration system enforces that each NgModule type registered has\n * a unique id.\n *\n * This is useful for testing as the NgModule registry cannot be properly reset between tests with\n * Angular's current API.\n */\nexport function setAllowDuplicateNgModuleIdsForTest(allowDuplicates: boolean): void {\n  checkForDuplicateNgModules = !allowDuplicates;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Most of the use of `document` in Angular is from within the DI system so it is possible to simply\n * inject the `DOCUMENT` token and are done.\n *\n * Ivy is special because it does not rely upon the DI and must get hold of the document some other\n * way.\n *\n * The solution is to define `getDocument()` and `setDocument()` top-level functions for ivy.\n * Wherever ivy needs the global document, it calls `getDocument()` instead.\n *\n * When running ivy outside of a browser environment, it is necessary to call `setDocument()` to\n * tell ivy what the global `document` is.\n *\n * Angular does this for us in each of the standard platforms (`Browser`, `Server`, and `WebWorker`)\n * by calling `setDocument()` when providing the `DOCUMENT` token.\n */\nlet DOCUMENT: Document|undefined = undefined;\n\n/**\n * Tell ivy what the `document` is for this platform.\n *\n * It is only necessary to call this if the current platform is not a browser.\n *\n * @param document The object representing the global `document` in this environment.\n */\nexport function setDocument(document: Document|undefined): void {\n  DOCUMENT = document;\n}\n\n/**\n * Access the object that represents the `document` for this platform.\n *\n * Ivy calls this whenever it needs to access the `document` object.\n * For example to create the renderer or to do sanitization.\n */\nexport function getDocument(): Document {\n  if (DOCUMENT !== undefined) {\n    return DOCUMENT;\n  } else if (typeof document !== 'undefined') {\n    return document;\n  }\n  // No \"document\" can be found. This should only happen if we are running ivy outside Angular and\n  // the current platform is not a browser. Since this is not a supported scenario at the moment\n  // this should not happen in Angular apps.\n  // Once we support running ivy outside of Angular we will need to publish `setDocument()` as a\n  // public API. Meanwhile we just return `undefined` and let the application fail.\n  return undefined!;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview\n * A module to facilitate use of a Trusted Types policy internally within\n * Angular. It lazily constructs the Trusted Types policy, providing helper\n * utilities for promoting strings to Trusted Types. When Trusted Types are not\n * available, strings are used as a fallback.\n * @security All use of this module is security-sensitive and should go through\n * security review.\n */\n\nimport {global} from '../global';\nimport {TrustedHTML, TrustedScript, TrustedScriptURL, TrustedTypePolicy, TrustedTypePolicyFactory} from './trusted_type_defs';\n\n/**\n * The Trusted Types policy, or null if Trusted Types are not\n * enabled/supported, or undefined if the policy has not been created yet.\n */\nlet policy: TrustedTypePolicy|null|undefined;\n\n/**\n * Returns the Trusted Types policy, or null if Trusted Types are not\n * enabled/supported. The first call to this function will create the policy.\n */\nfunction getPolicy(): TrustedTypePolicy|null {\n  if (policy === undefined) {\n    policy = null;\n    if (global.trustedTypes) {\n      try {\n        policy = (global.trustedTypes as TrustedTypePolicyFactory).createPolicy('angular', {\n          createHTML: (s: string) => s,\n          createScript: (s: string) => s,\n          createScriptURL: (s: string) => s,\n        });\n      } catch {\n        // trustedTypes.createPolicy throws if called with a name that is\n        // already registered, even in report-only mode. Until the API changes,\n        // catch the error not to break the applications functionally. In such\n        // cases, the code will fall back to using strings.\n      }\n    }\n  }\n  return policy;\n}\n\n/**\n * Unsafely promote a string to a TrustedHTML, falling back to strings when\n * Trusted Types are not available.\n * @security This is a security-sensitive function; any use of this function\n * must go through security review. In particular, it must be assured that the\n * provided string will never cause an XSS vulnerability if used in a context\n * that will be interpreted as HTML by a browser, e.g. when assigning to\n * element.innerHTML.\n */\nexport function trustedHTMLFromString(html: string): TrustedHTML|string {\n  return getPolicy()?.createHTML(html) || html;\n}\n\n/**\n * Unsafely promote a string to a TrustedScript, falling back to strings when\n * Trusted Types are not available.\n * @security In particular, it must be assured that the provided string will\n * never cause an XSS vulnerability if used in a context that will be\n * interpreted and executed as a script by a browser, e.g. when calling eval.\n */\nexport function trustedScriptFromString(script: string): TrustedScript|string {\n  return getPolicy()?.createScript(script) || script;\n}\n\n/**\n * Unsafely promote a string to a TrustedScriptURL, falling back to strings\n * when Trusted Types are not available.\n * @security This is a security-sensitive function; any use of this function\n * must go through security review. In particular, it must be assured that the\n * provided string will never cause an XSS vulnerability if used in a context\n * that will cause a browser to load and execute a resource, e.g. when\n * assigning to script.src.\n */\nexport function trustedScriptURLFromString(url: string): TrustedScriptURL|string {\n  return getPolicy()?.createScriptURL(url) || url;\n}\n\n/**\n * Unsafely call the Function constructor with the given string arguments. It\n * is only available in development mode, and should be stripped out of\n * production code.\n * @security This is a security-sensitive function; any use of this function\n * must go through security review. In particular, it must be assured that it\n * is only called from development code, as use in production code can lead to\n * XSS vulnerabilities.\n */\nexport function newTrustedFunctionForDev(...args: string[]): Function {\n  if (typeof ngDevMode === 'undefined') {\n    throw new Error('newTrustedFunctionForDev should never be called in production');\n  }\n  if (!global.trustedTypes) {\n    // In environments that don't support Trusted Types, fall back to the most\n    // straightforward implementation:\n    return new Function(...args);\n  }\n\n  // Chrome currently does not support passing TrustedScript to the Function\n  // constructor. The following implements the workaround proposed on the page\n  // below, where the Chromium bug is also referenced:\n  // https://github.com/w3c/webappsec-trusted-types/wiki/Trusted-Types-for-function-constructor\n  const fnArgs = args.slice(0, -1).join(',');\n  const fnBody = args[args.length - 1];\n  const body = `(function anonymous(${fnArgs}\n) { ${fnBody}\n})`;\n\n  // Using eval directly confuses the compiler and prevents this module from\n  // being stripped out of JS binaries even if not used. The global['eval']\n  // indirection fixes that.\n  const fn = global['eval'](trustedScriptFromString(body) as string) as Function;\n  if (fn.bind === undefined) {\n    // Workaround for a browser bug that only exists in Chrome 83, where passing\n    // a TrustedScript to eval just returns the TrustedScript back without\n    // evaluating it. In that case, fall back to the most straightforward\n    // implementation:\n    return new Function(...args);\n  }\n\n  // To completely mimic the behavior of calling \"new Function\", two more\n  // things need to happen:\n  // 1. Stringifying the resulting function should return its source code\n  fn.toString = () => body;\n  // 2. When calling the resulting function, `this` should refer to `global`\n  return fn.bind(global);\n\n  // When Trusted Types support in Function constructors is widely available,\n  // the implementation of this function can be simplified to:\n  // return new Function(...args.map(a => trustedScriptFromString(a)));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview\n * A module to facilitate use of a Trusted Types policy internally within\n * Angular specifically for bypassSecurityTrust* and custom sanitizers. It\n * lazily constructs the Trusted Types policy, providing helper utilities for\n * promoting strings to Trusted Types. When Trusted Types are not available,\n * strings are used as a fallback.\n * @security All use of this module is security-sensitive and should go through\n * security review.\n */\n\nimport {global} from '../global';\nimport {TrustedHTML, TrustedScript, TrustedScriptURL, TrustedTypePolicy, TrustedTypePolicyFactory} from './trusted_type_defs';\n\n/**\n * The Trusted Types policy, or null if Trusted Types are not\n * enabled/supported, or undefined if the policy has not been created yet.\n */\nlet policy: TrustedTypePolicy|null|undefined;\n\n/**\n * Returns the Trusted Types policy, or null if Trusted Types are not\n * enabled/supported. The first call to this function will create the policy.\n */\nfunction getPolicy(): TrustedTypePolicy|null {\n  if (policy === undefined) {\n    policy = null;\n    if (global.trustedTypes) {\n      try {\n        policy = (global.trustedTypes as TrustedTypePolicyFactory)\n                     .createPolicy('angular#unsafe-bypass', {\n                       createHTML: (s: string) => s,\n                       createScript: (s: string) => s,\n                       createScriptURL: (s: string) => s,\n                     });\n      } catch {\n        // trustedTypes.createPolicy throws if called with a name that is\n        // already registered, even in report-only mode. Until the API changes,\n        // catch the error not to break the applications functionally. In such\n        // cases, the code will fall back to using strings.\n      }\n    }\n  }\n  return policy;\n}\n\n/**\n * Unsafely promote a string to a TrustedHTML, falling back to strings when\n * Trusted Types are not available.\n * @security This is a security-sensitive function; any use of this function\n * must go through security review. In particular, it must be assured that it\n * is only passed strings that come directly from custom sanitizers or the\n * bypassSecurityTrust* functions.\n */\nexport function trustedHTMLFromStringBypass(html: string): TrustedHTML|string {\n  return getPolicy()?.createHTML(html) || html;\n}\n\n/**\n * Unsafely promote a string to a TrustedScript, falling back to strings when\n * Trusted Types are not available.\n * @security This is a security-sensitive function; any use of this function\n * must go through security review. In particular, it must be assured that it\n * is only passed strings that come directly from custom sanitizers or the\n * bypassSecurityTrust* functions.\n */\nexport function trustedScriptFromStringBypass(script: string): TrustedScript|string {\n  return getPolicy()?.createScript(script) || script;\n}\n\n/**\n * Unsafely promote a string to a TrustedScriptURL, falling back to strings\n * when Trusted Types are not available.\n * @security This is a security-sensitive function; any use of this function\n * must go through security review. In particular, it must be assured that it\n * is only passed strings that come directly from custom sanitizers or the\n * bypassSecurityTrust* functions.\n */\nexport function trustedScriptURLFromStringBypass(url: string): TrustedScriptURL|string {\n  return getPolicy()?.createScriptURL(url) || url;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nexport const enum BypassType {\n  Url = 'URL',\n  Html = 'HTML',\n  ResourceUrl = 'ResourceURL',\n  Script = 'Script',\n  Style = 'Style',\n}\n\n/**\n * Marker interface for a value that's safe to use in a particular context.\n *\n * @publicApi\n */\nexport interface SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as HTML.\n *\n * @publicApi\n */\nexport interface SafeHtml extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as style (CSS).\n *\n * @publicApi\n */\nexport interface SafeStyle extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as JavaScript.\n *\n * @publicApi\n */\nexport interface SafeScript extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as a URL linking to a document.\n *\n * @publicApi\n */\nexport interface SafeUrl extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as a URL to load executable code from.\n *\n * @publicApi\n */\nexport interface SafeResourceUrl extends SafeValue {}\n\n\nabstract class SafeValueImpl implements SafeValue {\n  constructor(public changingThisBreaksApplicationSecurity: string) {}\n\n  abstract getTypeName(): string;\n\n  toString() {\n    return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity}` +\n        ` (see https://g.co/ng/security#xss)`;\n  }\n}\n\nclass SafeHtmlImpl extends SafeValueImpl implements SafeHtml {\n  override getTypeName() {\n    return BypassType.Html;\n  }\n}\nclass SafeStyleImpl extends SafeValueImpl implements SafeStyle {\n  override getTypeName() {\n    return BypassType.Style;\n  }\n}\nclass SafeScriptImpl extends SafeValueImpl implements SafeScript {\n  override getTypeName() {\n    return BypassType.Script;\n  }\n}\nclass SafeUrlImpl extends SafeValueImpl implements SafeUrl {\n  override getTypeName() {\n    return BypassType.Url;\n  }\n}\nclass SafeResourceUrlImpl extends SafeValueImpl implements SafeResourceUrl {\n  override getTypeName() {\n    return BypassType.ResourceUrl;\n  }\n}\n\nexport function unwrapSafeValue(value: SafeValue): string;\nexport function unwrapSafeValue<T>(value: T): T;\nexport function unwrapSafeValue<T>(value: T|SafeValue): T {\n  return value instanceof SafeValueImpl ? value.changingThisBreaksApplicationSecurity as any as T :\n                                          value as any as T;\n}\n\n\nexport function allowSanitizationBypassAndThrow(\n    value: any, type: BypassType.Html): value is SafeHtml;\nexport function allowSanitizationBypassAndThrow(\n    value: any, type: BypassType.ResourceUrl): value is SafeResourceUrl;\nexport function allowSanitizationBypassAndThrow(\n    value: any, type: BypassType.Script): value is SafeScript;\nexport function allowSanitizationBypassAndThrow(\n    value: any, type: BypassType.Style): value is SafeStyle;\nexport function allowSanitizationBypassAndThrow(value: any, type: BypassType.Url): value is SafeUrl;\nexport function allowSanitizationBypassAndThrow(value: any, type: BypassType): boolean;\nexport function allowSanitizationBypassAndThrow(value: any, type: BypassType): boolean {\n  const actualType = getSanitizationBypassType(value);\n  if (actualType != null && actualType !== type) {\n    // Allow ResourceURLs in URL contexts, they are strictly more trusted.\n    if (actualType === BypassType.ResourceUrl && type === BypassType.Url) return true;\n    throw new Error(\n        `Required a safe ${type}, got a ${actualType} (see https://g.co/ng/security#xss)`);\n  }\n  return actualType === type;\n}\n\nexport function getSanitizationBypassType(value: any): BypassType|null {\n  return value instanceof SafeValueImpl && value.getTypeName() as BypassType || null;\n}\n\n/**\n * Mark `html` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n *\n * @param trustedHtml `html` string which needs to be implicitly trusted.\n * @returns a `html` which has been branded to be implicitly trusted.\n */\nexport function bypassSanitizationTrustHtml(trustedHtml: string): SafeHtml {\n  return new SafeHtmlImpl(trustedHtml);\n}\n/**\n * Mark `style` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link styleSanitizer} to be trusted implicitly.\n *\n * @param trustedStyle `style` string which needs to be implicitly trusted.\n * @returns a `style` hich has been branded to be implicitly trusted.\n */\nexport function bypassSanitizationTrustStyle(trustedStyle: string): SafeStyle {\n  return new SafeStyleImpl(trustedStyle);\n}\n/**\n * Mark `script` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n *\n * @param trustedScript `script` string which needs to be implicitly trusted.\n * @returns a `script` which has been branded to be implicitly trusted.\n */\nexport function bypassSanitizationTrustScript(trustedScript: string): SafeScript {\n  return new SafeScriptImpl(trustedScript);\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link urlSanitizer} to be trusted implicitly.\n *\n * @param trustedUrl `url` string which needs to be implicitly trusted.\n * @returns a `url`  which has been branded to be implicitly trusted.\n */\nexport function bypassSanitizationTrustUrl(trustedUrl: string): SafeUrl {\n  return new SafeUrlImpl(trustedUrl);\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n *\n * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` which has been branded to be implicitly trusted.\n */\nexport function bypassSanitizationTrustResourceUrl(trustedResourceUrl: string): SafeResourceUrl {\n  return new SafeResourceUrlImpl(trustedResourceUrl);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {trustedHTMLFromString} from '../util/security/trusted_types';\n\n/**\n * This helper is used to get hold of an inert tree of DOM elements containing dirty HTML\n * that needs sanitizing.\n * Depending upon browser support we use one of two strategies for doing this.\n * Default: DOMParser strategy\n * Fallback: InertDocument strategy\n */\nexport function getInertBodyHelper(defaultDoc: Document): InertBodyHelper {\n  const inertDocumentHelper = new InertDocumentHelper(defaultDoc);\n  return isDOMParserAvailable() ? new DOMParserHelper(inertDocumentHelper) : inertDocumentHelper;\n}\n\nexport interface InertBodyHelper {\n  /**\n   * Get an inert DOM element containing DOM created from the dirty HTML string provided.\n   */\n  getInertBodyElement: (html: string) => HTMLElement | null;\n}\n\n/**\n * Uses DOMParser to create and fill an inert body element.\n * This is the default strategy used in browsers that support it.\n */\nclass DOMParserHelper implements InertBodyHelper {\n  constructor(private inertDocumentHelper: InertBodyHelper) {}\n\n  getInertBodyElement(html: string): HTMLElement|null {\n    // We add these extra elements to ensure that the rest of the content is parsed as expected\n    // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n    // `<head>` tag. Note that the `<body>` tag is closed implicitly to prevent unclosed tags\n    // in `html` from consuming the otherwise explicit `</body>` tag.\n    html = '<body><remove></remove>' + html;\n    try {\n      const body = new window.DOMParser()\n                       .parseFromString(trustedHTMLFromString(html) as string, 'text/html')\n                       .body as HTMLBodyElement;\n      if (body === null) {\n        // In some browsers (e.g. Mozilla/5.0 iPad AppleWebKit Mobile) the `body` property only\n        // becomes available in the following tick of the JS engine. In that case we fall back to\n        // the `inertDocumentHelper` instead.\n        return this.inertDocumentHelper.getInertBodyElement(html);\n      }\n      body.removeChild(body.firstChild!);\n      return body;\n    } catch {\n      return null;\n    }\n  }\n}\n\n/**\n * Use an HTML5 `template` element, if supported, or an inert body element created via\n * `createHtmlDocument` to create and fill an inert DOM element.\n * This is the fallback strategy if the browser does not support DOMParser.\n */\nclass InertDocumentHelper implements InertBodyHelper {\n  private inertDocument: Document;\n\n  constructor(private defaultDoc: Document) {\n    this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n\n    if (this.inertDocument.body == null) {\n      // usually there should be only one body element in the document, but IE doesn't have any, so\n      // we need to create one.\n      const inertHtml = this.inertDocument.createElement('html');\n      this.inertDocument.appendChild(inertHtml);\n      const inertBodyElement = this.inertDocument.createElement('body');\n      inertHtml.appendChild(inertBodyElement);\n    }\n  }\n\n  getInertBodyElement(html: string): HTMLElement|null {\n    // Prefer using <template> element if supported.\n    const templateEl = this.inertDocument.createElement('template');\n    if ('content' in templateEl) {\n      templateEl.innerHTML = trustedHTMLFromString(html) as string;\n      return templateEl;\n    }\n\n    // Note that previously we used to do something like `this.inertDocument.body.innerHTML = html`\n    // and we returned the inert `body` node. This was changed, because IE seems to treat setting\n    // `innerHTML` on an inserted element differently, compared to one that hasn't been inserted\n    // yet. In particular, IE appears to split some of the text into multiple text nodes rather\n    // than keeping them in a single one which ends up messing with Ivy's i18n parsing further\n    // down the line. This has been worked around by creating a new inert `body` and using it as\n    // the root node in which we insert the HTML.\n    const inertBody = this.inertDocument.createElement('body');\n    inertBody.innerHTML = trustedHTMLFromString(html) as string;\n\n    // Support: IE 11 only\n    // strip custom-namespaced attributes on IE<=11\n    if ((this.defaultDoc as any).documentMode) {\n      this.stripCustomNsAttrs(inertBody);\n    }\n\n    return inertBody;\n  }\n\n  /**\n   * When IE11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n   * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n   * 'ns1:xlink:foo').\n   *\n   * This is undesirable since we don't want to allow any of these custom attributes. This method\n   * strips them all.\n   */\n  private stripCustomNsAttrs(el: Element) {\n    const elAttrs = el.attributes;\n    // loop backwards so that we can support removals.\n    for (let i = elAttrs.length - 1; 0 < i; i--) {\n      const attrib = elAttrs.item(i);\n      const attrName = attrib!.name;\n      if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n        el.removeAttribute(attrName);\n      }\n    }\n    let childNode = el.firstChild as Node | null;\n    while (childNode) {\n      if (childNode.nodeType === Node.ELEMENT_NODE) this.stripCustomNsAttrs(childNode as Element);\n      childNode = childNode.nextSibling;\n    }\n  }\n}\n\n/**\n * We need to determine whether the DOMParser exists in the global context and\n * supports parsing HTML; HTML parsing support is not as wide as other formats, see\n * https://developer.mozilla.org/en-US/docs/Web/API/DOMParser#Browser_compatibility.\n *\n * @suppress {uselessCode}\n */\nexport function isDOMParserAvailable() {\n  try {\n    return !!new window.DOMParser().parseFromString(\n        trustedHTMLFromString('') as string, 'text/html');\n  } catch {\n    return false;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n/**\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * This regular expression matches a subset of URLs that will not cause script\n * execution if used in URL context within a HTML document. Specifically, this\n * regular expression matches if (comment from here on and regex copied from\n * Soy's EscapingConventions):\n * (1) Either an allowed protocol (http, https, mailto or ftp).\n * (2) or no protocol.  A protocol must be followed by a colon. The below\n *     allows that by allowing colons only after one of the characters [/?#].\n *     A colon after a hash (#) must be in the fragment.\n *     Otherwise, a colon after a (?) must be in a query.\n *     Otherwise, a colon after a single solidus (/) must be in a path.\n *     Otherwise, a colon after a double solidus (//) must be in the authority\n *     (before port).\n *\n * The pattern disallows &, used in HTML entity declarations before\n * one of the characters in [/?#]. This disallows HTML entities used in the\n * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n * It also disallows HTML entities in the first path part of a relative path,\n * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n * that. More importantly, it disallows masking of a colon,\n * e.g. \"javascript&#58;...\".\n *\n * This regular expression was taken from the Closure sanitization library.\n */\nconst SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi;\n\n/* A pattern that matches safe srcset values */\nconst SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n\n/** A pattern that matches safe data URLs. Only matches image, video and audio types. */\nconst DATA_URL_PATTERN =\n    /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n\nexport function _sanitizeUrl(url: string): string {\n  url = String(url);\n  if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN)) return url;\n\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    console.warn(`WARNING: sanitizing unsafe URL value ${url} (see https://g.co/ng/security#xss)`);\n  }\n\n  return 'unsafe:' + url;\n}\n\nexport function sanitizeSrcset(srcset: string): string {\n  srcset = String(srcset);\n  return srcset.split(',').map((srcset) => _sanitizeUrl(srcset.trim())).join(', ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TrustedHTML} from '../util/security/trusted_type_defs';\nimport {trustedHTMLFromString} from '../util/security/trusted_types';\nimport {getInertBodyHelper, InertBodyHelper} from './inert_body';\nimport {_sanitizeUrl, sanitizeSrcset} from './url_sanitizer';\n\nfunction tagSet(tags: string): {[k: string]: boolean} {\n  const res: {[k: string]: boolean} = {};\n  for (const t of tags.split(',')) res[t] = true;\n  return res;\n}\n\nfunction merge(...sets: {[k: string]: boolean}[]): {[k: string]: boolean} {\n  const res: {[k: string]: boolean} = {};\n  for (const s of sets) {\n    for (const v in s) {\n      if (s.hasOwnProperty(v)) res[v] = true;\n    }\n  }\n  return res;\n}\n\n// Good source of info about elements and attributes\n// https://html.spec.whatwg.org/#semantics\n// https://simon.html5.org/html-elements\n\n// Safe Void Elements - HTML5\n// https://html.spec.whatwg.org/#void-elements\nconst VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n\n// Elements that you can, intentionally, leave open (and which close themselves)\n// https://html.spec.whatwg.org/#optional-tags\nconst OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\nconst OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\nconst OPTIONAL_END_TAG_ELEMENTS =\n    merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n\n// Safe Block Elements - HTML5\nconst BLOCK_ELEMENTS = merge(\n    OPTIONAL_END_TAG_BLOCK_ELEMENTS,\n    tagSet(\n        'address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n\n// Inline Elements - HTML5\nconst INLINE_ELEMENTS = merge(\n    OPTIONAL_END_TAG_INLINE_ELEMENTS,\n    tagSet(\n        'a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n\nexport const VALID_ELEMENTS =\n    merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n\n// Attributes that have href and hence need to be sanitized\nexport const URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n\n// Attributes that have special href set hence need to be sanitized\nexport const SRCSET_ATTRS = tagSet('srcset');\n\nconst HTML_ATTRS = tagSet(\n    'abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n    'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n    'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n    'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n    'valign,value,vspace,width');\n\n// Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\nconst ARIA_ATTRS = tagSet(\n    'aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n    'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n    'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n    'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n    'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n    'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n    'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n\n// NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n// issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n// innerHTML is required, SVG attributes should be added here.\n\n// NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n// can be sanitized, but they increase security surface area without a legitimate use case, so they\n// are left out here.\n\nexport const VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n\n// Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n//\n// Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n// `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n// don't want to preserve the content, if the elements themselves are going to be removed.\nconst SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n\n/**\n * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n * attributes.\n */\nclass SanitizingHtmlSerializer {\n  // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n  // because characters were re-encoded.\n  public sanitizedSomething = false;\n  private buf: string[] = [];\n\n  sanitizeChildren(el: Element): string {\n    // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n    // However this code never accesses properties off of `document` before deleting its contents\n    // again, so it shouldn't be vulnerable to DOM clobbering.\n    let current: Node = el.firstChild!;\n    let traverseContent = true;\n    while (current) {\n      if (current.nodeType === Node.ELEMENT_NODE) {\n        traverseContent = this.startElement(current as Element);\n      } else if (current.nodeType === Node.TEXT_NODE) {\n        this.chars(current.nodeValue!);\n      } else {\n        // Strip non-element, non-text nodes.\n        this.sanitizedSomething = true;\n      }\n      if (traverseContent && current.firstChild) {\n        current = current.firstChild!;\n        continue;\n      }\n      while (current) {\n        // Leaving the element. Walk up and to the right, closing tags as we go.\n        if (current.nodeType === Node.ELEMENT_NODE) {\n          this.endElement(current as Element);\n        }\n\n        let next = this.checkClobberedElement(current, current.nextSibling!);\n\n        if (next) {\n          current = next;\n          break;\n        }\n\n        current = this.checkClobberedElement(current, current.parentNode!);\n      }\n    }\n    return this.buf.join('');\n  }\n\n  /**\n   * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n   * be traversed. Element content must always be traversed (even if the element itself is not\n   * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n   *\n   * @param element The element to sanitize.\n   * @return True if the element's contents should be traversed.\n   */\n  private startElement(element: Element): boolean {\n    const tagName = element.nodeName.toLowerCase();\n    if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n      this.sanitizedSomething = true;\n      return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n    }\n    this.buf.push('<');\n    this.buf.push(tagName);\n    const elAttrs = element.attributes;\n    for (let i = 0; i < elAttrs.length; i++) {\n      const elAttr = elAttrs.item(i);\n      const attrName = elAttr!.name;\n      const lower = attrName.toLowerCase();\n      if (!VALID_ATTRS.hasOwnProperty(lower)) {\n        this.sanitizedSomething = true;\n        continue;\n      }\n      let value = elAttr!.value;\n      // TODO(martinprobst): Special case image URIs for data:image/...\n      if (URI_ATTRS[lower]) value = _sanitizeUrl(value);\n      if (SRCSET_ATTRS[lower]) value = sanitizeSrcset(value);\n      this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n    }\n    this.buf.push('>');\n    return true;\n  }\n\n  private endElement(current: Element) {\n    const tagName = current.nodeName.toLowerCase();\n    if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n      this.buf.push('</');\n      this.buf.push(tagName);\n      this.buf.push('>');\n    }\n  }\n\n  private chars(chars: string) {\n    this.buf.push(encodeEntities(chars));\n  }\n\n  checkClobberedElement(node: Node, nextNode: Node): Node {\n    if (nextNode &&\n        (node.compareDocumentPosition(nextNode) &\n         Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n      throw new Error(`Failed to sanitize html because the element is clobbered: ${\n          (node as Element).outerHTML}`);\n    }\n    return nextNode;\n  }\n}\n\n// Regular Expressions for parsing tags and attributes\nconst SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n// ! to ~ is the ASCII range.\nconst NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param value\n */\nfunction encodeEntities(value: string) {\n  return value.replace(/&/g, '&amp;')\n      .replace(\n          SURROGATE_PAIR_REGEXP,\n          function(match: string) {\n            const hi = match.charCodeAt(0);\n            const low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n          })\n      .replace(\n          NON_ALPHANUMERIC_REGEXP,\n          function(match: string) {\n            return '&#' + match.charCodeAt(0) + ';';\n          })\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n}\n\nlet inertBodyHelper: InertBodyHelper;\n\n/**\n * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n * the DOM in a browser environment.\n */\nexport function _sanitizeHtml(defaultDoc: any, unsafeHtmlInput: string): TrustedHTML|string {\n  let inertBodyElement: HTMLElement|null = null;\n  try {\n    inertBodyHelper = inertBodyHelper || getInertBodyHelper(defaultDoc);\n    // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n    let unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n    inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n\n    // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n    // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n    let mXSSAttempts = 5;\n    let parsedHtml = unsafeHtml;\n\n    do {\n      if (mXSSAttempts === 0) {\n        throw new Error('Failed to sanitize html because the input is unstable');\n      }\n      mXSSAttempts--;\n\n      unsafeHtml = parsedHtml;\n      parsedHtml = inertBodyElement!.innerHTML;\n      inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n    } while (unsafeHtml !== parsedHtml);\n\n    const sanitizer = new SanitizingHtmlSerializer();\n    const safeHtml = sanitizer.sanitizeChildren(\n        getTemplateContent(inertBodyElement!) as Element || inertBodyElement);\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && sanitizer.sanitizedSomething) {\n      console.warn(\n          'WARNING: sanitizing HTML stripped some content, see https://g.co/ng/security#xss');\n    }\n\n    return trustedHTMLFromString(safeHtml);\n  } finally {\n    // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n    if (inertBodyElement) {\n      const parent = getTemplateContent(inertBodyElement) || inertBodyElement;\n      while (parent.firstChild) {\n        parent.removeChild(parent.firstChild);\n      }\n    }\n  }\n}\n\nexport function getTemplateContent(el: Node): Node|null {\n  return 'content' in (el as any /** Microsoft/TypeScript#21517 */) && isTemplateElement(el) ?\n      el.content :\n      null;\n}\nfunction isTemplateElement(el: Node): el is HTMLTemplateElement {\n  return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property\n * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly\n * handled.\n *\n * See DomSanitizer for more details on security in Angular applications.\n *\n * @publicApi\n */\nexport enum SecurityContext {\n  NONE = 0,\n  HTML = 1,\n  STYLE = 2,\n  SCRIPT = 3,\n  URL = 4,\n  RESOURCE_URL = 5,\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {RuntimeError, RuntimeErrorCode} from '../errors';\nimport {getDocument} from '../render3/interfaces/document';\nimport {SANITIZER} from '../render3/interfaces/view';\nimport {getLView} from '../render3/state';\nimport {renderStringify} from '../render3/util/stringify_utils';\nimport {TrustedHTML, TrustedScript, TrustedScriptURL} from '../util/security/trusted_type_defs';\nimport {trustedHTMLFromString, trustedScriptURLFromString} from '../util/security/trusted_types';\nimport {trustedHTMLFromStringBypass, trustedScriptFromStringBypass, trustedScriptURLFromStringBypass} from '../util/security/trusted_types_bypass';\n\nimport {allowSanitizationBypassAndThrow, BypassType, unwrapSafeValue} from './bypass';\nimport {_sanitizeHtml as _sanitizeHtml} from './html_sanitizer';\nimport {Sanitizer} from './sanitizer';\nimport {SecurityContext} from './security';\nimport {_sanitizeUrl as _sanitizeUrl} from './url_sanitizer';\n\n\n\n/**\n * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `html` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n *\n * @param unsafeHtml untrusted `html`, typically from the user.\n * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n * and urls have been removed.\n *\n * @codeGenApi\n */\nexport function ɵɵsanitizeHtml(unsafeHtml: any): TrustedHTML|string {\n  const sanitizer = getSanitizer();\n  if (sanitizer) {\n    return trustedHTMLFromStringBypass(sanitizer.sanitize(SecurityContext.HTML, unsafeHtml) || '');\n  }\n  if (allowSanitizationBypassAndThrow(unsafeHtml, BypassType.Html)) {\n    return trustedHTMLFromStringBypass(unwrapSafeValue(unsafeHtml));\n  }\n  return _sanitizeHtml(getDocument(), renderStringify(unsafeHtml));\n}\n\n/**\n * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n * dangerous content.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n *\n * @param unsafeStyle untrusted `style`, typically from the user.\n * @returns `style` string which is safe to bind to the `style` properties.\n *\n * @codeGenApi\n */\nexport function ɵɵsanitizeStyle(unsafeStyle: any): string {\n  const sanitizer = getSanitizer();\n  if (sanitizer) {\n    return sanitizer.sanitize(SecurityContext.STYLE, unsafeStyle) || '';\n  }\n  if (allowSanitizationBypassAndThrow(unsafeStyle, BypassType.Style)) {\n    return unwrapSafeValue(unsafeStyle);\n  }\n  return renderStringify(unsafeStyle);\n}\n\n/**\n * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n * dangerous\n * content.\n *\n * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n * removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n *\n * @param unsafeUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * all of the dangerous javascript has been removed.\n *\n * @codeGenApi\n */\nexport function ɵɵsanitizeUrl(unsafeUrl: any): string {\n  const sanitizer = getSanitizer();\n  if (sanitizer) {\n    return sanitizer.sanitize(SecurityContext.URL, unsafeUrl) || '';\n  }\n  if (allowSanitizationBypassAndThrow(unsafeUrl, BypassType.Url)) {\n    return unwrapSafeValue(unsafeUrl);\n  }\n  return _sanitizeUrl(renderStringify(unsafeUrl));\n}\n\n/**\n * A `url` sanitizer which only lets trusted `url`s through.\n *\n * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n *\n * @param unsafeResourceUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * only trusted `url`s have been allowed to pass.\n *\n * @codeGenApi\n */\nexport function ɵɵsanitizeResourceUrl(unsafeResourceUrl: any): TrustedScriptURL|string {\n  const sanitizer = getSanitizer();\n  if (sanitizer) {\n    return trustedScriptURLFromStringBypass(\n        sanitizer.sanitize(SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '');\n  }\n  if (allowSanitizationBypassAndThrow(unsafeResourceUrl, BypassType.ResourceUrl)) {\n    return trustedScriptURLFromStringBypass(unwrapSafeValue(unsafeResourceUrl));\n  }\n  throw new RuntimeError(\n      RuntimeErrorCode.UNSAFE_VALUE_IN_RESOURCE_URL,\n      ngDevMode &&\n          'unsafe value used in a resource URL context (see https://g.co/ng/security#xss)');\n}\n\n/**\n * A `script` sanitizer which only lets trusted javascript through.\n *\n * This passes only `script`s marked trusted by calling {@link\n * bypassSanitizationTrustScript}.\n *\n * @param unsafeScript untrusted `script`, typically from the user.\n * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n * because only trusted `scripts` have been allowed to pass.\n *\n * @codeGenApi\n */\nexport function ɵɵsanitizeScript(unsafeScript: any): TrustedScript|string {\n  const sanitizer = getSanitizer();\n  if (sanitizer) {\n    return trustedScriptFromStringBypass(\n        sanitizer.sanitize(SecurityContext.SCRIPT, unsafeScript) || '');\n  }\n  if (allowSanitizationBypassAndThrow(unsafeScript, BypassType.Script)) {\n    return trustedScriptFromStringBypass(unwrapSafeValue(unsafeScript));\n  }\n  throw new RuntimeError(\n      RuntimeErrorCode.UNSAFE_VALUE_IN_SCRIPT,\n      ngDevMode && 'unsafe value used in a script context');\n}\n\n/**\n * A template tag function for promoting the associated constant literal to a\n * TrustedHTML. Interpolation is explicitly not allowed.\n *\n * @param html constant template literal containing trusted HTML.\n * @returns TrustedHTML wrapping `html`.\n *\n * @security This is a security-sensitive function and should only be used to\n * convert constant values of attributes and properties found in\n * application-provided Angular templates to TrustedHTML.\n *\n * @codeGenApi\n */\nexport function ɵɵtrustConstantHtml(html: TemplateStringsArray): TrustedHTML|string {\n  // The following runtime check ensures that the function was called as a\n  // template tag (e.g. ɵɵtrustConstantHtml`content`), without any interpolation\n  // (e.g. not ɵɵtrustConstantHtml`content ${variable}`). A TemplateStringsArray\n  // is an array with a `raw` property that is also an array. The associated\n  // template literal has no interpolation if and only if the length of the\n  // TemplateStringsArray is 1.\n  if (ngDevMode && (!Array.isArray(html) || !Array.isArray(html.raw) || html.length !== 1)) {\n    throw new Error(`Unexpected interpolation in trusted HTML constant: ${html.join('?')}`);\n  }\n  return trustedHTMLFromString(html[0]);\n}\n\n/**\n * A template tag function for promoting the associated constant literal to a\n * TrustedScriptURL. Interpolation is explicitly not allowed.\n *\n * @param url constant template literal containing a trusted script URL.\n * @returns TrustedScriptURL wrapping `url`.\n *\n * @security This is a security-sensitive function and should only be used to\n * convert constant values of attributes and properties found in\n * application-provided Angular templates to TrustedScriptURL.\n *\n * @codeGenApi\n */\nexport function ɵɵtrustConstantResourceUrl(url: TemplateStringsArray): TrustedScriptURL|string {\n  // The following runtime check ensures that the function was called as a\n  // template tag (e.g. ɵɵtrustConstantResourceUrl`content`), without any\n  // interpolation (e.g. not ɵɵtrustConstantResourceUrl`content ${variable}`). A\n  // TemplateStringsArray is an array with a `raw` property that is also an\n  // array. The associated template literal has no interpolation if and only if\n  // the length of the TemplateStringsArray is 1.\n  if (ngDevMode && (!Array.isArray(url) || !Array.isArray(url.raw) || url.length !== 1)) {\n    throw new Error(`Unexpected interpolation in trusted URL constant: ${url.join('?')}`);\n  }\n  return trustedScriptURLFromString(url[0]);\n}\n\n/**\n * Detects which sanitizer to use for URL property, based on tag name and prop name.\n *\n * The rules are based on the RESOURCE_URL context config from\n * `packages/compiler/src/schema/dom_security_schema.ts`.\n * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n */\nexport function getUrlSanitizer(tag: string, prop: string) {\n  if ((prop === 'src' &&\n       (tag === 'embed' || tag === 'frame' || tag === 'iframe' || tag === 'media' ||\n        tag === 'script')) ||\n      (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n    return ɵɵsanitizeResourceUrl;\n  }\n  return ɵɵsanitizeUrl;\n}\n\n/**\n * Sanitizes URL, selecting sanitizer function based on tag and property names.\n *\n * This function is used in case we can't define security context at compile time, when only prop\n * name is available. This happens when we generate host bindings for Directives/Components. The\n * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n * runtime.\n *\n * @param unsafeUrl untrusted `url`, typically from the user.\n * @param tag target element tag name.\n * @param prop name of the property that contains the value.\n * @returns `url` string which is safe to bind.\n *\n * @codeGenApi\n */\nexport function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl: any, tag: string, prop: string): any {\n  return getUrlSanitizer(tag, prop)(unsafeUrl);\n}\n\nexport function validateAgainstEventProperties(name: string) {\n  if (name.toLowerCase().startsWith('on')) {\n    const errorMessage =\n        `Binding to event property '${name}' is disallowed for security reasons, ` +\n        `please use (${name.slice(2)})=...` +\n        `\\nIf '${name}' is a directive input, make sure the directive is imported by the` +\n        ` current module.`;\n    throw new RuntimeError(RuntimeErrorCode.INVALID_EVENT_BINDING, errorMessage);\n  }\n}\n\nexport function validateAgainstEventAttributes(name: string) {\n  if (name.toLowerCase().startsWith('on')) {\n    const errorMessage =\n        `Binding to event attribute '${name}' is disallowed for security reasons, ` +\n        `please use (${name.slice(2)})=...`;\n    throw new RuntimeError(RuntimeErrorCode.INVALID_EVENT_BINDING, errorMessage);\n  }\n}\n\nfunction getSanitizer(): Sanitizer|null {\n  const lView = getLView();\n  return lView && lView[SANITIZER];\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from './injection_token';\n\n/**\n * A multi-provider token for initialization functions that will run upon construction of an\n * environment injector.\n *\n * @publicApi\n */\nexport const ENVIRONMENT_INITIALIZER = new InjectionToken<() => void>('ENVIRONMENT_INITIALIZER');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from './injection_token';\nimport {Injector} from './injector';\nimport {InjectorMarkers} from './injector_marker';\n\n\n\n/**\n * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n *\n * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n * project.\n *\n * @publicApi\n */\nexport const INJECTOR = new InjectionToken<Injector>(\n    'INJECTOR',\n    // Disable tslint because this is const enum which gets inlined not top level prop access.\n    // tslint:disable-next-line: no-toplevel-property-access\n    InjectorMarkers.Injector as any,  // Special value used by Ivy to identify `Injector`.\n);\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../interface/type';\n\nimport {InjectionToken} from './injection_token';\n\nexport const INJECTOR_DEF_TYPES = new InjectionToken<Type<unknown>>('INJECTOR_DEF_TYPES');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {stringify} from '../util/stringify';\nimport {Injector} from './injector';\nimport {THROW_IF_NOT_FOUND} from './injector_compatibility';\n\nexport class NullInjector implements Injector {\n  get(token: any, notFoundValue: any = THROW_IF_NOT_FOUND): any {\n    if (notFoundValue === THROW_IF_NOT_FOUND) {\n      const error = new Error(`NullInjectorError: No provider for ${stringify(token)}!`);\n      error.name = 'NullInjectorError';\n      throw error;\n    }\n    return notFoundValue;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {RuntimeError, RuntimeErrorCode} from '../errors';\nimport {Type} from '../interface/type';\nimport {getComponentDef} from '../render3/definition';\nimport {getFactoryDef} from '../render3/definition_factory';\nimport {throwCyclicDependencyError, throwInvalidProviderError} from '../render3/errors_di';\nimport {stringifyForError} from '../render3/util/stringify_utils';\nimport {deepForEach} from '../util/array_utils';\nimport {getClosureSafeProperty} from '../util/property';\nimport {stringify} from '../util/stringify';\nimport {EMPTY_ARRAY} from '../view';\n\nimport {resolveForwardRef} from './forward_ref';\nimport {ENVIRONMENT_INITIALIZER} from './initializer_token';\nimport {ɵɵinject as inject} from './injector_compatibility';\nimport {getInjectorDef, InjectorType, InjectorTypeWithProviders} from './interface/defs';\nimport {ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, ImportedNgModuleProviders, ModuleWithProviders, Provider, StaticClassProvider, TypeProvider, ValueProvider} from './interface/provider';\nimport {INJECTOR_DEF_TYPES} from './internal_tokens';\n\n/**\n * A source of providers for the `importProvidersFrom` function.\n *\n * @developerPreview\n * @publicApi\n */\nexport type ImportProvidersSource =\n    Type<unknown>|ModuleWithProviders<unknown>|Array<ImportProvidersSource>;\n\n/**\n * Collects providers from all NgModules and standalone components, including transitively imported\n * ones.\n *\n * Providers extracted via `importProvidersFrom` are only usable in an application injector or\n * another environment injector (such as a route injector). They should not be used in component\n * providers.\n *\n * More information about standalone components can be found in [this\n * guide](guide/standalone-components).\n *\n * @usageNotes\n * The results of the `importProvidersFrom` call can be used in the `bootstrapApplication` call:\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     importProvidersFrom(NgModuleOne, NgModuleTwo)\n *   ]\n * });\n * ```\n *\n * You can also use the `importProvidersFrom` results in the `providers` field of a route, when a\n * standalone component is used:\n *\n * ```typescript\n * export const ROUTES: Route[] = [\n *   {\n *     path: 'foo',\n *     providers: [\n *       importProvidersFrom(NgModuleOne, NgModuleTwo)\n *     ],\n *     component: YourStandaloneComponent\n *   }\n * ];\n * ```\n *\n * @returns Collected providers from the specified list of types.\n * @publicApi\n * @developerPreview\n */\nexport function importProvidersFrom(...sources: ImportProvidersSource[]):\n    ImportedNgModuleProviders {\n  return {ɵproviders: internalImportProvidersFrom(true, sources)};\n}\n\nexport function internalImportProvidersFrom(\n    checkForStandaloneCmp: boolean, ...sources: ImportProvidersSource[]): Provider[] {\n  const providersOut: SingleProvider[] = [];\n  const dedup = new Set<Type<unknown>>();  // already seen types\n  let injectorTypesWithProviders: InjectorTypeWithProviders<unknown>[]|undefined;\n  deepForEach(sources, source => {\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && checkForStandaloneCmp) {\n      const cmpDef = getComponentDef(source);\n      if (cmpDef?.standalone) {\n        throw new RuntimeError(\n            RuntimeErrorCode.IMPORT_PROVIDERS_FROM_STANDALONE,\n            `Importing providers supports NgModule or ModuleWithProviders but got a standalone component \"${\n                stringifyForError(source)}\"`);\n      }\n    }\n\n    // Narrow `source` to access the internal type analogue for `ModuleWithProviders`.\n    const internalSource = source as Type<unknown>| InjectorTypeWithProviders<unknown>;\n    if (walkProviderTree(internalSource, providersOut, [], dedup)) {\n      injectorTypesWithProviders ||= [];\n      injectorTypesWithProviders.push(internalSource);\n    }\n  });\n  // Collect all providers from `ModuleWithProviders` types.\n  if (injectorTypesWithProviders !== undefined) {\n    processInjectorTypesWithProviders(injectorTypesWithProviders, providersOut);\n  }\n\n  return providersOut;\n}\n\n/**\n * Collects all providers from the list of `ModuleWithProviders` and appends them to the provided\n * array.\n */\nfunction processInjectorTypesWithProviders(\n    typesWithProviders: InjectorTypeWithProviders<unknown>[], providersOut: Provider[]): void {\n  for (let i = 0; i < typesWithProviders.length; i++) {\n    const {ngModule, providers} = typesWithProviders[i];\n    deepForEach(providers!, provider => {\n      ngDevMode && validateProvider(provider, providers || EMPTY_ARRAY, ngModule);\n      providersOut.push(provider);\n    });\n  }\n}\n\n/**\n * Internal type for a single provider in a deep provider array.\n */\nexport type SingleProvider = TypeProvider|ValueProvider|ClassProvider|ConstructorProvider|\n    ExistingProvider|FactoryProvider|StaticClassProvider;\n\n/**\n * The logic visits an `InjectorType`, an `InjectorTypeWithProviders`, or a standalone\n * `ComponentType`, and all of its transitive providers and collects providers.\n *\n * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n * the function will return \"true\" to indicate that the providers of the type definition need\n * to be processed. This allows us to process providers of injector types after all imports of\n * an injector definition are processed. (following View Engine semantics: see FW-1349)\n */\nexport function walkProviderTree(\n    container: Type<unknown>|InjectorTypeWithProviders<unknown>, providersOut: SingleProvider[],\n    parents: Type<unknown>[],\n    dedup: Set<Type<unknown>>): container is InjectorTypeWithProviders<unknown> {\n  container = resolveForwardRef(container);\n  if (!container) return false;\n\n  // The actual type which had the definition. Usually `container`, but may be an unwrapped type\n  // from `InjectorTypeWithProviders`.\n  let defType: Type<unknown>|null = null;\n\n  let injDef = getInjectorDef(container);\n  const cmpDef = !injDef && getComponentDef(container);\n  if (!injDef && !cmpDef) {\n    // `container` is not an injector type or a component type. It might be:\n    //  * An `InjectorTypeWithProviders` that wraps an injector type.\n    //  * A standalone directive or pipe that got pulled in from a standalone component's\n    //    dependencies.\n    // Try to unwrap it as an `InjectorTypeWithProviders` first.\n    const ngModule: Type<unknown>|undefined =\n        (container as InjectorTypeWithProviders<any>).ngModule as Type<unknown>| undefined;\n    injDef = getInjectorDef(ngModule);\n    if (injDef) {\n      defType = ngModule!;\n    } else {\n      // Not a component or injector type, so ignore it.\n      return false;\n    }\n  } else if (cmpDef && !cmpDef.standalone) {\n    return false;\n  } else {\n    defType = container as Type<unknown>;\n  }\n\n  // Check for circular dependencies.\n  if (ngDevMode && parents.indexOf(defType) !== -1) {\n    const defName = stringify(defType);\n    const path = parents.map(stringify);\n    throwCyclicDependencyError(defName, path);\n  }\n\n  // Check for multiple imports of the same module\n  const isDuplicate = dedup.has(defType);\n\n  if (cmpDef) {\n    if (isDuplicate) {\n      // This component definition has already been processed.\n      return false;\n    }\n    dedup.add(defType);\n\n    if (cmpDef.dependencies) {\n      const deps =\n          typeof cmpDef.dependencies === 'function' ? cmpDef.dependencies() : cmpDef.dependencies;\n      for (const dep of deps) {\n        walkProviderTree(dep, providersOut, parents, dedup);\n      }\n    }\n  } else if (injDef) {\n    // First, include providers from any imports.\n    if (injDef.imports != null && !isDuplicate) {\n      // Before processing defType's imports, add it to the set of parents. This way, if it ends\n      // up deeply importing itself, this can be detected.\n      ngDevMode && parents.push(defType);\n      // Add it to the set of dedups. This way we can detect multiple imports of the same module\n      dedup.add(defType);\n\n      let importTypesWithProviders: (InjectorTypeWithProviders<any>[])|undefined;\n      try {\n        deepForEach(injDef.imports, imported => {\n          if (walkProviderTree(imported, providersOut, parents, dedup)) {\n            importTypesWithProviders ||= [];\n            // If the processed import is an injector type with providers, we store it in the\n            // list of import types with providers, so that we can process those afterwards.\n            importTypesWithProviders.push(imported);\n          }\n        });\n      } finally {\n        // Remove it from the parents set when finished.\n        ngDevMode && parents.pop();\n      }\n\n      // Imports which are declared with providers (TypeWithProviders) need to be processed\n      // after all imported modules are processed. This is similar to how View Engine\n      // processes/merges module imports in the metadata resolver. See: FW-1349.\n      if (importTypesWithProviders !== undefined) {\n        processInjectorTypesWithProviders(importTypesWithProviders, providersOut);\n      }\n    }\n\n    if (!isDuplicate) {\n      // Track the InjectorType and add a provider for it.\n      // It's important that this is done after the def's imports.\n      const factory = getFactoryDef(defType) || (() => new defType!());\n\n      // Append extra providers to make more info available for consumers (to retrieve an injector\n      // type), as well as internally (to calculate an injection scope correctly and eagerly\n      // instantiate a `defType` when an injector is created).\n      providersOut.push(\n          // Provider to create `defType` using its factory.\n          {provide: defType, useFactory: factory, deps: EMPTY_ARRAY},\n\n          // Make this `defType` available to an internal logic that calculates injector scope.\n          {provide: INJECTOR_DEF_TYPES, useValue: defType, multi: true},\n\n          // Provider to eagerly instantiate `defType` via `ENVIRONMENT_INITIALIZER`.\n          {provide: ENVIRONMENT_INITIALIZER, useValue: () => inject(defType!), multi: true}  //\n      );\n    }\n\n    // Next, include providers listed on the definition itself.\n    const defProviders = injDef.providers;\n    if (defProviders != null && !isDuplicate) {\n      const injectorType = container as InjectorType<any>;\n      deepForEach(defProviders, provider => {\n        ngDevMode && validateProvider(provider, defProviders as SingleProvider[], injectorType);\n        providersOut.push(provider);\n      });\n    }\n  } else {\n    // Should not happen, but just in case.\n    return false;\n  }\n\n  return (\n      defType !== container &&\n      (container as InjectorTypeWithProviders<any>).providers !== undefined);\n}\n\nfunction validateProvider(\n    provider: SingleProvider, providers: SingleProvider[], containerType: Type<unknown>): void {\n  if (isTypeProvider(provider) || isValueProvider(provider) || isFactoryProvider(provider) ||\n      isExistingProvider(provider)) {\n    return;\n  }\n\n  // Here we expect the provider to be a `useClass` provider (by elimination).\n  const classRef = resolveForwardRef(\n      provider && ((provider as StaticClassProvider | ClassProvider).useClass || provider.provide));\n  if (!classRef) {\n    throwInvalidProviderError(containerType, providers, provider);\n  }\n}\n\nexport const USE_VALUE =\n    getClosureSafeProperty<ValueProvider>({provide: String, useValue: getClosureSafeProperty});\n\nexport function isValueProvider(value: SingleProvider): value is ValueProvider {\n  return value !== null && typeof value == 'object' && USE_VALUE in value;\n}\n\nexport function isExistingProvider(value: SingleProvider): value is ExistingProvider {\n  return !!(value && (value as ExistingProvider).useExisting);\n}\n\nexport function isFactoryProvider(value: SingleProvider): value is FactoryProvider {\n  return !!(value && (value as FactoryProvider).useFactory);\n}\n\nexport function isTypeProvider(value: SingleProvider): value is TypeProvider {\n  return typeof value === 'function';\n}\n\nexport function isClassProvider(value: SingleProvider): value is ClassProvider {\n  return !!(value as StaticClassProvider | ClassProvider).useClass;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from './injection_token';\n\n\nexport type InjectorScope = 'root'|'platform'|'environment';\n\n/**\n * An internal token whose presence in an injector indicates that the injector should treat itself\n * as a root scoped injector when processing requests for unknown tokens which may indicate\n * they are provided in the root scope.\n */\nexport const INJECTOR_SCOPE = new InjectionToken<InjectorScope|null>('Set Injector scope.');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport '../util/ng_dev_mode';\n\nimport {RuntimeError, RuntimeErrorCode} from '../errors';\nimport {OnDestroy} from '../interface/lifecycle_hooks';\nimport {Type} from '../interface/type';\nimport {getComponentDef} from '../render3/definition';\nimport {FactoryFn, getFactoryDef} from '../render3/definition_factory';\nimport {throwCyclicDependencyError, throwInvalidProviderError, throwMixedMultiProviderError} from '../render3/errors_di';\nimport {newArray} from '../util/array_utils';\nimport {EMPTY_ARRAY} from '../util/empty';\nimport {stringify} from '../util/stringify';\n\nimport {resolveForwardRef} from './forward_ref';\nimport {ENVIRONMENT_INITIALIZER} from './initializer_token';\nimport {setInjectImplementation} from './inject_switch';\nimport {InjectionToken} from './injection_token';\nimport {Injector} from './injector';\nimport {catchInjectorError, injectArgs, NG_TEMP_TOKEN_PATH, setCurrentInjector, THROW_IF_NOT_FOUND, ɵɵinject} from './injector_compatibility';\nimport {INJECTOR} from './injector_token';\nimport {getInheritedInjectableDef, getInjectableDef, InjectorType, ɵɵInjectableDeclaration} from './interface/defs';\nimport {InjectFlags} from './interface/injector';\nimport {ClassProvider, ConstructorProvider, ImportedNgModuleProviders, Provider, StaticClassProvider} from './interface/provider';\nimport {INJECTOR_DEF_TYPES} from './internal_tokens';\nimport {NullInjector} from './null_injector';\nimport {importProvidersFrom, isExistingProvider, isFactoryProvider, isTypeProvider, isValueProvider, SingleProvider} from './provider_collection';\nimport {ProviderToken} from './provider_token';\nimport {INJECTOR_SCOPE, InjectorScope} from './scope';\n\n/**\n * Marker which indicates that a value has not yet been created from the factory function.\n */\nconst NOT_YET = {};\n\n/**\n * Marker which indicates that the factory function for a token is in the process of being called.\n *\n * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n * injection of a dependency has recursively attempted to inject the original token, and there is\n * a circular dependency among the providers.\n */\nconst CIRCULAR = {};\n\n/**\n * A lazily initialized NullInjector.\n */\nlet NULL_INJECTOR: Injector|undefined = undefined;\n\nexport function getNullInjector(): Injector {\n  if (NULL_INJECTOR === undefined) {\n    NULL_INJECTOR = new NullInjector();\n  }\n  return NULL_INJECTOR;\n}\n\n/**\n * An entry in the injector which tracks information about the given token, including a possible\n * current value.\n */\ninterface Record<T> {\n  factory: (() => T)|undefined;\n  value: T|{};\n  multi: any[]|undefined;\n}\n\n/**\n * An `Injector` that's part of the environment injector hierarchy, which exists outside of the\n * component tree.\n *\n * @developerPreview\n */\nexport abstract class EnvironmentInjector implements Injector {\n  /**\n   * Retrieves an instance from the injector based on the provided token.\n   * @returns The instance from the injector if defined, otherwise the `notFoundValue`.\n   * @throws When the `notFoundValue` is `undefined` or `Injector.THROW_IF_NOT_FOUND`.\n   */\n  abstract get<T>(token: ProviderToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  /**\n   * @deprecated from v4.0.0 use ProviderToken<T>\n   * @suppress {duplicate}\n   */\n  abstract get(token: any, notFoundValue?: any): any;\n\n  /**\n   * Runs the given function in the context of this `EnvironmentInjector`.\n   *\n   * Within the function's stack frame, `inject` can be used to inject dependencies from this\n   * injector. Note that `inject` is only usable synchronously, and cannot be used in any\n   * asynchronous callbacks or after any `await` points.\n   *\n   * @param fn the closure to be run in the context of this injector\n   * @returns the return value of the function, if any\n   */\n  abstract runInContext<ReturnT>(fn: () => ReturnT): ReturnT;\n\n  abstract destroy(): void;\n\n  /**\n   * @internal\n   */\n  abstract onDestroy(callback: () => void): void;\n}\n\nexport class R3Injector extends EnvironmentInjector {\n  /**\n   * Map of tokens to records which contain the instances of those tokens.\n   * - `null` value implies that we don't have the record. Used by tree-shakable injectors\n   * to prevent further searches.\n   */\n  private records = new Map<ProviderToken<any>, Record<any>|null>();\n\n  /**\n   * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n   */\n  private _ngOnDestroyHooks = new Set<OnDestroy>();\n\n  private _onDestroyHooks: Array<() => void> = [];\n\n  /**\n   * Flag indicating that this injector was previously destroyed.\n   */\n  get destroyed(): boolean {\n    return this._destroyed;\n  }\n  private _destroyed = false;\n\n  private injectorDefTypes: Set<Type<unknown>>;\n\n  constructor(\n      providers: Array<Provider|ImportedNgModuleProviders>, readonly parent: Injector,\n      readonly source: string|null, readonly scopes: Set<InjectorScope>) {\n    super();\n    // Start off by creating Records for every provider.\n    forEachSingleProvider(providers, provider => this.processProvider(provider));\n\n    // Make sure the INJECTOR token provides this injector.\n    this.records.set(INJECTOR, makeRecord(undefined, this));\n\n    // And `EnvironmentInjector` if the current injector is supposed to be env-scoped.\n    if (scopes.has('environment')) {\n      this.records.set(EnvironmentInjector, makeRecord(undefined, this));\n    }\n\n    // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n    // any injectable scoped to APP_ROOT_SCOPE.\n    const record = this.records.get(INJECTOR_SCOPE) as Record<InjectorScope|null>;\n    if (record != null && typeof record.value === 'string') {\n      this.scopes.add(record.value as InjectorScope);\n    }\n\n    this.injectorDefTypes =\n        new Set(this.get(INJECTOR_DEF_TYPES.multi, EMPTY_ARRAY, InjectFlags.Self));\n  }\n\n  /**\n   * Destroy the injector and release references to every instance or provider associated with it.\n   *\n   * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n   * hook was found.\n   */\n  override destroy(): void {\n    this.assertNotDestroyed();\n\n    // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n    this._destroyed = true;\n    try {\n      // Call all the lifecycle hooks.\n      for (const service of this._ngOnDestroyHooks) {\n        service.ngOnDestroy();\n      }\n      for (const hook of this._onDestroyHooks) {\n        hook();\n      }\n    } finally {\n      // Release all references.\n      this.records.clear();\n      this._ngOnDestroyHooks.clear();\n      this.injectorDefTypes.clear();\n      this._onDestroyHooks.length = 0;\n    }\n  }\n\n  override onDestroy(callback: () => void): void {\n    this._onDestroyHooks.push(callback);\n  }\n\n  override runInContext<ReturnT>(fn: () => ReturnT): ReturnT {\n    this.assertNotDestroyed();\n\n    const previousInjector = setCurrentInjector(this);\n    const previousInjectImplementation = setInjectImplementation(undefined);\n    try {\n      return fn();\n    } finally {\n      setCurrentInjector(previousInjector);\n      setInjectImplementation(previousInjectImplementation);\n    }\n  }\n\n  override get<T>(\n      token: ProviderToken<T>, notFoundValue: any = THROW_IF_NOT_FOUND,\n      flags = InjectFlags.Default): T {\n    this.assertNotDestroyed();\n    // Set the injection context.\n    const previousInjector = setCurrentInjector(this);\n    const previousInjectImplementation = setInjectImplementation(undefined);\n    try {\n      // Check for the SkipSelf flag.\n      if (!(flags & InjectFlags.SkipSelf)) {\n        // SkipSelf isn't set, check if the record belongs to this injector.\n        let record: Record<T>|undefined|null = this.records.get(token);\n        if (record === undefined) {\n          // No record, but maybe the token is scoped to this injector. Look for an injectable\n          // def with a scope matching this injector.\n          const def = couldBeInjectableType(token) && getInjectableDef(token);\n          if (def && this.injectableDefInScope(def)) {\n            // Found an injectable def and it's scoped to this injector. Pretend as if it was here\n            // all along.\n            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n          } else {\n            record = null;\n          }\n          this.records.set(token, record);\n        }\n        // If a record was found, get the instance for it and return it.\n        if (record != null /* NOT null || undefined */) {\n          return this.hydrate(token, record);\n        }\n      }\n\n      // Select the next injector based on the Self flag - if self is set, the next injector is\n      // the NullInjector, otherwise it's the parent.\n      const nextInjector = !(flags & InjectFlags.Self) ? this.parent : getNullInjector();\n      // Set the notFoundValue based on the Optional flag - if optional is set and notFoundValue\n      // is undefined, the value is null, otherwise it's the notFoundValue.\n      notFoundValue = (flags & InjectFlags.Optional) && notFoundValue === THROW_IF_NOT_FOUND ?\n          null :\n          notFoundValue;\n      return nextInjector.get(token, notFoundValue);\n    } catch (e: any) {\n      if (e.name === 'NullInjectorError') {\n        const path: any[] = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path.unshift(stringify(token));\n        if (previousInjector) {\n          // We still have a parent injector, keep throwing\n          throw e;\n        } else {\n          // Format & throw the final error message when we don't have any previous injector\n          return catchInjectorError(e, token, 'R3InjectorError', this.source);\n        }\n      } else {\n        throw e;\n      }\n    } finally {\n      // Lastly, restore the previous injection context.\n      setInjectImplementation(previousInjectImplementation);\n      setCurrentInjector(previousInjector);\n    }\n  }\n\n  /** @internal */\n  resolveInjectorInitializers() {\n    const previousInjector = setCurrentInjector(this);\n    const previousInjectImplementation = setInjectImplementation(undefined);\n    try {\n      const initializers = this.get(ENVIRONMENT_INITIALIZER.multi, EMPTY_ARRAY, InjectFlags.Self);\n      if (ngDevMode && !Array.isArray(initializers)) {\n        throw new RuntimeError(\n            RuntimeErrorCode.INVALID_MULTI_PROVIDER,\n            'Unexpected type of the `ENVIRONMENT_INITIALIZER` token value ' +\n                `(expected an array, but got ${typeof initializers}). ` +\n                'Please check that the `ENVIRONMENT_INITIALIZER` token is configured as a ' +\n                '`multi: true` provider.');\n      }\n      for (const initializer of initializers) {\n        initializer();\n      }\n    } finally {\n      setCurrentInjector(previousInjector);\n      setInjectImplementation(previousInjectImplementation);\n    }\n  }\n\n  override toString() {\n    const tokens: string[] = [];\n    const records = this.records;\n    for (const token of records.keys()) {\n      tokens.push(stringify(token));\n    }\n    return `R3Injector[${tokens.join(', ')}]`;\n  }\n\n  private assertNotDestroyed(): void {\n    if (this._destroyed) {\n      throw new RuntimeError(\n          RuntimeErrorCode.INJECTOR_ALREADY_DESTROYED,\n          ngDevMode && 'Injector has already been destroyed.');\n    }\n  }\n\n  /**\n   * Process a `SingleProvider` and add it.\n   */\n  private processProvider(provider: SingleProvider): void {\n    // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n    // property.\n    provider = resolveForwardRef(provider);\n    let token: any =\n        isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n\n    // Construct a `Record` for the provider.\n    const record = providerToRecord(provider);\n\n    if (!isTypeProvider(provider) && provider.multi === true) {\n      // If the provider indicates that it's a multi-provider, process it specially.\n      // First check whether it's been defined already.\n      let multiRecord = this.records.get(token);\n      if (multiRecord) {\n        // It has. Throw a nice error if\n        if (ngDevMode && multiRecord.multi === undefined) {\n          throwMixedMultiProviderError();\n        }\n      } else {\n        multiRecord = makeRecord(undefined, NOT_YET, true);\n        multiRecord.factory = () => injectArgs(multiRecord!.multi!);\n        this.records.set(token, multiRecord);\n      }\n      token = provider;\n      multiRecord.multi!.push(provider);\n    } else {\n      const existing = this.records.get(token);\n      if (ngDevMode && existing && existing.multi !== undefined) {\n        throwMixedMultiProviderError();\n      }\n    }\n    this.records.set(token, record);\n  }\n\n  private hydrate<T>(token: ProviderToken<T>, record: Record<T>): T {\n    if (ngDevMode && record.value === CIRCULAR) {\n      throwCyclicDependencyError(stringify(token));\n    } else if (record.value === NOT_YET) {\n      record.value = CIRCULAR;\n      record.value = record.factory!();\n    }\n    if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n      this._ngOnDestroyHooks.add(record.value);\n    }\n    return record.value as T;\n  }\n\n  private injectableDefInScope(def: ɵɵInjectableDeclaration<any>): boolean {\n    if (!def.providedIn) {\n      return false;\n    }\n    const providedIn = resolveForwardRef(def.providedIn);\n    if (typeof providedIn === 'string') {\n      return providedIn === 'any' || (this.scopes.has(providedIn));\n    } else {\n      return this.injectorDefTypes.has(providedIn);\n    }\n  }\n}\n\nfunction injectableDefOrInjectorDefFactory(token: ProviderToken<any>): FactoryFn<any> {\n  // Most tokens will have an injectable def directly on them, which specifies a factory directly.\n  const injectableDef = getInjectableDef(token);\n  const factory = injectableDef !== null ? injectableDef.factory : getFactoryDef(token);\n\n  if (factory !== null) {\n    return factory;\n  }\n\n  // InjectionTokens should have an injectable def (ɵprov) and thus should be handled above.\n  // If it's missing that, it's an error.\n  if (token instanceof InjectionToken) {\n    throw new RuntimeError(\n        RuntimeErrorCode.INVALID_INJECTION_TOKEN,\n        ngDevMode && `Token ${stringify(token)} is missing a ɵprov definition.`);\n  }\n\n  // Undecorated types can sometimes be created if they have no constructor arguments.\n  if (token instanceof Function) {\n    return getUndecoratedInjectableFactory(token);\n  }\n\n  // There was no way to resolve a factory for this token.\n  throw new RuntimeError(RuntimeErrorCode.INVALID_INJECTION_TOKEN, ngDevMode && 'unreachable');\n}\n\nfunction getUndecoratedInjectableFactory(token: Function) {\n  // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n  const paramLength = token.length;\n  if (paramLength > 0) {\n    const args: string[] = newArray(paramLength, '?');\n    throw new RuntimeError(\n        RuntimeErrorCode.INVALID_INJECTION_TOKEN,\n        ngDevMode && `Can't resolve all parameters for ${stringify(token)}: (${args.join(', ')}).`);\n  }\n\n  // The constructor function appears to have no parameters.\n  // This might be because it inherits from a super-class. In which case, use an injectable\n  // def from an ancestor if there is one.\n  // Otherwise this really is a simple class with no dependencies, so return a factory that\n  // just instantiates the zero-arg constructor.\n  const inheritedInjectableDef = getInheritedInjectableDef(token);\n  if (inheritedInjectableDef !== null) {\n    return () => inheritedInjectableDef.factory(token as Type<any>);\n  } else {\n    return () => new (token as Type<any>)();\n  }\n}\n\nfunction providerToRecord(provider: SingleProvider): Record<any> {\n  if (isValueProvider(provider)) {\n    return makeRecord(undefined, provider.useValue);\n  } else {\n    const factory: (() => any)|undefined = providerToFactory(provider);\n    return makeRecord(factory, NOT_YET);\n  }\n}\n\n/**\n * Converts a `SingleProvider` into a factory function.\n *\n * @param provider provider to convert to factory\n */\nexport function providerToFactory(\n    provider: SingleProvider, ngModuleType?: InjectorType<any>, providers?: any[]): () => any {\n  let factory: (() => any)|undefined = undefined;\n  if (ngDevMode && isImportedNgModuleProviders(provider)) {\n    throwInvalidProviderError(undefined, providers, provider);\n  }\n\n  if (isTypeProvider(provider)) {\n    const unwrappedProvider = resolveForwardRef(provider);\n    return getFactoryDef(unwrappedProvider) || injectableDefOrInjectorDefFactory(unwrappedProvider);\n  } else {\n    if (isValueProvider(provider)) {\n      factory = () => resolveForwardRef(provider.useValue);\n    } else if (isFactoryProvider(provider)) {\n      factory = () => provider.useFactory(...injectArgs(provider.deps || []));\n    } else if (isExistingProvider(provider)) {\n      factory = () => ɵɵinject(resolveForwardRef(provider.useExisting));\n    } else {\n      const classRef = resolveForwardRef(\n          provider &&\n          ((provider as StaticClassProvider | ClassProvider).useClass || provider.provide));\n      if (ngDevMode && !classRef) {\n        throwInvalidProviderError(ngModuleType, providers, provider);\n      }\n      if (hasDeps(provider)) {\n        factory = () => new (classRef)(...injectArgs(provider.deps));\n      } else {\n        return getFactoryDef(classRef) || injectableDefOrInjectorDefFactory(classRef);\n      }\n    }\n  }\n  return factory;\n}\n\nfunction makeRecord<T>(\n    factory: (() => T)|undefined, value: T|{}, multi: boolean = false): Record<T> {\n  return {\n    factory: factory,\n    value: value,\n    multi: multi ? [] : undefined,\n  };\n}\n\nfunction hasDeps(value: ClassProvider|ConstructorProvider|\n                 StaticClassProvider): value is ClassProvider&{deps: any[]} {\n  return !!(value as any).deps;\n}\n\nfunction hasOnDestroy(value: any): value is OnDestroy {\n  return value !== null && typeof value === 'object' &&\n      typeof (value as OnDestroy).ngOnDestroy === 'function';\n}\n\nfunction couldBeInjectableType(value: any): value is ProviderToken<any> {\n  return (typeof value === 'function') ||\n      (typeof value === 'object' && value instanceof InjectionToken);\n}\n\nfunction isImportedNgModuleProviders(provider: Provider|ImportedNgModuleProviders):\n    provider is ImportedNgModuleProviders {\n  return !!(provider as ImportedNgModuleProviders).ɵproviders;\n}\n\nfunction forEachSingleProvider(\n    providers: Array<Provider|ImportedNgModuleProviders>,\n    fn: (provider: SingleProvider) => void): void {\n  for (const provider of providers) {\n    if (Array.isArray(provider)) {\n      forEachSingleProvider(provider, fn);\n    } else if (isImportedNgModuleProviders(provider)) {\n      forEachSingleProvider(provider.ɵproviders, fn);\n    } else {\n      fn(provider);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {Injector} from '../di/injector';\nimport {EnvironmentInjector} from '../di/r3_injector';\nimport {Type} from '../interface/type';\n\nimport {ElementRef} from './element_ref';\nimport {NgModuleRef} from './ng_module_factory';\nimport {ViewRef} from './view_ref';\n\n/**\n * Represents a component created by a `ComponentFactory`.\n * Provides access to the component instance and related objects,\n * and provides the means of destroying the instance.\n *\n * @publicApi\n */\nexport abstract class ComponentRef<C> {\n  /**\n   * Updates a specified input name to a new value. Using this method will properly mark for check\n   * component using the `OnPush` change detection strategy. It will also assure that the\n   * `OnChanges` lifecycle hook runs when a dynamically created component is change-detected.\n   *\n   * @param name The name of an input.\n   * @param value The new value of an input.\n   */\n  abstract setInput(name: string, value: unknown): void;\n\n  /**\n   * The host or anchor [element](guide/glossary#element) for this component instance.\n   */\n  abstract get location(): ElementRef;\n\n  /**\n   * The [dependency injector](guide/glossary#injector) for this component instance.\n   */\n  abstract get injector(): Injector;\n\n  /**\n   * This component instance.\n   */\n  abstract get instance(): C;\n\n  /**\n   * The [host view](guide/glossary#view-tree) defined by the template\n   * for this component instance.\n   */\n  abstract get hostView(): ViewRef;\n\n  /**\n   * The change detector for this component instance.\n   */\n  abstract get changeDetectorRef(): ChangeDetectorRef;\n\n  /**\n   * The type of this component (as created by a `ComponentFactory` class).\n   */\n  abstract get componentType(): Type<any>;\n\n  /**\n   * Destroys the component instance and all of the data structures associated with it.\n   */\n  abstract destroy(): void;\n\n  /**\n   * A lifecycle hook that provides additional developer-defined cleanup\n   * functionality for the component.\n   * @param callback A handler function that cleans up developer-defined data\n   * associated with this component. Called when the `destroy()` method is invoked.\n   */\n  abstract onDestroy(callback: Function): void;\n}\n\n/**\n * Base class for a factory that can create a component dynamically.\n * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n *\n * @see [Dynamic Components](guide/dynamic-component-loader)\n *\n * @publicApi\n *\n * @deprecated Angular no longer requires Component factories. Please use other APIs where\n *     Component class can be used directly.\n */\nexport abstract class ComponentFactory<C> {\n  /**\n   * The component's HTML selector.\n   */\n  abstract get selector(): string;\n  /**\n   * The type of component the factory will create.\n   */\n  abstract get componentType(): Type<any>;\n  /**\n   * Selector for all <ng-content> elements in the component.\n   */\n  abstract get ngContentSelectors(): string[];\n  /**\n   * The inputs of the component.\n   */\n  abstract get inputs(): {propName: string, templateName: string}[];\n  /**\n   * The outputs of the component.\n   */\n  abstract get outputs(): {propName: string, templateName: string}[];\n  /**\n   * Creates a new component.\n   */\n  abstract create(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      environmentInjector?: EnvironmentInjector|NgModuleRef<any>): ComponentRef<C>;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../interface/type';\nimport {stringify} from '../util/stringify';\n\nimport {ComponentFactory} from './component_factory';\n\nexport function noComponentFactoryError(component: Function) {\n  const error = Error(`No component factory found for ${\n      stringify(component)}. Did you add it to @NgModule.entryComponents?`);\n  (error as any)[ERROR_COMPONENT] = component;\n  return error;\n}\n\nconst ERROR_COMPONENT = 'ngComponent';\n\nexport function getComponent(error: Error): Type<any> {\n  return (error as any)[ERROR_COMPONENT];\n}\n\n\nclass _NullComponentFactoryResolver implements ComponentFactoryResolver {\n  resolveComponentFactory<T>(component: {new(...args: any[]): T}): ComponentFactory<T> {\n    throw noComponentFactoryError(component);\n  }\n}\n\n/**\n * A simple registry that maps `Components` to generated `ComponentFactory` classes\n * that can be used to create instances of components.\n * Use to obtain the factory for a given component type,\n * then use the factory's `create()` method to create a component of that type.\n *\n * Note: since v13, dynamic component creation via\n * [`ViewContainerRef.createComponent`](api/core/ViewContainerRef#createComponent)\n * does **not** require resolving component factory: component class can be used directly.\n *\n * @publicApi\n *\n * @deprecated Angular no longer requires Component factories. Please use other APIs where\n *     Component class can be used directly.\n */\nexport abstract class ComponentFactoryResolver {\n  static NULL: ComponentFactoryResolver = (/* @__PURE__ */ new _NullComponentFactoryResolver());\n  /**\n   * Retrieves the factory object that creates a component of the given type.\n   * @param component The component type.\n   */\n  abstract resolveComponentFactory<T>(component: Type<T>): ComponentFactory<T>;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TNode} from '../render3/interfaces/node';\nimport {RElement} from '../render3/interfaces/renderer_dom';\nimport {LView} from '../render3/interfaces/view';\nimport {getCurrentTNode, getLView} from '../render3/state';\nimport {getNativeByTNode} from '../render3/util/view_utils';\n\n/**\n * Creates an ElementRef from the most recent node.\n *\n * @returns The ElementRef instance to use\n */\nexport function injectElementRef(): ElementRef {\n  return createElementRef(getCurrentTNode()!, getLView());\n}\n\n/**\n * Creates an ElementRef given a node.\n *\n * @param tNode The node for which you'd like an ElementRef\n * @param lView The view to which the node belongs\n * @returns The ElementRef instance to use\n */\nexport function createElementRef(tNode: TNode, lView: LView): ElementRef {\n  return new ElementRef(getNativeByTNode(tNode, lView) as RElement);\n}\n\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * @security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\n// Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n// i.e. users have to ask for what they need. With that, we can build better analysis tools\n// and could do better codegen in the future.\nexport class ElementRef<T = any> {\n  /**\n   * The underlying native element or `null` if direct access to native elements is not supported\n   * (e.g. when the application runs in a web worker).\n   *\n   * <div class=\"callout is-critical\">\n   *   <header>Use with caution</header>\n   *   <p>\n   *    Use this API as the last resort when direct access to DOM is needed. Use templating and\n   *    data-binding provided by Angular instead. Alternatively you can take a look at {@link\n   * Renderer2}\n   *    which provides API that can safely be used even when direct access to native elements is not\n   *    supported.\n   *   </p>\n   *   <p>\n   *    Relying on direct DOM access creates tight coupling between your application and rendering\n   *    layers which will make it impossible to separate the two and deploy your application into a\n   *    web worker.\n   *   </p>\n   * </div>\n   *\n   */\n  public nativeElement: T;\n\n  constructor(nativeElement: T) {\n    this.nativeElement = nativeElement;\n  }\n\n  /**\n   * @internal\n   * @nocollapse\n   */\n  static __NG_ELEMENT_ID__: () => ElementRef = injectElementRef;\n}\n\n/**\n * Unwraps `ElementRef` and return the `nativeElement`.\n *\n * @param value value to unwrap\n * @returns `nativeElement` if `ElementRef` otherwise returns value as is.\n */\nexport function unwrapElementRef<T, R>(value: T|ElementRef<R>): T|R {\n  return value instanceof ElementRef ? value.nativeElement : value;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '../di/injection_token';\nimport {isLView} from '../render3/interfaces/type_checks';\nimport {RENDERER} from '../render3/interfaces/view';\nimport {getCurrentTNode, getLView} from '../render3/state';\nimport {getComponentLViewByIndex} from '../render3/util/view_utils';\n\nimport {RendererStyleFlags2, RendererType2} from './api_flags';\n\n\nexport const Renderer2Interceptor = new InjectionToken<Renderer2[]>('Renderer2Interceptor');\n\n\n/**\n * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n *\n * @publicApi\n */\nexport abstract class RendererFactory2 {\n  /**\n   * Creates and initializes a custom renderer for a host DOM element.\n   * @param hostElement The element to render.\n   * @param type The base class to implement.\n   * @returns The new custom renderer instance.\n   */\n  abstract createRenderer(hostElement: any, type: RendererType2|null): Renderer2;\n  /**\n   * A callback invoked when rendering has begun.\n   */\n  abstract begin?(): void;\n  /**\n   * A callback invoked when rendering has completed.\n   */\n  abstract end?(): void;\n  /**\n   * Use with animations test-only mode. Notifies the test when rendering has completed.\n   * @returns The asynchronous result of the developer-defined function.\n   */\n  abstract whenRenderingDone?(): Promise<any>;\n}\n\n\n/**\n * Extend this base class to implement custom rendering. By default, Angular\n * renders a template into DOM. You can use custom rendering to intercept\n * rendering calls, or to render to something other than DOM.\n *\n * Create your custom renderer using `RendererFactory2`.\n *\n * Use a custom renderer to bypass Angular's templating and\n * make custom UI changes that can't be expressed declaratively.\n * For example if you need to set a property or an attribute whose name is\n * not statically known, use the `setProperty()` or\n * `setAttribute()` method.\n *\n * @publicApi\n */\nexport abstract class Renderer2 {\n  /**\n   * Use to store arbitrary developer-defined data on a renderer instance,\n   * as an object containing key-value pairs.\n   * This is useful for renderers that delegate to other renderers.\n   */\n  abstract get data(): {[key: string]: any};\n\n  /**\n   * Implement this callback to destroy the renderer or the host element.\n   */\n  abstract destroy(): void;\n  /**\n   * Implement this callback to create an instance of the host element.\n   * @param name An identifying name for the new element, unique within the namespace.\n   * @param namespace The namespace for the new element.\n   * @returns The new element.\n   */\n  abstract createElement(name: string, namespace?: string|null): any;\n  /**\n   * Implement this callback to add a comment to the DOM of the host element.\n   * @param value The comment text.\n   * @returns The modified element.\n   */\n  abstract createComment(value: string): any;\n\n  /**\n   * Implement this callback to add text to the DOM of the host element.\n   * @param value The text string.\n   * @returns The modified element.\n   */\n  abstract createText(value: string): any;\n  /**\n   * If null or undefined, the view engine won't call it.\n   * This is used as a performance optimization for production mode.\n   */\n  // TODO(issue/24571): remove '!'.\n  destroyNode!: ((node: any) => void)|null;\n  /**\n   * Appends a child to a given parent node in the host element DOM.\n   * @param parent The parent node.\n   * @param newChild The new child node.\n   */\n  abstract appendChild(parent: any, newChild: any): void;\n  /**\n   * Implement this callback to insert a child node at a given position in a parent node\n   * in the host element DOM.\n   * @param parent The parent node.\n   * @param newChild The new child nodes.\n   * @param refChild The existing child node before which `newChild` is inserted.\n   * @param isMove Optional argument which signifies if the current `insertBefore` is a result of a\n   *     move. Animation uses this information to trigger move animations. In the past the Animation\n   *     would always assume that any `insertBefore` is a move. This is not strictly true because\n   *     with runtime i18n it is possible to invoke `insertBefore` as a result of i18n and it should\n   *     not trigger an animation move.\n   */\n  abstract insertBefore(parent: any, newChild: any, refChild: any, isMove?: boolean): void;\n  /**\n   * Implement this callback to remove a child node from the host element's DOM.\n   * @param parent The parent node.\n   * @param oldChild The child node to remove.\n   * @param isHostElement Optionally signal to the renderer whether this element is a host element\n   * or not\n   */\n  abstract removeChild(parent: any, oldChild: any, isHostElement?: boolean): void;\n  /**\n   * Implement this callback to prepare an element to be bootstrapped\n   * as a root element, and return the element instance.\n   * @param selectorOrNode The DOM element.\n   * @param preserveContent Whether the contents of the root element\n   * should be preserved, or cleared upon bootstrap (default behavior).\n   * Use with `ViewEncapsulation.ShadowDom` to allow simple native\n   * content projection via `<slot>` elements.\n   * @returns The root element.\n   */\n  abstract selectRootElement(selectorOrNode: string|any, preserveContent?: boolean): any;\n  /**\n   * Implement this callback to get the parent of a given node\n   * in the host element's DOM.\n   * @param node The child node to query.\n   * @returns The parent node, or null if there is no parent.\n   * For WebWorkers, always returns true.\n   * This is because the check is synchronous,\n   * and the caller can't rely on checking for null.\n   */\n  abstract parentNode(node: any): any;\n  /**\n   * Implement this callback to get the next sibling node of a given node\n   * in the host element's DOM.\n   * @returns The sibling node, or null if there is no sibling.\n   * For WebWorkers, always returns a value.\n   * This is because the check is synchronous,\n   * and the caller can't rely on checking for null.\n   */\n  abstract nextSibling(node: any): any;\n  /**\n   * Implement this callback to set an attribute value for an element in the DOM.\n   * @param el The element.\n   * @param name The attribute name.\n   * @param value The new value.\n   * @param namespace The namespace.\n   */\n  abstract setAttribute(el: any, name: string, value: string, namespace?: string|null): void;\n\n  /**\n   * Implement this callback to remove an attribute from an element in the DOM.\n   * @param el The element.\n   * @param name The attribute name.\n   * @param namespace The namespace.\n   */\n  abstract removeAttribute(el: any, name: string, namespace?: string|null): void;\n  /**\n   * Implement this callback to add a class to an element in the DOM.\n   * @param el The element.\n   * @param name The class name.\n   */\n  abstract addClass(el: any, name: string): void;\n\n  /**\n   * Implement this callback to remove a class from an element in the DOM.\n   * @param el The element.\n   * @param name The class name.\n   */\n  abstract removeClass(el: any, name: string): void;\n\n  /**\n   * Implement this callback to set a CSS style for an element in the DOM.\n   * @param el The element.\n   * @param style The name of the style.\n   * @param value The new value.\n   * @param flags Flags for style variations. No flags are set by default.\n   */\n  abstract setStyle(el: any, style: string, value: any, flags?: RendererStyleFlags2): void;\n\n  /**\n   * Implement this callback to remove the value from a CSS style for an element in the DOM.\n   * @param el The element.\n   * @param style The name of the style.\n   * @param flags Flags for style variations to remove, if set. ???\n   */\n  abstract removeStyle(el: any, style: string, flags?: RendererStyleFlags2): void;\n\n  /**\n   * Implement this callback to set the value of a property of an element in the DOM.\n   * @param el The element.\n   * @param name The property name.\n   * @param value The new value.\n   */\n  abstract setProperty(el: any, name: string, value: any): void;\n\n  /**\n   * Implement this callback to set the value of a node in the host element.\n   * @param node The node.\n   * @param value The new value.\n   */\n  abstract setValue(node: any, value: string): void;\n\n  /**\n   * Implement this callback to start an event listener.\n   * @param target The context in which to listen for events. Can be\n   * the entire window or document, the body of the document, or a specific\n   * DOM element.\n   * @param eventName The event to listen for.\n   * @param callback A handler function to invoke when the event occurs.\n   * @returns An \"unlisten\" function for disposing of this handler.\n   */\n  abstract listen(\n      target: 'window'|'document'|'body'|any, eventName: string,\n      callback: (event: any) => boolean | void): () => void;\n\n  /**\n   * @internal\n   * @nocollapse\n   */\n  static __NG_ELEMENT_ID__: () => Renderer2 = () => injectRenderer2();\n}\n\n/** Injects a Renderer2 for the current component. */\nexport function injectRenderer2(): Renderer2 {\n  // We need the Renderer to be based on the component that it's being injected into, however since\n  // DI happens before we've entered its view, `getLView` will return the parent view instead.\n  const lView = getLView();\n  const tNode = getCurrentTNode()!;\n  const nodeAtIndex = getComponentLViewByIndex(tNode.index, lView);\n  return (isLView(nodeAtIndex) ? nodeAtIndex : lView)[RENDERER] as Renderer2;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵɵdefineInjectable} from '../di/interface/defs';\nimport {SecurityContext} from './security';\n\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * @publicApi\n */\nexport abstract class Sanitizer {\n  abstract sanitize(context: SecurityContext, value: {}|string|null): string|null;\n  /** @nocollapse */\n  static ɵprov = /** @pureOrBreakMyCode */ ɵɵdefineInjectable({\n    token: Sanitizer,\n    providedIn: 'root',\n    factory: () => null,\n  });\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @description Represents the version of Angular\n *\n * @publicApi\n */\nexport class Version {\n  public readonly major: string;\n  public readonly minor: string;\n  public readonly patch: string;\n\n  constructor(public full: string) {\n    this.major = full.split('.')[0];\n    this.minor = full.split('.')[1];\n    this.patch = full.split('.').slice(2).join('.');\n  }\n}\n\n/**\n * @publicApi\n */\nexport const VERSION = new Version('14.1.0');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nexport const NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {formatRuntimeError, RuntimeError, RuntimeErrorCode} from '../../errors';\nimport {Type} from '../../interface/type';\nimport {CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, SchemaMetadata} from '../../metadata/schema';\nimport {throwError} from '../../util/assert';\nimport {getComponentDef} from '../definition';\nimport {ComponentDef} from '../interfaces/definition';\nimport {TNodeType} from '../interfaces/node';\nimport {RComment, RElement} from '../interfaces/renderer_dom';\nimport {CONTEXT, DECLARATION_COMPONENT_VIEW, LView} from '../interfaces/view';\nimport {isAnimationProp} from '../util/attrs_utils';\n\nlet shouldThrowErrorOnUnknownElement = false;\n\n/**\n * Sets a strict mode for JIT-compiled components to throw an error on unknown elements,\n * instead of just logging the error.\n * (for AOT-compiled ones this check happens at build time).\n */\nexport function ɵsetUnknownElementStrictMode(shouldThrow: boolean) {\n  shouldThrowErrorOnUnknownElement = shouldThrow;\n}\n\n/**\n * Gets the current value of the strict mode.\n */\nexport function ɵgetUnknownElementStrictMode() {\n  return shouldThrowErrorOnUnknownElement;\n}\n\nlet shouldThrowErrorOnUnknownProperty = false;\n\n/**\n * Sets a strict mode for JIT-compiled components to throw an error on unknown properties,\n * instead of just logging the error.\n * (for AOT-compiled ones this check happens at build time).\n */\nexport function ɵsetUnknownPropertyStrictMode(shouldThrow: boolean) {\n  shouldThrowErrorOnUnknownProperty = shouldThrow;\n}\n\n/**\n * Gets the current value of the strict mode.\n */\nexport function ɵgetUnknownPropertyStrictMode() {\n  return shouldThrowErrorOnUnknownProperty;\n}\n\n/**\n * Validates that the element is known at runtime and produces\n * an error if it's not the case.\n * This check is relevant for JIT-compiled components (for AOT-compiled\n * ones this check happens at build time).\n *\n * The element is considered known if either:\n * - it's a known HTML element\n * - it's a known custom element\n * - the element matches any directive\n * - the element is allowed by one of the schemas\n *\n * @param element Element to validate\n * @param lView An `LView` that represents a current component that is being rendered\n * @param tagName Name of the tag to check\n * @param schemas Array of schemas\n * @param hasDirectives Boolean indicating that the element matches any directive\n */\nexport function validateElementIsKnown(\n    element: RElement, lView: LView, tagName: string|null, schemas: SchemaMetadata[]|null,\n    hasDirectives: boolean): void {\n  // If `schemas` is set to `null`, that's an indication that this Component was compiled in AOT\n  // mode where this check happens at compile time. In JIT mode, `schemas` is always present and\n  // defined as an array (as an empty array in case `schemas` field is not defined) and we should\n  // execute the check below.\n  if (schemas === null) return;\n\n  // If the element matches any directive, it's considered as valid.\n  if (!hasDirectives && tagName !== null) {\n    // The element is unknown if it's an instance of HTMLUnknownElement, or it isn't registered\n    // as a custom element. Note that unknown elements with a dash in their name won't be instances\n    // of HTMLUnknownElement in browsers that support web components.\n    const isUnknown =\n        // Note that we can't check for `typeof HTMLUnknownElement === 'function'`,\n        // because while most browsers return 'function', IE returns 'object'.\n        (typeof HTMLUnknownElement !== 'undefined' && HTMLUnknownElement &&\n         element instanceof HTMLUnknownElement) ||\n        (typeof customElements !== 'undefined' && tagName.indexOf('-') > -1 &&\n         !customElements.get(tagName));\n\n    if (isUnknown && !matchingSchemas(schemas, tagName)) {\n      const isHostStandalone = isHostComponentStandalone(lView);\n      const templateLocation = getTemplateLocationDetails(lView);\n      const schemas = `'${isHostStandalone ? '@Component' : '@NgModule'}.schemas'`;\n\n      let message = `'${tagName}' is not a known element${templateLocation}:\\n`;\n      message += `1. If '${tagName}' is an Angular component, then verify that it is ${\n          isHostStandalone ? 'included in the \\'@Component.imports\\' of this component' :\n                             'a part of an @NgModule where this component is declared'}.\\n`;\n      if (tagName && tagName.indexOf('-') > -1) {\n        message +=\n            `2. If '${tagName}' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the ${\n                schemas} of this component to suppress this message.`;\n      } else {\n        message +=\n            `2. To allow any element add 'NO_ERRORS_SCHEMA' to the ${schemas} of this component.`;\n      }\n      if (shouldThrowErrorOnUnknownElement) {\n        throw new RuntimeError(RuntimeErrorCode.UNKNOWN_ELEMENT, message);\n      } else {\n        console.error(formatRuntimeError(RuntimeErrorCode.UNKNOWN_ELEMENT, message));\n      }\n    }\n  }\n}\n\n/**\n * Validates that the property of the element is known at runtime and returns\n * false if it's not the case.\n * This check is relevant for JIT-compiled components (for AOT-compiled\n * ones this check happens at build time).\n *\n * The property is considered known if either:\n * - it's a known property of the element\n * - the element is allowed by one of the schemas\n * - the property is used for animations\n *\n * @param element Element to validate\n * @param propName Name of the property to check\n * @param tagName Name of the tag hosting the property\n * @param schemas Array of schemas\n */\nexport function isPropertyValid(\n    element: RElement|RComment, propName: string, tagName: string|null,\n    schemas: SchemaMetadata[]|null): boolean {\n  // If `schemas` is set to `null`, that's an indication that this Component was compiled in AOT\n  // mode where this check happens at compile time. In JIT mode, `schemas` is always present and\n  // defined as an array (as an empty array in case `schemas` field is not defined) and we should\n  // execute the check below.\n  if (schemas === null) return true;\n\n  // The property is considered valid if the element matches the schema, it exists on the element,\n  // or it is synthetic, and we are in a browser context (web worker nodes should be skipped).\n  if (matchingSchemas(schemas, tagName) || propName in element || isAnimationProp(propName)) {\n    return true;\n  }\n\n  // Note: `typeof Node` returns 'function' in most browsers, but on IE it is 'object' so we\n  // need to account for both here, while being careful with `typeof null` also returning 'object'.\n  return typeof Node === 'undefined' || Node === null || !(element instanceof Node);\n}\n\n/**\n * Logs or throws an error that a property is not supported on an element.\n *\n * @param propName Name of the invalid property\n * @param tagName Name of the tag hosting the property\n * @param nodeType Type of the node hosting the property\n * @param lView An `LView` that represents a current component\n */\nexport function handleUnknownPropertyError(\n    propName: string, tagName: string|null, nodeType: TNodeType, lView: LView): void {\n  // Special-case a situation when a structural directive is applied to\n  // an `<ng-template>` element, for example: `<ng-template *ngIf=\"true\">`.\n  // In this case the compiler generates the `ɵɵtemplate` instruction with\n  // the `null` as the tagName. The directive matching logic at runtime relies\n  // on this effect (see `isInlineTemplate`), thus using the 'ng-template' as\n  // a default value of the `tNode.value` is not feasible at this moment.\n  if (!tagName && nodeType === TNodeType.Container) {\n    tagName = 'ng-template';\n  }\n\n  const isHostStandalone = isHostComponentStandalone(lView);\n  const templateLocation = getTemplateLocationDetails(lView);\n\n  let message = `Can't bind to '${propName}' since it isn't a known property of '${tagName}'${\n      templateLocation}.`;\n\n  const schemas = `'${isHostStandalone ? '@Component' : '@NgModule'}.schemas'`;\n  const importLocation = isHostStandalone ?\n      'included in the \\'@Component.imports\\' of this component' :\n      'a part of an @NgModule where this component is declared';\n  if (KNOWN_CONTROL_FLOW_DIRECTIVES.has(propName)) {\n    // Most likely this is a control flow directive (such as `*ngIf`) used in\n    // a template, but the `CommonModule` is not imported.\n    message += `\\nIf the '${propName}' is an Angular control flow directive, ` +\n        `please make sure that the 'CommonModule' is ${importLocation}.`;\n  } else {\n    // May be an Angular component, which is not imported/declared?\n    message += `\\n1. If '${tagName}' is an Angular component and it has the ` +\n        `'${propName}' input, then verify that it is ${importLocation}.`;\n    // May be a Web Component?\n    if (tagName && tagName.indexOf('-') > -1) {\n      message += `\\n2. If '${tagName}' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' ` +\n          `to the ${schemas} of this component to suppress this message.`;\n      message += `\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to ` +\n          `the ${schemas} of this component.`;\n    } else {\n      // If it's expected, the error can be suppressed by the `NO_ERRORS_SCHEMA` schema.\n      message += `\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to ` +\n          `the ${schemas} of this component.`;\n    }\n  }\n\n  reportUnknownPropertyError(message);\n}\n\nexport function reportUnknownPropertyError(message: string) {\n  if (shouldThrowErrorOnUnknownProperty) {\n    throw new RuntimeError(RuntimeErrorCode.UNKNOWN_BINDING, message);\n  } else {\n    console.error(formatRuntimeError(RuntimeErrorCode.UNKNOWN_BINDING, message));\n  }\n}\n\n/**\n * WARNING: this is a **dev-mode only** function (thus should always be guarded by the `ngDevMode`)\n * and must **not** be used in production bundles. The function makes megamorphic reads, which might\n * be too slow for production mode and also it relies on the constructor function being available.\n *\n * Gets a reference to the host component def (where a current component is declared).\n *\n * @param lView An `LView` that represents a current component that is being rendered.\n */\nfunction getDeclarationComponentDef(lView: LView): ComponentDef<unknown>|null {\n  !ngDevMode && throwError('Must never be called in production mode');\n\n  const declarationLView = lView[DECLARATION_COMPONENT_VIEW] as LView<Type<unknown>>;\n  const context = declarationLView[CONTEXT];\n\n  // Unable to obtain a context.\n  if (!context) return null;\n\n  return context.constructor ? getComponentDef(context.constructor) : null;\n}\n\n/**\n * WARNING: this is a **dev-mode only** function (thus should always be guarded by the `ngDevMode`)\n * and must **not** be used in production bundles. The function makes megamorphic reads, which might\n * be too slow for production mode.\n *\n * Checks if the current component is declared inside of a standalone component template.\n *\n * @param lView An `LView` that represents a current component that is being rendered.\n */\nexport function isHostComponentStandalone(lView: LView): boolean {\n  !ngDevMode && throwError('Must never be called in production mode');\n\n  const componentDef = getDeclarationComponentDef(lView);\n  // Treat host component as non-standalone if we can't obtain the def.\n  return !!componentDef?.standalone;\n}\n\n/**\n * WARNING: this is a **dev-mode only** function (thus should always be guarded by the `ngDevMode`)\n * and must **not** be used in production bundles. The function makes megamorphic reads, which might\n * be too slow for production mode.\n *\n * Constructs a string describing the location of the host component template. The function is used\n * in dev mode to produce error messages.\n *\n * @param lView An `LView` that represents a current component that is being rendered.\n */\nfunction getTemplateLocationDetails(lView: LView): string {\n  !ngDevMode && throwError('Must never be called in production mode');\n\n  const hostComponentDef = getDeclarationComponentDef(lView);\n  const componentClassName = hostComponentDef?.type?.name;\n  return componentClassName ? ` (used in the '${componentClassName}' component template)` : '';\n}\n\n/**\n * The set of known control flow directives.\n * We use this set to produce a more precises error message with a note\n * that the `CommonModule` should also be included.\n */\nexport const KNOWN_CONTROL_FLOW_DIRECTIVES =\n    new Set(['ngIf', 'ngFor', 'ngSwitch', 'ngSwitchCase', 'ngSwitchDefault']);\n\n/**\n * Returns true if the tag name is allowed by specified schemas.\n * @param schemas Array of schemas\n * @param tagName Name of the tag\n */\nexport function matchingSchemas(schemas: SchemaMetadata[]|null, tagName: string|null): boolean {\n  if (schemas !== null) {\n    for (let i = 0; i < schemas.length; i++) {\n      const schema = schemas[i];\n      if (schema === NO_ERRORS_SCHEMA ||\n          schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport const ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n\nexport function wrappedError(message: string, originalError: any): Error {\n  const msg = `${message} caused by: ${\n      originalError instanceof Error ? originalError.message : originalError}`;\n  const error = Error(msg);\n  (error as any)[ERROR_ORIGINAL_ERROR] = originalError;\n  return error;\n}\n\nexport function getOriginalError(error: Error): Error {\n  return (error as any)[ERROR_ORIGINAL_ERROR];\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getOriginalError} from './util/errors';\n\n/**\n * Provides a hook for centralized exception handling.\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * @NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * @publicApi\n */\nexport class ErrorHandler {\n  /**\n   * @internal\n   */\n  _console: Console = console;\n\n  handleError(error: any): void {\n    const originalError = this._findOriginalError(error);\n\n    this._console.error('ERROR', error);\n    if (originalError) {\n      this._console.error('ORIGINAL ERROR', originalError);\n    }\n  }\n\n  /** @internal */\n  _findOriginalError(error: any): Error|null {\n    let e = error && getOriginalError(error);\n    while (e && getOriginalError(e)) {\n      e = getOriginalError(e);\n    }\n\n    return e || null;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Disallowed strings in the comment.\n *\n * see: https://html.spec.whatwg.org/multipage/syntax.html#comments\n */\nconst COMMENT_DISALLOWED = /^>|^->|<!--|-->|--!>|<!-$/g;\n/**\n * Delimiter in the disallowed strings which needs to be wrapped with zero with character.\n */\nconst COMMENT_DELIMITER = /(<|>)/;\nconst COMMENT_DELIMITER_ESCAPED = '\\u200B$1\\u200B';\n\n/**\n * Escape the content of comment strings so that it can be safely inserted into a comment node.\n *\n * The issue is that HTML does not specify any way to escape comment end text inside the comment.\n * Consider: `<!-- The way you close a comment is with \">\", and \"->\" at the beginning or by \"-->\" or\n * \"--!>\" at the end. -->`. Above the `\"-->\"` is meant to be text not an end to the comment. This\n * can be created programmatically through DOM APIs. (`<!--` are also disallowed.)\n *\n * see: https://html.spec.whatwg.org/multipage/syntax.html#comments\n *\n * ```\n * div.innerHTML = div.innerHTML\n * ```\n *\n * One would expect that the above code would be safe to do, but it turns out that because comment\n * text is not escaped, the comment may contain text which will prematurely close the comment\n * opening up the application for XSS attack. (In SSR we programmatically create comment nodes which\n * may contain such text and expect them to be safe.)\n *\n * This function escapes the comment text by looking for comment delimiters (`<` and `>`) and\n * surrounding them with `_>_` where the `_` is a zero width space `\\u200B`. The result is that if a\n * comment contains any of the comment start/end delimiters (such as `<!--`, `-->` or `--!>`) the\n * text it will render normally but it will not cause the HTML parser to close/open the comment.\n *\n * @param value text to make safe for comment node by escaping the comment open/close character\n *     sequence.\n */\nexport function escapeCommentText(value: string): string {\n  return value.replace(\n      COMMENT_DISALLOWED, (text) => text.replace(COMMENT_DELIMITER, COMMENT_DELIMITER_ESCAPED));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {assertNumber} from '../../util/assert';\n\nimport {ID, LView} from './view';\n\n// Keeps track of the currently-active LViews.\nconst TRACKED_LVIEWS = new Map<number, LView>();\n\n// Used for generating unique IDs for LViews.\nlet uniqueIdCounter = 0;\n\n/** Gets a unique ID that can be assigned to an LView. */\nexport function getUniqueLViewId(): number {\n  return uniqueIdCounter++;\n}\n\n/** Starts tracking an LView. */\nexport function registerLView(lView: LView): void {\n  ngDevMode && assertNumber(lView[ID], 'LView must have an ID in order to be registered');\n  TRACKED_LVIEWS.set(lView[ID], lView);\n}\n\n/** Gets an LView by its unique ID. */\nexport function getLViewById(id: number): LView|null {\n  ngDevMode && assertNumber(id, 'ID used for LView lookup must be a number');\n  return TRACKED_LVIEWS.get(id) || null;\n}\n\n/** Stops tracking an LView. */\nexport function unregisterLView(lView: LView): void {\n  ngDevMode && assertNumber(lView[ID], 'Cannot stop tracking an LView that does not have an ID');\n  TRACKED_LVIEWS.delete(lView[ID]);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport '../util/ng_dev_mode';\n\nimport {assertDefined, assertDomNode} from '../util/assert';\nimport {EMPTY_ARRAY} from '../util/empty';\n\nimport {assertLView} from './assert';\nimport {LContext} from './interfaces/context';\nimport {getLViewById, registerLView} from './interfaces/lview_tracking';\nimport {TNode, TNodeFlags} from './interfaces/node';\nimport {RElement, RNode} from './interfaces/renderer_dom';\nimport {isLView} from './interfaces/type_checks';\nimport {CONTEXT, HEADER_OFFSET, HOST, ID, LView, TVIEW} from './interfaces/view';\nimport {getComponentLViewByIndex, unwrapRNode} from './util/view_utils';\n\n\n\n/**\n * Returns the matching `LContext` data for a given DOM node, directive or component instance.\n *\n * This function will examine the provided DOM element, component, or directive instance\\'s\n * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n * value will be that of the newly created `LContext`.\n *\n * If the monkey-patched value is the `LView` instance then the context value for that\n * target will be created and the monkey-patch reference will be updated. Therefore when this\n * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n * directive\\'s monkey-patch values.\n *\n * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n * is found which contains a monkey-patch reference. When that occurs then the provided element\n * will be updated with a new context (which is then returned). If the monkey-patch value is not\n * detected for a component/directive instance then it will throw an error (all components and\n * directives should be automatically monkey-patched by ivy).\n *\n * @param target Component, Directive or DOM Node.\n */\nexport function getLContext(target: any): LContext|null {\n  let mpValue = readPatchedData(target);\n  if (mpValue) {\n    // only when it's an array is it considered an LView instance\n    // ... otherwise it's an already constructed LContext instance\n    if (isLView(mpValue)) {\n      const lView: LView = mpValue!;\n      let nodeIndex: number;\n      let component: any = undefined;\n      let directives: any[]|null|undefined = undefined;\n\n      if (isComponentInstance(target)) {\n        nodeIndex = findViaComponent(lView, target);\n        if (nodeIndex == -1) {\n          throw new Error('The provided component was not found in the application');\n        }\n        component = target;\n      } else if (isDirectiveInstance(target)) {\n        nodeIndex = findViaDirective(lView, target);\n        if (nodeIndex == -1) {\n          throw new Error('The provided directive was not found in the application');\n        }\n        directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n      } else {\n        nodeIndex = findViaNativeElement(lView, target as RElement);\n        if (nodeIndex == -1) {\n          return null;\n        }\n      }\n\n      // the goal is not to fill the entire context full of data because the lookups\n      // are expensive. Instead, only the target data (the element, component, container, ICU\n      // expression or directive details) are filled into the context. If called multiple times\n      // with different target values then the missing target data will be filled in.\n      const native = unwrapRNode(lView[nodeIndex]);\n      const existingCtx = readPatchedData(native);\n      const context: LContext = (existingCtx && !Array.isArray(existingCtx)) ?\n          existingCtx :\n          createLContext(lView, nodeIndex, native);\n\n      // only when the component has been discovered then update the monkey-patch\n      if (component && context.component === undefined) {\n        context.component = component;\n        attachPatchData(context.component, context);\n      }\n\n      // only when the directives have been discovered then update the monkey-patch\n      if (directives && context.directives === undefined) {\n        context.directives = directives;\n        for (let i = 0; i < directives.length; i++) {\n          attachPatchData(directives[i], context);\n        }\n      }\n\n      attachPatchData(context.native, context);\n      mpValue = context;\n    }\n  } else {\n    const rElement = target as RElement;\n    ngDevMode && assertDomNode(rElement);\n\n    // if the context is not found then we need to traverse upwards up the DOM\n    // to find the nearest element that has already been monkey patched with data\n    let parent = rElement as any;\n    while (parent = parent.parentNode) {\n      const parentContext = readPatchedData(parent);\n      if (parentContext) {\n        const lView = Array.isArray(parentContext) ? parentContext as LView : parentContext.lView;\n\n        // the edge of the app was also reached here through another means\n        // (maybe because the DOM was changed manually).\n        if (!lView) {\n          return null;\n        }\n\n        const index = findViaNativeElement(lView, rElement);\n        if (index >= 0) {\n          const native = unwrapRNode(lView[index]);\n          const context = createLContext(lView, index, native);\n          attachPatchData(native, context);\n          mpValue = context;\n          break;\n        }\n      }\n    }\n  }\n  return (mpValue as LContext) || null;\n}\n\n/**\n * Creates an empty instance of a `LContext` context\n */\nfunction createLContext(lView: LView, nodeIndex: number, native: RNode): LContext {\n  return new LContext(lView[ID], nodeIndex, native);\n}\n\n/**\n * Takes a component instance and returns the view for that component.\n *\n * @param componentInstance\n * @returns The component's view\n */\nexport function getComponentViewByInstance(componentInstance: {}): LView {\n  let patchedData = readPatchedData(componentInstance);\n  let lView: LView;\n\n  if (isLView(patchedData)) {\n    const contextLView: LView = patchedData;\n    const nodeIndex = findViaComponent(contextLView, componentInstance);\n    lView = getComponentLViewByIndex(nodeIndex, contextLView);\n    const context = createLContext(contextLView, nodeIndex, lView[HOST] as RElement);\n    context.component = componentInstance;\n    attachPatchData(componentInstance, context);\n    attachPatchData(context.native, context);\n  } else {\n    const context = patchedData as unknown as LContext;\n    const contextLView = context.lView!;\n    ngDevMode && assertLView(contextLView);\n    lView = getComponentLViewByIndex(context.nodeIndex, contextLView);\n  }\n  return lView;\n}\n\n/**\n * This property will be monkey-patched on elements, components and directives.\n */\nconst MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n/**\n * Assigns the given data to the given target (which could be a component,\n * directive or DOM node instance) using monkey-patching.\n */\nexport function attachPatchData(target: any, data: LView|LContext) {\n  ngDevMode && assertDefined(target, 'Target expected');\n  // Only attach the ID of the view in order to avoid memory leaks (see #41047). We only do this\n  // for `LView`, because we have control over when an `LView` is created and destroyed, whereas\n  // we can't know when to remove an `LContext`.\n  if (isLView(data)) {\n    target[MONKEY_PATCH_KEY_NAME] = data[ID];\n    registerLView(data);\n  } else {\n    target[MONKEY_PATCH_KEY_NAME] = data;\n  }\n}\n\n/**\n * Returns the monkey-patch value data present on the target (which could be\n * a component, directive or a DOM node).\n */\nexport function readPatchedData(target: any): LView|LContext|null {\n  ngDevMode && assertDefined(target, 'Target expected');\n  const data = target[MONKEY_PATCH_KEY_NAME];\n  return (typeof data === 'number') ? getLViewById(data) : data || null;\n}\n\nexport function readPatchedLView<T>(target: any): LView<T>|null {\n  const value = readPatchedData(target);\n  if (value) {\n    return (isLView(value) ? value : value.lView) as LView<T>;\n  }\n  return null;\n}\n\nexport function isComponentInstance(instance: any): boolean {\n  return instance && instance.constructor && instance.constructor.ɵcmp;\n}\n\nexport function isDirectiveInstance(instance: any): boolean {\n  return instance && instance.constructor && instance.constructor.ɵdir;\n}\n\n/**\n * Locates the element within the given LView and returns the matching index\n */\nfunction findViaNativeElement(lView: LView, target: RElement): number {\n  const tView = lView[TVIEW];\n  for (let i = HEADER_OFFSET; i < tView.bindingStartIndex; i++) {\n    if (unwrapRNode(lView[i]) === target) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n/**\n * Locates the next tNode (child, sibling or parent).\n */\nfunction traverseNextElement(tNode: TNode): TNode|null {\n  if (tNode.child) {\n    return tNode.child;\n  } else if (tNode.next) {\n    return tNode.next;\n  } else {\n    // Let's take the following template: <div><span>text</span></div><component/>\n    // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n    // in this case the parent `div`, so that we can find the component.\n    while (tNode.parent && !tNode.parent.next) {\n      tNode = tNode.parent;\n    }\n    return tNode.parent && tNode.parent.next;\n  }\n}\n\n/**\n * Locates the component within the given LView and returns the matching index\n */\nfunction findViaComponent(lView: LView, componentInstance: {}): number {\n  const componentIndices = lView[TVIEW].components;\n  if (componentIndices) {\n    for (let i = 0; i < componentIndices.length; i++) {\n      const elementComponentIndex = componentIndices[i];\n      const componentView = getComponentLViewByIndex(elementComponentIndex, lView);\n      if (componentView[CONTEXT] === componentInstance) {\n        return elementComponentIndex;\n      }\n    }\n  } else {\n    const rootComponentView = getComponentLViewByIndex(HEADER_OFFSET, lView);\n    const rootComponent = rootComponentView[CONTEXT];\n    if (rootComponent === componentInstance) {\n      // we are dealing with the root element here therefore we know that the\n      // element is the very first element after the HEADER data in the lView\n      return HEADER_OFFSET;\n    }\n  }\n  return -1;\n}\n\n/**\n * Locates the directive within the given LView and returns the matching index\n */\nfunction findViaDirective(lView: LView, directiveInstance: {}): number {\n  // if a directive is monkey patched then it will (by default)\n  // have a reference to the LView of the current view. The\n  // element bound to the directive being search lives somewhere\n  // in the view data. We loop through the nodes and check their\n  // list of directives for the instance.\n  let tNode = lView[TVIEW].firstChild;\n  while (tNode) {\n    const directiveIndexStart = tNode.directiveStart;\n    const directiveIndexEnd = tNode.directiveEnd;\n    for (let i = directiveIndexStart; i < directiveIndexEnd; i++) {\n      if (lView[i] === directiveInstance) {\n        return tNode.index;\n      }\n    }\n    tNode = traverseNextElement(tNode);\n  }\n  return -1;\n}\n\n/**\n * Returns a list of directives extracted from the given view based on the\n * provided list of directive index values.\n *\n * @param nodeIndex The node index\n * @param lView The target view data\n * @param includeComponents Whether or not to include components in returned directives\n */\nexport function getDirectivesAtNodeIndex(\n    nodeIndex: number, lView: LView, includeComponents: boolean): any[]|null {\n  const tNode = lView[TVIEW].data[nodeIndex] as TNode;\n  let directiveStartIndex = tNode.directiveStart;\n  if (directiveStartIndex == 0) return EMPTY_ARRAY;\n  const directiveEndIndex = tNode.directiveEnd;\n  if (!includeComponents && tNode.flags & TNodeFlags.isComponentHost) directiveStartIndex++;\n  return lView.slice(directiveStartIndex, directiveEndIndex);\n}\n\nexport function getComponentAtNodeIndex(nodeIndex: number, lView: LView): {}|null {\n  const tNode = lView[TVIEW].data[nodeIndex] as TNode;\n  let directiveStartIndex = tNode.directiveStart;\n  return tNode.flags & TNodeFlags.isComponentHost ? lView[directiveStartIndex] : null;\n}\n\n/**\n * Returns a map of local references (local reference name => element or directive instance) that\n * exist on a given element.\n */\nexport function discoverLocalRefs(lView: LView, nodeIndex: number): {[key: string]: any}|null {\n  const tNode = lView[TVIEW].data[nodeIndex] as TNode;\n  if (tNode && tNode.localNames) {\n    const result: {[key: string]: any} = {};\n    let localIndex = tNode.index + 1;\n    for (let i = 0; i < tNode.localNames.length; i += 2) {\n      result[tNode.localNames[i]] = lView[localIndex];\n      localIndex++;\n    }\n    return result;\n  }\n\n  return null;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {global} from '../../util/global';\nimport {RElement} from '../interfaces/renderer_dom';\n\n\nexport const defaultScheduler =\n    (() => (\n               typeof requestAnimationFrame !== 'undefined' &&\n                   requestAnimationFrame ||  // browser only\n               setTimeout                    // everything else\n               )\n               .bind(global))();\n\n/**\n *\n * @codeGenApi\n */\nexport function ɵɵresolveWindow(element: RElement&{ownerDocument: Document}) {\n  return element.ownerDocument.defaultView;\n}\n\n/**\n *\n * @codeGenApi\n */\nexport function ɵɵresolveDocument(element: RElement&{ownerDocument: Document}) {\n  return element.ownerDocument;\n}\n\n/**\n *\n * @codeGenApi\n */\nexport function ɵɵresolveBody(element: RElement&{ownerDocument: Document}) {\n  return element.ownerDocument.body;\n}\n\n/**\n * The special delimiter we use to separate property names, prefixes, and suffixes\n * in property binding metadata. See storeBindingMetadata().\n *\n * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n * because it is a very uncommon character that is unlikely to be part of a user's\n * property names or interpolation strings. If it is in fact used in a property\n * binding, DebugElement.properties will not return the correct value for that\n * binding. However, there should be no runtime effect for real applications.\n *\n * This character is typically rendered as a question mark inside of a diamond.\n * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n *\n */\nexport const INTERPOLATION_DELIMITER = `�`;\n\n/**\n * Unwrap a value which might be behind a closure (for forward declaration reasons).\n */\nexport function maybeUnwrapFn<T>(value: T|(() => T)): T {\n  if (value instanceof Function) {\n    return value();\n  } else {\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ViewEncapsulation} from '../metadata/view';\n\n\n/**\n * Used by `RendererFactory2` to associate custom rendering data and styles\n * with a rendering implementation.\n *  @publicApi\n */\nexport interface RendererType2 {\n  /**\n   * A unique identifying string for the new renderer, used when creating\n   * unique styles for encapsulation.\n   */\n  id: string;\n  /**\n   * The view encapsulation type, which determines how styles are applied to\n   * DOM elements. One of\n   * - `Emulated` (default): Emulate native scoping of styles.\n   * - `Native`: Use the native encapsulation mechanism of the renderer.\n   * - `ShadowDom`: Use modern [Shadow\n   * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n   * create a ShadowRoot for component's host element.\n   * - `None`: Do not provide any template or style encapsulation.\n   */\n  encapsulation: ViewEncapsulation;\n  /**\n   * Defines CSS styles to be stored on a renderer instance.\n   */\n  styles: (string|any[])[];\n  /**\n   * Defines arbitrary developer-defined data to be stored on a renderer instance.\n   * This is useful for renderers that delegate to other renderers.\n   */\n  data: {[kind: string]: any};\n}\n\n\n/**\n * Flags for renderer-specific style modifiers.\n * @publicApi\n */\nexport enum RendererStyleFlags2 {\n  // TODO(misko): This needs to be refactored into a separate file so that it can be imported from\n  // `node_manipulation.ts` Currently doing the import cause resolution order to change and fails\n  // the tests. The work around is to have hard coded value in `node_manipulation.ts` for now.\n  /**\n   * Marks a style as important.\n   */\n  Important = 1 << 0,\n  /**\n   * Marks a style as using dash case naming (this-is-dash-case).\n   */\n  DashCase = 1 << 1\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview\n *\n * This file provides mechanism by which code relevant to the `TIcuContainerNode` is only loaded if\n * ICU is present in the template.\n */\n\nimport {TIcuContainerNode} from '../interfaces/node';\nimport {RNode} from '../interfaces/renderer_dom';\nimport {LView} from '../interfaces/view';\n\n\nlet _icuContainerIterate: (tIcuContainerNode: TIcuContainerNode, lView: LView) =>\n    (() => RNode | null);\n\n/**\n * Iterator which provides ability to visit all of the `TIcuContainerNode` root `RNode`s.\n */\nexport function icuContainerIterate(tIcuContainerNode: TIcuContainerNode, lView: LView): () =>\n    RNode | null {\n  return _icuContainerIterate(tIcuContainerNode, lView);\n}\n\n/**\n * Ensures that `IcuContainerVisitor`'s implementation is present.\n *\n * This function is invoked when i18n instruction comes across an ICU. The purpose is to allow the\n * bundler to tree shake ICU logic and only load it if ICU instruction is executed.\n */\nexport function ensureIcuContainerVisitorLoaded(\n    loader: () => ((tIcuContainerNode: TIcuContainerNode, lView: LView) => (() => RNode | null))) {\n  if (_icuContainerIterate === undefined) {\n    // Do not inline this function. We want to keep `ensureIcuContainerVisitorLoaded` light, so it\n    // can be inlined into call-site.\n    _icuContainerIterate = loader();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {assertDefined} from '../../util/assert';\nimport {assertLView} from '../assert';\nimport {readPatchedLView} from '../context_discovery';\nimport {LContainer} from '../interfaces/container';\nimport {isLContainer, isLView} from '../interfaces/type_checks';\nimport {CHILD_HEAD, CONTEXT, FLAGS, LView, LViewFlags, NEXT, PARENT, RootContext} from '../interfaces/view';\n\n\n/**\n * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n * that LContainer, which is an LView\n * @param lView the lView whose parent to get\n */\nexport function getLViewParent(lView: LView): LView|null {\n  ngDevMode && assertLView(lView);\n  const parent = lView[PARENT];\n  return isLContainer(parent) ? parent[PARENT]! : parent;\n}\n\n/**\n * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param componentOrLView any component or `LView`\n */\nexport function getRootView<T>(componentOrLView: LView|{}): LView<T> {\n  ngDevMode && assertDefined(componentOrLView, 'component');\n  let lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView)!;\n  while (lView && !(lView[FLAGS] & LViewFlags.IsRoot)) {\n    lView = getLViewParent(lView)!;\n  }\n  ngDevMode && assertLView(lView);\n  return lView as LView<T>;\n}\n\n/**\n * Returns the `RootContext` instance that is associated with\n * the application where the target is situated. It does this by walking the parent views until it\n * gets to the root view, then getting the context off of that.\n *\n * @param viewOrComponent the `LView` or component to get the root context for.\n */\nexport function getRootContext<T>(viewOrComponent: LView<T>|{}): RootContext {\n  const rootView = getRootView(viewOrComponent);\n  ngDevMode &&\n      assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n  return rootView[CONTEXT] as RootContext;\n}\n\n\n/**\n * Gets the first `LContainer` in the LView or `null` if none exists.\n */\nexport function getFirstLContainer(lView: LView): LContainer|null {\n  return getNearestLContainer(lView[CHILD_HEAD]);\n}\n\n/**\n * Gets the next `LContainer` that is a sibling of the given container.\n */\nexport function getNextLContainer(container: LContainer): LContainer|null {\n  return getNearestLContainer(container[NEXT]);\n}\n\nfunction getNearestLContainer(viewOrContainer: LContainer|LView|null) {\n  while (viewOrContainer !== null && !isLContainer(viewOrContainer)) {\n    viewOrContainer = viewOrContainer[NEXT];\n  }\n  return viewOrContainer as LContainer | null;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ViewEncapsulation} from '../metadata/view';\nimport {RendererStyleFlags2} from '../render/api_flags';\nimport {addToArray, removeFromArray} from '../util/array_utils';\nimport {assertDefined, assertEqual, assertFunction, assertString} from '../util/assert';\nimport {escapeCommentText} from '../util/dom';\n\nimport {assertLContainer, assertLView, assertParentView, assertProjectionSlots, assertTNodeForLView} from './assert';\nimport {attachPatchData} from './context_discovery';\nimport {icuContainerIterate} from './i18n/i18n_tree_shaking';\nimport {CONTAINER_HEADER_OFFSET, HAS_TRANSPLANTED_VIEWS, LContainer, MOVED_VIEWS, NATIVE, unusedValueExportToPlacateAjd as unused1} from './interfaces/container';\nimport {ComponentDef} from './interfaces/definition';\nimport {NodeInjectorFactory} from './interfaces/injector';\nimport {unregisterLView} from './interfaces/lview_tracking';\nimport {TElementNode, TIcuContainerNode, TNode, TNodeFlags, TNodeType, TProjectionNode, unusedValueExportToPlacateAjd as unused2} from './interfaces/node';\nimport {unusedValueExportToPlacateAjd as unused3} from './interfaces/projection';\nimport {Renderer, unusedValueExportToPlacateAjd as unused4} from './interfaces/renderer';\nimport {RComment, RElement, RNode, RTemplate, RText} from './interfaces/renderer_dom';\nimport {isLContainer, isLView} from './interfaces/type_checks';\nimport {CHILD_HEAD, CLEANUP, DECLARATION_COMPONENT_VIEW, DECLARATION_LCONTAINER, DestroyHookData, FLAGS, HookData, HookFn, HOST, LView, LViewFlags, NEXT, PARENT, QUERIES, RENDERER, T_HOST, TVIEW, TView, TViewType, unusedValueExportToPlacateAjd as unused5} from './interfaces/view';\nimport {assertTNodeType} from './node_assert';\nimport {profiler, ProfilerEvent} from './profiler';\nimport {getLViewParent} from './util/view_traversal_utils';\nimport {getNativeByTNode, unwrapRNode, updateTransplantedViewCount} from './util/view_utils';\n\n\n\nconst unusedValueToPlacateAjd = unused1 + unused2 + unused3 + unused4 + unused5;\n\nconst enum WalkTNodeTreeAction {\n  /** node create in the native environment. Run on initial creation. */\n  Create = 0,\n\n  /**\n   * node insert in the native environment.\n   * Run when existing node has been detached and needs to be re-attached.\n   */\n  Insert = 1,\n\n  /** node detach from the native environment */\n  Detach = 2,\n\n  /** node destruction using the renderer's API */\n  Destroy = 3,\n}\n\n\n\n/**\n * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n * being passed as an argument.\n */\nfunction applyToElementOrContainer(\n    action: WalkTNodeTreeAction, renderer: Renderer, parent: RElement|null,\n    lNodeToHandle: RNode|LContainer|LView, beforeNode?: RNode|null) {\n  // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n  // won't be created until i18nApply() in the update block, so this node should be skipped.\n  // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n  // in `i18n_spec.ts`.\n  if (lNodeToHandle != null) {\n    let lContainer: LContainer|undefined;\n    let isComponent = false;\n    // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n    // wrapped in an array which needs to be unwrapped. We need to know if it is a component and if\n    // it has LContainer so that we can process all of those cases appropriately.\n    if (isLContainer(lNodeToHandle)) {\n      lContainer = lNodeToHandle;\n    } else if (isLView(lNodeToHandle)) {\n      isComponent = true;\n      ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n      lNodeToHandle = lNodeToHandle[HOST]!;\n    }\n    const rNode: RNode = unwrapRNode(lNodeToHandle);\n\n    if (action === WalkTNodeTreeAction.Create && parent !== null) {\n      if (beforeNode == null) {\n        nativeAppendChild(renderer, parent, rNode);\n      } else {\n        nativeInsertBefore(renderer, parent, rNode, beforeNode || null, true);\n      }\n    } else if (action === WalkTNodeTreeAction.Insert && parent !== null) {\n      nativeInsertBefore(renderer, parent, rNode, beforeNode || null, true);\n    } else if (action === WalkTNodeTreeAction.Detach) {\n      nativeRemoveNode(renderer, rNode, isComponent);\n    } else if (action === WalkTNodeTreeAction.Destroy) {\n      ngDevMode && ngDevMode.rendererDestroyNode++;\n      renderer.destroyNode!(rNode);\n    }\n    if (lContainer != null) {\n      applyContainer(renderer, action, lContainer, parent, beforeNode);\n    }\n  }\n}\n\nexport function createTextNode(renderer: Renderer, value: string): RText {\n  ngDevMode && ngDevMode.rendererCreateTextNode++;\n  ngDevMode && ngDevMode.rendererSetText++;\n  return renderer.createText(value);\n}\n\nexport function updateTextNode(renderer: Renderer, rNode: RText, value: string): void {\n  ngDevMode && ngDevMode.rendererSetText++;\n  renderer.setValue(rNode, value);\n}\n\nexport function createCommentNode(renderer: Renderer, value: string): RComment {\n  ngDevMode && ngDevMode.rendererCreateComment++;\n  return renderer.createComment(escapeCommentText(value));\n}\n\n/**\n * Creates a native element from a tag name, using a renderer.\n * @param renderer A renderer to use\n * @param name the tag name\n * @param namespace Optional namespace for element.\n * @returns the element created\n */\nexport function createElementNode(\n    renderer: Renderer, name: string, namespace: string|null): RElement {\n  ngDevMode && ngDevMode.rendererCreateElement++;\n  return renderer.createElement(name, namespace);\n}\n\n\n/**\n * Removes all DOM elements associated with a view.\n *\n * Because some root nodes of the view may be containers, we sometimes need\n * to propagate deeply into the nested containers to remove all elements in the\n * views beneath it.\n *\n * @param tView The `TView' of the `LView` from which elements should be added or removed\n * @param lView The view from which elements should be added or removed\n */\nexport function removeViewFromContainer(tView: TView, lView: LView): void {\n  const renderer = lView[RENDERER];\n  applyView(tView, lView, renderer, WalkTNodeTreeAction.Detach, null, null);\n  lView[HOST] = null;\n  lView[T_HOST] = null;\n}\n\n/**\n * Adds all DOM elements associated with a view.\n *\n * Because some root nodes of the view may be containers, we sometimes need\n * to propagate deeply into the nested containers to add all elements in the\n * views beneath it.\n *\n * @param tView The `TView' of the `LView` from which elements should be added or removed\n * @param parentTNode The `TNode` where the `LView` should be attached to.\n * @param renderer Current renderer to use for DOM manipulations.\n * @param lView The view from which elements should be added or removed\n * @param parentNativeNode The parent `RElement` where it should be inserted into.\n * @param beforeNode The node before which elements should be added, if insert mode\n */\nexport function addViewToContainer(\n    tView: TView, parentTNode: TNode, renderer: Renderer, lView: LView, parentNativeNode: RElement,\n    beforeNode: RNode|null): void {\n  lView[HOST] = parentNativeNode;\n  lView[T_HOST] = parentTNode;\n  applyView(tView, lView, renderer, WalkTNodeTreeAction.Insert, parentNativeNode, beforeNode);\n}\n\n\n/**\n * Detach a `LView` from the DOM by detaching its nodes.\n *\n * @param tView The `TView' of the `LView` to be detached\n * @param lView the `LView` to be detached.\n */\nexport function renderDetachView(tView: TView, lView: LView) {\n  applyView(tView, lView, lView[RENDERER], WalkTNodeTreeAction.Detach, null, null);\n}\n\n/**\n * Traverses down and up the tree of views and containers to remove listeners and\n * call onDestroy callbacks.\n *\n * Notes:\n *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n *  - Must process containers instead of their views to avoid splicing\n *  when views are destroyed and re-added.\n *  - Using a while loop because it's faster than recursion\n *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n *\n *  @param rootView The view to destroy\n */\nexport function destroyViewTree(rootView: LView): void {\n  // If the view has no children, we can clean it up and return early.\n  let lViewOrLContainer = rootView[CHILD_HEAD];\n  if (!lViewOrLContainer) {\n    return cleanUpView(rootView[TVIEW], rootView);\n  }\n\n  while (lViewOrLContainer) {\n    let next: LView|LContainer|null = null;\n\n    if (isLView(lViewOrLContainer)) {\n      // If LView, traverse down to child.\n      next = lViewOrLContainer[CHILD_HEAD];\n    } else {\n      ngDevMode && assertLContainer(lViewOrLContainer);\n      // If container, traverse down to its first LView.\n      const firstView: LView|undefined = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n      if (firstView) next = firstView;\n    }\n\n    if (!next) {\n      // Only clean up view when moving to the side or up, as destroy hooks\n      // should be called in order from the bottom up.\n      while (lViewOrLContainer && !lViewOrLContainer![NEXT] && lViewOrLContainer !== rootView) {\n        if (isLView(lViewOrLContainer)) {\n          cleanUpView(lViewOrLContainer[TVIEW], lViewOrLContainer);\n        }\n        lViewOrLContainer = lViewOrLContainer[PARENT];\n      }\n      if (lViewOrLContainer === null) lViewOrLContainer = rootView;\n      if (isLView(lViewOrLContainer)) {\n        cleanUpView(lViewOrLContainer[TVIEW], lViewOrLContainer);\n      }\n      next = lViewOrLContainer && lViewOrLContainer![NEXT];\n    }\n    lViewOrLContainer = next;\n  }\n}\n\n/**\n * Inserts a view into a container.\n *\n * This adds the view to the container's array of active views in the correct\n * position. It also adds the view's elements to the DOM if the container isn't a\n * root node of another view (in that case, the view's elements will be added when\n * the container's parent view is added later).\n *\n * @param tView The `TView' of the `LView` to insert\n * @param lView The view to insert\n * @param lContainer The container into which the view should be inserted\n * @param index Which index in the container to insert the child view into\n */\nexport function insertView(tView: TView, lView: LView, lContainer: LContainer, index: number) {\n  ngDevMode && assertLView(lView);\n  ngDevMode && assertLContainer(lContainer);\n  const indexInContainer = CONTAINER_HEADER_OFFSET + index;\n  const containerLength = lContainer.length;\n\n  if (index > 0) {\n    // This is a new view, we need to add it to the children.\n    lContainer[indexInContainer - 1][NEXT] = lView;\n  }\n  if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n    lView[NEXT] = lContainer[indexInContainer];\n    addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n  } else {\n    lContainer.push(lView);\n    lView[NEXT] = null;\n  }\n\n  lView[PARENT] = lContainer;\n\n  // track views where declaration and insertion points are different\n  const declarationLContainer = lView[DECLARATION_LCONTAINER];\n  if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n    trackMovedView(declarationLContainer, lView);\n  }\n\n  // notify query that a new view has been added\n  const lQueries = lView[QUERIES];\n  if (lQueries !== null) {\n    lQueries.insertView(tView);\n  }\n\n  // Sets the attached flag\n  lView[FLAGS] |= LViewFlags.Attached;\n}\n\n/**\n * Track views created from the declaration container (TemplateRef) and inserted into a\n * different LContainer.\n */\nfunction trackMovedView(declarationContainer: LContainer, lView: LView) {\n  ngDevMode && assertDefined(lView, 'LView required');\n  ngDevMode && assertLContainer(declarationContainer);\n  const movedViews = declarationContainer[MOVED_VIEWS];\n  const insertedLContainer = lView[PARENT] as LContainer;\n  ngDevMode && assertLContainer(insertedLContainer);\n  const insertedComponentLView = insertedLContainer[PARENT]![DECLARATION_COMPONENT_VIEW];\n  ngDevMode && assertDefined(insertedComponentLView, 'Missing insertedComponentLView');\n  const declaredComponentLView = lView[DECLARATION_COMPONENT_VIEW];\n  ngDevMode && assertDefined(declaredComponentLView, 'Missing declaredComponentLView');\n  if (declaredComponentLView !== insertedComponentLView) {\n    // At this point the declaration-component is not same as insertion-component; this means that\n    // this is a transplanted view. Mark the declared lView as having transplanted views so that\n    // those views can participate in CD.\n    declarationContainer[HAS_TRANSPLANTED_VIEWS] = true;\n  }\n  if (movedViews === null) {\n    declarationContainer[MOVED_VIEWS] = [lView];\n  } else {\n    movedViews.push(lView);\n  }\n}\n\nfunction detachMovedView(declarationContainer: LContainer, lView: LView) {\n  ngDevMode && assertLContainer(declarationContainer);\n  ngDevMode &&\n      assertDefined(\n          declarationContainer[MOVED_VIEWS],\n          'A projected view should belong to a non-empty projected views collection');\n  const movedViews = declarationContainer[MOVED_VIEWS]!;\n  const declarationViewIndex = movedViews.indexOf(lView);\n  const insertionLContainer = lView[PARENT] as LContainer;\n  ngDevMode && assertLContainer(insertionLContainer);\n\n  // If the view was marked for refresh but then detached before it was checked (where the flag\n  // would be cleared and the counter decremented), we need to decrement the view counter here\n  // instead.\n  if (lView[FLAGS] & LViewFlags.RefreshTransplantedView) {\n    lView[FLAGS] &= ~LViewFlags.RefreshTransplantedView;\n    updateTransplantedViewCount(insertionLContainer, -1);\n  }\n\n  movedViews.splice(declarationViewIndex, 1);\n}\n\n/**\n * Detaches a view from a container.\n *\n * This method removes the view from the container's array of active views. It also\n * removes the view's elements from the DOM.\n *\n * @param lContainer The container from which to detach a view\n * @param removeIndex The index of the view to detach\n * @returns Detached LView instance.\n */\nexport function detachView(lContainer: LContainer, removeIndex: number): LView|undefined {\n  if (lContainer.length <= CONTAINER_HEADER_OFFSET) return;\n\n  const indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n  const viewToDetach = lContainer[indexInContainer];\n\n  if (viewToDetach) {\n    const declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n    if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n      detachMovedView(declarationLContainer, viewToDetach);\n    }\n\n\n    if (removeIndex > 0) {\n      lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT] as LView;\n    }\n    const removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n    removeViewFromContainer(viewToDetach[TVIEW], viewToDetach);\n\n    // notify query that a view has been removed\n    const lQueries = removedLView[QUERIES];\n    if (lQueries !== null) {\n      lQueries.detachView(removedLView[TVIEW]);\n    }\n\n    viewToDetach[PARENT] = null;\n    viewToDetach[NEXT] = null;\n    // Unsets the attached flag\n    viewToDetach[FLAGS] &= ~LViewFlags.Attached;\n  }\n  return viewToDetach;\n}\n\n/**\n * A standalone function which destroys an LView,\n * conducting clean up (e.g. removing listeners, calling onDestroys).\n *\n * @param tView The `TView' of the `LView` to be destroyed\n * @param lView The view to be destroyed.\n */\nexport function destroyLView(tView: TView, lView: LView) {\n  if (!(lView[FLAGS] & LViewFlags.Destroyed)) {\n    const renderer = lView[RENDERER];\n    if (renderer.destroyNode) {\n      applyView(tView, lView, renderer, WalkTNodeTreeAction.Destroy, null, null);\n    }\n\n    destroyViewTree(lView);\n  }\n}\n\n/**\n * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n * can be propagated to @Output listeners.\n *\n * @param tView `TView` for the `LView` to clean up.\n * @param lView The LView to clean up\n */\nfunction cleanUpView(tView: TView, lView: LView): void {\n  if (!(lView[FLAGS] & LViewFlags.Destroyed)) {\n    // Usually the Attached flag is removed when the view is detached from its parent, however\n    // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n    lView[FLAGS] &= ~LViewFlags.Attached;\n\n    // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n    // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n    // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n    // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n    // really more of an \"afterDestroy\" hook if you think about it.\n    lView[FLAGS] |= LViewFlags.Destroyed;\n\n    executeOnDestroys(tView, lView);\n    processCleanups(tView, lView);\n    // For component views only, the local renderer is destroyed at clean up time.\n    if (lView[TVIEW].type === TViewType.Component) {\n      ngDevMode && ngDevMode.rendererDestroy++;\n      lView[RENDERER].destroy();\n    }\n\n    const declarationContainer = lView[DECLARATION_LCONTAINER];\n    // we are dealing with an embedded view that is still inserted into a container\n    if (declarationContainer !== null && isLContainer(lView[PARENT])) {\n      // and this is a projected view\n      if (declarationContainer !== lView[PARENT]) {\n        detachMovedView(declarationContainer, lView);\n      }\n\n      // For embedded views still attached to a container: remove query result from this view.\n      const lQueries = lView[QUERIES];\n      if (lQueries !== null) {\n        lQueries.detachView(tView);\n      }\n    }\n\n    // Unregister the view once everything else has been cleaned up.\n    unregisterLView(lView);\n  }\n}\n\n/** Removes listeners and unsubscribes from output subscriptions */\nfunction processCleanups(tView: TView, lView: LView): void {\n  const tCleanup = tView.cleanup;\n  const lCleanup = lView[CLEANUP]!;\n  // `LCleanup` contains both share information with `TCleanup` as well as instance specific\n  // information appended at the end. We need to know where the end of the `TCleanup` information\n  // is, and we track this with `lastLCleanupIndex`.\n  let lastLCleanupIndex = -1;\n  if (tCleanup !== null) {\n    for (let i = 0; i < tCleanup.length - 1; i += 2) {\n      if (typeof tCleanup[i] === 'string') {\n        // This is a native DOM listener\n        const idxOrTargetGetter = tCleanup[i + 1];\n        const target = typeof idxOrTargetGetter === 'function' ?\n            idxOrTargetGetter(lView) :\n            unwrapRNode(lView[idxOrTargetGetter]);\n        const listener = lCleanup[lastLCleanupIndex = tCleanup[i + 2]];\n        const useCaptureOrSubIdx = tCleanup[i + 3];\n        if (typeof useCaptureOrSubIdx === 'boolean') {\n          // native DOM listener registered with Renderer3\n          target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n        } else {\n          if (useCaptureOrSubIdx >= 0) {\n            // unregister\n            lCleanup[lastLCleanupIndex = useCaptureOrSubIdx]();\n          } else {\n            // Subscription\n            lCleanup[lastLCleanupIndex = -useCaptureOrSubIdx].unsubscribe();\n          }\n        }\n        i += 2;\n      } else {\n        // This is a cleanup function that is grouped with the index of its context\n        const context = lCleanup[lastLCleanupIndex = tCleanup[i + 1]];\n        tCleanup[i].call(context);\n      }\n    }\n  }\n  if (lCleanup !== null) {\n    for (let i = lastLCleanupIndex + 1; i < lCleanup.length; i++) {\n      const instanceCleanupFn = lCleanup[i];\n      ngDevMode && assertFunction(instanceCleanupFn, 'Expecting instance cleanup function.');\n      instanceCleanupFn();\n    }\n    lView[CLEANUP] = null;\n  }\n}\n\n/** Calls onDestroy hooks for this view */\nfunction executeOnDestroys(tView: TView, lView: LView): void {\n  let destroyHooks: DestroyHookData|null;\n\n  if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n    for (let i = 0; i < destroyHooks.length; i += 2) {\n      const context = lView[destroyHooks[i] as number];\n\n      // Only call the destroy hook if the context has been requested.\n      if (!(context instanceof NodeInjectorFactory)) {\n        const toCall = destroyHooks[i + 1] as HookFn | HookData;\n\n        if (Array.isArray(toCall)) {\n          for (let j = 0; j < toCall.length; j += 2) {\n            const callContext = context[toCall[j] as number];\n            const hook = toCall[j + 1] as HookFn;\n            profiler(ProfilerEvent.LifecycleHookStart, callContext, hook);\n            try {\n              hook.call(callContext);\n            } finally {\n              profiler(ProfilerEvent.LifecycleHookEnd, callContext, hook);\n            }\n          }\n        } else {\n          profiler(ProfilerEvent.LifecycleHookStart, context, toCall);\n          try {\n            toCall.call(context);\n          } finally {\n            profiler(ProfilerEvent.LifecycleHookEnd, context, toCall);\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Returns a native element if a node can be inserted into the given parent.\n *\n * There are two reasons why we may not be able to insert a element immediately.\n * - Projection: When creating a child content element of a component, we have to skip the\n *   insertion because the content of a component will be projected.\n *   `<component><content>delayed due to projection</content></component>`\n * - Parent container is disconnected: This can happen when we are inserting a view into\n *   parent container, which itself is disconnected. For example the parent container is part\n *   of a View which has not be inserted or is made for projection but has not been inserted\n *   into destination.\n *\n * @param tView: Current `TView`.\n * @param tNode: `TNode` for which we wish to retrieve render parent.\n * @param lView: Current `LView`.\n */\nexport function getParentRElement(tView: TView, tNode: TNode, lView: LView): RElement|null {\n  return getClosestRElement(tView, tNode.parent, lView);\n}\n\n/**\n * Get closest `RElement` or `null` if it can't be found.\n *\n * If `TNode` is `TNodeType.Element` => return `RElement` at `LView[tNode.index]` location.\n * If `TNode` is `TNodeType.ElementContainer|IcuContain` => return the parent (recursively).\n * If `TNode` is `null` then return host `RElement`:\n *   - return `null` if projection\n *   - return `null` if parent container is disconnected (we have no parent.)\n *\n * @param tView: Current `TView`.\n * @param tNode: `TNode` for which we wish to retrieve `RElement` (or `null` if host element is\n *     needed).\n * @param lView: Current `LView`.\n * @returns `null` if the `RElement` can't be determined at this time (no parent / projection)\n */\nexport function getClosestRElement(tView: TView, tNode: TNode|null, lView: LView): RElement|null {\n  let parentTNode: TNode|null = tNode;\n  // Skip over element and ICU containers as those are represented by a comment node and\n  // can't be used as a render parent.\n  while (parentTNode !== null &&\n         (parentTNode.type & (TNodeType.ElementContainer | TNodeType.Icu))) {\n    tNode = parentTNode;\n    parentTNode = tNode.parent;\n  }\n\n  // If the parent tNode is null, then we are inserting across views: either into an embedded view\n  // or a component view.\n  if (parentTNode === null) {\n    // We are inserting a root element of the component view into the component host element and\n    // it should always be eager.\n    return lView[HOST];\n  } else {\n    ngDevMode && assertTNodeType(parentTNode, TNodeType.AnyRNode | TNodeType.Container);\n    if (parentTNode.flags & TNodeFlags.isComponentHost) {\n      ngDevMode && assertTNodeForLView(parentTNode, lView);\n      const encapsulation =\n          (tView.data[parentTNode.directiveStart] as ComponentDef<unknown>).encapsulation;\n      // We've got a parent which is an element in the current view. We just need to verify if the\n      // parent element is not a component. Component's content nodes are not inserted immediately\n      // because they will be projected, and so doing insert at this point would be wasteful.\n      // Since the projection would then move it to its final destination. Note that we can't\n      // make this assumption when using the Shadow DOM, because the native projection placeholders\n      // (<content> or <slot>) have to be in place as elements are being inserted.\n      if (encapsulation === ViewEncapsulation.None ||\n          encapsulation === ViewEncapsulation.Emulated) {\n        return null;\n      }\n    }\n\n    return getNativeByTNode(parentTNode, lView) as RElement;\n  }\n}\n\n/**\n * Inserts a native node before another native node for a given parent.\n * This is a utility function that can be used when native nodes were determined.\n */\nexport function nativeInsertBefore(\n    renderer: Renderer, parent: RElement, child: RNode, beforeNode: RNode|null,\n    isMove: boolean): void {\n  ngDevMode && ngDevMode.rendererInsertBefore++;\n  renderer.insertBefore(parent, child, beforeNode, isMove);\n}\n\nfunction nativeAppendChild(renderer: Renderer, parent: RElement, child: RNode): void {\n  ngDevMode && ngDevMode.rendererAppendChild++;\n  ngDevMode && assertDefined(parent, 'parent node must be defined');\n  renderer.appendChild(parent, child);\n}\n\nfunction nativeAppendOrInsertBefore(\n    renderer: Renderer, parent: RElement, child: RNode, beforeNode: RNode|null, isMove: boolean) {\n  if (beforeNode !== null) {\n    nativeInsertBefore(renderer, parent, child, beforeNode, isMove);\n  } else {\n    nativeAppendChild(renderer, parent, child);\n  }\n}\n\n/** Removes a node from the DOM given its native parent. */\nfunction nativeRemoveChild(\n    renderer: Renderer, parent: RElement, child: RNode, isHostElement?: boolean): void {\n  renderer.removeChild(parent, child, isHostElement);\n}\n\n/** Checks if an element is a `<template>` node. */\nfunction isTemplateNode(node: RElement): node is RTemplate {\n  return node.tagName === 'TEMPLATE' && (node as RTemplate).content !== undefined;\n}\n\n/**\n * Returns a native parent of a given native node.\n */\nexport function nativeParentNode(renderer: Renderer, node: RNode): RElement|null {\n  return renderer.parentNode(node);\n}\n\n/**\n * Returns a native sibling of a given native node.\n */\nexport function nativeNextSibling(renderer: Renderer, node: RNode): RNode|null {\n  return renderer.nextSibling(node);\n}\n\n/**\n * Find a node in front of which `currentTNode` should be inserted.\n *\n * This method determines the `RNode` in front of which we should insert the `currentRNode`. This\n * takes `TNode.insertBeforeIndex` into account if i18n code has been invoked.\n *\n * @param parentTNode parent `TNode`\n * @param currentTNode current `TNode` (The node which we would like to insert into the DOM)\n * @param lView current `LView`\n */\nfunction getInsertInFrontOfRNode(parentTNode: TNode, currentTNode: TNode, lView: LView): RNode|\n    null {\n  return _getInsertInFrontOfRNodeWithI18n(parentTNode, currentTNode, lView);\n}\n\n\n/**\n * Find a node in front of which `currentTNode` should be inserted. (Does not take i18n into\n * account)\n *\n * This method determines the `RNode` in front of which we should insert the `currentRNode`. This\n * does not take `TNode.insertBeforeIndex` into account.\n *\n * @param parentTNode parent `TNode`\n * @param currentTNode current `TNode` (The node which we would like to insert into the DOM)\n * @param lView current `LView`\n */\nexport function getInsertInFrontOfRNodeWithNoI18n(\n    parentTNode: TNode, currentTNode: TNode, lView: LView): RNode|null {\n  if (parentTNode.type & (TNodeType.ElementContainer | TNodeType.Icu)) {\n    return getNativeByTNode(parentTNode, lView);\n  }\n  return null;\n}\n\n/**\n * Tree shakable boundary for `getInsertInFrontOfRNodeWithI18n` function.\n *\n * This function will only be set if i18n code runs.\n */\nlet _getInsertInFrontOfRNodeWithI18n: (parentTNode: TNode, currentTNode: TNode, lView: LView) =>\n    RNode | null = getInsertInFrontOfRNodeWithNoI18n;\n\n/**\n * Tree shakable boundary for `processI18nInsertBefore` function.\n *\n * This function will only be set if i18n code runs.\n */\nlet _processI18nInsertBefore: (\n    renderer: Renderer, childTNode: TNode, lView: LView, childRNode: RNode|RNode[],\n    parentRElement: RElement|null) => void;\n\nexport function setI18nHandling(\n    getInsertInFrontOfRNodeWithI18n: (parentTNode: TNode, currentTNode: TNode, lView: LView) =>\n        RNode | null,\n    processI18nInsertBefore: (\n        renderer: Renderer, childTNode: TNode, lView: LView, childRNode: RNode|RNode[],\n        parentRElement: RElement|null) => void) {\n  _getInsertInFrontOfRNodeWithI18n = getInsertInFrontOfRNodeWithI18n;\n  _processI18nInsertBefore = processI18nInsertBefore;\n}\n\n/**\n * Appends the `child` native node (or a collection of nodes) to the `parent`.\n *\n * @param tView The `TView' to be appended\n * @param lView The current LView\n * @param childRNode The native child (or children) that should be appended\n * @param childTNode The TNode of the child element\n */\nexport function appendChild(\n    tView: TView, lView: LView, childRNode: RNode|RNode[], childTNode: TNode): void {\n  const parentRNode = getParentRElement(tView, childTNode, lView);\n  const renderer = lView[RENDERER];\n  const parentTNode: TNode = childTNode.parent || lView[T_HOST]!;\n  const anchorNode = getInsertInFrontOfRNode(parentTNode, childTNode, lView);\n  if (parentRNode != null) {\n    if (Array.isArray(childRNode)) {\n      for (let i = 0; i < childRNode.length; i++) {\n        nativeAppendOrInsertBefore(renderer, parentRNode, childRNode[i], anchorNode, false);\n      }\n    } else {\n      nativeAppendOrInsertBefore(renderer, parentRNode, childRNode, anchorNode, false);\n    }\n  }\n\n  _processI18nInsertBefore !== undefined &&\n      _processI18nInsertBefore(renderer, childTNode, lView, childRNode, parentRNode);\n}\n\n/**\n * Returns the first native node for a given LView, starting from the provided TNode.\n *\n * Native nodes are returned in the order in which those appear in the native tree (DOM).\n */\nfunction getFirstNativeNode(lView: LView, tNode: TNode|null): RNode|null {\n  if (tNode !== null) {\n    ngDevMode &&\n        assertTNodeType(\n            tNode,\n            TNodeType.AnyRNode | TNodeType.AnyContainer | TNodeType.Icu | TNodeType.Projection);\n\n    const tNodeType = tNode.type;\n    if (tNodeType & TNodeType.AnyRNode) {\n      return getNativeByTNode(tNode, lView);\n    } else if (tNodeType & TNodeType.Container) {\n      return getBeforeNodeForView(-1, lView[tNode.index]);\n    } else if (tNodeType & TNodeType.ElementContainer) {\n      const elIcuContainerChild = tNode.child;\n      if (elIcuContainerChild !== null) {\n        return getFirstNativeNode(lView, elIcuContainerChild);\n      } else {\n        const rNodeOrLContainer = lView[tNode.index];\n        if (isLContainer(rNodeOrLContainer)) {\n          return getBeforeNodeForView(-1, rNodeOrLContainer);\n        } else {\n          return unwrapRNode(rNodeOrLContainer);\n        }\n      }\n    } else if (tNodeType & TNodeType.Icu) {\n      let nextRNode = icuContainerIterate(tNode as TIcuContainerNode, lView);\n      let rNode: RNode|null = nextRNode();\n      // If the ICU container has no nodes, than we use the ICU anchor as the node.\n      return rNode || unwrapRNode(lView[tNode.index]);\n    } else {\n      const projectionNodes = getProjectionNodes(lView, tNode);\n      if (projectionNodes !== null) {\n        if (Array.isArray(projectionNodes)) {\n          return projectionNodes[0];\n        }\n        const parentView = getLViewParent(lView[DECLARATION_COMPONENT_VIEW]);\n        ngDevMode && assertParentView(parentView);\n        return getFirstNativeNode(parentView!, projectionNodes);\n      } else {\n        return getFirstNativeNode(lView, tNode.next);\n      }\n    }\n  }\n\n  return null;\n}\n\nexport function getProjectionNodes(lView: LView, tNode: TNode|null): TNode|RNode[]|null {\n  if (tNode !== null) {\n    const componentView = lView[DECLARATION_COMPONENT_VIEW];\n    const componentHost = componentView[T_HOST] as TElementNode;\n    const slotIdx = tNode.projection as number;\n    ngDevMode && assertProjectionSlots(lView);\n    return componentHost.projection![slotIdx];\n  }\n  return null;\n}\n\nexport function getBeforeNodeForView(viewIndexInContainer: number, lContainer: LContainer): RNode|\n    null {\n  const nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n  if (nextViewIndex < lContainer.length) {\n    const lView = lContainer[nextViewIndex] as LView;\n    const firstTNodeOfView = lView[TVIEW].firstChild;\n    if (firstTNodeOfView !== null) {\n      return getFirstNativeNode(lView, firstTNodeOfView);\n    }\n  }\n\n  return lContainer[NATIVE];\n}\n\n/**\n * Removes a native node itself using a given renderer. To remove the node we are looking up its\n * parent from the native tree as not all platforms / browsers support the equivalent of\n * node.remove().\n *\n * @param renderer A renderer to be used\n * @param rNode The native node that should be removed\n * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n */\nexport function nativeRemoveNode(renderer: Renderer, rNode: RNode, isHostElement?: boolean): void {\n  ngDevMode && ngDevMode.rendererRemoveNode++;\n  const nativeParent = nativeParentNode(renderer, rNode);\n  if (nativeParent) {\n    nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n  }\n}\n\n\n/**\n * Performs the operation of `action` on the node. Typically this involves inserting or removing\n * nodes on the LView or projection boundary.\n */\nfunction applyNodes(\n    renderer: Renderer, action: WalkTNodeTreeAction, tNode: TNode|null, lView: LView,\n    parentRElement: RElement|null, beforeNode: RNode|null, isProjection: boolean) {\n  while (tNode != null) {\n    ngDevMode && assertTNodeForLView(tNode, lView);\n    ngDevMode &&\n        assertTNodeType(\n            tNode,\n            TNodeType.AnyRNode | TNodeType.AnyContainer | TNodeType.Projection | TNodeType.Icu);\n    const rawSlotValue = lView[tNode.index];\n    const tNodeType = tNode.type;\n    if (isProjection) {\n      if (action === WalkTNodeTreeAction.Create) {\n        rawSlotValue && attachPatchData(unwrapRNode(rawSlotValue), lView);\n        tNode.flags |= TNodeFlags.isProjected;\n      }\n    }\n    if ((tNode.flags & TNodeFlags.isDetached) !== TNodeFlags.isDetached) {\n      if (tNodeType & TNodeType.ElementContainer) {\n        applyNodes(renderer, action, tNode.child, lView, parentRElement, beforeNode, false);\n        applyToElementOrContainer(action, renderer, parentRElement, rawSlotValue, beforeNode);\n      } else if (tNodeType & TNodeType.Icu) {\n        const nextRNode = icuContainerIterate(tNode as TIcuContainerNode, lView);\n        let rNode: RNode|null;\n        while (rNode = nextRNode()) {\n          applyToElementOrContainer(action, renderer, parentRElement, rNode, beforeNode);\n        }\n        applyToElementOrContainer(action, renderer, parentRElement, rawSlotValue, beforeNode);\n      } else if (tNodeType & TNodeType.Projection) {\n        applyProjectionRecursive(\n            renderer, action, lView, tNode as TProjectionNode, parentRElement, beforeNode);\n      } else {\n        ngDevMode && assertTNodeType(tNode, TNodeType.AnyRNode | TNodeType.Container);\n        applyToElementOrContainer(action, renderer, parentRElement, rawSlotValue, beforeNode);\n      }\n    }\n    tNode = isProjection ? tNode.projectionNext : tNode.next;\n  }\n}\n\n\n/**\n * `applyView` performs operation on the view as specified in `action` (insert, detach, destroy)\n *\n * Inserting a view without projection or containers at top level is simple. Just iterate over the\n * root nodes of the View, and for each node perform the `action`.\n *\n * Things get more complicated with containers and projections. That is because coming across:\n * - Container: implies that we have to insert/remove/destroy the views of that container as well\n *              which in turn can have their own Containers at the View roots.\n * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n *               complication is that the nodes we are projecting can themselves have Containers\n *               or other Projections.\n *\n * As you can see this is a very recursive problem. Yes recursion is not most efficient but the\n * code is complicated enough that trying to implemented with recursion becomes unmaintainable.\n *\n * @param tView The `TView' which needs to be inserted, detached, destroyed\n * @param lView The LView which needs to be inserted, detached, destroyed.\n * @param renderer Renderer to use\n * @param action action to perform (insert, detach, destroy)\n * @param parentRElement parent DOM element for insertion (Removal does not need it).\n * @param beforeNode Before which node the insertions should happen.\n */\nfunction applyView(\n    tView: TView, lView: LView, renderer: Renderer, action: WalkTNodeTreeAction.Destroy,\n    parentRElement: null, beforeNode: null): void;\nfunction applyView(\n    tView: TView, lView: LView, renderer: Renderer, action: WalkTNodeTreeAction,\n    parentRElement: RElement|null, beforeNode: RNode|null): void;\nfunction applyView(\n    tView: TView, lView: LView, renderer: Renderer, action: WalkTNodeTreeAction,\n    parentRElement: RElement|null, beforeNode: RNode|null): void {\n  applyNodes(renderer, action, tView.firstChild, lView, parentRElement, beforeNode, false);\n}\n\n/**\n * `applyProjection` performs operation on the projection.\n *\n * Inserting a projection requires us to locate the projected nodes from the parent component. The\n * complication is that those nodes themselves could be re-projected from their parent component.\n *\n * @param tView The `TView` of `LView` which needs to be inserted, detached, destroyed\n * @param lView The `LView` which needs to be inserted, detached, destroyed.\n * @param tProjectionNode node to project\n */\nexport function applyProjection(tView: TView, lView: LView, tProjectionNode: TProjectionNode) {\n  const renderer = lView[RENDERER];\n  const parentRNode = getParentRElement(tView, tProjectionNode, lView);\n  const parentTNode = tProjectionNode.parent || lView[T_HOST]!;\n  let beforeNode = getInsertInFrontOfRNode(parentTNode, tProjectionNode, lView);\n  applyProjectionRecursive(\n      renderer, WalkTNodeTreeAction.Create, lView, tProjectionNode, parentRNode, beforeNode);\n}\n\n/**\n * `applyProjectionRecursive` performs operation on the projection specified by `action` (insert,\n * detach, destroy)\n *\n * Inserting a projection requires us to locate the projected nodes from the parent component. The\n * complication is that those nodes themselves could be re-projected from their parent component.\n *\n * @param renderer Render to use\n * @param action action to perform (insert, detach, destroy)\n * @param lView The LView which needs to be inserted, detached, destroyed.\n * @param tProjectionNode node to project\n * @param parentRElement parent DOM element for insertion/removal.\n * @param beforeNode Before which node the insertions should happen.\n */\nfunction applyProjectionRecursive(\n    renderer: Renderer, action: WalkTNodeTreeAction, lView: LView, tProjectionNode: TProjectionNode,\n    parentRElement: RElement|null, beforeNode: RNode|null) {\n  const componentLView = lView[DECLARATION_COMPONENT_VIEW];\n  const componentNode = componentLView[T_HOST] as TElementNode;\n  ngDevMode &&\n      assertEqual(typeof tProjectionNode.projection, 'number', 'expecting projection index');\n  const nodeToProjectOrRNodes = componentNode.projection![tProjectionNode.projection]!;\n  if (Array.isArray(nodeToProjectOrRNodes)) {\n    // This should not exist, it is a bit of a hack. When we bootstrap a top level node and we\n    // need to support passing projectable nodes, so we cheat and put them in the TNode\n    // of the Host TView. (Yes we put instance info at the T Level). We can get away with it\n    // because we know that that TView is not shared and therefore it will not be a problem.\n    // This should be refactored and cleaned up.\n    for (let i = 0; i < nodeToProjectOrRNodes.length; i++) {\n      const rNode = nodeToProjectOrRNodes[i];\n      applyToElementOrContainer(action, renderer, parentRElement, rNode, beforeNode);\n    }\n  } else {\n    let nodeToProject: TNode|null = nodeToProjectOrRNodes;\n    const projectedComponentLView = componentLView[PARENT] as LView;\n    applyNodes(\n        renderer, action, nodeToProject, projectedComponentLView, parentRElement, beforeNode, true);\n  }\n}\n\n\n/**\n * `applyContainer` performs an operation on the container and its views as specified by\n * `action` (insert, detach, destroy)\n *\n * Inserting a Container is complicated by the fact that the container may have Views which\n * themselves have containers or projections.\n *\n * @param renderer Renderer to use\n * @param action action to perform (insert, detach, destroy)\n * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n * @param parentRElement parent DOM element for insertion/removal.\n * @param beforeNode Before which node the insertions should happen.\n */\nfunction applyContainer(\n    renderer: Renderer, action: WalkTNodeTreeAction, lContainer: LContainer,\n    parentRElement: RElement|null, beforeNode: RNode|null|undefined) {\n  ngDevMode && assertLContainer(lContainer);\n  const anchor = lContainer[NATIVE];  // LContainer has its own before node.\n  const native = unwrapRNode(lContainer);\n  // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n  // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor\n  // node (comment in the DOM) that will be different from the LContainer's host node. In this\n  // particular case we need to execute action on 2 nodes:\n  // - container's host node (this is done in the executeActionOnElementOrContainer)\n  // - container's host node (this is done here)\n  if (anchor !== native) {\n    // This is very strange to me (Misko). I would expect that the native is same as anchor. I\n    // don't see a reason why they should be different, but they are.\n    //\n    // If they are we need to process the second anchor as well.\n    applyToElementOrContainer(action, renderer, parentRElement, anchor, beforeNode);\n  }\n  for (let i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n    const lView = lContainer[i] as LView;\n    applyView(lView[TVIEW], lView, renderer, action, parentRElement, anchor);\n  }\n}\n\n/**\n * Writes class/style to element.\n *\n * @param renderer Renderer to use.\n * @param isClassBased `true` if it should be written to `class` (`false` to write to `style`)\n * @param rNode The Node to write to.\n * @param prop Property to write to. This would be the class/style name.\n * @param value Value to write. If `null`/`undefined`/`false` this is considered a remove (set/add\n *        otherwise).\n */\nexport function applyStyling(\n    renderer: Renderer, isClassBased: boolean, rNode: RElement, prop: string, value: any) {\n  if (isClassBased) {\n    // We actually want JS true/false here because any truthy value should add the class\n    if (!value) {\n      ngDevMode && ngDevMode.rendererRemoveClass++;\n      renderer.removeClass(rNode, prop);\n    } else {\n      ngDevMode && ngDevMode.rendererAddClass++;\n      renderer.addClass(rNode, prop);\n    }\n  } else {\n    let flags = prop.indexOf('-') === -1 ? undefined : RendererStyleFlags2.DashCase as number;\n    if (value == null /** || value === undefined */) {\n      ngDevMode && ngDevMode.rendererRemoveStyle++;\n      renderer.removeStyle(rNode, prop, flags);\n    } else {\n      // A value is important if it ends with `!important`. The style\n      // parser strips any semicolons at the end of the value.\n      const isImportant = typeof value === 'string' ? value.endsWith('!important') : false;\n\n      if (isImportant) {\n        // !important has to be stripped from the value for it to be valid.\n        value = value.slice(0, -10);\n        flags! |= RendererStyleFlags2.Important;\n      }\n\n      ngDevMode && ngDevMode.rendererSetStyle++;\n      renderer.setStyle(rNode, prop, value, flags);\n    }\n  }\n}\n\n\n/**\n * Write `cssText` to `RElement`.\n *\n * This function does direct write without any reconciliation. Used for writing initial values, so\n * that static styling values do not pull in the style parser.\n *\n * @param renderer Renderer to use\n * @param element The element which needs to be updated.\n * @param newValue The new class list to write.\n */\nexport function writeDirectStyle(renderer: Renderer, element: RElement, newValue: string) {\n  ngDevMode && assertString(newValue, '\\'newValue\\' should be a string');\n  renderer.setAttribute(element, 'style', newValue);\n  ngDevMode && ngDevMode.rendererSetStyle++;\n}\n\n/**\n * Write `className` to `RElement`.\n *\n * This function does direct write without any reconciliation. Used for writing initial values, so\n * that static styling values do not pull in the style parser.\n *\n * @param renderer Renderer to use\n * @param element The element which needs to be updated.\n * @param newValue The new class list to write.\n */\nexport function writeDirectClass(renderer: Renderer, element: RElement, newValue: string) {\n  ngDevMode && assertString(newValue, '\\'newValue\\' should be a string');\n  if (newValue === '') {\n    // There are tests in `google3` which expect `element.getAttribute('class')` to be `null`.\n    renderer.removeAttribute(element, 'class');\n  } else {\n    renderer.setAttribute(element, 'class', newValue);\n  }\n  ngDevMode && ngDevMode.rendererSetClassName++;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {assertNotEqual} from '../../util/assert';\nimport {CharCode} from '../../util/char_code';\n\n\n/**\n * Returns an index of `classToSearch` in `className` taking token boundaries into account.\n *\n * `classIndexOf('AB A', 'A', 0)` will be 3 (not 0 since `AB!==A`)\n *\n * @param className A string containing classes (whitespace separated)\n * @param classToSearch A class name to locate\n * @param startingIndex Starting location of search\n * @returns an index of the located class (or -1 if not found)\n */\nexport function classIndexOf(\n    className: string, classToSearch: string, startingIndex: number): number {\n  ngDevMode && assertNotEqual(classToSearch, '', 'can not look for \"\" string.');\n  let end = className.length;\n  while (true) {\n    const foundIndex = className.indexOf(classToSearch, startingIndex);\n    if (foundIndex === -1) return foundIndex;\n    if (foundIndex === 0 || className.charCodeAt(foundIndex - 1) <= CharCode.SPACE) {\n      // Ensure that it has leading whitespace\n      const length = classToSearch.length;\n      if (foundIndex + length === end ||\n          className.charCodeAt(foundIndex + length) <= CharCode.SPACE) {\n        // Ensure that it has trailing whitespace\n        return foundIndex;\n      }\n    }\n    // False positive, keep searching from where we left off.\n    startingIndex = foundIndex + 1;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport '../util/ng_dev_mode';\n\nimport {assertDefined, assertEqual, assertNotEqual} from '../util/assert';\n\nimport {AttributeMarker, TAttributes, TNode, TNodeType, unusedValueExportToPlacateAjd as unused1} from './interfaces/node';\nimport {CssSelector, CssSelectorList, SelectorFlags, unusedValueExportToPlacateAjd as unused2} from './interfaces/projection';\nimport {classIndexOf} from './styling/class_differ';\nimport {isNameOnlyAttributeMarker} from './util/attrs_utils';\n\nconst unusedValueToPlacateAjd = unused1 + unused2;\n\nconst NG_TEMPLATE_SELECTOR = 'ng-template';\n\n/**\n * Search the `TAttributes` to see if it contains `cssClassToMatch` (case insensitive)\n *\n * @param attrs `TAttributes` to search through.\n * @param cssClassToMatch class to match (lowercase)\n * @param isProjectionMode Whether or not class matching should look into the attribute `class` in\n *    addition to the `AttributeMarker.Classes`.\n */\nfunction isCssClassMatching(\n    attrs: TAttributes, cssClassToMatch: string, isProjectionMode: boolean): boolean {\n  // TODO(misko): The fact that this function needs to know about `isProjectionMode` seems suspect.\n  // It is strange to me that sometimes the class information comes in form of `class` attribute\n  // and sometimes in form of `AttributeMarker.Classes`. Some investigation is needed to determine\n  // if that is the right behavior.\n  ngDevMode &&\n      assertEqual(\n          cssClassToMatch, cssClassToMatch.toLowerCase(), 'Class name expected to be lowercase.');\n  let i = 0;\n  while (i < attrs.length) {\n    let item = attrs[i++];\n    if (isProjectionMode && item === 'class') {\n      item = attrs[i] as string;\n      if (classIndexOf(item.toLowerCase(), cssClassToMatch, 0) !== -1) {\n        return true;\n      }\n    } else if (item === AttributeMarker.Classes) {\n      // We found the classes section. Start searching for the class.\n      while (i < attrs.length && typeof (item = attrs[i++]) == 'string') {\n        // while we have strings\n        if (item.toLowerCase() === cssClassToMatch) return true;\n      }\n      return false;\n    }\n  }\n  return false;\n}\n\n/**\n * Checks whether the `tNode` represents an inline template (e.g. `*ngFor`).\n *\n * @param tNode current TNode\n */\nexport function isInlineTemplate(tNode: TNode): boolean {\n  return tNode.type === TNodeType.Container && tNode.value !== NG_TEMPLATE_SELECTOR;\n}\n\n/**\n * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n *\n * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n * directive matching mode:\n * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n * tag name was extracted from * syntax so we would match the same directive twice);\n * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n * (applicable to TNodeType.Container only).\n */\nfunction hasTagAndTypeMatch(\n    tNode: TNode, currentSelector: string, isProjectionMode: boolean): boolean {\n  const tagNameToCompare =\n      tNode.type === TNodeType.Container && !isProjectionMode ? NG_TEMPLATE_SELECTOR : tNode.value;\n  return currentSelector === tagNameToCompare;\n}\n\n/**\n * A utility function to match an Ivy node static data against a simple CSS selector\n *\n * @param node static data of the node to match\n * @param selector The selector to try matching against the node.\n * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n * directive matching.\n * @returns true if node matches the selector.\n */\nexport function isNodeMatchingSelector(\n    tNode: TNode, selector: CssSelector, isProjectionMode: boolean): boolean {\n  ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n  let mode: SelectorFlags = SelectorFlags.ELEMENT;\n  const nodeAttrs = tNode.attrs || [];\n\n  // Find the index of first attribute that has no value, only a name.\n  const nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n\n  // When processing \":not\" selectors, we skip to the next \":not\" if the\n  // current one doesn't match\n  let skipToNextSelector = false;\n\n  for (let i = 0; i < selector.length; i++) {\n    const current = selector[i];\n    if (typeof current === 'number') {\n      // If we finish processing a :not selector and it hasn't failed, return false\n      if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n        return false;\n      }\n      // If we are skipping to the next :not() and this mode flag is positive,\n      // it's a part of the current :not() selector, and we should keep skipping\n      if (skipToNextSelector && isPositive(current)) continue;\n      skipToNextSelector = false;\n      mode = (current as number) | (mode & SelectorFlags.NOT);\n      continue;\n    }\n\n    if (skipToNextSelector) continue;\n\n    if (mode & SelectorFlags.ELEMENT) {\n      mode = SelectorFlags.ATTRIBUTE | mode & SelectorFlags.NOT;\n      if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n          current === '' && selector.length === 1) {\n        if (isPositive(mode)) return false;\n        skipToNextSelector = true;\n      }\n    } else {\n      const selectorAttrValue = mode & SelectorFlags.CLASS ? current : selector[++i];\n\n      // special case for matching against classes when a tNode has been instantiated with\n      // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n      if ((mode & SelectorFlags.CLASS) && tNode.attrs !== null) {\n        if (!isCssClassMatching(tNode.attrs, selectorAttrValue as string, isProjectionMode)) {\n          if (isPositive(mode)) return false;\n          skipToNextSelector = true;\n        }\n        continue;\n      }\n\n      const attrName = (mode & SelectorFlags.CLASS) ? 'class' : current;\n      const attrIndexInNode =\n          findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate(tNode), isProjectionMode);\n\n      if (attrIndexInNode === -1) {\n        if (isPositive(mode)) return false;\n        skipToNextSelector = true;\n        continue;\n      }\n\n      if (selectorAttrValue !== '') {\n        let nodeAttrValue: string;\n        if (attrIndexInNode > nameOnlyMarkerIdx) {\n          nodeAttrValue = '';\n        } else {\n          ngDevMode &&\n              assertNotEqual(\n                  nodeAttrs[attrIndexInNode], AttributeMarker.NamespaceURI,\n                  'We do not match directives on namespaced attributes');\n          // we lowercase the attribute value to be able to match\n          // selectors without case-sensitivity\n          // (selectors are already in lowercase when generated)\n          nodeAttrValue = (nodeAttrs[attrIndexInNode + 1] as string).toLowerCase();\n        }\n\n        const compareAgainstClassName = mode & SelectorFlags.CLASS ? nodeAttrValue : null;\n        if (compareAgainstClassName &&\n                classIndexOf(compareAgainstClassName, selectorAttrValue as string, 0) !== -1 ||\n            mode & SelectorFlags.ATTRIBUTE && selectorAttrValue !== nodeAttrValue) {\n          if (isPositive(mode)) return false;\n          skipToNextSelector = true;\n        }\n      }\n    }\n  }\n\n  return isPositive(mode) || skipToNextSelector;\n}\n\nfunction isPositive(mode: SelectorFlags): boolean {\n  return (mode & SelectorFlags.NOT) === 0;\n}\n\n/**\n * Examines the attribute's definition array for a node to find the index of the\n * attribute that matches the given `name`.\n *\n * NOTE: This will not match namespaced attributes.\n *\n * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n * The following table summarizes which types of attributes we attempt to match:\n *\n * ===========================================================================================================\n * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n * Attributes\n * ===========================================================================================================\n * Inline + Projection     | YES               | YES                 | NO                  | YES\n * -----------------------------------------------------------------------------------------------------------\n * Inline + Directive      | NO                | NO                  | YES                 | NO\n * -----------------------------------------------------------------------------------------------------------\n * Non-inline + Projection | YES               | YES                 | NO                  | YES\n * -----------------------------------------------------------------------------------------------------------\n * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n * ===========================================================================================================\n *\n * @param name the name of the attribute to find\n * @param attrs the attribute array to examine\n * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n * rather than a manually expanded template node (e.g `<ng-template>`).\n * @param isProjectionMode true if we are matching against content projection otherwise we are\n * matching against directives.\n */\nfunction findAttrIndexInNode(\n    name: string, attrs: TAttributes|null, isInlineTemplate: boolean,\n    isProjectionMode: boolean): number {\n  if (attrs === null) return -1;\n\n  let i = 0;\n\n  if (isProjectionMode || !isInlineTemplate) {\n    let bindingsMode = false;\n    while (i < attrs.length) {\n      const maybeAttrName = attrs[i];\n      if (maybeAttrName === name) {\n        return i;\n      } else if (\n          maybeAttrName === AttributeMarker.Bindings || maybeAttrName === AttributeMarker.I18n) {\n        bindingsMode = true;\n      } else if (\n          maybeAttrName === AttributeMarker.Classes || maybeAttrName === AttributeMarker.Styles) {\n        let value = attrs[++i];\n        // We should skip classes here because we have a separate mechanism for\n        // matching classes in projection mode.\n        while (typeof value === 'string') {\n          value = attrs[++i];\n        }\n        continue;\n      } else if (maybeAttrName === AttributeMarker.Template) {\n        // We do not care about Template attributes in this scenario.\n        break;\n      } else if (maybeAttrName === AttributeMarker.NamespaceURI) {\n        // Skip the whole namespaced attribute and value. This is by design.\n        i += 4;\n        continue;\n      }\n      // In binding mode there are only names, rather than name-value pairs.\n      i += bindingsMode ? 1 : 2;\n    }\n    // We did not match the attribute\n    return -1;\n  } else {\n    return matchTemplateAttribute(attrs, name);\n  }\n}\n\nexport function isNodeMatchingSelectorList(\n    tNode: TNode, selector: CssSelectorList, isProjectionMode: boolean = false): boolean {\n  for (let i = 0; i < selector.length; i++) {\n    if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport function getProjectAsAttrValue(tNode: TNode): CssSelector|null {\n  const nodeAttrs = tNode.attrs;\n  if (nodeAttrs != null) {\n    const ngProjectAsAttrIdx = nodeAttrs.indexOf(AttributeMarker.ProjectAs);\n    // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n    // (attribute names are stored at even indexes)\n    if ((ngProjectAsAttrIdx & 1) === 0) {\n      return nodeAttrs[ngProjectAsAttrIdx + 1] as CssSelector;\n    }\n  }\n  return null;\n}\n\nfunction getNameOnlyMarkerIndex(nodeAttrs: TAttributes) {\n  for (let i = 0; i < nodeAttrs.length; i++) {\n    const nodeAttr = nodeAttrs[i];\n    if (isNameOnlyAttributeMarker(nodeAttr)) {\n      return i;\n    }\n  }\n  return nodeAttrs.length;\n}\n\nfunction matchTemplateAttribute(attrs: TAttributes, name: string): number {\n  let i = attrs.indexOf(AttributeMarker.Template);\n  if (i > -1) {\n    i++;\n    while (i < attrs.length) {\n      const attr = attrs[i];\n      // Return in case we checked all template attrs and are switching to the next section in the\n      // attrs array (that starts with a number that represents an attribute marker).\n      if (typeof attr === 'number') return -1;\n      if (attr === name) return i;\n      i++;\n    }\n  }\n  return -1;\n}\n\n/**\n * Checks whether a selector is inside a CssSelectorList\n * @param selector Selector to be checked.\n * @param list List in which to look for the selector.\n */\nexport function isSelectorInSelectorList(selector: CssSelector, list: CssSelectorList): boolean {\n  selectorListLoop: for (let i = 0; i < list.length; i++) {\n    const currentSelectorInList = list[i];\n    if (selector.length !== currentSelectorInList.length) {\n      continue;\n    }\n    for (let j = 0; j < selector.length; j++) {\n      if (selector[j] !== currentSelectorInList[j]) {\n        continue selectorListLoop;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\nfunction maybeWrapInNotSelector(isNegativeMode: boolean, chunk: string): string {\n  return isNegativeMode ? ':not(' + chunk.trim() + ')' : chunk;\n}\n\nfunction stringifyCSSSelector(selector: CssSelector): string {\n  let result = selector[0] as string;\n  let i = 1;\n  let mode = SelectorFlags.ATTRIBUTE;\n  let currentChunk = '';\n  let isNegativeMode = false;\n  while (i < selector.length) {\n    let valueOrMarker = selector[i];\n    if (typeof valueOrMarker === 'string') {\n      if (mode & SelectorFlags.ATTRIBUTE) {\n        const attrValue = selector[++i] as string;\n        currentChunk +=\n            '[' + valueOrMarker + (attrValue.length > 0 ? '=\"' + attrValue + '\"' : '') + ']';\n      } else if (mode & SelectorFlags.CLASS) {\n        currentChunk += '.' + valueOrMarker;\n      } else if (mode & SelectorFlags.ELEMENT) {\n        currentChunk += ' ' + valueOrMarker;\n      }\n    } else {\n      //\n      // Append current chunk to the final result in case we come across SelectorFlag, which\n      // indicates that the previous section of a selector is over. We need to accumulate content\n      // between flags to make sure we wrap the chunk later in :not() selector if needed, e.g.\n      // ```\n      //  ['', Flags.CLASS, '.classA', Flags.CLASS | Flags.NOT, '.classB', '.classC']\n      // ```\n      // should be transformed to `.classA :not(.classB .classC)`.\n      //\n      // Note: for negative selector part, we accumulate content between flags until we find the\n      // next negative flag. This is needed to support a case where `:not()` rule contains more than\n      // one chunk, e.g. the following selector:\n      // ```\n      //  ['', Flags.ELEMENT | Flags.NOT, 'p', Flags.CLASS, 'foo', Flags.CLASS | Flags.NOT, 'bar']\n      // ```\n      // should be stringified to `:not(p.foo) :not(.bar)`\n      //\n      if (currentChunk !== '' && !isPositive(valueOrMarker)) {\n        result += maybeWrapInNotSelector(isNegativeMode, currentChunk);\n        currentChunk = '';\n      }\n      mode = valueOrMarker;\n      // According to CssSelector spec, once we come across `SelectorFlags.NOT` flag, the negative\n      // mode is maintained for remaining chunks of a selector.\n      isNegativeMode = isNegativeMode || !isPositive(mode);\n    }\n    i++;\n  }\n  if (currentChunk !== '') {\n    result += maybeWrapInNotSelector(isNegativeMode, currentChunk);\n  }\n  return result;\n}\n\n/**\n * Generates string representation of CSS selector in parsed form.\n *\n * ComponentDef and DirectiveDef are generated with the selector in parsed form to avoid doing\n * additional parsing at runtime (for example, for directive matching). However in some cases (for\n * example, while bootstrapping a component), a string version of the selector is required to query\n * for the host element on the page. This function takes the parsed form of a selector and returns\n * its string representation.\n *\n * @param selectorList selector in parsed form\n * @returns string representation of a given selector\n */\nexport function stringifyCSSSelectorList(selectorList: CssSelectorList): string {\n  return selectorList.map(stringifyCSSSelector).join(',');\n}\n\n/**\n * Extracts attributes and classes information from a given CSS selector.\n *\n * This function is used while creating a component dynamically. In this case, the host element\n * (that is created dynamically) should contain attributes and classes specified in component's CSS\n * selector.\n *\n * @param selector CSS selector in parsed form (in a form of array)\n * @returns object with `attrs` and `classes` fields that contain extracted information\n */\nexport function extractAttrsAndClassesFromSelector(selector: CssSelector):\n    {attrs: string[], classes: string[]} {\n  const attrs: string[] = [];\n  const classes: string[] = [];\n  let i = 1;\n  let mode = SelectorFlags.ATTRIBUTE;\n  while (i < selector.length) {\n    let valueOrMarker = selector[i];\n    if (typeof valueOrMarker === 'string') {\n      if (mode === SelectorFlags.ATTRIBUTE) {\n        if (valueOrMarker !== '') {\n          attrs.push(valueOrMarker, selector[++i] as string);\n        }\n      } else if (mode === SelectorFlags.CLASS) {\n        classes.push(valueOrMarker);\n      }\n    } else {\n      // According to CssSelector spec, once we come across `SelectorFlags.NOT` flag, the negative\n      // mode is maintained for remaining chunks of a selector. Since attributes and classes are\n      // extracted only for \"positive\" part of the selector, we can stop here.\n      if (!isPositive(mode)) break;\n      mode = valueOrMarker;\n    }\n    i++;\n  }\n  return {attrs, classes};\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport interface NO_CHANGE {\n  // This is a brand that ensures that this type can never match anything else\n  __brand__: 'NO_CHANGE';\n}\n\n/** A special value which designates that a value has not changed. */\nexport const NO_CHANGE: NO_CHANGE =\n    (typeof ngDevMode === 'undefined' || ngDevMode) ? {__brand__: 'NO_CHANGE'} : ({} as NO_CHANGE);\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {assertGreaterThan} from '../../util/assert';\nimport {assertIndexInDeclRange} from '../assert';\nimport {executeCheckHooks, executeInitAndCheckHooks} from '../hooks';\nimport {FLAGS, InitPhaseState, LView, LViewFlags, TView} from '../interfaces/view';\nimport {getLView, getSelectedIndex, getTView, isInCheckNoChangesMode, setSelectedIndex} from '../state';\n\n\n/**\n * Advances to an element for later binding instructions.\n *\n * Used in conjunction with instructions like {@link property} to act on elements with specified\n * indices, for example those created with {@link element} or {@link elementStart}.\n *\n * ```ts\n * (rf: RenderFlags, ctx: any) => {\n *   if (rf & 1) {\n *     text(0, 'Hello');\n *     text(1, 'Goodbye')\n *     element(2, 'div');\n *   }\n *   if (rf & 2) {\n *     advance(2); // Advance twice to the <div>.\n *     property('title', 'test');\n *   }\n *  }\n * ```\n * @param delta Number of elements to advance forwards by.\n *\n * @codeGenApi\n */\nexport function ɵɵadvance(delta: number): void {\n  ngDevMode && assertGreaterThan(delta, 0, 'Can only advance forward');\n  selectIndexInternal(\n      getTView(), getLView(), getSelectedIndex() + delta, !!ngDevMode && isInCheckNoChangesMode());\n}\n\nexport function selectIndexInternal(\n    tView: TView, lView: LView, index: number, checkNoChangesMode: boolean) {\n  ngDevMode && assertIndexInDeclRange(lView, index);\n\n  // Flush the initial hooks for elements in the view that have been added up to this point.\n  // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n  if (!checkNoChangesMode) {\n    const hooksInitPhaseCompleted =\n        (lView[FLAGS] & LViewFlags.InitPhaseStateMask) === InitPhaseState.InitPhaseCompleted;\n    if (hooksInitPhaseCompleted) {\n      const preOrderCheckHooks = tView.preOrderCheckHooks;\n      if (preOrderCheckHooks !== null) {\n        executeCheckHooks(lView, preOrderCheckHooks, index);\n      }\n    } else {\n      const preOrderHooks = tView.preOrderHooks;\n      if (preOrderHooks !== null) {\n        executeInitAndCheckHooks(lView, preOrderHooks, InitPhaseState.OnInitHooksToBeRun, index);\n      }\n    }\n  }\n\n  // We must set the selected index *after* running the hooks, because hooks may have side-effects\n  // that cause other template functions to run, thus updating the selected index, which is global\n  // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n  // will be altered by the time we leave the `ɵɵadvance` instruction.\n  setSelectedIndex(index);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {resolveForwardRef} from '../forward_ref';\nimport {ɵɵinject, ɵɵinvalidFactoryDep} from '../injector_compatibility';\nimport {ɵɵdefineInjectable, ɵɵdefineInjector} from '../interface/defs';\n\n/**\n * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n *\n * This should be kept up to date with the public exports of @angular/core.\n */\nexport const angularCoreDiEnv: {[name: string]: Function} = {\n  'ɵɵdefineInjectable': ɵɵdefineInjectable,\n  'ɵɵdefineInjector': ɵɵdefineInjector,\n  'ɵɵinject': ɵɵinject,\n  'ɵɵinvalidFactoryDep': ɵɵinvalidFactoryDep,\n  'resolveForwardRef': resolveForwardRef,\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getCompilerFacade, JitCompilerUsage, R3InjectableMetadataFacade} from '../../compiler/compiler_facade';\nimport {Type} from '../../interface/type';\nimport {NG_FACTORY_DEF} from '../../render3/fields';\nimport {getClosureSafeProperty} from '../../util/property';\nimport {resolveForwardRef} from '../forward_ref';\nimport {Injectable} from '../injectable';\nimport {NG_PROV_DEF} from '../interface/defs';\nimport {ClassSansProvider, ExistingSansProvider, FactorySansProvider, ValueProvider, ValueSansProvider} from '../interface/provider';\n\nimport {angularCoreDiEnv} from './environment';\nimport {convertDependencies, reflectDependencies} from './util';\n\n\n\n/**\n * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n * injectable def (`ɵprov`) onto the injectable type.\n */\nexport function compileInjectable(type: Type<any>, meta?: Injectable): void {\n  let ngInjectableDef: any = null;\n  let ngFactoryDef: any = null;\n\n  // if NG_PROV_DEF is already defined on this class then don't overwrite it\n  if (!type.hasOwnProperty(NG_PROV_DEF)) {\n    Object.defineProperty(type, NG_PROV_DEF, {\n      get: () => {\n        if (ngInjectableDef === null) {\n          const compiler =\n              getCompilerFacade({usage: JitCompilerUsage.Decorator, kind: 'injectable', type});\n          ngInjectableDef = compiler.compileInjectable(\n              angularCoreDiEnv, `ng:///${type.name}/ɵprov.js`, getInjectableMetadata(type, meta));\n        }\n        return ngInjectableDef;\n      },\n    });\n  }\n\n  // if NG_FACTORY_DEF is already defined on this class then don't overwrite it\n  if (!type.hasOwnProperty(NG_FACTORY_DEF)) {\n    Object.defineProperty(type, NG_FACTORY_DEF, {\n      get: () => {\n        if (ngFactoryDef === null) {\n          const compiler =\n              getCompilerFacade({usage: JitCompilerUsage.Decorator, kind: 'injectable', type});\n          ngFactoryDef = compiler.compileFactory(angularCoreDiEnv, `ng:///${type.name}/ɵfac.js`, {\n            name: type.name,\n            type,\n            typeArgumentCount: 0,  // In JIT mode types are not available nor used.\n            deps: reflectDependencies(type),\n            target: compiler.FactoryTarget.Injectable\n          });\n        }\n        return ngFactoryDef;\n      },\n      // Leave this configurable so that the factories from directives or pipes can take precedence.\n      configurable: true\n    });\n  }\n}\n\ntype UseClassProvider = Injectable&ClassSansProvider&{deps?: any[]};\n\nconst USE_VALUE =\n    getClosureSafeProperty<ValueProvider>({provide: String, useValue: getClosureSafeProperty});\n\nfunction isUseClassProvider(meta: Injectable): meta is UseClassProvider {\n  return (meta as UseClassProvider).useClass !== undefined;\n}\n\nfunction isUseValueProvider(meta: Injectable): meta is Injectable&ValueSansProvider {\n  return USE_VALUE in meta;\n}\n\nfunction isUseFactoryProvider(meta: Injectable): meta is Injectable&FactorySansProvider {\n  return (meta as FactorySansProvider).useFactory !== undefined;\n}\n\nfunction isUseExistingProvider(meta: Injectable): meta is Injectable&ExistingSansProvider {\n  return (meta as ExistingSansProvider).useExisting !== undefined;\n}\n\nfunction getInjectableMetadata(type: Type<any>, srcMeta?: Injectable): R3InjectableMetadataFacade {\n  // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n  const meta: Injectable = srcMeta || {providedIn: null};\n  const compilerMeta: R3InjectableMetadataFacade = {\n    name: type.name,\n    type: type,\n    typeArgumentCount: 0,\n    providedIn: meta.providedIn,\n  };\n  if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n    compilerMeta.deps = convertDependencies(meta.deps);\n  }\n  // Check to see if the user explicitly provided a `useXxxx` property.\n  if (isUseClassProvider(meta)) {\n    compilerMeta.useClass = meta.useClass;\n  } else if (isUseValueProvider(meta)) {\n    compilerMeta.useValue = meta.useValue;\n  } else if (isUseFactoryProvider(meta)) {\n    compilerMeta.useFactory = meta.useFactory;\n  } else if (isUseExistingProvider(meta)) {\n    compilerMeta.useExisting = meta.useExisting;\n  }\n  return compilerMeta;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../interface/type';\nimport {makeDecorator, TypeDecorator} from '../util/decorators';\n\nimport {ClassSansProvider, ConstructorSansProvider, ExistingSansProvider, FactorySansProvider, StaticClassSansProvider, ValueSansProvider} from './interface/provider';\nimport {compileInjectable} from './jit/injectable';\n\nexport {compileInjectable};\n\n/**\n * Injectable providers used in `@Injectable` decorator.\n *\n * @publicApi\n */\nexport type InjectableProvider = ValueSansProvider|ExistingSansProvider|StaticClassSansProvider|\n    ConstructorSansProvider|FactorySansProvider|ClassSansProvider;\n\n/**\n * Type of the Injectable decorator / constructor function.\n *\n * @publicApi\n */\nexport interface InjectableDecorator {\n  /**\n   * Decorator that marks a class as available to be\n   * provided and injected as a dependency.\n   *\n   * @see [Introduction to Services and DI](guide/architecture-services)\n   * @see [Dependency Injection Guide](guide/dependency-injection)\n   *\n   * @usageNotes\n   *\n   * Marking a class with `@Injectable` ensures that the compiler\n   * will generate the necessary metadata to create the class's\n   * dependencies when the class is injected.\n   *\n   * The following example shows how a service class is properly\n   *  marked so that a supporting service can be injected upon creation.\n   *\n   * <code-example path=\"core/di/ts/metadata_spec.ts\" region=\"Injectable\"></code-example>\n   *\n   */\n  (): TypeDecorator;\n  (options?: {providedIn: Type<any>|'root'|'platform'|'any'|null}&\n   InjectableProvider): TypeDecorator;\n  new(): Injectable;\n  new(options?: {providedIn: Type<any>|'root'|'platform'|'any'|null}&\n      InjectableProvider): Injectable;\n}\n\n/**\n * Type of the Injectable metadata.\n *\n * @publicApi\n */\nexport interface Injectable {\n  /**\n   * Determines which injectors will provide the injectable.\n   *\n   * - `Type<any>` - associates the injectable with an `@NgModule` or other `InjectorType`,\n   * - 'null' : Equivalent to `undefined`. The injectable is not provided in any scope automatically\n   * and must be added to a `providers` array of an [@NgModule](api/core/NgModule#providers),\n   * [@Component](api/core/Directive#providers) or [@Directive](api/core/Directive#providers).\n   *\n   * The following options specify that this injectable should be provided in one of the following\n   * injectors:\n   * - 'root' : The application-level injector in most apps.\n   * - 'platform' : A special singleton platform injector shared by all\n   * applications on the page.\n   * - 'any' : Provides a unique instance in each lazy loaded module while all eagerly loaded\n   * modules share one instance.\n   *\n   */\n  providedIn?: Type<any>|'root'|'platform'|'any'|null;\n}\n\n/**\n * Injectable decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Injectable: InjectableDecorator = makeDecorator(\n    'Injectable', undefined, undefined, undefined,\n    (type: Type<any>, meta: Injectable) => compileInjectable(type as any, meta));\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {flatten} from '../util/array_utils';\nimport {EMPTY_ARRAY} from '../util/empty';\nimport {stringify} from '../util/stringify';\n\nimport {Injector} from './injector';\nimport {StaticProvider} from './interface/provider';\nimport {importProvidersFrom} from './provider_collection';\nimport {getNullInjector, R3Injector} from './r3_injector';\nimport {InjectorScope} from './scope';\n\n/**\n * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n *\n * @publicApi\n */\nexport function createInjector(\n    defType: /* InjectorType<any> */ any, parent: Injector|null = null,\n    additionalProviders: StaticProvider[]|null = null, name?: string): Injector {\n  const injector =\n      createInjectorWithoutInjectorInstances(defType, parent, additionalProviders, name);\n  injector.resolveInjectorInitializers();\n  return injector;\n}\n\n/**\n * Creates a new injector without eagerly resolving its injector types. Can be used in places\n * where resolving the injector types immediately can lead to an infinite loop. The injector types\n * should be resolved at a later point by calling `_resolveInjectorDefTypes`.\n */\nexport function createInjectorWithoutInjectorInstances(\n    defType: /* InjectorType<any> */ any, parent: Injector|null = null,\n    additionalProviders: StaticProvider[]|null = null, name?: string,\n    scopes = new Set<InjectorScope>()): R3Injector {\n  const providers = [\n    additionalProviders || EMPTY_ARRAY,\n    importProvidersFrom(defType),\n  ];\n  name = name || (typeof defType === 'object' ? undefined : stringify(defType));\n\n  return new R3Injector(providers, parent || getNullInjector(), name || null, scopes);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {createInjector} from './create_injector';\nimport {THROW_IF_NOT_FOUND, ɵɵinject} from './injector_compatibility';\nimport {InjectorMarkers} from './injector_marker';\nimport {INJECTOR} from './injector_token';\nimport {ɵɵdefineInjectable} from './interface/defs';\nimport {InjectFlags} from './interface/injector';\nimport {StaticProvider} from './interface/provider';\nimport {NullInjector} from './null_injector';\nimport {ProviderToken} from './provider_token';\n\n/**\n * Concrete injectors implement this interface. Injectors are configured\n * with [providers](guide/glossary#provider) that associate\n * dependencies of various types with [injection tokens](guide/glossary#di-token).\n *\n * @see [\"DI Providers\"](guide/dependency-injection-providers).\n * @see `StaticProvider`\n *\n * @usageNotes\n *\n *  The following example creates a service injector instance.\n *\n * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n *\n * ### Usage example\n *\n * {@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n *\n * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * @publicApi\n */\nexport abstract class Injector {\n  static THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n  static NULL: Injector = (/* @__PURE__ */ new NullInjector());\n\n  /**\n   * Retrieves an instance from the injector based on the provided token.\n   * @returns The instance from the injector if defined, otherwise the `notFoundValue`.\n   * @throws When the `notFoundValue` is `undefined` or `Injector.THROW_IF_NOT_FOUND`.\n   */\n  abstract get<T>(token: ProviderToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  /**\n   * @deprecated from v4.0.0 use ProviderToken<T>\n   * @suppress {duplicate}\n   */\n  abstract get(token: any, notFoundValue?: any): any;\n\n  /**\n   * @deprecated from v5 use the new signature Injector.create(options)\n   */\n  static create(providers: StaticProvider[], parent?: Injector): Injector;\n\n  /**\n   * Creates a new injector instance that provides one or more dependencies,\n   * according to a given type or types of `StaticProvider`.\n   *\n   * @param options An object with the following properties:\n   * * `providers`: An array of providers of the [StaticProvider type](api/core/StaticProvider).\n   * * `parent`: (optional) A parent injector.\n   * * `name`: (optional) A developer-defined identifying name for the new injector.\n   *\n   * @returns The new injector instance.\n   *\n   */\n  static create(options: {providers: StaticProvider[], parent?: Injector, name?: string}): Injector;\n\n\n  static create(\n      options: StaticProvider[]|{providers: StaticProvider[], parent?: Injector, name?: string},\n      parent?: Injector): Injector {\n    if (Array.isArray(options)) {\n      return createInjector({name: ''}, parent, options, '');\n    } else {\n      const name = options.name ?? '';\n      return createInjector({name}, options.parent, options.providers, name);\n    }\n  }\n\n  /** @nocollapse */\n  static ɵprov = /** @pureOrBreakMyCode */ ɵɵdefineInjectable({\n    token: Injector,\n    providedIn: 'any',\n    factory: () => ɵɵinject(INJECTOR),\n  });\n\n  /**\n   * @internal\n   * @nocollapse\n   */\n  static __NG_ELEMENT_ID__ = InjectorMarkers.Injector;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../interface/type';\nimport {ERROR_ORIGINAL_ERROR, wrappedError} from '../util/errors';\nimport {stringify} from '../util/stringify';\n\nimport {ReflectiveInjector} from './reflective_injector';\nimport {ReflectiveKey} from './reflective_key';\n\nfunction findFirstClosedCycle(keys: any[]): any[] {\n  const res: any[] = [];\n  for (let i = 0; i < keys.length; ++i) {\n    if (res.indexOf(keys[i]) > -1) {\n      res.push(keys[i]);\n      return res;\n    }\n    res.push(keys[i]);\n  }\n  return res;\n}\n\nfunction constructResolvingPath(keys: any[]): string {\n  if (keys.length > 1) {\n    const reversed = findFirstClosedCycle(keys.slice().reverse());\n    const tokenStrs = reversed.map(k => stringify(k.token));\n    return ' (' + tokenStrs.join(' -> ') + ')';\n  }\n\n  return '';\n}\n\nexport interface InjectionError extends Error {\n  keys: ReflectiveKey[];\n  injectors: ReflectiveInjector[];\n  constructResolvingMessage: (keys: ReflectiveKey[]) => string;\n  addKey(injector: ReflectiveInjector, key: ReflectiveKey): void;\n}\n\nfunction injectionError(\n    injector: ReflectiveInjector, key: ReflectiveKey,\n    constructResolvingMessage: (keys: ReflectiveKey[]) => string,\n    originalError?: Error): InjectionError {\n  const keys = [key];\n  const errMsg = constructResolvingMessage(keys);\n  const error =\n      (originalError ? wrappedError(errMsg, originalError) : Error(errMsg)) as InjectionError;\n  error.addKey = addKey;\n  error.keys = keys;\n  error.injectors = [injector];\n  error.constructResolvingMessage = constructResolvingMessage;\n  (error as any)[ERROR_ORIGINAL_ERROR] = originalError;\n  return error;\n}\n\nfunction addKey(this: InjectionError, injector: ReflectiveInjector, key: ReflectiveKey): void {\n  this.injectors.push(injector);\n  this.keys.push(key);\n  // Note: This updated message won't be reflected in the `.stack` property\n  this.message = this.constructResolvingMessage(this.keys);\n}\n\n/**\n * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n * {@link Injector} does not have a {@link Provider} for the given key.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n */\nexport function noProviderError(injector: ReflectiveInjector, key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(keys: ReflectiveKey[]) {\n    const first = stringify(keys[0].token);\n    return `No provider for ${first}!${constructResolvingPath(keys)}`;\n  });\n}\n\n/**\n * Thrown when dependencies form a cycle.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n */\nexport function cyclicDependencyError(\n    injector: ReflectiveInjector, key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(keys: ReflectiveKey[]) {\n    return `Cannot instantiate cyclic dependency!${constructResolvingPath(keys)}`;\n  });\n}\n\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n */\nexport function instantiationError(\n    injector: ReflectiveInjector, originalException: any, originalStack: any,\n    key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(keys: ReflectiveKey[]) {\n    const first = stringify(keys[0].token);\n    return `${originalException.message}: Error during instantiation of ${first}!${\n        constructResolvingPath(keys)}.`;\n  }, originalException);\n}\n\n/**\n * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n * creation.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n */\nexport function invalidProviderError(provider: any) {\n  return Error(\n      `Invalid provider - only instances of Provider and Type are allowed, got: ${provider}`);\n}\n\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n *\n */\nexport function noAnnotationError(typeOrFunc: Type<any>|Function, params: any[][]): Error {\n  const signature: string[] = [];\n  for (let i = 0, ii = params.length; i < ii; i++) {\n    const parameter = params[i];\n    if (!parameter || parameter.length == 0) {\n      signature.push('?');\n    } else {\n      signature.push(parameter.map(stringify).join(' '));\n    }\n  }\n  return Error(\n      'Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n      signature.join(', ') + '). ' +\n      'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n      stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n\n/**\n * Thrown when getting an object by index.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n *\n */\nexport function outOfBoundsError(index: number) {\n  return Error(`Index ${index} is out-of-bounds.`);\n}\n\n// TODO: add a working example after alpha38 is released\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n */\nexport function mixingMultiProvidersWithRegularProvidersError(\n    provider1: any, provider2: any): Error {\n  return Error(`Cannot mix multi providers and regular providers, got: ${provider1} ${provider2}`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {RuntimeError, RuntimeErrorCode} from '../errors';\nimport {stringify} from '../util/stringify';\n\nimport {resolveForwardRef} from './forward_ref';\n\n\n/**\n * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n *\n * @deprecated No replacement\n * @publicApi\n */\nexport class ReflectiveKey {\n  public readonly displayName: string;\n  /**\n   * Private\n   */\n  constructor(public token: Object, public id: number) {\n    if (!token) {\n      throw new RuntimeError(\n          RuntimeErrorCode.MISSING_INJECTION_TOKEN, ngDevMode && 'Token must be defined!');\n    }\n    this.displayName = stringify(this.token);\n  }\n\n  /**\n   * Retrieves a `Key` for a token.\n   */\n  static get(token: Object): ReflectiveKey {\n    return _globalKeyRegistry.get(resolveForwardRef(token));\n  }\n\n  /**\n   * @returns the number of keys registered in the system.\n   */\n  static get numberOfKeys(): number {\n    return _globalKeyRegistry.numberOfKeys;\n  }\n}\n\nexport class KeyRegistry {\n  private _allKeys = new Map<Object, ReflectiveKey>();\n\n  get(token: Object): ReflectiveKey {\n    if (token instanceof ReflectiveKey) return token;\n\n    if (this._allKeys.has(token)) {\n      return this._allKeys.get(token)!;\n    }\n\n    const newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n    this._allKeys.set(token, newKey);\n    return newKey;\n  }\n\n  get numberOfKeys(): number {\n    return this._allKeys.size;\n  }\n}\n\nconst _globalKeyRegistry = new KeyRegistry();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../interface/type';\n\nimport {resolveForwardRef} from './forward_ref';\nimport {InjectionToken} from './injection_token';\nimport {ClassProvider, ExistingProvider, FactoryProvider, Provider, TypeProvider, ValueProvider} from './interface/provider';\nimport {getReflect} from './jit/util';\nimport {Inject, Optional, Self, SkipSelf} from './metadata';\nimport {invalidProviderError, mixingMultiProvidersWithRegularProvidersError, noAnnotationError} from './reflective_errors';\nimport {ReflectiveKey} from './reflective_key';\n\n\ninterface NormalizedProvider extends TypeProvider, ValueProvider, ClassProvider, ExistingProvider,\n                                     FactoryProvider {}\n\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nexport class ReflectiveDependency {\n  constructor(\n      public key: ReflectiveKey, public optional: boolean, public visibility: Self|SkipSelf|null) {}\n\n  static fromKey(key: ReflectiveKey): ReflectiveDependency {\n    return new ReflectiveDependency(key, false, null);\n  }\n}\n\nconst _EMPTY_LIST: any[] = [];\n\n/**\n * An internal resolved representation of a `Provider` used by the `Injector`.\n *\n * @usageNotes\n * This is usually created automatically by `Injector.resolveAndCreate`.\n *\n * It can be created manually, as follows:\n *\n * ### Example\n *\n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n *\n * expect(injector.get('message')).toEqual('Hello');\n * ```\n *\n * @publicApi\n */\nexport interface ResolvedReflectiveProvider {\n  /**\n   * A key, usually a `Type<any>`.\n   */\n  key: ReflectiveKey;\n\n  /**\n   * Factory function which can return an instance of an object represented by a key.\n   */\n  resolvedFactories: ResolvedReflectiveFactory[];\n\n  /**\n   * Indicates if the provider is a multi-provider or a regular provider.\n   */\n  multiProvider: boolean;\n}\n\nexport class ResolvedReflectiveProvider_ implements ResolvedReflectiveProvider {\n  readonly resolvedFactory: ResolvedReflectiveFactory;\n\n  constructor(\n      public key: ReflectiveKey, public resolvedFactories: ResolvedReflectiveFactory[],\n      public multiProvider: boolean) {\n    this.resolvedFactory = this.resolvedFactories[0];\n  }\n}\n\n/**\n * An internal resolved representation of a factory function created by resolving `Provider`.\n * @publicApi\n */\nexport class ResolvedReflectiveFactory {\n  constructor(\n      /**\n       * Factory function which can return an instance of an object represented by a key.\n       */\n      public factory: Function,\n\n      /**\n       * Arguments (dependencies) to the `factory` function.\n       */\n      public dependencies: ReflectiveDependency[]) {}\n}\n\n\n/**\n * Resolve a single provider.\n */\nfunction resolveReflectiveFactory(provider: NormalizedProvider): ResolvedReflectiveFactory {\n  let factoryFn: Function;\n  let resolvedDeps: ReflectiveDependency[];\n  if (provider.useClass) {\n    const useClass = resolveForwardRef(provider.useClass);\n    factoryFn = getReflect().factory(useClass);\n    resolvedDeps = _dependenciesFor(useClass);\n  } else if (provider.useExisting) {\n    factoryFn = (aliasInstance: any) => aliasInstance;\n    resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n  } else if (provider.useFactory) {\n    factoryFn = provider.useFactory;\n    resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n  } else {\n    factoryFn = () => provider.useValue;\n    resolvedDeps = _EMPTY_LIST;\n  }\n  return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n\n/**\n * Converts the `Provider` into `ResolvedProvider`.\n *\n * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n * syntax.\n */\nfunction resolveReflectiveProvider(provider: NormalizedProvider): ResolvedReflectiveProvider {\n  return new ResolvedReflectiveProvider_(\n      ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)],\n      provider.multi || false);\n}\n\n/**\n * Resolve a list of Providers.\n */\nexport function resolveReflectiveProviders(providers: Provider[]): ResolvedReflectiveProvider[] {\n  const normalized = _normalizeProviders(providers, []);\n  const resolved = normalized.map(resolveReflectiveProvider);\n  const resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n  return Array.from(resolvedProviderMap.values());\n}\n\n/**\n * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n * multi providers have been merged.\n */\nexport function mergeResolvedReflectiveProviders(\n    providers: ResolvedReflectiveProvider[],\n    normalizedProvidersMap: Map<number, ResolvedReflectiveProvider>):\n    Map<number, ResolvedReflectiveProvider> {\n  for (let i = 0; i < providers.length; i++) {\n    const provider = providers[i];\n    const existing = normalizedProvidersMap.get(provider.key.id);\n    if (existing) {\n      if (provider.multiProvider !== existing.multiProvider) {\n        throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n      }\n      if (provider.multiProvider) {\n        for (let j = 0; j < provider.resolvedFactories.length; j++) {\n          existing.resolvedFactories.push(provider.resolvedFactories[j]);\n        }\n      } else {\n        normalizedProvidersMap.set(provider.key.id, provider);\n      }\n    } else {\n      let resolvedProvider: ResolvedReflectiveProvider;\n      if (provider.multiProvider) {\n        resolvedProvider = new ResolvedReflectiveProvider_(\n            provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n      } else {\n        resolvedProvider = provider;\n      }\n      normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n    }\n  }\n  return normalizedProvidersMap;\n}\n\nfunction _normalizeProviders(\n    providers: Provider[], res: NormalizedProvider[]): NormalizedProvider[] {\n  providers.forEach(b => {\n    if (b instanceof Type) {\n      res.push({provide: b, useClass: b} as NormalizedProvider);\n\n    } else if (b && typeof b == 'object' && (b as any).provide !== undefined) {\n      res.push(b as NormalizedProvider);\n\n    } else if (Array.isArray(b)) {\n      _normalizeProviders(b, res);\n\n    } else {\n      throw invalidProviderError(b);\n    }\n  });\n\n  return res;\n}\n\nexport function constructDependencies(\n    typeOrFunc: any, dependencies?: any[]): ReflectiveDependency[] {\n  if (!dependencies) {\n    return _dependenciesFor(typeOrFunc);\n  } else {\n    const params: any[][] = dependencies.map(t => [t]);\n    return dependencies.map(t => _extractToken(typeOrFunc, t, params));\n  }\n}\n\nfunction _dependenciesFor(typeOrFunc: any): ReflectiveDependency[] {\n  const params = getReflect().parameters(typeOrFunc);\n\n  if (!params) return [];\n  if (params.some(p => p == null)) {\n    throw noAnnotationError(typeOrFunc, params);\n  }\n  return params.map(p => _extractToken(typeOrFunc, p, params));\n}\n\nfunction _extractToken(\n    typeOrFunc: any, metadata: any[]|any, params: any[][]): ReflectiveDependency {\n  let token: any = null;\n  let optional = false;\n\n  if (!Array.isArray(metadata)) {\n    if (metadata instanceof Inject) {\n      return _createDependency(metadata.token, optional, null);\n    } else {\n      return _createDependency(metadata, optional, null);\n    }\n  }\n\n  let visibility: Self|SkipSelf|null = null;\n\n  for (let i = 0; i < metadata.length; ++i) {\n    const paramMetadata = metadata[i];\n\n    if (paramMetadata instanceof Type) {\n      token = paramMetadata;\n\n    } else if (paramMetadata instanceof Inject) {\n      token = paramMetadata.token;\n\n    } else if (paramMetadata instanceof Optional) {\n      optional = true;\n\n    } else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n      visibility = paramMetadata;\n    } else if (paramMetadata instanceof InjectionToken) {\n      token = paramMetadata;\n    }\n  }\n\n  token = resolveForwardRef(token);\n\n  if (token != null) {\n    return _createDependency(token, optional, visibility);\n  } else {\n    throw noAnnotationError(typeOrFunc, params);\n  }\n}\n\nfunction _createDependency(\n    token: any, optional: boolean, visibility: Self|SkipSelf|null): ReflectiveDependency {\n  return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from './injector';\nimport {THROW_IF_NOT_FOUND} from './injector_compatibility';\nimport {Provider} from './interface/provider';\nimport {Self, SkipSelf} from './metadata';\nimport {cyclicDependencyError, instantiationError, noProviderError, outOfBoundsError} from './reflective_errors';\nimport {ReflectiveKey} from './reflective_key';\nimport {ReflectiveDependency, ResolvedReflectiveFactory, ResolvedReflectiveProvider, resolveReflectiveProviders} from './reflective_provider';\n\n\n// Threshold for the dynamic version\nconst UNDEFINED = {};\n\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * @usageNotes\n * ### Example\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * @Injectable()\n * class Engine {\n * }\n *\n * @Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * TODO: delete in v14.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @publicApi\n */\nexport abstract class ReflectiveInjector implements Injector {\n  /**\n   * Turns an array of provider definitions into an array of resolved providers.\n   *\n   * A resolution is a process of flattening multiple nested arrays and converting individual\n   * providers into an array of `ResolvedReflectiveProvider`s.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * @Injectable()\n   * class Engine {\n   * }\n   *\n   * @Injectable()\n   * class Car {\n   *   constructor(public engine:Engine) {}\n   * }\n   *\n   * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n   *\n   * expect(providers.length).toEqual(2);\n   *\n   * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n   * expect(providers[0].key.displayName).toBe(\"Car\");\n   * expect(providers[0].dependencies.length).toEqual(1);\n   * expect(providers[0].factory).toBeDefined();\n   *\n   * expect(providers[1].key.displayName).toBe(\"Engine\");\n   * });\n   * ```\n   *\n   */\n  static resolve(providers: Provider[]): ResolvedReflectiveProvider[] {\n    return resolveReflectiveProviders(providers);\n  }\n\n  /**\n   * Resolves an array of providers and creates an injector from those providers.\n   *\n   * The passed-in providers can be an array of `Type`, `Provider`,\n   * or a recursive array of more providers.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * @Injectable()\n   * class Engine {\n   * }\n   *\n   * @Injectable()\n   * class Car {\n   *   constructor(public engine:Engine) {}\n   * }\n   *\n   * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n   * expect(injector.get(Car) instanceof Car).toBe(true);\n   * ```\n   */\n  static resolveAndCreate(providers: Provider[], parent?: Injector): ReflectiveInjector {\n    const ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n    return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n  }\n\n  /**\n   * Creates an injector from previously resolved providers.\n   *\n   * This API is the recommended way to construct injectors in performance-sensitive parts.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * @Injectable()\n   * class Engine {\n   * }\n   *\n   * @Injectable()\n   * class Car {\n   *   constructor(public engine:Engine) {}\n   * }\n   *\n   * var providers = ReflectiveInjector.resolve([Car, Engine]);\n   * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n   * expect(injector.get(Car) instanceof Car).toBe(true);\n   * ```\n   */\n  static fromResolvedProviders(providers: ResolvedReflectiveProvider[], parent?: Injector):\n      ReflectiveInjector {\n    return new ReflectiveInjector_(providers, parent);\n  }\n\n\n  /**\n   * Parent of this injector.\n   *\n   * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n   * -->\n   */\n  abstract get parent(): Injector|null;\n\n  /**\n   * Resolves an array of providers and creates a child injector from those providers.\n   *\n   * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n   * -->\n   *\n   * The passed-in providers can be an array of `Type`, `Provider`,\n   * or a recursive array of more providers.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * class ParentProvider {}\n   * class ChildProvider {}\n   *\n   * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\n   * var child = parent.resolveAndCreateChild([ChildProvider]);\n   *\n   * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n   * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n   * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n   * ```\n   */\n  abstract resolveAndCreateChild(providers: Provider[]): ReflectiveInjector;\n\n  /**\n   * Creates a child injector from previously resolved providers.\n   *\n   * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n   * -->\n   *\n   * This API is the recommended way to construct injectors in performance-sensitive parts.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * class ParentProvider {}\n   * class ChildProvider {}\n   *\n   * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);\n   * var childProviders = ReflectiveInjector.resolve([ChildProvider]);\n   *\n   * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\n   * var child = parent.createChildFromResolved(childProviders);\n   *\n   * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n   * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n   * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n   * ```\n   */\n  abstract createChildFromResolved(providers: ResolvedReflectiveProvider[]): ReflectiveInjector;\n\n  /**\n   * Resolves a provider and instantiates an object in the context of the injector.\n   *\n   * The created object does not get cached by the injector.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * @Injectable()\n   * class Engine {\n   * }\n   *\n   * @Injectable()\n   * class Car {\n   *   constructor(public engine:Engine) {}\n   * }\n   *\n   * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n   *\n   * var car = injector.resolveAndInstantiate(Car);\n   * expect(car.engine).toBe(injector.get(Engine));\n   * expect(car).not.toBe(injector.resolveAndInstantiate(Car));\n   * ```\n   */\n  abstract resolveAndInstantiate(provider: Provider): any;\n\n  /**\n   * Instantiates an object using a resolved provider in the context of the injector.\n   *\n   * The created object does not get cached by the injector.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * @Injectable()\n   * class Engine {\n   * }\n   *\n   * @Injectable()\n   * class Car {\n   *   constructor(public engine:Engine) {}\n   * }\n   *\n   * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n   * var carProvider = ReflectiveInjector.resolve([Car])[0];\n   * var car = injector.instantiateResolved(carProvider);\n   * expect(car.engine).toBe(injector.get(Engine));\n   * expect(car).not.toBe(injector.instantiateResolved(carProvider));\n   * ```\n   */\n  abstract instantiateResolved(provider: ResolvedReflectiveProvider): any;\n\n  abstract get(token: any, notFoundValue?: any): any;\n}\n\nexport class ReflectiveInjector_ implements ReflectiveInjector {\n  private static INJECTOR_KEY = (/* @__PURE__ */ ReflectiveKey.get(Injector));\n  /** @internal */\n  _constructionCounter: number = 0;\n  /** @internal */\n  public _providers: ResolvedReflectiveProvider[];\n  public readonly parent: Injector|null;\n\n  keyIds: number[];\n  objs: any[];\n  /**\n   * Private\n   */\n  constructor(_providers: ResolvedReflectiveProvider[], _parent?: Injector) {\n    this._providers = _providers;\n    this.parent = _parent || null;\n\n    const len = _providers.length;\n\n    this.keyIds = [];\n    this.objs = [];\n\n    for (let i = 0; i < len; i++) {\n      this.keyIds[i] = _providers[i].key.id;\n      this.objs[i] = UNDEFINED;\n    }\n  }\n\n  get(token: any, notFoundValue: any = THROW_IF_NOT_FOUND): any {\n    return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n  }\n\n  resolveAndCreateChild(providers: Provider[]): ReflectiveInjector {\n    const ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n    return this.createChildFromResolved(ResolvedReflectiveProviders);\n  }\n\n  createChildFromResolved(providers: ResolvedReflectiveProvider[]): ReflectiveInjector {\n    const inj = new ReflectiveInjector_(providers);\n    (inj as {parent: Injector | null}).parent = this;\n    return inj;\n  }\n\n  resolveAndInstantiate(provider: Provider): any {\n    return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n  }\n\n  instantiateResolved(provider: ResolvedReflectiveProvider): any {\n    return this._instantiateProvider(provider);\n  }\n\n  getProviderAtIndex(index: number): ResolvedReflectiveProvider {\n    if (index < 0 || index >= this._providers.length) {\n      throw outOfBoundsError(index);\n    }\n    return this._providers[index];\n  }\n\n  /** @internal */\n  _new(provider: ResolvedReflectiveProvider): any {\n    if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n      throw cyclicDependencyError(this, provider.key);\n    }\n    return this._instantiateProvider(provider);\n  }\n\n  private _getMaxNumberOfObjects(): number {\n    return this.objs.length;\n  }\n\n  private _instantiateProvider(provider: ResolvedReflectiveProvider): any {\n    if (provider.multiProvider) {\n      const res = [];\n      for (let i = 0; i < provider.resolvedFactories.length; ++i) {\n        res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n      }\n      return res;\n    } else {\n      return this._instantiate(provider, provider.resolvedFactories[0]);\n    }\n  }\n\n  private _instantiate(\n      provider: ResolvedReflectiveProvider,\n      ResolvedReflectiveFactory: ResolvedReflectiveFactory): any {\n    const factory = ResolvedReflectiveFactory.factory;\n\n    let deps: any[];\n    try {\n      deps =\n          ResolvedReflectiveFactory.dependencies.map(dep => this._getByReflectiveDependency(dep));\n    } catch (e: any) {\n      if (e.addKey) {\n        e.addKey(this, provider.key);\n      }\n      throw e;\n    }\n\n    let obj: any;\n    try {\n      obj = factory(...deps);\n    } catch (e) {\n      throw instantiationError(this, e, (e as Error).stack, provider.key);\n    }\n\n    return obj;\n  }\n\n  private _getByReflectiveDependency(dep: ReflectiveDependency): any {\n    return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n  }\n\n  private _getByKey(key: ReflectiveKey, visibility: Self|SkipSelf|null, notFoundValue: any): any {\n    if (key === ReflectiveInjector_.INJECTOR_KEY) {\n      return this;\n    }\n\n    if (visibility instanceof Self) {\n      return this._getByKeySelf(key, notFoundValue);\n\n    } else {\n      return this._getByKeyDefault(key, notFoundValue, visibility);\n    }\n  }\n\n  private _getObjByKeyId(keyId: number): any {\n    for (let i = 0; i < this.keyIds.length; i++) {\n      if (this.keyIds[i] === keyId) {\n        if (this.objs[i] === UNDEFINED) {\n          this.objs[i] = this._new(this._providers[i]);\n        }\n\n        return this.objs[i];\n      }\n    }\n\n    return UNDEFINED;\n  }\n\n  /** @internal */\n  _throwOrNull(key: ReflectiveKey, notFoundValue: any): any {\n    if (notFoundValue !== THROW_IF_NOT_FOUND) {\n      return notFoundValue;\n    } else {\n      throw noProviderError(this, key);\n    }\n  }\n\n  /** @internal */\n  _getByKeySelf(key: ReflectiveKey, notFoundValue: any): any {\n    const obj = this._getObjByKeyId(key.id);\n    return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n  }\n\n  /** @internal */\n  _getByKeyDefault(key: ReflectiveKey, notFoundValue: any, visibility: Self|SkipSelf|null): any {\n    let inj: Injector|null;\n\n    if (visibility instanceof SkipSelf) {\n      inj = this.parent;\n    } else {\n      inj = this;\n    }\n\n    while (inj instanceof ReflectiveInjector_) {\n      const inj_ = <ReflectiveInjector_>inj;\n      const obj = inj_._getObjByKeyId(key.id);\n      if (obj !== UNDEFINED) return obj;\n      inj = inj_.parent;\n    }\n    if (inj !== null) {\n      return inj.get(key.token, notFoundValue);\n    } else {\n      return this._throwOrNull(key, notFoundValue);\n    }\n  }\n\n  get displayName(): string {\n    const providers =\n        _mapProviders(this, (b: ResolvedReflectiveProvider) => ' \"' + b.key.displayName + '\" ')\n            .join(', ');\n    return `ReflectiveInjector(providers: [${providers}])`;\n  }\n\n  toString(): string {\n    return this.displayName;\n  }\n}\n\nfunction _mapProviders(injector: ReflectiveInjector_, fn: Function): any[] {\n  const res: any[] = [];\n  for (let i = 0; i < injector._providers.length; ++i) {\n    res[i] = fn(injector.getProviderAtIndex(i));\n  }\n  return res;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectFlags, resolveForwardRef} from '../../di';\nimport {assertInjectImplementationNotEqual} from '../../di/inject_switch';\nimport {ɵɵinject} from '../../di/injector_compatibility';\nimport {ProviderToken} from '../../di/provider_token';\nimport {getOrCreateInjectable} from '../di';\nimport {TDirectiveHostNode} from '../interfaces/node';\nimport {getCurrentTNode, getLView} from '../state';\n\n/**\n * Returns the value associated to the given token from the injectors.\n *\n * `directiveInject` is intended to be used for directive, component and pipe factories.\n *  All other injection use `inject` which does not walk the node injector tree.\n *\n * Usage example (in factory function):\n *\n * ```ts\n * class SomeDirective {\n *   constructor(directive: DirectiveA) {}\n *\n *   static ɵdir = ɵɵdefineDirective({\n *     type: SomeDirective,\n *     factory: () => new SomeDirective(ɵɵdirectiveInject(DirectiveA))\n *   });\n * }\n * ```\n * @param token the type or token to inject\n * @param flags Injection flags\n * @returns the value from the injector or `null` when not found\n *\n * @codeGenApi\n */\nexport function ɵɵdirectiveInject<T>(token: ProviderToken<T>): T;\nexport function ɵɵdirectiveInject<T>(token: ProviderToken<T>, flags: InjectFlags): T;\nexport function ɵɵdirectiveInject<T>(token: ProviderToken<T>, flags = InjectFlags.Default): T|null {\n  const lView = getLView();\n  // Fall back to inject() if view hasn't been created. This situation can happen in tests\n  // if inject utilities are used before bootstrapping.\n  if (lView === null) {\n    // Verify that we will not get into infinite loop.\n    ngDevMode && assertInjectImplementationNotEqual(ɵɵdirectiveInject);\n    return ɵɵinject(token, flags);\n  }\n  const tNode = getCurrentTNode();\n  return getOrCreateInjectable<T>(\n      tNode as TDirectiveHostNode, lView, resolveForwardRef(token), flags);\n}\n\n/**\n * Throws an error indicating that a factory function could not be generated by the compiler for a\n * particular class.\n *\n * This instruction allows the actual error message to be optimized away when ngDevMode is turned\n * off, saving bytes of generated code while still providing a good experience in dev mode.\n *\n * The name of the class is not mentioned here, but will be in the generated factory function name\n * and thus in the stack trace.\n *\n * @codeGenApi\n */\nexport function ɵɵinvalidFactory(): never {\n  const msg =\n      ngDevMode ? `This constructor was not compatible with Dependency Injection.` : 'invalid';\n  throw new Error(msg);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {KeyValueArray} from '../../util/array_utils';\nimport {assertNumber, assertNumberInRange} from '../../util/assert';\n\n/**\n * Value stored in the `TData` which is needed to re-concatenate the styling.\n *\n * See: `TStylingKeyPrimitive` and `TStylingStatic`\n */\nexport type TStylingKey = TStylingKeyPrimitive|TStylingStatic;\n\n\n/**\n * The primitive portion (`TStylingStatic` removed) of the value stored in the `TData` which is\n * needed to re-concatenate the styling.\n *\n * - `string`: Stores the property name. Used with `ɵɵstyleProp`/`ɵɵclassProp` instruction.\n * - `null`: Represents map, so there is no name. Used with `ɵɵstyleMap`/`ɵɵclassMap`.\n * - `false`: Represents an ignore case. This happens when `ɵɵstyleProp`/`ɵɵclassProp` instruction\n *   is combined with directive which shadows its input `@Input('class')`. That way the binding\n *   should not participate in the styling resolution.\n */\nexport type TStylingKeyPrimitive = string|null|false;\n\n/**\n * Store the static values for the styling binding.\n *\n * The `TStylingStatic` is just `KeyValueArray` where key `\"\"` (stored at location 0) contains the\n * `TStylingKey` (stored at location 1). In other words this wraps the `TStylingKey` such that the\n * `\"\"` contains the wrapped value.\n *\n * When instructions are resolving styling they may need to look forward or backwards in the linked\n * list to resolve the value. For this reason we have to make sure that he linked list also contains\n * the static values. However the list only has space for one item per styling instruction. For this\n * reason we store the static values here as part of the `TStylingKey`. This means that the\n * resolution function when looking for a value needs to first look at the binding value, and than\n * at `TStylingKey` (if it exists).\n *\n * Imagine we have:\n *\n * ```\n * <div class=\"TEMPLATE\" my-dir>\n *\n * @Directive({\n *   host: {\n *     class: 'DIR',\n *     '[class.dynamic]': 'exp' // ɵɵclassProp('dynamic', ctx.exp);\n *   }\n * })\n * ```\n *\n * In the above case the linked list will contain one item:\n *\n * ```\n *   // assume binding location: 10 for `ɵɵclassProp('dynamic', ctx.exp);`\n *   tData[10] = <TStylingStatic>[\n *     '': 'dynamic', // This is the wrapped value of `TStylingKey`\n *     'DIR': true,   // This is the default static value of directive binding.\n *   ];\n *   tData[10 + 1] = 0; // We don't have prev/next.\n *\n *   lView[10] = undefined;     // assume `ctx.exp` is `undefined`\n *   lView[10 + 1] = undefined; // Just normalized `lView[10]`\n * ```\n *\n * So when the function is resolving styling value, it first needs to look into the linked list\n * (there is none) and than into the static `TStylingStatic` too see if there is a default value for\n * `dynamic` (there is not). Therefore it is safe to remove it.\n *\n * If setting `true` case:\n * ```\n *   lView[10] = true;     // assume `ctx.exp` is `true`\n *   lView[10 + 1] = true; // Just normalized `lView[10]`\n * ```\n * So when the function is resolving styling value, it first needs to look into the linked list\n * (there is none) and than into `TNode.residualClass` (TNode.residualStyle) which contains\n * ```\n *   tNode.residualClass = [\n *     'TEMPLATE': true,\n *   ];\n * ```\n *\n * This means that it is safe to add class.\n */\nexport interface TStylingStatic extends KeyValueArray<any> {}\n\n/**\n * This is a branded number which contains previous and next index.\n *\n * When we come across styling instructions we need to store the `TStylingKey` in the correct\n * order so that we can re-concatenate the styling value in the desired priority.\n *\n * The insertion can happen either at the:\n * - end of template as in the case of coming across additional styling instruction in the template\n * - in front of the template in the case of coming across additional instruction in the\n *   `hostBindings`.\n *\n * We use `TStylingRange` to store the previous and next index into the `TData` where the template\n * bindings can be found.\n *\n * - bit 0 is used to mark that the previous index has a duplicate for current value.\n * - bit 1 is used to mark that the next index has a duplicate for the current value.\n * - bits 2-16 are used to encode the next/tail of the template.\n * - bits 17-32 are used to encode the previous/head of template.\n *\n * NODE: *duplicate* false implies that it is statically known that this binding will not collide\n * with other bindings and therefore there is no need to check other bindings. For example the\n * bindings in `<div [style.color]=\"exp\" [style.width]=\"exp\">` will never collide and will have\n * their bits set accordingly. Previous duplicate means that we may need to check previous if the\n * current binding is `null`. Next duplicate means that we may need to check next bindings if the\n * current binding is not `null`.\n *\n * NOTE: `0` has special significance and represents `null` as in no additional pointer.\n */\nexport interface TStylingRange {\n  __brand__: 'TStylingRange';\n}\n\n/**\n * Shift and masks constants for encoding two numbers into and duplicate info into a single number.\n */\nexport const enum StylingRange {\n  /// Number of bits to shift for the previous pointer\n  PREV_SHIFT = 17,\n  /// Previous pointer mask.\n  PREV_MASK = 0xFFFE0000,\n\n  /// Number of bits to shift for the next pointer\n  NEXT_SHIFT = 2,\n  /// Next pointer mask.\n  NEXT_MASK = 0x001FFFC,\n\n  // Mask to remove negative bit. (interpret number as positive)\n  UNSIGNED_MASK = 0x7FFF,\n\n  /**\n   * This bit is set if the previous bindings contains a binding which could possibly cause a\n   * duplicate. For example: `<div [style]=\"map\" [style.width]=\"width\">`, the `width` binding will\n   * have previous duplicate set. The implication is that if `width` binding becomes `null`, it is\n   * necessary to defer the value to `map.width`. (Because `width` overwrites `map.width`.)\n   */\n  PREV_DUPLICATE = 0x02,\n\n  /**\n   * This bit is set to if the next binding contains a binding which could possibly cause a\n   * duplicate. For example: `<div [style]=\"map\" [style.width]=\"width\">`, the `map` binding will\n   * have next duplicate set. The implication is that if `map.width` binding becomes not `null`, it\n   * is necessary to defer the value to `width`. (Because `width` overwrites `map.width`.)\n   */\n  NEXT_DUPLICATE = 0x01,\n}\n\n\nexport function toTStylingRange(prev: number, next: number): TStylingRange {\n  ngDevMode && assertNumberInRange(prev, 0, StylingRange.UNSIGNED_MASK);\n  ngDevMode && assertNumberInRange(next, 0, StylingRange.UNSIGNED_MASK);\n  return (prev << StylingRange.PREV_SHIFT | next << StylingRange.NEXT_SHIFT) as any;\n}\n\nexport function getTStylingRangePrev(tStylingRange: TStylingRange): number {\n  ngDevMode && assertNumber(tStylingRange, 'expected number');\n  return ((tStylingRange as any as number) >> StylingRange.PREV_SHIFT) & StylingRange.UNSIGNED_MASK;\n}\n\nexport function getTStylingRangePrevDuplicate(tStylingRange: TStylingRange): boolean {\n  ngDevMode && assertNumber(tStylingRange, 'expected number');\n  return ((tStylingRange as any as number) & StylingRange.PREV_DUPLICATE) ==\n      StylingRange.PREV_DUPLICATE;\n}\n\nexport function setTStylingRangePrev(\n    tStylingRange: TStylingRange, previous: number): TStylingRange {\n  ngDevMode && assertNumber(tStylingRange, 'expected number');\n  ngDevMode && assertNumberInRange(previous, 0, StylingRange.UNSIGNED_MASK);\n  return (((tStylingRange as any as number) & ~StylingRange.PREV_MASK) |\n          (previous << StylingRange.PREV_SHIFT)) as any;\n}\n\nexport function setTStylingRangePrevDuplicate(tStylingRange: TStylingRange): TStylingRange {\n  ngDevMode && assertNumber(tStylingRange, 'expected number');\n  return ((tStylingRange as any as number) | StylingRange.PREV_DUPLICATE) as any;\n}\n\nexport function getTStylingRangeNext(tStylingRange: TStylingRange): number {\n  ngDevMode && assertNumber(tStylingRange, 'expected number');\n  return ((tStylingRange as any as number) & StylingRange.NEXT_MASK) >> StylingRange.NEXT_SHIFT;\n}\n\nexport function setTStylingRangeNext(tStylingRange: TStylingRange, next: number): TStylingRange {\n  ngDevMode && assertNumber(tStylingRange, 'expected number');\n  ngDevMode && assertNumberInRange(next, 0, StylingRange.UNSIGNED_MASK);\n  return (((tStylingRange as any as number) & ~StylingRange.NEXT_MASK) |  //\n          next << StylingRange.NEXT_SHIFT) as any;\n}\n\nexport function getTStylingRangeNextDuplicate(tStylingRange: TStylingRange): boolean {\n  ngDevMode && assertNumber(tStylingRange, 'expected number');\n  return ((tStylingRange as any as number) & StylingRange.NEXT_DUPLICATE) ===\n      StylingRange.NEXT_DUPLICATE;\n}\n\nexport function setTStylingRangeNextDuplicate(tStylingRange: TStylingRange): TStylingRange {\n  ngDevMode && assertNumber(tStylingRange, 'expected number');\n  return ((tStylingRange as any as number) | StylingRange.NEXT_DUPLICATE) as any;\n}\n\nexport function getTStylingRangeTail(tStylingRange: TStylingRange): number {\n  ngDevMode && assertNumber(tStylingRange, 'expected number');\n  const next = getTStylingRangeNext(tStylingRange);\n  return next === 0 ? getTStylingRangePrev(tStylingRange) : next;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../../di/injector';\nimport {ErrorHandler} from '../../error_handler';\nimport {RuntimeError, RuntimeErrorCode} from '../../errors';\nimport {DoCheck, OnChanges, OnInit} from '../../interface/lifecycle_hooks';\nimport {SchemaMetadata} from '../../metadata/schema';\nimport {ViewEncapsulation} from '../../metadata/view';\nimport {validateAgainstEventAttributes, validateAgainstEventProperties} from '../../sanitization/sanitization';\nimport {Sanitizer} from '../../sanitization/sanitizer';\nimport {assertDefined, assertEqual, assertGreaterThanOrEqual, assertIndexInRange, assertNotEqual, assertNotSame, assertSame, assertString} from '../../util/assert';\nimport {escapeCommentText} from '../../util/dom';\nimport {normalizeDebugBindingName, normalizeDebugBindingValue} from '../../util/ng_reflect';\nimport {stringify} from '../../util/stringify';\nimport {assertFirstCreatePass, assertFirstUpdatePass, assertLContainer, assertLView, assertTNodeForLView, assertTNodeForTView} from '../assert';\nimport {attachPatchData, readPatchedLView} from '../context_discovery';\nimport {getFactoryDef} from '../definition_factory';\nimport {diPublicInInjector, getNodeInjectable, getOrCreateNodeInjectorForNode} from '../di';\nimport {throwMultipleComponentError} from '../errors';\nimport {executeCheckHooks, executeInitAndCheckHooks, incrementInitPhaseFlags} from '../hooks';\nimport {CONTAINER_HEADER_OFFSET, HAS_TRANSPLANTED_VIEWS, LContainer, MOVED_VIEWS} from '../interfaces/container';\nimport {ComponentDef, ComponentTemplate, DirectiveDef, DirectiveDefListOrFactory, HostBindingsFunction, PipeDefListOrFactory, RenderFlags, ViewQueriesFunction} from '../interfaces/definition';\nimport {NodeInjectorFactory} from '../interfaces/injector';\nimport {getUniqueLViewId} from '../interfaces/lview_tracking';\nimport {AttributeMarker, InitialInputData, InitialInputs, LocalRefExtractor, PropertyAliases, PropertyAliasValue, TAttributes, TConstantsOrFactory, TContainerNode, TDirectiveHostNode, TElementContainerNode, TElementNode, TIcuContainerNode, TNode, TNodeFlags, TNodeType, TProjectionNode} from '../interfaces/node';\nimport {Renderer, RendererFactory} from '../interfaces/renderer';\nimport {RComment, RElement, RNode, RText} from '../interfaces/renderer_dom';\nimport {SanitizerFn} from '../interfaces/sanitization';\nimport {isComponentDef, isComponentHost, isContentQueryHost, isRootView} from '../interfaces/type_checks';\nimport {CHILD_HEAD, CHILD_TAIL, CLEANUP, CONTEXT, DECLARATION_COMPONENT_VIEW, DECLARATION_VIEW, EMBEDDED_VIEW_INJECTOR, FLAGS, HEADER_OFFSET, HOST, HostBindingOpCodes, ID, InitPhaseState, INJECTOR, LView, LViewFlags, NEXT, PARENT, RENDERER, RENDERER_FACTORY, RootContext, RootContextFlags, SANITIZER, T_HOST, TData, TRANSPLANTED_VIEWS_TO_REFRESH, TVIEW, TView, TViewType} from '../interfaces/view';\nimport {assertPureTNodeType, assertTNodeType} from '../node_assert';\nimport {updateTextNode} from '../node_manipulation';\nimport {isInlineTemplate, isNodeMatchingSelectorList} from '../node_selector_matcher';\nimport {profiler, ProfilerEvent} from '../profiler';\nimport {enterView, getBindingsEnabled, getCurrentDirectiveIndex, getCurrentParentTNode, getCurrentTNode, getCurrentTNodePlaceholderOk, getSelectedIndex, isCurrentTNodeParent, isInCheckNoChangesMode, isInI18nBlock, leaveView, setBindingIndex, setBindingRootForHostBindings, setCurrentDirectiveIndex, setCurrentQueryIndex, setCurrentTNode, setIsInCheckNoChangesMode, setSelectedIndex} from '../state';\nimport {NO_CHANGE} from '../tokens';\nimport {mergeHostAttrs} from '../util/attrs_utils';\nimport {INTERPOLATION_DELIMITER} from '../util/misc_utils';\nimport {renderStringify, stringifyForError} from '../util/stringify_utils';\nimport {getFirstLContainer, getLViewParent, getNextLContainer} from '../util/view_traversal_utils';\nimport {getComponentLViewByIndex, getNativeByIndex, getNativeByTNode, isCreationMode, resetPreOrderHookFlags, unwrapLView, updateTransplantedViewCount, viewAttachedToChangeDetector} from '../util/view_utils';\n\nimport {selectIndexInternal} from './advance';\nimport {ɵɵdirectiveInject} from './di';\nimport {handleUnknownPropertyError, isPropertyValid, matchingSchemas} from './element_validation';\nimport {attachLContainerDebug, attachLViewDebug, cloneToLViewFromTViewBlueprint, cloneToTViewData, LCleanup, LViewBlueprint, MatchesArray, TCleanup, TNodeDebug, TNodeInitialInputs, TNodeLocalNames, TViewComponents, TViewConstructor} from './lview_debug';\n\n/**\n * A permanent marker promise which signifies that the current CD tree is\n * clean.\n */\nconst _CLEAN_PROMISE = (() => Promise.resolve(null))();\n\n/**\n * Invoke `HostBindingsFunction`s for view.\n *\n * This methods executes `TView.hostBindingOpCodes`. It is used to execute the\n * `HostBindingsFunction`s associated with the current `LView`.\n *\n * @param tView Current `TView`.\n * @param lView Current `LView`.\n */\nexport function processHostBindingOpCodes(tView: TView, lView: LView): void {\n  const hostBindingOpCodes = tView.hostBindingOpCodes;\n  if (hostBindingOpCodes === null) return;\n  try {\n    for (let i = 0; i < hostBindingOpCodes.length; i++) {\n      const opCode = hostBindingOpCodes[i] as number;\n      if (opCode < 0) {\n        // Negative numbers are element indexes.\n        setSelectedIndex(~opCode);\n      } else {\n        // Positive numbers are NumberTuple which store bindingRootIndex and directiveIndex.\n        const directiveIdx = opCode;\n        const bindingRootIndx = hostBindingOpCodes[++i] as number;\n        const hostBindingFn = hostBindingOpCodes[++i] as HostBindingsFunction<any>;\n        setBindingRootForHostBindings(bindingRootIndx, directiveIdx);\n        const context = lView[directiveIdx];\n        hostBindingFn(RenderFlags.Update, context);\n      }\n    }\n  } finally {\n    setSelectedIndex(-1);\n  }\n}\n\n\n/** Refreshes all content queries declared by directives in a given view */\nfunction refreshContentQueries(tView: TView, lView: LView): void {\n  const contentQueries = tView.contentQueries;\n  if (contentQueries !== null) {\n    for (let i = 0; i < contentQueries.length; i += 2) {\n      const queryStartIdx = contentQueries[i];\n      const directiveDefIdx = contentQueries[i + 1];\n      if (directiveDefIdx !== -1) {\n        const directiveDef = tView.data[directiveDefIdx] as DirectiveDef<any>;\n        ngDevMode && assertDefined(directiveDef, 'DirectiveDef not found.');\n        ngDevMode &&\n            assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n        setCurrentQueryIndex(queryStartIdx);\n        directiveDef.contentQueries!(RenderFlags.Update, lView[directiveDefIdx], directiveDefIdx);\n      }\n    }\n  }\n}\n\n/** Refreshes child components in the current view (update mode). */\nfunction refreshChildComponents(hostLView: LView, components: number[]): void {\n  for (let i = 0; i < components.length; i++) {\n    refreshComponent(hostLView, components[i]);\n  }\n}\n\n/** Renders child components in the current view (creation mode). */\nfunction renderChildComponents(hostLView: LView, components: number[]): void {\n  for (let i = 0; i < components.length; i++) {\n    renderComponent(hostLView, components[i]);\n  }\n}\n\nexport function createLView<T>(\n    parentLView: LView|null, tView: TView, context: T|null, flags: LViewFlags, host: RElement|null,\n    tHostNode: TNode|null, rendererFactory: RendererFactory|null, renderer: Renderer|null,\n    sanitizer: Sanitizer|null, injector: Injector|null,\n    embeddedViewInjector: Injector|null): LView {\n  const lView =\n      ngDevMode ? cloneToLViewFromTViewBlueprint(tView) : tView.blueprint.slice() as LView;\n  lView[HOST] = host;\n  lView[FLAGS] = flags | LViewFlags.CreationMode | LViewFlags.Attached | LViewFlags.FirstLViewPass;\n  if (embeddedViewInjector !== null ||\n      (parentLView && (parentLView[FLAGS] & LViewFlags.HasEmbeddedViewInjector))) {\n    lView[FLAGS] |= LViewFlags.HasEmbeddedViewInjector;\n  }\n  resetPreOrderHookFlags(lView);\n  ngDevMode && tView.declTNode && parentLView && assertTNodeForLView(tView.declTNode, parentLView);\n  lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n  lView[CONTEXT] = context;\n  lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY])!;\n  ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n  lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER])!;\n  ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n  lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null!;\n  lView[INJECTOR as any] = injector || parentLView && parentLView[INJECTOR] || null;\n  lView[T_HOST] = tHostNode;\n  lView[ID] = getUniqueLViewId();\n  lView[EMBEDDED_VIEW_INJECTOR as any] = embeddedViewInjector;\n  ngDevMode &&\n      assertEqual(\n          tView.type == TViewType.Embedded ? parentLView !== null : true, true,\n          'Embedded views must have parentLView');\n  lView[DECLARATION_COMPONENT_VIEW] =\n      tView.type == TViewType.Embedded ? parentLView![DECLARATION_COMPONENT_VIEW] : lView;\n  ngDevMode && attachLViewDebug(lView);\n  return lView;\n}\n\n/**\n * Create and stores the TNode, and hooks it up to the tree.\n *\n * @param tView The current `TView`.\n * @param index The index at which the TNode should be saved (null if view, since they are not\n * saved).\n * @param type The type of TNode to create\n * @param native The native element for this node, if applicable\n * @param name The tag name of the associated native element, if applicable\n * @param attrs Any attrs for the native element, if applicable\n */\nexport function getOrCreateTNode(\n    tView: TView, index: number, type: TNodeType.Element|TNodeType.Text, name: string|null,\n    attrs: TAttributes|null): TElementNode;\nexport function getOrCreateTNode(\n    tView: TView, index: number, type: TNodeType.Container, name: string|null,\n    attrs: TAttributes|null): TContainerNode;\nexport function getOrCreateTNode(\n    tView: TView, index: number, type: TNodeType.Projection, name: null,\n    attrs: TAttributes|null): TProjectionNode;\nexport function getOrCreateTNode(\n    tView: TView, index: number, type: TNodeType.ElementContainer, name: string|null,\n    attrs: TAttributes|null): TElementContainerNode;\nexport function getOrCreateTNode(\n    tView: TView, index: number, type: TNodeType.Icu, name: null,\n    attrs: TAttributes|null): TElementContainerNode;\nexport function getOrCreateTNode(\n    tView: TView, index: number, type: TNodeType, name: string|null, attrs: TAttributes|null):\n    TElementNode&TContainerNode&TElementContainerNode&TProjectionNode&TIcuContainerNode {\n  ngDevMode && index !== 0 &&  // 0 are bogus nodes and they are OK. See `createContainerRef` in\n                               // `view_engine_compatibility` for additional context.\n      assertGreaterThanOrEqual(index, HEADER_OFFSET, 'TNodes can\\'t be in the LView header.');\n  // Keep this function short, so that the VM will inline it.\n  ngDevMode && assertPureTNodeType(type);\n  let tNode = tView.data[index] as TNode;\n  if (tNode === null) {\n    tNode = createTNodeAtIndex(tView, index, type, name, attrs);\n    if (isInI18nBlock()) {\n      // If we are in i18n block then all elements should be pre declared through `Placeholder`\n      // See `TNodeType.Placeholder` and `LFrame.inI18n` for more context.\n      // If the `TNode` was not pre-declared than it means it was not mentioned which means it was\n      // removed, so we mark it as detached.\n      tNode.flags |= TNodeFlags.isDetached;\n    }\n  } else if (tNode.type & TNodeType.Placeholder) {\n    tNode.type = type;\n    tNode.value = name;\n    tNode.attrs = attrs;\n    const parent = getCurrentParentTNode();\n    tNode.injectorIndex = parent === null ? -1 : parent.injectorIndex;\n    ngDevMode && assertTNodeForTView(tNode, tView);\n    ngDevMode && assertEqual(index, tNode.index, 'Expecting same index');\n  }\n  setCurrentTNode(tNode, true);\n  return tNode as TElementNode & TContainerNode & TElementContainerNode & TProjectionNode &\n      TIcuContainerNode;\n}\n\nexport function createTNodeAtIndex(\n    tView: TView, index: number, type: TNodeType, name: string|null, attrs: TAttributes|null) {\n  const currentTNode = getCurrentTNodePlaceholderOk();\n  const isParent = isCurrentTNodeParent();\n  const parent = isParent ? currentTNode : currentTNode && currentTNode.parent;\n  // Parents cannot cross component boundaries because components will be used in multiple places.\n  const tNode = tView.data[index] =\n      createTNode(tView, parent as TElementNode | TContainerNode, type, index, name, attrs);\n  // Assign a pointer to the first child node of a given view. The first node is not always the one\n  // at index 0, in case of i18n, index 0 can be the instruction `i18nStart` and the first node has\n  // the index 1 or more, so we can't just check node index.\n  if (tView.firstChild === null) {\n    tView.firstChild = tNode;\n  }\n  if (currentTNode !== null) {\n    if (isParent) {\n      // FIXME(misko): This logic looks unnecessarily complicated. Could we simplify?\n      if (currentTNode.child == null && tNode.parent !== null) {\n        // We are in the same view, which means we are adding content node to the parent view.\n        currentTNode.child = tNode;\n      }\n    } else {\n      if (currentTNode.next === null) {\n        // In the case of i18n the `currentTNode` may already be linked, in which case we don't want\n        // to break the links which i18n created.\n        currentTNode.next = tNode;\n      }\n    }\n  }\n  return tNode;\n}\n\n/**\n * When elements are created dynamically after a view blueprint is created (e.g. through\n * i18nApply()), we need to adjust the blueprint for future\n * template passes.\n *\n * @param tView `TView` associated with `LView`\n * @param lView The `LView` containing the blueprint to adjust\n * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n * @param initialValue Initial value to store in blueprint\n */\nexport function allocExpando(\n    tView: TView, lView: LView, numSlotsToAlloc: number, initialValue: any): number {\n  if (numSlotsToAlloc === 0) return -1;\n  if (ngDevMode) {\n    assertFirstCreatePass(tView);\n    assertSame(tView, lView[TVIEW], '`LView` must be associated with `TView`!');\n    assertEqual(tView.data.length, lView.length, 'Expecting LView to be same size as TView');\n    assertEqual(\n        tView.data.length, tView.blueprint.length, 'Expecting Blueprint to be same size as TView');\n    assertFirstUpdatePass(tView);\n  }\n  const allocIdx = lView.length;\n  for (let i = 0; i < numSlotsToAlloc; i++) {\n    lView.push(initialValue);\n    tView.blueprint.push(initialValue);\n    tView.data.push(null);\n  }\n  return allocIdx;\n}\n\n\n//////////////////////////\n//// Render\n//////////////////////////\n\n/**\n * Processes a view in the creation mode. This includes a number of steps in a specific order:\n * - creating view query functions (if any);\n * - executing a template function in the creation mode;\n * - updating static queries (if any);\n * - creating child components defined in a given view.\n */\nexport function renderView<T>(tView: TView, lView: LView<T>, context: T): void {\n  ngDevMode && assertEqual(isCreationMode(lView), true, 'Should be run in creation mode');\n  enterView(lView);\n  try {\n    const viewQuery = tView.viewQuery;\n    if (viewQuery !== null) {\n      executeViewQueryFn<T>(RenderFlags.Create, viewQuery, context);\n    }\n\n    // Execute a template associated with this view, if it exists. A template function might not be\n    // defined for the root component views.\n    const templateFn = tView.template;\n    if (templateFn !== null) {\n      executeTemplate<T>(tView, lView, templateFn, RenderFlags.Create, context);\n    }\n\n    // This needs to be set before children are processed to support recursive components.\n    // This must be set to false immediately after the first creation run because in an\n    // ngFor loop, all the views will be created together before update mode runs and turns\n    // off firstCreatePass. If we don't set it here, instances will perform directive\n    // matching, etc again and again.\n    if (tView.firstCreatePass) {\n      tView.firstCreatePass = false;\n    }\n\n    // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n    // content queries are resolved during change detection (i.e. update mode), after embedded\n    // views are refreshed (see block above).\n    if (tView.staticContentQueries) {\n      refreshContentQueries(tView, lView);\n    }\n\n    // We must materialize query results before child components are processed\n    // in case a child component has projected a container. The LContainer needs\n    // to exist so the embedded views are properly attached by the container.\n    if (tView.staticViewQueries) {\n      executeViewQueryFn<T>(RenderFlags.Update, tView.viewQuery!, context);\n    }\n\n    // Render child component views.\n    const components = tView.components;\n    if (components !== null) {\n      renderChildComponents(lView, components);\n    }\n\n  } catch (error) {\n    // If we didn't manage to get past the first template pass due to\n    // an error, mark the view as corrupted so we can try to recover.\n    if (tView.firstCreatePass) {\n      tView.incompleteFirstPass = true;\n      tView.firstCreatePass = false;\n    }\n\n    throw error;\n  } finally {\n    lView[FLAGS] &= ~LViewFlags.CreationMode;\n    leaveView();\n  }\n}\n\n/**\n * Processes a view in update mode. This includes a number of steps in a specific order:\n * - executing a template function in update mode;\n * - executing hooks;\n * - refreshing queries;\n * - setting host bindings;\n * - refreshing child (embedded and component) views.\n */\nexport function refreshView<T>(\n    tView: TView, lView: LView, templateFn: ComponentTemplate<{}>|null, context: T) {\n  ngDevMode && assertEqual(isCreationMode(lView), false, 'Should be run in update mode');\n  const flags = lView[FLAGS];\n  if ((flags & LViewFlags.Destroyed) === LViewFlags.Destroyed) return;\n  enterView(lView);\n  // Check no changes mode is a dev only mode used to verify that bindings have not changed\n  // since they were assigned. We do not want to execute lifecycle hooks in that mode.\n  const isInCheckNoChangesPass = ngDevMode && isInCheckNoChangesMode();\n  try {\n    resetPreOrderHookFlags(lView);\n\n    setBindingIndex(tView.bindingStartIndex);\n    if (templateFn !== null) {\n      executeTemplate(tView, lView, templateFn, RenderFlags.Update, context);\n    }\n\n    const hooksInitPhaseCompleted =\n        (flags & LViewFlags.InitPhaseStateMask) === InitPhaseState.InitPhaseCompleted;\n\n    // execute pre-order hooks (OnInit, OnChanges, DoCheck)\n    // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n    if (!isInCheckNoChangesPass) {\n      if (hooksInitPhaseCompleted) {\n        const preOrderCheckHooks = tView.preOrderCheckHooks;\n        if (preOrderCheckHooks !== null) {\n          executeCheckHooks(lView, preOrderCheckHooks, null);\n        }\n      } else {\n        const preOrderHooks = tView.preOrderHooks;\n        if (preOrderHooks !== null) {\n          executeInitAndCheckHooks(lView, preOrderHooks, InitPhaseState.OnInitHooksToBeRun, null);\n        }\n        incrementInitPhaseFlags(lView, InitPhaseState.OnInitHooksToBeRun);\n      }\n    }\n\n    // First mark transplanted views that are declared in this lView as needing a refresh at their\n    // insertion points. This is needed to avoid the situation where the template is defined in this\n    // `LView` but its declaration appears after the insertion component.\n    markTransplantedViewsForRefresh(lView);\n    refreshEmbeddedViews(lView);\n\n    // Content query results must be refreshed before content hooks are called.\n    if (tView.contentQueries !== null) {\n      refreshContentQueries(tView, lView);\n    }\n\n    // execute content hooks (AfterContentInit, AfterContentChecked)\n    // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n    if (!isInCheckNoChangesPass) {\n      if (hooksInitPhaseCompleted) {\n        const contentCheckHooks = tView.contentCheckHooks;\n        if (contentCheckHooks !== null) {\n          executeCheckHooks(lView, contentCheckHooks);\n        }\n      } else {\n        const contentHooks = tView.contentHooks;\n        if (contentHooks !== null) {\n          executeInitAndCheckHooks(\n              lView, contentHooks, InitPhaseState.AfterContentInitHooksToBeRun);\n        }\n        incrementInitPhaseFlags(lView, InitPhaseState.AfterContentInitHooksToBeRun);\n      }\n    }\n\n    processHostBindingOpCodes(tView, lView);\n\n    // Refresh child component views.\n    const components = tView.components;\n    if (components !== null) {\n      refreshChildComponents(lView, components);\n    }\n\n    // View queries must execute after refreshing child components because a template in this view\n    // could be inserted in a child component. If the view query executes before child component\n    // refresh, the template might not yet be inserted.\n    const viewQuery = tView.viewQuery;\n    if (viewQuery !== null) {\n      executeViewQueryFn<T>(RenderFlags.Update, viewQuery, context);\n    }\n\n    // execute view hooks (AfterViewInit, AfterViewChecked)\n    // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n    if (!isInCheckNoChangesPass) {\n      if (hooksInitPhaseCompleted) {\n        const viewCheckHooks = tView.viewCheckHooks;\n        if (viewCheckHooks !== null) {\n          executeCheckHooks(lView, viewCheckHooks);\n        }\n      } else {\n        const viewHooks = tView.viewHooks;\n        if (viewHooks !== null) {\n          executeInitAndCheckHooks(lView, viewHooks, InitPhaseState.AfterViewInitHooksToBeRun);\n        }\n        incrementInitPhaseFlags(lView, InitPhaseState.AfterViewInitHooksToBeRun);\n      }\n    }\n    if (tView.firstUpdatePass === true) {\n      // We need to make sure that we only flip the flag on successful `refreshView` only\n      // Don't do this in `finally` block.\n      // If we did this in `finally` block then an exception could block the execution of styling\n      // instructions which in turn would be unable to insert themselves into the styling linked\n      // list. The result of this would be that if the exception would not be throw on subsequent CD\n      // the styling would be unable to process it data and reflect to the DOM.\n      tView.firstUpdatePass = false;\n    }\n\n    // Do not reset the dirty state when running in check no changes mode. We don't want components\n    // to behave differently depending on whether check no changes is enabled or not. For example:\n    // Marking an OnPush component as dirty from within the `ngAfterViewInit` hook in order to\n    // refresh a `NgClass` binding should work. If we would reset the dirty state in the check\n    // no changes cycle, the component would be not be dirty for the next update pass. This would\n    // be different in production mode where the component dirty state is not reset.\n    if (!isInCheckNoChangesPass) {\n      lView[FLAGS] &= ~(LViewFlags.Dirty | LViewFlags.FirstLViewPass);\n    }\n    if (lView[FLAGS] & LViewFlags.RefreshTransplantedView) {\n      lView[FLAGS] &= ~LViewFlags.RefreshTransplantedView;\n      updateTransplantedViewCount(lView[PARENT] as LContainer, -1);\n    }\n  } finally {\n    leaveView();\n  }\n}\n\nexport function renderComponentOrTemplate<T>(\n    tView: TView, lView: LView, templateFn: ComponentTemplate<{}>|null, context: T) {\n  const rendererFactory = lView[RENDERER_FACTORY];\n\n  // Check no changes mode is a dev only mode used to verify that bindings have not changed\n  // since they were assigned. We do not want to invoke renderer factory functions in that mode\n  // to avoid any possible side-effects.\n  const checkNoChangesMode = !!ngDevMode && isInCheckNoChangesMode();\n  const creationModeIsActive = isCreationMode(lView);\n  try {\n    if (!checkNoChangesMode && !creationModeIsActive && rendererFactory.begin) {\n      rendererFactory.begin();\n    }\n    if (creationModeIsActive) {\n      renderView(tView, lView, context);\n    }\n    refreshView(tView, lView, templateFn, context);\n  } finally {\n    if (!checkNoChangesMode && !creationModeIsActive && rendererFactory.end) {\n      rendererFactory.end();\n    }\n  }\n}\n\nfunction executeTemplate<T>(\n    tView: TView, lView: LView<T>, templateFn: ComponentTemplate<T>, rf: RenderFlags, context: T) {\n  const prevSelectedIndex = getSelectedIndex();\n  const isUpdatePhase = rf & RenderFlags.Update;\n  try {\n    setSelectedIndex(-1);\n    if (isUpdatePhase && lView.length > HEADER_OFFSET) {\n      // When we're updating, inherently select 0 so we don't\n      // have to generate that instruction for most update blocks.\n      selectIndexInternal(tView, lView, HEADER_OFFSET, !!ngDevMode && isInCheckNoChangesMode());\n    }\n\n    const preHookType =\n        isUpdatePhase ? ProfilerEvent.TemplateUpdateStart : ProfilerEvent.TemplateCreateStart;\n    profiler(preHookType, context as unknown as {});\n    templateFn(rf, context);\n  } finally {\n    setSelectedIndex(prevSelectedIndex);\n\n    const postHookType =\n        isUpdatePhase ? ProfilerEvent.TemplateUpdateEnd : ProfilerEvent.TemplateCreateEnd;\n    profiler(postHookType, context as unknown as {});\n  }\n}\n\n//////////////////////////\n//// Element\n//////////////////////////\n\nexport function executeContentQueries(tView: TView, tNode: TNode, lView: LView) {\n  if (isContentQueryHost(tNode)) {\n    const start = tNode.directiveStart;\n    const end = tNode.directiveEnd;\n    for (let directiveIndex = start; directiveIndex < end; directiveIndex++) {\n      const def = tView.data[directiveIndex] as DirectiveDef<any>;\n      if (def.contentQueries) {\n        def.contentQueries(RenderFlags.Create, lView[directiveIndex], directiveIndex);\n      }\n    }\n  }\n}\n\n\n/**\n * Creates directive instances.\n */\nexport function createDirectivesInstances(tView: TView, lView: LView, tNode: TDirectiveHostNode) {\n  if (!getBindingsEnabled()) return;\n  instantiateAllDirectives(tView, lView, tNode, getNativeByTNode(tNode, lView));\n  if ((tNode.flags & TNodeFlags.hasHostBindings) === TNodeFlags.hasHostBindings) {\n    invokeDirectivesHostBindings(tView, lView, tNode);\n  }\n}\n\n/**\n * Takes a list of local names and indices and pushes the resolved local variable values\n * to LView in the same order as they are loaded in the template with load().\n */\nexport function saveResolvedLocalsInData(\n    viewData: LView, tNode: TDirectiveHostNode,\n    localRefExtractor: LocalRefExtractor = getNativeByTNode): void {\n  const localNames = tNode.localNames;\n  if (localNames !== null) {\n    let localIndex = tNode.index + 1;\n    for (let i = 0; i < localNames.length; i += 2) {\n      const index = localNames[i + 1] as number;\n      const value = index === -1 ?\n          localRefExtractor(\n              tNode as TElementNode | TContainerNode | TElementContainerNode, viewData) :\n          viewData[index];\n      viewData[localIndex++] = value;\n    }\n  }\n}\n\n/**\n * Gets TView from a template function or creates a new TView\n * if it doesn't already exist.\n *\n * @param def ComponentDef\n * @returns TView\n */\nexport function getOrCreateTComponentView(def: ComponentDef<any>): TView {\n  const tView = def.tView;\n\n  // Create a TView if there isn't one, or recreate it if the first create pass didn't\n  // complete successfully since we can't know for sure whether it's in a usable shape.\n  if (tView === null || tView.incompleteFirstPass) {\n    // Declaration node here is null since this function is called when we dynamically create a\n    // component and hence there is no declaration.\n    const declTNode = null;\n    return def.tView = createTView(\n               TViewType.Component, declTNode, def.template, def.decls, def.vars, def.directiveDefs,\n               def.pipeDefs, def.viewQuery, def.schemas, def.consts);\n  }\n\n  return tView;\n}\n\n\n/**\n * Creates a TView instance\n *\n * @param type Type of `TView`.\n * @param declTNode Declaration location of this `TView`.\n * @param templateFn Template function\n * @param decls The number of nodes, local refs, and pipes in this template\n * @param directives Registry of directives for this view\n * @param pipes Registry of pipes for this view\n * @param viewQuery View queries for this view\n * @param schemas Schemas for this view\n * @param consts Constants for this view\n */\nexport function createTView(\n    type: TViewType, declTNode: TNode|null, templateFn: ComponentTemplate<any>|null, decls: number,\n    vars: number, directives: DirectiveDefListOrFactory|null, pipes: PipeDefListOrFactory|null,\n    viewQuery: ViewQueriesFunction<any>|null, schemas: SchemaMetadata[]|null,\n    constsOrFactory: TConstantsOrFactory|null): TView {\n  ngDevMode && ngDevMode.tView++;\n  const bindingStartIndex = HEADER_OFFSET + decls;\n  // This length does not yet contain host bindings from child directives because at this point,\n  // we don't know which directives are active on this template. As soon as a directive is matched\n  // that has a host binding, we will update the blueprint with that def's hostVars count.\n  const initialViewLength = bindingStartIndex + vars;\n  const blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n  const consts = typeof constsOrFactory === 'function' ? constsOrFactory() : constsOrFactory;\n  const tView = blueprint[TVIEW as any] = ngDevMode ?\n      new TViewConstructor(\n          type,        // type: TViewType,\n          blueprint,   // blueprint: LView,\n          templateFn,  // template: ComponentTemplate<{}>|null,\n          null,        // queries: TQueries|null\n          viewQuery,   // viewQuery: ViewQueriesFunction<{}>|null,\n          declTNode,   // declTNode: TNode|null,\n          cloneToTViewData(blueprint).fill(null, bindingStartIndex),  // data: TData,\n          bindingStartIndex,                                          // bindingStartIndex: number,\n          initialViewLength,                                          // expandoStartIndex: number,\n          null,                               // hostBindingOpCodes: HostBindingOpCodes,\n          true,                               // firstCreatePass: boolean,\n          true,                               // firstUpdatePass: boolean,\n          false,                              // staticViewQueries: boolean,\n          false,                              // staticContentQueries: boolean,\n          null,                               // preOrderHooks: HookData|null,\n          null,                               // preOrderCheckHooks: HookData|null,\n          null,                               // contentHooks: HookData|null,\n          null,                               // contentCheckHooks: HookData|null,\n          null,                               // viewHooks: HookData|null,\n          null,                               // viewCheckHooks: HookData|null,\n          null,                               // destroyHooks: DestroyHookData|null,\n          null,                               // cleanup: any[]|null,\n          null,                               // contentQueries: number[]|null,\n          null,                               // components: number[]|null,\n          typeof directives === 'function' ?  //\n              directives() :                  //\n              directives,                     // directiveRegistry: DirectiveDefList|null,\n          typeof pipes === 'function' ? pipes() : pipes,  // pipeRegistry: PipeDefList|null,\n          null,                                           // firstChild: TNode|null,\n          schemas,                                        // schemas: SchemaMetadata[]|null,\n          consts,                                         // consts: TConstants|null\n          false,                                          // incompleteFirstPass: boolean\n          decls,                                          // ngDevMode only: decls\n          vars,                                           // ngDevMode only: vars\n          ) :\n      {\n        type: type,\n        blueprint: blueprint,\n        template: templateFn,\n        queries: null,\n        viewQuery: viewQuery,\n        declTNode: declTNode,\n        data: blueprint.slice().fill(null, bindingStartIndex),\n        bindingStartIndex: bindingStartIndex,\n        expandoStartIndex: initialViewLength,\n        hostBindingOpCodes: null,\n        firstCreatePass: true,\n        firstUpdatePass: true,\n        staticViewQueries: false,\n        staticContentQueries: false,\n        preOrderHooks: null,\n        preOrderCheckHooks: null,\n        contentHooks: null,\n        contentCheckHooks: null,\n        viewHooks: null,\n        viewCheckHooks: null,\n        destroyHooks: null,\n        cleanup: null,\n        contentQueries: null,\n        components: null,\n        directiveRegistry: typeof directives === 'function' ? directives() : directives,\n        pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n        firstChild: null,\n        schemas: schemas,\n        consts: consts,\n        incompleteFirstPass: false\n      };\n  if (ngDevMode) {\n    // For performance reasons it is important that the tView retains the same shape during runtime.\n    // (To make sure that all of the code is monomorphic.) For this reason we seal the object to\n    // prevent class transitions.\n    Object.seal(tView);\n  }\n  return tView;\n}\n\nfunction createViewBlueprint(bindingStartIndex: number, initialViewLength: number): LView {\n  const blueprint = ngDevMode ? new LViewBlueprint() : [];\n\n  for (let i = 0; i < initialViewLength; i++) {\n    blueprint.push(i < bindingStartIndex ? null : NO_CHANGE);\n  }\n\n  return blueprint as LView;\n}\n\nfunction createError(text: string, token: any) {\n  return new Error(`Renderer: ${text} [${stringifyForError(token)}]`);\n}\n\n/**\n * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n *\n * @param rendererFactory Factory function to create renderer instance.\n * @param elementOrSelector Render element or CSS selector to locate the element.\n * @param encapsulation View Encapsulation defined for component that requests host element.\n */\nexport function locateHostElement(\n    renderer: Renderer, elementOrSelector: RElement|string,\n    encapsulation: ViewEncapsulation): RElement {\n  // When using native Shadow DOM, do not clear host element to allow native slot projection\n  const preserveContent = encapsulation === ViewEncapsulation.ShadowDom;\n  return renderer.selectRootElement(elementOrSelector, preserveContent);\n}\n\n/**\n * Saves context for this cleanup function in LView.cleanupInstances.\n *\n * On the first template pass, saves in TView:\n * - Cleanup function\n * - Index of context we just saved in LView.cleanupInstances\n *\n * This function can also be used to store instance specific cleanup fns. In that case the `context`\n * is `null` and the function is store in `LView` (rather than it `TView`).\n */\nexport function storeCleanupWithContext(\n    tView: TView, lView: LView, context: any, cleanupFn: Function): void {\n  const lCleanup = getOrCreateLViewCleanup(lView);\n  if (context === null) {\n    // If context is null that this is instance specific callback. These callbacks can only be\n    // inserted after template shared instances. For this reason in ngDevMode we freeze the TView.\n    if (ngDevMode) {\n      Object.freeze(getOrCreateTViewCleanup(tView));\n    }\n    lCleanup.push(cleanupFn);\n  } else {\n    lCleanup.push(context);\n\n    if (tView.firstCreatePass) {\n      getOrCreateTViewCleanup(tView).push(cleanupFn, lCleanup.length - 1);\n    }\n  }\n}\n\n/**\n * Constructs a TNode object from the arguments.\n *\n * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n * @param tParent Parent `TNode`\n * @param type The type of the node\n * @param index The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n * @param tagName The tag name of the node\n * @param attrs The attributes defined on this node\n * @param tViews Any TViews attached to this node\n * @returns the TNode object\n */\nexport function createTNode(\n    tView: TView, tParent: TElementNode|TContainerNode|null, type: TNodeType.Container,\n    index: number, tagName: string|null, attrs: TAttributes|null): TContainerNode;\nexport function createTNode(\n    tView: TView, tParent: TElementNode|TContainerNode|null, type: TNodeType.Element|TNodeType.Text,\n    index: number, tagName: string|null, attrs: TAttributes|null): TElementNode;\nexport function createTNode(\n    tView: TView, tParent: TElementNode|TContainerNode|null, type: TNodeType.ElementContainer,\n    index: number, tagName: string|null, attrs: TAttributes|null): TElementContainerNode;\nexport function createTNode(\n    tView: TView, tParent: TElementNode|TContainerNode|null, type: TNodeType.Icu, index: number,\n    tagName: string|null, attrs: TAttributes|null): TIcuContainerNode;\nexport function createTNode(\n    tView: TView, tParent: TElementNode|TContainerNode|null, type: TNodeType.Projection,\n    index: number, tagName: string|null, attrs: TAttributes|null): TProjectionNode;\nexport function createTNode(\n    tView: TView, tParent: TElementNode|TContainerNode|null, type: TNodeType, index: number,\n    tagName: string|null, attrs: TAttributes|null): TNode;\nexport function createTNode(\n    tView: TView, tParent: TElementNode|TContainerNode|null, type: TNodeType, index: number,\n    value: string|null, attrs: TAttributes|null): TNode {\n  ngDevMode && index !== 0 &&  // 0 are bogus nodes and they are OK. See `createContainerRef` in\n                               // `view_engine_compatibility` for additional context.\n      assertGreaterThanOrEqual(index, HEADER_OFFSET, 'TNodes can\\'t be in the LView header.');\n  ngDevMode && assertNotSame(attrs, undefined, '\\'undefined\\' is not valid value for \\'attrs\\'');\n  ngDevMode && ngDevMode.tNode++;\n  ngDevMode && tParent && assertTNodeForTView(tParent, tView);\n  let injectorIndex = tParent ? tParent.injectorIndex : -1;\n  const tNode = ngDevMode ?\n      new TNodeDebug(\n          tView,          // tView_: TView\n          type,           // type: TNodeType\n          index,          // index: number\n          null,           // insertBeforeIndex: null|-1|number|number[]\n          injectorIndex,  // injectorIndex: number\n          -1,             // directiveStart: number\n          -1,             // directiveEnd: number\n          -1,             // directiveStylingLast: number\n          null,           // propertyBindings: number[]|null\n          0,              // flags: TNodeFlags\n          0,              // providerIndexes: TNodeProviderIndexes\n          value,          // value: string|null\n          attrs,          // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n          null,           // mergedAttrs\n          null,           // localNames: (string|number)[]|null\n          undefined,      // initialInputs: (string[]|null)[]|null|undefined\n          null,           // inputs: PropertyAliases|null\n          null,           // outputs: PropertyAliases|null\n          null,           // tViews: ITView|ITView[]|null\n          null,           // next: ITNode|null\n          null,           // projectionNext: ITNode|null\n          null,           // child: ITNode|null\n          tParent,        // parent: TElementNode|TContainerNode|null\n          null,           // projection: number|(ITNode|RNode[])[]|null\n          null,           // styles: string|null\n          null,           // stylesWithoutHost: string|null\n          undefined,      // residualStyles: string|null\n          null,           // classes: string|null\n          null,           // classesWithoutHost: string|null\n          undefined,      // residualClasses: string|null\n          0 as any,       // classBindings: TStylingRange;\n          0 as any,       // styleBindings: TStylingRange;\n          ) :\n      {\n        type,\n        index,\n        insertBeforeIndex: null,\n        injectorIndex,\n        directiveStart: -1,\n        directiveEnd: -1,\n        directiveStylingLast: -1,\n        propertyBindings: null,\n        flags: 0,\n        providerIndexes: 0,\n        value: value,\n        attrs: attrs,\n        mergedAttrs: null,\n        localNames: null,\n        initialInputs: undefined,\n        inputs: null,\n        outputs: null,\n        tViews: null,\n        next: null,\n        projectionNext: null,\n        child: null,\n        parent: tParent,\n        projection: null,\n        styles: null,\n        stylesWithoutHost: null,\n        residualStyles: undefined,\n        classes: null,\n        classesWithoutHost: null,\n        residualClasses: undefined,\n        classBindings: 0 as any,\n        styleBindings: 0 as any,\n      };\n  if (ngDevMode) {\n    // For performance reasons it is important that the tNode retains the same shape during runtime.\n    // (To make sure that all of the code is monomorphic.) For this reason we seal the object to\n    // prevent class transitions.\n    Object.seal(tNode);\n  }\n  return tNode;\n}\n\n\nfunction generatePropertyAliases(\n    inputAliasMap: {[publicName: string]: string}, directiveDefIdx: number,\n    propStore: PropertyAliases|null): PropertyAliases|null {\n  for (let publicName in inputAliasMap) {\n    if (inputAliasMap.hasOwnProperty(publicName)) {\n      propStore = propStore === null ? {} : propStore;\n      const internalName = inputAliasMap[publicName];\n\n      if (propStore.hasOwnProperty(publicName)) {\n        propStore[publicName].push(directiveDefIdx, internalName);\n      } else {\n        (propStore[publicName] = [directiveDefIdx, internalName]);\n      }\n    }\n  }\n  return propStore;\n}\n\n/**\n * Initializes data structures required to work with directive inputs and outputs.\n * Initialization is done for all directives matched on a given TNode.\n */\nexport function initializeInputAndOutputAliases(tView: TView, tNode: TNode): void {\n  ngDevMode && assertFirstCreatePass(tView);\n\n  const start = tNode.directiveStart;\n  const end = tNode.directiveEnd;\n  const tViewData = tView.data;\n\n  const tNodeAttrs = tNode.attrs;\n  const inputsFromAttrs: InitialInputData = ngDevMode ? new TNodeInitialInputs() : [];\n  let inputsStore: PropertyAliases|null = null;\n  let outputsStore: PropertyAliases|null = null;\n  for (let i = start; i < end; i++) {\n    const directiveDef = tViewData[i] as DirectiveDef<any>;\n    const directiveInputs = directiveDef.inputs;\n    // Do not use unbound attributes as inputs to structural directives, since structural\n    // directive inputs can only be set using microsyntax (e.g. `<div *dir=\"exp\">`).\n    // TODO(FW-1930): microsyntax expressions may also contain unbound/static attributes, which\n    // should be set for inline templates.\n    const initialInputs = (tNodeAttrs !== null && !isInlineTemplate(tNode)) ?\n        generateInitialInputs(directiveInputs, tNodeAttrs) :\n        null;\n    inputsFromAttrs.push(initialInputs);\n    inputsStore = generatePropertyAliases(directiveInputs, i, inputsStore);\n    outputsStore = generatePropertyAliases(directiveDef.outputs, i, outputsStore);\n  }\n\n  if (inputsStore !== null) {\n    if (inputsStore.hasOwnProperty('class')) {\n      tNode.flags |= TNodeFlags.hasClassInput;\n    }\n    if (inputsStore.hasOwnProperty('style')) {\n      tNode.flags |= TNodeFlags.hasStyleInput;\n    }\n  }\n\n  tNode.initialInputs = inputsFromAttrs;\n  tNode.inputs = inputsStore;\n  tNode.outputs = outputsStore;\n}\n\n/**\n * Mapping between attributes names that don't correspond to their element property names.\n *\n * Performance note: this function is written as a series of if checks (instead of, say, a property\n * object lookup) for performance reasons - the series of `if` checks seems to be the fastest way of\n * mapping property names. Do NOT change without benchmarking.\n *\n * Note: this mapping has to be kept in sync with the equally named mapping in the template\n * type-checking machinery of ngtsc.\n */\nfunction mapPropName(name: string): string {\n  if (name === 'class') return 'className';\n  if (name === 'for') return 'htmlFor';\n  if (name === 'formaction') return 'formAction';\n  if (name === 'innerHtml') return 'innerHTML';\n  if (name === 'readonly') return 'readOnly';\n  if (name === 'tabindex') return 'tabIndex';\n  return name;\n}\n\nexport function elementPropertyInternal<T>(\n    tView: TView, tNode: TNode, lView: LView, propName: string, value: T, renderer: Renderer,\n    sanitizer: SanitizerFn|null|undefined, nativeOnly: boolean): void {\n  ngDevMode && assertNotSame(value, NO_CHANGE as any, 'Incoming value should never be NO_CHANGE.');\n  const element = getNativeByTNode(tNode, lView) as RElement | RComment;\n  let inputData = tNode.inputs;\n  let dataValue: PropertyAliasValue|undefined;\n  if (!nativeOnly && inputData != null && (dataValue = inputData[propName])) {\n    setInputsForProperty(tView, lView, dataValue, propName, value);\n    if (isComponentHost(tNode)) markDirtyIfOnPush(lView, tNode.index);\n    if (ngDevMode) {\n      setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n    }\n  } else if (tNode.type & TNodeType.AnyRNode) {\n    propName = mapPropName(propName);\n\n    if (ngDevMode) {\n      validateAgainstEventProperties(propName);\n      if (!isPropertyValid(element, propName, tNode.value, tView.schemas)) {\n        handleUnknownPropertyError(propName, tNode.value, tNode.type, lView);\n      }\n      ngDevMode.rendererSetProperty++;\n    }\n\n    // It is assumed that the sanitizer is only added when the compiler determines that the\n    // property is risky, so sanitization can be done without further checks.\n    value = sanitizer != null ? (sanitizer(value, tNode.value || '', propName) as any) : value;\n    renderer.setProperty(element as RElement, propName, value);\n  } else if (tNode.type & TNodeType.AnyContainer) {\n    // If the node is a container and the property didn't\n    // match any of the inputs or schemas we should throw.\n    if (ngDevMode && !matchingSchemas(tView.schemas, tNode.value)) {\n      handleUnknownPropertyError(propName, tNode.value, tNode.type, lView);\n    }\n  }\n}\n\n/** If node is an OnPush component, marks its LView dirty. */\nexport function markDirtyIfOnPush(lView: LView, viewIndex: number): void {\n  ngDevMode && assertLView(lView);\n  const childComponentLView = getComponentLViewByIndex(viewIndex, lView);\n  if (!(childComponentLView[FLAGS] & LViewFlags.CheckAlways)) {\n    childComponentLView[FLAGS] |= LViewFlags.Dirty;\n  }\n}\n\nfunction setNgReflectProperty(\n    lView: LView, element: RElement|RComment, type: TNodeType, attrName: string, value: any) {\n  const renderer = lView[RENDERER];\n  attrName = normalizeDebugBindingName(attrName);\n  const debugValue = normalizeDebugBindingValue(value);\n  if (type & TNodeType.AnyRNode) {\n    if (value == null) {\n      renderer.removeAttribute((element as RElement), attrName);\n    } else {\n      renderer.setAttribute((element as RElement), attrName, debugValue);\n    }\n  } else {\n    const textContent =\n        escapeCommentText(`bindings=${JSON.stringify({[attrName]: debugValue}, null, 2)}`);\n    renderer.setValue((element as RComment), textContent);\n  }\n}\n\nexport function setNgReflectProperties(\n    lView: LView, element: RElement|RComment, type: TNodeType, dataValue: PropertyAliasValue,\n    value: any) {\n  if (type & (TNodeType.AnyRNode | TNodeType.Container)) {\n    /**\n     * dataValue is an array containing runtime input or output names for the directives:\n     * i+0: directive instance index\n     * i+1: privateName\n     *\n     * e.g. [0, 'change', 'change-minified']\n     * we want to set the reflected property with the privateName: dataValue[i+1]\n     */\n    for (let i = 0; i < dataValue.length; i += 2) {\n      setNgReflectProperty(lView, element, type, dataValue[i + 1] as string, value);\n    }\n  }\n}\n\n/**\n * Instantiate a root component.\n */\nexport function instantiateRootComponent<T>(tView: TView, lView: LView, def: ComponentDef<T>): T {\n  const rootTNode = getCurrentTNode()!;\n  if (tView.firstCreatePass) {\n    if (def.providersResolver) def.providersResolver(def);\n    const directiveIndex = allocExpando(tView, lView, 1, null);\n    ngDevMode &&\n        assertEqual(\n            directiveIndex, rootTNode.directiveStart,\n            'Because this is a root component the allocated expando should match the TNode component.');\n    configureViewWithDirective(tView, rootTNode, lView, directiveIndex, def);\n    initializeInputAndOutputAliases(tView, rootTNode);\n  }\n  const directive =\n      getNodeInjectable(lView, tView, rootTNode.directiveStart, rootTNode as TElementNode);\n  attachPatchData(directive, lView);\n  const native = getNativeByTNode(rootTNode, lView);\n  if (native) {\n    attachPatchData(native, lView);\n  }\n  return directive;\n}\n\n/**\n * Resolve the matched directives on a node.\n */\nexport function resolveDirectives(\n    tView: TView, lView: LView, tNode: TElementNode|TContainerNode|TElementContainerNode,\n    localRefs: string[]|null): boolean {\n  // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n  // tsickle.\n  ngDevMode && assertFirstCreatePass(tView);\n\n  let hasDirectives = false;\n  if (getBindingsEnabled()) {\n    const directiveDefs: DirectiveDef<any>[]|null = findDirectiveDefMatches(tView, lView, tNode);\n    const exportsMap: ({[key: string]: number}|null) = localRefs === null ? null : {'': -1};\n\n    if (directiveDefs !== null) {\n      hasDirectives = true;\n      initTNodeFlags(tNode, tView.data.length, directiveDefs.length);\n      // When the same token is provided by several directives on the same node, some rules apply in\n      // the viewEngine:\n      // - viewProviders have priority over providers\n      // - the last directive in NgModule.declarations has priority over the previous one\n      // So to match these rules, the order in which providers are added in the arrays is very\n      // important.\n      for (let i = 0; i < directiveDefs.length; i++) {\n        const def = directiveDefs[i];\n        if (def.providersResolver) def.providersResolver(def);\n      }\n      let preOrderHooksFound = false;\n      let preOrderCheckHooksFound = false;\n      let directiveIdx = allocExpando(tView, lView, directiveDefs.length, null);\n      ngDevMode &&\n          assertSame(\n              directiveIdx, tNode.directiveStart,\n              'TNode.directiveStart should point to just allocated space');\n\n      for (let i = 0; i < directiveDefs.length; i++) {\n        const def = directiveDefs[i];\n        // Merge the attrs in the order of matches. This assumes that the first directive is the\n        // component itself, so that the component has the least priority.\n        tNode.mergedAttrs = mergeHostAttrs(tNode.mergedAttrs, def.hostAttrs);\n\n        configureViewWithDirective(tView, tNode, lView, directiveIdx, def);\n        saveNameToExportMap(directiveIdx, def, exportsMap);\n\n        if (def.contentQueries !== null) tNode.flags |= TNodeFlags.hasContentQuery;\n        if (def.hostBindings !== null || def.hostAttrs !== null || def.hostVars !== 0)\n          tNode.flags |= TNodeFlags.hasHostBindings;\n\n        const lifeCycleHooks: OnChanges&OnInit&DoCheck = def.type.prototype;\n        // Only push a node index into the preOrderHooks array if this is the first\n        // pre-order hook found on this node.\n        if (!preOrderHooksFound &&\n            (lifeCycleHooks.ngOnChanges || lifeCycleHooks.ngOnInit || lifeCycleHooks.ngDoCheck)) {\n          // We will push the actual hook function into this array later during dir instantiation.\n          // We cannot do it now because we must ensure hooks are registered in the same\n          // order that directives are created (i.e. injection order).\n          (tView.preOrderHooks || (tView.preOrderHooks = [])).push(tNode.index);\n          preOrderHooksFound = true;\n        }\n\n        if (!preOrderCheckHooksFound && (lifeCycleHooks.ngOnChanges || lifeCycleHooks.ngDoCheck)) {\n          (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(tNode.index);\n          preOrderCheckHooksFound = true;\n        }\n\n        directiveIdx++;\n      }\n\n      initializeInputAndOutputAliases(tView, tNode);\n    }\n    if (exportsMap) cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n  }\n  // Merge the template attrs last so that they have the highest priority.\n  tNode.mergedAttrs = mergeHostAttrs(tNode.mergedAttrs, tNode.attrs);\n  return hasDirectives;\n}\n\n/**\n * Add `hostBindings` to the `TView.hostBindingOpCodes`.\n *\n * @param tView `TView` to which the `hostBindings` should be added.\n * @param tNode `TNode` the element which contains the directive\n * @param lView `LView` current `LView`\n * @param directiveIdx Directive index in view.\n * @param directiveVarsIdx Where will the directive's vars be stored\n * @param def `ComponentDef`/`DirectiveDef`, which contains the `hostVars`/`hostBindings` to add.\n */\nexport function registerHostBindingOpCodes(\n    tView: TView, tNode: TNode, lView: LView, directiveIdx: number, directiveVarsIdx: number,\n    def: ComponentDef<any>|DirectiveDef<any>): void {\n  ngDevMode && assertFirstCreatePass(tView);\n\n  const hostBindings = def.hostBindings;\n  if (hostBindings) {\n    let hostBindingOpCodes = tView.hostBindingOpCodes;\n    if (hostBindingOpCodes === null) {\n      hostBindingOpCodes = tView.hostBindingOpCodes = [] as any as HostBindingOpCodes;\n    }\n    const elementIndx = ~tNode.index;\n    if (lastSelectedElementIdx(hostBindingOpCodes) != elementIndx) {\n      // Conditionally add select element so that we are more efficient in execution.\n      // NOTE: this is strictly not necessary and it trades code size for runtime perf.\n      // (We could just always add it.)\n      hostBindingOpCodes.push(elementIndx);\n    }\n    hostBindingOpCodes.push(directiveIdx, directiveVarsIdx, hostBindings);\n  }\n}\n\n/**\n * Returns the last selected element index in the `HostBindingOpCodes`\n *\n * For perf reasons we don't need to update the selected element index in `HostBindingOpCodes` only\n * if it changes. This method returns the last index (or '0' if not found.)\n *\n * Selected element index are only the ones which are negative.\n */\nfunction lastSelectedElementIdx(hostBindingOpCodes: HostBindingOpCodes): number {\n  let i = hostBindingOpCodes.length;\n  while (i > 0) {\n    const value = hostBindingOpCodes[--i];\n    if (typeof value === 'number' && value < 0) {\n      return value;\n    }\n  }\n  return 0;\n}\n\n\n/**\n * Instantiate all the directives that were previously resolved on the current node.\n */\nfunction instantiateAllDirectives(\n    tView: TView, lView: LView, tNode: TDirectiveHostNode, native: RNode) {\n  const start = tNode.directiveStart;\n  const end = tNode.directiveEnd;\n  if (!tView.firstCreatePass) {\n    getOrCreateNodeInjectorForNode(tNode, lView);\n  }\n\n  attachPatchData(native, lView);\n\n  const initialInputs = tNode.initialInputs;\n  for (let i = start; i < end; i++) {\n    const def = tView.data[i] as DirectiveDef<any>;\n    const isComponent = isComponentDef(def);\n\n    if (isComponent) {\n      ngDevMode && assertTNodeType(tNode, TNodeType.AnyRNode);\n      addComponentLogic(lView, tNode as TElementNode, def as ComponentDef<any>);\n    }\n\n    const directive = getNodeInjectable(lView, tView, i, tNode);\n    attachPatchData(directive, lView);\n\n    if (initialInputs !== null) {\n      setInputsFromAttrs(lView, i - start, directive, def, tNode, initialInputs!);\n    }\n\n    if (isComponent) {\n      const componentView = getComponentLViewByIndex(tNode.index, lView);\n      componentView[CONTEXT] = directive;\n    }\n  }\n}\n\nfunction invokeDirectivesHostBindings(tView: TView, lView: LView, tNode: TNode) {\n  const start = tNode.directiveStart;\n  const end = tNode.directiveEnd;\n  const elementIndex = tNode.index;\n  const currentDirectiveIndex = getCurrentDirectiveIndex();\n  try {\n    setSelectedIndex(elementIndex);\n    for (let dirIndex = start; dirIndex < end; dirIndex++) {\n      const def = tView.data[dirIndex] as DirectiveDef<unknown>;\n      const directive = lView[dirIndex];\n      setCurrentDirectiveIndex(dirIndex);\n      if (def.hostBindings !== null || def.hostVars !== 0 || def.hostAttrs !== null) {\n        invokeHostBindingsInCreationMode(def, directive);\n      }\n    }\n  } finally {\n    setSelectedIndex(-1);\n    setCurrentDirectiveIndex(currentDirectiveIndex);\n  }\n}\n\n/**\n * Invoke the host bindings in creation mode.\n *\n * @param def `DirectiveDef` which may contain the `hostBindings` function.\n * @param directive Instance of directive.\n */\nexport function invokeHostBindingsInCreationMode(def: DirectiveDef<any>, directive: any) {\n  if (def.hostBindings !== null) {\n    def.hostBindings!(RenderFlags.Create, directive);\n  }\n}\n\n/**\n * Matches the current node against all available selectors.\n * If a component is matched (at most one), it is returned in first position in the array.\n */\nfunction findDirectiveDefMatches(\n    tView: TView, viewData: LView,\n    tNode: TElementNode|TContainerNode|TElementContainerNode): DirectiveDef<any>[]|null {\n  ngDevMode && assertFirstCreatePass(tView);\n  ngDevMode && assertTNodeType(tNode, TNodeType.AnyRNode | TNodeType.AnyContainer);\n\n  const registry = tView.directiveRegistry;\n  let matches: any[]|null = null;\n  if (registry) {\n    for (let i = 0; i < registry.length; i++) {\n      const def = registry[i] as ComponentDef<any>| DirectiveDef<any>;\n      if (isNodeMatchingSelectorList(tNode, def.selectors!, /* isProjectionMode */ false)) {\n        matches || (matches = ngDevMode ? new MatchesArray() : []);\n        diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n\n        if (isComponentDef(def)) {\n          if (ngDevMode) {\n            assertTNodeType(\n                tNode, TNodeType.Element,\n                `\"${tNode.value}\" tags cannot be used as component hosts. ` +\n                    `Please use a different tag to activate the ${stringify(def.type)} component.`);\n\n            if (tNode.flags & TNodeFlags.isComponentHost) {\n              // If another component has been matched previously, it's the first element in the\n              // `matches` array, see how we store components/directives in `matches` below.\n              throwMultipleComponentError(tNode, matches[0].type, def.type);\n            }\n          }\n          markAsComponentHost(tView, tNode);\n          // The component is always stored first with directives after.\n          matches.unshift(def);\n        } else {\n          matches.push(def);\n        }\n      }\n    }\n  }\n  return matches;\n}\n\n/**\n * Marks a given TNode as a component's host. This consists of:\n * - setting appropriate TNode flags;\n * - storing index of component's host element so it will be queued for view refresh during CD.\n */\nexport function markAsComponentHost(tView: TView, hostTNode: TNode): void {\n  ngDevMode && assertFirstCreatePass(tView);\n  hostTNode.flags |= TNodeFlags.isComponentHost;\n  (tView.components || (tView.components = ngDevMode ? new TViewComponents() : []))\n      .push(hostTNode.index);\n}\n\n\n/** Caches local names and their matching directive indices for query and template lookups. */\nfunction cacheMatchingLocalNames(\n    tNode: TNode, localRefs: string[]|null, exportsMap: {[key: string]: number}): void {\n  if (localRefs) {\n    const localNames: (string|number)[] = tNode.localNames = ngDevMode ? new TNodeLocalNames() : [];\n\n    // Local names must be stored in tNode in the same order that localRefs are defined\n    // in the template to ensure the data is loaded in the same slots as their refs\n    // in the template (for template queries).\n    for (let i = 0; i < localRefs.length; i += 2) {\n      const index = exportsMap[localRefs[i + 1]];\n      if (index == null)\n        throw new RuntimeError(\n            RuntimeErrorCode.EXPORT_NOT_FOUND,\n            ngDevMode && `Export of name '${localRefs[i + 1]}' not found!`);\n      localNames.push(localRefs[i], index);\n    }\n  }\n}\n\n/**\n * Builds up an export map as directives are created, so local refs can be quickly mapped\n * to their directive instances.\n */\nfunction saveNameToExportMap(\n    directiveIdx: number, def: DirectiveDef<any>|ComponentDef<any>,\n    exportsMap: {[key: string]: number}|null) {\n  if (exportsMap) {\n    if (def.exportAs) {\n      for (let i = 0; i < def.exportAs.length; i++) {\n        exportsMap[def.exportAs[i]] = directiveIdx;\n      }\n    }\n    if (isComponentDef(def)) exportsMap[''] = directiveIdx;\n  }\n}\n\n/**\n * Initializes the flags on the current node, setting all indices to the initial index,\n * the directive count to 0, and adding the isComponent flag.\n * @param index the initial index\n */\nexport function initTNodeFlags(tNode: TNode, index: number, numberOfDirectives: number) {\n  ngDevMode &&\n      assertNotEqual(\n          numberOfDirectives, tNode.directiveEnd - tNode.directiveStart,\n          'Reached the max number of directives');\n  tNode.flags |= TNodeFlags.isDirectiveHost;\n  // When the first directive is created on a node, save the index\n  tNode.directiveStart = index;\n  tNode.directiveEnd = index + numberOfDirectives;\n  tNode.providerIndexes = index;\n}\n\n/**\n * Setup directive for instantiation.\n *\n * We need to create a `NodeInjectorFactory` which is then inserted in both the `Blueprint` as well\n * as `LView`. `TView` gets the `DirectiveDef`.\n *\n * @param tView `TView`\n * @param tNode `TNode`\n * @param lView `LView`\n * @param directiveIndex Index where the directive will be stored in the Expando.\n * @param def `DirectiveDef`\n */\nfunction configureViewWithDirective<T>(\n    tView: TView, tNode: TNode, lView: LView, directiveIndex: number, def: DirectiveDef<T>): void {\n  ngDevMode &&\n      assertGreaterThanOrEqual(directiveIndex, HEADER_OFFSET, 'Must be in Expando section');\n  tView.data[directiveIndex] = def;\n  const directiveFactory =\n      def.factory || ((def as {factory: Function}).factory = getFactoryDef(def.type, true));\n  // Even though `directiveFactory` will already be using `ɵɵdirectiveInject` in its generated code,\n  // we also want to support `inject()` directly from the directive constructor context so we set\n  // `ɵɵdirectiveInject` as the inject implementation here too.\n  const nodeInjectorFactory =\n      new NodeInjectorFactory(directiveFactory, isComponentDef(def), ɵɵdirectiveInject);\n  tView.blueprint[directiveIndex] = nodeInjectorFactory;\n  lView[directiveIndex] = nodeInjectorFactory;\n\n  registerHostBindingOpCodes(\n      tView, tNode, lView, directiveIndex, allocExpando(tView, lView, def.hostVars, NO_CHANGE),\n      def);\n}\n\nfunction addComponentLogic<T>(lView: LView, hostTNode: TElementNode, def: ComponentDef<T>): void {\n  const native = getNativeByTNode(hostTNode, lView) as RElement;\n  const tView = getOrCreateTComponentView(def);\n\n  // Only component views should be added to the view tree directly. Embedded views are\n  // accessed through their containers because they may be removed / re-added later.\n  const rendererFactory = lView[RENDERER_FACTORY];\n  const componentView = addToViewTree(\n      lView,\n      createLView(\n          lView, tView, null, def.onPush ? LViewFlags.Dirty : LViewFlags.CheckAlways, native,\n          hostTNode as TElementNode, rendererFactory, rendererFactory.createRenderer(native, def),\n          null, null, null));\n\n  // Component view will always be created before any injected LContainers,\n  // so this is a regular element, wrap it with the component view\n  lView[hostTNode.index] = componentView;\n}\n\nexport function elementAttributeInternal(\n    tNode: TNode, lView: LView, name: string, value: any, sanitizer: SanitizerFn|null|undefined,\n    namespace: string|null|undefined) {\n  if (ngDevMode) {\n    assertNotSame(value, NO_CHANGE as any, 'Incoming value should never be NO_CHANGE.');\n    validateAgainstEventAttributes(name);\n    assertTNodeType(\n        tNode, TNodeType.Element,\n        `Attempted to set attribute \\`${name}\\` on a container node. ` +\n            `Host bindings are not valid on ng-container or ng-template.`);\n  }\n  const element = getNativeByTNode(tNode, lView) as RElement;\n  setElementAttribute(lView[RENDERER], element, namespace, tNode.value, name, value, sanitizer);\n}\n\nexport function setElementAttribute(\n    renderer: Renderer, element: RElement, namespace: string|null|undefined, tagName: string|null,\n    name: string, value: any, sanitizer: SanitizerFn|null|undefined) {\n  if (value == null) {\n    ngDevMode && ngDevMode.rendererRemoveAttribute++;\n    renderer.removeAttribute(element, name, namespace);\n  } else {\n    ngDevMode && ngDevMode.rendererSetAttribute++;\n    const strValue =\n        sanitizer == null ? renderStringify(value) : sanitizer(value, tagName || '', name);\n\n\n    renderer.setAttribute(element, name, strValue as string, namespace);\n  }\n}\n\n/**\n * Sets initial input properties on directive instances from attribute data\n *\n * @param lView Current LView that is being processed.\n * @param directiveIndex Index of the directive in directives array\n * @param instance Instance of the directive on which to set the initial inputs\n * @param def The directive def that contains the list of inputs\n * @param tNode The static data for this node\n */\nfunction setInputsFromAttrs<T>(\n    lView: LView, directiveIndex: number, instance: T, def: DirectiveDef<T>, tNode: TNode,\n    initialInputData: InitialInputData): void {\n  const initialInputs: InitialInputs|null = initialInputData![directiveIndex];\n  if (initialInputs !== null) {\n    const setInput = def.setInput;\n    for (let i = 0; i < initialInputs.length;) {\n      const publicName = initialInputs[i++];\n      const privateName = initialInputs[i++];\n      const value = initialInputs[i++];\n      if (setInput !== null) {\n        def.setInput!(instance, value, publicName, privateName);\n      } else {\n        (instance as any)[privateName] = value;\n      }\n      if (ngDevMode) {\n        const nativeElement = getNativeByTNode(tNode, lView) as RElement;\n        setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n      }\n    }\n  }\n}\n\n/**\n * Generates initialInputData for a node and stores it in the template's static storage\n * so subsequent template invocations don't have to recalculate it.\n *\n * initialInputData is an array containing values that need to be set as input properties\n * for directives on this node, but only once on creation. We need this array to support\n * the case where you set an @Input property of a directive using attribute-like syntax.\n * e.g. if you have a `name` @Input, you can set it once like this:\n *\n * <my-component name=\"Bess\"></my-component>\n *\n * @param inputs The list of inputs from the directive def\n * @param attrs The static attrs on this node\n */\nfunction generateInitialInputs(inputs: {[key: string]: string}, attrs: TAttributes): InitialInputs|\n    null {\n  let inputsToStore: InitialInputs|null = null;\n  let i = 0;\n  while (i < attrs.length) {\n    const attrName = attrs[i];\n    if (attrName === AttributeMarker.NamespaceURI) {\n      // We do not allow inputs on namespaced attributes.\n      i += 4;\n      continue;\n    } else if (attrName === AttributeMarker.ProjectAs) {\n      // Skip over the `ngProjectAs` value.\n      i += 2;\n      continue;\n    }\n\n    // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n    if (typeof attrName === 'number') break;\n\n    if (inputs.hasOwnProperty(attrName as string)) {\n      if (inputsToStore === null) inputsToStore = [];\n      inputsToStore.push(attrName as string, inputs[attrName as string], attrs[i + 1] as string);\n    }\n\n    i += 2;\n  }\n  return inputsToStore;\n}\n\n//////////////////////////\n//// ViewContainer & View\n//////////////////////////\n\n// Not sure why I need to do `any` here but TS complains later.\nconst LContainerArray: any = class LContainer extends Array {};\n\n/**\n * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n *\n * @param hostNative The host element for the LContainer\n * @param hostTNode The host TNode for the LContainer\n * @param currentView The parent view of the LContainer\n * @param native The native comment element\n * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n * @returns LContainer\n */\nexport function createLContainer(\n    hostNative: RElement|RComment|LView, currentView: LView, native: RComment,\n    tNode: TNode): LContainer {\n  ngDevMode && assertLView(currentView);\n  // https://jsperf.com/array-literal-vs-new-array-really\n  const lContainer: LContainer = new (ngDevMode ? LContainerArray : Array)(\n      hostNative,   // host native\n      true,         // Boolean `true` in this position signifies that this is an `LContainer`\n      false,        // has transplanted views\n      currentView,  // parent\n      null,         // next\n      0,            // transplanted views to refresh count\n      tNode,        // t_host\n      native,       // native,\n      null,         // view refs\n      null,         // moved views\n  );\n  ngDevMode &&\n      assertEqual(\n          lContainer.length, CONTAINER_HEADER_OFFSET,\n          'Should allocate correct number of slots for LContainer header.');\n  ngDevMode && attachLContainerDebug(lContainer);\n  return lContainer;\n}\n\n/**\n * Goes over embedded views (ones created through ViewContainerRef APIs) and refreshes\n * them by executing an associated template function.\n */\nfunction refreshEmbeddedViews(lView: LView) {\n  for (let lContainer = getFirstLContainer(lView); lContainer !== null;\n       lContainer = getNextLContainer(lContainer)) {\n    for (let i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n      const embeddedLView = lContainer[i];\n      const embeddedTView = embeddedLView[TVIEW];\n      ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');\n      if (viewAttachedToChangeDetector(embeddedLView)) {\n        refreshView(embeddedTView, embeddedLView, embeddedTView.template, embeddedLView[CONTEXT]!);\n      }\n    }\n  }\n}\n\n/**\n * Mark transplanted views as needing to be refreshed at their insertion points.\n *\n * @param lView The `LView` that may have transplanted views.\n */\nfunction markTransplantedViewsForRefresh(lView: LView) {\n  for (let lContainer = getFirstLContainer(lView); lContainer !== null;\n       lContainer = getNextLContainer(lContainer)) {\n    if (!lContainer[HAS_TRANSPLANTED_VIEWS]) continue;\n\n    const movedViews = lContainer[MOVED_VIEWS]!;\n    ngDevMode && assertDefined(movedViews, 'Transplanted View flags set but missing MOVED_VIEWS');\n    for (let i = 0; i < movedViews.length; i++) {\n      const movedLView = movedViews[i]!;\n      const insertionLContainer = movedLView[PARENT] as LContainer;\n      ngDevMode && assertLContainer(insertionLContainer);\n      // We don't want to increment the counter if the moved LView was already marked for\n      // refresh.\n      if ((movedLView[FLAGS] & LViewFlags.RefreshTransplantedView) === 0) {\n        updateTransplantedViewCount(insertionLContainer, 1);\n      }\n      // Note, it is possible that the `movedViews` is tracking views that are transplanted *and*\n      // those that aren't (declaration component === insertion component). In the latter case,\n      // it's fine to add the flag, as we will clear it immediately in\n      // `refreshEmbeddedViews` for the view currently being refreshed.\n      movedLView[FLAGS] |= LViewFlags.RefreshTransplantedView;\n    }\n  }\n}\n\n/////////////\n\n/**\n * Refreshes components by entering the component view and processing its bindings, queries, etc.\n *\n * @param componentHostIdx  Element index in LView[] (adjusted for HEADER_OFFSET)\n */\nfunction refreshComponent(hostLView: LView, componentHostIdx: number): void {\n  ngDevMode && assertEqual(isCreationMode(hostLView), false, 'Should be run in update mode');\n  const componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n  // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n  if (viewAttachedToChangeDetector(componentView)) {\n    const tView = componentView[TVIEW];\n    if (componentView[FLAGS] & (LViewFlags.CheckAlways | LViewFlags.Dirty)) {\n      refreshView(tView, componentView, tView.template, componentView[CONTEXT]);\n    } else if (componentView[TRANSPLANTED_VIEWS_TO_REFRESH] > 0) {\n      // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n      refreshContainsDirtyView(componentView);\n    }\n  }\n}\n\n/**\n * Refreshes all transplanted views marked with `LViewFlags.RefreshTransplantedView` that are\n * children or descendants of the given lView.\n *\n * @param lView The lView which contains descendant transplanted views that need to be refreshed.\n */\nfunction refreshContainsDirtyView(lView: LView) {\n  for (let lContainer = getFirstLContainer(lView); lContainer !== null;\n       lContainer = getNextLContainer(lContainer)) {\n    for (let i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n      const embeddedLView = lContainer[i];\n      if (embeddedLView[FLAGS] & LViewFlags.RefreshTransplantedView) {\n        const embeddedTView = embeddedLView[TVIEW];\n        ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');\n        refreshView(embeddedTView, embeddedLView, embeddedTView.template, embeddedLView[CONTEXT]!);\n      } else if (embeddedLView[TRANSPLANTED_VIEWS_TO_REFRESH] > 0) {\n        refreshContainsDirtyView(embeddedLView);\n      }\n    }\n  }\n\n  const tView = lView[TVIEW];\n  // Refresh child component views.\n  const components = tView.components;\n  if (components !== null) {\n    for (let i = 0; i < components.length; i++) {\n      const componentView = getComponentLViewByIndex(components[i], lView);\n      // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n      if (viewAttachedToChangeDetector(componentView) &&\n          componentView[TRANSPLANTED_VIEWS_TO_REFRESH] > 0) {\n        refreshContainsDirtyView(componentView);\n      }\n    }\n  }\n}\n\nfunction renderComponent(hostLView: LView, componentHostIdx: number) {\n  ngDevMode && assertEqual(isCreationMode(hostLView), true, 'Should be run in creation mode');\n  const componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n  const componentTView = componentView[TVIEW];\n  syncViewWithBlueprint(componentTView, componentView);\n  renderView(componentTView, componentView, componentView[CONTEXT]);\n}\n\n/**\n * Syncs an LView instance with its blueprint if they have gotten out of sync.\n *\n * Typically, blueprints and their view instances should always be in sync, so the loop here\n * will be skipped. However, consider this case of two components side-by-side:\n *\n * App template:\n * ```\n * <comp></comp>\n * <comp></comp>\n * ```\n *\n * The following will happen:\n * 1. App template begins processing.\n * 2. First <comp> is matched as a component and its LView is created.\n * 3. Second <comp> is matched as a component and its LView is created.\n * 4. App template completes processing, so it's time to check child templates.\n * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n * <comp> template, but its LView was created before this update, so it is out of sync.\n *\n * Note that embedded views inside ngFor loops will never be out of sync because these views\n * are processed as soon as they are created.\n *\n * @param tView The `TView` that contains the blueprint for syncing\n * @param lView The view to sync\n */\nfunction syncViewWithBlueprint(tView: TView, lView: LView) {\n  for (let i = lView.length; i < tView.blueprint.length; i++) {\n    lView.push(tView.blueprint[i]);\n  }\n}\n\n/**\n * Adds LView or LContainer to the end of the current view tree.\n *\n * This structure will be used to traverse through nested views to remove listeners\n * and call onDestroy callbacks.\n *\n * @param lView The view where LView or LContainer should be added\n * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n * @param lViewOrLContainer The LView or LContainer to add to the view tree\n * @returns The state passed in\n */\nexport function addToViewTree<T extends LView|LContainer>(lView: LView, lViewOrLContainer: T): T {\n  // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n  // to the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n  // of order, the change detection will run out of order, as the act of retrieving the the\n  // LContainer from the RNode is what adds it to the queue.\n  if (lView[CHILD_HEAD]) {\n    lView[CHILD_TAIL]![NEXT] = lViewOrLContainer;\n  } else {\n    lView[CHILD_HEAD] = lViewOrLContainer;\n  }\n  lView[CHILD_TAIL] = lViewOrLContainer;\n  return lViewOrLContainer;\n}\n\n///////////////////////////////\n//// Change detection\n///////////////////////////////\n\n\n/**\n * Marks current view and all ancestors dirty.\n *\n * Returns the root view because it is found as a byproduct of marking the view tree\n * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n * change detection. Otherwise, such methods would need to traverse up the view tree\n * an additional time to get the root view and schedule a tick on it.\n *\n * @param lView The starting LView to mark dirty\n * @returns the root LView\n */\nexport function markViewDirty(lView: LView): LView|null {\n  while (lView) {\n    lView[FLAGS] |= LViewFlags.Dirty;\n    const parent = getLViewParent(lView);\n    // Stop traversing up as soon as you find a root view that wasn't attached to any container\n    if (isRootView(lView) && !parent) {\n      return lView;\n    }\n    // continue otherwise\n    lView = parent!;\n  }\n  return null;\n}\n\n\n/**\n * Used to schedule change detection on the whole application.\n *\n * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n * It is usually called indirectly by calling `markDirty` when the view needs to be\n * re-rendered.\n *\n * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n * `scheduleTick` requests. The scheduling function can be overridden in\n * `renderComponent`'s `scheduler` option.\n */\nexport function scheduleTick(rootContext: RootContext, flags: RootContextFlags) {\n  const nothingScheduled = rootContext.flags === RootContextFlags.Empty;\n  if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n    // https://github.com/angular/angular/issues/39296\n    // should only attach the flags when really scheduling a tick\n    rootContext.flags |= flags;\n    let res: null|((val: null) => void);\n    rootContext.clean = new Promise<null>((r) => res = r);\n    rootContext.scheduler(() => {\n      if (rootContext.flags & RootContextFlags.DetectChanges) {\n        rootContext.flags &= ~RootContextFlags.DetectChanges;\n        tickRootContext(rootContext);\n      }\n\n      if (rootContext.flags & RootContextFlags.FlushPlayers) {\n        rootContext.flags &= ~RootContextFlags.FlushPlayers;\n        const playerHandler = rootContext.playerHandler;\n        if (playerHandler) {\n          playerHandler.flushPlayers();\n        }\n      }\n\n      rootContext.clean = _CLEAN_PROMISE;\n      res!(null);\n    });\n  }\n}\n\nexport function tickRootContext(rootContext: RootContext) {\n  for (let i = 0; i < rootContext.components.length; i++) {\n    const rootComponent = rootContext.components[i];\n    const lView = readPatchedLView(rootComponent);\n    // We might not have an `LView` if the component was destroyed.\n    if (lView !== null) {\n      const tView = lView[TVIEW];\n      renderComponentOrTemplate(tView, lView, tView.template, rootComponent);\n    }\n  }\n}\n\nexport function detectChangesInternal<T>(tView: TView, lView: LView, context: T) {\n  const rendererFactory = lView[RENDERER_FACTORY];\n  if (rendererFactory.begin) rendererFactory.begin();\n  try {\n    refreshView(tView, lView, tView.template, context);\n  } catch (error) {\n    handleError(lView, error);\n    throw error;\n  } finally {\n    if (rendererFactory.end) rendererFactory.end();\n  }\n}\n\n/**\n * Synchronously perform change detection on a root view and its components.\n *\n * @param lView The view which the change detection should be performed on.\n */\nexport function detectChangesInRootView(lView: LView): void {\n  tickRootContext(lView[CONTEXT] as RootContext);\n}\n\nexport function checkNoChangesInternal<T>(tView: TView, view: LView, context: T) {\n  setIsInCheckNoChangesMode(true);\n  try {\n    detectChangesInternal(tView, view, context);\n  } finally {\n    setIsInCheckNoChangesMode(false);\n  }\n}\n\n/**\n * Checks the change detector on a root view and its components, and throws if any changes are\n * detected.\n *\n * This is used in development mode to verify that running change detection doesn't\n * introduce other changes.\n *\n * @param lView The view which the change detection should be checked on.\n */\nexport function checkNoChangesInRootView(lView: LView): void {\n  setIsInCheckNoChangesMode(true);\n  try {\n    detectChangesInRootView(lView);\n  } finally {\n    setIsInCheckNoChangesMode(false);\n  }\n}\n\nfunction executeViewQueryFn<T>(\n    flags: RenderFlags, viewQueryFn: ViewQueriesFunction<T>, component: T): void {\n  ngDevMode && assertDefined(viewQueryFn, 'View queries function to execute must be defined.');\n  setCurrentQueryIndex(0);\n  viewQueryFn(flags, component);\n}\n\n\n///////////////////////////////\n//// Bindings & interpolations\n///////////////////////////////\n\n/**\n * Stores meta-data for a property binding to be used by TestBed's `DebugElement.properties`.\n *\n * In order to support TestBed's `DebugElement.properties` we need to save, for each binding:\n * - a bound property name;\n * - a static parts of interpolated strings;\n *\n * A given property metadata is saved at the binding's index in the `TView.data` (in other words, a\n * property binding metadata will be stored in `TView.data` at the same index as a bound value in\n * `LView`). Metadata are represented as `INTERPOLATION_DELIMITER`-delimited string with the\n * following format:\n * - `propertyName` for bound properties;\n * - `propertyName�prefix�interpolation_static_part1�..interpolation_static_partN�suffix` for\n * interpolated properties.\n *\n * @param tData `TData` where meta-data will be saved;\n * @param tNode `TNode` that is a target of the binding;\n * @param propertyName bound property name;\n * @param bindingIndex binding index in `LView`\n * @param interpolationParts static interpolation parts (for property interpolations)\n */\nexport function storePropertyBindingMetadata(\n    tData: TData, tNode: TNode, propertyName: string, bindingIndex: number,\n    ...interpolationParts: string[]) {\n  // Binding meta-data are stored only the first time a given property instruction is processed.\n  // Since we don't have a concept of the \"first update pass\" we need to check for presence of the\n  // binding meta-data to decide if one should be stored (or if was stored already).\n  if (tData[bindingIndex] === null) {\n    if (tNode.inputs == null || !tNode.inputs[propertyName]) {\n      const propBindingIdxs = tNode.propertyBindings || (tNode.propertyBindings = []);\n      propBindingIdxs.push(bindingIndex);\n      let bindingMetadata = propertyName;\n      if (interpolationParts.length > 0) {\n        bindingMetadata +=\n            INTERPOLATION_DELIMITER + interpolationParts.join(INTERPOLATION_DELIMITER);\n      }\n      tData[bindingIndex] = bindingMetadata;\n    }\n  }\n}\n\nexport const CLEAN_PROMISE = _CLEAN_PROMISE;\n\nexport function getOrCreateLViewCleanup(view: LView): any[] {\n  // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n  return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n}\n\nexport function getOrCreateTViewCleanup(tView: TView): any[] {\n  return tView.cleanup || (tView.cleanup = ngDevMode ? new TCleanup() : []);\n}\n\n/**\n * There are cases where the sub component's renderer needs to be included\n * instead of the current renderer (see the componentSyntheticHost* instructions).\n */\nexport function loadComponentRenderer(\n    currentDef: DirectiveDef<any>|null, tNode: TNode, lView: LView): Renderer {\n  // TODO(FW-2043): the `currentDef` is null when host bindings are invoked while creating root\n  // component (see packages/core/src/render3/component.ts). This is not consistent with the process\n  // of creating inner components, when current directive index is available in the state. In order\n  // to avoid relying on current def being `null` (thus special-casing root component creation), the\n  // process of creating root component should be unified with the process of creating inner\n  // components.\n  if (currentDef === null || isComponentDef(currentDef)) {\n    lView = unwrapLView(lView[tNode.index])!;\n  }\n  return lView[RENDERER];\n}\n\n/** Handles an error thrown in an LView. */\nexport function handleError(lView: LView, error: any): void {\n  const injector = lView[INJECTOR];\n  const errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n  errorHandler && errorHandler.handleError(error);\n}\n\n/**\n * Set the inputs of directives at the current node to corresponding value.\n *\n * @param tView The current TView\n * @param lView the `LView` which contains the directives.\n * @param inputs mapping between the public \"input\" name and privately-known,\n *        possibly minified, property names to write to.\n * @param value Value to set.\n */\nexport function setInputsForProperty(\n    tView: TView, lView: LView, inputs: PropertyAliasValue, publicName: string, value: any): void {\n  for (let i = 0; i < inputs.length;) {\n    const index = inputs[i++] as number;\n    const privateName = inputs[i++] as string;\n    const instance = lView[index];\n    ngDevMode && assertIndexInRange(lView, index);\n    const def = tView.data[index] as DirectiveDef<any>;\n    if (def.setInput !== null) {\n      def.setInput!(instance, value, publicName, privateName);\n    } else {\n      instance[privateName] = value;\n    }\n  }\n}\n\n/**\n * Updates a text binding at a given index in a given LView.\n */\nexport function textBindingInternal(lView: LView, index: number, value: string): void {\n  ngDevMode && assertString(value, 'Value should be a string');\n  ngDevMode && assertNotSame(value, NO_CHANGE as any, 'value should not be NO_CHANGE');\n  ngDevMode && assertIndexInRange(lView, index);\n  const element = getNativeByIndex(index, lView) as any as RText;\n  ngDevMode && assertDefined(element, 'native element should exist');\n  updateTextNode(lView[RENDERER], element, value);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {concatStringsWithSpace} from '../../util/stringify';\nimport {assertFirstCreatePass} from '../assert';\nimport {AttributeMarker, TAttributes, TNode} from '../interfaces/node';\nimport {getTView} from '../state';\n\n/**\n * Compute the static styling (class/style) from `TAttributes`.\n *\n * This function should be called during `firstCreatePass` only.\n *\n * @param tNode The `TNode` into which the styling information should be loaded.\n * @param attrs `TAttributes` containing the styling information.\n * @param writeToHost Where should the resulting static styles be written?\n *   - `false` Write to `TNode.stylesWithoutHost` / `TNode.classesWithoutHost`\n *   - `true` Write to `TNode.styles` / `TNode.classes`\n */\nexport function computeStaticStyling(\n    tNode: TNode, attrs: TAttributes|null, writeToHost: boolean): void {\n  ngDevMode &&\n      assertFirstCreatePass(getTView(), 'Expecting to be called in first template pass only');\n  let styles: string|null = writeToHost ? tNode.styles : null;\n  let classes: string|null = writeToHost ? tNode.classes : null;\n  let mode: AttributeMarker|0 = 0;\n  if (attrs !== null) {\n    for (let i = 0; i < attrs.length; i++) {\n      const value = attrs[i];\n      if (typeof value === 'number') {\n        mode = value;\n      } else if (mode == AttributeMarker.Classes) {\n        classes = concatStringsWithSpace(classes, value as string);\n      } else if (mode == AttributeMarker.Styles) {\n        const style = value as string;\n        const styleValue = attrs[++i] as string;\n        styles = concatStringsWithSpace(styles, style + ': ' + styleValue + ';');\n      }\n    }\n  }\n  writeToHost ? tNode.styles = styles : tNode.stylesWithoutHost = styles;\n  writeToHost ? tNode.classes = classes : tNode.classesWithoutHost = classes;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {assertParentView} from './assert';\nimport {icuContainerIterate} from './i18n/i18n_tree_shaking';\nimport {CONTAINER_HEADER_OFFSET} from './interfaces/container';\nimport {TIcuContainerNode, TNode, TNodeType} from './interfaces/node';\nimport {RNode} from './interfaces/renderer_dom';\nimport {isLContainer} from './interfaces/type_checks';\nimport {DECLARATION_COMPONENT_VIEW, LView, T_HOST, TVIEW, TView} from './interfaces/view';\nimport {assertTNodeType} from './node_assert';\nimport {getProjectionNodes} from './node_manipulation';\nimport {getLViewParent} from './util/view_traversal_utils';\nimport {unwrapRNode} from './util/view_utils';\n\n\n\nexport function collectNativeNodes(\n    tView: TView, lView: LView, tNode: TNode|null, result: any[],\n    isProjection: boolean = false): any[] {\n  while (tNode !== null) {\n    ngDevMode &&\n        assertTNodeType(\n            tNode,\n            TNodeType.AnyRNode | TNodeType.AnyContainer | TNodeType.Projection | TNodeType.Icu);\n\n    const lNode = lView[tNode.index];\n    if (lNode !== null) {\n      result.push(unwrapRNode(lNode));\n    }\n\n    // A given lNode can represent either a native node or a LContainer (when it is a host of a\n    // ViewContainerRef). When we find a LContainer we need to descend into it to collect root nodes\n    // from the views in this container.\n    if (isLContainer(lNode)) {\n      for (let i = CONTAINER_HEADER_OFFSET; i < lNode.length; i++) {\n        const lViewInAContainer = lNode[i];\n        const lViewFirstChildTNode = lViewInAContainer[TVIEW].firstChild;\n        if (lViewFirstChildTNode !== null) {\n          collectNativeNodes(\n              lViewInAContainer[TVIEW], lViewInAContainer, lViewFirstChildTNode, result);\n        }\n      }\n    }\n\n    const tNodeType = tNode.type;\n    if (tNodeType & TNodeType.ElementContainer) {\n      collectNativeNodes(tView, lView, tNode.child, result);\n    } else if (tNodeType & TNodeType.Icu) {\n      const nextRNode = icuContainerIterate(tNode as TIcuContainerNode, lView);\n      let rNode: RNode|null;\n      while (rNode = nextRNode()) {\n        result.push(rNode);\n      }\n    } else if (tNodeType & TNodeType.Projection) {\n      const nodesInSlot = getProjectionNodes(lView, tNode);\n      if (Array.isArray(nodesInSlot)) {\n        result.push(...nodesInSlot);\n      } else {\n        const parentView = getLViewParent(lView[DECLARATION_COMPONENT_VIEW])!;\n        ngDevMode && assertParentView(parentView);\n        collectNativeNodes(parentView[TVIEW], parentView, nodesInSlot, result, true);\n      }\n    }\n    tNode = isProjection ? tNode.projectionNext : tNode.next;\n  }\n\n  return result;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef as viewEngine_ChangeDetectorRef} from '../change_detection/change_detector_ref';\nimport {RuntimeError, RuntimeErrorCode} from '../errors';\nimport {EmbeddedViewRef as viewEngine_EmbeddedViewRef, InternalViewRef as viewEngine_InternalViewRef, ViewRefTracker} from '../linker/view_ref';\nimport {removeFromArray} from '../util/array_utils';\nimport {assertEqual} from '../util/assert';\n\nimport {collectNativeNodes} from './collect_native_nodes';\nimport {checkNoChangesInRootView, checkNoChangesInternal, detectChangesInRootView, detectChangesInternal, markViewDirty, storeCleanupWithContext} from './instructions/shared';\nimport {CONTAINER_HEADER_OFFSET, VIEW_REFS} from './interfaces/container';\nimport {isLContainer} from './interfaces/type_checks';\nimport {CONTEXT, FLAGS, LView, LViewFlags, PARENT, TVIEW} from './interfaces/view';\nimport {destroyLView, detachView, renderDetachView} from './node_manipulation';\n\n\n\n// Needed due to tsickle downleveling where multiple `implements` with classes creates\n// multiple @extends in Closure annotations, which is illegal. This workaround fixes\n// the multiple @extends by making the annotation @implements instead\nexport interface viewEngine_ChangeDetectorRef_interface extends viewEngine_ChangeDetectorRef {}\n\nexport class ViewRef<T> implements viewEngine_EmbeddedViewRef<T>, viewEngine_InternalViewRef,\n                                   viewEngine_ChangeDetectorRef_interface {\n  private _appRef: ViewRefTracker|null = null;\n  private _attachedToViewContainer = false;\n\n  get rootNodes(): any[] {\n    const lView = this._lView;\n    const tView = lView[TVIEW];\n    return collectNativeNodes(tView, lView, tView.firstChild, []);\n  }\n\n  constructor(\n      /**\n       * This represents `LView` associated with the component when ViewRef is a ChangeDetectorRef.\n       *\n       * When ViewRef is created for a dynamic component, this also represents the `LView` for the\n       * component.\n       *\n       * For a \"regular\" ViewRef created for an embedded view, this is the `LView` for the embedded\n       * view.\n       *\n       * @internal\n       */\n      public _lView: LView,\n\n      /**\n       * This represents the `LView` associated with the point where `ChangeDetectorRef` was\n       * requested.\n       *\n       * This may be different from `_lView` if the `_cdRefInjectingView` is an embedded view.\n       */\n      private _cdRefInjectingView?: LView) {}\n\n  get context(): T {\n    return this._lView[CONTEXT] as unknown as T;\n  }\n\n  set context(value: T) {\n    this._lView[CONTEXT] = value as unknown as {};\n  }\n\n  get destroyed(): boolean {\n    return (this._lView[FLAGS] & LViewFlags.Destroyed) === LViewFlags.Destroyed;\n  }\n\n  destroy(): void {\n    if (this._appRef) {\n      this._appRef.detachView(this);\n    } else if (this._attachedToViewContainer) {\n      const parent = this._lView[PARENT];\n      if (isLContainer(parent)) {\n        const viewRefs = parent[VIEW_REFS] as ViewRef<unknown>[] | null;\n        const index = viewRefs ? viewRefs.indexOf(this) : -1;\n        if (index > -1) {\n          ngDevMode &&\n              assertEqual(\n                  index, parent.indexOf(this._lView) - CONTAINER_HEADER_OFFSET,\n                  'An attached view should be in the same position within its container as its ViewRef in the VIEW_REFS array.');\n          detachView(parent, index);\n          removeFromArray(viewRefs!, index);\n        }\n      }\n      this._attachedToViewContainer = false;\n    }\n    destroyLView(this._lView[TVIEW], this._lView);\n  }\n\n  onDestroy(callback: Function) {\n    storeCleanupWithContext(this._lView[TVIEW], this._lView, null, callback);\n  }\n\n  /**\n   * Marks a view and all of its ancestors dirty.\n   *\n   * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n   * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n   * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n   *\n   * <!-- TODO: Add a link to a chapter on OnPush components -->\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'app-root',\n   *   template: `Number of ticks: {{numberOfTicks}}`\n   *   changeDetection: ChangeDetectionStrategy.OnPush,\n   * })\n   * class AppComponent {\n   *   numberOfTicks = 0;\n   *\n   *   constructor(private ref: ChangeDetectorRef) {\n   *     setInterval(() => {\n   *       this.numberOfTicks++;\n   *       // the following is required, otherwise the view will not be updated\n   *       this.ref.markForCheck();\n   *     }, 1000);\n   *   }\n   * }\n   * ```\n   */\n  markForCheck(): void {\n    markViewDirty(this._cdRefInjectingView || this._lView);\n  }\n\n  /**\n   * Detaches the view from the change detection tree.\n   *\n   * Detached views will not be checked during change detection runs until they are\n   * re-attached, even if they are dirty. `detach` can be used in combination with\n   * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n   * detection checks.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * The following example defines a component with a large list of readonly data.\n   * Imagine the data changes constantly, many times per second. For performance reasons,\n   * we want to check and update the list every five seconds. We can do that by detaching\n   * the component's change detector and doing a local check every five seconds.\n   *\n   * ```typescript\n   * class DataProvider {\n   *   // in a real application the returned data will be different every time\n   *   get data() {\n   *     return [1,2,3,4,5];\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'giant-list',\n   *   template: `\n   *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n   *   `,\n   * })\n   * class GiantList {\n   *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n   *     ref.detach();\n   *     setInterval(() => {\n   *       this.ref.detectChanges();\n   *     }, 5000);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   providers: [DataProvider],\n   *   template: `\n   *     <giant-list><giant-list>\n   *   `,\n   * })\n   * class App {\n   * }\n   * ```\n   */\n  detach(): void {\n    this._lView[FLAGS] &= ~LViewFlags.Attached;\n  }\n\n  /**\n   * Re-attaches a view to the change detection tree.\n   *\n   * This can be used to re-attach views that were previously detached from the tree\n   * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * The following example creates a component displaying `live` data. The component will detach\n   * its change detector from the main change detector tree when the component's live property\n   * is set to false.\n   *\n   * ```typescript\n   * class DataProvider {\n   *   data = 1;\n   *\n   *   constructor() {\n   *     setInterval(() => {\n   *       this.data = this.data * 2;\n   *     }, 500);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'live-data',\n   *   inputs: ['live'],\n   *   template: 'Data: {{dataProvider.data}}'\n   * })\n   * class LiveData {\n   *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n   *\n   *   set live(value) {\n   *     if (value) {\n   *       this.ref.reattach();\n   *     } else {\n   *       this.ref.detach();\n   *     }\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app-root',\n   *   providers: [DataProvider],\n   *   template: `\n   *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n   *     <live-data [live]=\"live\"><live-data>\n   *   `,\n   * })\n   * class AppComponent {\n   *   live = true;\n   * }\n   * ```\n   */\n  reattach(): void {\n    this._lView[FLAGS] |= LViewFlags.Attached;\n  }\n\n  /**\n   * Checks the view and its children.\n   *\n   * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n   * local change detection checks.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * The following example defines a component with a large list of readonly data.\n   * Imagine, the data changes constantly, many times per second. For performance reasons,\n   * we want to check and update the list every five seconds.\n   *\n   * We can do that by detaching the component's change detector and doing a local change detection\n   * check every five seconds.\n   *\n   * See {@link ChangeDetectorRef#detach detach} for more information.\n   */\n  detectChanges(): void {\n    detectChangesInternal(this._lView[TVIEW], this._lView, this.context as unknown as {});\n  }\n\n  /**\n   * Checks the change detector and its children, and throws if any changes are detected.\n   *\n   * This is used in development mode to verify that running change detection doesn't\n   * introduce other changes.\n   */\n  checkNoChanges(): void {\n    if (ngDevMode) {\n      checkNoChangesInternal(this._lView[TVIEW], this._lView, this.context as unknown as {});\n    }\n  }\n\n  attachToViewContainerRef() {\n    if (this._appRef) {\n      throw new RuntimeError(\n          RuntimeErrorCode.VIEW_ALREADY_ATTACHED,\n          ngDevMode && 'This view is already attached directly to the ApplicationRef!');\n    }\n    this._attachedToViewContainer = true;\n  }\n\n  detachFromAppRef() {\n    this._appRef = null;\n    renderDetachView(this._lView[TVIEW], this._lView);\n  }\n\n  attachToAppRef(appRef: ViewRefTracker) {\n    if (this._attachedToViewContainer) {\n      throw new RuntimeError(\n          RuntimeErrorCode.VIEW_ALREADY_ATTACHED,\n          ngDevMode && 'This view is already attached to a ViewContainer!');\n    }\n    this._appRef = appRef;\n  }\n}\n\n/** @internal */\nexport class RootViewRef<T> extends ViewRef<T> {\n  constructor(public _view: LView) {\n    super(_view);\n  }\n\n  override detectChanges(): void {\n    detectChangesInRootView(this._view);\n  }\n\n  override checkNoChanges(): void {\n    if (ngDevMode) {\n      checkNoChangesInRootView(this._view);\n    }\n  }\n\n  override get context(): T {\n    return null!;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef as ViewEngine_ChangeDetectorRef} from '../change_detection/change_detector_ref';\nimport {Injector} from '../di/injector';\nimport {InjectFlags} from '../di/interface/injector';\nimport {ProviderToken} from '../di/provider_token';\nimport {EnvironmentInjector} from '../di/r3_injector';\nimport {RuntimeError, RuntimeErrorCode} from '../errors';\nimport {Type} from '../interface/type';\nimport {ComponentFactory as viewEngine_ComponentFactory, ComponentRef as AbstractComponentRef} from '../linker/component_factory';\nimport {ComponentFactoryResolver as viewEngine_ComponentFactoryResolver} from '../linker/component_factory_resolver';\nimport {createElementRef, ElementRef as viewEngine_ElementRef} from '../linker/element_ref';\nimport {NgModuleRef as viewEngine_NgModuleRef} from '../linker/ng_module_factory';\nimport {RendererFactory2} from '../render/api';\nimport {Sanitizer} from '../sanitization/sanitizer';\nimport {assertDefined, assertIndexInRange} from '../util/assert';\nimport {VERSION} from '../version';\nimport {NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR} from '../view/provider_flags';\n\nimport {assertComponentType} from './assert';\nimport {getComponentDef} from './definition';\nimport {diPublicInInjector, getOrCreateNodeInjectorForNode, NodeInjector} from './di';\nimport {throwProviderNotFoundError} from './errors_di';\nimport {registerPostOrderHooks} from './hooks';\nimport {reportUnknownPropertyError} from './instructions/element_validation';\nimport {addToViewTree, CLEAN_PROMISE, createLView, createTView, getOrCreateTComponentView, getOrCreateTNode, initTNodeFlags, instantiateRootComponent, invokeHostBindingsInCreationMode, locateHostElement, markAsComponentHost, markDirtyIfOnPush, registerHostBindingOpCodes, renderView, setInputsForProperty} from './instructions/shared';\nimport {ComponentDef, RenderFlags} from './interfaces/definition';\nimport {PropertyAliasValue, TContainerNode, TElementContainerNode, TElementNode, TNode, TNodeType} from './interfaces/node';\nimport {PlayerHandler} from './interfaces/player';\nimport {Renderer, RendererFactory} from './interfaces/renderer';\nimport {RElement, RNode} from './interfaces/renderer_dom';\nimport {CONTEXT, HEADER_OFFSET, LView, LViewFlags, RootContext, RootContextFlags, TVIEW, TViewType} from './interfaces/view';\nimport {MATH_ML_NAMESPACE, SVG_NAMESPACE} from './namespaces';\nimport {createElementNode, writeDirectClass, writeDirectStyle} from './node_manipulation';\nimport {extractAttrsAndClassesFromSelector, stringifyCSSSelectorList} from './node_selector_matcher';\nimport {enterView, getCurrentTNode, getLView, leaveView, setSelectedIndex} from './state';\nimport {computeStaticStyling} from './styling/static_styling';\nimport {setUpAttributes} from './util/attrs_utils';\nimport {defaultScheduler} from './util/misc_utils';\nimport {stringifyForError} from './util/stringify_utils';\nimport {getRootContext} from './util/view_traversal_utils';\nimport {getTNode} from './util/view_utils';\nimport {RootViewRef, ViewRef} from './view_ref';\n\nexport class ComponentFactoryResolver extends viewEngine_ComponentFactoryResolver {\n  /**\n   * @param ngModule The NgModuleRef to which all resolved factories are bound.\n   */\n  constructor(private ngModule?: viewEngine_NgModuleRef<any>) {\n    super();\n  }\n\n  override resolveComponentFactory<T>(component: Type<T>): viewEngine_ComponentFactory<T> {\n    ngDevMode && assertComponentType(component);\n    const componentDef = getComponentDef(component)!;\n    return new ComponentFactory(componentDef, this.ngModule);\n  }\n}\n\nfunction toRefArray(map: {[key: string]: string}): {propName: string; templateName: string;}[] {\n  const array: {propName: string; templateName: string;}[] = [];\n  for (let nonMinified in map) {\n    if (map.hasOwnProperty(nonMinified)) {\n      const minified = map[nonMinified];\n      array.push({propName: minified, templateName: nonMinified});\n    }\n  }\n  return array;\n}\n\nfunction getNamespace(elementName: string): string|null {\n  const name = elementName.toLowerCase();\n  return name === 'svg' ? SVG_NAMESPACE : (name === 'math' ? MATH_ML_NAMESPACE : null);\n}\n\n/**\n * Injector that looks up a value using a specific injector, before falling back to the module\n * injector. Used primarily when creating components or embedded views dynamically.\n */\nclass ChainedInjector implements Injector {\n  constructor(private injector: Injector, private parentInjector: Injector) {}\n\n  get<T>(token: ProviderToken<T>, notFoundValue?: T, flags?: InjectFlags): T {\n    const value = this.injector.get<T|typeof NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR>(\n        token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === (NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR as unknown as T)) {\n      // Return the value from the root element injector when\n      // - it provides it\n      //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n      // - the module injector should not be checked\n      //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n      return value as T;\n    }\n\n    return this.parentInjector.get(token, notFoundValue, flags);\n  }\n}\n\n/**\n * Render3 implementation of {@link viewEngine_ComponentFactory}.\n */\nexport class ComponentFactory<T> extends viewEngine_ComponentFactory<T> {\n  override selector: string;\n  override componentType: Type<any>;\n  override ngContentSelectors: string[];\n  isBoundToModule: boolean;\n\n  override get inputs(): {propName: string; templateName: string;}[] {\n    return toRefArray(this.componentDef.inputs);\n  }\n\n  override get outputs(): {propName: string; templateName: string;}[] {\n    return toRefArray(this.componentDef.outputs);\n  }\n\n  /**\n   * @param componentDef The component definition.\n   * @param ngModule The NgModuleRef to which the factory is bound.\n   */\n  constructor(\n      private componentDef: ComponentDef<any>, private ngModule?: viewEngine_NgModuleRef<any>) {\n    super();\n    this.componentType = componentDef.type;\n    this.selector = stringifyCSSSelectorList(componentDef.selectors);\n    this.ngContentSelectors =\n        componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n    this.isBoundToModule = !!ngModule;\n  }\n\n  override create(\n      injector: Injector, projectableNodes?: any[][]|undefined, rootSelectorOrNode?: any,\n      environmentInjector?: viewEngine_NgModuleRef<any>|EnvironmentInjector|\n      undefined): AbstractComponentRef<T> {\n    environmentInjector = environmentInjector || this.ngModule;\n\n    let realEnvironmentInjector = environmentInjector instanceof EnvironmentInjector ?\n        environmentInjector :\n        environmentInjector?.injector;\n\n    if (realEnvironmentInjector && this.componentDef.getStandaloneInjector !== null) {\n      realEnvironmentInjector = this.componentDef.getStandaloneInjector(realEnvironmentInjector) ||\n          realEnvironmentInjector;\n    }\n\n    const rootViewInjector =\n        realEnvironmentInjector ? new ChainedInjector(injector, realEnvironmentInjector) : injector;\n\n    const rendererFactory = rootViewInjector.get(RendererFactory2, null);\n    if (rendererFactory === null) {\n      throw new RuntimeError(\n          RuntimeErrorCode.RENDERER_NOT_FOUND,\n          ngDevMode &&\n              'Angular was not able to inject a renderer (RendererFactory2). ' +\n                  'Likely this is due to a broken DI hierarchy. ' +\n                  'Make sure that any injector used to create this component has a correct parent.');\n    }\n    const sanitizer = rootViewInjector.get(Sanitizer, null);\n\n    const hostRenderer = rendererFactory.createRenderer(null, this.componentDef);\n    // Determine a tag name used for creating host elements when this component is created\n    // dynamically. Default to 'div' if this component did not specify any tag name in its selector.\n    const elementName = this.componentDef.selectors[0][0] as string || 'div';\n    const hostRNode = rootSelectorOrNode ?\n        locateHostElement(hostRenderer, rootSelectorOrNode, this.componentDef.encapsulation) :\n        createElementNode(\n            rendererFactory.createRenderer(null, this.componentDef), elementName,\n            getNamespace(elementName));\n\n    const rootFlags = this.componentDef.onPush ? LViewFlags.Dirty | LViewFlags.IsRoot :\n                                                 LViewFlags.CheckAlways | LViewFlags.IsRoot;\n    const rootContext = createRootContext();\n\n    // Create the root view. Uses empty TView and ContentTemplate.\n    const rootTView = createTView(TViewType.Root, null, null, 1, 0, null, null, null, null, null);\n    const rootLView = createLView(\n        null, rootTView, rootContext, rootFlags, null, null, rendererFactory, hostRenderer,\n        sanitizer, rootViewInjector, null);\n\n    // rootView is the parent when bootstrapping\n    // TODO(misko): it looks like we are entering view here but we don't really need to as\n    // `renderView` does that. However as the code is written it is needed because\n    // `createRootComponentView` and `createRootComponent` both read global state. Fixing those\n    // issues would allow us to drop this.\n    enterView(rootLView);\n\n    let component: T;\n    let tElementNode: TElementNode;\n\n    try {\n      const componentView = createRootComponentView(\n          hostRNode, this.componentDef, rootLView, rendererFactory, hostRenderer);\n      if (hostRNode) {\n        if (rootSelectorOrNode) {\n          setUpAttributes(hostRenderer, hostRNode, ['ng-version', VERSION.full]);\n        } else {\n          // If host element is created as a part of this function call (i.e. `rootSelectorOrNode`\n          // is not defined), also apply attributes and classes extracted from component selector.\n          // Extract attributes and classes from the first selector only to match VE behavior.\n          const {attrs, classes} =\n              extractAttrsAndClassesFromSelector(this.componentDef.selectors[0]);\n          if (attrs) {\n            setUpAttributes(hostRenderer, hostRNode, attrs);\n          }\n          if (classes && classes.length > 0) {\n            writeDirectClass(hostRenderer, hostRNode, classes.join(' '));\n          }\n        }\n      }\n\n      tElementNode = getTNode(rootTView, HEADER_OFFSET) as TElementNode;\n\n      if (projectableNodes !== undefined) {\n        const projection: (TNode|RNode[]|null)[] = tElementNode.projection = [];\n        for (let i = 0; i < this.ngContentSelectors.length; i++) {\n          const nodesforSlot = projectableNodes[i];\n          // Projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n          // case). Here we do normalize passed data structure to be an array of arrays to avoid\n          // complex checks down the line.\n          // We also normalize the length of the passed in projectable nodes (to match the number of\n          // <ng-container> slots defined by a component).\n          projection.push(nodesforSlot != null ? Array.from(nodesforSlot) : null);\n        }\n      }\n\n      // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n      // executed here?\n      // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n      component = createRootComponent(\n          componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n      renderView(rootTView, rootLView, null);\n    } finally {\n      leaveView();\n    }\n\n    return new ComponentRef(\n        this.componentType, component, createElementRef(tElementNode, rootLView), rootLView,\n        tElementNode);\n  }\n}\n\nconst componentFactoryResolver: ComponentFactoryResolver = new ComponentFactoryResolver();\n\n/**\n * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n * ComponentFactoryResolver\n * already exists, retrieves the existing ComponentFactoryResolver.\n *\n * @returns The ComponentFactoryResolver instance to use\n */\nexport function injectComponentFactoryResolver(): viewEngine_ComponentFactoryResolver {\n  return componentFactoryResolver;\n}\n\n/**\n * Represents an instance of a Component created via a {@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n * method.\n *\n */\nexport class ComponentRef<T> extends AbstractComponentRef<T> {\n  override instance: T;\n  override hostView: ViewRef<T>;\n  override changeDetectorRef: ViewEngine_ChangeDetectorRef;\n  override componentType: Type<T>;\n\n  constructor(\n      componentType: Type<T>, instance: T, public location: viewEngine_ElementRef,\n      private _rootLView: LView,\n      private _tNode: TElementNode|TContainerNode|TElementContainerNode) {\n    super();\n    this.instance = instance;\n    this.hostView = this.changeDetectorRef = new RootViewRef<T>(_rootLView);\n    this.componentType = componentType;\n  }\n\n  override setInput(name: string, value: unknown): void {\n    const inputData = this._tNode.inputs;\n    let dataValue: PropertyAliasValue|undefined;\n    if (inputData !== null && (dataValue = inputData[name])) {\n      const lView = this._rootLView;\n      setInputsForProperty(lView[TVIEW], lView, dataValue, name, value);\n      markDirtyIfOnPush(lView, this._tNode.index);\n    } else {\n      if (ngDevMode) {\n        const cmpNameForError = stringifyForError(this.componentType);\n        let message =\n            `Can't set value of the '${name}' input on the '${cmpNameForError}' component. `;\n        message += `Make sure that the '${\n            name}' property is annotated with @Input() or a mapped @Input('${name}') exists.`;\n        reportUnknownPropertyError(message);\n      }\n    }\n  }\n\n  override get injector(): Injector {\n    return new NodeInjector(this._tNode, this._rootLView);\n  }\n\n  override destroy(): void {\n    this.hostView.destroy();\n  }\n\n  override onDestroy(callback: () => void): void {\n    this.hostView.onDestroy(callback);\n  }\n}\n\n\n\n/** Options that control how the component should be bootstrapped. */\nexport interface CreateComponentOptions {\n  /** Which renderer factory to use. */\n  rendererFactory?: RendererFactory;\n\n  /** A custom sanitizer instance */\n  sanitizer?: Sanitizer;\n\n  /** A custom animation player handler */\n  playerHandler?: PlayerHandler;\n\n  /**\n   * Host element on which the component will be bootstrapped. If not specified,\n   * the component definition's `tag` is used to query the existing DOM for the\n   * element to bootstrap.\n   */\n  host?: RElement|string;\n\n  /** Module injector for the component. If unspecified, the injector will be NULL_INJECTOR. */\n  injector?: Injector;\n\n  /**\n   * List of features to be applied to the created component. Features are simply\n   * functions that decorate a component with a certain behavior.\n   *\n   * Typically, the features in this list are features that cannot be added to the\n   * other features list in the component definition because they rely on other factors.\n   *\n   * Example: `LifecycleHooksFeature` is a function that adds lifecycle hook capabilities\n   * to root components in a tree-shakable way. It cannot be added to the component\n   * features list because there's no way of knowing when the component will be used as\n   * a root component.\n   */\n  hostFeatures?: HostFeature[];\n\n  /**\n   * A function which is used to schedule change detection work in the future.\n   *\n   * When marking components as dirty, it is necessary to schedule the work of\n   * change detection in the future. This is done to coalesce multiple\n   * {@link markDirty} calls into a single changed detection processing.\n   *\n   * The default value of the scheduler is the `requestAnimationFrame` function.\n   *\n   * It is also useful to override this function for testing purposes.\n   */\n  scheduler?: (work: () => void) => void;\n}\n\n/** See CreateComponentOptions.hostFeatures */\ntype HostFeature = (<T>(component: T, componentDef: ComponentDef<T>) => void);\n\n// TODO: A hack to not pull in the NullInjector from @angular/core.\nexport const NULL_INJECTOR: Injector = {\n  get: (token: any, notFoundValue?: any) => {\n    throwProviderNotFoundError(token, 'NullInjector');\n  }\n};\n\n/**\n * Creates the root component view and the root component node.\n *\n * @param rNode Render host element.\n * @param def ComponentDef\n * @param rootView The parent view where the host node is stored\n * @param rendererFactory Factory to be used for creating child renderers.\n * @param hostRenderer The current renderer\n * @param sanitizer The sanitizer, if provided\n *\n * @returns Component view created\n */\nexport function createRootComponentView(\n    rNode: RElement|null, def: ComponentDef<any>, rootView: LView, rendererFactory: RendererFactory,\n    hostRenderer: Renderer, sanitizer?: Sanitizer|null): LView {\n  const tView = rootView[TVIEW];\n  const index = HEADER_OFFSET;\n  ngDevMode && assertIndexInRange(rootView, index);\n  rootView[index] = rNode;\n  // '#host' is added here as we don't know the real host DOM name (we don't want to read it) and at\n  // the same time we want to communicate the debug `TNode` that this is a special `TNode`\n  // representing a host element.\n  const tNode: TElementNode = getOrCreateTNode(tView, index, TNodeType.Element, '#host', null);\n  const mergedAttrs = tNode.mergedAttrs = def.hostAttrs;\n  if (mergedAttrs !== null) {\n    computeStaticStyling(tNode, mergedAttrs, true);\n    if (rNode !== null) {\n      setUpAttributes(hostRenderer, rNode, mergedAttrs);\n      if (tNode.classes !== null) {\n        writeDirectClass(hostRenderer, rNode, tNode.classes);\n      }\n      if (tNode.styles !== null) {\n        writeDirectStyle(hostRenderer, rNode, tNode.styles);\n      }\n    }\n  }\n\n  const viewRenderer = rendererFactory.createRenderer(rNode, def);\n  const componentView = createLView(\n      rootView, getOrCreateTComponentView(def), null,\n      def.onPush ? LViewFlags.Dirty : LViewFlags.CheckAlways, rootView[index], tNode,\n      rendererFactory, viewRenderer, sanitizer || null, null, null);\n\n  if (tView.firstCreatePass) {\n    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n    markAsComponentHost(tView, tNode);\n    initTNodeFlags(tNode, rootView.length, 1);\n  }\n\n  addToViewTree(rootView, componentView);\n\n  // Store component view at node index, with node as the HOST\n  return rootView[index] = componentView;\n}\n\n/**\n * Creates a root component and sets it up with features and host bindings.Shared by\n * renderComponent() and ViewContainerRef.createComponent().\n */\nexport function createRootComponent<T>(\n    componentView: LView, componentDef: ComponentDef<T>, rootLView: LView, rootContext: RootContext,\n    hostFeatures: HostFeature[]|null): any {\n  const tView = rootLView[TVIEW];\n  // Create directive instance with factory() and store at next index in viewData\n  const component = instantiateRootComponent(tView, rootLView, componentDef);\n\n  rootContext.components.push(component);\n  componentView[CONTEXT] = component;\n\n  if (hostFeatures !== null) {\n    for (const feature of hostFeatures) {\n      feature(component, componentDef);\n    }\n  }\n\n  // We want to generate an empty QueryList for root content queries for backwards\n  // compatibility with ViewEngine.\n  if (componentDef.contentQueries) {\n    const tNode = getCurrentTNode()!;\n    ngDevMode && assertDefined(tNode, 'TNode expected');\n    componentDef.contentQueries(RenderFlags.Create, component, tNode.directiveStart);\n  }\n\n  const rootTNode = getCurrentTNode()!;\n  ngDevMode && assertDefined(rootTNode, 'tNode should have been already created');\n  if (tView.firstCreatePass &&\n      (componentDef.hostBindings !== null || componentDef.hostAttrs !== null)) {\n    setSelectedIndex(rootTNode.index);\n\n    const rootTView = rootLView[TVIEW];\n    registerHostBindingOpCodes(\n        rootTView, rootTNode, rootLView, rootTNode.directiveStart, rootTNode.directiveEnd,\n        componentDef);\n\n    invokeHostBindingsInCreationMode(componentDef, component);\n  }\n  return component;\n}\n\n\nexport function createRootContext(\n    scheduler?: (workFn: () => void) => void, playerHandler?: PlayerHandler|null): RootContext {\n  return {\n    components: [],\n    scheduler: scheduler || defaultScheduler,\n    clean: CLEAN_PROMISE,\n    playerHandler: playerHandler || null,\n    flags: RootContextFlags.Empty\n  };\n}\n\n/**\n * Used to enable lifecycle hooks on the root component.\n *\n * Include this feature when calling `renderComponent` if the root component\n * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n * be called properly.\n *\n * Example:\n *\n * ```\n * renderComponent(AppComponent, {hostFeatures: [LifecycleHooksFeature]});\n * ```\n */\nexport function LifecycleHooksFeature(): void {\n  const tNode = getCurrentTNode()!;\n  ngDevMode && assertDefined(tNode, 'TNode is required');\n  registerPostOrderHooks(getLView()[TVIEW], tNode);\n}\n\n/**\n * Wait on component until it is rendered.\n *\n * This function returns a `Promise` which is resolved when the component's\n * change detection is executed. This is determined by finding the scheduler\n * associated with the `component`'s render tree and waiting until the scheduler\n * flushes. If nothing is scheduled, the function returns a resolved promise.\n *\n * Example:\n * ```\n * await whenRendered(myComponent);\n * ```\n *\n * @param component Component to wait upon\n * @returns Promise which resolves when the component is rendered.\n */\nexport function whenRendered(component: any): Promise<null> {\n  return getRootContext(component).clean;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {RuntimeError, RuntimeErrorCode} from '../../errors';\nimport {Type, Writable} from '../../interface/type';\nimport {EMPTY_ARRAY, EMPTY_OBJ} from '../../util/empty';\nimport {fillProperties} from '../../util/property';\nimport {ComponentDef, ContentQueriesFunction, DirectiveDef, DirectiveDefFeature, HostBindingsFunction, RenderFlags, ViewQueriesFunction} from '../interfaces/definition';\nimport {TAttributes} from '../interfaces/node';\nimport {isComponentDef} from '../interfaces/type_checks';\nimport {mergeHostAttrs} from '../util/attrs_utils';\nimport {stringifyForError} from '../util/stringify_utils';\n\nexport function getSuperType(type: Type<any>): Type<any>&\n    {ɵcmp?: ComponentDef<any>, ɵdir?: DirectiveDef<any>} {\n  return Object.getPrototypeOf(type.prototype).constructor;\n}\n\ntype WritableDef = Writable<DirectiveDef<any>|ComponentDef<any>>;\n\n/**\n * Merges the definition from a super class to a sub class.\n * @param definition The definition that is a SubClass of another directive of component\n *\n * @codeGenApi\n */\nexport function ɵɵInheritDefinitionFeature(definition: DirectiveDef<any>|ComponentDef<any>): void {\n  let superType = getSuperType(definition.type);\n  let shouldInheritFields = true;\n  const inheritanceChain: WritableDef[] = [definition];\n\n  while (superType) {\n    let superDef: DirectiveDef<any>|ComponentDef<any>|undefined = undefined;\n    if (isComponentDef(definition)) {\n      // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n      superDef = superType.ɵcmp || superType.ɵdir;\n    } else {\n      if (superType.ɵcmp) {\n        throw new RuntimeError(\n            RuntimeErrorCode.INVALID_INHERITANCE,\n            ngDevMode &&\n                `Directives cannot inherit Components. Directive ${\n                    stringifyForError(definition.type)} is attempting to extend component ${\n                    stringifyForError(superType)}`);\n      }\n      // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n      superDef = superType.ɵdir;\n    }\n\n    if (superDef) {\n      if (shouldInheritFields) {\n        inheritanceChain.push(superDef);\n        // Some fields in the definition may be empty, if there were no values to put in them that\n        // would've justified object creation. Unwrap them if necessary.\n        const writeableDef = definition as WritableDef;\n        writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n        writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n        writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n\n        // Merge hostBindings\n        const superHostBindings = superDef.hostBindings;\n        superHostBindings && inheritHostBindings(definition, superHostBindings);\n\n        // Merge queries\n        const superViewQuery = superDef.viewQuery;\n        const superContentQueries = superDef.contentQueries;\n        superViewQuery && inheritViewQuery(definition, superViewQuery);\n        superContentQueries && inheritContentQueries(definition, superContentQueries);\n\n        // Merge inputs and outputs\n        fillProperties(definition.inputs, superDef.inputs);\n        fillProperties(definition.declaredInputs, superDef.declaredInputs);\n        fillProperties(definition.outputs, superDef.outputs);\n\n        // Merge animations metadata.\n        // If `superDef` is a Component, the `data` field is present (defaults to an empty object).\n        if (isComponentDef(superDef) && superDef.data.animation) {\n          // If super def is a Component, the `definition` is also a Component, since Directives can\n          // not inherit Components (we throw an error above and cannot reach this code).\n          const defData = (definition as ComponentDef<any>).data;\n          defData.animation = (defData.animation || []).concat(superDef.data.animation);\n        }\n      }\n\n      // Run parent features\n      const features = superDef.features;\n      if (features) {\n        for (let i = 0; i < features.length; i++) {\n          const feature = features[i];\n          if (feature && feature.ngInherit) {\n            (feature as DirectiveDefFeature)(definition);\n          }\n          // If `InheritDefinitionFeature` is a part of the current `superDef`, it means that this\n          // def already has all the necessary information inherited from its super class(es), so we\n          // can stop merging fields from super classes. However we need to iterate through the\n          // prototype chain to look for classes that might contain other \"features\" (like\n          // NgOnChanges), which we should invoke for the original `definition`. We set the\n          // `shouldInheritFields` flag to indicate that, essentially skipping fields inheritance\n          // logic and only invoking functions from the \"features\" list.\n          if (feature === ɵɵInheritDefinitionFeature) {\n            shouldInheritFields = false;\n          }\n        }\n      }\n    }\n\n    superType = Object.getPrototypeOf(superType);\n  }\n  mergeHostAttrsAcrossInheritance(inheritanceChain);\n}\n\n/**\n * Merge the `hostAttrs` and `hostVars` from the inherited parent to the base class.\n *\n * @param inheritanceChain A list of `WritableDefs` starting at the top most type and listing\n * sub-types in order. For each type take the `hostAttrs` and `hostVars` and merge it with the child\n * type.\n */\nfunction mergeHostAttrsAcrossInheritance(inheritanceChain: WritableDef[]) {\n  let hostVars: number = 0;\n  let hostAttrs: TAttributes|null = null;\n  // We process the inheritance order from the base to the leaves here.\n  for (let i = inheritanceChain.length - 1; i >= 0; i--) {\n    const def = inheritanceChain[i];\n    // For each `hostVars`, we need to add the superclass amount.\n    def.hostVars = (hostVars += def.hostVars);\n    // for each `hostAttrs` we need to merge it with superclass.\n    def.hostAttrs =\n        mergeHostAttrs(def.hostAttrs, hostAttrs = mergeHostAttrs(hostAttrs, def.hostAttrs));\n  }\n}\n\nfunction maybeUnwrapEmpty<T>(value: T[]): T[];\nfunction maybeUnwrapEmpty<T>(value: T): T;\nfunction maybeUnwrapEmpty(value: any): any {\n  if (value === EMPTY_OBJ) {\n    return {};\n  } else if (value === EMPTY_ARRAY) {\n    return [];\n  } else {\n    return value;\n  }\n}\n\nfunction inheritViewQuery(definition: WritableDef, superViewQuery: ViewQueriesFunction<any>) {\n  const prevViewQuery = definition.viewQuery;\n  if (prevViewQuery) {\n    definition.viewQuery = (rf, ctx) => {\n      superViewQuery(rf, ctx);\n      prevViewQuery(rf, ctx);\n    };\n  } else {\n    definition.viewQuery = superViewQuery;\n  }\n}\n\nfunction inheritContentQueries(\n    definition: WritableDef, superContentQueries: ContentQueriesFunction<any>) {\n  const prevContentQueries = definition.contentQueries;\n  if (prevContentQueries) {\n    definition.contentQueries = (rf, ctx, directiveIndex) => {\n      superContentQueries(rf, ctx, directiveIndex);\n      prevContentQueries(rf, ctx, directiveIndex);\n    };\n  } else {\n    definition.contentQueries = superContentQueries;\n  }\n}\n\nfunction inheritHostBindings(\n    definition: WritableDef, superHostBindings: HostBindingsFunction<any>) {\n  const prevHostBindings = definition.hostBindings;\n  if (prevHostBindings) {\n    definition.hostBindings = (rf: RenderFlags, ctx: any) => {\n      superHostBindings(rf, ctx);\n      prevHostBindings(rf, ctx);\n    };\n  } else {\n    definition.hostBindings = superHostBindings;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentDef, DirectiveDef} from '../interfaces/definition';\nimport {isComponentDef} from '../interfaces/type_checks';\n\nimport {getSuperType} from './inherit_definition_feature';\n\n/**\n * Fields which exist on either directive or component definitions, and need to be copied from\n * parent to child classes by the `ɵɵCopyDefinitionFeature`.\n */\nconst COPY_DIRECTIVE_FIELDS: (keyof DirectiveDef<unknown>)[] = [\n  // The child class should use the providers of its parent.\n  'providersResolver',\n\n  // Not listed here are any fields which are handled by the `ɵɵInheritDefinitionFeature`, such\n  // as inputs, outputs, and host binding functions.\n];\n\n/**\n * Fields which exist only on component definitions, and need to be copied from parent to child\n * classes by the `ɵɵCopyDefinitionFeature`.\n *\n * The type here allows any field of `ComponentDef` which is not also a property of `DirectiveDef`,\n * since those should go in `COPY_DIRECTIVE_FIELDS` above.\n */\nconst COPY_COMPONENT_FIELDS: Exclude<keyof ComponentDef<unknown>, keyof DirectiveDef<unknown>>[] = [\n  // The child class should use the template function of its parent, including all template\n  // semantics.\n  'template',\n  'decls',\n  'consts',\n  'vars',\n  'onPush',\n  'ngContentSelectors',\n\n  // The child class should use the CSS styles of its parent, including all styling semantics.\n  'styles',\n  'encapsulation',\n\n  // The child class should be checked by the runtime in the same way as its parent.\n  'schemas',\n];\n\n/**\n * Copies the fields not handled by the `ɵɵInheritDefinitionFeature` from the supertype of a\n * definition.\n *\n * This exists primarily to support ngcc migration of an existing View Engine pattern, where an\n * entire decorator is inherited from a parent to a child class. When ngcc detects this case, it\n * generates a skeleton definition on the child class, and applies this feature.\n *\n * The `ɵɵCopyDefinitionFeature` then copies any needed fields from the parent class' definition,\n * including things like the component template function.\n *\n * @param definition The definition of a child class which inherits from a parent class with its\n * own definition.\n *\n * @codeGenApi\n */\nexport function ɵɵCopyDefinitionFeature(definition: DirectiveDef<any>|ComponentDef<any>): void {\n  let superType = getSuperType(definition.type)!;\n\n  let superDef: DirectiveDef<any>|ComponentDef<any>|undefined = undefined;\n  if (isComponentDef(definition)) {\n    // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n    superDef = superType.ɵcmp!;\n  } else {\n    // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n    superDef = superType.ɵdir!;\n  }\n\n  // Needed because `definition` fields are readonly.\n  const defAny = (definition as any);\n\n  // Copy over any fields that apply to either directives or components.\n  for (const field of COPY_DIRECTIVE_FIELDS) {\n    defAny[field] = superDef[field];\n  }\n\n  if (isComponentDef(superDef)) {\n    // Copy over any component-specific fields.\n    for (const field of COPY_COMPONENT_FIELDS) {\n      defAny[field] = superDef[field];\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {global as _global} from './global';\n\n// When Symbol.iterator doesn't exist, retrieves the key used in es6-shim\ndeclare const Symbol: any;\nlet _symbolIterator: any = null;\nexport function getSymbolIterator(): string|symbol {\n  if (!_symbolIterator) {\n    const Symbol = _global['Symbol'];\n    if (Symbol && Symbol.iterator) {\n      _symbolIterator = Symbol.iterator;\n    } else {\n      // es6-shim specific logic\n      const keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (key !== 'entries' && key !== 'size' &&\n            (Map as any).prototype[key] === Map.prototype['entries']) {\n          _symbolIterator = key;\n        }\n      }\n    }\n  }\n  return _symbolIterator;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getSymbolIterator} from './symbol';\n\n\nexport function isIterable(obj: any): obj is Iterable<any> {\n  return obj !== null && typeof obj === 'object' && (obj as any)[getSymbolIterator()] !== undefined;\n}\n\nexport function isListLikeIterable(obj: any): boolean {\n  if (!isJsObject(obj)) return false;\n  return Array.isArray(obj) ||\n      (!(obj instanceof Map) &&      // JS Map are iterables but return entries as [k, v]\n       getSymbolIterator() in obj);  // JS Iterable have a Symbol.iterator prop\n}\n\nexport function areIterablesEqual(\n    a: any, b: any, comparator: (a: any, b: any) => boolean): boolean {\n  const iterator1 = a[getSymbolIterator()]();\n  const iterator2 = b[getSymbolIterator()]();\n\n  while (true) {\n    const item1 = iterator1.next();\n    const item2 = iterator2.next();\n    if (item1.done && item2.done) return true;\n    if (item1.done || item2.done) return false;\n    if (!comparator(item1.value, item2.value)) return false;\n  }\n}\n\nexport function iterateListLike(obj: any, fn: (p: any) => any) {\n  if (Array.isArray(obj)) {\n    for (let i = 0; i < obj.length; i++) {\n      fn(obj[i]);\n    }\n  } else {\n    const iterator = obj[getSymbolIterator()]();\n    let item: any;\n    while (!((item = iterator.next()).done)) {\n      fn(item.value);\n    }\n  }\n}\n\nexport function isJsObject(o: any): boolean {\n  return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {assertIndexInRange, assertLessThan, assertNotSame} from '../util/assert';\nimport {devModeEqual} from '../util/comparison';\n\nimport {getExpressionChangedErrorDetails, throwErrorIfNoChangesMode} from './errors';\nimport {LView} from './interfaces/view';\nimport {isInCheckNoChangesMode} from './state';\nimport {NO_CHANGE} from './tokens';\n\n\n// TODO(misko): consider inlining\n/** Updates binding and returns the value. */\nexport function updateBinding(lView: LView, bindingIndex: number, value: any): any {\n  return lView[bindingIndex] = value;\n}\n\n\n/** Gets the current binding value. */\nexport function getBinding(lView: LView, bindingIndex: number): any {\n  ngDevMode && assertIndexInRange(lView, bindingIndex);\n  ngDevMode &&\n      assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n  return lView[bindingIndex];\n}\n\n/**\n * Updates binding if changed, then returns whether it was updated.\n *\n * This function also checks the `CheckNoChangesMode` and throws if changes are made.\n * Some changes (Objects/iterables) during `CheckNoChangesMode` are exempt to comply with VE\n * behavior.\n *\n * @param lView current `LView`\n * @param bindingIndex The binding in the `LView` to check\n * @param value New value to check against `lView[bindingIndex]`\n * @returns `true` if the bindings has changed. (Throws if binding has changed during\n *          `CheckNoChangesMode`)\n */\nexport function bindingUpdated(lView: LView, bindingIndex: number, value: any): boolean {\n  ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n  ngDevMode &&\n      assertLessThan(bindingIndex, lView.length, `Slot should have been initialized to NO_CHANGE`);\n  const oldValue = lView[bindingIndex];\n\n  if (Object.is(oldValue, value)) {\n    return false;\n  } else {\n    if (ngDevMode && isInCheckNoChangesMode()) {\n      // View engine didn't report undefined values as changed on the first checkNoChanges pass\n      // (before the change detection was run).\n      const oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n      if (!devModeEqual(oldValueToCompare, value)) {\n        const details =\n            getExpressionChangedErrorDetails(lView, bindingIndex, oldValueToCompare, value);\n        throwErrorIfNoChangesMode(\n            oldValue === NO_CHANGE, details.oldValue, details.newValue, details.propName);\n      }\n      // There was a change, but the `devModeEqual` decided that the change is exempt from an error.\n      // For this reason we exit as if no change. The early exit is needed to prevent the changed\n      // value to be written into `LView` (If we would write the new value that we would not see it\n      // as change on next CD.)\n      return false;\n    }\n    lView[bindingIndex] = value;\n    return true;\n  }\n}\n\n/** Updates 2 bindings if changed, then returns whether either was updated. */\nexport function bindingUpdated2(lView: LView, bindingIndex: number, exp1: any, exp2: any): boolean {\n  const different = bindingUpdated(lView, bindingIndex, exp1);\n  return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n}\n\n/** Updates 3 bindings if changed, then returns whether any was updated. */\nexport function bindingUpdated3(\n    lView: LView, bindingIndex: number, exp1: any, exp2: any, exp3: any): boolean {\n  const different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n  return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n}\n\n/** Updates 4 bindings if changed, then returns whether any was updated. */\nexport function bindingUpdated4(\n    lView: LView, bindingIndex: number, exp1: any, exp2: any, exp3: any, exp4: any): boolean {\n  const different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n  return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {bindingUpdated} from '../bindings';\nimport {SanitizerFn} from '../interfaces/sanitization';\nimport {getLView, getSelectedTNode, getTView, nextBindingIndex} from '../state';\nimport {elementAttributeInternal, storePropertyBindingMetadata} from './shared';\n\n\n\n/**\n * Updates the value of or removes a bound attribute on an Element.\n *\n * Used in the case of `[attr.title]=\"value\"`\n *\n * @param name name The name of the attribute.\n * @param value value The attribute is removed when value is `null` or `undefined`.\n *                  Otherwise the attribute value is set to the stringified value.\n * @param sanitizer An optional function used to sanitize the value.\n * @param namespace Optional namespace to use when setting the attribute.\n *\n * @codeGenApi\n */\nexport function ɵɵattribute(\n    name: string, value: any, sanitizer?: SanitizerFn|null,\n    namespace?: string): typeof ɵɵattribute {\n  const lView = getLView();\n  const bindingIndex = nextBindingIndex();\n  if (bindingUpdated(lView, bindingIndex, value)) {\n    const tView = getTView();\n    const tNode = getSelectedTNode();\n    elementAttributeInternal(tNode, lView, name, value, sanitizer, namespace);\n    ngDevMode && storePropertyBindingMetadata(tView.data, tNode, 'attr.' + name, bindingIndex);\n  }\n  return ɵɵattribute;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {assertEqual, assertLessThan} from '../../util/assert';\nimport {bindingUpdated, bindingUpdated2, bindingUpdated3, bindingUpdated4} from '../bindings';\nimport {LView} from '../interfaces/view';\nimport {getBindingIndex, incrementBindingIndex, nextBindingIndex, setBindingIndex} from '../state';\nimport {NO_CHANGE} from '../tokens';\nimport {renderStringify} from '../util/stringify_utils';\n\n\n\n/**\n * Create interpolation bindings with a variable number of expressions.\n *\n * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n * Those are faster because there is no need to create an array of expressions and iterate over it.\n *\n * `values`:\n * - has static text at even indexes,\n * - has evaluated expressions at odd indexes.\n *\n * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nexport function interpolationV(lView: LView, values: any[]): string|NO_CHANGE {\n  ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n  ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n  let isBindingUpdated = false;\n  let bindingIndex = getBindingIndex();\n\n  for (let i = 1; i < values.length; i += 2) {\n    // Check if bindings (odd indexes) have changed\n    isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n  }\n  setBindingIndex(bindingIndex);\n\n  if (!isBindingUpdated) {\n    return NO_CHANGE;\n  }\n\n  // Build the updated content\n  let content = values[0];\n  for (let i = 1; i < values.length; i += 2) {\n    content += renderStringify(values[i]) + values[i + 1];\n  }\n\n  return content;\n}\n\n/**\n * Creates an interpolation binding with 1 expression.\n *\n * @param prefix static value used for concatenation only.\n * @param v0 value checked for change.\n * @param suffix static value used for concatenation only.\n */\nexport function interpolation1(lView: LView, prefix: string, v0: any, suffix: string): string|\n    NO_CHANGE {\n  const different = bindingUpdated(lView, nextBindingIndex(), v0);\n  return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n}\n\n/**\n * Creates an interpolation binding with 2 expressions.\n */\nexport function interpolation2(\n    lView: LView, prefix: string, v0: any, i0: string, v1: any, suffix: string): string|NO_CHANGE {\n  const bindingIndex = getBindingIndex();\n  const different = bindingUpdated2(lView, bindingIndex, v0, v1);\n  incrementBindingIndex(2);\n\n  return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n}\n\n/**\n * Creates an interpolation binding with 3 expressions.\n */\nexport function interpolation3(\n    lView: LView, prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any,\n    suffix: string): string|NO_CHANGE {\n  const bindingIndex = getBindingIndex();\n  const different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n  incrementBindingIndex(3);\n\n  return different ?\n      prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n      NO_CHANGE;\n}\n\n/**\n * Create an interpolation binding with 4 expressions.\n */\nexport function interpolation4(\n    lView: LView, prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string,\n    v3: any, suffix: string): string|NO_CHANGE {\n  const bindingIndex = getBindingIndex();\n  const different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n  incrementBindingIndex(4);\n\n  return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 +\n          renderStringify(v2) + i2 + renderStringify(v3) + suffix :\n                     NO_CHANGE;\n}\n\n/**\n * Creates an interpolation binding with 5 expressions.\n */\nexport function interpolation5(\n    lView: LView, prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string,\n    v3: any, i3: string, v4: any, suffix: string): string|NO_CHANGE {\n  const bindingIndex = getBindingIndex();\n  let different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n  different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n  incrementBindingIndex(5);\n\n  return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 +\n          renderStringify(v2) + i2 + renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n                     NO_CHANGE;\n}\n\n/**\n * Creates an interpolation binding with 6 expressions.\n */\nexport function interpolation6(\n    lView: LView, prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string,\n    v3: any, i3: string, v4: any, i4: string, v5: any, suffix: string): string|NO_CHANGE {\n  const bindingIndex = getBindingIndex();\n  let different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n  different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n  incrementBindingIndex(6);\n\n  return different ?\n      prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n          renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n      NO_CHANGE;\n}\n\n/**\n * Creates an interpolation binding with 7 expressions.\n */\nexport function interpolation7(\n    lView: LView, prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string,\n    v3: any, i3: string, v4: any, i4: string, v5: any, i5: string, v6: any, suffix: string): string|\n    NO_CHANGE {\n  const bindingIndex = getBindingIndex();\n  let different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n  different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n  incrementBindingIndex(7);\n\n  return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 +\n          renderStringify(v2) + i2 + renderStringify(v3) + i3 + renderStringify(v4) + i4 +\n          renderStringify(v5) + i5 + renderStringify(v6) + suffix :\n                     NO_CHANGE;\n}\n\n/**\n * Creates an interpolation binding with 8 expressions.\n */\nexport function interpolation8(\n    lView: LView, prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string,\n    v3: any, i3: string, v4: any, i4: string, v5: any, i5: string, v6: any, i6: string, v7: any,\n    suffix: string): string|NO_CHANGE {\n  const bindingIndex = getBindingIndex();\n  let different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n  different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n  incrementBindingIndex(8);\n\n  return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 +\n          renderStringify(v2) + i2 + renderStringify(v3) + i3 + renderStringify(v4) + i4 +\n          renderStringify(v5) + i5 + renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n                     NO_CHANGE;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {SanitizerFn} from '../interfaces/sanitization';\nimport {getBindingIndex, getLView, getSelectedTNode, getTView} from '../state';\nimport {NO_CHANGE} from '../tokens';\nimport {interpolation1, interpolation2, interpolation3, interpolation4, interpolation5, interpolation6, interpolation7, interpolation8, interpolationV} from './interpolation';\nimport {elementAttributeInternal, storePropertyBindingMetadata} from './shared';\n\n\n\n/**\n *\n * Update an interpolated attribute on an element with single bound value surrounded by text.\n *\n * Used when the value passed to a property has 1 interpolated value in it:\n *\n * ```html\n * <div attr.title=\"prefix{{v0}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n * ```\n *\n * @param attrName The name of the attribute to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nexport function ɵɵattributeInterpolate1(\n    attrName: string, prefix: string, v0: any, suffix: string, sanitizer?: SanitizerFn,\n    namespace?: string): typeof ɵɵattributeInterpolate1 {\n  const lView = getLView();\n  const interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n  if (interpolatedValue !== NO_CHANGE) {\n    const tNode = getSelectedTNode();\n    elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n    ngDevMode &&\n        storePropertyBindingMetadata(\n            getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 1, prefix, suffix);\n  }\n  return ɵɵattributeInterpolate1;\n}\n\n/**\n *\n * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n *\n * Used when the value passed to a property has 2 interpolated values in it:\n *\n * ```html\n * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n * ```\n *\n * @param attrName The name of the attribute to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nexport function ɵɵattributeInterpolate2(\n    attrName: string, prefix: string, v0: any, i0: string, v1: any, suffix: string,\n    sanitizer?: SanitizerFn, namespace?: string): typeof ɵɵattributeInterpolate2 {\n  const lView = getLView();\n  const interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n  if (interpolatedValue !== NO_CHANGE) {\n    const tNode = getSelectedTNode();\n    elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n    ngDevMode &&\n        storePropertyBindingMetadata(\n            getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 2, prefix, i0, suffix);\n  }\n  return ɵɵattributeInterpolate2;\n}\n\n/**\n *\n * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n *\n * Used when the value passed to a property has 3 interpolated values in it:\n *\n * ```html\n * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵattributeInterpolate3(\n * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n * ```\n *\n * @param attrName The name of the attribute to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nexport function ɵɵattributeInterpolate3(\n    attrName: string, prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any,\n    suffix: string, sanitizer?: SanitizerFn, namespace?: string): typeof ɵɵattributeInterpolate3 {\n  const lView = getLView();\n  const interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n  if (interpolatedValue !== NO_CHANGE) {\n    const tNode = getSelectedTNode();\n    elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n    ngDevMode &&\n        storePropertyBindingMetadata(\n            getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 3, prefix, i0, i1,\n            suffix);\n  }\n  return ɵɵattributeInterpolate3;\n}\n\n/**\n *\n * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n *\n * Used when the value passed to a property has 4 interpolated values in it:\n *\n * ```html\n * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵattributeInterpolate4(\n * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n * ```\n *\n * @param attrName The name of the attribute to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nexport function ɵɵattributeInterpolate4(\n    attrName: string, prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string,\n    v3: any, suffix: string, sanitizer?: SanitizerFn,\n    namespace?: string): typeof ɵɵattributeInterpolate4 {\n  const lView = getLView();\n  const interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n  if (interpolatedValue !== NO_CHANGE) {\n    const tNode = getSelectedTNode();\n    elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n    ngDevMode &&\n        storePropertyBindingMetadata(\n            getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 4, prefix, i0, i1, i2,\n            suffix);\n  }\n  return ɵɵattributeInterpolate4;\n}\n\n/**\n *\n * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n *\n * Used when the value passed to a property has 5 interpolated values in it:\n *\n * ```html\n * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵattributeInterpolate5(\n * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n * ```\n *\n * @param attrName The name of the attribute to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nexport function ɵɵattributeInterpolate5(\n    attrName: string, prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string,\n    v3: any, i3: string, v4: any, suffix: string, sanitizer?: SanitizerFn,\n    namespace?: string): typeof ɵɵattributeInterpolate5 {\n  const lView = getLView();\n  const interpolatedValue =\n      interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n  if (interpolatedValue !== NO_CHANGE) {\n    const tNode = getSelectedTNode();\n    elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n    ngDevMode &&\n        storePropertyBindingMetadata(\n            getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 5, prefix, i0, i1, i2,\n            i3, suffix);\n  }\n  return ɵɵattributeInterpolate5;\n}\n\n/**\n *\n * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n *\n * Used when the value passed to a property has 6 interpolated values in it:\n *\n * ```html\n * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵattributeInterpolate6(\n *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n * ```\n *\n * @param attrName The name of the attribute to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nexport function ɵɵattributeInterpolate6(\n    attrName: string, prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string,\n    v3: any, i3: string, v4: any, i4: string, v5: any, suffix: string, sanitizer?: SanitizerFn,\n    namespace?: string): typeof ɵɵattributeInterpolate6 {\n  const lView = getLView();\n  const interpolatedValue =\n      interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n  if (interpolatedValue !== NO_CHANGE) {\n    const tNode = getSelectedTNode();\n    elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n    ngDevMode &&\n        storePropertyBindingMetadata(\n            getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 6, prefix, i0, i1, i2,\n            i3, i4, suffix);\n  }\n  return ɵɵattributeInterpolate6;\n}\n\n/**\n *\n * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n *\n * Used when the value passed to a property has 7 interpolated values in it:\n *\n * ```html\n * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵattributeInterpolate7(\n *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n * ```\n *\n * @param attrName The name of the attribute to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param i5 Static value used for concatenation only.\n * @param v6 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nexport function ɵɵattributeInterpolate7(\n    attrName: string, prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string,\n    v3: any, i3: string, v4: any, i4: string, v5: any, i5: string, v6: any, suffix: string,\n    sanitizer?: SanitizerFn, namespace?: string): typeof ɵɵattributeInterpolate7 {\n  const lView = getLView();\n  const interpolatedValue =\n      interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n  if (interpolatedValue !== NO_CHANGE) {\n    const tNode = getSelectedTNode();\n    elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n    ngDevMode &&\n        storePropertyBindingMetadata(\n            getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 7, prefix, i0, i1, i2,\n            i3, i4, i5, suffix);\n  }\n  return ɵɵattributeInterpolate7;\n}\n\n/**\n *\n * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n *\n * Used when the value passed to a property has 8 interpolated values in it:\n *\n * ```html\n * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵattributeInterpolate8(\n *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n * ```\n *\n * @param attrName The name of the attribute to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param i5 Static value used for concatenation only.\n * @param v6 Value checked for change.\n * @param i6 Static value used for concatenation only.\n * @param v7 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nexport function ɵɵattributeInterpolate8(\n    attrName: string, prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string,\n    v3: any, i3: string, v4: any, i4: string, v5: any, i5: string, v6: any, i6: string, v7: any,\n    suffix: string, sanitizer?: SanitizerFn, namespace?: string): typeof ɵɵattributeInterpolate8 {\n  const lView = getLView();\n  const interpolatedValue = interpolation8(\n      lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n  if (interpolatedValue !== NO_CHANGE) {\n    const tNode = getSelectedTNode();\n    elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n    ngDevMode &&\n        storePropertyBindingMetadata(\n            getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 8, prefix, i0, i1, i2,\n            i3, i4, i5, i6, suffix);\n  }\n  return ɵɵattributeInterpolate8;\n}\n\n/**\n * Update an interpolated attribute on an element with 9 or more bound values surrounded by text.\n *\n * Used when the number of interpolated values exceeds 8.\n *\n * ```html\n * <div\n *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵattributeInterpolateV(\n *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n *  'suffix']);\n * ```\n *\n * @param attrName The name of the attribute to update.\n * @param values The collection of values and the strings in-between those values, beginning with\n * a string prefix and ending with a string suffix.\n * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nexport function ɵɵattributeInterpolateV(\n    attrName: string, values: any[], sanitizer?: SanitizerFn,\n    namespace?: string): typeof ɵɵattributeInterpolateV {\n  const lView = getLView();\n  const interpolated = interpolationV(lView, values);\n  if (interpolated !== NO_CHANGE) {\n    const tNode = getSelectedTNode();\n    elementAttributeInternal(tNode, lView, attrName, interpolated, sanitizer, namespace);\n    if (ngDevMode) {\n      const interpolationInBetween = [values[0]];  // prefix\n      for (let i = 2; i < values.length; i += 2) {\n        interpolationInBetween.push(values[i]);\n      }\n      storePropertyBindingMetadata(\n          getTView().data, tNode, 'attr.' + attrName,\n          getBindingIndex() - interpolationInBetween.length + 1, ...interpolationInBetween);\n    }\n  }\n  return ɵɵattributeInterpolateV;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {assertFirstCreatePass} from '../assert';\nimport {attachPatchData} from '../context_discovery';\nimport {registerPostOrderHooks} from '../hooks';\nimport {ComponentTemplate} from '../interfaces/definition';\nimport {LocalRefExtractor, TAttributes, TContainerNode, TNodeType} from '../interfaces/node';\nimport {isDirectiveHost} from '../interfaces/type_checks';\nimport {HEADER_OFFSET, LView, RENDERER, TView, TViewType} from '../interfaces/view';\nimport {appendChild} from '../node_manipulation';\nimport {getLView, getTView, setCurrentTNode} from '../state';\nimport {getConstant} from '../util/view_utils';\nimport {addToViewTree, createDirectivesInstances, createLContainer, createTView, getOrCreateTNode, resolveDirectives, saveResolvedLocalsInData} from './shared';\n\n\n\nfunction templateFirstCreatePass(\n    index: number, tView: TView, lView: LView, templateFn: ComponentTemplate<any>|null,\n    decls: number, vars: number, tagName?: string|null, attrsIndex?: number|null,\n    localRefsIndex?: number|null): TContainerNode {\n  ngDevMode && assertFirstCreatePass(tView);\n  ngDevMode && ngDevMode.firstCreatePass++;\n  const tViewConsts = tView.consts;\n  // TODO(pk): refactor getOrCreateTNode to have the \"create\" only version\n  const tNode = getOrCreateTNode(\n      tView, index, TNodeType.Container, tagName || null,\n      getConstant<TAttributes>(tViewConsts, attrsIndex));\n\n  resolveDirectives(tView, lView, tNode, getConstant<string[]>(tViewConsts, localRefsIndex));\n  registerPostOrderHooks(tView, tNode);\n\n  const embeddedTView = tNode.tViews = createTView(\n      TViewType.Embedded, tNode, templateFn, decls, vars, tView.directiveRegistry,\n      tView.pipeRegistry, null, tView.schemas, tViewConsts);\n\n  if (tView.queries !== null) {\n    tView.queries.template(tView, tNode);\n    embeddedTView.queries = tView.queries.embeddedTView(tNode);\n  }\n\n  return tNode;\n}\n\n/**\n * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n *\n * <ng-template #foo>\n *    <div></div>\n * </ng-template>\n *\n * @param index The index of the container in the data array\n * @param templateFn Inline template\n * @param decls The number of nodes, local refs, and pipes for this template\n * @param vars The number of bindings for this template\n * @param tagName The name of the container element, if applicable\n * @param attrsIndex Index of template attributes in the `consts` array.\n * @param localRefs Index of the local references in the `consts` array.\n * @param localRefExtractor A function which extracts local-refs values from the template.\n *        Defaults to the current element associated with the local-ref.\n *\n * @codeGenApi\n */\nexport function ɵɵtemplate(\n    index: number, templateFn: ComponentTemplate<any>|null, decls: number, vars: number,\n    tagName?: string|null, attrsIndex?: number|null, localRefsIndex?: number|null,\n    localRefExtractor?: LocalRefExtractor) {\n  const lView = getLView();\n  const tView = getTView();\n  const adjustedIndex = index + HEADER_OFFSET;\n\n  const tNode = tView.firstCreatePass ? templateFirstCreatePass(\n                                            adjustedIndex, tView, lView, templateFn, decls, vars,\n                                            tagName, attrsIndex, localRefsIndex) :\n                                        tView.data[adjustedIndex] as TContainerNode;\n  setCurrentTNode(tNode, false);\n\n  const comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n  appendChild(tView, lView, comment, tNode);\n  attachPatchData(comment, lView);\n\n  addToViewTree(lView, lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode));\n\n  if (isDirectiveHost(tNode)) {\n    createDirectivesInstances(tView, lView, tNode);\n  }\n\n  if (localRefsIndex != null) {\n    saveResolvedLocalsInData(lView, tNode, localRefExtractor);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {HEADER_OFFSET, LView, TView} from '../interfaces/view';\nimport {getContextLView} from '../state';\nimport {load} from '../util/view_utils';\n\n\n/** Store a value in the `data` at a given `index`. */\nexport function store<T>(tView: TView, lView: LView, index: number, value: T): void {\n  // We don't store any static data for local variables, so the first time\n  // we see the template, we should store as null to avoid a sparse array\n  if (index >= tView.data.length) {\n    tView.data[index] = null;\n    tView.blueprint[index] = null;\n  }\n  lView[index] = value;\n}\n\n/**\n * Retrieves a local reference from the current contextViewData.\n *\n * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n *\n * @param index The index of the local ref in contextViewData.\n *\n * @codeGenApi\n */\nexport function ɵɵreference<T>(index: number) {\n  const contextLView = getContextLView();\n  return load<T>(contextLView, HEADER_OFFSET + index);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {bindingUpdated} from '../bindings';\nimport {TNode} from '../interfaces/node';\nimport {SanitizerFn} from '../interfaces/sanitization';\nimport {LView, RENDERER, TView} from '../interfaces/view';\nimport {getLView, getSelectedTNode, getTView, nextBindingIndex} from '../state';\n\nimport {elementPropertyInternal, setInputsForProperty, storePropertyBindingMetadata} from './shared';\n\n\n/**\n * Update a property on a selected element.\n *\n * Operates on the element selected by index via the {@link select} instruction.\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n *\n * @param propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value New value to write.\n * @param sanitizer An optional function used to sanitize the value.\n * @returns This function returns itself so that it may be chained\n * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n *\n * @codeGenApi\n */\nexport function ɵɵproperty<T>(\n    propName: string, value: T, sanitizer?: SanitizerFn|null): typeof ɵɵproperty {\n  const lView = getLView();\n  const bindingIndex = nextBindingIndex();\n  if (bindingUpdated(lView, bindingIndex, value)) {\n    const tView = getTView();\n    const tNode = getSelectedTNode();\n    elementPropertyInternal(\n        tView, tNode, lView, propName, value, lView[RENDERER], sanitizer, false);\n    ngDevMode && storePropertyBindingMetadata(tView.data, tNode, propName, bindingIndex);\n  }\n  return ɵɵproperty;\n}\n\n/**\n * Given `<div style=\"...\" my-dir>` and `MyDir` with `@Input('style')` we need to write to\n * directive input.\n */\nexport function setDirectiveInputsWhichShadowsStyling(\n    tView: TView, tNode: TNode, lView: LView, value: any, isClassBased: boolean) {\n  const inputs = tNode.inputs!;\n  const property = isClassBased ? 'class' : 'style';\n  // We support both 'class' and `className` hence the fallback.\n  setInputsForProperty(tView, lView, inputs[property], property, value);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {assertDefined, assertEqual, assertIndexInRange} from '../../util/assert';\nimport {assertFirstCreatePass, assertHasParent} from '../assert';\nimport {attachPatchData} from '../context_discovery';\nimport {registerPostOrderHooks} from '../hooks';\nimport {hasClassInput, hasStyleInput, TAttributes, TElementNode, TNodeFlags, TNodeType} from '../interfaces/node';\nimport {RElement} from '../interfaces/renderer_dom';\nimport {isContentQueryHost, isDirectiveHost} from '../interfaces/type_checks';\nimport {HEADER_OFFSET, LView, RENDERER, TView} from '../interfaces/view';\nimport {assertTNodeType} from '../node_assert';\nimport {appendChild, createElementNode, writeDirectClass, writeDirectStyle} from '../node_manipulation';\nimport {decreaseElementDepthCount, getBindingIndex, getCurrentTNode, getElementDepthCount, getLView, getNamespace, getTView, increaseElementDepthCount, isCurrentTNodeParent, setCurrentTNode, setCurrentTNodeAsNotParent} from '../state';\nimport {computeStaticStyling} from '../styling/static_styling';\nimport {setUpAttributes} from '../util/attrs_utils';\nimport {getConstant} from '../util/view_utils';\n\nimport {validateElementIsKnown} from './element_validation';\nimport {setDirectiveInputsWhichShadowsStyling} from './property';\nimport {createDirectivesInstances, executeContentQueries, getOrCreateTNode, resolveDirectives, saveResolvedLocalsInData} from './shared';\n\n\nfunction elementStartFirstCreatePass(\n    index: number, tView: TView, lView: LView, native: RElement, name: string,\n    attrsIndex?: number|null, localRefsIndex?: number): TElementNode {\n  ngDevMode && assertFirstCreatePass(tView);\n  ngDevMode && ngDevMode.firstCreatePass++;\n\n  const tViewConsts = tView.consts;\n  const attrs = getConstant<TAttributes>(tViewConsts, attrsIndex);\n  const tNode = getOrCreateTNode(tView, index, TNodeType.Element, name, attrs);\n\n  const hasDirectives =\n      resolveDirectives(tView, lView, tNode, getConstant<string[]>(tViewConsts, localRefsIndex));\n  if (ngDevMode) {\n    validateElementIsKnown(native, lView, tNode.value, tView.schemas, hasDirectives);\n  }\n\n  if (tNode.attrs !== null) {\n    computeStaticStyling(tNode, tNode.attrs, false);\n  }\n\n  if (tNode.mergedAttrs !== null) {\n    computeStaticStyling(tNode, tNode.mergedAttrs, true);\n  }\n\n  if (tView.queries !== null) {\n    tView.queries.elementStart(tView, tNode);\n  }\n\n  return tNode;\n}\n\n/**\n * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n *\n * @param index Index of the element in the LView array\n * @param name Name of the DOM Node\n * @param attrsIndex Index of the element's attributes in the `consts` array.\n * @param localRefsIndex Index of the element's local references in the `consts` array.\n * @returns This function returns itself so that it may be chained.\n *\n * Attributes and localRefs are passed as an array of strings where elements with an even index\n * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n * ['id', 'warning5', 'class', 'alert']\n *\n * @codeGenApi\n */\nexport function ɵɵelementStart(\n    index: number, name: string, attrsIndex?: number|null,\n    localRefsIndex?: number): typeof ɵɵelementStart {\n  const lView = getLView();\n  const tView = getTView();\n  const adjustedIndex = HEADER_OFFSET + index;\n\n  ngDevMode &&\n      assertEqual(\n          getBindingIndex(), tView.bindingStartIndex,\n          'elements should be created before any bindings');\n  ngDevMode && assertIndexInRange(lView, adjustedIndex);\n\n  const renderer = lView[RENDERER];\n  const native = lView[adjustedIndex] = createElementNode(renderer, name, getNamespace());\n  const tNode = tView.firstCreatePass ?\n      elementStartFirstCreatePass(\n          adjustedIndex, tView, lView, native, name, attrsIndex, localRefsIndex) :\n      tView.data[adjustedIndex] as TElementNode;\n  setCurrentTNode(tNode, true);\n\n  const mergedAttrs = tNode.mergedAttrs;\n  if (mergedAttrs !== null) {\n    setUpAttributes(renderer, native, mergedAttrs);\n  }\n  const classes = tNode.classes;\n  if (classes !== null) {\n    writeDirectClass(renderer, native, classes);\n  }\n  const styles = tNode.styles;\n  if (styles !== null) {\n    writeDirectStyle(renderer, native, styles);\n  }\n\n  if ((tNode.flags & TNodeFlags.isDetached) !== TNodeFlags.isDetached) {\n    // In the i18n case, the translation may have removed this element, so only add it if it is not\n    // detached. See `TNodeType.Placeholder` and `LFrame.inI18n` for more context.\n    appendChild(tView, lView, native, tNode);\n  }\n\n  // any immediate children of a component or template container must be pre-emptively\n  // monkey-patched with the component view data so that the element can be inspected\n  // later on using any element discovery utility methods (see `element_discovery.ts`)\n  if (getElementDepthCount() === 0) {\n    attachPatchData(native, lView);\n  }\n  increaseElementDepthCount();\n\n\n  if (isDirectiveHost(tNode)) {\n    createDirectivesInstances(tView, lView, tNode);\n    executeContentQueries(tView, tNode, lView);\n  }\n  if (localRefsIndex !== null) {\n    saveResolvedLocalsInData(lView, tNode);\n  }\n  return ɵɵelementStart;\n}\n\n/**\n * Mark the end of the element.\n * @returns This function returns itself so that it may be chained.\n *\n * @codeGenApi\n */\nexport function ɵɵelementEnd(): typeof ɵɵelementEnd {\n  let currentTNode = getCurrentTNode()!;\n  ngDevMode && assertDefined(currentTNode, 'No parent node to close.');\n  if (isCurrentTNodeParent()) {\n    setCurrentTNodeAsNotParent();\n  } else {\n    ngDevMode && assertHasParent(getCurrentTNode());\n    currentTNode = currentTNode.parent!;\n    setCurrentTNode(currentTNode, false);\n  }\n\n  const tNode = currentTNode;\n  ngDevMode && assertTNodeType(tNode, TNodeType.AnyRNode);\n\n\n  decreaseElementDepthCount();\n\n  const tView = getTView();\n  if (tView.firstCreatePass) {\n    registerPostOrderHooks(tView, currentTNode);\n    if (isContentQueryHost(currentTNode)) {\n      tView.queries!.elementEnd(currentTNode);\n    }\n  }\n\n  if (tNode.classesWithoutHost != null && hasClassInput(tNode)) {\n    setDirectiveInputsWhichShadowsStyling(tView, tNode, getLView(), tNode.classesWithoutHost, true);\n  }\n\n  if (tNode.stylesWithoutHost != null && hasStyleInput(tNode)) {\n    setDirectiveInputsWhichShadowsStyling(tView, tNode, getLView(), tNode.stylesWithoutHost, false);\n  }\n  return ɵɵelementEnd;\n}\n\n/**\n * Creates an empty element using {@link elementStart} and {@link elementEnd}\n *\n * @param index Index of the element in the data array\n * @param name Name of the DOM Node\n * @param attrsIndex Index of the element's attributes in the `consts` array.\n * @param localRefsIndex Index of the element's local references in the `consts` array.\n * @returns This function returns itself so that it may be chained.\n *\n * @codeGenApi\n */\nexport function ɵɵelement(\n    index: number, name: string, attrsIndex?: number|null,\n    localRefsIndex?: number): typeof ɵɵelement {\n  ɵɵelementStart(index, name, attrsIndex, localRefsIndex);\n  ɵɵelementEnd();\n  return ɵɵelement;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {KeyValueArray} from '../../util/array_utils';\nimport {TStylingRange} from '../interfaces/styling';\nimport {TIcu} from './i18n';\nimport {CssSelector} from './projection';\nimport {RNode} from './renderer_dom';\nimport {LView, TView} from './view';\n\n\n/**\n * TNodeType corresponds to the {@link TNode} `type` property.\n *\n * NOTE: type IDs are such that we use each bit to denote a type. This is done so that we can easily\n * check if the `TNode` is of more than one type.\n *\n * `if (tNode.type === TNodeType.Text || tNode.type === TNode.Element)`\n * can be written as:\n * `if (tNode.type & (TNodeType.Text | TNodeType.Element))`\n *\n * However any given `TNode` can only be of one type.\n */\nexport const enum TNodeType {\n  /**\n   * The TNode contains information about a DOM element aka {@link RText}.\n   */\n  Text = 0b1,\n\n  /**\n   * The TNode contains information about a DOM element aka {@link RElement}.\n   */\n  Element = 0b10,\n\n  /**\n   * The TNode contains information about an {@link LContainer} for embedded views.\n   */\n  Container = 0b100,\n\n  /**\n   * The TNode contains information about an `<ng-container>` element {@link RNode}.\n   */\n  ElementContainer = 0b1000,\n\n  /**\n   * The TNode contains information about an `<ng-content>` projection\n   */\n  Projection = 0b10000,\n\n  /**\n   * The TNode contains information about an ICU comment used in `i18n`.\n   */\n  Icu = 0b100000,\n\n  /**\n   * Special node type representing a placeholder for future `TNode` at this location.\n   *\n   * I18n translation blocks are created before the element nodes which they contain. (I18n blocks\n   * can span over many elements.) Because i18n `TNode`s (representing text) are created first they\n   * often may need to point to element `TNode`s which are not yet created. In such a case we create\n   * a `Placeholder` `TNode`. This allows the i18n to structurally link the `TNode`s together\n   * without knowing any information about the future nodes which will be at that location.\n   *\n   * On `firstCreatePass` When element instruction executes it will try to create a `TNode` at that\n   * location. Seeing a `Placeholder` `TNode` already there tells the system that it should reuse\n   * existing `TNode` (rather than create a new one) and just update the missing information.\n   */\n  Placeholder = 0b1000000,\n\n  // Combined Types These should never be used for `TNode.type` only as a useful way to check\n  // if `TNode.type` is one of several choices.\n\n  // See: https://github.com/microsoft/TypeScript/issues/35875 why we can't refer to existing enum.\n  AnyRNode = 0b11,        // Text | Element,\n  AnyContainer = 0b1100,  // Container | ElementContainer, // See:\n}\n\n/**\n * Converts `TNodeType` into human readable text.\n * Make sure this matches with `TNodeType`\n */\nexport function toTNodeTypeAsString(tNodeType: TNodeType): string {\n  let text = '';\n  (tNodeType & TNodeType.Text) && (text += '|Text');\n  (tNodeType & TNodeType.Element) && (text += '|Element');\n  (tNodeType & TNodeType.Container) && (text += '|Container');\n  (tNodeType & TNodeType.ElementContainer) && (text += '|ElementContainer');\n  (tNodeType & TNodeType.Projection) && (text += '|Projection');\n  (tNodeType & TNodeType.Icu) && (text += '|IcuContainer');\n  (tNodeType & TNodeType.Placeholder) && (text += '|Placeholder');\n  return text.length > 0 ? text.substring(1) : text;\n}\n\n/**\n * Corresponds to the TNode.flags property.\n */\nexport const enum TNodeFlags {\n  /** Bit #1 - This bit is set if the node is a host for any directive (including a component) */\n  isDirectiveHost = 0x1,\n\n  /**\n   * Bit #2 - This bit is set if the node is a host for a component.\n   *\n   * Setting this bit implies that the `isDirectiveHost` bit is set as well.\n   * */\n  isComponentHost = 0x2,\n\n  /** Bit #3 - This bit is set if the node has been projected */\n  isProjected = 0x4,\n\n  /** Bit #4 - This bit is set if any directive on this node has content queries */\n  hasContentQuery = 0x8,\n\n  /** Bit #5 - This bit is set if the node has any \"class\" inputs */\n  hasClassInput = 0x10,\n\n  /** Bit #6 - This bit is set if the node has any \"style\" inputs */\n  hasStyleInput = 0x20,\n\n  /** Bit #7 This bit is set if the node has been detached by i18n */\n  isDetached = 0x40,\n\n  /**\n   * Bit #8 - This bit is set if the node has directives with host bindings.\n   *\n   * This flags allows us to guard host-binding logic and invoke it only on nodes\n   * that actually have directives with host bindings.\n   */\n  hasHostBindings = 0x80,\n}\n\n/**\n * Corresponds to the TNode.providerIndexes property.\n */\nexport const enum TNodeProviderIndexes {\n  /** The index of the first provider on this node is encoded on the least significant bits. */\n  ProvidersStartIndexMask = 0b00000000000011111111111111111111,\n\n  /**\n   * The count of view providers from the component on this node is\n   * encoded on the 20 most significant bits.\n   */\n  CptViewProvidersCountShift = 20,\n  CptViewProvidersCountShifter = 0b00000000000100000000000000000000,\n}\n\n/**\n * A set of marker values to be used in the attributes arrays. These markers indicate that some\n * items are not regular attributes and the processing should be adapted accordingly.\n */\nexport const enum AttributeMarker {\n  /**\n   * An implicit marker which indicates that the value in the array are of `attributeKey`,\n   * `attributeValue` format.\n   *\n   * NOTE: This is implicit as it is the type when no marker is present in array. We indicate that\n   * it should not be present at runtime by the negative number.\n   */\n  ImplicitAttributes = -1,\n\n  /**\n   * Marker indicates that the following 3 values in the attributes array are:\n   * namespaceUri, attributeName, attributeValue\n   * in that order.\n   */\n  NamespaceURI = 0,\n\n  /**\n   * Signals class declaration.\n   *\n   * Each value following `Classes` designates a class name to include on the element.\n   * ## Example:\n   *\n   * Given:\n   * ```\n   * <div class=\"foo bar baz\">...<d/vi>\n   * ```\n   *\n   * the generated code is:\n   * ```\n   * var _c1 = [AttributeMarker.Classes, 'foo', 'bar', 'baz'];\n   * ```\n   */\n  Classes = 1,\n\n  /**\n   * Signals style declaration.\n   *\n   * Each pair of values following `Styles` designates a style name and value to include on the\n   * element.\n   * ## Example:\n   *\n   * Given:\n   * ```\n   * <div style=\"width:100px; height:200px; color:red\">...</div>\n   * ```\n   *\n   * the generated code is:\n   * ```\n   * var _c1 = [AttributeMarker.Styles, 'width', '100px', 'height'. '200px', 'color', 'red'];\n   * ```\n   */\n  Styles = 2,\n\n  /**\n   * Signals that the following attribute names were extracted from input or output bindings.\n   *\n   * For example, given the following HTML:\n   *\n   * ```\n   * <div moo=\"car\" [foo]=\"exp\" (bar)=\"doSth()\">\n   * ```\n   *\n   * the generated code is:\n   *\n   * ```\n   * var _c1 = ['moo', 'car', AttributeMarker.Bindings, 'foo', 'bar'];\n   * ```\n   */\n  Bindings = 3,\n\n  /**\n   * Signals that the following attribute names were hoisted from an inline-template declaration.\n   *\n   * For example, given the following HTML:\n   *\n   * ```\n   * <div *ngFor=\"let value of values; trackBy:trackBy\" dirA [dirB]=\"value\">\n   * ```\n   *\n   * the generated code for the `template()` instruction would include:\n   *\n   * ```\n   * ['dirA', '', AttributeMarker.Bindings, 'dirB', AttributeMarker.Template, 'ngFor', 'ngForOf',\n   * 'ngForTrackBy', 'let-value']\n   * ```\n   *\n   * while the generated code for the `element()` instruction inside the template function would\n   * include:\n   *\n   * ```\n   * ['dirA', '', AttributeMarker.Bindings, 'dirB']\n   * ```\n   */\n  Template = 4,\n\n  /**\n   * Signals that the following attribute is `ngProjectAs` and its value is a parsed\n   * `CssSelector`.\n   *\n   * For example, given the following HTML:\n   *\n   * ```\n   * <h1 attr=\"value\" ngProjectAs=\"[title]\">\n   * ```\n   *\n   * the generated code for the `element()` instruction would include:\n   *\n   * ```\n   * ['attr', 'value', AttributeMarker.ProjectAs, ['', 'title', '']]\n   * ```\n   */\n  ProjectAs = 5,\n\n  /**\n   * Signals that the following attribute will be translated by runtime i18n\n   *\n   * For example, given the following HTML:\n   *\n   * ```\n   * <div moo=\"car\" foo=\"value\" i18n-foo [bar]=\"binding\" i18n-bar>\n   * ```\n   *\n   * the generated code is:\n   *\n   * ```\n   * var _c1 = ['moo', 'car', AttributeMarker.I18n, 'foo', 'bar'];\n   */\n  I18n = 6,\n}\n\n/**\n * A combination of:\n * - Attribute names and values.\n * - Special markers acting as flags to alter attributes processing.\n * - Parsed ngProjectAs selectors.\n */\nexport type TAttributes = (string|AttributeMarker|CssSelector)[];\n\n/**\n * Constants that are associated with a view. Includes:\n * - Attribute arrays.\n * - Local definition arrays.\n * - Translated messages (i18n).\n */\nexport type TConstants = (TAttributes|string)[];\n\n/**\n * Factory function that returns an array of consts. Consts can be represented as a function in\n * case any additional statements are required to define consts in the list. An example is i18n\n * where additional i18n calls are generated, which should be executed when consts are requested\n * for the first time.\n */\nexport type TConstantsFactory = () => TConstants;\n\n/**\n * TConstants type that describes how the `consts` field is generated on ComponentDef: it can be\n * either an array or a factory function that returns that array.\n */\nexport type TConstantsOrFactory = TConstants|TConstantsFactory;\n\n/**\n * Binding data (flyweight) for a particular node that is shared between all templates\n * of a specific type.\n *\n * If a property is:\n *    - PropertyAliases: that property's data was generated and this is it\n *    - Null: that property's data was already generated and nothing was found.\n *    - Undefined: that property's data has not yet been generated\n *\n * see: https://en.wikipedia.org/wiki/Flyweight_pattern for more on the Flyweight pattern\n */\nexport interface TNode {\n  /** The type of the TNode. See TNodeType. */\n  type: TNodeType;\n\n  /**\n   * Index of the TNode in TView.data and corresponding native element in LView.\n   *\n   * This is necessary to get from any TNode to its corresponding native element when\n   * traversing the node tree.\n   *\n   * If index is -1, this is a dynamically created container node or embedded view node.\n   */\n  index: number;\n\n  /**\n   * Insert before existing DOM node index.\n   *\n   * When DOM nodes are being inserted, normally they are being appended as they are created.\n   * Under i18n case, the translated text nodes are created ahead of time as part of the\n   * `ɵɵi18nStart` instruction which means that this `TNode` can't just be appended and instead\n   * needs to be inserted using `insertBeforeIndex` semantics.\n   *\n   * Additionally sometimes it is necessary to insert new text nodes as a child of this `TNode`. In\n   * such a case the value stores an array of text nodes to insert.\n   *\n   * Example:\n   * ```\n   * <div i18n>\n   *   Hello <span>World</span>!\n   * </div>\n   * ```\n   * In the above example the `ɵɵi18nStart` instruction can create `Hello `, `World` and `!` text\n   * nodes. It can also insert `Hello ` and `!` text node as a child of `<div>`, but it can't\n   * insert `World` because the `<span>` node has not yet been created. In such a case the\n   * `<span>` `TNode` will have an array which will direct the `<span>` to not only insert\n   * itself in front of `!` but also to insert the `World` (created by `ɵɵi18nStart`) into\n   * `<span>` itself.\n   *\n   * Pseudo code:\n   * ```\n   *   if (insertBeforeIndex === null) {\n   *     // append as normal\n   *   } else if (Array.isArray(insertBeforeIndex)) {\n   *     // First insert current `TNode` at correct location\n   *     const currentNode = lView[this.index];\n   *     parentNode.insertBefore(currentNode, lView[this.insertBeforeIndex[0]]);\n   *     // Now append all of the children\n   *     for(let i=1; i<this.insertBeforeIndex; i++) {\n   *       currentNode.appendChild(lView[this.insertBeforeIndex[i]]);\n   *     }\n   *   } else {\n   *     parentNode.insertBefore(lView[this.index], lView[this.insertBeforeIndex])\n   *   }\n   * ```\n   * - null: Append as normal using `parentNode.appendChild`\n   * - `number`: Append using\n   *      `parentNode.insertBefore(lView[this.index], lView[this.insertBeforeIndex])`\n   *\n   * *Initialization*\n   *\n   * Because `ɵɵi18nStart` executes before nodes are created, on `TView.firstCreatePass` it is not\n   * possible for `ɵɵi18nStart` to set the `insertBeforeIndex` value as the corresponding `TNode`\n   * has not yet been created. For this reason the `ɵɵi18nStart` creates a `TNodeType.Placeholder`\n   * `TNode` at that location. See `TNodeType.Placeholder` for more information.\n   */\n  insertBeforeIndex: InsertBeforeIndex;\n\n  /**\n   * The index of the closest injector in this node's LView.\n   *\n   * If the index === -1, there is no injector on this node or any ancestor node in this view.\n   *\n   * If the index !== -1, it is the index of this node's injector OR the index of a parent\n   * injector in the same view. We pass the parent injector index down the node tree of a view so\n   * it's possible to find the parent injector without walking a potentially deep node tree.\n   * Injector indices are not set across view boundaries because there could be multiple component\n   * hosts.\n   *\n   * If tNode.injectorIndex === tNode.parent.injectorIndex, then the index belongs to a parent\n   * injector.\n   */\n  injectorIndex: number;\n\n  /**\n   * Stores starting index of the directives.\n   *\n   * NOTE: The first directive is always component (if present).\n   */\n  directiveStart: number;\n\n  /**\n   * Stores final exclusive index of the directives.\n   *\n   * The area right behind the `directiveStart-directiveEnd` range is used to allocate the\n   * `HostBindingFunction` `vars` (or null if no bindings.) Therefore `directiveEnd` is used to set\n   * `LFrame.bindingRootIndex` before `HostBindingFunction` is executed.\n   */\n  directiveEnd: number;\n\n  /**\n   * Stores the last directive which had a styling instruction.\n   *\n   * Initial value of this is `-1` which means that no `hostBindings` styling instruction has\n   * executed. As `hostBindings` instructions execute they set the value to the index of the\n   * `DirectiveDef` which contained the last `hostBindings` styling instruction.\n   *\n   * Valid values are:\n   * - `-1` No `hostBindings` instruction has executed.\n   * - `directiveStart <= directiveStylingLast < directiveEnd`: Points to the `DirectiveDef` of\n   * the last styling instruction which executed in the `hostBindings`.\n   *\n   * This data is needed so that styling instructions know which static styling data needs to be\n   * collected from the `DirectiveDef.hostAttrs`. A styling instruction needs to collect all data\n   * since last styling instruction.\n   */\n  directiveStylingLast: number;\n\n  /**\n   * Stores indexes of property bindings. This field is only set in the ngDevMode and holds\n   * indexes of property bindings so TestBed can get bound property metadata for a given node.\n   */\n  propertyBindings: number[]|null;\n\n  /**\n   * Stores if Node isComponent, isProjected, hasContentQuery, hasClassInput and hasStyleInput\n   * etc.\n   */\n  flags: TNodeFlags;\n\n  /**\n   * This number stores two values using its bits:\n   *\n   * - the index of the first provider on that node (first 16 bits)\n   * - the count of view providers from the component on this node (last 16 bits)\n   */\n  // TODO(misko): break this into actual vars.\n  providerIndexes: TNodeProviderIndexes;\n\n  /**\n   * The value name associated with this node.\n   * if type:\n   *   `TNodeType.Text`: text value\n   *   `TNodeType.Element`: tag name\n   *   `TNodeType.ICUContainer`: `TIcu`\n   */\n  value: any;\n\n  /**\n   * Attributes associated with an element. We need to store attributes to support various\n   * use-cases (attribute injection, content projection with selectors, directives matching).\n   * Attributes are stored statically because reading them from the DOM would be way too slow for\n   * content projection and queries.\n   *\n   * Since attrs will always be calculated first, they will never need to be marked undefined by\n   * other instructions.\n   *\n   * For regular attributes a name of an attribute and its value alternate in the array.\n   * e.g. ['role', 'checkbox']\n   * This array can contain flags that will indicate \"special attributes\" (attributes with\n   * namespaces, attributes extracted from bindings and outputs).\n   */\n  attrs: TAttributes|null;\n\n  /**\n   * Same as `TNode.attrs` but contains merged data across all directive host bindings.\n   *\n   * We need to keep `attrs` as unmerged so that it can be used for attribute selectors.\n   * We merge attrs here so that it can be used in a performant way for initial rendering.\n   *\n   * The `attrs` are merged in first pass in following order:\n   * - Component's `hostAttrs`\n   * - Directives' `hostAttrs`\n   * - Template `TNode.attrs` associated with the current `TNode`.\n   */\n  mergedAttrs: TAttributes|null;\n\n  /**\n   * A set of local names under which a given element is exported in a template and\n   * visible to queries. An entry in this array can be created for different reasons:\n   * - an element itself is referenced, ex.: `<div #foo>`\n   * - a component is referenced, ex.: `<my-cmpt #foo>`\n   * - a directive is referenced, ex.: `<my-cmpt #foo=\"directiveExportAs\">`.\n   *\n   * A given element might have different local names and those names can be associated\n   * with a directive. We store local names at even indexes while odd indexes are reserved\n   * for directive index in a view (or `-1` if there is no associated directive).\n   *\n   * Some examples:\n   * - `<div #foo>` => `[\"foo\", -1]`\n   * - `<my-cmpt #foo>` => `[\"foo\", myCmptIdx]`\n   * - `<my-cmpt #foo #bar=\"directiveExportAs\">` => `[\"foo\", myCmptIdx, \"bar\", directiveIdx]`\n   * - `<div #foo #bar=\"directiveExportAs\">` => `[\"foo\", -1, \"bar\", directiveIdx]`\n   */\n  localNames: (string|number)[]|null;\n\n  /** Information about input properties that need to be set once from attribute data. */\n  initialInputs: InitialInputData|null|undefined;\n\n  /**\n   * Input data for all directives on this node. `null` means that there are no directives with\n   * inputs on this node.\n   */\n  inputs: PropertyAliases|null;\n\n  /**\n   * Output data for all directives on this node. `null` means that there are no directives with\n   * outputs on this node.\n   */\n  outputs: PropertyAliases|null;\n\n  /**\n   * The TView or TViews attached to this node.\n   *\n   * If this TNode corresponds to an LContainer with inline views, the container will\n   * need to store separate static data for each of its view blocks (TView[]). Otherwise,\n   * nodes in inline views with the same index as nodes in their parent views will overwrite\n   * each other, as they are in the same template.\n   *\n   * Each index in this array corresponds to the static data for a certain\n   * view. So if you had V(0) and V(1) in a container, you might have:\n   *\n   * [\n   *   [{tagName: 'div', attrs: ...}, null],     // V(0) TView\n   *   [{tagName: 'button', attrs ...}, null]    // V(1) TView\n   *\n   * If this TNode corresponds to an LContainer with a template (e.g. structural\n   * directive), the template's TView will be stored here.\n   *\n   * If this TNode corresponds to an element, tViews will be null .\n   */\n  tViews: TView|TView[]|null;\n\n  /**\n   * The next sibling node. Necessary so we can propagate through the root nodes of a view\n   * to insert them or remove them from the DOM.\n   */\n  next: TNode|null;\n\n  /**\n   * The next projected sibling. Since in Angular content projection works on the node-by-node\n   * basis the act of projecting nodes might change nodes relationship at the insertion point\n   * (target view). At the same time we need to keep initial relationship between nodes as\n   * expressed in content view.\n   */\n  projectionNext: TNode|null;\n\n  /**\n   * First child of the current node.\n   *\n   * For component nodes, the child will always be a ContentChild (in same view).\n   * For embedded view nodes, the child will be in their child view.\n   */\n  child: TNode|null;\n\n  /**\n   * Parent node (in the same view only).\n   *\n   * We need a reference to a node's parent so we can append the node to its parent's native\n   * element at the appropriate time.\n   *\n   * If the parent would be in a different view (e.g. component host), this property will be null.\n   * It's important that we don't try to cross component boundaries when retrieving the parent\n   * because the parent will change (e.g. index, attrs) depending on where the component was\n   * used (and thus shouldn't be stored on TNode). In these cases, we retrieve the parent through\n   * LView.node instead (which will be instance-specific).\n   *\n   * If this is an inline view node (V), the parent will be its container.\n   */\n  parent: TElementNode|TContainerNode|null;\n\n  /**\n   * List of projected TNodes for a given component host element OR index into the said nodes.\n   *\n   * For easier discussion assume this example:\n   * `<parent>`'s view definition:\n   * ```\n   * <child id=\"c1\">content1</child>\n   * <child id=\"c2\"><span>content2</span></child>\n   * ```\n   * `<child>`'s view definition:\n   * ```\n   * <ng-content id=\"cont1\"></ng-content>\n   * ```\n   *\n   * If `Array.isArray(projection)` then `TNode` is a host element:\n   * - `projection` stores the content nodes which are to be projected.\n   *    - The nodes represent categories defined by the selector: For example:\n   *      `<ng-content/><ng-content select=\"abc\"/>` would represent the heads for `<ng-content/>`\n   *      and `<ng-content select=\"abc\"/>` respectively.\n   *    - The nodes we store in `projection` are heads only, we used `.next` to get their\n   *      siblings.\n   *    - The nodes `.next` is sorted/rewritten as part of the projection setup.\n   *    - `projection` size is equal to the number of projections `<ng-content>`. The size of\n   *      `c1` will be `1` because `<child>` has only one `<ng-content>`.\n   * - we store `projection` with the host (`c1`, `c2`) rather than the `<ng-content>` (`cont1`)\n   *   because the same component (`<child>`) can be used in multiple locations (`c1`, `c2`) and\n   * as a result have different set of nodes to project.\n   * - without `projection` it would be difficult to efficiently traverse nodes to be projected.\n   *\n   * If `typeof projection == 'number'` then `TNode` is a `<ng-content>` element:\n   * - `projection` is an index of the host's `projection`Nodes.\n   *   - This would return the first head node to project:\n   *     `getHost(currentTNode).projection[currentTNode.projection]`.\n   * - When projecting nodes the parent node retrieved may be a `<ng-content>` node, in which case\n   *   the process is recursive in nature.\n   *\n   * If `projection` is of type `RNode[][]` than we have a collection of native nodes passed as\n   * projectable nodes during dynamic component creation.\n   */\n  projection: (TNode|RNode[])[]|number|null;\n\n  /**\n   * A collection of all `style` static values for an element (including from host).\n   *\n   * This field will be populated if and when:\n   *\n   * - There are one or more initial `style`s on an element (e.g. `<div style=\"width:200px;\">`)\n   * - There are one or more initial `style`s on a directive/component host\n   *   (e.g. `@Directive({host: {style: \"width:200px;\" } }`)\n   */\n  styles: string|null;\n\n\n  /**\n   * A collection of all `style` static values for an element excluding host sources.\n   *\n   * Populated when there are one or more initial `style`s on an element\n   * (e.g. `<div style=\"width:200px;\">`)\n   * Must be stored separately from `tNode.styles` to facilitate setting directive\n   * inputs that shadow the `style` property. If we used `tNode.styles` as is for shadowed inputs,\n   * we would feed host styles back into directives as \"inputs\". If we used `tNode.attrs`, we\n   * would have to concatenate the attributes on every template pass. Instead, we process once on\n   * first create pass and store here.\n   */\n  stylesWithoutHost: string|null;\n\n  /**\n   * A `KeyValueArray` version of residual `styles`.\n   *\n   * When there are styling instructions than each instruction stores the static styling\n   * which is of lower priority than itself. This means that there may be a higher priority\n   * styling than the instruction.\n   *\n   * Imagine:\n   * ```\n   * <div style=\"color: highest;\" my-dir>\n   *\n   * @Directive({\n   *   host: {\n   *     style: 'color: lowest; ',\n   *     '[styles.color]': 'exp' // ɵɵstyleProp('color', ctx.exp);\n   *   }\n   * })\n   * ```\n   *\n   * In the above case:\n   * - `color: lowest` is stored with `ɵɵstyleProp('color', ctx.exp);` instruction\n   * -  `color: highest` is the residual and is stored here.\n   *\n   * - `undefined': not initialized.\n   * - `null`: initialized but `styles` is `null`\n   * - `KeyValueArray`: parsed version of `styles`.\n   */\n  residualStyles: KeyValueArray<any>|undefined|null;\n\n  /**\n   * A collection of all class static values for an element (including from host).\n   *\n   * This field will be populated if and when:\n   *\n   * - There are one or more initial classes on an element (e.g. `<div class=\"one two three\">`)\n   * - There are one or more initial classes on an directive/component host\n   *   (e.g. `@Directive({host: {class: \"SOME_CLASS\" } }`)\n   */\n  classes: string|null;\n\n  /**\n   * A collection of all class static values for an element excluding host sources.\n   *\n   * Populated when there are one or more initial classes on an element\n   * (e.g. `<div class=\"SOME_CLASS\">`)\n   * Must be stored separately from `tNode.classes` to facilitate setting directive\n   * inputs that shadow the `class` property. If we used `tNode.classes` as is for shadowed\n   * inputs, we would feed host classes back into directives as \"inputs\". If we used\n   * `tNode.attrs`, we would have to concatenate the attributes on every template pass. Instead,\n   * we process once on first create pass and store here.\n   */\n  classesWithoutHost: string|null;\n\n  /**\n   * A `KeyValueArray` version of residual `classes`.\n   *\n   * Same as `TNode.residualStyles` but for classes.\n   *\n   * - `undefined': not initialized.\n   * - `null`: initialized but `classes` is `null`\n   * - `KeyValueArray`: parsed version of `classes`.\n   */\n  residualClasses: KeyValueArray<any>|undefined|null;\n\n  /**\n   * Stores the head/tail index of the class bindings.\n   *\n   * - If no bindings, the head and tail will both be 0.\n   * - If there are template bindings, stores the head/tail of the class bindings in the template.\n   * - If no template bindings but there are host bindings, the head value will point to the last\n   *   host binding for \"class\" (not the head of the linked list), tail will be 0.\n   *\n   * See: `style_binding_list.ts` for details.\n   *\n   * This is used by `insertTStylingBinding` to know where the next styling binding should be\n   * inserted so that they can be sorted in priority order.\n   */\n  classBindings: TStylingRange;\n\n  /**\n   * Stores the head/tail index of the class bindings.\n   *\n   * - If no bindings, the head and tail will both be 0.\n   * - If there are template bindings, stores the head/tail of the style bindings in the template.\n   * - If no template bindings but there are host bindings, the head value will point to the last\n   *   host binding for \"style\" (not the head of the linked list), tail will be 0.\n   *\n   * See: `style_binding_list.ts` for details.\n   *\n   * This is used by `insertTStylingBinding` to know where the next styling binding should be\n   * inserted so that they can be sorted in priority order.\n   */\n  styleBindings: TStylingRange;\n}\n\n/**\n * See `TNode.insertBeforeIndex`\n */\nexport type InsertBeforeIndex = null|number|number[];\n\n/** Static data for an element  */\nexport interface TElementNode extends TNode {\n  /** Index in the data[] array */\n  index: number;\n  child: TElementNode|TTextNode|TElementContainerNode|TContainerNode|TProjectionNode|null;\n  /**\n   * Element nodes will have parents unless they are the first node of a component or\n   * embedded view (which means their parent is in a different view and must be\n   * retrieved using viewData[HOST_NODE]).\n   */\n  parent: TElementNode|TElementContainerNode|null;\n  tViews: null;\n\n  /**\n   * If this is a component TNode with projection, this will be an array of projected\n   * TNodes or native nodes (see TNode.projection for more info). If it's a regular element node\n   * or a component without projection, it will be null.\n   */\n  projection: (TNode|RNode[])[]|null;\n\n  /**\n   * Stores TagName\n   */\n  value: string;\n}\n\n/** Static data for a text node */\nexport interface TTextNode extends TNode {\n  /** Index in the data[] array */\n  index: number;\n  child: null;\n  /**\n   * Text nodes will have parents unless they are the first node of a component or\n   * embedded view (which means their parent is in a different view and must be\n   * retrieved using LView.node).\n   */\n  parent: TElementNode|TElementContainerNode|null;\n  tViews: null;\n  projection: null;\n}\n\n/** Static data for an LContainer */\nexport interface TContainerNode extends TNode {\n  /**\n   * Index in the data[] array.\n   *\n   * If it's -1, this is a dynamically created container node that isn't stored in\n   * data[] (e.g. when you inject ViewContainerRef) .\n   */\n  index: number;\n  child: null;\n\n  /**\n   * Container nodes will have parents unless:\n   *\n   * - They are the first node of a component or embedded view\n   * - They are dynamically created\n   */\n  parent: TElementNode|TElementContainerNode|null;\n  tViews: TView|TView[]|null;\n  projection: null;\n  value: null;\n}\n\n/** Static data for an <ng-container> */\nexport interface TElementContainerNode extends TNode {\n  /** Index in the LView[] array. */\n  index: number;\n  child: TElementNode|TTextNode|TContainerNode|TElementContainerNode|TProjectionNode|null;\n  parent: TElementNode|TElementContainerNode|null;\n  tViews: null;\n  projection: null;\n}\n\n/** Static data for an ICU expression */\nexport interface TIcuContainerNode extends TNode {\n  /** Index in the LView[] array. */\n  index: number;\n  child: null;\n  parent: TElementNode|TElementContainerNode|null;\n  tViews: null;\n  projection: null;\n  value: TIcu;\n}\n\n/** Static data for an LProjectionNode  */\nexport interface TProjectionNode extends TNode {\n  /** Index in the data[] array */\n  child: null;\n  /**\n   * Projection nodes will have parents unless they are the first node of a component\n   * or embedded view (which means their parent is in a different view and must be\n   * retrieved using LView.node).\n   */\n  parent: TElementNode|TElementContainerNode|null;\n  tViews: null;\n\n  /** Index of the projection node. (See TNode.projection for more info.) */\n  projection: number;\n  value: null;\n}\n\n/**\n * A union type representing all TNode types that can host a directive.\n */\nexport type TDirectiveHostNode = TElementNode|TContainerNode|TElementContainerNode;\n\n/**\n * This mapping is necessary so we can set input properties and output listeners\n * properly at runtime when property names are minified or aliased.\n *\n * Key: unminified / public input or output name\n * Value: array containing minified / internal name and related directive index\n *\n * The value must be an array to support inputs and outputs with the same name\n * on the same node.\n */\nexport type PropertyAliases = {\n  // This uses an object map because using the Map type would be too slow\n  [key: string]: PropertyAliasValue\n};\n\n/**\n * Store the runtime input or output names for all the directives.\n *\n * i+0: directive instance index\n * i+1: privateName\n *\n * e.g. [0, 'change-minified']\n */\nexport type PropertyAliasValue = (number|string)[];\n\n/**\n * This array contains information about input properties that\n * need to be set once from attribute data. It's ordered by\n * directive index (relative to element) so it's simple to\n * look up a specific directive's initial input data.\n *\n * Within each sub-array:\n *\n * i+0: attribute name\n * i+1: minified/internal input name\n * i+2: initial value\n *\n * If a directive on a node does not have any input properties\n * that should be set from attributes, its index is set to null\n * to avoid a sparse array.\n *\n * e.g. [null, ['role-min', 'minified-input', 'button']]\n */\nexport type InitialInputData = (InitialInputs|null)[];\n\n/**\n * Used by InitialInputData to store input properties\n * that should be set once from attributes.\n *\n * i+0: attribute name\n * i+1: minified/internal input name\n * i+2: initial value\n *\n * e.g. ['role-min', 'minified-input', 'button']\n */\nexport type InitialInputs = string[];\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nexport const unusedValueExportToPlacateAjd = 1;\n\n/**\n * Type representing a set of TNodes that can have local refs (`#foo`) placed on them.\n */\nexport type TNodeWithLocalRefs = TContainerNode|TElementNode|TElementContainerNode;\n\n/**\n * Type for a function that extracts a value for a local refs.\n * Example:\n * - `<div #nativeDivEl>` - `nativeDivEl` should point to the native `<div>` element;\n * - `<ng-template #tplRef>` - `tplRef` should point to the `TemplateRef` instance;\n */\nexport type LocalRefExtractor = (tNode: TNodeWithLocalRefs, currentView: LView) => any;\n\n/**\n * Returns `true` if the `TNode` has a directive which has `@Input()` for `class` binding.\n *\n * ```\n * <div my-dir [class]=\"exp\"></div>\n * ```\n * and\n * ```\n * @Directive({\n * })\n * class MyDirective {\n *   @Input()\n *   class: string;\n * }\n * ```\n *\n * In the above case it is necessary to write the reconciled styling information into the\n * directive's input.\n *\n * @param tNode\n */\nexport function hasClassInput(tNode: TNode) {\n  return (tNode.flags & TNodeFlags.hasClassInput) !== 0;\n}\n\n/**\n * Returns `true` if the `TNode` has a directive which has `@Input()` for `style` binding.\n *\n * ```\n * <div my-dir [style]=\"exp\"></div>\n * ```\n * and\n * ```\n * @Directive({\n * })\n * class MyDirective {\n *   @Input()\n *   class: string;\n * }\n * ```\n *\n * In the above case it is necessary to write the reconciled styling information into the\n * directive's input.\n *\n * @param tNode\n */\nexport function hasStyleInput(tNode: TNode) {\n  return (tNode.flags & TNodeFlags.hasStyleInput) !== 0;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {assertEqual, assertIndexInRange} from '../../util/assert';\nimport {assertHasParent} from '../assert';\nimport {attachPatchData} from '../context_discovery';\nimport {registerPostOrderHooks} from '../hooks';\nimport {TAttributes, TElementContainerNode, TNodeType} from '../interfaces/node';\nimport {isContentQueryHost, isDirectiveHost} from '../interfaces/type_checks';\nimport {HEADER_OFFSET, LView, RENDERER, TView} from '../interfaces/view';\nimport {assertTNodeType} from '../node_assert';\nimport {appendChild} from '../node_manipulation';\nimport {getBindingIndex, getCurrentTNode, getLView, getTView, isCurrentTNodeParent, setCurrentTNode, setCurrentTNodeAsNotParent} from '../state';\nimport {computeStaticStyling} from '../styling/static_styling';\nimport {getConstant} from '../util/view_utils';\n\nimport {createDirectivesInstances, executeContentQueries, getOrCreateTNode, resolveDirectives, saveResolvedLocalsInData} from './shared';\n\nfunction elementContainerStartFirstCreatePass(\n    index: number, tView: TView, lView: LView, attrsIndex?: number|null,\n    localRefsIndex?: number): TElementContainerNode {\n  ngDevMode && ngDevMode.firstCreatePass++;\n\n  const tViewConsts = tView.consts;\n  const attrs = getConstant<TAttributes>(tViewConsts, attrsIndex);\n  const tNode = getOrCreateTNode(tView, index, TNodeType.ElementContainer, 'ng-container', attrs);\n\n  // While ng-container doesn't necessarily support styling, we use the style context to identify\n  // and execute directives on the ng-container.\n  if (attrs !== null) {\n    computeStaticStyling(tNode, attrs, true);\n  }\n\n  const localRefs = getConstant<string[]>(tViewConsts, localRefsIndex);\n  resolveDirectives(tView, lView, tNode, localRefs);\n\n  if (tView.queries !== null) {\n    tView.queries.elementStart(tView, tNode);\n  }\n\n  return tNode;\n}\n\n/**\n * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n * The instruction must later be followed by `elementContainerEnd()` call.\n *\n * @param index Index of the element in the LView array\n * @param attrsIndex Index of the container attributes in the `consts` array.\n * @param localRefsIndex Index of the container's local references in the `consts` array.\n * @returns This function returns itself so that it may be chained.\n *\n * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n * matching purposes and setting initial inputs of directives.\n *\n * @codeGenApi\n */\nexport function ɵɵelementContainerStart(\n    index: number, attrsIndex?: number|null,\n    localRefsIndex?: number): typeof ɵɵelementContainerStart {\n  const lView = getLView();\n  const tView = getTView();\n  const adjustedIndex = index + HEADER_OFFSET;\n\n  ngDevMode && assertIndexInRange(lView, adjustedIndex);\n  ngDevMode &&\n      assertEqual(\n          getBindingIndex(), tView.bindingStartIndex,\n          'element containers should be created before any bindings');\n\n  const tNode = tView.firstCreatePass ?\n      elementContainerStartFirstCreatePass(\n          adjustedIndex, tView, lView, attrsIndex, localRefsIndex) :\n      tView.data[adjustedIndex] as TElementContainerNode;\n  setCurrentTNode(tNode, true);\n\n  ngDevMode && ngDevMode.rendererCreateComment++;\n  const native = lView[adjustedIndex] =\n      lView[RENDERER].createComment(ngDevMode ? 'ng-container' : '');\n  appendChild(tView, lView, native, tNode);\n  attachPatchData(native, lView);\n\n  if (isDirectiveHost(tNode)) {\n    createDirectivesInstances(tView, lView, tNode);\n    executeContentQueries(tView, tNode, lView);\n  }\n\n  if (localRefsIndex != null) {\n    saveResolvedLocalsInData(lView, tNode);\n  }\n\n  return ɵɵelementContainerStart;\n}\n\n/**\n * Mark the end of the <ng-container>.\n * @returns This function returns itself so that it may be chained.\n *\n * @codeGenApi\n */\nexport function ɵɵelementContainerEnd(): typeof ɵɵelementContainerEnd {\n  let currentTNode = getCurrentTNode()!;\n  const tView = getTView();\n  if (isCurrentTNodeParent()) {\n    setCurrentTNodeAsNotParent();\n  } else {\n    ngDevMode && assertHasParent(currentTNode);\n    currentTNode = currentTNode.parent!;\n    setCurrentTNode(currentTNode, false);\n  }\n\n  ngDevMode && assertTNodeType(currentTNode, TNodeType.ElementContainer);\n\n  if (tView.firstCreatePass) {\n    registerPostOrderHooks(tView, currentTNode);\n    if (isContentQueryHost(currentTNode)) {\n      tView.queries!.elementEnd(currentTNode);\n    }\n  }\n  return ɵɵelementContainerEnd;\n}\n\n/**\n * Creates an empty logical container using {@link elementContainerStart}\n * and {@link elementContainerEnd}\n *\n * @param index Index of the element in the LView array\n * @param attrsIndex Index of the container attributes in the `consts` array.\n * @param localRefsIndex Index of the container's local references in the `consts` array.\n * @returns This function returns itself so that it may be chained.\n *\n * @codeGenApi\n */\nexport function ɵɵelementContainer(\n    index: number, attrsIndex?: number|null, localRefsIndex?: number): typeof ɵɵelementContainer {\n  ɵɵelementContainerStart(index, attrsIndex, localRefsIndex);\n  ɵɵelementContainerEnd();\n  return ɵɵelementContainer;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {OpaqueViewState} from '../interfaces/view';\nimport {getLView} from '../state';\n\n/**\n * Returns the current OpaqueViewState instance.\n *\n * Used in conjunction with the restoreView() instruction to save a snapshot\n * of the current view and restore it when listeners are invoked. This allows\n * walking the declaration view tree in listeners to get vars from parent views.\n *\n * @codeGenApi\n */\nexport function ɵɵgetCurrentView(): OpaqueViewState {\n  return getLView() as any as OpaqueViewState;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable, Subscribable} from 'rxjs';\n\n/**\n * Determine if the argument is shaped like a Promise\n */\nexport function isPromise<T = any>(obj: any): obj is Promise<T> {\n  // allow any Promise/A+ compliant thenable.\n  // It's up to the caller to ensure that obj.then conforms to the spec\n  return !!obj && typeof obj.then === 'function';\n}\n\n/**\n * Determine if the argument is a Subscribable\n */\nexport function isSubscribable(obj: any|Subscribable<any>): obj is Subscribable<any> {\n  return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * Determine if the argument is an Observable\n *\n * Strictly this tests that the `obj` is `Subscribable`, since `Observable`\n * types need additional methods, such as `lift()`. But it is adequate for our\n * needs since within the Angular framework code we only ever need to use the\n * `subscribe()` method, and RxJS has mechanisms to wrap `Subscribable` objects\n * into `Observable` as needed.\n */\nexport const isObservable =\n    isSubscribable as ((obj: any|Observable<any>) => obj is Observable<any>);\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {assertIndexInRange} from '../../util/assert';\nimport {isObservable} from '../../util/lang';\nimport {PropertyAliasValue, TNode, TNodeFlags, TNodeType} from '../interfaces/node';\nimport {GlobalTargetResolver, Renderer} from '../interfaces/renderer';\nimport {RElement} from '../interfaces/renderer_dom';\nimport {isDirectiveHost} from '../interfaces/type_checks';\nimport {CLEANUP, CONTEXT, LView, RENDERER, TView} from '../interfaces/view';\nimport {assertTNodeType} from '../node_assert';\nimport {profiler, ProfilerEvent} from '../profiler';\nimport {getCurrentDirectiveDef, getCurrentTNode, getLView, getTView} from '../state';\nimport {getComponentLViewByIndex, getNativeByTNode, unwrapRNode} from '../util/view_utils';\n\nimport {getOrCreateLViewCleanup, getOrCreateTViewCleanup, handleError, loadComponentRenderer, markViewDirty} from './shared';\n\n\n\n/**\n * Adds an event listener to the current node.\n *\n * If an output exists on one of the node's directives, it also subscribes to the output\n * and saves the subscription for later cleanup.\n *\n * @param eventName Name of the event\n * @param listenerFn The function to be called when event emits\n * @param useCapture Whether or not to use capture in event listener\n * @param eventTargetResolver Function that returns global target information in case this listener\n * should be attached to a global object like window, document or body\n *\n * @codeGenApi\n */\nexport function ɵɵlistener(\n    eventName: string, listenerFn: (e?: any) => any, useCapture?: boolean,\n    eventTargetResolver?: GlobalTargetResolver): typeof ɵɵlistener {\n  const lView = getLView<{}|null>();\n  const tView = getTView();\n  const tNode = getCurrentTNode()!;\n  listenerInternal(\n      tView, lView, lView[RENDERER], tNode, eventName, listenerFn, !!useCapture,\n      eventTargetResolver);\n  return ɵɵlistener;\n}\n\n/**\n * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component or directive.\n *\n * This instruction is for compatibility purposes and is designed to ensure that a\n * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n * in the component's renderer. Normally all host listeners are evaluated with the\n * parent component's renderer, but, in the case of animation @triggers, they need\n * to be evaluated with the sub component's renderer (because that's where the\n * animation triggers are defined).\n *\n * Do not use this instruction as a replacement for `listener`. This instruction\n * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n *\n * @param eventName Name of the event\n * @param listenerFn The function to be called when event emits\n * @param useCapture Whether or not to use capture in event listener\n * @param eventTargetResolver Function that returns global target information in case this listener\n * should be attached to a global object like window, document or body\n *\n * @codeGenApi\n */\nexport function ɵɵsyntheticHostListener(\n    eventName: string, listenerFn: (e?: any) => any): typeof ɵɵsyntheticHostListener {\n  const tNode = getCurrentTNode()!;\n  const lView = getLView<{}|null>();\n  const tView = getTView();\n  const currentDef = getCurrentDirectiveDef(tView.data);\n  const renderer = loadComponentRenderer(currentDef, tNode, lView);\n  listenerInternal(tView, lView, renderer, tNode, eventName, listenerFn, false);\n  return ɵɵsyntheticHostListener;\n}\n\n/**\n * A utility function that checks if a given element has already an event handler registered for an\n * event with a specified name. The TView.cleanup data structure is used to find out which events\n * are registered for a given element.\n */\nfunction findExistingListener(\n    tView: TView, lView: LView, eventName: string, tNodeIdx: number): ((e?: any) => any)|null {\n  const tCleanup = tView.cleanup;\n  if (tCleanup != null) {\n    for (let i = 0; i < tCleanup.length - 1; i += 2) {\n      const cleanupEventName = tCleanup[i];\n      if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n        // We have found a matching event name on the same node but it might not have been\n        // registered yet, so we must explicitly verify entries in the LView cleanup data\n        // structures.\n        const lCleanup = lView[CLEANUP]!;\n        const listenerIdxInLCleanup = tCleanup[i + 2];\n        return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n      }\n      // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n      // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n      // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n      // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n      // documentation of TView.cleanup for more details of this data structure layout.\n      if (typeof cleanupEventName === 'string') {\n        i += 2;\n      }\n    }\n  }\n  return null;\n}\n\nfunction listenerInternal(\n    tView: TView, lView: LView<{}|null>, renderer: Renderer, tNode: TNode, eventName: string,\n    listenerFn: (e?: any) => any, useCapture: boolean,\n    eventTargetResolver?: GlobalTargetResolver): void {\n  const isTNodeDirectiveHost = isDirectiveHost(tNode);\n  const firstCreatePass = tView.firstCreatePass;\n  const tCleanup: false|any[] = firstCreatePass && getOrCreateTViewCleanup(tView);\n  const context = lView[CONTEXT];\n\n  // When the ɵɵlistener instruction was generated and is executed we know that there is either a\n  // native listener or a directive output on this element. As such we we know that we will have to\n  // register a listener and store its cleanup function on LView.\n  const lCleanup = getOrCreateLViewCleanup(lView);\n\n  ngDevMode && assertTNodeType(tNode, TNodeType.AnyRNode | TNodeType.AnyContainer);\n\n  let processOutputs = true;\n\n  // Adding a native event listener is applicable when:\n  // - The corresponding TNode represents a DOM element.\n  // - The event target has a resolver (usually resulting in a global object,\n  //   such as `window` or `document`).\n  if ((tNode.type & TNodeType.AnyRNode) || eventTargetResolver) {\n    const native = getNativeByTNode(tNode, lView) as RElement;\n    const target = eventTargetResolver ? eventTargetResolver(native) : native;\n    const lCleanupIndex = lCleanup.length;\n    const idxOrTargetGetter = eventTargetResolver ?\n        (_lView: LView) => eventTargetResolver(unwrapRNode(_lView[tNode.index])) :\n        tNode.index;\n\n    // In order to match current behavior, native DOM event listeners must be added for all\n    // events (including outputs).\n\n    // There might be cases where multiple directives on the same element try to register an event\n    // handler function for the same event. In this situation we want to avoid registration of\n    // several native listeners as each registration would be intercepted by NgZone and\n    // trigger change detection. This would mean that a single user action would result in several\n    // change detections being invoked. To avoid this situation we want to have only one call to\n    // native handler registration (for the same element and same type of event).\n    //\n    // In order to have just one native event handler in presence of multiple handler functions,\n    // we just register a first handler function as a native event listener and then chain\n    // (coalesce) other handler functions on top of the first native handler function.\n    let existingListener = null;\n    // Please note that the coalescing described here doesn't happen for events specifying an\n    // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n    // view engine.\n    // Also, we don't have to search for existing listeners is there are no directives\n    // matching on a given node as we can't register multiple event handlers for the same event in\n    // a template (this would mean having duplicate attributes).\n    if (!eventTargetResolver && isTNodeDirectiveHost) {\n      existingListener = findExistingListener(tView, lView, eventName, tNode.index);\n    }\n    if (existingListener !== null) {\n      // Attach a new listener to coalesced listeners list, maintaining the order in which\n      // listeners are registered. For performance reasons, we keep a reference to the last\n      // listener in that list (in `__ngLastListenerFn__` field), so we can avoid going through\n      // the entire set each time we need to add a new listener.\n      const lastListenerFn = (<any>existingListener).__ngLastListenerFn__ || existingListener;\n      lastListenerFn.__ngNextListenerFn__ = listenerFn;\n      (<any>existingListener).__ngLastListenerFn__ = listenerFn;\n      processOutputs = false;\n    } else {\n      listenerFn = wrapListener(tNode, lView, context, listenerFn, false /** preventDefault */);\n      const cleanupFn = renderer.listen(target as RElement, eventName, listenerFn);\n      ngDevMode && ngDevMode.rendererAddEventListener++;\n\n      lCleanup.push(listenerFn, cleanupFn);\n      tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n    }\n\n  } else {\n    // Even if there is no native listener to add, we still need to wrap the listener so that OnPush\n    // ancestors are marked dirty when an event occurs.\n    listenerFn = wrapListener(tNode, lView, context, listenerFn, false /** preventDefault */);\n  }\n\n  // subscribe to directive outputs\n  const outputs = tNode.outputs;\n  let props: PropertyAliasValue|undefined;\n  if (processOutputs && outputs !== null && (props = outputs[eventName])) {\n    const propsLength = props.length;\n    if (propsLength) {\n      for (let i = 0; i < propsLength; i += 2) {\n        const index = props[i] as number;\n        ngDevMode && assertIndexInRange(lView, index);\n        const minifiedName = props[i + 1];\n        const directiveInstance = lView[index];\n        const output = directiveInstance[minifiedName];\n\n        if (ngDevMode && !isObservable(output)) {\n          throw new Error(`@Output ${minifiedName} not initialized in '${\n              directiveInstance.constructor.name}'.`);\n        }\n\n        const subscription = output.subscribe(listenerFn);\n        const idx = lCleanup.length;\n        lCleanup.push(listenerFn, subscription);\n        tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n      }\n    }\n  }\n}\n\nfunction executeListenerWithErrorHandling(\n    lView: LView, context: {}|null, listenerFn: (e?: any) => any, e: any): boolean {\n  try {\n    profiler(ProfilerEvent.OutputStart, context, listenerFn);\n    // Only explicitly returning false from a listener should preventDefault\n    return listenerFn(e) !== false;\n  } catch (error) {\n    handleError(lView, error);\n    return false;\n  } finally {\n    profiler(ProfilerEvent.OutputEnd, context, listenerFn);\n  }\n}\n\n/**\n * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n * if applicable.\n *\n * @param tNode The TNode associated with this listener\n * @param lView The LView that contains this listener\n * @param listenerFn The listener function to call\n * @param wrapWithPreventDefault Whether or not to prevent default behavior\n * (the procedural renderer does this already, so in those cases, we should skip)\n */\nfunction wrapListener(\n    tNode: TNode, lView: LView<{}|null>, context: {}|null, listenerFn: (e?: any) => any,\n    wrapWithPreventDefault: boolean): EventListener {\n  // Note: we are performing most of the work in the listener function itself\n  // to optimize listener registration.\n  return function wrapListenerIn_markDirtyAndPreventDefault(e: any) {\n    // Ivy uses `Function` as a special token that allows us to unwrap the function\n    // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.\n    if (e === Function) {\n      return listenerFn;\n    }\n\n    // In order to be backwards compatible with View Engine, events on component host nodes\n    // must also mark the component view itself dirty (i.e. the view that it owns).\n    const startView = tNode.flags & TNodeFlags.isComponentHost ?\n        getComponentLViewByIndex(tNode.index, lView) :\n        lView;\n    markViewDirty(startView);\n\n    let result = executeListenerWithErrorHandling(lView, context, listenerFn, e);\n    // A just-invoked listener function might have coalesced listeners so we need to check for\n    // their presence and invoke as needed.\n    let nextListenerFn = (<any>wrapListenerIn_markDirtyAndPreventDefault).__ngNextListenerFn__;\n    while (nextListenerFn) {\n      // We should prevent default if any of the listeners explicitly return false\n      result = executeListenerWithErrorHandling(lView, context, nextListenerFn, e) && result;\n      nextListenerFn = (<any>nextListenerFn).__ngNextListenerFn__;\n    }\n\n    if (wrapWithPreventDefault && result === false) {\n      e.preventDefault();\n      // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n      e.returnValue = false;\n    }\n\n    return result;\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {nextContextImpl} from '../state';\n\n/**\n * Retrieves a context at the level specified and saves it as the global, contextViewData.\n * Will get the next level up if level is not specified.\n *\n * This is used to save contexts of parent views so they can be bound in embedded views, or\n * in conjunction with reference() to bind a ref from a parent view.\n *\n * @param level The relative level of the view from which to grab context compared to contextVewData\n * @returns context\n *\n * @codeGenApi\n */\nexport function ɵɵnextContext<T = any>(level: number = 1): T {\n  return nextContextImpl(level);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {newArray} from '../../util/array_utils';\nimport {TAttributes, TElementNode, TNode, TNodeFlags, TNodeType} from '../interfaces/node';\nimport {ProjectionSlots} from '../interfaces/projection';\nimport {DECLARATION_COMPONENT_VIEW, HEADER_OFFSET, T_HOST} from '../interfaces/view';\nimport {applyProjection} from '../node_manipulation';\nimport {getProjectAsAttrValue, isNodeMatchingSelectorList, isSelectorInSelectorList} from '../node_selector_matcher';\nimport {getLView, getTView, setCurrentTNodeAsNotParent} from '../state';\nimport {getOrCreateTNode} from './shared';\n\n\n\n/**\n * Checks a given node against matching projection slots and returns the\n * determined slot index. Returns \"null\" if no slot matched the given node.\n *\n * This function takes into account the parsed ngProjectAs selector from the\n * node's attributes. If present, it will check whether the ngProjectAs selector\n * matches any of the projection slot selectors.\n */\nexport function matchingProjectionSlotIndex(tNode: TNode, projectionSlots: ProjectionSlots): number|\n    null {\n  let wildcardNgContentIndex = null;\n  const ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n  for (let i = 0; i < projectionSlots.length; i++) {\n    const slotValue = projectionSlots[i];\n    // The last wildcard projection slot should match all nodes which aren't matching\n    // any selector. This is necessary to be backwards compatible with view engine.\n    if (slotValue === '*') {\n      wildcardNgContentIndex = i;\n      continue;\n    }\n    // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n    // to the list of selectors, otherwise we fall back to matching against the node.\n    if (ngProjectAsAttrVal === null ?\n            isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n            isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n      return i;  // first matching selector \"captures\" a given node\n    }\n  }\n  return wildcardNgContentIndex;\n}\n\n/**\n * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n * It takes all the selectors from the entire component's template and decides where\n * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n * backed by a selector).\n *\n * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n * un-parsed form.\n *\n * The parsed form is needed for efficient matching of a node against a given CSS selector.\n * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n *\n * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n * drawbacks:\n * - having only a textual form would require runtime parsing of CSS selectors;\n * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n * template author).\n *\n * @param projectionSlots? A collection of projection slots. A projection slot can be based\n *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n *        all nodes which do not match any selector. If not specified, a single wildcard\n *        selector projection slot will be defined.\n *\n * @codeGenApi\n */\nexport function ɵɵprojectionDef(projectionSlots?: ProjectionSlots): void {\n  const componentNode = getLView()[DECLARATION_COMPONENT_VIEW][T_HOST] as TElementNode;\n\n  if (!componentNode.projection) {\n    // If no explicit projection slots are defined, fall back to a single\n    // projection slot with the wildcard selector.\n    const numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n    const projectionHeads: (TNode|null)[] = componentNode.projection =\n        newArray(numProjectionSlots, null! as TNode);\n    const tails: (TNode|null)[] = projectionHeads.slice();\n\n    let componentChild: TNode|null = componentNode.child;\n\n    while (componentChild !== null) {\n      const slotIndex =\n          projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n\n      if (slotIndex !== null) {\n        if (tails[slotIndex]) {\n          tails[slotIndex]!.projectionNext = componentChild;\n        } else {\n          projectionHeads[slotIndex] = componentChild;\n        }\n        tails[slotIndex] = componentChild;\n      }\n\n      componentChild = componentChild.next;\n    }\n  }\n}\n\n\n/**\n * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n * to the projectionDef instruction.\n *\n * @param nodeIndex\n * @param selectorIndex:\n *        - 0 when the selector is `*` (or unspecified as this is the default value),\n *        - 1 based index of the selector from the {@link projectionDef}\n *\n * @codeGenApi\n */\nexport function ɵɵprojection(\n    nodeIndex: number, selectorIndex: number = 0, attrs?: TAttributes): void {\n  const lView = getLView();\n  const tView = getTView();\n  const tProjectionNode =\n      getOrCreateTNode(tView, HEADER_OFFSET + nodeIndex, TNodeType.Projection, null, attrs || null);\n\n  // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n  if (tProjectionNode.projection === null) tProjectionNode.projection = selectorIndex;\n\n  // `<ng-content>` has no content\n  setCurrentTNodeAsNotParent();\n\n  if ((tProjectionNode.flags & TNodeFlags.isDetached) !== TNodeFlags.isDetached) {\n    // re-distribution of projectable nodes is stored on a component's view level\n    applyProjection(tView, lView, tProjectionNode);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {SanitizerFn} from '../interfaces/sanitization';\nimport {RENDERER} from '../interfaces/view';\nimport {getBindingIndex, getLView, getSelectedTNode, getTView} from '../state';\nimport {NO_CHANGE} from '../tokens';\n\nimport {interpolation1, interpolation2, interpolation3, interpolation4, interpolation5, interpolation6, interpolation7, interpolation8, interpolationV} from './interpolation';\nimport {elementPropertyInternal, storePropertyBindingMetadata} from './shared';\n\n\n/**\n *\n * Update an interpolated property on an element with a lone bound value\n *\n * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n * surrounds that interpolated value:\n *\n * ```html\n * <div title=\"{{v0}}\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵpropertyInterpolate('title', v0);\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nexport function ɵɵpropertyInterpolate(\n    propName: string, v0: any, sanitizer?: SanitizerFn): typeof ɵɵpropertyInterpolate {\n  ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n  return ɵɵpropertyInterpolate;\n}\n\n\n/**\n *\n * Update an interpolated property on an element with single bound value surrounded by text.\n *\n * Used when the value passed to a property has 1 interpolated value in it:\n *\n * ```html\n * <div title=\"prefix{{v0}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nexport function ɵɵpropertyInterpolate1(\n    propName: string, prefix: string, v0: any, suffix: string,\n    sanitizer?: SanitizerFn): typeof ɵɵpropertyInterpolate1 {\n  const lView = getLView();\n  const interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n  if (interpolatedValue !== NO_CHANGE) {\n    const tView = getTView();\n    const tNode = getSelectedTNode();\n    elementPropertyInternal(\n        tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n    ngDevMode &&\n        storePropertyBindingMetadata(\n            tView.data, tNode, propName, getBindingIndex() - 1, prefix, suffix);\n  }\n  return ɵɵpropertyInterpolate1;\n}\n\n/**\n *\n * Update an interpolated property on an element with 2 bound values surrounded by text.\n *\n * Used when the value passed to a property has 2 interpolated values in it:\n *\n * ```html\n * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nexport function ɵɵpropertyInterpolate2(\n    propName: string, prefix: string, v0: any, i0: string, v1: any, suffix: string,\n    sanitizer?: SanitizerFn): typeof ɵɵpropertyInterpolate2 {\n  const lView = getLView();\n  const interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n  if (interpolatedValue !== NO_CHANGE) {\n    const tView = getTView();\n    const tNode = getSelectedTNode();\n    elementPropertyInternal(\n        tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n    ngDevMode &&\n        storePropertyBindingMetadata(\n            tView.data, tNode, propName, getBindingIndex() - 2, prefix, i0, suffix);\n  }\n  return ɵɵpropertyInterpolate2;\n}\n\n/**\n *\n * Update an interpolated property on an element with 3 bound values surrounded by text.\n *\n * Used when the value passed to a property has 3 interpolated values in it:\n *\n * ```html\n * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵpropertyInterpolate3(\n * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nexport function ɵɵpropertyInterpolate3(\n    propName: string, prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any,\n    suffix: string, sanitizer?: SanitizerFn): typeof ɵɵpropertyInterpolate3 {\n  const lView = getLView();\n  const interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n  if (interpolatedValue !== NO_CHANGE) {\n    const tView = getTView();\n    const tNode = getSelectedTNode();\n    elementPropertyInternal(\n        tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n    ngDevMode &&\n        storePropertyBindingMetadata(\n            tView.data, tNode, propName, getBindingIndex() - 3, prefix, i0, i1, suffix);\n  }\n  return ɵɵpropertyInterpolate3;\n}\n\n/**\n *\n * Update an interpolated property on an element with 4 bound values surrounded by text.\n *\n * Used when the value passed to a property has 4 interpolated values in it:\n *\n * ```html\n * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵpropertyInterpolate4(\n * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nexport function ɵɵpropertyInterpolate4(\n    propName: string, prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string,\n    v3: any, suffix: string, sanitizer?: SanitizerFn): typeof ɵɵpropertyInterpolate4 {\n  const lView = getLView();\n  const interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n  if (interpolatedValue !== NO_CHANGE) {\n    const tView = getTView();\n    const tNode = getSelectedTNode();\n    elementPropertyInternal(\n        tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n    ngDevMode &&\n        storePropertyBindingMetadata(\n            tView.data, tNode, propName, getBindingIndex() - 4, prefix, i0, i1, i2, suffix);\n  }\n  return ɵɵpropertyInterpolate4;\n}\n\n/**\n *\n * Update an interpolated property on an element with 5 bound values surrounded by text.\n *\n * Used when the value passed to a property has 5 interpolated values in it:\n *\n * ```html\n * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵpropertyInterpolate5(\n * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nexport function ɵɵpropertyInterpolate5(\n    propName: string, prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string,\n    v3: any, i3: string, v4: any, suffix: string,\n    sanitizer?: SanitizerFn): typeof ɵɵpropertyInterpolate5 {\n  const lView = getLView();\n  const interpolatedValue =\n      interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n  if (interpolatedValue !== NO_CHANGE) {\n    const tView = getTView();\n    const tNode = getSelectedTNode();\n    elementPropertyInternal(\n        tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n    ngDevMode &&\n        storePropertyBindingMetadata(\n            tView.data, tNode, propName, getBindingIndex() - 5, prefix, i0, i1, i2, i3, suffix);\n  }\n  return ɵɵpropertyInterpolate5;\n}\n\n/**\n *\n * Update an interpolated property on an element with 6 bound values surrounded by text.\n *\n * Used when the value passed to a property has 6 interpolated values in it:\n *\n * ```html\n * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵpropertyInterpolate6(\n *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nexport function ɵɵpropertyInterpolate6(\n    propName: string, prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string,\n    v3: any, i3: string, v4: any, i4: string, v5: any, suffix: string,\n    sanitizer?: SanitizerFn): typeof ɵɵpropertyInterpolate6 {\n  const lView = getLView();\n  const interpolatedValue =\n      interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n  if (interpolatedValue !== NO_CHANGE) {\n    const tView = getTView();\n    const tNode = getSelectedTNode();\n    elementPropertyInternal(\n        tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n    ngDevMode &&\n        storePropertyBindingMetadata(\n            tView.data, tNode, propName, getBindingIndex() - 6, prefix, i0, i1, i2, i3, i4, suffix);\n  }\n  return ɵɵpropertyInterpolate6;\n}\n\n/**\n *\n * Update an interpolated property on an element with 7 bound values surrounded by text.\n *\n * Used when the value passed to a property has 7 interpolated values in it:\n *\n * ```html\n * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵpropertyInterpolate7(\n *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param i5 Static value used for concatenation only.\n * @param v6 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nexport function ɵɵpropertyInterpolate7(\n    propName: string, prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string,\n    v3: any, i3: string, v4: any, i4: string, v5: any, i5: string, v6: any, suffix: string,\n    sanitizer?: SanitizerFn): typeof ɵɵpropertyInterpolate7 {\n  const lView = getLView();\n  const interpolatedValue =\n      interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n  if (interpolatedValue !== NO_CHANGE) {\n    const tView = getTView();\n    const tNode = getSelectedTNode();\n    elementPropertyInternal(\n        tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n    ngDevMode &&\n        storePropertyBindingMetadata(\n            tView.data, tNode, propName, getBindingIndex() - 7, prefix, i0, i1, i2, i3, i4, i5,\n            suffix);\n  }\n  return ɵɵpropertyInterpolate7;\n}\n\n/**\n *\n * Update an interpolated property on an element with 8 bound values surrounded by text.\n *\n * Used when the value passed to a property has 8 interpolated values in it:\n *\n * ```html\n * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵpropertyInterpolate8(\n *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param i5 Static value used for concatenation only.\n * @param v6 Value checked for change.\n * @param i6 Static value used for concatenation only.\n * @param v7 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nexport function ɵɵpropertyInterpolate8(\n    propName: string, prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string,\n    v3: any, i3: string, v4: any, i4: string, v5: any, i5: string, v6: any, i6: string, v7: any,\n    suffix: string, sanitizer?: SanitizerFn): typeof ɵɵpropertyInterpolate8 {\n  const lView = getLView();\n  const interpolatedValue = interpolation8(\n      lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n  if (interpolatedValue !== NO_CHANGE) {\n    const tView = getTView();\n    const tNode = getSelectedTNode();\n    elementPropertyInternal(\n        tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n    ngDevMode &&\n        storePropertyBindingMetadata(\n            tView.data, tNode, propName, getBindingIndex() - 8, prefix, i0, i1, i2, i3, i4, i5, i6,\n            suffix);\n  }\n  return ɵɵpropertyInterpolate8;\n}\n\n/**\n * Update an interpolated property on an element with 9 or more bound values surrounded by text.\n *\n * Used when the number of interpolated values exceeds 8.\n *\n * ```html\n * <div\n *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵpropertyInterpolateV(\n *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n *  'suffix']);\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update.\n * @param values The collection of values and the strings in between those values, beginning with a\n * string prefix and ending with a string suffix.\n * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nexport function ɵɵpropertyInterpolateV(\n    propName: string, values: any[], sanitizer?: SanitizerFn): typeof ɵɵpropertyInterpolateV {\n  const lView = getLView();\n  const interpolatedValue = interpolationV(lView, values);\n  if (interpolatedValue !== NO_CHANGE) {\n    const tView = getTView();\n    const tNode = getSelectedTNode();\n    elementPropertyInternal(\n        tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n    if (ngDevMode) {\n      const interpolationInBetween = [values[0]];  // prefix\n      for (let i = 2; i < values.length; i += 2) {\n        interpolationInBetween.push(values[i]);\n      }\n      storePropertyBindingMetadata(\n          tView.data, tNode, propName, getBindingIndex() - interpolationInBetween.length + 1,\n          ...interpolationInBetween);\n    }\n  }\n  return ɵɵpropertyInterpolateV;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {KeyValueArray, keyValueArrayIndexOf} from '../../util/array_utils';\nimport {assertEqual, assertIndexInRange, assertNotEqual} from '../../util/assert';\nimport {assertFirstUpdatePass} from '../assert';\nimport {TNode} from '../interfaces/node';\nimport {getTStylingRangeNext, getTStylingRangePrev, setTStylingRangeNext, setTStylingRangeNextDuplicate, setTStylingRangePrev, setTStylingRangePrevDuplicate, toTStylingRange, TStylingKey, TStylingKeyPrimitive, TStylingRange} from '../interfaces/styling';\nimport {TData} from '../interfaces/view';\nimport {getTView} from '../state';\n\n\n/**\n * NOTE: The word `styling` is used interchangeably as style or class styling.\n *\n * This file contains code to link styling instructions together so that they can be replayed in\n * priority order. The file exists because Ivy styling instruction execution order does not match\n * that of the priority order. The purpose of this code is to create a linked list so that the\n * instructions can be traversed in priority order when computing the styles.\n *\n * Assume we are dealing with the following code:\n * ```\n * @Component({\n *   template: `\n *     <my-cmp [style]=\" {color: '#001'} \"\n *             [style.color]=\" #002 \"\n *             dir-style-color-1\n *             dir-style-color-2> `\n * })\n * class ExampleComponent {\n *   static ngComp = ... {\n *     ...\n *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`\n *     ɵɵstyleMap({color: '#001'});\n *     ɵɵstyleProp('color', '#002');\n *     ...\n *   }\n * }\n *\n * @Directive({\n *   selector: `[dir-style-color-1]',\n * })\n * class Style1Directive {\n *   @HostBinding('style') style = {color: '#005'};\n *   @HostBinding('style.color') color = '#006';\n *\n *   static ngDir = ... {\n *     ...\n *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`\n *     ɵɵstyleMap({color: '#005'});\n *     ɵɵstyleProp('color', '#006');\n *     ...\n *   }\n * }\n *\n * @Directive({\n *   selector: `[dir-style-color-2]',\n * })\n * class Style2Directive {\n *   @HostBinding('style') style = {color: '#007'};\n *   @HostBinding('style.color') color = '#008';\n *\n *   static ngDir = ... {\n *     ...\n *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`\n *     ɵɵstyleMap({color: '#007'});\n *     ɵɵstyleProp('color', '#008');\n *     ...\n *   }\n * }\n *\n * @Directive({\n *   selector: `my-cmp',\n * })\n * class MyComponent {\n *   @HostBinding('style') style = {color: '#003'};\n *   @HostBinding('style.color') color = '#004';\n *\n *   static ngComp = ... {\n *     ...\n *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`\n *     ɵɵstyleMap({color: '#003'});\n *     ɵɵstyleProp('color', '#004');\n *     ...\n *   }\n * }\n * ```\n *\n * The Order of instruction execution is:\n *\n * NOTE: the comment binding location is for illustrative purposes only.\n *\n * ```\n * // Template: (ExampleComponent)\n *     ɵɵstyleMap({color: '#001'});   // Binding index: 10\n *     ɵɵstyleProp('color', '#002');  // Binding index: 12\n * // MyComponent\n *     ɵɵstyleMap({color: '#003'});   // Binding index: 20\n *     ɵɵstyleProp('color', '#004');  // Binding index: 22\n * // Style1Directive\n *     ɵɵstyleMap({color: '#005'});   // Binding index: 24\n *     ɵɵstyleProp('color', '#006');  // Binding index: 26\n * // Style2Directive\n *     ɵɵstyleMap({color: '#007'});   // Binding index: 28\n *     ɵɵstyleProp('color', '#008');  // Binding index: 30\n * ```\n *\n * The correct priority order of concatenation is:\n *\n * ```\n * // MyComponent\n *     ɵɵstyleMap({color: '#003'});   // Binding index: 20\n *     ɵɵstyleProp('color', '#004');  // Binding index: 22\n * // Style1Directive\n *     ɵɵstyleMap({color: '#005'});   // Binding index: 24\n *     ɵɵstyleProp('color', '#006');  // Binding index: 26\n * // Style2Directive\n *     ɵɵstyleMap({color: '#007'});   // Binding index: 28\n *     ɵɵstyleProp('color', '#008');  // Binding index: 30\n * // Template: (ExampleComponent)\n *     ɵɵstyleMap({color: '#001'});   // Binding index: 10\n *     ɵɵstyleProp('color', '#002');  // Binding index: 12\n * ```\n *\n * What color should be rendered?\n *\n * Once the items are correctly sorted in the list, the answer is simply the last item in the\n * concatenation list which is `#002`.\n *\n * To do so we keep a linked list of all of the bindings which pertain to this element.\n * Notice that the bindings are inserted in the order of execution, but the `TView.data` allows\n * us to traverse them in the order of priority.\n *\n * |Idx|`TView.data`|`LView`          | Notes\n * |---|------------|-----------------|--------------\n * |...|            |                 |\n * |10 |`null`      |`{color: '#001'}`| `ɵɵstyleMap('color', {color: '#001'})`\n * |11 |`30 | 12`   | ...             |\n * |12 |`color`     |`'#002'`         | `ɵɵstyleProp('color', '#002')`\n * |13 |`10 | 0`    | ...             |\n * |...|            |                 |\n * |20 |`null`      |`{color: '#003'}`| `ɵɵstyleMap('color', {color: '#003'})`\n * |21 |`0 | 22`    | ...             |\n * |22 |`color`     |`'#004'`         | `ɵɵstyleProp('color', '#004')`\n * |23 |`20 | 24`   | ...             |\n * |24 |`null`      |`{color: '#005'}`| `ɵɵstyleMap('color', {color: '#005'})`\n * |25 |`22 | 26`   | ...             |\n * |26 |`color`     |`'#006'`         | `ɵɵstyleProp('color', '#006')`\n * |27 |`24 | 28`   | ...             |\n * |28 |`null`      |`{color: '#007'}`| `ɵɵstyleMap('color', {color: '#007'})`\n * |29 |`26 | 30`   | ...             |\n * |30 |`color`     |`'#008'`         | `ɵɵstyleProp('color', '#008')`\n * |31 |`28 | 10`   | ...             |\n *\n * The above data structure allows us to re-concatenate the styling no matter which data binding\n * changes.\n *\n * NOTE: in addition to keeping track of next/previous index the `TView.data` also stores prev/next\n * duplicate bit. The duplicate bit if true says there either is a binding with the same name or\n * there is a map (which may contain the name). This information is useful in knowing if other\n * styles with higher priority need to be searched for overwrites.\n *\n * NOTE: See `should support example in 'tnode_linked_list.ts' documentation` in\n * `tnode_linked_list_spec.ts` for working example.\n */\nlet __unused_const_as_closure_does_not_like_standalone_comment_blocks__: undefined;\n\n/**\n * Insert new `tStyleValue` at `TData` and link existing style bindings such that we maintain linked\n * list of styles and compute the duplicate flag.\n *\n * Note: this function is executed during `firstUpdatePass` only to populate the `TView.data`.\n *\n * The function works by keeping track of `tStylingRange` which contains two pointers pointing to\n * the head/tail of the template portion of the styles.\n *  - if `isHost === false` (we are template) then insertion is at tail of `TStylingRange`\n *  - if `isHost === true` (we are host binding) then insertion is at head of `TStylingRange`\n *\n * @param tData The `TData` to insert into.\n * @param tNode `TNode` associated with the styling element.\n * @param tStylingKey See `TStylingKey`.\n * @param index location of where `tStyleValue` should be stored (and linked into list.)\n * @param isHostBinding `true` if the insertion is for a `hostBinding`. (insertion is in front of\n *               template.)\n * @param isClassBinding True if the associated `tStylingKey` as a `class` styling.\n *                       `tNode.classBindings` should be used (or `tNode.styleBindings` otherwise.)\n */\nexport function insertTStylingBinding(\n    tData: TData, tNode: TNode, tStylingKeyWithStatic: TStylingKey, index: number,\n    isHostBinding: boolean, isClassBinding: boolean): void {\n  ngDevMode && assertFirstUpdatePass(getTView());\n  let tBindings = isClassBinding ? tNode.classBindings : tNode.styleBindings;\n  let tmplHead = getTStylingRangePrev(tBindings);\n  let tmplTail = getTStylingRangeNext(tBindings);\n\n  tData[index] = tStylingKeyWithStatic;\n  let isKeyDuplicateOfStatic = false;\n  let tStylingKey: TStylingKeyPrimitive;\n  if (Array.isArray(tStylingKeyWithStatic)) {\n    // We are case when the `TStylingKey` contains static fields as well.\n    const staticKeyValueArray = tStylingKeyWithStatic as KeyValueArray<any>;\n    tStylingKey = staticKeyValueArray[1];  // unwrap.\n    // We need to check if our key is present in the static so that we can mark it as duplicate.\n    if (tStylingKey === null ||\n        keyValueArrayIndexOf(staticKeyValueArray, tStylingKey as string) > 0) {\n      // tStylingKey is present in the statics, need to mark it as duplicate.\n      isKeyDuplicateOfStatic = true;\n    }\n  } else {\n    tStylingKey = tStylingKeyWithStatic;\n  }\n  if (isHostBinding) {\n    // We are inserting host bindings\n\n    // If we don't have template bindings then `tail` is 0.\n    const hasTemplateBindings = tmplTail !== 0;\n    // This is important to know because that means that the `head` can't point to the first\n    // template bindings (there are none.) Instead the head points to the tail of the template.\n    if (hasTemplateBindings) {\n      // template head's \"prev\" will point to last host binding or to 0 if no host bindings yet\n      const previousNode = getTStylingRangePrev(tData[tmplHead + 1] as TStylingRange);\n      tData[index + 1] = toTStylingRange(previousNode, tmplHead);\n      // if a host binding has already been registered, we need to update the next of that host\n      // binding to point to this one\n      if (previousNode !== 0) {\n        // We need to update the template-tail value to point to us.\n        tData[previousNode + 1] =\n            setTStylingRangeNext(tData[previousNode + 1] as TStylingRange, index);\n      }\n      // The \"previous\" of the template binding head should point to this host binding\n      tData[tmplHead + 1] = setTStylingRangePrev(tData[tmplHead + 1] as TStylingRange, index);\n    } else {\n      tData[index + 1] = toTStylingRange(tmplHead, 0);\n      // if a host binding has already been registered, we need to update the next of that host\n      // binding to point to this one\n      if (tmplHead !== 0) {\n        // We need to update the template-tail value to point to us.\n        tData[tmplHead + 1] = setTStylingRangeNext(tData[tmplHead + 1] as TStylingRange, index);\n      }\n      // if we don't have template, the head points to template-tail, and needs to be advanced.\n      tmplHead = index;\n    }\n  } else {\n    // We are inserting in template section.\n    // We need to set this binding's \"previous\" to the current template tail\n    tData[index + 1] = toTStylingRange(tmplTail, 0);\n    ngDevMode &&\n        assertEqual(\n            tmplHead !== 0 && tmplTail === 0, false,\n            'Adding template bindings after hostBindings is not allowed.');\n    if (tmplHead === 0) {\n      tmplHead = index;\n    } else {\n      // We need to update the previous value \"next\" to point to this binding\n      tData[tmplTail + 1] = setTStylingRangeNext(tData[tmplTail + 1] as TStylingRange, index);\n    }\n    tmplTail = index;\n  }\n\n  // Now we need to update / compute the duplicates.\n  // Starting with our location search towards head (least priority)\n  if (isKeyDuplicateOfStatic) {\n    tData[index + 1] = setTStylingRangePrevDuplicate(tData[index + 1] as TStylingRange);\n  }\n  markDuplicates(tData, tStylingKey, index, true, isClassBinding);\n  markDuplicates(tData, tStylingKey, index, false, isClassBinding);\n  markDuplicateOfResidualStyling(tNode, tStylingKey, tData, index, isClassBinding);\n\n  tBindings = toTStylingRange(tmplHead, tmplTail);\n  if (isClassBinding) {\n    tNode.classBindings = tBindings;\n  } else {\n    tNode.styleBindings = tBindings;\n  }\n}\n\n/**\n * Look into the residual styling to see if the current `tStylingKey` is duplicate of residual.\n *\n * @param tNode `TNode` where the residual is stored.\n * @param tStylingKey `TStylingKey` to store.\n * @param tData `TData` associated with the current `LView`.\n * @param index location of where `tStyleValue` should be stored (and linked into list.)\n * @param isClassBinding True if the associated `tStylingKey` as a `class` styling.\n *                       `tNode.classBindings` should be used (or `tNode.styleBindings` otherwise.)\n */\nfunction markDuplicateOfResidualStyling(\n    tNode: TNode, tStylingKey: TStylingKey, tData: TData, index: number, isClassBinding: boolean) {\n  const residual = isClassBinding ? tNode.residualClasses : tNode.residualStyles;\n  if (residual != null /* or undefined */ && typeof tStylingKey == 'string' &&\n      keyValueArrayIndexOf(residual, tStylingKey) >= 0) {\n    // We have duplicate in the residual so mark ourselves as duplicate.\n    tData[index + 1] = setTStylingRangeNextDuplicate(tData[index + 1] as TStylingRange);\n  }\n}\n\n\n/**\n * Marks `TStyleValue`s as duplicates if another style binding in the list has the same\n * `TStyleValue`.\n *\n * NOTE: this function is intended to be called twice once with `isPrevDir` set to `true` and once\n * with it set to `false` to search both the previous as well as next items in the list.\n *\n * No duplicate case\n * ```\n *   [style.color]\n *   [style.width.px] <<- index\n *   [style.height.px]\n * ```\n *\n * In the above case adding `[style.width.px]` to the existing `[style.color]` produces no\n * duplicates because `width` is not found in any other part of the linked list.\n *\n * Duplicate case\n * ```\n *   [style.color]\n *   [style.width.em]\n *   [style.width.px] <<- index\n * ```\n * In the above case adding `[style.width.px]` will produce a duplicate with `[style.width.em]`\n * because `width` is found in the chain.\n *\n * Map case 1\n * ```\n *   [style.width.px]\n *   [style.color]\n *   [style]  <<- index\n * ```\n * In the above case adding `[style]` will produce a duplicate with any other bindings because\n * `[style]` is a Map and as such is fully dynamic and could produce `color` or `width`.\n *\n * Map case 2\n * ```\n *   [style]\n *   [style.width.px]\n *   [style.color]  <<- index\n * ```\n * In the above case adding `[style.color]` will produce a duplicate because there is already a\n * `[style]` binding which is a Map and as such is fully dynamic and could produce `color` or\n * `width`.\n *\n * NOTE: Once `[style]` (Map) is added into the system all things are mapped as duplicates.\n * NOTE: We use `style` as example, but same logic is applied to `class`es as well.\n *\n * @param tData `TData` where the linked list is stored.\n * @param tStylingKey `TStylingKeyPrimitive` which contains the value to compare to other keys in\n *        the linked list.\n * @param index Starting location in the linked list to search from\n * @param isPrevDir Direction.\n *        - `true` for previous (lower priority);\n *        - `false` for next (higher priority).\n */\nfunction markDuplicates(\n    tData: TData, tStylingKey: TStylingKeyPrimitive, index: number, isPrevDir: boolean,\n    isClassBinding: boolean) {\n  const tStylingAtIndex = tData[index + 1] as TStylingRange;\n  const isMap = tStylingKey === null;\n  let cursor =\n      isPrevDir ? getTStylingRangePrev(tStylingAtIndex) : getTStylingRangeNext(tStylingAtIndex);\n  let foundDuplicate = false;\n  // We keep iterating as long as we have a cursor\n  // AND either:\n  // - we found what we are looking for, OR\n  // - we are a map in which case we have to continue searching even after we find what we were\n  //   looking for since we are a wild card and everything needs to be flipped to duplicate.\n  while (cursor !== 0 && (foundDuplicate === false || isMap)) {\n    ngDevMode && assertIndexInRange(tData, cursor);\n    const tStylingValueAtCursor = tData[cursor] as TStylingKey;\n    const tStyleRangeAtCursor = tData[cursor + 1] as TStylingRange;\n    if (isStylingMatch(tStylingValueAtCursor, tStylingKey)) {\n      foundDuplicate = true;\n      tData[cursor + 1] = isPrevDir ? setTStylingRangeNextDuplicate(tStyleRangeAtCursor) :\n                                      setTStylingRangePrevDuplicate(tStyleRangeAtCursor);\n    }\n    cursor = isPrevDir ? getTStylingRangePrev(tStyleRangeAtCursor) :\n                         getTStylingRangeNext(tStyleRangeAtCursor);\n  }\n  if (foundDuplicate) {\n    // if we found a duplicate, than mark ourselves.\n    tData[index + 1] = isPrevDir ? setTStylingRangePrevDuplicate(tStylingAtIndex) :\n                                   setTStylingRangeNextDuplicate(tStylingAtIndex);\n  }\n}\n\n/**\n * Determines if two `TStylingKey`s are a match.\n *\n * When computing whether a binding contains a duplicate, we need to compare if the instruction\n * `TStylingKey` has a match.\n *\n * Here are examples of `TStylingKey`s which match given `tStylingKeyCursor` is:\n * - `color`\n *    - `color`    // Match another color\n *    - `null`     // That means that `tStylingKey` is a `classMap`/`styleMap` instruction\n *    - `['', 'color', 'other', true]` // wrapped `color` so match\n *    - `['', null, 'other', true]`       // wrapped `null` so match\n *    - `['', 'width', 'color', 'value']` // wrapped static value contains a match on `'color'`\n * - `null`       // `tStylingKeyCursor` always match as it is `classMap`/`styleMap` instruction\n *\n * @param tStylingKeyCursor\n * @param tStylingKey\n */\nfunction isStylingMatch(tStylingKeyCursor: TStylingKey, tStylingKey: TStylingKeyPrimitive) {\n  ngDevMode &&\n      assertNotEqual(\n          Array.isArray(tStylingKey), true, 'Expected that \\'tStylingKey\\' has been unwrapped');\n  if (\n      tStylingKeyCursor === null ||  // If the cursor is `null` it means that we have map at that\n                                     // location so we must assume that we have a match.\n      tStylingKey == null ||  // If `tStylingKey` is `null` then it is a map therefor assume that it\n                              // contains a match.\n      (Array.isArray(tStylingKeyCursor) ? tStylingKeyCursor[1] : tStylingKeyCursor) ===\n          tStylingKey  // If the keys match explicitly than we are a match.\n  ) {\n    return true;\n  } else if (Array.isArray(tStylingKeyCursor) && typeof tStylingKey === 'string') {\n    // if we did not find a match, but `tStylingKeyCursor` is `KeyValueArray` that means cursor has\n    // statics and we need to check those as well.\n    return keyValueArrayIndexOf(tStylingKeyCursor, tStylingKey) >=\n        0;  // see if we are matching the key\n  }\n  return false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {assertEqual, throwError} from '../../util/assert';\nimport {CharCode} from '../../util/char_code';\n\n/**\n * Stores the locations of key/value indexes while parsing styling.\n *\n * In case of `cssText` parsing the indexes are like so:\n * ```\n *   \"key1: value1; key2: value2; key3: value3\"\n *                  ^   ^ ^     ^             ^\n *                  |   | |     |             +-- textEnd\n *                  |   | |     +---------------- valueEnd\n *                  |   | +---------------------- value\n *                  |   +------------------------ keyEnd\n *                  +---------------------------- key\n * ```\n *\n * In case of `className` parsing the indexes are like so:\n * ```\n *   \"key1 key2 key3\"\n *         ^   ^    ^\n *         |   |    +-- textEnd\n *         |   +------------------------ keyEnd\n *         +---------------------------- key\n * ```\n * NOTE: `value` and `valueEnd` are used only for styles, not classes.\n */\ninterface ParserState {\n  textEnd: number;\n  key: number;\n  keyEnd: number;\n  value: number;\n  valueEnd: number;\n}\n// Global state of the parser. (This makes parser non-reentrant, but that is not an issue)\nconst parserState: ParserState = {\n  textEnd: 0,\n  key: 0,\n  keyEnd: 0,\n  value: 0,\n  valueEnd: 0,\n};\n\n/**\n * Retrieves the last parsed `key` of style.\n * @param text the text to substring the key from.\n */\nexport function getLastParsedKey(text: string): string {\n  return text.substring(parserState.key, parserState.keyEnd);\n}\n\n/**\n * Retrieves the last parsed `value` of style.\n * @param text the text to substring the key from.\n */\nexport function getLastParsedValue(text: string): string {\n  return text.substring(parserState.value, parserState.valueEnd);\n}\n\n/**\n * Initializes `className` string for parsing and parses the first token.\n *\n * This function is intended to be used in this format:\n * ```\n * for (let i = parseClassName(text); i >= 0; i = parseClassNameNext(text, i)) {\n *   const key = getLastParsedKey();\n *   ...\n * }\n * ```\n * @param text `className` to parse\n * @returns index where the next invocation of `parseClassNameNext` should resume.\n */\nexport function parseClassName(text: string): number {\n  resetParserState(text);\n  return parseClassNameNext(text, consumeWhitespace(text, 0, parserState.textEnd));\n}\n\n/**\n * Parses next `className` token.\n *\n * This function is intended to be used in this format:\n * ```\n * for (let i = parseClassName(text); i >= 0; i = parseClassNameNext(text, i)) {\n *   const key = getLastParsedKey();\n *   ...\n * }\n * ```\n *\n * @param text `className` to parse\n * @param index where the parsing should resume.\n * @returns index where the next invocation of `parseClassNameNext` should resume.\n */\nexport function parseClassNameNext(text: string, index: number): number {\n  const end = parserState.textEnd;\n  if (end === index) {\n    return -1;\n  }\n  index = parserState.keyEnd = consumeClassToken(text, parserState.key = index, end);\n  return consumeWhitespace(text, index, end);\n}\n\n/**\n * Initializes `cssText` string for parsing and parses the first key/values.\n *\n * This function is intended to be used in this format:\n * ```\n * for (let i = parseStyle(text); i >= 0; i = parseStyleNext(text, i))) {\n *   const key = getLastParsedKey();\n *   const value = getLastParsedValue();\n *   ...\n * }\n * ```\n * @param text `cssText` to parse\n * @returns index where the next invocation of `parseStyleNext` should resume.\n */\nexport function parseStyle(text: string): number {\n  resetParserState(text);\n  return parseStyleNext(text, consumeWhitespace(text, 0, parserState.textEnd));\n}\n\n/**\n * Parses the next `cssText` key/values.\n *\n * This function is intended to be used in this format:\n * ```\n * for (let i = parseStyle(text); i >= 0; i = parseStyleNext(text, i))) {\n *   const key = getLastParsedKey();\n *   const value = getLastParsedValue();\n *   ...\n * }\n *\n * @param text `cssText` to parse\n * @param index where the parsing should resume.\n * @returns index where the next invocation of `parseStyleNext` should resume.\n */\nexport function parseStyleNext(text: string, startIndex: number): number {\n  const end = parserState.textEnd;\n  let index = parserState.key = consumeWhitespace(text, startIndex, end);\n  if (end === index) {\n    // we reached an end so just quit\n    return -1;\n  }\n  index = parserState.keyEnd = consumeStyleKey(text, index, end);\n  index = consumeSeparator(text, index, end, CharCode.COLON);\n  index = parserState.value = consumeWhitespace(text, index, end);\n  index = parserState.valueEnd = consumeStyleValue(text, index, end);\n  return consumeSeparator(text, index, end, CharCode.SEMI_COLON);\n}\n\n/**\n * Reset the global state of the styling parser.\n * @param text The styling text to parse.\n */\nexport function resetParserState(text: string): void {\n  parserState.key = 0;\n  parserState.keyEnd = 0;\n  parserState.value = 0;\n  parserState.valueEnd = 0;\n  parserState.textEnd = text.length;\n}\n\n/**\n * Returns index of next non-whitespace character.\n *\n * @param text Text to scan\n * @param startIndex Starting index of character where the scan should start.\n * @param endIndex Ending index of character where the scan should end.\n * @returns Index of next non-whitespace character (May be the same as `start` if no whitespace at\n *          that location.)\n */\nexport function consumeWhitespace(text: string, startIndex: number, endIndex: number): number {\n  while (startIndex < endIndex && text.charCodeAt(startIndex) <= CharCode.SPACE) {\n    startIndex++;\n  }\n  return startIndex;\n}\n\n/**\n * Returns index of last char in class token.\n *\n * @param text Text to scan\n * @param startIndex Starting index of character where the scan should start.\n * @param endIndex Ending index of character where the scan should end.\n * @returns Index after last char in class token.\n */\nexport function consumeClassToken(text: string, startIndex: number, endIndex: number): number {\n  while (startIndex < endIndex && text.charCodeAt(startIndex) > CharCode.SPACE) {\n    startIndex++;\n  }\n  return startIndex;\n}\n\n/**\n * Consumes all of the characters belonging to style key and token.\n *\n * @param text Text to scan\n * @param startIndex Starting index of character where the scan should start.\n * @param endIndex Ending index of character where the scan should end.\n * @returns Index after last style key character.\n */\nexport function consumeStyleKey(text: string, startIndex: number, endIndex: number): number {\n  let ch: number;\n  while (startIndex < endIndex &&\n         ((ch = text.charCodeAt(startIndex)) === CharCode.DASH || ch === CharCode.UNDERSCORE ||\n          ((ch & CharCode.UPPER_CASE) >= CharCode.A && (ch & CharCode.UPPER_CASE) <= CharCode.Z) ||\n          (ch >= CharCode.ZERO && ch <= CharCode.NINE))) {\n    startIndex++;\n  }\n  return startIndex;\n}\n\n/**\n * Consumes all whitespace and the separator `:` after the style key.\n *\n * @param text Text to scan\n * @param startIndex Starting index of character where the scan should start.\n * @param endIndex Ending index of character where the scan should end.\n * @returns Index after separator and surrounding whitespace.\n */\nexport function consumeSeparator(\n    text: string, startIndex: number, endIndex: number, separator: number): number {\n  startIndex = consumeWhitespace(text, startIndex, endIndex);\n  if (startIndex < endIndex) {\n    if (ngDevMode && text.charCodeAt(startIndex) !== separator) {\n      malformedStyleError(text, String.fromCharCode(separator), startIndex);\n    }\n    startIndex++;\n  }\n  return startIndex;\n}\n\n\n/**\n * Consumes style value honoring `url()` and `\"\"` text.\n *\n * @param text Text to scan\n * @param startIndex Starting index of character where the scan should start.\n * @param endIndex Ending index of character where the scan should end.\n * @returns Index after last style value character.\n */\nexport function consumeStyleValue(text: string, startIndex: number, endIndex: number): number {\n  let ch1 = -1;  // 1st previous character\n  let ch2 = -1;  // 2nd previous character\n  let ch3 = -1;  // 3rd previous character\n  let i = startIndex;\n  let lastChIndex = i;\n  while (i < endIndex) {\n    const ch: number = text.charCodeAt(i++);\n    if (ch === CharCode.SEMI_COLON) {\n      return lastChIndex;\n    } else if (ch === CharCode.DOUBLE_QUOTE || ch === CharCode.SINGLE_QUOTE) {\n      lastChIndex = i = consumeQuotedText(text, ch, i, endIndex);\n    } else if (\n        startIndex ===\n            i - 4 &&  // We have seen only 4 characters so far \"URL(\" (Ignore \"foo_URL()\")\n        ch3 === CharCode.U &&\n        ch2 === CharCode.R && ch1 === CharCode.L && ch === CharCode.OPEN_PAREN) {\n      lastChIndex = i = consumeQuotedText(text, CharCode.CLOSE_PAREN, i, endIndex);\n    } else if (ch > CharCode.SPACE) {\n      // if we have a non-whitespace character then capture its location\n      lastChIndex = i;\n    }\n    ch3 = ch2;\n    ch2 = ch1;\n    ch1 = ch & CharCode.UPPER_CASE;\n  }\n  return lastChIndex;\n}\n\n/**\n * Consumes all of the quoted characters.\n *\n * @param text Text to scan\n * @param quoteCharCode CharCode of either `\"` or `'` quote or `)` for `url(...)`.\n * @param startIndex Starting index of character where the scan should start.\n * @param endIndex Ending index of character where the scan should end.\n * @returns Index after quoted characters.\n */\nexport function consumeQuotedText(\n    text: string, quoteCharCode: number, startIndex: number, endIndex: number): number {\n  let ch1 = -1;  // 1st previous character\n  let index = startIndex;\n  while (index < endIndex) {\n    const ch = text.charCodeAt(index++);\n    if (ch == quoteCharCode && ch1 !== CharCode.BACK_SLASH) {\n      return index;\n    }\n    if (ch == CharCode.BACK_SLASH && ch1 === CharCode.BACK_SLASH) {\n      // two back slashes cancel each other out. For example `\"\\\\\"` should properly end the\n      // quotation. (It should not assume that the last `\"` is escaped.)\n      ch1 = 0;\n    } else {\n      ch1 = ch;\n    }\n  }\n  throw ngDevMode ? malformedStyleError(text, String.fromCharCode(quoteCharCode), endIndex) :\n                    new Error();\n}\n\nfunction malformedStyleError(text: string, expecting: string, index: number): never {\n  ngDevMode && assertEqual(typeof text === 'string', true, 'String expected here');\n  throw throwError(\n      `Malformed style at location ${index} in string '` + text.substring(0, index) + '[>>' +\n      text.substring(index, index + 1) + '<<]' + text.slice(index + 1) +\n      `'. Expecting '${expecting}'.`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SafeValue, unwrapSafeValue} from '../../sanitization/bypass';\nimport {KeyValueArray, keyValueArrayGet, keyValueArraySet} from '../../util/array_utils';\nimport {assertDefined, assertEqual, assertLessThan, assertNotEqual, throwError} from '../../util/assert';\nimport {EMPTY_ARRAY} from '../../util/empty';\nimport {concatStringsWithSpace, stringify} from '../../util/stringify';\nimport {assertFirstUpdatePass} from '../assert';\nimport {bindingUpdated} from '../bindings';\nimport {DirectiveDef} from '../interfaces/definition';\nimport {AttributeMarker, TAttributes, TNode, TNodeFlags, TNodeType} from '../interfaces/node';\nimport {Renderer} from '../interfaces/renderer';\nimport {RElement} from '../interfaces/renderer_dom';\nimport {getTStylingRangeNext, getTStylingRangeNextDuplicate, getTStylingRangePrev, getTStylingRangePrevDuplicate, TStylingKey, TStylingRange} from '../interfaces/styling';\nimport {LView, RENDERER, TData, TView} from '../interfaces/view';\nimport {applyStyling} from '../node_manipulation';\nimport {getCurrentDirectiveDef, getLView, getSelectedIndex, getTView, incrementBindingIndex} from '../state';\nimport {insertTStylingBinding} from '../styling/style_binding_list';\nimport {getLastParsedKey, getLastParsedValue, parseClassName, parseClassNameNext, parseStyle, parseStyleNext} from '../styling/styling_parser';\nimport {NO_CHANGE} from '../tokens';\nimport {getNativeByIndex} from '../util/view_utils';\n\nimport {setDirectiveInputsWhichShadowsStyling} from './property';\n\n\n/**\n * Update a style binding on an element with the provided value.\n *\n * If the style value is falsy then it will be removed from the element\n * (or assigned a different value depending if there are any styles placed\n * on the element with `styleMap` or any static styles that are\n * present from when the element was created with `styling`).\n *\n * Note that the styling element is updated as part of `stylingApply`.\n *\n * @param prop A valid CSS property.\n * @param value New value to write (`null` or an empty string to remove).\n * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n *\n * Note that this will apply the provided style value to the host element if this function is called\n * within a host binding function.\n *\n * @codeGenApi\n */\nexport function ɵɵstyleProp(\n    prop: string, value: string|number|SafeValue|undefined|null,\n    suffix?: string|null): typeof ɵɵstyleProp {\n  checkStylingProperty(prop, value, suffix, false);\n  return ɵɵstyleProp;\n}\n\n/**\n * Update a class binding on an element with the provided value.\n *\n * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n * therefore, the class binding itself must already be allocated using\n * `styling` within the creation block.\n *\n * @param prop A valid CSS class (only one).\n * @param value A true/false value which will turn the class on or off.\n *\n * Note that this will apply the provided class value to the host element if this function\n * is called within a host binding function.\n *\n * @codeGenApi\n */\nexport function ɵɵclassProp(className: string, value: boolean|undefined|null): typeof ɵɵclassProp {\n  checkStylingProperty(className, value, null, true);\n  return ɵɵclassProp;\n}\n\n\n/**\n * Update style bindings using an object literal on an element.\n *\n * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n * When styles are applied to the element they will then be updated with respect to\n * any styles/classes set via `styleProp`. If any styles are set to falsy\n * then they will be removed from the element.\n *\n * Note that the styling instruction will not be applied until `stylingApply` is called.\n *\n * @param styles A key/value style map of the styles that will be applied to the given element.\n *        Any missing styles (that have already been applied to the element beforehand) will be\n *        removed (unset) from the element's styling.\n *\n * Note that this will apply the provided styleMap value to the host element if this function\n * is called within a host binding.\n *\n * @codeGenApi\n */\nexport function ɵɵstyleMap(styles: {[styleName: string]: any}|string|undefined|null): void {\n  checkStylingMap(styleKeyValueArraySet, styleStringParser, styles, false);\n}\n\n\n/**\n * Parse text as style and add values to KeyValueArray.\n *\n * This code is pulled out to a separate function so that it can be tree shaken away if it is not\n * needed. It is only referenced from `ɵɵstyleMap`.\n *\n * @param keyValueArray KeyValueArray to add parsed values to.\n * @param text text to parse.\n */\nexport function styleStringParser(keyValueArray: KeyValueArray<any>, text: string): void {\n  for (let i = parseStyle(text); i >= 0; i = parseStyleNext(text, i)) {\n    styleKeyValueArraySet(keyValueArray, getLastParsedKey(text), getLastParsedValue(text));\n  }\n}\n\n\n/**\n * Update class bindings using an object literal or class-string on an element.\n *\n * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n * When classes are applied to the element they will then be updated with\n * respect to any styles/classes set via `classProp`. If any\n * classes are set to falsy then they will be removed from the element.\n *\n * Note that the styling instruction will not be applied until `stylingApply` is called.\n * Note that this will the provided classMap value to the host element if this function is called\n * within a host binding.\n *\n * @param classes A key/value map or string of CSS classes that will be added to the\n *        given element. Any missing classes (that have already been applied to the element\n *        beforehand) will be removed (unset) from the element's list of CSS classes.\n *\n * @codeGenApi\n */\nexport function ɵɵclassMap(classes: {[className: string]: boolean|undefined|null}|string|undefined|\n                           null): void {\n  checkStylingMap(keyValueArraySet, classStringParser, classes, true);\n}\n\n/**\n * Parse text as class and add values to KeyValueArray.\n *\n * This code is pulled out to a separate function so that it can be tree shaken away if it is not\n * needed. It is only referenced from `ɵɵclassMap`.\n *\n * @param keyValueArray KeyValueArray to add parsed values to.\n * @param text text to parse.\n */\nexport function classStringParser(keyValueArray: KeyValueArray<any>, text: string): void {\n  for (let i = parseClassName(text); i >= 0; i = parseClassNameNext(text, i)) {\n    keyValueArraySet(keyValueArray, getLastParsedKey(text), true);\n  }\n}\n\n/**\n * Common code between `ɵɵclassProp` and `ɵɵstyleProp`.\n *\n * @param prop property name.\n * @param value binding value.\n * @param suffix suffix for the property (e.g. `em` or `px`)\n * @param isClassBased `true` if `class` change (`false` if `style`)\n */\nexport function checkStylingProperty(\n    prop: string, value: any|NO_CHANGE, suffix: string|undefined|null,\n    isClassBased: boolean): void {\n  const lView = getLView();\n  const tView = getTView();\n  // Styling instructions use 2 slots per binding.\n  // 1. one for the value / TStylingKey\n  // 2. one for the intermittent-value / TStylingRange\n  const bindingIndex = incrementBindingIndex(2);\n  if (tView.firstUpdatePass) {\n    stylingFirstUpdatePass(tView, prop, bindingIndex, isClassBased);\n  }\n  if (value !== NO_CHANGE && bindingUpdated(lView, bindingIndex, value)) {\n    const tNode = tView.data[getSelectedIndex()] as TNode;\n    updateStyling(\n        tView, tNode, lView, lView[RENDERER], prop,\n        lView[bindingIndex + 1] = normalizeSuffix(value, suffix), isClassBased, bindingIndex);\n  }\n}\n\n/**\n * Common code between `ɵɵclassMap` and `ɵɵstyleMap`.\n *\n * @param keyValueArraySet (See `keyValueArraySet` in \"util/array_utils\") Gets passed in as a\n *        function so that `style` can be processed. This is done for tree shaking purposes.\n * @param stringParser Parser used to parse `value` if `string`. (Passed in as `style` and `class`\n *        have different parsers.)\n * @param value bound value from application\n * @param isClassBased `true` if `class` change (`false` if `style`)\n */\nexport function checkStylingMap(\n    keyValueArraySet: (keyValueArray: KeyValueArray<any>, key: string, value: any) => void,\n    stringParser: (styleKeyValueArray: KeyValueArray<any>, text: string) => void,\n    value: any|NO_CHANGE, isClassBased: boolean): void {\n  const tView = getTView();\n  const bindingIndex = incrementBindingIndex(2);\n  if (tView.firstUpdatePass) {\n    stylingFirstUpdatePass(tView, null, bindingIndex, isClassBased);\n  }\n  const lView = getLView();\n  if (value !== NO_CHANGE && bindingUpdated(lView, bindingIndex, value)) {\n    // `getSelectedIndex()` should be here (rather than in instruction) so that it is guarded by the\n    // if so as not to read unnecessarily.\n    const tNode = tView.data[getSelectedIndex()] as TNode;\n    if (hasStylingInputShadow(tNode, isClassBased) && !isInHostBindings(tView, bindingIndex)) {\n      if (ngDevMode) {\n        // verify that if we are shadowing then `TData` is appropriately marked so that we skip\n        // processing this binding in styling resolution.\n        const tStylingKey = tView.data[bindingIndex];\n        assertEqual(\n            Array.isArray(tStylingKey) ? tStylingKey[1] : tStylingKey, false,\n            'Styling linked list shadow input should be marked as \\'false\\'');\n      }\n      // VE does not concatenate the static portion like we are doing here.\n      // Instead VE just ignores the static completely if dynamic binding is present.\n      // Because of locality we have already set the static portion because we don't know if there\n      // is a dynamic portion until later. If we would ignore the static portion it would look like\n      // the binding has removed it. This would confuse `[ngStyle]`/`[ngClass]` to do the wrong\n      // thing as it would think that the static portion was removed. For this reason we\n      // concatenate it so that `[ngStyle]`/`[ngClass]`  can continue to work on changed.\n      let staticPrefix = isClassBased ? tNode.classesWithoutHost : tNode.stylesWithoutHost;\n      ngDevMode && isClassBased === false && staticPrefix !== null &&\n          assertEqual(\n              staticPrefix.endsWith(';'), true, 'Expecting static portion to end with \\';\\'');\n      if (staticPrefix !== null) {\n        // We want to make sure that falsy values of `value` become empty strings.\n        value = concatStringsWithSpace(staticPrefix, value ? value : '');\n      }\n      // Given `<div [style] my-dir>` such that `my-dir` has `@Input('style')`.\n      // This takes over the `[style]` binding. (Same for `[class]`)\n      setDirectiveInputsWhichShadowsStyling(tView, tNode, lView, value, isClassBased);\n    } else {\n      updateStylingMap(\n          tView, tNode, lView, lView[RENDERER], lView[bindingIndex + 1],\n          lView[bindingIndex + 1] = toStylingKeyValueArray(keyValueArraySet, stringParser, value),\n          isClassBased, bindingIndex);\n    }\n  }\n}\n\n/**\n * Determines when the binding is in `hostBindings` section\n *\n * @param tView Current `TView`\n * @param bindingIndex index of binding which we would like if it is in `hostBindings`\n */\nfunction isInHostBindings(tView: TView, bindingIndex: number): boolean {\n  // All host bindings are placed after the expando section.\n  return bindingIndex >= tView.expandoStartIndex;\n}\n\n/**\n * Collects the necessary information to insert the binding into a linked list of style bindings\n * using `insertTStylingBinding`.\n *\n * @param tView `TView` where the binding linked list will be stored.\n * @param tStylingKey Property/key of the binding.\n * @param bindingIndex Index of binding associated with the `prop`\n * @param isClassBased `true` if `class` change (`false` if `style`)\n */\nfunction stylingFirstUpdatePass(\n    tView: TView, tStylingKey: TStylingKey, bindingIndex: number, isClassBased: boolean): void {\n  ngDevMode && assertFirstUpdatePass(tView);\n  const tData = tView.data;\n  if (tData[bindingIndex + 1] === null) {\n    // The above check is necessary because we don't clear first update pass until first successful\n    // (no exception) template execution. This prevents the styling instruction from double adding\n    // itself to the list.\n    // `getSelectedIndex()` should be here (rather than in instruction) so that it is guarded by the\n    // if so as not to read unnecessarily.\n    const tNode = tData[getSelectedIndex()] as TNode;\n    ngDevMode && assertDefined(tNode, 'TNode expected');\n    const isHostBindings = isInHostBindings(tView, bindingIndex);\n    if (hasStylingInputShadow(tNode, isClassBased) && tStylingKey === null && !isHostBindings) {\n      // `tStylingKey === null` implies that we are either `[style]` or `[class]` binding.\n      // If there is a directive which uses `@Input('style')` or `@Input('class')` than\n      // we need to neutralize this binding since that directive is shadowing it.\n      // We turn this into a noop by setting the key to `false`\n      tStylingKey = false;\n    }\n    tStylingKey = wrapInStaticStylingKey(tData, tNode, tStylingKey, isClassBased);\n    insertTStylingBinding(tData, tNode, tStylingKey, bindingIndex, isHostBindings, isClassBased);\n  }\n}\n\n/**\n * Adds static styling information to the binding if applicable.\n *\n * The linked list of styles not only stores the list and keys, but also stores static styling\n * information on some of the keys. This function determines if the key should contain the styling\n * information and computes it.\n *\n * See `TStylingStatic` for more details.\n *\n * @param tData `TData` where the linked list is stored.\n * @param tNode `TNode` for which the styling is being computed.\n * @param stylingKey `TStylingKeyPrimitive` which may need to be wrapped into `TStylingKey`\n * @param isClassBased `true` if `class` (`false` if `style`)\n */\nexport function wrapInStaticStylingKey(\n    tData: TData, tNode: TNode, stylingKey: TStylingKey, isClassBased: boolean): TStylingKey {\n  const hostDirectiveDef = getCurrentDirectiveDef(tData);\n  let residual = isClassBased ? tNode.residualClasses : tNode.residualStyles;\n  if (hostDirectiveDef === null) {\n    // We are in template node.\n    // If template node already had styling instruction then it has already collected the static\n    // styling and there is no need to collect them again. We know that we are the first styling\n    // instruction because the `TNode.*Bindings` points to 0 (nothing has been inserted yet).\n    const isFirstStylingInstructionInTemplate =\n        (isClassBased ? tNode.classBindings : tNode.styleBindings) as any as number === 0;\n    if (isFirstStylingInstructionInTemplate) {\n      // It would be nice to be able to get the statics from `mergeAttrs`, however, at this point\n      // they are already merged and it would not be possible to figure which property belongs where\n      // in the priority.\n      stylingKey = collectStylingFromDirectives(null, tData, tNode, stylingKey, isClassBased);\n      stylingKey = collectStylingFromTAttrs(stylingKey, tNode.attrs, isClassBased);\n      // We know that if we have styling binding in template we can't have residual.\n      residual = null;\n    }\n  } else {\n    // We are in host binding node and there was no binding instruction in template node.\n    // This means that we need to compute the residual.\n    const directiveStylingLast = tNode.directiveStylingLast;\n    const isFirstStylingInstructionInHostBinding =\n        directiveStylingLast === -1 || tData[directiveStylingLast] !== hostDirectiveDef;\n    if (isFirstStylingInstructionInHostBinding) {\n      stylingKey =\n          collectStylingFromDirectives(hostDirectiveDef, tData, tNode, stylingKey, isClassBased);\n      if (residual === null) {\n        // - If `null` than either:\n        //    - Template styling instruction already ran and it has consumed the static\n        //      styling into its `TStylingKey` and so there is no need to update residual. Instead\n        //      we need to update the `TStylingKey` associated with the first template node\n        //      instruction. OR\n        //    - Some other styling instruction ran and determined that there are no residuals\n        let templateStylingKey = getTemplateHeadTStylingKey(tData, tNode, isClassBased);\n        if (templateStylingKey !== undefined && Array.isArray(templateStylingKey)) {\n          // Only recompute if `templateStylingKey` had static values. (If no static value found\n          // then there is nothing to do since this operation can only produce less static keys, not\n          // more.)\n          templateStylingKey = collectStylingFromDirectives(\n              null, tData, tNode, templateStylingKey[1] /* unwrap previous statics */,\n              isClassBased);\n          templateStylingKey =\n              collectStylingFromTAttrs(templateStylingKey, tNode.attrs, isClassBased);\n          setTemplateHeadTStylingKey(tData, tNode, isClassBased, templateStylingKey);\n        }\n      } else {\n        // We only need to recompute residual if it is not `null`.\n        // - If existing residual (implies there was no template styling). This means that some of\n        //   the statics may have moved from the residual to the `stylingKey` and so we have to\n        //   recompute.\n        // - If `undefined` this is the first time we are running.\n        residual = collectResidual(tData, tNode, isClassBased);\n      }\n    }\n  }\n  if (residual !== undefined) {\n    isClassBased ? (tNode.residualClasses = residual) : (tNode.residualStyles = residual);\n  }\n  return stylingKey;\n}\n\n/**\n * Retrieve the `TStylingKey` for the template styling instruction.\n *\n * This is needed since `hostBinding` styling instructions are inserted after the template\n * instruction. While the template instruction needs to update the residual in `TNode` the\n * `hostBinding` instructions need to update the `TStylingKey` of the template instruction because\n * the template instruction is downstream from the `hostBindings` instructions.\n *\n * @param tData `TData` where the linked list is stored.\n * @param tNode `TNode` for which the styling is being computed.\n * @param isClassBased `true` if `class` (`false` if `style`)\n * @return `TStylingKey` if found or `undefined` if not found.\n */\nfunction getTemplateHeadTStylingKey(tData: TData, tNode: TNode, isClassBased: boolean): TStylingKey|\n    undefined {\n  const bindings = isClassBased ? tNode.classBindings : tNode.styleBindings;\n  if (getTStylingRangeNext(bindings) === 0) {\n    // There does not seem to be a styling instruction in the `template`.\n    return undefined;\n  }\n  return tData[getTStylingRangePrev(bindings)] as TStylingKey;\n}\n\n/**\n * Update the `TStylingKey` of the first template instruction in `TNode`.\n *\n * Logically `hostBindings` styling instructions are of lower priority than that of the template.\n * However, they execute after the template styling instructions. This means that they get inserted\n * in front of the template styling instructions.\n *\n * If we have a template styling instruction and a new `hostBindings` styling instruction is\n * executed it means that it may need to steal static fields from the template instruction. This\n * method allows us to update the first template instruction `TStylingKey` with a new value.\n *\n * Assume:\n * ```\n * <div my-dir style=\"color: red\" [style.color]=\"tmplExp\"></div>\n *\n * @Directive({\n *   host: {\n *     'style': 'width: 100px',\n *     '[style.color]': 'dirExp',\n *   }\n * })\n * class MyDir {}\n * ```\n *\n * when `[style.color]=\"tmplExp\"` executes it creates this data structure.\n * ```\n *  ['', 'color', 'color', 'red', 'width', '100px'],\n * ```\n *\n * The reason for this is that the template instruction does not know if there are styling\n * instructions and must assume that there are none and must collect all of the static styling.\n * (both\n * `color' and 'width`)\n *\n * When `'[style.color]': 'dirExp',` executes we need to insert a new data into the linked list.\n * ```\n *  ['', 'color', 'width', '100px'],  // newly inserted\n *  ['', 'color', 'color', 'red', 'width', '100px'], // this is wrong\n * ```\n *\n * Notice that the template statics is now wrong as it incorrectly contains `width` so we need to\n * update it like so:\n * ```\n *  ['', 'color', 'width', '100px'],\n *  ['', 'color', 'color', 'red'],    // UPDATE\n * ```\n *\n * @param tData `TData` where the linked list is stored.\n * @param tNode `TNode` for which the styling is being computed.\n * @param isClassBased `true` if `class` (`false` if `style`)\n * @param tStylingKey New `TStylingKey` which is replacing the old one.\n */\nfunction setTemplateHeadTStylingKey(\n    tData: TData, tNode: TNode, isClassBased: boolean, tStylingKey: TStylingKey): void {\n  const bindings = isClassBased ? tNode.classBindings : tNode.styleBindings;\n  ngDevMode &&\n      assertNotEqual(\n          getTStylingRangeNext(bindings), 0,\n          'Expecting to have at least one template styling binding.');\n  tData[getTStylingRangePrev(bindings)] = tStylingKey;\n}\n\n/**\n * Collect all static values after the current `TNode.directiveStylingLast` index.\n *\n * Collect the remaining styling information which has not yet been collected by an existing\n * styling instruction.\n *\n * @param tData `TData` where the `DirectiveDefs` are stored.\n * @param tNode `TNode` which contains the directive range.\n * @param isClassBased `true` if `class` (`false` if `style`)\n */\nfunction collectResidual(tData: TData, tNode: TNode, isClassBased: boolean): KeyValueArray<any>|\n    null {\n  let residual: KeyValueArray<any>|null|undefined = undefined;\n  const directiveEnd = tNode.directiveEnd;\n  ngDevMode &&\n      assertNotEqual(\n          tNode.directiveStylingLast, -1,\n          'By the time this function gets called at least one hostBindings-node styling instruction must have executed.');\n  // We add `1 + tNode.directiveStart` because we need to skip the current directive (as we are\n  // collecting things after the last `hostBindings` directive which had a styling instruction.)\n  for (let i = 1 + tNode.directiveStylingLast; i < directiveEnd; i++) {\n    const attrs = (tData[i] as DirectiveDef<any>).hostAttrs;\n    residual = collectStylingFromTAttrs(residual, attrs, isClassBased) as KeyValueArray<any>| null;\n  }\n  return collectStylingFromTAttrs(residual, tNode.attrs, isClassBased) as KeyValueArray<any>| null;\n}\n\n/**\n * Collect the static styling information with lower priority than `hostDirectiveDef`.\n *\n * (This is opposite of residual styling.)\n *\n * @param hostDirectiveDef `DirectiveDef` for which we want to collect lower priority static\n *        styling. (Or `null` if template styling)\n * @param tData `TData` where the linked list is stored.\n * @param tNode `TNode` for which the styling is being computed.\n * @param stylingKey Existing `TStylingKey` to update or wrap.\n * @param isClassBased `true` if `class` (`false` if `style`)\n */\nfunction collectStylingFromDirectives(\n    hostDirectiveDef: DirectiveDef<any>|null, tData: TData, tNode: TNode, stylingKey: TStylingKey,\n    isClassBased: boolean): TStylingKey {\n  // We need to loop because there can be directives which have `hostAttrs` but don't have\n  // `hostBindings` so this loop catches up to the current directive..\n  let currentDirective: DirectiveDef<any>|null = null;\n  const directiveEnd = tNode.directiveEnd;\n  let directiveStylingLast = tNode.directiveStylingLast;\n  if (directiveStylingLast === -1) {\n    directiveStylingLast = tNode.directiveStart;\n  } else {\n    directiveStylingLast++;\n  }\n  while (directiveStylingLast < directiveEnd) {\n    currentDirective = tData[directiveStylingLast] as DirectiveDef<any>;\n    ngDevMode && assertDefined(currentDirective, 'expected to be defined');\n    stylingKey = collectStylingFromTAttrs(stylingKey, currentDirective.hostAttrs, isClassBased);\n    if (currentDirective === hostDirectiveDef) break;\n    directiveStylingLast++;\n  }\n  if (hostDirectiveDef !== null) {\n    // we only advance the styling cursor if we are collecting data from host bindings.\n    // Template executes before host bindings and so if we would update the index,\n    // host bindings would not get their statics.\n    tNode.directiveStylingLast = directiveStylingLast;\n  }\n  return stylingKey;\n}\n\n/**\n * Convert `TAttrs` into `TStylingStatic`.\n *\n * @param stylingKey existing `TStylingKey` to update or wrap.\n * @param attrs `TAttributes` to process.\n * @param isClassBased `true` if `class` (`false` if `style`)\n */\nfunction collectStylingFromTAttrs(\n    stylingKey: TStylingKey|undefined, attrs: TAttributes|null,\n    isClassBased: boolean): TStylingKey {\n  const desiredMarker = isClassBased ? AttributeMarker.Classes : AttributeMarker.Styles;\n  let currentMarker = AttributeMarker.ImplicitAttributes;\n  if (attrs !== null) {\n    for (let i = 0; i < attrs.length; i++) {\n      const item = attrs[i] as number | string;\n      if (typeof item === 'number') {\n        currentMarker = item;\n      } else {\n        if (currentMarker === desiredMarker) {\n          if (!Array.isArray(stylingKey)) {\n            stylingKey = stylingKey === undefined ? [] : ['', stylingKey] as any;\n          }\n          keyValueArraySet(\n              stylingKey as KeyValueArray<any>, item, isClassBased ? true : attrs[++i]);\n        }\n      }\n    }\n  }\n  return stylingKey === undefined ? null : stylingKey;\n}\n\n/**\n * Convert user input to `KeyValueArray`.\n *\n * This function takes user input which could be `string`, Object literal, or iterable and converts\n * it into a consistent representation. The output of this is `KeyValueArray` (which is an array\n * where\n * even indexes contain keys and odd indexes contain values for those keys).\n *\n * The advantage of converting to `KeyValueArray` is that we can perform diff in an input\n * independent\n * way.\n * (ie we can compare `foo bar` to `['bar', 'baz'] and determine a set of changes which need to be\n * applied)\n *\n * The fact that `KeyValueArray` is sorted is very important because it allows us to compute the\n * difference in linear fashion without the need to allocate any additional data.\n *\n * For example if we kept this as a `Map` we would have to iterate over previous `Map` to determine\n * which values need to be deleted, over the new `Map` to determine additions, and we would have to\n * keep additional `Map` to keep track of duplicates or items which have not yet been visited.\n *\n * @param keyValueArraySet (See `keyValueArraySet` in \"util/array_utils\") Gets passed in as a\n *        function so that `style` can be processed. This is done\n *        for tree shaking purposes.\n * @param stringParser The parser is passed in so that it will be tree shakable. See\n *        `styleStringParser` and `classStringParser`\n * @param value The value to parse/convert to `KeyValueArray`\n */\nexport function toStylingKeyValueArray(\n    keyValueArraySet: (keyValueArray: KeyValueArray<any>, key: string, value: any) => void,\n    stringParser: (styleKeyValueArray: KeyValueArray<any>, text: string) => void,\n    value: string|string[]|{[key: string]: any}|SafeValue|null|undefined): KeyValueArray<any> {\n  if (value == null /*|| value === undefined */ || value === '') return EMPTY_ARRAY as any;\n  const styleKeyValueArray: KeyValueArray<any> = [] as any;\n  const unwrappedValue = unwrapSafeValue(value) as string | string[] | {[key: string]: any};\n  if (Array.isArray(unwrappedValue)) {\n    for (let i = 0; i < unwrappedValue.length; i++) {\n      keyValueArraySet(styleKeyValueArray, unwrappedValue[i], true);\n    }\n  } else if (typeof unwrappedValue === 'object') {\n    for (const key in unwrappedValue) {\n      if (unwrappedValue.hasOwnProperty(key)) {\n        keyValueArraySet(styleKeyValueArray, key, unwrappedValue[key]);\n      }\n    }\n  } else if (typeof unwrappedValue === 'string') {\n    stringParser(styleKeyValueArray, unwrappedValue);\n  } else {\n    ngDevMode &&\n        throwError('Unsupported styling type ' + typeof unwrappedValue + ': ' + unwrappedValue);\n  }\n  return styleKeyValueArray;\n}\n\n/**\n * Set a `value` for a `key`.\n *\n * See: `keyValueArraySet` for details\n *\n * @param keyValueArray KeyValueArray to add to.\n * @param key Style key to add.\n * @param value The value to set.\n */\nexport function styleKeyValueArraySet(keyValueArray: KeyValueArray<any>, key: string, value: any) {\n  keyValueArraySet(keyValueArray, key, unwrapSafeValue(value));\n}\n\n/**\n * Update map based styling.\n *\n * Map based styling could be anything which contains more than one binding. For example `string`,\n * or object literal. Dealing with all of these types would complicate the logic so\n * instead this function expects that the complex input is first converted into normalized\n * `KeyValueArray`. The advantage of normalization is that we get the values sorted, which makes it\n * very cheap to compute deltas between the previous and current value.\n *\n * @param tView Associated `TView.data` contains the linked list of binding priorities.\n * @param tNode `TNode` where the binding is located.\n * @param lView `LView` contains the values associated with other styling binding at this `TNode`.\n * @param renderer Renderer to use if any updates.\n * @param oldKeyValueArray Previous value represented as `KeyValueArray`\n * @param newKeyValueArray Current value represented as `KeyValueArray`\n * @param isClassBased `true` if `class` (`false` if `style`)\n * @param bindingIndex Binding index of the binding.\n */\nfunction updateStylingMap(\n    tView: TView, tNode: TNode, lView: LView, renderer: Renderer,\n    oldKeyValueArray: KeyValueArray<any>, newKeyValueArray: KeyValueArray<any>,\n    isClassBased: boolean, bindingIndex: number) {\n  if (oldKeyValueArray as KeyValueArray<any>| NO_CHANGE === NO_CHANGE) {\n    // On first execution the oldKeyValueArray is NO_CHANGE => treat it as empty KeyValueArray.\n    oldKeyValueArray = EMPTY_ARRAY as any;\n  }\n  let oldIndex = 0;\n  let newIndex = 0;\n  let oldKey: string|null = 0 < oldKeyValueArray.length ? oldKeyValueArray[0] : null;\n  let newKey: string|null = 0 < newKeyValueArray.length ? newKeyValueArray[0] : null;\n  while (oldKey !== null || newKey !== null) {\n    ngDevMode && assertLessThan(oldIndex, 999, 'Are we stuck in infinite loop?');\n    ngDevMode && assertLessThan(newIndex, 999, 'Are we stuck in infinite loop?');\n    const oldValue =\n        oldIndex < oldKeyValueArray.length ? oldKeyValueArray[oldIndex + 1] : undefined;\n    const newValue =\n        newIndex < newKeyValueArray.length ? newKeyValueArray[newIndex + 1] : undefined;\n    let setKey: string|null = null;\n    let setValue: any = undefined;\n    if (oldKey === newKey) {\n      // UPDATE: Keys are equal => new value is overwriting old value.\n      oldIndex += 2;\n      newIndex += 2;\n      if (oldValue !== newValue) {\n        setKey = newKey;\n        setValue = newValue;\n      }\n    } else if (newKey === null || oldKey !== null && oldKey < newKey!) {\n      // DELETE: oldKey key is missing or we did not find the oldKey in the newValue\n      // (because the keyValueArray is sorted and `newKey` is found later alphabetically).\n      // `\"background\" < \"color\"` so we need to delete `\"background\"` because it is not found in the\n      // new array.\n      oldIndex += 2;\n      setKey = oldKey;\n    } else {\n      // CREATE: newKey's is earlier alphabetically than oldKey's (or no oldKey) => we have new key.\n      // `\"color\" > \"background\"` so we need to add `color` because it is in new array but not in\n      // old array.\n      ngDevMode && assertDefined(newKey, 'Expecting to have a valid key');\n      newIndex += 2;\n      setKey = newKey;\n      setValue = newValue;\n    }\n    if (setKey !== null) {\n      updateStyling(tView, tNode, lView, renderer, setKey, setValue, isClassBased, bindingIndex);\n    }\n    oldKey = oldIndex < oldKeyValueArray.length ? oldKeyValueArray[oldIndex] : null;\n    newKey = newIndex < newKeyValueArray.length ? newKeyValueArray[newIndex] : null;\n  }\n}\n\n/**\n * Update a simple (property name) styling.\n *\n * This function takes `prop` and updates the DOM to that value. The function takes the binding\n * value as well as binding priority into consideration to determine which value should be written\n * to DOM. (For example it may be determined that there is a higher priority overwrite which blocks\n * the DOM write, or if the value goes to `undefined` a lower priority overwrite may be consulted.)\n *\n * @param tView Associated `TView.data` contains the linked list of binding priorities.\n * @param tNode `TNode` where the binding is located.\n * @param lView `LView` contains the values associated with other styling binding at this `TNode`.\n * @param renderer Renderer to use if any updates.\n * @param prop Either style property name or a class name.\n * @param value Either style value for `prop` or `true`/`false` if `prop` is class.\n * @param isClassBased `true` if `class` (`false` if `style`)\n * @param bindingIndex Binding index of the binding.\n */\nfunction updateStyling(\n    tView: TView, tNode: TNode, lView: LView, renderer: Renderer, prop: string,\n    value: string|undefined|null|boolean, isClassBased: boolean, bindingIndex: number) {\n  if (!(tNode.type & TNodeType.AnyRNode)) {\n    // It is possible to have styling on non-elements (such as ng-container).\n    // This is rare, but it does happen. In such a case, just ignore the binding.\n    return;\n  }\n  const tData = tView.data;\n  const tRange = tData[bindingIndex + 1] as TStylingRange;\n  const higherPriorityValue = getTStylingRangeNextDuplicate(tRange) ?\n      findStylingValue(tData, tNode, lView, prop, getTStylingRangeNext(tRange), isClassBased) :\n      undefined;\n  if (!isStylingValuePresent(higherPriorityValue)) {\n    // We don't have a next duplicate, or we did not find a duplicate value.\n    if (!isStylingValuePresent(value)) {\n      // We should delete current value or restore to lower priority value.\n      if (getTStylingRangePrevDuplicate(tRange)) {\n        // We have a possible prev duplicate, let's retrieve it.\n        value = findStylingValue(tData, null, lView, prop, bindingIndex, isClassBased);\n      }\n    }\n    const rNode = getNativeByIndex(getSelectedIndex(), lView) as RElement;\n    applyStyling(renderer, isClassBased, rNode, prop, value);\n  }\n}\n\n/**\n * Search for styling value with higher priority which is overwriting current value, or a\n * value of lower priority to which we should fall back if the value is `undefined`.\n *\n * When value is being applied at a location, related values need to be consulted.\n * - If there is a higher priority binding, we should be using that one instead.\n *   For example `<div  [style]=\"{color:exp1}\" [style.color]=\"exp2\">` change to `exp1`\n *   requires that we check `exp2` to see if it is set to value other than `undefined`.\n * - If there is a lower priority binding and we are changing to `undefined`\n *   For example `<div  [style]=\"{color:exp1}\" [style.color]=\"exp2\">` change to `exp2` to\n *   `undefined` requires that we check `exp1` (and static values) and use that as new value.\n *\n * NOTE: The styling stores two values.\n * 1. The raw value which came from the application is stored at `index + 0` location. (This value\n *    is used for dirty checking).\n * 2. The normalized value is stored at `index + 1`.\n *\n * @param tData `TData` used for traversing the priority.\n * @param tNode `TNode` to use for resolving static styling. Also controls search direction.\n *   - `TNode` search next and quit as soon as `isStylingValuePresent(value)` is true.\n *      If no value found consult `tNode.residualStyle`/`tNode.residualClass` for default value.\n *   - `null` search prev and go all the way to end. Return last value where\n *     `isStylingValuePresent(value)` is true.\n * @param lView `LView` used for retrieving the actual values.\n * @param prop Property which we are interested in.\n * @param index Starting index in the linked list of styling bindings where the search should start.\n * @param isClassBased `true` if `class` (`false` if `style`)\n */\nfunction findStylingValue(\n    tData: TData, tNode: TNode|null, lView: LView, prop: string, index: number,\n    isClassBased: boolean): any {\n  // `TNode` to use for resolving static styling. Also controls search direction.\n  //   - `TNode` search next and quit as soon as `isStylingValuePresent(value)` is true.\n  //      If no value found consult `tNode.residualStyle`/`tNode.residualClass` for default value.\n  //   - `null` search prev and go all the way to end. Return last value where\n  //     `isStylingValuePresent(value)` is true.\n  const isPrevDirection = tNode === null;\n  let value: any = undefined;\n  while (index > 0) {\n    const rawKey = tData[index] as TStylingKey;\n    const containsStatics = Array.isArray(rawKey);\n    // Unwrap the key if we contain static values.\n    const key = containsStatics ? (rawKey as string[])[1] : rawKey;\n    const isStylingMap = key === null;\n    let valueAtLViewIndex = lView[index + 1];\n    if (valueAtLViewIndex === NO_CHANGE) {\n      // In firstUpdatePass the styling instructions create a linked list of styling.\n      // On subsequent passes it is possible for a styling instruction to try to read a binding\n      // which\n      // has not yet executed. In that case we will find `NO_CHANGE` and we should assume that\n      // we have `undefined` (or empty array in case of styling-map instruction) instead. This\n      // allows the resolution to apply the value (which may later be overwritten when the\n      // binding actually executes.)\n      valueAtLViewIndex = isStylingMap ? EMPTY_ARRAY : undefined;\n    }\n    let currentValue = isStylingMap ? keyValueArrayGet(valueAtLViewIndex, prop) :\n                                      (key === prop ? valueAtLViewIndex : undefined);\n    if (containsStatics && !isStylingValuePresent(currentValue)) {\n      currentValue = keyValueArrayGet(rawKey as KeyValueArray<any>, prop);\n    }\n    if (isStylingValuePresent(currentValue)) {\n      value = currentValue;\n      if (isPrevDirection) {\n        return value;\n      }\n    }\n    const tRange = tData[index + 1] as TStylingRange;\n    index = isPrevDirection ? getTStylingRangePrev(tRange) : getTStylingRangeNext(tRange);\n  }\n  if (tNode !== null) {\n    // in case where we are going in next direction AND we did not find anything, we need to\n    // consult residual styling\n    let residual = isClassBased ? tNode.residualClasses : tNode.residualStyles;\n    if (residual != null /** OR residual !=== undefined */) {\n      value = keyValueArrayGet(residual!, prop);\n    }\n  }\n  return value;\n}\n\n/**\n * Determines if the binding value should be used (or if the value is 'undefined' and hence priority\n * resolution should be used.)\n *\n * @param value Binding style value.\n */\nfunction isStylingValuePresent(value: any): boolean {\n  // Currently only `undefined` value is considered non-binding. That is `undefined` says I don't\n  // have an opinion as to what this binding should be and you should consult other bindings by\n  // priority to determine the valid value.\n  // This is extracted into a single function so that we have a single place to control this.\n  return value !== undefined;\n}\n\n/**\n * Normalizes and/or adds a suffix to the value.\n *\n * If value is `null`/`undefined` no suffix is added\n * @param value\n * @param suffix\n */\nfunction normalizeSuffix(value: any, suffix: string|undefined|null): string|null|undefined|boolean {\n  if (value == null /** || value === undefined */) {\n    // do nothing\n  } else if (typeof suffix === 'string') {\n    value = value + suffix;\n  } else if (typeof value === 'object') {\n    value = stringify(unwrapSafeValue(value));\n  }\n  return value;\n}\n\n\n/**\n * Tests if the `TNode` has input shadow.\n *\n * An input shadow is when a directive steals (shadows) the input by using `@Input('style')` or\n * `@Input('class')` as input.\n *\n * @param tNode `TNode` which we would like to see if it has shadow.\n * @param isClassBased `true` if `class` (`false` if `style`)\n */\nexport function hasStylingInputShadow(tNode: TNode, isClassBased: boolean) {\n  return (tNode.flags & (isClassBased ? TNodeFlags.hasClassInput : TNodeFlags.hasStyleInput)) !== 0;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {assertEqual, assertIndexInRange} from '../../util/assert';\nimport {TElementNode, TNodeType} from '../interfaces/node';\nimport {HEADER_OFFSET, RENDERER, T_HOST} from '../interfaces/view';\nimport {appendChild, createTextNode} from '../node_manipulation';\nimport {getBindingIndex, getLView, getTView, setCurrentTNode} from '../state';\n\nimport {getOrCreateTNode} from './shared';\n\n\n\n/**\n * Create static text node\n *\n * @param index Index of the node in the data array\n * @param value Static string value to write.\n *\n * @codeGenApi\n */\nexport function ɵɵtext(index: number, value: string = ''): void {\n  const lView = getLView();\n  const tView = getTView();\n  const adjustedIndex = index + HEADER_OFFSET;\n\n  ngDevMode &&\n      assertEqual(\n          getBindingIndex(), tView.bindingStartIndex,\n          'text nodes should be created before any bindings');\n  ngDevMode && assertIndexInRange(lView, adjustedIndex);\n\n  const tNode = tView.firstCreatePass ?\n      getOrCreateTNode(tView, adjustedIndex, TNodeType.Text, value, null) :\n      tView.data[adjustedIndex] as TElementNode;\n\n  const textNative = lView[adjustedIndex] = createTextNode(lView[RENDERER], value);\n  appendChild(tView, lView, textNative, tNode);\n\n  // Text nodes are self closing.\n  setCurrentTNode(tNode, false);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {getLView, getSelectedIndex} from '../state';\nimport {NO_CHANGE} from '../tokens';\n\nimport {interpolation1, interpolation2, interpolation3, interpolation4, interpolation5, interpolation6, interpolation7, interpolation8, interpolationV} from './interpolation';\nimport {textBindingInternal} from './shared';\n\n\n/**\n *\n * Update text content with a lone bound value\n *\n * Used when a text node has 1 interpolated value in it, an no additional text\n * surrounds that interpolated value:\n *\n * ```html\n * <div>{{v0}}</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵtextInterpolate(v0);\n * ```\n * @returns itself, so that it may be chained.\n * @see textInterpolateV\n * @codeGenApi\n */\nexport function ɵɵtextInterpolate(v0: any): typeof ɵɵtextInterpolate {\n  ɵɵtextInterpolate1('', v0, '');\n  return ɵɵtextInterpolate;\n}\n\n\n/**\n *\n * Update text content with single bound value surrounded by other text.\n *\n * Used when a text node has 1 interpolated value in it:\n *\n * ```html\n * <div>prefix{{v0}}suffix</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n * ```\n * @returns itself, so that it may be chained.\n * @see textInterpolateV\n * @codeGenApi\n */\nexport function ɵɵtextInterpolate1(\n    prefix: string, v0: any, suffix: string): typeof ɵɵtextInterpolate1 {\n  const lView = getLView();\n  const interpolated = interpolation1(lView, prefix, v0, suffix);\n  if (interpolated !== NO_CHANGE) {\n    textBindingInternal(lView, getSelectedIndex(), interpolated as string);\n  }\n  return ɵɵtextInterpolate1;\n}\n\n/**\n *\n * Update text content with 2 bound values surrounded by other text.\n *\n * Used when a text node has 2 interpolated values in it:\n *\n * ```html\n * <div>prefix{{v0}}-{{v1}}suffix</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n * ```\n * @returns itself, so that it may be chained.\n * @see textInterpolateV\n * @codeGenApi\n */\nexport function ɵɵtextInterpolate2(\n    prefix: string, v0: any, i0: string, v1: any, suffix: string): typeof ɵɵtextInterpolate2 {\n  const lView = getLView();\n  const interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n  if (interpolated !== NO_CHANGE) {\n    textBindingInternal(lView, getSelectedIndex(), interpolated as string);\n  }\n  return ɵɵtextInterpolate2;\n}\n\n/**\n *\n * Update text content with 3 bound values surrounded by other text.\n *\n * Used when a text node has 3 interpolated values in it:\n *\n * ```html\n * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵtextInterpolate3(\n * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n * ```\n * @returns itself, so that it may be chained.\n * @see textInterpolateV\n * @codeGenApi\n */\nexport function ɵɵtextInterpolate3(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any,\n    suffix: string): typeof ɵɵtextInterpolate3 {\n  const lView = getLView();\n  const interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n  if (interpolated !== NO_CHANGE) {\n    textBindingInternal(lView, getSelectedIndex(), interpolated as string);\n  }\n  return ɵɵtextInterpolate3;\n}\n\n/**\n *\n * Update text content with 4 bound values surrounded by other text.\n *\n * Used when a text node has 4 interpolated values in it:\n *\n * ```html\n * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵtextInterpolate4(\n * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n * ```\n * @returns itself, so that it may be chained.\n * @see ɵɵtextInterpolateV\n * @codeGenApi\n */\nexport function ɵɵtextInterpolate4(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    suffix: string): typeof ɵɵtextInterpolate4 {\n  const lView = getLView();\n  const interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n  if (interpolated !== NO_CHANGE) {\n    textBindingInternal(lView, getSelectedIndex(), interpolated as string);\n  }\n  return ɵɵtextInterpolate4;\n}\n\n/**\n *\n * Update text content with 5 bound values surrounded by other text.\n *\n * Used when a text node has 5 interpolated values in it:\n *\n * ```html\n * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵtextInterpolate5(\n * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n * ```\n * @returns itself, so that it may be chained.\n * @see textInterpolateV\n * @codeGenApi\n */\nexport function ɵɵtextInterpolate5(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    i3: string, v4: any, suffix: string): typeof ɵɵtextInterpolate5 {\n  const lView = getLView();\n  const interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n  if (interpolated !== NO_CHANGE) {\n    textBindingInternal(lView, getSelectedIndex(), interpolated as string);\n  }\n  return ɵɵtextInterpolate5;\n}\n\n/**\n *\n * Update text content with 6 bound values surrounded by other text.\n *\n * Used when a text node has 6 interpolated values in it:\n *\n * ```html\n * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵtextInterpolate6(\n *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n * ```\n *\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change. @returns itself, so that it may be chained.\n * @see textInterpolateV\n * @codeGenApi\n */\nexport function ɵɵtextInterpolate6(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    i3: string, v4: any, i4: string, v5: any, suffix: string): typeof ɵɵtextInterpolate6 {\n  const lView = getLView();\n  const interpolated =\n      interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n  if (interpolated !== NO_CHANGE) {\n    textBindingInternal(lView, getSelectedIndex(), interpolated as string);\n  }\n  return ɵɵtextInterpolate6;\n}\n\n/**\n *\n * Update text content with 7 bound values surrounded by other text.\n *\n * Used when a text node has 7 interpolated values in it:\n *\n * ```html\n * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵtextInterpolate7(\n *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n * ```\n * @returns itself, so that it may be chained.\n * @see textInterpolateV\n * @codeGenApi\n */\nexport function ɵɵtextInterpolate7(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    i3: string, v4: any, i4: string, v5: any, i5: string, v6: any,\n    suffix: string): typeof ɵɵtextInterpolate7 {\n  const lView = getLView();\n  const interpolated =\n      interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n  if (interpolated !== NO_CHANGE) {\n    textBindingInternal(lView, getSelectedIndex(), interpolated as string);\n  }\n  return ɵɵtextInterpolate7;\n}\n\n/**\n *\n * Update text content with 8 bound values surrounded by other text.\n *\n * Used when a text node has 8 interpolated values in it:\n *\n * ```html\n * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵtextInterpolate8(\n *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n * ```\n * @returns itself, so that it may be chained.\n * @see textInterpolateV\n * @codeGenApi\n */\nexport function ɵɵtextInterpolate8(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    i3: string, v4: any, i4: string, v5: any, i5: string, v6: any, i6: string, v7: any,\n    suffix: string): typeof ɵɵtextInterpolate8 {\n  const lView = getLView();\n  const interpolated = interpolation8(\n      lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n  if (interpolated !== NO_CHANGE) {\n    textBindingInternal(lView, getSelectedIndex(), interpolated as string);\n  }\n  return ɵɵtextInterpolate8;\n}\n\n/**\n * Update text content with 9 or more bound values other surrounded by text.\n *\n * Used when the number of interpolated values exceeds 8.\n *\n * ```html\n * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵtextInterpolateV(\n *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n *  'suffix']);\n * ```\n *.\n * @param values The collection of values and the strings in between those values, beginning with\n * a string prefix and ending with a string suffix.\n * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n *\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nexport function ɵɵtextInterpolateV(values: any[]): typeof ɵɵtextInterpolateV {\n  const lView = getLView();\n  const interpolated = interpolationV(lView, values);\n  if (interpolated !== NO_CHANGE) {\n    textBindingInternal(lView, getSelectedIndex(), interpolated as string);\n  }\n  return ɵɵtextInterpolateV;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {keyValueArraySet} from '../../util/array_utils';\nimport {getLView} from '../state';\nimport {interpolation1, interpolation2, interpolation3, interpolation4, interpolation5, interpolation6, interpolation7, interpolation8, interpolationV} from './interpolation';\nimport {checkStylingMap, classStringParser} from './styling';\n\n\n\n/**\n *\n * Update an interpolated class on an element with single bound value surrounded by text.\n *\n * Used when the value passed to a property has 1 interpolated value in it:\n *\n * ```html\n * <div class=\"prefix{{v0}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nexport function ɵɵclassMapInterpolate1(prefix: string, v0: any, suffix: string): void {\n  const lView = getLView();\n  const interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n  checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n}\n\n/**\n *\n * Update an interpolated class on an element with 2 bound values surrounded by text.\n *\n * Used when the value passed to a property has 2 interpolated values in it:\n *\n * ```html\n * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nexport function ɵɵclassMapInterpolate2(\n    prefix: string, v0: any, i0: string, v1: any, suffix: string): void {\n  const lView = getLView();\n  const interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n  checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n}\n\n/**\n *\n * Update an interpolated class on an element with 3 bound values surrounded by text.\n *\n * Used when the value passed to a property has 3 interpolated values in it:\n *\n * ```html\n * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵclassMapInterpolate3(\n * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nexport function ɵɵclassMapInterpolate3(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, suffix: string): void {\n  const lView = getLView();\n  const interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n  checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n}\n\n/**\n *\n * Update an interpolated class on an element with 4 bound values surrounded by text.\n *\n * Used when the value passed to a property has 4 interpolated values in it:\n *\n * ```html\n * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵclassMapInterpolate4(\n * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nexport function ɵɵclassMapInterpolate4(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    suffix: string): void {\n  const lView = getLView();\n  const interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n  checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n}\n\n/**\n *\n * Update an interpolated class on an element with 5 bound values surrounded by text.\n *\n * Used when the value passed to a property has 5 interpolated values in it:\n *\n * ```html\n * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵclassMapInterpolate5(\n * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nexport function ɵɵclassMapInterpolate5(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    i3: string, v4: any, suffix: string): void {\n  const lView = getLView();\n  const interpolatedValue =\n      interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n  checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n}\n\n/**\n *\n * Update an interpolated class on an element with 6 bound values surrounded by text.\n *\n * Used when the value passed to a property has 6 interpolated values in it:\n *\n * ```html\n * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵclassMapInterpolate6(\n *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nexport function ɵɵclassMapInterpolate6(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    i3: string, v4: any, i4: string, v5: any, suffix: string): void {\n  const lView = getLView();\n  const interpolatedValue =\n      interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n  checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n}\n\n/**\n *\n * Update an interpolated class on an element with 7 bound values surrounded by text.\n *\n * Used when the value passed to a property has 7 interpolated values in it:\n *\n * ```html\n * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵclassMapInterpolate7(\n *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param i5 Static value used for concatenation only.\n * @param v6 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nexport function ɵɵclassMapInterpolate7(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    i3: string, v4: any, i4: string, v5: any, i5: string, v6: any, suffix: string): void {\n  const lView = getLView();\n  const interpolatedValue =\n      interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n  checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n}\n\n/**\n *\n * Update an interpolated class on an element with 8 bound values surrounded by text.\n *\n * Used when the value passed to a property has 8 interpolated values in it:\n *\n * ```html\n * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵclassMapInterpolate8(\n *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param i5 Static value used for concatenation only.\n * @param v6 Value checked for change.\n * @param i6 Static value used for concatenation only.\n * @param v7 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nexport function ɵɵclassMapInterpolate8(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    i3: string, v4: any, i4: string, v5: any, i5: string, v6: any, i6: string, v7: any,\n    suffix: string): void {\n  const lView = getLView();\n  const interpolatedValue = interpolation8(\n      lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n  checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n}\n\n/**\n * Update an interpolated class on an element with 9 or more bound values surrounded by text.\n *\n * Used when the number of interpolated values exceeds 8.\n *\n * ```html\n * <div\n *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵclassMapInterpolateV(\n *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n *  'suffix']);\n * ```\n *.\n * @param values The collection of values and the strings in-between those values, beginning with\n * a string prefix and ending with a string suffix.\n * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n * @codeGenApi\n */\nexport function ɵɵclassMapInterpolateV(values: any[]): void {\n  const lView = getLView();\n  const interpolatedValue = interpolationV(lView, values);\n  checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getLView} from '../state';\nimport {interpolation1, interpolation2, interpolation3, interpolation4, interpolation5, interpolation6, interpolation7, interpolation8, interpolationV} from './interpolation';\nimport {ɵɵstyleMap} from './styling';\n\n\n/**\n *\n * Update an interpolated style on an element with single bound value surrounded by text.\n *\n * Used when the value passed to a property has 1 interpolated value in it:\n *\n * ```html\n * <div style=\"key: {{v0}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstyleMapInterpolate1('key: ', v0, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nexport function ɵɵstyleMapInterpolate1(prefix: string, v0: any, suffix: string): void {\n  const lView = getLView();\n  const interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n  ɵɵstyleMap(interpolatedValue);\n}\n\n/**\n *\n * Update an interpolated style on an element with 2 bound values surrounded by text.\n *\n * Used when the value passed to a property has 2 interpolated values in it:\n *\n * ```html\n * <div style=\"key: {{v0}}; key1: {{v1}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstyleMapInterpolate2('key: ', v0, '; key1: ', v1, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nexport function ɵɵstyleMapInterpolate2(\n    prefix: string, v0: any, i0: string, v1: any, suffix: string): void {\n  const lView = getLView();\n  const interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n  ɵɵstyleMap(interpolatedValue);\n}\n\n/**\n *\n * Update an interpolated style on an element with 3 bound values surrounded by text.\n *\n * Used when the value passed to a property has 3 interpolated values in it:\n *\n * ```html\n * <div style=\"key: {{v0}}; key2: {{v1}}; key2: {{v2}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstyleMapInterpolate3(\n *     'key: ', v0, '; key1: ', v1, '; key2: ', v2, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nexport function ɵɵstyleMapInterpolate3(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, suffix: string): void {\n  const lView = getLView();\n  const interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n  ɵɵstyleMap(interpolatedValue);\n}\n\n/**\n *\n * Update an interpolated style on an element with 4 bound values surrounded by text.\n *\n * Used when the value passed to a property has 4 interpolated values in it:\n *\n * ```html\n * <div style=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstyleMapInterpolate4(\n *     'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nexport function ɵɵstyleMapInterpolate4(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    suffix: string): void {\n  const lView = getLView();\n  const interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n  ɵɵstyleMap(interpolatedValue);\n}\n\n/**\n *\n * Update an interpolated style on an element with 5 bound values surrounded by text.\n *\n * Used when the value passed to a property has 5 interpolated values in it:\n *\n * ```html\n * <div style=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstyleMapInterpolate5(\n *     'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nexport function ɵɵstyleMapInterpolate5(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    i3: string, v4: any, suffix: string): void {\n  const lView = getLView();\n  const interpolatedValue =\n      interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n  ɵɵstyleMap(interpolatedValue);\n}\n\n/**\n *\n * Update an interpolated style on an element with 6 bound values surrounded by text.\n *\n * Used when the value passed to a property has 6 interpolated values in it:\n *\n * ```html\n * <div style=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}};\n *             key5: {{v5}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstyleMapInterpolate6(\n *    'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, '; key5: ', v5,\n *    'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nexport function ɵɵstyleMapInterpolate6(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    i3: string, v4: any, i4: string, v5: any, suffix: string): void {\n  const lView = getLView();\n  const interpolatedValue =\n      interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n  ɵɵstyleMap(interpolatedValue);\n}\n\n/**\n *\n * Update an interpolated style on an element with 7 bound values surrounded by text.\n *\n * Used when the value passed to a property has 7 interpolated values in it:\n *\n * ```html\n * <div style=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}}; key5: {{v5}};\n *             key6: {{v6}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstyleMapInterpolate7(\n *    'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, '; key5: ', v5,\n *    '; key6: ', v6, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param i5 Static value used for concatenation only.\n * @param v6 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nexport function ɵɵstyleMapInterpolate7(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    i3: string, v4: any, i4: string, v5: any, i5: string, v6: any, suffix: string): void {\n  const lView = getLView();\n  const interpolatedValue =\n      interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n  ɵɵstyleMap(interpolatedValue);\n}\n\n/**\n *\n * Update an interpolated style on an element with 8 bound values surrounded by text.\n *\n * Used when the value passed to a property has 8 interpolated values in it:\n *\n * ```html\n * <div style=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}}; key5: {{v5}};\n *             key6: {{v6}}; key7: {{v7}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstyleMapInterpolate8(\n *    'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, '; key5: ', v5,\n *    '; key6: ', v6, '; key7: ', v7, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param i5 Static value used for concatenation only.\n * @param v6 Value checked for change.\n * @param i6 Static value used for concatenation only.\n * @param v7 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nexport function ɵɵstyleMapInterpolate8(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    i3: string, v4: any, i4: string, v5: any, i5: string, v6: any, i6: string, v7: any,\n    suffix: string): void {\n  const lView = getLView();\n  const interpolatedValue = interpolation8(\n      lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n  ɵɵstyleMap(interpolatedValue);\n}\n\n/**\n * Update an interpolated style on an element with 9 or more bound values surrounded by text.\n *\n * Used when the number of interpolated values exceeds 8.\n *\n * ```html\n * <div\n *  class=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}}; key5: {{v5}};\n *         key6: {{v6}}; key7: {{v7}}; key8: {{v8}}; key9: {{v9}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstyleMapInterpolateV(\n *    ['key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, '; key5: ', v5,\n *     '; key6: ', v6, '; key7: ', v7, '; key8: ', v8, '; key9: ', v9, 'suffix']);\n * ```\n *.\n * @param values The collection of values and the strings in-between those values, beginning with\n * a string prefix and ending with a string suffix.\n * (e.g. `['prefix', value0, '; key2: ', value1, '; key2: ', value2, ..., value99, 'suffix']`)\n * @codeGenApi\n */\nexport function ɵɵstyleMapInterpolateV(values: any[]): void {\n  const lView = getLView();\n  const interpolatedValue = interpolationV(lView, values);\n  ɵɵstyleMap(interpolatedValue);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getLView,} from '../state';\nimport {interpolation1, interpolation2, interpolation3, interpolation4, interpolation5, interpolation6, interpolation7, interpolation8, interpolationV} from './interpolation';\nimport {checkStylingProperty} from './styling';\n\n\n/**\n *\n * Update an interpolated style property on an element with single bound value surrounded by text.\n *\n * Used when the value passed to a property has 1 interpolated value in it:\n *\n * ```html\n * <div style.color=\"prefix{{v0}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n * ```\n *\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `styling`.\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nexport function ɵɵstylePropInterpolate1(\n    prop: string, prefix: string, v0: any, suffix: string,\n    valueSuffix?: string|null): typeof ɵɵstylePropInterpolate1 {\n  const lView = getLView();\n  const interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n  checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n  return ɵɵstylePropInterpolate1;\n}\n\n/**\n *\n * Update an interpolated style property on an element with 2 bound values surrounded by text.\n *\n * Used when the value passed to a property has 2 interpolated values in it:\n *\n * ```html\n * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n * ```\n *\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `styling`.\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nexport function ɵɵstylePropInterpolate2(\n    prop: string, prefix: string, v0: any, i0: string, v1: any, suffix: string,\n    valueSuffix?: string|null): typeof ɵɵstylePropInterpolate2 {\n  const lView = getLView();\n  const interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n  checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n  return ɵɵstylePropInterpolate2;\n}\n\n/**\n *\n * Update an interpolated style property on an element with 3 bound values surrounded by text.\n *\n * Used when the value passed to a property has 3 interpolated values in it:\n *\n * ```html\n * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n * ```\n *\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `styling`.\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nexport function ɵɵstylePropInterpolate3(\n    prop: string, prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, suffix: string,\n    valueSuffix?: string|null): typeof ɵɵstylePropInterpolate3 {\n  const lView = getLView();\n  const interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n  checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n  return ɵɵstylePropInterpolate3;\n}\n\n/**\n *\n * Update an interpolated style property on an element with 4 bound values surrounded by text.\n *\n * Used when the value passed to a property has 4 interpolated values in it:\n *\n * ```html\n * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n * ```\n *\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `styling`.\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nexport function ɵɵstylePropInterpolate4(\n    prop: string, prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string,\n    v3: any, suffix: string, valueSuffix?: string|null): typeof ɵɵstylePropInterpolate4 {\n  const lView = getLView();\n  const interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n  checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n  return ɵɵstylePropInterpolate4;\n}\n\n/**\n *\n * Update an interpolated style property on an element with 5 bound values surrounded by text.\n *\n * Used when the value passed to a property has 5 interpolated values in it:\n *\n * ```html\n * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n * ```\n *\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `styling`.\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nexport function ɵɵstylePropInterpolate5(\n    prop: string, prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string,\n    v3: any, i3: string, v4: any, suffix: string,\n    valueSuffix?: string|null): typeof ɵɵstylePropInterpolate5 {\n  const lView = getLView();\n  const interpolatedValue =\n      interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n  checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n  return ɵɵstylePropInterpolate5;\n}\n\n/**\n *\n * Update an interpolated style property on an element with 6 bound values surrounded by text.\n *\n * Used when the value passed to a property has 6 interpolated values in it:\n *\n * ```html\n * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n * ```\n *\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `styling`.\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nexport function ɵɵstylePropInterpolate6(\n    prop: string, prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string,\n    v3: any, i3: string, v4: any, i4: string, v5: any, suffix: string,\n    valueSuffix?: string|null): typeof ɵɵstylePropInterpolate6 {\n  const lView = getLView();\n  const interpolatedValue =\n      interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n  checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n  return ɵɵstylePropInterpolate6;\n}\n\n/**\n *\n * Update an interpolated style property on an element with 7 bound values surrounded by text.\n *\n * Used when the value passed to a property has 7 interpolated values in it:\n *\n * ```html\n * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstylePropInterpolate7(\n *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n * ```\n *\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `styling`.\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param i5 Static value used for concatenation only.\n * @param v6 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nexport function ɵɵstylePropInterpolate7(\n    prop: string, prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string,\n    v3: any, i3: string, v4: any, i4: string, v5: any, i5: string, v6: any, suffix: string,\n    valueSuffix?: string|null): typeof ɵɵstylePropInterpolate7 {\n  const lView = getLView();\n  const interpolatedValue =\n      interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n  checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n  return ɵɵstylePropInterpolate7;\n}\n\n/**\n *\n * Update an interpolated style property on an element with 8 bound values surrounded by text.\n *\n * Used when the value passed to a property has 8 interpolated values in it:\n *\n * ```html\n * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n * '-', v7, 'suffix');\n * ```\n *\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `styling`.\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param i5 Static value used for concatenation only.\n * @param v6 Value checked for change.\n * @param i6 Static value used for concatenation only.\n * @param v7 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nexport function ɵɵstylePropInterpolate8(\n    prop: string, prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string,\n    v3: any, i3: string, v4: any, i4: string, v5: any, i5: string, v6: any, i6: string, v7: any,\n    suffix: string, valueSuffix?: string|null): typeof ɵɵstylePropInterpolate8 {\n  const lView = getLView();\n  const interpolatedValue = interpolation8(\n      lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n  checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n  return ɵɵstylePropInterpolate8;\n}\n\n/**\n * Update an interpolated style property on an element with 9 or more bound values surrounded by\n * text.\n *\n * Used when the number of interpolated values exceeds 8.\n *\n * ```html\n * <div\n *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n * </div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstylePropInterpolateV(\n *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n *  'suffix']);\n * ```\n *\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `styling`..\n * @param values The collection of values and the strings in-between those values, beginning with\n * a string prefix and ending with a string suffix.\n * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nexport function ɵɵstylePropInterpolateV(\n    prop: string, values: any[], valueSuffix?: string|null): typeof ɵɵstylePropInterpolateV {\n  const lView = getLView();\n  const interpolatedValue = interpolationV(lView, values);\n  checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n  return ɵɵstylePropInterpolateV;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {bindingUpdated} from '../bindings';\nimport {SanitizerFn} from '../interfaces/sanitization';\nimport {RENDERER} from '../interfaces/view';\nimport {getCurrentDirectiveDef, getLView, getSelectedTNode, getTView, nextBindingIndex} from '../state';\nimport {NO_CHANGE} from '../tokens';\n\nimport {elementPropertyInternal, loadComponentRenderer, storePropertyBindingMetadata} from './shared';\n\n/**\n * Update a property on a host element. Only applies to native node properties, not inputs.\n *\n * Operates on the element selected by index via the {@link select} instruction.\n *\n * @param propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value New value to write.\n * @param sanitizer An optional function used to sanitize the value.\n * @returns This function returns itself so that it may be chained\n * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n *\n * @codeGenApi\n */\nexport function ɵɵhostProperty<T>(\n    propName: string, value: T, sanitizer?: SanitizerFn|null): typeof ɵɵhostProperty {\n  const lView = getLView();\n  const bindingIndex = nextBindingIndex();\n  if (bindingUpdated(lView, bindingIndex, value)) {\n    const tView = getTView();\n    const tNode = getSelectedTNode();\n    elementPropertyInternal(tView, tNode, lView, propName, value, lView[RENDERER], sanitizer, true);\n    ngDevMode && storePropertyBindingMetadata(tView.data, tNode, propName, bindingIndex);\n  }\n  return ɵɵhostProperty;\n}\n\n\n/**\n * Updates a synthetic host binding (e.g. `[@foo]`) on a component or directive.\n *\n * This instruction is for compatibility purposes and is designed to ensure that a\n * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n * the component's renderer. Normally all host bindings are evaluated with the parent\n * component's renderer, but, in the case of animation @triggers, they need to be\n * evaluated with the sub component's renderer (because that's where the animation\n * triggers are defined).\n *\n * Do not use this instruction as a replacement for `elementProperty`. This instruction\n * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n *\n * @param index The index of the element to update in the data array\n * @param propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value New value to write.\n * @param sanitizer An optional function used to sanitize the value.\n *\n * @codeGenApi\n */\nexport function ɵɵsyntheticHostProperty<T>(\n    propName: string, value: T|NO_CHANGE,\n    sanitizer?: SanitizerFn|null): typeof ɵɵsyntheticHostProperty {\n  const lView = getLView();\n  const bindingIndex = nextBindingIndex();\n  if (bindingUpdated(lView, bindingIndex, value)) {\n    const tView = getTView();\n    const tNode = getSelectedTNode();\n    const currentDef = getCurrentDirectiveDef(tView.data);\n    const renderer = loadComponentRenderer(currentDef, tNode, lView);\n    elementPropertyInternal(tView, tNode, lView, propName, value, renderer, sanitizer, true);\n    ngDevMode && storePropertyBindingMetadata(tView.data, tNode, propName, bindingIndex);\n  }\n  return ɵɵsyntheticHostProperty;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// THIS CODE IS GENERATED - DO NOT MODIFY.\nconst u = undefined;\n\nfunction plural(val: number): number {\nconst n = val, i = Math.floor(Math.abs(val)), v = val.toString().replace(/^[^.]*\\.?/, '').length;\n\nif (i === 1 && v === 0)\n    return 1;\nreturn 5;\n}\n\nexport default [\"en\",[[\"a\",\"p\"],[\"AM\",\"PM\"],u],[[\"AM\",\"PM\"],u,u],[[\"S\",\"M\",\"T\",\"W\",\"T\",\"F\",\"S\"],[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],[\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\"]],u,[[\"J\",\"F\",\"M\",\"A\",\"M\",\"J\",\"J\",\"A\",\"S\",\"O\",\"N\",\"D\"],[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]],u,[[\"B\",\"A\"],[\"BC\",\"AD\"],[\"Before Christ\",\"Anno Domini\"]],0,[6,0],[\"M/d/yy\",\"MMM d, y\",\"MMMM d, y\",\"EEEE, MMMM d, y\"],[\"h:mm a\",\"h:mm:ss a\",\"h:mm:ss a z\",\"h:mm:ss a zzzz\"],[\"{1}, {0}\",u,\"{1} 'at' {0}\",u],[\".\",\",\",\";\",\"%\",\"+\",\"-\",\"E\",\"×\",\"‰\",\"∞\",\"NaN\",\":\"],[\"#,##0.###\",\"#,##0%\",\"¤#,##0.00\",\"#E0\"],\"USD\",\"$\",\"US Dollar\",{},\"ltr\", plural];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {RuntimeError, RuntimeErrorCode} from '../errors';\nimport {global} from '../util/global';\n\nimport localeEn from './locale_en';\n\n/**\n * This const is used to store the locale data registered with `registerLocaleData`\n */\nlet LOCALE_DATA: {[localeId: string]: any} = {};\n\n/**\n * Register locale data to be used internally by Angular. See the\n * [\"I18n guide\"](guide/i18n-common-format-data-locale) to know how to import additional locale\n * data.\n *\n * The signature `registerLocaleData(data: any, extraData?: any)` is deprecated since v5.1\n */\nexport function registerLocaleData(data: any, localeId?: string|any, extraData?: any): void {\n  if (typeof localeId !== 'string') {\n    extraData = localeId;\n    localeId = data[LocaleDataIndex.LocaleId];\n  }\n\n  localeId = localeId.toLowerCase().replace(/_/g, '-');\n\n  LOCALE_DATA[localeId] = data;\n\n  if (extraData) {\n    LOCALE_DATA[localeId][LocaleDataIndex.ExtraData] = extraData;\n  }\n}\n\n/**\n * Finds the locale data for a given locale.\n *\n * @param locale The locale code.\n * @returns The locale data.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n-overview)\n */\nexport function findLocaleData(locale: string): any {\n  const normalizedLocale = normalizeLocale(locale);\n\n  let match = getLocaleData(normalizedLocale);\n  if (match) {\n    return match;\n  }\n\n  // let's try to find a parent locale\n  const parentLocale = normalizedLocale.split('-')[0];\n  match = getLocaleData(parentLocale);\n  if (match) {\n    return match;\n  }\n\n  if (parentLocale === 'en') {\n    return localeEn;\n  }\n\n  throw new RuntimeError(\n      RuntimeErrorCode.MISSING_LOCALE_DATA,\n      ngDevMode && `Missing locale data for the locale \"${locale}\".`);\n}\n\n/**\n * Retrieves the default currency code for the given locale.\n *\n * The default is defined as the first currency which is still in use.\n *\n * @param locale The code of the locale whose currency code we want.\n * @returns The code of the default currency for the given locale.\n *\n */\nexport function getLocaleCurrencyCode(locale: string): string|null {\n  const data = findLocaleData(locale);\n  return data[LocaleDataIndex.CurrencyCode] || null;\n}\n\n/**\n * Retrieves the plural function used by ICU expressions to determine the plural case to use\n * for a given locale.\n * @param locale A locale code for the locale format rules to use.\n * @returns The plural function for the locale.\n * @see `NgPlural`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n-overview)\n */\nexport function getLocalePluralCase(locale: string): (value: number) => number {\n  const data = findLocaleData(locale);\n  return data[LocaleDataIndex.PluralCase];\n}\n\n\n\n/**\n * Helper function to get the given `normalizedLocale` from `LOCALE_DATA`\n * or from the global `ng.common.locale`.\n */\nexport function getLocaleData(normalizedLocale: string): any {\n  if (!(normalizedLocale in LOCALE_DATA)) {\n    LOCALE_DATA[normalizedLocale] = global.ng && global.ng.common && global.ng.common.locales &&\n        global.ng.common.locales[normalizedLocale];\n  }\n  return LOCALE_DATA[normalizedLocale];\n}\n\n/**\n * Helper function to remove all the locale data from `LOCALE_DATA`.\n */\nexport function unregisterAllLocaleData() {\n  LOCALE_DATA = {};\n}\n\n/**\n * Index of each type of locale data from the locale data array\n */\nexport enum LocaleDataIndex {\n  LocaleId = 0,\n  DayPeriodsFormat,\n  DayPeriodsStandalone,\n  DaysFormat,\n  DaysStandalone,\n  MonthsFormat,\n  MonthsStandalone,\n  Eras,\n  FirstDayOfWeek,\n  WeekendRange,\n  DateFormat,\n  TimeFormat,\n  DateTimeFormat,\n  NumberSymbols,\n  NumberFormats,\n  CurrencyCode,\n  CurrencySymbol,\n  CurrencyName,\n  Currencies,\n  Directionality,\n  PluralCase,\n  ExtraData\n}\n\n/**\n * Index of each type of locale data from the extra locale data array\n */\nexport const enum ExtraLocaleDataIndex {\n  ExtraDayPeriodFormats = 0,\n  ExtraDayPeriodStandalone,\n  ExtraDayPeriodsRules\n}\n\n/**\n * Index of each value in currency data (used to describe CURRENCIES_EN in currencies.ts)\n */\nexport const enum CurrencyIndex {\n  Symbol = 0,\n  SymbolNarrow,\n  NbOfDigits\n}\n\n/**\n * Returns the canonical form of a locale name - lowercase with `_` replaced with `-`.\n */\nfunction normalizeLocale(locale: string): string {\n  return locale.toLowerCase().replace(/_/g, '-');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getLocalePluralCase} from './locale_data_api';\n\nconst pluralMapping = ['zero', 'one', 'two', 'few', 'many'];\n\n/**\n * Returns the plural case based on the locale\n */\nexport function getPluralCase(value: string, locale: string): string {\n  const plural = getLocalePluralCase(locale)(parseInt(value, 10));\n  const result = pluralMapping[plural];\n  return (result !== undefined) ? result : 'other';\n}\n\n/**\n * The locale id that the application is using by default (for translations and ICU expressions).\n */\nexport const DEFAULT_LOCALE_ID = 'en-US';\n\n/**\n * USD currency code that the application uses by default for CurrencyPipe when no\n * DEFAULT_CURRENCY_CODE is provided.\n */\nexport const USD_CURRENCY_CODE = 'USD';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SanitizerFn} from './sanitization';\n\n\n/**\n * Stores a list of nodes which need to be removed.\n *\n * Numbers are indexes into the `LView`\n * - index > 0: `removeRNode(lView[0])`\n * - index < 0: `removeICU(~lView[0])`\n */\nexport interface I18nRemoveOpCodes extends Array<number> {\n  __brand__: 'I18nRemoveOpCodes';\n}\n\n/**\n * `I18nMutateOpCode` defines OpCodes for `I18nMutateOpCodes` array.\n *\n * OpCodes are efficient operations which can be applied to the DOM to update it. (For example to\n * update to a new ICU case requires that we clean up previous elements and create new ones.)\n *\n * OpCodes contain three parts:\n *  1) Parent node index offset. (p)\n *  2) Reference node index offset. (r)\n *  3) The instruction to execute. (i)\n *\n * pppp pppp pppp pppp rrrr rrrr rrrr riii\n * 3322 2222 2222 1111 1111 1110 0000 0000\n * 1098 7654 3210 9876 5432 1098 7654 3210\n *\n * ```\n * var parent = lView[opCode >>> SHIFT_PARENT];\n * var refNode = lView[((opCode & MASK_REF) >>> SHIFT_REF)];\n * var instruction = opCode & MASK_OPCODE;\n * ```\n *\n * See: `I18nCreateOpCodes` for example of usage.\n */\nexport const enum IcuCreateOpCode {\n  /**\n   * Stores shift amount for bits 17-3 that contain reference index.\n   */\n  SHIFT_REF = 1,\n  /**\n   * Stores shift amount for bits 31-17 that contain parent index.\n   */\n  SHIFT_PARENT = 17,\n  /**\n   * Mask for OpCode\n   */\n  MASK_INSTRUCTION = 0b1,\n\n  /**\n   * Mask for the Reference node (bits 16-3)\n   */\n  MASK_REF = 0b11111111111111110,\n  //           11111110000000000\n  //           65432109876543210\n\n  /**\n   * Instruction to append the current node to `PARENT`.\n   */\n  AppendChild = 0b0,\n\n  /**\n   * Instruction to set the attribute of a node.\n   */\n  Attr = 0b1,\n}\n\n\n/**\n * Array storing OpCode for dynamically creating `i18n` blocks.\n *\n * Example:\n * ```ts\n * <I18nCreateOpCode>[\n *   // For adding text nodes\n *   // ---------------------\n *   // Equivalent to:\n *   //   lView[1].appendChild(lView[0] = document.createTextNode('xyz'));\n *   'xyz', 0, 1 << SHIFT_PARENT | 0 << SHIFT_REF | AppendChild,\n *\n *   // For adding element nodes\n *   // ---------------------\n *   // Equivalent to:\n *   //   lView[1].appendChild(lView[0] = document.createElement('div'));\n *   ELEMENT_MARKER, 'div', 0, 1 << SHIFT_PARENT | 0 << SHIFT_REF | AppendChild,\n *\n *   // For adding comment nodes\n *   // ---------------------\n *   // Equivalent to:\n *   //   lView[1].appendChild(lView[0] = document.createComment(''));\n *   ICU_MARKER, '', 0, 1 << SHIFT_PARENT | 0 << SHIFT_REF | AppendChild,\n *\n *   // For moving existing nodes to a different location\n *   // --------------------------------------------------\n *   // Equivalent to:\n *   //   const node = lView[1];\n *   //   lView[2].appendChild(node);\n *   1 << SHIFT_REF | Select, 2 << SHIFT_PARENT | 0 << SHIFT_REF | AppendChild,\n *\n *   // For removing existing nodes\n *   // --------------------------------------------------\n *   //   const node = lView[1];\n *   //   removeChild(tView.data(1), node, lView);\n *   1 << SHIFT_REF | Remove,\n *\n *   // For writing attributes\n *   // --------------------------------------------------\n *   //   const node = lView[1];\n *   //   node.setAttribute('attr', 'value');\n *   1 << SHIFT_REF | Attr, 'attr', 'value'\n * ];\n * ```\n */\nexport interface IcuCreateOpCodes extends Array<number|string|ELEMENT_MARKER|ICU_MARKER|null>,\n                                          I18nDebug {\n  __brand__: 'I18nCreateOpCodes';\n}\n\nexport const enum I18nUpdateOpCode {\n  /**\n   * Stores shift amount for bits 17-2 that contain reference index.\n   */\n  SHIFT_REF = 2,\n  /**\n   * Mask for OpCode\n   */\n  MASK_OPCODE = 0b11,\n\n  /**\n   * Instruction to update a text node.\n   */\n  Text = 0b00,\n  /**\n   * Instruction to update a attribute of a node.\n   */\n  Attr = 0b01,\n  /**\n   * Instruction to switch the current ICU case.\n   */\n  IcuSwitch = 0b10,\n  /**\n   * Instruction to update the current ICU case.\n   */\n  IcuUpdate = 0b11,\n}\n\n/**\n * Marks that the next string is an element name.\n *\n * See `I18nMutateOpCodes` documentation.\n */\nexport const ELEMENT_MARKER: ELEMENT_MARKER = {\n  marker: 'element'\n};\nexport interface ELEMENT_MARKER {\n  marker: 'element';\n}\n\n/**\n * Marks that the next string is comment text need for ICU.\n *\n * See `I18nMutateOpCodes` documentation.\n */\nexport const ICU_MARKER: ICU_MARKER = {\n  marker: 'ICU'\n};\n\nexport interface ICU_MARKER {\n  marker: 'ICU';\n}\n\nexport interface I18nDebug {\n  /**\n   * Human readable representation of the OpCode arrays.\n   *\n   * NOTE: This property only exists if `ngDevMode` is set to `true` and it is not present in\n   * production. Its presence is purely to help debug issue in development, and should not be relied\n   * on in production application.\n   */\n  debug?: string[];\n}\n\n/**\n * Array storing OpCode for dynamically creating `i18n` translation DOM elements.\n *\n * This array creates a sequence of `Text` and `Comment` (as ICU anchor) DOM elements. It consists\n * of a pair of `number` and `string` pairs which encode the operations for the creation of the\n * translated block.\n *\n * The number is shifted and encoded according to `I18nCreateOpCode`\n *\n * Pseudocode:\n * ```\n * const i18nCreateOpCodes = [\n *   10 << I18nCreateOpCode.SHIFT, \"Text Node add to DOM\",\n *   11 << I18nCreateOpCode.SHIFT | I18nCreateOpCode.COMMENT, \"Comment Node add to DOM\",\n *   12 << I18nCreateOpCode.SHIFT | I18nCreateOpCode.APPEND_LATER, \"Text Node added later\"\n * ];\n *\n * for(var i=0; i<i18nCreateOpCodes.length; i++) {\n *   const opcode = i18NCreateOpCodes[i++];\n *   const index = opcode >> I18nCreateOpCode.SHIFT;\n *   const text = i18NCreateOpCodes[i];\n *   let node: Text|Comment;\n *   if (opcode & I18nCreateOpCode.COMMENT === I18nCreateOpCode.COMMENT) {\n *     node = lView[~index] = document.createComment(text);\n *   } else {\n *     node = lView[index] = document.createText(text);\n *   }\n *   if (opcode & I18nCreateOpCode.APPEND_EAGERLY !== I18nCreateOpCode.APPEND_EAGERLY) {\n *     parentNode.appendChild(node);\n *   }\n * }\n * ```\n */\nexport interface I18nCreateOpCodes extends Array<number|string>, I18nDebug {\n  __brand__: 'I18nCreateOpCodes';\n}\n\n/**\n * See `I18nCreateOpCodes`\n */\nexport enum I18nCreateOpCode {\n  /**\n   * Number of bits to shift index so that it can be combined with the `APPEND_EAGERLY` and\n   * `COMMENT`.\n   */\n  SHIFT = 2,\n\n  /**\n   * Should the node be appended to parent immediately after creation.\n   */\n  APPEND_EAGERLY = 0b01,\n\n  /**\n   * If set the node should be comment (rather than a text) node.\n   */\n  COMMENT = 0b10,\n}\n\n\n/**\n * Stores DOM operations which need to be applied to update DOM render tree due to changes in\n * expressions.\n *\n * The basic idea is that `i18nExp` OpCodes capture expression changes and update a change\n * mask bit. (Bit 1 for expression 1, bit 2 for expression 2 etc..., bit 32 for expression 32 and\n * higher.) The OpCodes then compare its own change mask against the expression change mask to\n * determine if the OpCodes should execute.\n *\n * NOTE: 32nd bit is special as it says 32nd or higher. This way if we have more than 32 bindings\n * the code still works, but with lower efficiency. (it is unlikely that a translation would have\n * more than 32 bindings.)\n *\n * These OpCodes can be used by both the i18n block as well as ICU sub-block.\n *\n * ## Example\n *\n * Assume\n * ```ts\n *   if (rf & RenderFlags.Update) {\n *    i18nExp(ctx.exp1); // If changed set mask bit 1\n *    i18nExp(ctx.exp2); // If changed set mask bit 2\n *    i18nExp(ctx.exp3); // If changed set mask bit 3\n *    i18nExp(ctx.exp4); // If changed set mask bit 4\n *    i18nApply(0);            // Apply all changes by executing the OpCodes.\n *  }\n * ```\n * We can assume that each call to `i18nExp` sets an internal `changeMask` bit depending on the\n * index of `i18nExp`.\n *\n * ### OpCodes\n * ```ts\n * <I18nUpdateOpCodes>[\n *   // The following OpCodes represent: `<div i18n-title=\"pre{{exp1}}in{{exp2}}post\">`\n *   // If `changeMask & 0b11`\n *   //        has changed then execute update OpCodes.\n *   //        has NOT changed then skip `8` values and start processing next OpCodes.\n *   0b11, 8,\n *   // Concatenate `newValue = 'pre'+lView[bindIndex-4]+'in'+lView[bindIndex-3]+'post';`.\n *   'pre', -4, 'in', -3, 'post',\n *   // Update attribute: `elementAttribute(1, 'title', sanitizerFn(newValue));`\n *   1 << SHIFT_REF | Attr, 'title', sanitizerFn,\n *\n *   // The following OpCodes represent: `<div i18n>Hello {{exp3}}!\">`\n *   // If `changeMask & 0b100`\n *   //        has changed then execute update OpCodes.\n *   //        has NOT changed then skip `4` values and start processing next OpCodes.\n *   0b100, 4,\n *   // Concatenate `newValue = 'Hello ' + lView[bindIndex -2] + '!';`.\n *   'Hello ', -2, '!',\n *   // Update text: `lView[1].textContent = newValue;`\n *   1 << SHIFT_REF | Text,\n *\n *   // The following OpCodes represent: `<div i18n>{exp4, plural, ... }\">`\n *   // If `changeMask & 0b1000`\n *   //        has changed then execute update OpCodes.\n *   //        has NOT changed then skip `2` values and start processing next OpCodes.\n *   0b1000, 2,\n *   // Concatenate `newValue = lView[bindIndex -1];`.\n *   -1,\n *   // Switch ICU: `icuSwitchCase(lView[1], 0, newValue);`\n *   0 << SHIFT_ICU | 1 << SHIFT_REF | IcuSwitch,\n *\n *   // Note `changeMask & -1` is always true, so the IcuUpdate will always execute.\n *   -1, 1,\n *   // Update ICU: `icuUpdateCase(lView[1], 0);`\n *   0 << SHIFT_ICU | 1 << SHIFT_REF | IcuUpdate,\n *\n * ];\n * ```\n *\n */\nexport interface I18nUpdateOpCodes extends Array<string|number|SanitizerFn|null>, I18nDebug {\n  __brand__: 'I18nUpdateOpCodes';\n}\n\n/**\n * Store information for the i18n translation block.\n */\nexport interface TI18n {\n  /**\n   * A set of OpCodes which will create the Text Nodes and ICU anchors for the translation blocks.\n   *\n   * NOTE: The ICU anchors are filled in with ICU Update OpCode.\n   */\n  create: I18nCreateOpCodes;\n\n  /**\n   * A set of OpCodes which will be executed on each change detection to determine if any changes to\n   * DOM are required.\n   */\n  update: I18nUpdateOpCodes;\n}\n\n/**\n * Defines the ICU type of `select` or `plural`\n */\nexport const enum IcuType {\n  select = 0,\n  plural = 1,\n}\n\nexport interface TIcu {\n  /**\n   * Defines the ICU type of `select` or `plural`\n   */\n  type: IcuType;\n\n  /**\n   * Index in `LView` where the anchor node is stored. `<!-- ICU 0:0 -->`\n   */\n  anchorIdx: number;\n\n  /**\n   * Currently selected ICU case pointer.\n   *\n   * `lView[currentCaseLViewIndex]` stores the currently selected case. This is needed to know how\n   * to clean up the current case when transitioning no the new case.\n   *\n   * If the value stored is:\n   * `null`: No current case selected.\n   *   `<0`: A flag which means that the ICU just switched and that `icuUpdate` must be executed\n   *         regardless of the `mask`. (After the execution the flag is cleared)\n   *   `>=0` A currently selected case index.\n   */\n  currentCaseLViewIndex: number;\n\n  /**\n   * A list of case values which the current ICU will try to match.\n   *\n   * The last value is `other`\n   */\n  cases: any[];\n\n  /**\n   * A set of OpCodes to apply in order to build up the DOM render tree for the ICU\n   */\n  create: IcuCreateOpCodes[];\n\n  /**\n   * A set of OpCodes to apply in order to destroy the DOM render tree for the ICU.\n   */\n  remove: I18nRemoveOpCodes[];\n\n  /**\n   * A set of OpCodes to apply in order to update the DOM render tree for the ICU bindings.\n   */\n  update: I18nUpdateOpCodes[];\n}\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nexport const unusedValueExportToPlacateAjd = 1;\n\n/**\n * Parsed ICU expression\n */\nexport interface IcuExpression {\n  type: IcuType;\n  mainBinding: number;\n  cases: string[];\n  values: (string|IcuExpression)[][];\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DEFAULT_LOCALE_ID} from '../../i18n/localization';\nimport {assertDefined} from '../../util/assert';\n\n\n/**\n * The locale id that the application is currently using (for translations and ICU expressions).\n * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n * but is now defined as a global value.\n */\nlet LOCALE_ID = DEFAULT_LOCALE_ID;\n\n/**\n * Sets the locale id that will be used for translations and ICU expressions.\n * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n * but is now defined as a global value.\n *\n * @param localeId\n */\nexport function setLocaleId(localeId: string) {\n  assertDefined(localeId, `Expected localeId to be defined`);\n  if (typeof localeId === 'string') {\n    LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n  }\n}\n\n/**\n * Gets the locale id that will be used for translations and ICU expressions.\n * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n * but is now defined as a global value.\n */\nexport function getLocaleId(): string {\n  return LOCALE_ID;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {assertDomNode, assertIndexInRange} from '../util/assert';\n\nimport {TNode, TNodeFlags, TNodeType} from './interfaces/node';\nimport {Renderer} from './interfaces/renderer';\nimport {RElement, RNode} from './interfaces/renderer_dom';\nimport {LView} from './interfaces/view';\nimport {getInsertInFrontOfRNodeWithNoI18n, nativeInsertBefore} from './node_manipulation';\nimport {unwrapRNode} from './util/view_utils';\n\n\n/**\n * Find a node in front of which `currentTNode` should be inserted (takes i18n into account).\n *\n * This method determines the `RNode` in front of which we should insert the `currentRNode`. This\n * takes `TNode.insertBeforeIndex` into account.\n *\n * @param parentTNode parent `TNode`\n * @param currentTNode current `TNode` (The node which we would like to insert into the DOM)\n * @param lView current `LView`\n */\nexport function getInsertInFrontOfRNodeWithI18n(\n    parentTNode: TNode, currentTNode: TNode, lView: LView): RNode|null {\n  const tNodeInsertBeforeIndex = currentTNode.insertBeforeIndex;\n  const insertBeforeIndex =\n      Array.isArray(tNodeInsertBeforeIndex) ? tNodeInsertBeforeIndex[0] : tNodeInsertBeforeIndex;\n  if (insertBeforeIndex === null) {\n    return getInsertInFrontOfRNodeWithNoI18n(parentTNode, currentTNode, lView);\n  } else {\n    ngDevMode && assertIndexInRange(lView, insertBeforeIndex);\n    return unwrapRNode(lView[insertBeforeIndex]);\n  }\n}\n\n\n/**\n * Process `TNode.insertBeforeIndex` by adding i18n text nodes.\n *\n * See `TNode.insertBeforeIndex`\n */\nexport function processI18nInsertBefore(\n    renderer: Renderer, childTNode: TNode, lView: LView, childRNode: RNode|RNode[],\n    parentRElement: RElement|null): void {\n  const tNodeInsertBeforeIndex = childTNode.insertBeforeIndex;\n  if (Array.isArray(tNodeInsertBeforeIndex)) {\n    // An array indicates that there are i18n nodes that need to be added as children of this\n    // `childRNode`. These i18n nodes were created before this `childRNode` was available and so\n    // only now can be added. The first element of the array is the normal index where we should\n    // insert the `childRNode`. Additional elements are the extra nodes to be added as children of\n    // `childRNode`.\n    ngDevMode && assertDomNode(childRNode);\n    let i18nParent: RElement|null = childRNode as RElement;\n    let anchorRNode: RNode|null = null;\n    if (!(childTNode.type & TNodeType.AnyRNode)) {\n      anchorRNode = i18nParent;\n      i18nParent = parentRElement;\n    }\n    if (i18nParent !== null && (childTNode.flags & TNodeFlags.isComponentHost) === 0) {\n      for (let i = 1; i < tNodeInsertBeforeIndex.length; i++) {\n        // No need to `unwrapRNode` because all of the indexes point to i18n text nodes.\n        // see `assertDomNode` below.\n        const i18nChild = lView[tNodeInsertBeforeIndex[i]];\n        nativeInsertBefore(renderer, i18nParent, i18nChild, anchorRNode, false);\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {assertEqual} from '../../util/assert';\nimport {TNode, TNodeType} from '../interfaces/node';\nimport {setI18nHandling} from '../node_manipulation';\nimport {getInsertInFrontOfRNodeWithI18n, processI18nInsertBefore} from '../node_manipulation_i18n';\n\n/**\n * Add `tNode` to `previousTNodes` list and update relevant `TNode`s in `previousTNodes` list\n * `tNode.insertBeforeIndex`.\n *\n * Things to keep in mind:\n * 1. All i18n text nodes are encoded as `TNodeType.Element` and are created eagerly by the\n *    `ɵɵi18nStart` instruction.\n * 2. All `TNodeType.Placeholder` `TNodes` are elements which will be created later by\n *    `ɵɵelementStart` instruction.\n * 3. `ɵɵelementStart` instruction will create `TNode`s in the ascending `TNode.index` order. (So a\n *    smaller index `TNode` is guaranteed to be created before a larger one)\n *\n * We use the above three invariants to determine `TNode.insertBeforeIndex`.\n *\n * In an ideal world `TNode.insertBeforeIndex` would always be `TNode.next.index`. However,\n * this will not work because `TNode.next.index` may be larger than `TNode.index` which means that\n * the next node is not yet created and therefore we can't insert in front of it.\n *\n * Rule1: `TNode.insertBeforeIndex = null` if `TNode.next === null` (Initial condition, as we don't\n *        know if there will be further `TNode`s inserted after.)\n * Rule2: If `previousTNode` is created after the `tNode` being inserted, then\n *        `previousTNode.insertBeforeNode = tNode.index` (So when a new `tNode` is added we check\n *        previous to see if we can update its `insertBeforeTNode`)\n *\n * See `TNode.insertBeforeIndex` for more context.\n *\n * @param previousTNodes A list of previous TNodes so that we can easily traverse `TNode`s in\n *     reverse order. (If `TNode` would have `previous` this would not be necessary.)\n * @param newTNode A TNode to add to the `previousTNodes` list.\n */\nexport function addTNodeAndUpdateInsertBeforeIndex(previousTNodes: TNode[], newTNode: TNode) {\n  // Start with Rule1\n  ngDevMode &&\n      assertEqual(newTNode.insertBeforeIndex, null, 'We expect that insertBeforeIndex is not set');\n\n  previousTNodes.push(newTNode);\n  if (previousTNodes.length > 1) {\n    for (let i = previousTNodes.length - 2; i >= 0; i--) {\n      const existingTNode = previousTNodes[i];\n      // Text nodes are created eagerly and so they don't need their `indexBeforeIndex` updated.\n      // It is safe to ignore them.\n      if (!isI18nText(existingTNode)) {\n        if (isNewTNodeCreatedBefore(existingTNode, newTNode) &&\n            getInsertBeforeIndex(existingTNode) === null) {\n          // If it was created before us in time, (and it does not yet have `insertBeforeIndex`)\n          // then add the `insertBeforeIndex`.\n          setInsertBeforeIndex(existingTNode, newTNode.index);\n        }\n      }\n    }\n  }\n}\n\nfunction isI18nText(tNode: TNode): boolean {\n  return !(tNode.type & TNodeType.Placeholder);\n}\n\nfunction isNewTNodeCreatedBefore(existingTNode: TNode, newTNode: TNode): boolean {\n  return isI18nText(newTNode) || existingTNode.index > newTNode.index;\n}\n\nfunction getInsertBeforeIndex(tNode: TNode): number|null {\n  const index = tNode.insertBeforeIndex;\n  return Array.isArray(index) ? index[0] : index;\n}\n\nfunction setInsertBeforeIndex(tNode: TNode, value: number): void {\n  const index = tNode.insertBeforeIndex;\n  if (Array.isArray(index)) {\n    // Array is stored if we have to insert child nodes. See `TNode.insertBeforeIndex`\n    index[0] = value;\n  } else {\n    setI18nHandling(getInsertInFrontOfRNodeWithI18n, processI18nInsertBefore);\n    tNode.insertBeforeIndex = value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {assertEqual, assertGreaterThan, assertGreaterThanOrEqual, throwError} from '../../util/assert';\nimport {assertTIcu, assertTNode} from '../assert';\nimport {createTNodeAtIndex} from '../instructions/shared';\nimport {IcuCreateOpCode, TIcu} from '../interfaces/i18n';\nimport {TIcuContainerNode, TNode, TNodeType} from '../interfaces/node';\nimport {LView, TView} from '../interfaces/view';\nimport {assertTNodeType} from '../node_assert';\nimport {setI18nHandling} from '../node_manipulation';\nimport {getInsertInFrontOfRNodeWithI18n, processI18nInsertBefore} from '../node_manipulation_i18n';\nimport {addTNodeAndUpdateInsertBeforeIndex} from './i18n_insert_before_index';\n\n\n/**\n * Retrieve `TIcu` at a given `index`.\n *\n * The `TIcu` can be stored either directly (if it is nested ICU) OR\n * it is stored inside tho `TIcuContainer` if it is top level ICU.\n *\n * The reason for this is that the top level ICU need a `TNode` so that they are part of the render\n * tree, but nested ICU's have no TNode, because we don't know ahead of time if the nested ICU is\n * expressed (parent ICU may have selected a case which does not contain it.)\n *\n * @param tView Current `TView`.\n * @param index Index where the value should be read from.\n */\nexport function getTIcu(tView: TView, index: number): TIcu|null {\n  const value = tView.data[index] as null | TIcu | TIcuContainerNode | string;\n  if (value === null || typeof value === 'string') return null;\n  if (ngDevMode &&\n      !(value.hasOwnProperty('tViews') || value.hasOwnProperty('currentCaseLViewIndex'))) {\n    throwError('We expect to get \\'null\\'|\\'TIcu\\'|\\'TIcuContainer\\', but got: ' + value);\n  }\n  // Here the `value.hasOwnProperty('currentCaseLViewIndex')` is a polymorphic read as it can be\n  // either TIcu or TIcuContainerNode. This is not ideal, but we still think it is OK because it\n  // will be just two cases which fits into the browser inline cache (inline cache can take up to\n  // 4)\n  const tIcu = value.hasOwnProperty('currentCaseLViewIndex') ? value as TIcu :\n                                                               (value as TIcuContainerNode).value;\n  ngDevMode && assertTIcu(tIcu);\n  return tIcu;\n}\n\n/**\n * Store `TIcu` at a give `index`.\n *\n * The `TIcu` can be stored either directly (if it is nested ICU) OR\n * it is stored inside tho `TIcuContainer` if it is top level ICU.\n *\n * The reason for this is that the top level ICU need a `TNode` so that they are part of the render\n * tree, but nested ICU's have no TNode, because we don't know ahead of time if the nested ICU is\n * expressed (parent ICU may have selected a case which does not contain it.)\n *\n * @param tView Current `TView`.\n * @param index Index where the value should be stored at in `Tview.data`\n * @param tIcu The TIcu to store.\n */\nexport function setTIcu(tView: TView, index: number, tIcu: TIcu): void {\n  const tNode = tView.data[index] as null | TIcuContainerNode;\n  ngDevMode &&\n      assertEqual(\n          tNode === null || tNode.hasOwnProperty('tViews'), true,\n          'We expect to get \\'null\\'|\\'TIcuContainer\\'');\n  if (tNode === null) {\n    tView.data[index] = tIcu;\n  } else {\n    ngDevMode && assertTNodeType(tNode, TNodeType.Icu);\n    tNode.value = tIcu;\n  }\n}\n\n/**\n * Set `TNode.insertBeforeIndex` taking the `Array` into account.\n *\n * See `TNode.insertBeforeIndex`\n */\nexport function setTNodeInsertBeforeIndex(tNode: TNode, index: number) {\n  ngDevMode && assertTNode(tNode);\n  let insertBeforeIndex = tNode.insertBeforeIndex;\n  if (insertBeforeIndex === null) {\n    setI18nHandling(getInsertInFrontOfRNodeWithI18n, processI18nInsertBefore);\n    insertBeforeIndex = tNode.insertBeforeIndex =\n        [null!/* may be updated to number later */, index];\n  } else {\n    assertEqual(Array.isArray(insertBeforeIndex), true, 'Expecting array here');\n    (insertBeforeIndex as number[]).push(index);\n  }\n}\n\n/**\n * Create `TNode.type=TNodeType.Placeholder` node.\n *\n * See `TNodeType.Placeholder` for more information.\n */\nexport function createTNodePlaceholder(\n    tView: TView, previousTNodes: TNode[], index: number): TNode {\n  const tNode = createTNodeAtIndex(tView, index, TNodeType.Placeholder, null, null);\n  addTNodeAndUpdateInsertBeforeIndex(previousTNodes, tNode);\n  return tNode;\n}\n\n\n/**\n * Returns current ICU case.\n *\n * ICU cases are stored as index into the `TIcu.cases`.\n * At times it is necessary to communicate that the ICU case just switched and that next ICU update\n * should update all bindings regardless of the mask. In such a case the we store negative numbers\n * for cases which have just been switched. This function removes the negative flag.\n */\nexport function getCurrentICUCaseIndex(tIcu: TIcu, lView: LView) {\n  const currentCase: number|null = lView[tIcu.currentCaseLViewIndex];\n  return currentCase === null ? currentCase : (currentCase < 0 ? ~currentCase : currentCase);\n}\n\nexport function getParentFromIcuCreateOpCode(mergedCode: number): number {\n  return mergedCode >>> IcuCreateOpCode.SHIFT_PARENT;\n}\n\nexport function getRefFromIcuCreateOpCode(mergedCode: number): number {\n  return (mergedCode & IcuCreateOpCode.MASK_REF) >>> IcuCreateOpCode.SHIFT_REF;\n}\n\nexport function getInstructionFromIcuCreateOpCode(mergedCode: number): number {\n  return mergedCode & IcuCreateOpCode.MASK_INSTRUCTION;\n}\n\nexport function icuCreateOpCode(opCode: IcuCreateOpCode, parentIdx: number, refIdx: number) {\n  ngDevMode && assertGreaterThanOrEqual(parentIdx, 0, 'Missing parent index');\n  ngDevMode && assertGreaterThan(refIdx, 0, 'Missing ref index');\n  return opCode | parentIdx << IcuCreateOpCode.SHIFT_PARENT | refIdx << IcuCreateOpCode.SHIFT_REF;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {RuntimeError, RuntimeErrorCode} from '../../errors';\nimport {getPluralCase} from '../../i18n/localization';\nimport {assertDefined, assertDomNode, assertEqual, assertGreaterThan, assertIndexInRange, throwError} from '../../util/assert';\nimport {assertIndexInExpandoRange, assertTIcu} from '../assert';\nimport {attachPatchData} from '../context_discovery';\nimport {elementPropertyInternal, setElementAttribute} from '../instructions/shared';\nimport {ELEMENT_MARKER, I18nCreateOpCode, I18nCreateOpCodes, I18nUpdateOpCode, I18nUpdateOpCodes, ICU_MARKER, IcuCreateOpCode, IcuCreateOpCodes, IcuType, TI18n, TIcu} from '../interfaces/i18n';\nimport {TNode} from '../interfaces/node';\nimport {RElement, RNode, RText} from '../interfaces/renderer_dom';\nimport {SanitizerFn} from '../interfaces/sanitization';\nimport {HEADER_OFFSET, LView, RENDERER, TView} from '../interfaces/view';\nimport {createCommentNode, createElementNode, createTextNode, nativeInsertBefore, nativeParentNode, nativeRemoveNode, updateTextNode} from '../node_manipulation';\nimport {getBindingIndex} from '../state';\nimport {renderStringify} from '../util/stringify_utils';\nimport {getNativeByIndex, unwrapRNode} from '../util/view_utils';\n\nimport {getLocaleId} from './i18n_locale_id';\nimport {getCurrentICUCaseIndex, getParentFromIcuCreateOpCode, getRefFromIcuCreateOpCode, getTIcu} from './i18n_util';\n\n\n\n/**\n * Keep track of which input bindings in `ɵɵi18nExp` have changed.\n *\n * This is used to efficiently update expressions in i18n only when the corresponding input has\n * changed.\n *\n * 1) Each bit represents which of the `ɵɵi18nExp` has changed.\n * 2) There are 32 bits allowed in JS.\n * 3) Bit 32 is special as it is shared for all changes past 32. (In other words if you have more\n * than 32 `ɵɵi18nExp` then all changes past 32nd `ɵɵi18nExp` will be mapped to same bit. This means\n * that we may end up changing more than we need to. But i18n expressions with 32 bindings is rare\n * so in practice it should not be an issue.)\n */\nlet changeMask = 0b0;\n\n/**\n * Keeps track of which bit needs to be updated in `changeMask`\n *\n * This value gets incremented on every call to `ɵɵi18nExp`\n */\nlet changeMaskCounter = 0;\n\n/**\n * Keep track of which input bindings in `ɵɵi18nExp` have changed.\n *\n * `setMaskBit` gets invoked by each call to `ɵɵi18nExp`.\n *\n * @param hasChange did `ɵɵi18nExp` detect a change.\n */\nexport function setMaskBit(hasChange: boolean) {\n  if (hasChange) {\n    changeMask = changeMask | (1 << Math.min(changeMaskCounter, 31));\n  }\n  changeMaskCounter++;\n}\n\nexport function applyI18n(tView: TView, lView: LView, index: number) {\n  if (changeMaskCounter > 0) {\n    ngDevMode && assertDefined(tView, `tView should be defined`);\n    const tI18n = tView.data[index] as TI18n | I18nUpdateOpCodes;\n    // When `index` points to an `ɵɵi18nAttributes` then we have an array otherwise `TI18n`\n    const updateOpCodes: I18nUpdateOpCodes =\n        Array.isArray(tI18n) ? tI18n as I18nUpdateOpCodes : (tI18n as TI18n).update;\n    const bindingsStartIndex = getBindingIndex() - changeMaskCounter - 1;\n    applyUpdateOpCodes(tView, lView, updateOpCodes, bindingsStartIndex, changeMask);\n  }\n  // Reset changeMask & maskBit to default for the next update cycle\n  changeMask = 0b0;\n  changeMaskCounter = 0;\n}\n\n\n/**\n * Apply `I18nCreateOpCodes` op-codes as stored in `TI18n.create`.\n *\n * Creates text (and comment) nodes which are internationalized.\n *\n * @param lView Current lView\n * @param createOpCodes Set of op-codes to apply\n * @param parentRNode Parent node (so that direct children can be added eagerly) or `null` if it is\n *     a root node.\n * @param insertInFrontOf DOM node that should be used as an anchor.\n */\nexport function applyCreateOpCodes(\n    lView: LView, createOpCodes: I18nCreateOpCodes, parentRNode: RElement|null,\n    insertInFrontOf: RElement|null): void {\n  const renderer = lView[RENDERER];\n  for (let i = 0; i < createOpCodes.length; i++) {\n    const opCode = createOpCodes[i++] as any;\n    const text = createOpCodes[i] as string;\n    const isComment = (opCode & I18nCreateOpCode.COMMENT) === I18nCreateOpCode.COMMENT;\n    const appendNow =\n        (opCode & I18nCreateOpCode.APPEND_EAGERLY) === I18nCreateOpCode.APPEND_EAGERLY;\n    const index = opCode >>> I18nCreateOpCode.SHIFT;\n    let rNode = lView[index];\n    if (rNode === null) {\n      // We only create new DOM nodes if they don't already exist: If ICU switches case back to a\n      // case which was already instantiated, no need to create new DOM nodes.\n      rNode = lView[index] =\n          isComment ? renderer.createComment(text) : createTextNode(renderer, text);\n    }\n    if (appendNow && parentRNode !== null) {\n      nativeInsertBefore(renderer, parentRNode, rNode, insertInFrontOf, false);\n    }\n  }\n}\n\n/**\n * Apply `I18nMutateOpCodes` OpCodes.\n *\n * @param tView Current `TView`\n * @param mutableOpCodes Mutable OpCodes to process\n * @param lView Current `LView`\n * @param anchorRNode place where the i18n node should be inserted.\n */\nexport function applyMutableOpCodes(\n    tView: TView, mutableOpCodes: IcuCreateOpCodes, lView: LView, anchorRNode: RNode): void {\n  ngDevMode && assertDomNode(anchorRNode);\n  const renderer = lView[RENDERER];\n  // `rootIdx` represents the node into which all inserts happen.\n  let rootIdx: number|null = null;\n  // `rootRNode` represents the real node into which we insert. This can be different from\n  // `lView[rootIdx]` if we have projection.\n  //  - null we don't have a parent (as can be the case in when we are inserting into a root of\n  //    LView which has no parent.)\n  //  - `RElement` The element representing the root after taking projection into account.\n  let rootRNode!: RElement|null;\n  for (let i = 0; i < mutableOpCodes.length; i++) {\n    const opCode = mutableOpCodes[i];\n    if (typeof opCode == 'string') {\n      const textNodeIndex = mutableOpCodes[++i] as number;\n      if (lView[textNodeIndex] === null) {\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && assertIndexInRange(lView, textNodeIndex);\n        lView[textNodeIndex] = createTextNode(renderer, opCode);\n      }\n    } else if (typeof opCode == 'number') {\n      switch (opCode & IcuCreateOpCode.MASK_INSTRUCTION) {\n        case IcuCreateOpCode.AppendChild:\n          const parentIdx = getParentFromIcuCreateOpCode(opCode);\n          if (rootIdx === null) {\n            // The first operation should save the `rootIdx` because the first operation\n            // must insert into the root. (Only subsequent operations can insert into a dynamic\n            // parent)\n            rootIdx = parentIdx;\n            rootRNode = nativeParentNode(renderer, anchorRNode);\n          }\n          let insertInFrontOf: RNode|null;\n          let parentRNode: RElement|null;\n          if (parentIdx === rootIdx) {\n            insertInFrontOf = anchorRNode;\n            parentRNode = rootRNode;\n          } else {\n            insertInFrontOf = null;\n            parentRNode = unwrapRNode(lView[parentIdx]) as RElement;\n          }\n          // FIXME(misko): Refactor with `processI18nText`\n          if (parentRNode !== null) {\n            // This can happen if the `LView` we are adding to is not attached to a parent `LView`.\n            // In such a case there is no \"root\" we can attach to. This is fine, as we still need to\n            // create the elements. When the `LView` gets later added to a parent these \"root\" nodes\n            // get picked up and added.\n            ngDevMode && assertDomNode(parentRNode);\n            const refIdx = getRefFromIcuCreateOpCode(opCode);\n            ngDevMode && assertGreaterThan(refIdx, HEADER_OFFSET, 'Missing ref');\n            // `unwrapRNode` is not needed here as all of these point to RNodes as part of the i18n\n            // which can't have components.\n            const child = lView[refIdx] as RElement;\n            ngDevMode && assertDomNode(child);\n            nativeInsertBefore(renderer, parentRNode, child, insertInFrontOf, false);\n            const tIcu = getTIcu(tView, refIdx);\n            if (tIcu !== null && typeof tIcu === 'object') {\n              // If we just added a comment node which has ICU then that ICU may have already been\n              // rendered and therefore we need to re-add it here.\n              ngDevMode && assertTIcu(tIcu);\n              const caseIndex = getCurrentICUCaseIndex(tIcu, lView);\n              if (caseIndex !== null) {\n                applyMutableOpCodes(tView, tIcu.create[caseIndex], lView, lView[tIcu.anchorIdx]);\n              }\n            }\n          }\n          break;\n        case IcuCreateOpCode.Attr:\n          const elementNodeIndex = opCode >>> IcuCreateOpCode.SHIFT_REF;\n          const attrName = mutableOpCodes[++i] as string;\n          const attrValue = mutableOpCodes[++i] as string;\n          // This code is used for ICU expressions only, since we don't support\n          // directives/components in ICUs, we don't need to worry about inputs here\n          setElementAttribute(\n              renderer, getNativeByIndex(elementNodeIndex, lView) as RElement, null, null, attrName,\n              attrValue, null);\n          break;\n        default:\n          if (ngDevMode) {\n            throw new RuntimeError(\n                RuntimeErrorCode.INVALID_I18N_STRUCTURE,\n                `Unable to determine the type of mutate operation for \"${opCode}\"`);\n          }\n      }\n    } else {\n      switch (opCode) {\n        case ICU_MARKER:\n          const commentValue = mutableOpCodes[++i] as string;\n          const commentNodeIndex = mutableOpCodes[++i] as number;\n          if (lView[commentNodeIndex] === null) {\n            ngDevMode &&\n                assertEqual(\n                    typeof commentValue, 'string',\n                    `Expected \"${commentValue}\" to be a comment node value`);\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            ngDevMode && assertIndexInExpandoRange(lView, commentNodeIndex);\n            const commentRNode = lView[commentNodeIndex] =\n                createCommentNode(renderer, commentValue);\n            // FIXME(misko): Attaching patch data is only needed for the root (Also add tests)\n            attachPatchData(commentRNode, lView);\n          }\n          break;\n        case ELEMENT_MARKER:\n          const tagName = mutableOpCodes[++i] as string;\n          const elementNodeIndex = mutableOpCodes[++i] as number;\n          if (lView[elementNodeIndex] === null) {\n            ngDevMode &&\n                assertEqual(\n                    typeof tagName, 'string',\n                    `Expected \"${tagName}\" to be an element node tag name`);\n\n            ngDevMode && ngDevMode.rendererCreateElement++;\n            ngDevMode && assertIndexInExpandoRange(lView, elementNodeIndex);\n            const elementRNode = lView[elementNodeIndex] =\n                createElementNode(renderer, tagName, null);\n            // FIXME(misko): Attaching patch data is only needed for the root (Also add tests)\n            attachPatchData(elementRNode, lView);\n          }\n          break;\n        default:\n          ngDevMode &&\n              throwError(`Unable to determine the type of mutate operation for \"${opCode}\"`);\n      }\n    }\n  }\n}\n\n\n/**\n * Apply `I18nUpdateOpCodes` OpCodes\n *\n * @param tView Current `TView`\n * @param lView Current `LView`\n * @param updateOpCodes OpCodes to process\n * @param bindingsStartIndex Location of the first `ɵɵi18nApply`\n * @param changeMask Each bit corresponds to a `ɵɵi18nExp` (Counting backwards from\n *     `bindingsStartIndex`)\n */\nexport function applyUpdateOpCodes(\n    tView: TView, lView: LView, updateOpCodes: I18nUpdateOpCodes, bindingsStartIndex: number,\n    changeMask: number) {\n  for (let i = 0; i < updateOpCodes.length; i++) {\n    // bit code to check if we should apply the next update\n    const checkBit = updateOpCodes[i] as number;\n    // Number of opCodes to skip until next set of update codes\n    const skipCodes = updateOpCodes[++i] as number;\n    if (checkBit & changeMask) {\n      // The value has been updated since last checked\n      let value = '';\n      for (let j = i + 1; j <= (i + skipCodes); j++) {\n        const opCode = updateOpCodes[j];\n        if (typeof opCode == 'string') {\n          value += opCode;\n        } else if (typeof opCode == 'number') {\n          if (opCode < 0) {\n            // Negative opCode represent `i18nExp` values offset.\n            value += renderStringify(lView[bindingsStartIndex - opCode]);\n          } else {\n            const nodeIndex = (opCode >>> I18nUpdateOpCode.SHIFT_REF);\n            switch (opCode & I18nUpdateOpCode.MASK_OPCODE) {\n              case I18nUpdateOpCode.Attr:\n                const propName = updateOpCodes[++j] as string;\n                const sanitizeFn = updateOpCodes[++j] as SanitizerFn | null;\n                const tNodeOrTagName = tView.data[nodeIndex] as TNode | string;\n                ngDevMode && assertDefined(tNodeOrTagName, 'Experting TNode or string');\n                if (typeof tNodeOrTagName === 'string') {\n                  // IF we don't have a `TNode`, then we are an element in ICU (as ICU content does\n                  // not have TNode), in which case we know that there are no directives, and hence\n                  // we use attribute setting.\n                  setElementAttribute(\n                      lView[RENDERER], lView[nodeIndex], null, tNodeOrTagName, propName, value,\n                      sanitizeFn);\n                } else {\n                  elementPropertyInternal(\n                      tView, tNodeOrTagName, lView, propName, value, lView[RENDERER], sanitizeFn,\n                      false);\n                }\n                break;\n              case I18nUpdateOpCode.Text:\n                const rText = lView[nodeIndex] as RText | null;\n                rText !== null && updateTextNode(lView[RENDERER], rText, value);\n                break;\n              case I18nUpdateOpCode.IcuSwitch:\n                applyIcuSwitchCase(tView, getTIcu(tView, nodeIndex)!, lView, value);\n                break;\n              case I18nUpdateOpCode.IcuUpdate:\n                applyIcuUpdateCase(tView, getTIcu(tView, nodeIndex)!, bindingsStartIndex, lView);\n                break;\n            }\n          }\n        }\n      }\n    } else {\n      const opCode = updateOpCodes[i + 1] as number;\n      if (opCode > 0 && (opCode & I18nUpdateOpCode.MASK_OPCODE) === I18nUpdateOpCode.IcuUpdate) {\n        // Special case for the `icuUpdateCase`. It could be that the mask did not match, but\n        // we still need to execute `icuUpdateCase` because the case has changed recently due to\n        // previous `icuSwitchCase` instruction. (`icuSwitchCase` and `icuUpdateCase` always come in\n        // pairs.)\n        const nodeIndex = (opCode >>> I18nUpdateOpCode.SHIFT_REF);\n        const tIcu = getTIcu(tView, nodeIndex)!;\n        const currentIndex = lView[tIcu.currentCaseLViewIndex];\n        if (currentIndex < 0) {\n          applyIcuUpdateCase(tView, tIcu, bindingsStartIndex, lView);\n        }\n      }\n    }\n    i += skipCodes;\n  }\n}\n\n/**\n * Apply OpCodes associated with updating an existing ICU.\n *\n * @param tView Current `TView`\n * @param tIcu Current `TIcu`\n * @param bindingsStartIndex Location of the first `ɵɵi18nApply`\n * @param lView Current `LView`\n */\nfunction applyIcuUpdateCase(tView: TView, tIcu: TIcu, bindingsStartIndex: number, lView: LView) {\n  ngDevMode && assertIndexInRange(lView, tIcu.currentCaseLViewIndex);\n  let activeCaseIndex = lView[tIcu.currentCaseLViewIndex];\n  if (activeCaseIndex !== null) {\n    let mask = changeMask;\n    if (activeCaseIndex < 0) {\n      // Clear the flag.\n      // Negative number means that the ICU was freshly created and we need to force the update.\n      activeCaseIndex = lView[tIcu.currentCaseLViewIndex] = ~activeCaseIndex;\n      // -1 is same as all bits on, which simulates creation since it marks all bits dirty\n      mask = -1;\n    }\n    applyUpdateOpCodes(tView, lView, tIcu.update[activeCaseIndex], bindingsStartIndex, mask);\n  }\n}\n\n/**\n * Apply OpCodes associated with switching a case on ICU.\n *\n * This involves tearing down existing case and than building up a new case.\n *\n * @param tView Current `TView`\n * @param tIcu Current `TIcu`\n * @param lView Current `LView`\n * @param value Value of the case to update to.\n */\nfunction applyIcuSwitchCase(tView: TView, tIcu: TIcu, lView: LView, value: string) {\n  // Rebuild a new case for this ICU\n  const caseIndex = getCaseIndex(tIcu, value);\n  let activeCaseIndex = getCurrentICUCaseIndex(tIcu, lView);\n  if (activeCaseIndex !== caseIndex) {\n    applyIcuSwitchCaseRemove(tView, tIcu, lView);\n    lView[tIcu.currentCaseLViewIndex] = caseIndex === null ? null : ~caseIndex;\n    if (caseIndex !== null) {\n      // Add the nodes for the new case\n      const anchorRNode = lView[tIcu.anchorIdx];\n      if (anchorRNode) {\n        ngDevMode && assertDomNode(anchorRNode);\n        applyMutableOpCodes(tView, tIcu.create[caseIndex], lView, anchorRNode);\n      }\n    }\n  }\n}\n\n/**\n * Apply OpCodes associated with tearing ICU case.\n *\n * This involves tearing down existing case and than building up a new case.\n *\n * @param tView Current `TView`\n * @param tIcu Current `TIcu`\n * @param lView Current `LView`\n */\nfunction applyIcuSwitchCaseRemove(tView: TView, tIcu: TIcu, lView: LView) {\n  let activeCaseIndex = getCurrentICUCaseIndex(tIcu, lView);\n  if (activeCaseIndex !== null) {\n    const removeCodes = tIcu.remove[activeCaseIndex];\n    for (let i = 0; i < removeCodes.length; i++) {\n      const nodeOrIcuIndex = removeCodes[i] as number;\n      if (nodeOrIcuIndex > 0) {\n        // Positive numbers are `RNode`s.\n        const rNode = getNativeByIndex(nodeOrIcuIndex, lView);\n        rNode !== null && nativeRemoveNode(lView[RENDERER], rNode);\n      } else {\n        // Negative numbers are ICUs\n        applyIcuSwitchCaseRemove(tView, getTIcu(tView, ~nodeOrIcuIndex)!, lView);\n      }\n    }\n  }\n}\n\n\n/**\n * Returns the index of the current case of an ICU expression depending on the main binding value\n *\n * @param icuExpression\n * @param bindingValue The value of the main binding used by this ICU expression\n */\nfunction getCaseIndex(icuExpression: TIcu, bindingValue: string): number|null {\n  let index = icuExpression.cases.indexOf(bindingValue);\n  if (index === -1) {\n    switch (icuExpression.type) {\n      case IcuType.plural: {\n        const resolvedCase = getPluralCase(bindingValue, getLocaleId());\n        index = icuExpression.cases.indexOf(resolvedCase);\n        if (index === -1 && resolvedCase !== 'other') {\n          index = icuExpression.cases.indexOf('other');\n        }\n        break;\n      }\n      case IcuType.select: {\n        index = icuExpression.cases.indexOf('other');\n        break;\n      }\n    }\n  }\n  return index === -1 ? null : index;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {assertDomNode, assertNumber, assertNumberInRange} from '../../util/assert';\nimport {EMPTY_ARRAY} from '../../util/empty';\nimport {assertTIcu, assertTNodeForLView} from '../assert';\nimport {getCurrentICUCaseIndex} from '../i18n/i18n_util';\nimport {I18nRemoveOpCodes, TIcu} from '../interfaces/i18n';\nimport {TIcuContainerNode} from '../interfaces/node';\nimport {RNode} from '../interfaces/renderer_dom';\nimport {LView, TVIEW} from '../interfaces/view';\n\nexport function loadIcuContainerVisitor() {\n  const _stack: any[] = [];\n  let _index: number = -1;\n  let _lView: LView;\n  let _removes: I18nRemoveOpCodes;\n\n  /**\n   * Retrieves a set of root nodes from `TIcu.remove`. Used by `TNodeType.ICUContainer`\n   * to determine which root belong to the ICU.\n   *\n   * Example of usage.\n   * ```\n   * const nextRNode = icuContainerIteratorStart(tIcuContainerNode, lView);\n   * let rNode: RNode|null;\n   * while(rNode = nextRNode()) {\n   *   console.log(rNode);\n   * }\n   * ```\n   *\n   * @param tIcuContainerNode Current `TIcuContainerNode`\n   * @param lView `LView` where the `RNode`s should be looked up.\n   */\n  function icuContainerIteratorStart(tIcuContainerNode: TIcuContainerNode, lView: LView): () =>\n      RNode | null {\n    _lView = lView;\n    while (_stack.length) _stack.pop();\n    ngDevMode && assertTNodeForLView(tIcuContainerNode, lView);\n    enterIcu(tIcuContainerNode.value, lView);\n    return icuContainerIteratorNext;\n  }\n\n  function enterIcu(tIcu: TIcu, lView: LView) {\n    _index = 0;\n    const currentCase = getCurrentICUCaseIndex(tIcu, lView);\n    if (currentCase !== null) {\n      ngDevMode && assertNumberInRange(currentCase, 0, tIcu.cases.length - 1);\n      _removes = tIcu.remove[currentCase];\n    } else {\n      _removes = EMPTY_ARRAY as any;\n    }\n  }\n\n\n  function icuContainerIteratorNext(): RNode|null {\n    if (_index < _removes.length) {\n      const removeOpCode = _removes[_index++] as number;\n      ngDevMode && assertNumber(removeOpCode, 'Expecting OpCode number');\n      if (removeOpCode > 0) {\n        const rNode = _lView[removeOpCode];\n        ngDevMode && assertDomNode(rNode);\n        return rNode;\n      } else {\n        _stack.push(_index, _removes);\n        // ICUs are represented by negative indices\n        const tIcuIndex = ~removeOpCode;\n        const tIcu = _lView[TVIEW].data[tIcuIndex] as TIcu;\n        ngDevMode && assertTIcu(tIcu);\n        enterIcu(tIcu, _lView);\n        return icuContainerIteratorNext();\n      }\n    } else {\n      if (_stack.length === 0) {\n        return null;\n      } else {\n        _removes = _stack.pop();\n        _index = _stack.pop();\n        return icuContainerIteratorNext();\n      }\n    }\n  }\n\n  return icuContainerIteratorStart;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport '../../util/ng_dev_mode';\nimport '../../util/ng_i18n_closure_mode';\n\nimport {getTemplateContent, SRCSET_ATTRS, URI_ATTRS, VALID_ATTRS, VALID_ELEMENTS} from '../../sanitization/html_sanitizer';\nimport {getInertBodyHelper} from '../../sanitization/inert_body';\nimport {_sanitizeUrl, sanitizeSrcset} from '../../sanitization/url_sanitizer';\nimport {assertDefined, assertEqual, assertGreaterThanOrEqual, assertOneOf, assertString} from '../../util/assert';\nimport {CharCode} from '../../util/char_code';\nimport {loadIcuContainerVisitor} from '../instructions/i18n_icu_container_visitor';\nimport {allocExpando, createTNodeAtIndex} from '../instructions/shared';\nimport {getDocument} from '../interfaces/document';\nimport {ELEMENT_MARKER, I18nCreateOpCode, I18nCreateOpCodes, I18nRemoveOpCodes, I18nUpdateOpCode, I18nUpdateOpCodes, ICU_MARKER, IcuCreateOpCode, IcuCreateOpCodes, IcuExpression, IcuType, TI18n, TIcu} from '../interfaces/i18n';\nimport {TNode, TNodeType} from '../interfaces/node';\nimport {SanitizerFn} from '../interfaces/sanitization';\nimport {HEADER_OFFSET, LView, TView} from '../interfaces/view';\nimport {getCurrentParentTNode, getCurrentTNode, setCurrentTNode} from '../state';\nimport {attachDebugGetter} from '../util/debug_utils';\n\nimport {i18nCreateOpCodesToString, i18nRemoveOpCodesToString, i18nUpdateOpCodesToString, icuCreateOpCodesToString} from './i18n_debug';\nimport {addTNodeAndUpdateInsertBeforeIndex} from './i18n_insert_before_index';\nimport {ensureIcuContainerVisitorLoaded} from './i18n_tree_shaking';\nimport {createTNodePlaceholder, icuCreateOpCode, setTIcu, setTNodeInsertBeforeIndex} from './i18n_util';\n\n\n\nconst BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\nconst ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\nconst NESTED_ICU = /�(\\d+)�/;\nconst ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n\nconst MARKER = `�`;\nconst SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\nconst PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here, since translations\n * might contain this special character.\n */\nconst NGSP_UNICODE_REGEXP = /\\uE500/g;\nfunction replaceNgsp(value: string): string {\n  return value.replace(NGSP_UNICODE_REGEXP, ' ');\n}\n\n/**\n * Create dynamic nodes from i18n translation block.\n *\n * - Text nodes are created synchronously\n * - TNodes are linked into tree lazily\n *\n * @param tView Current `TView`\n * @parentTNodeIndex index to the parent TNode of this i18n block\n * @param lView Current `LView`\n * @param index Index of `ɵɵi18nStart` instruction.\n * @param message Message to translate.\n * @param subTemplateIndex Index into the sub template of message translation. (ie in case of\n *     `ngIf`) (-1 otherwise)\n */\nexport function i18nStartFirstCreatePass(\n    tView: TView, parentTNodeIndex: number, lView: LView, index: number, message: string,\n    subTemplateIndex: number) {\n  const rootTNode = getCurrentParentTNode();\n  const createOpCodes: I18nCreateOpCodes = [] as any;\n  const updateOpCodes: I18nUpdateOpCodes = [] as any;\n  const existingTNodeStack: TNode[][] = [[]];\n  if (ngDevMode) {\n    attachDebugGetter(createOpCodes, i18nCreateOpCodesToString);\n    attachDebugGetter(updateOpCodes, i18nUpdateOpCodesToString);\n  }\n\n  message = getTranslationForTemplate(message, subTemplateIndex);\n  const msgParts = replaceNgsp(message).split(PH_REGEXP);\n  for (let i = 0; i < msgParts.length; i++) {\n    let value = msgParts[i];\n    if ((i & 1) === 0) {\n      // Even indexes are text (including bindings & ICU expressions)\n      const parts = i18nParseTextIntoPartsAndICU(value);\n      for (let j = 0; j < parts.length; j++) {\n        let part = parts[j];\n        if ((j & 1) === 0) {\n          // `j` is odd therefore `part` is string\n          const text = part as string;\n          ngDevMode && assertString(text, 'Parsed ICU part should be string');\n          if (text !== '') {\n            i18nStartFirstCreatePassProcessTextNode(\n                tView, rootTNode, existingTNodeStack[0], createOpCodes, updateOpCodes, lView, text);\n          }\n        } else {\n          // `j` is Even therefor `part` is an `ICUExpression`\n          const icuExpression: IcuExpression = part as IcuExpression;\n          // Verify that ICU expression has the right shape. Translations might contain invalid\n          // constructions (while original messages were correct), so ICU parsing at runtime may\n          // not succeed (thus `icuExpression` remains a string).\n          // Note: we intentionally retain the error here by not using `ngDevMode`, because\n          // the value can change based on the locale and users aren't guaranteed to hit\n          // an invalid string while they're developing.\n          if (typeof icuExpression !== 'object') {\n            throw new Error(`Unable to parse ICU expression in \"${message}\" message.`);\n          }\n          const icuContainerTNode = createTNodeAndAddOpCode(\n              tView, rootTNode, existingTNodeStack[0], lView, createOpCodes,\n              ngDevMode ? `ICU ${index}:${icuExpression.mainBinding}` : '', true);\n          const icuNodeIndex = icuContainerTNode.index;\n          ngDevMode &&\n              assertGreaterThanOrEqual(\n                  icuNodeIndex, HEADER_OFFSET, 'Index must be in absolute LView offset');\n          icuStart(tView, lView, updateOpCodes, parentTNodeIndex, icuExpression, icuNodeIndex);\n        }\n      }\n    } else {\n      // Odd indexes are placeholders (elements and sub-templates)\n      // At this point value is something like: '/#1:2' (originally coming from '�/#1:2�')\n      const isClosing = value.charCodeAt(0) === CharCode.SLASH;\n      const type = value.charCodeAt(isClosing ? 1 : 0);\n      ngDevMode && assertOneOf(type, CharCode.STAR, CharCode.HASH);\n      const index = HEADER_OFFSET + Number.parseInt(value.substring((isClosing ? 2 : 1)));\n      if (isClosing) {\n        existingTNodeStack.shift();\n        setCurrentTNode(getCurrentParentTNode()!, false);\n      } else {\n        const tNode = createTNodePlaceholder(tView, existingTNodeStack[0], index);\n        existingTNodeStack.unshift([]);\n        setCurrentTNode(tNode, true);\n      }\n    }\n  }\n\n  tView.data[index] = <TI18n>{\n    create: createOpCodes,\n    update: updateOpCodes,\n  };\n}\n\n/**\n * Allocate space in i18n Range add create OpCode instruction to create a text or comment node.\n *\n * @param tView Current `TView` needed to allocate space in i18n range.\n * @param rootTNode Root `TNode` of the i18n block. This node determines if the new TNode will be\n *     added as part of the `i18nStart` instruction or as part of the `TNode.insertBeforeIndex`.\n * @param existingTNodes internal state for `addTNodeAndUpdateInsertBeforeIndex`.\n * @param lView Current `LView` needed to allocate space in i18n range.\n * @param createOpCodes Array storing `I18nCreateOpCodes` where new opCodes will be added.\n * @param text Text to be added when the `Text` or `Comment` node will be created.\n * @param isICU true if a `Comment` node for ICU (instead of `Text`) node should be created.\n */\nfunction createTNodeAndAddOpCode(\n    tView: TView, rootTNode: TNode|null, existingTNodes: TNode[], lView: LView,\n    createOpCodes: I18nCreateOpCodes, text: string|null, isICU: boolean): TNode {\n  const i18nNodeIdx = allocExpando(tView, lView, 1, null);\n  let opCode = i18nNodeIdx << I18nCreateOpCode.SHIFT;\n  let parentTNode = getCurrentParentTNode();\n\n  if (rootTNode === parentTNode) {\n    // FIXME(misko): A null `parentTNode` should represent when we fall of the `LView` boundary.\n    // (there is no parent), but in some circumstances (because we are inconsistent about how we set\n    // `previousOrParentTNode`) it could point to `rootTNode` So this is a work around.\n    parentTNode = null;\n  }\n  if (parentTNode === null) {\n    // If we don't have a parent that means that we can eagerly add nodes.\n    // If we have a parent than these nodes can't be added now (as the parent has not been created\n    // yet) and instead the `parentTNode` is responsible for adding it. See\n    // `TNode.insertBeforeIndex`\n    opCode |= I18nCreateOpCode.APPEND_EAGERLY;\n  }\n  if (isICU) {\n    opCode |= I18nCreateOpCode.COMMENT;\n    ensureIcuContainerVisitorLoaded(loadIcuContainerVisitor);\n  }\n  createOpCodes.push(opCode, text === null ? '' : text);\n  // We store `{{?}}` so that when looking at debug `TNodeType.template` we can see where the\n  // bindings are.\n  const tNode = createTNodeAtIndex(\n      tView, i18nNodeIdx, isICU ? TNodeType.Icu : TNodeType.Text,\n      text === null ? (ngDevMode ? '{{?}}' : '') : text, null);\n  addTNodeAndUpdateInsertBeforeIndex(existingTNodes, tNode);\n  const tNodeIdx = tNode.index;\n  setCurrentTNode(tNode, false /* Text nodes are self closing */);\n  if (parentTNode !== null && rootTNode !== parentTNode) {\n    // We are a child of deeper node (rather than a direct child of `i18nStart` instruction.)\n    // We have to make sure to add ourselves to the parent.\n    setTNodeInsertBeforeIndex(parentTNode, tNodeIdx);\n  }\n  return tNode;\n}\n\n/**\n * Processes text node in i18n block.\n *\n * Text nodes can have:\n * - Create instruction in `createOpCodes` for creating the text node.\n * - Allocate spec for text node in i18n range of `LView`\n * - If contains binding:\n *    - bindings => allocate space in i18n range of `LView` to store the binding value.\n *    - populate `updateOpCodes` with update instructions.\n *\n * @param tView Current `TView`\n * @param rootTNode Root `TNode` of the i18n block. This node determines if the new TNode will\n *     be added as part of the `i18nStart` instruction or as part of the\n *     `TNode.insertBeforeIndex`.\n * @param existingTNodes internal state for `addTNodeAndUpdateInsertBeforeIndex`.\n * @param createOpCodes Location where the creation OpCodes will be stored.\n * @param lView Current `LView`\n * @param text The translated text (which may contain binding)\n */\nfunction i18nStartFirstCreatePassProcessTextNode(\n    tView: TView, rootTNode: TNode|null, existingTNodes: TNode[], createOpCodes: I18nCreateOpCodes,\n    updateOpCodes: I18nUpdateOpCodes, lView: LView, text: string): void {\n  const hasBinding = text.match(BINDING_REGEXP);\n  const tNode = createTNodeAndAddOpCode(\n      tView, rootTNode, existingTNodes, lView, createOpCodes, hasBinding ? null : text, false);\n  if (hasBinding) {\n    generateBindingUpdateOpCodes(updateOpCodes, text, tNode.index, null, 0, null);\n  }\n}\n\n/**\n * See `i18nAttributes` above.\n */\nexport function i18nAttributesFirstPass(tView: TView, index: number, values: string[]) {\n  const previousElement = getCurrentTNode()!;\n  const previousElementIndex = previousElement.index;\n  const updateOpCodes: I18nUpdateOpCodes = [] as any;\n  if (ngDevMode) {\n    attachDebugGetter(updateOpCodes, i18nUpdateOpCodesToString);\n  }\n  if (tView.firstCreatePass && tView.data[index] === null) {\n    for (let i = 0; i < values.length; i += 2) {\n      const attrName = values[i];\n      const message = values[i + 1];\n\n      if (message !== '') {\n        // Check if attribute value contains an ICU and throw an error if that's the case.\n        // ICUs in element attributes are not supported.\n        // Note: we intentionally retain the error here by not using `ngDevMode`, because\n        // the `value` can change based on the locale and users aren't guaranteed to hit\n        // an invalid string while they're developing.\n        if (ICU_REGEXP.test(message)) {\n          throw new Error(\n              `ICU expressions are not supported in attributes. Message: \"${message}\".`);\n        }\n\n        // i18n attributes that hit this code path are guaranteed to have bindings, because\n        // the compiler treats static i18n attributes as regular attribute bindings.\n        // Since this may not be the first i18n attribute on this element we need to pass in how\n        // many previous bindings there have already been.\n        generateBindingUpdateOpCodes(\n            updateOpCodes, message, previousElementIndex, attrName, countBindings(updateOpCodes),\n            null);\n      }\n    }\n    tView.data[index] = updateOpCodes;\n  }\n}\n\n\n/**\n * Generate the OpCodes to update the bindings of a string.\n *\n * @param updateOpCodes Place where the update opcodes will be stored.\n * @param str The string containing the bindings.\n * @param destinationNode Index of the destination node which will receive the binding.\n * @param attrName Name of the attribute, if the string belongs to an attribute.\n * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n * @param bindingStart The lView index of the next expression that can be bound via an opCode.\n * @returns The mask value for these bindings\n */\nfunction generateBindingUpdateOpCodes(\n    updateOpCodes: I18nUpdateOpCodes, str: string, destinationNode: number, attrName: string|null,\n    bindingStart: number, sanitizeFn: SanitizerFn|null): number {\n  ngDevMode &&\n      assertGreaterThanOrEqual(\n          destinationNode, HEADER_OFFSET, 'Index must be in absolute LView offset');\n  const maskIndex = updateOpCodes.length;  // Location of mask\n  const sizeIndex = maskIndex + 1;         // location of size for skipping\n  updateOpCodes.push(null, null);          // Alloc space for mask and size\n  const startIndex = maskIndex + 2;        // location of first allocation.\n  if (ngDevMode) {\n    attachDebugGetter(updateOpCodes, i18nUpdateOpCodesToString);\n  }\n  const textParts = str.split(BINDING_REGEXP);\n  let mask = 0;\n\n  for (let j = 0; j < textParts.length; j++) {\n    const textValue = textParts[j];\n\n    if (j & 1) {\n      // Odd indexes are bindings\n      const bindingIndex = bindingStart + parseInt(textValue, 10);\n      updateOpCodes.push(-1 - bindingIndex);\n      mask = mask | toMaskBit(bindingIndex);\n    } else if (textValue !== '') {\n      // Even indexes are text\n      updateOpCodes.push(textValue);\n    }\n  }\n\n  updateOpCodes.push(\n      destinationNode << I18nUpdateOpCode.SHIFT_REF |\n      (attrName ? I18nUpdateOpCode.Attr : I18nUpdateOpCode.Text));\n  if (attrName) {\n    updateOpCodes.push(attrName, sanitizeFn);\n  }\n  updateOpCodes[maskIndex] = mask;\n  updateOpCodes[sizeIndex] = updateOpCodes.length - startIndex;\n  return mask;\n}\n\n/**\n * Count the number of bindings in the given `opCodes`.\n *\n * It could be possible to speed this up, by passing the number of bindings found back from\n * `generateBindingUpdateOpCodes()` to `i18nAttributesFirstPass()` but this would then require more\n * complexity in the code and/or transient objects to be created.\n *\n * Since this function is only called once when the template is instantiated, is trivial in the\n * first instance (since `opCodes` will be an empty array), and it is not common for elements to\n * contain multiple i18n bound attributes, it seems like this is a reasonable compromise.\n */\nfunction countBindings(opCodes: I18nUpdateOpCodes): number {\n  let count = 0;\n  for (let i = 0; i < opCodes.length; i++) {\n    const opCode = opCodes[i];\n    // Bindings are negative numbers.\n    if (typeof opCode === 'number' && opCode < 0) {\n      count++;\n    }\n  }\n  return count;\n}\n\n/**\n * Convert binding index to mask bit.\n *\n * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to\n * have more than 32 bindings this will be hit very rarely. The downside of hitting this corner\n * case is that we will execute binding code more often than necessary. (penalty of performance)\n */\nfunction toMaskBit(bindingIndex: number): number {\n  return 1 << Math.min(bindingIndex, 31);\n}\n\nexport function isRootTemplateMessage(subTemplateIndex: number): subTemplateIndex is - 1 {\n  return subTemplateIndex === -1;\n}\n\n\n/**\n * Removes everything inside the sub-templates of a message.\n */\nfunction removeInnerTemplateTranslation(message: string): string {\n  let match;\n  let res = '';\n  let index = 0;\n  let inTemplate = false;\n  let tagMatched;\n\n  while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n    if (!inTemplate) {\n      res += message.substring(index, match.index + match[0].length);\n      tagMatched = match[1];\n      inTemplate = true;\n    } else {\n      if (match[0] === `${MARKER}/*${tagMatched}${MARKER}`) {\n        index = match.index;\n        inTemplate = false;\n      }\n    }\n  }\n\n  ngDevMode &&\n      assertEqual(\n          inTemplate, false,\n          `Tag mismatch: unable to find the end of the sub-template in the translation \"${\n              message}\"`);\n\n  res += message.slice(index);\n  return res;\n}\n\n\n/**\n * Extracts a part of a message and removes the rest.\n *\n * This method is used for extracting a part of the message associated with a template. A\n * translated message can span multiple templates.\n *\n * Example:\n * ```\n * <div i18n>Translate <span *ngIf>me</span>!</div>\n * ```\n *\n * @param message The message to crop\n * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n * external template and removes all sub-templates.\n */\nexport function getTranslationForTemplate(message: string, subTemplateIndex: number) {\n  if (isRootTemplateMessage(subTemplateIndex)) {\n    // We want the root template message, ignore all sub-templates\n    return removeInnerTemplateTranslation(message);\n  } else {\n    // We want a specific sub-template\n    const start =\n        message.indexOf(`:${subTemplateIndex}${MARKER}`) + 2 + subTemplateIndex.toString().length;\n    const end = message.search(new RegExp(`${MARKER}\\\\/\\\\*\\\\d+:${subTemplateIndex}${MARKER}`));\n    return removeInnerTemplateTranslation(message.substring(start, end));\n  }\n}\n\n/**\n * Generate the OpCodes for ICU expressions.\n *\n * @param icuExpression\n * @param index Index where the anchor is stored and an optional `TIcuContainerNode`\n *   - `lView[anchorIdx]` points to a `Comment` node representing the anchor for the ICU.\n *   - `tView.data[anchorIdx]` points to the `TIcuContainerNode` if ICU is root (`null` otherwise)\n */\nexport function icuStart(\n    tView: TView, lView: LView, updateOpCodes: I18nUpdateOpCodes, parentIdx: number,\n    icuExpression: IcuExpression, anchorIdx: number) {\n  ngDevMode && assertDefined(icuExpression, 'ICU expression must be defined');\n  let bindingMask = 0;\n  const tIcu: TIcu = {\n    type: icuExpression.type,\n    currentCaseLViewIndex: allocExpando(tView, lView, 1, null),\n    anchorIdx,\n    cases: [],\n    create: [],\n    remove: [],\n    update: []\n  };\n  addUpdateIcuSwitch(updateOpCodes, icuExpression, anchorIdx);\n  setTIcu(tView, anchorIdx, tIcu);\n  const values = icuExpression.values;\n  for (let i = 0; i < values.length; i++) {\n    // Each value is an array of strings & other ICU expressions\n    const valueArr = values[i];\n    const nestedIcus: IcuExpression[] = [];\n    for (let j = 0; j < valueArr.length; j++) {\n      const value = valueArr[j];\n      if (typeof value !== 'string') {\n        // It is an nested ICU expression\n        const icuIndex = nestedIcus.push(value as IcuExpression) - 1;\n        // Replace nested ICU expression by a comment node\n        valueArr[j] = `<!--�${icuIndex}�-->`;\n      }\n    }\n    bindingMask = parseIcuCase(\n                      tView, tIcu, lView, updateOpCodes, parentIdx, icuExpression.cases[i],\n                      valueArr.join(''), nestedIcus) |\n        bindingMask;\n  }\n  if (bindingMask) {\n    addUpdateIcuUpdate(updateOpCodes, bindingMask, anchorIdx);\n  }\n}\n\n/**\n * Parses text containing an ICU expression and produces a JSON object for it.\n * Original code from closure library, modified for Angular.\n *\n * @param pattern Text containing an ICU expression that needs to be parsed.\n *\n */\nexport function parseICUBlock(pattern: string): IcuExpression {\n  const cases = [];\n  const values: (string|IcuExpression)[][] = [];\n  let icuType = IcuType.plural;\n  let mainBinding = 0;\n  pattern = pattern.replace(ICU_BLOCK_REGEXP, function(str: string, binding: string, type: string) {\n    if (type === 'select') {\n      icuType = IcuType.select;\n    } else {\n      icuType = IcuType.plural;\n    }\n    mainBinding = parseInt(binding.slice(1), 10);\n    return '';\n  });\n\n  const parts = i18nParseTextIntoPartsAndICU(pattern) as string[];\n  // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n  for (let pos = 0; pos < parts.length;) {\n    let key = parts[pos++].trim();\n    if (icuType === IcuType.plural) {\n      // Key can be \"=x\", we just want \"x\"\n      key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n    }\n    if (key.length) {\n      cases.push(key);\n    }\n\n    const blocks = i18nParseTextIntoPartsAndICU(parts[pos++]) as string[];\n    if (cases.length > values.length) {\n      values.push(blocks);\n    }\n  }\n\n  // TODO(ocombe): support ICU expressions in attributes, see #21615\n  return {type: icuType, mainBinding: mainBinding, cases, values};\n}\n\n\n/**\n * Breaks pattern into strings and top level {...} blocks.\n * Can be used to break a message into text and ICU expressions, or to break an ICU expression\n * into keys and cases. Original code from closure library, modified for Angular.\n *\n * @param pattern (sub)Pattern to be broken.\n * @returns An `Array<string|IcuExpression>` where:\n *   - odd positions: `string` => text between ICU expressions\n *   - even positions: `ICUExpression` => ICU expression parsed into `ICUExpression` record.\n */\nexport function i18nParseTextIntoPartsAndICU(pattern: string): (string|IcuExpression)[] {\n  if (!pattern) {\n    return [];\n  }\n\n  let prevPos = 0;\n  const braceStack = [];\n  const results: (string|IcuExpression)[] = [];\n  const braces = /[{}]/g;\n  // lastIndex doesn't get set to 0 so we have to.\n  braces.lastIndex = 0;\n\n  let match;\n  while (match = braces.exec(pattern)) {\n    const pos = match.index;\n    if (match[0] == '}') {\n      braceStack.pop();\n\n      if (braceStack.length == 0) {\n        // End of the block.\n        const block = pattern.substring(prevPos, pos);\n        if (ICU_BLOCK_REGEXP.test(block)) {\n          results.push(parseICUBlock(block));\n        } else {\n          results.push(block);\n        }\n\n        prevPos = pos + 1;\n      }\n    } else {\n      if (braceStack.length == 0) {\n        const substring = pattern.substring(prevPos, pos);\n        results.push(substring);\n        prevPos = pos + 1;\n      }\n      braceStack.push('{');\n    }\n  }\n\n  const substring = pattern.substring(prevPos);\n  results.push(substring);\n  return results;\n}\n\n\n/**\n * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n *\n */\nexport function parseIcuCase(\n    tView: TView, tIcu: TIcu, lView: LView, updateOpCodes: I18nUpdateOpCodes, parentIdx: number,\n    caseName: string, unsafeCaseHtml: string, nestedIcus: IcuExpression[]): number {\n  const create: IcuCreateOpCodes = [] as any;\n  const remove: I18nRemoveOpCodes = [] as any;\n  const update: I18nUpdateOpCodes = [] as any;\n  if (ngDevMode) {\n    attachDebugGetter(create, icuCreateOpCodesToString);\n    attachDebugGetter(remove, i18nRemoveOpCodesToString);\n    attachDebugGetter(update, i18nUpdateOpCodesToString);\n  }\n  tIcu.cases.push(caseName);\n  tIcu.create.push(create);\n  tIcu.remove.push(remove);\n  tIcu.update.push(update);\n\n  const inertBodyHelper = getInertBodyHelper(getDocument());\n  const inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeCaseHtml);\n  ngDevMode && assertDefined(inertBodyElement, 'Unable to generate inert body element');\n  const inertRootNode = getTemplateContent(inertBodyElement!) as Element || inertBodyElement;\n  if (inertRootNode) {\n    return walkIcuTree(\n        tView, tIcu, lView, updateOpCodes, create, remove, update, inertRootNode, parentIdx,\n        nestedIcus, 0);\n  } else {\n    return 0;\n  }\n}\n\nfunction walkIcuTree(\n    tView: TView, tIcu: TIcu, lView: LView, sharedUpdateOpCodes: I18nUpdateOpCodes,\n    create: IcuCreateOpCodes, remove: I18nRemoveOpCodes, update: I18nUpdateOpCodes,\n    parentNode: Element, parentIdx: number, nestedIcus: IcuExpression[], depth: number): number {\n  let bindingMask = 0;\n  let currentNode = parentNode.firstChild;\n  while (currentNode) {\n    const newIndex = allocExpando(tView, lView, 1, null);\n    switch (currentNode.nodeType) {\n      case Node.ELEMENT_NODE:\n        const element = currentNode as Element;\n        const tagName = element.tagName.toLowerCase();\n        if (VALID_ELEMENTS.hasOwnProperty(tagName)) {\n          addCreateNodeAndAppend(create, ELEMENT_MARKER, tagName, parentIdx, newIndex);\n          tView.data[newIndex] = tagName;\n          const elAttrs = element.attributes;\n          for (let i = 0; i < elAttrs.length; i++) {\n            const attr = elAttrs.item(i)!;\n            const lowerAttrName = attr.name.toLowerCase();\n            const hasBinding = !!attr.value.match(BINDING_REGEXP);\n            // we assume the input string is safe, unless it's using a binding\n            if (hasBinding) {\n              if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                if (URI_ATTRS[lowerAttrName]) {\n                  generateBindingUpdateOpCodes(\n                      update, attr.value, newIndex, attr.name, 0, _sanitizeUrl);\n                } else if (SRCSET_ATTRS[lowerAttrName]) {\n                  generateBindingUpdateOpCodes(\n                      update, attr.value, newIndex, attr.name, 0, sanitizeSrcset);\n                } else {\n                  generateBindingUpdateOpCodes(update, attr.value, newIndex, attr.name, 0, null);\n                }\n              } else {\n                ngDevMode &&\n                    console.warn(\n                        `WARNING: ignoring unsafe attribute value ` +\n                        `${lowerAttrName} on element ${tagName} ` +\n                        `(see https://g.co/ng/security#xss)`);\n              }\n            } else {\n              addCreateAttribute(create, newIndex, attr);\n            }\n          }\n          // Parse the children of this node (if any)\n          bindingMask = walkIcuTree(\n                            tView, tIcu, lView, sharedUpdateOpCodes, create, remove, update,\n                            currentNode as Element, newIndex, nestedIcus, depth + 1) |\n              bindingMask;\n          addRemoveNode(remove, newIndex, depth);\n        }\n        break;\n      case Node.TEXT_NODE:\n        const value = currentNode.textContent || '';\n        const hasBinding = value.match(BINDING_REGEXP);\n        addCreateNodeAndAppend(create, null, hasBinding ? '' : value, parentIdx, newIndex);\n        addRemoveNode(remove, newIndex, depth);\n        if (hasBinding) {\n          bindingMask =\n              generateBindingUpdateOpCodes(update, value, newIndex, null, 0, null) | bindingMask;\n        }\n        break;\n      case Node.COMMENT_NODE:\n        // Check if the comment node is a placeholder for a nested ICU\n        const isNestedIcu = NESTED_ICU.exec(currentNode.textContent || '');\n        if (isNestedIcu) {\n          const nestedIcuIndex = parseInt(isNestedIcu[1], 10);\n          const icuExpression: IcuExpression = nestedIcus[nestedIcuIndex];\n          // Create the comment node that will anchor the ICU expression\n          addCreateNodeAndAppend(\n              create, ICU_MARKER, ngDevMode ? `nested ICU ${nestedIcuIndex}` : '', parentIdx,\n              newIndex);\n          icuStart(tView, lView, sharedUpdateOpCodes, parentIdx, icuExpression, newIndex);\n          addRemoveNestedIcu(remove, newIndex, depth);\n        }\n        break;\n    }\n    currentNode = currentNode.nextSibling;\n  }\n  return bindingMask;\n}\n\nfunction addRemoveNode(remove: I18nRemoveOpCodes, index: number, depth: number) {\n  if (depth === 0) {\n    remove.push(index);\n  }\n}\n\nfunction addRemoveNestedIcu(remove: I18nRemoveOpCodes, index: number, depth: number) {\n  if (depth === 0) {\n    remove.push(~index);  // remove ICU at `index`\n    remove.push(index);   // remove ICU comment at `index`\n  }\n}\n\nfunction addUpdateIcuSwitch(\n    update: I18nUpdateOpCodes, icuExpression: IcuExpression, index: number) {\n  update.push(\n      toMaskBit(icuExpression.mainBinding), 2, -1 - icuExpression.mainBinding,\n      index << I18nUpdateOpCode.SHIFT_REF | I18nUpdateOpCode.IcuSwitch);\n}\n\nfunction addUpdateIcuUpdate(update: I18nUpdateOpCodes, bindingMask: number, index: number) {\n  update.push(bindingMask, 1, index << I18nUpdateOpCode.SHIFT_REF | I18nUpdateOpCode.IcuUpdate);\n}\n\nfunction addCreateNodeAndAppend(\n    create: IcuCreateOpCodes, marker: null|ICU_MARKER|ELEMENT_MARKER, text: string,\n    appendToParentIdx: number, createAtIdx: number) {\n  if (marker !== null) {\n    create.push(marker);\n  }\n  create.push(\n      text, createAtIdx,\n      icuCreateOpCode(IcuCreateOpCode.AppendChild, appendToParentIdx, createAtIdx));\n}\n\nfunction addCreateAttribute(create: IcuCreateOpCodes, newIndex: number, attr: Attr) {\n  create.push(newIndex << IcuCreateOpCode.SHIFT_REF | IcuCreateOpCode.Attr, attr.name, attr.value);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// i18nPostprocess consts\nconst ROOT_TEMPLATE_ID = 0;\nconst PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\nconst PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\nconst PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\nconst PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\nconst PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\nconst PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\nconst PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n\n// Parsed placeholder structure used in postprocessing (within `i18nPostprocess` function)\n// Contains the following fields: [templateId, isCloseTemplateTag, placeholder]\ntype PostprocessPlaceholder = [number, boolean, string];\n\n\n/**\n * Handles message string post-processing for internationalization.\n *\n * Handles message string post-processing by transforming it from intermediate\n * format (that might contain some markers that we need to replace) to the final\n * form, consumable by i18nStart instruction. Post processing steps include:\n *\n * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n *    in case multiple ICUs have the same placeholder name\n *\n * @param message Raw translation string for post processing\n * @param replacements Set of replacements that should be applied\n *\n * @returns Transformed string that can be consumed by i18nStart instruction\n *\n * @codeGenApi\n */\nexport function i18nPostprocess(\n    message: string, replacements: {[key: string]: (string|string[])} = {}): string {\n  /**\n   * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n   *\n   * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n   * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n   * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n   * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n   * front of �#6�. The post processing step restores the right order by keeping track of the\n   * template id stack and looks for placeholders that belong to the currently active template.\n   */\n  let result: string = message;\n  if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n    const matches: {[key: string]: PostprocessPlaceholder[]} = {};\n    const templateIdsStack: number[] = [ROOT_TEMPLATE_ID];\n    result = result.replace(PP_PLACEHOLDERS_REGEXP, (m: any, phs: string, tmpl: string): string => {\n      const content = phs || tmpl;\n      const placeholders: PostprocessPlaceholder[] = matches[content] || [];\n      if (!placeholders.length) {\n        content.split('|').forEach((placeholder: string) => {\n          const match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n          const templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n          const isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n          placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n        });\n        matches[content] = placeholders;\n      }\n\n      if (!placeholders.length) {\n        throw new Error(`i18n postprocess: unmatched placeholder - ${content}`);\n      }\n\n      const currentTemplateId = templateIdsStack[templateIdsStack.length - 1];\n      let idx = 0;\n      // find placeholder index that matches current template id\n      for (let i = 0; i < placeholders.length; i++) {\n        if (placeholders[i][0] === currentTemplateId) {\n          idx = i;\n          break;\n        }\n      }\n      // update template id stack based on the current tag extracted\n      const [templateId, isCloseTemplateTag, placeholder] = placeholders[idx];\n      if (isCloseTemplateTag) {\n        templateIdsStack.pop();\n      } else if (currentTemplateId !== templateId) {\n        templateIdsStack.push(templateId);\n      }\n      // remove processed tag from the list\n      placeholders.splice(idx, 1);\n      return placeholder;\n    });\n  }\n\n  // return current result if no replacements specified\n  if (!Object.keys(replacements).length) {\n    return result;\n  }\n\n  /**\n   * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n   */\n  result = result.replace(PP_ICU_VARS_REGEXP, (match, start, key, _type, _idx, end): string => {\n    return replacements.hasOwnProperty(key) ? `${start}${replacements[key]}${end}` : match;\n  });\n\n  /**\n   * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n   */\n  result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, (match, key): string => {\n    return replacements.hasOwnProperty(key) ? replacements[key] as string : match;\n  });\n\n  /**\n   * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n   * multiple ICUs have the same placeholder name\n   */\n  result = result.replace(PP_ICUS_REGEXP, (match, key): string => {\n    if (replacements.hasOwnProperty(key)) {\n      const list = replacements[key] as string[];\n      if (!list.length) {\n        throw new Error(`i18n postprocess: unmatched ICU - ${match} with key: ${key}`);\n      }\n      return list.shift()!;\n    }\n    return match;\n  });\n\n  return result;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport '../../util/ng_dev_mode';\nimport '../../util/ng_i18n_closure_mode';\n\nimport {assertDefined} from '../../util/assert';\nimport {bindingUpdated} from '../bindings';\nimport {applyCreateOpCodes, applyI18n, setMaskBit} from '../i18n/i18n_apply';\nimport {i18nAttributesFirstPass, i18nStartFirstCreatePass} from '../i18n/i18n_parse';\nimport {i18nPostprocess} from '../i18n/i18n_postprocess';\nimport {TI18n} from '../interfaces/i18n';\nimport {TElementNode, TNodeType} from '../interfaces/node';\nimport {HEADER_OFFSET, T_HOST} from '../interfaces/view';\nimport {getClosestRElement} from '../node_manipulation';\nimport {getCurrentParentTNode, getLView, getTView, nextBindingIndex, setInI18nBlock} from '../state';\nimport {getConstant} from '../util/view_utils';\n\n/**\n * Marks a block of text as translatable.\n *\n * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n * The translation `message` is the value which is locale specific. The translation string may\n * contain placeholders which associate inner elements and sub-templates within the translation.\n *\n * The translation `message` placeholders are:\n * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n *   `block` that matches the sub-template in which it was declared.\n * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n *   and end of DOM element that were embedded in the original translation block. The placeholder\n *   `index` points to the element index in the template instructions set. An optional `block` that\n *   matches the sub-template in which it was declared.\n * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n *   split up and translated separately in each angular template function. The `index` points to the\n *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n *\n * @param index A unique index of the translation in the static block.\n * @param messageIndex An index of the translation message from the `def.consts` array.\n * @param subTemplateIndex Optional sub-template index in the `message`.\n *\n * @codeGenApi\n */\nexport function ɵɵi18nStart(\n    index: number, messageIndex: number, subTemplateIndex: number = -1): void {\n  const tView = getTView();\n  const lView = getLView();\n  const adjustedIndex = HEADER_OFFSET + index;\n  ngDevMode && assertDefined(tView, `tView should be defined`);\n  const message = getConstant<string>(tView.consts, messageIndex)!;\n  const parentTNode = getCurrentParentTNode() as TElementNode | null;\n  if (tView.firstCreatePass) {\n    i18nStartFirstCreatePass(\n        tView, parentTNode === null ? 0 : parentTNode.index, lView, adjustedIndex, message,\n        subTemplateIndex);\n  }\n  const tI18n = tView.data[adjustedIndex] as TI18n;\n  const sameViewParentTNode = parentTNode === lView[T_HOST] ? null : parentTNode;\n  const parentRNode = getClosestRElement(tView, sameViewParentTNode, lView);\n  // If `parentTNode` is an `ElementContainer` than it has `<!--ng-container--->`.\n  // When we do inserts we have to make sure to insert in front of `<!--ng-container--->`.\n  const insertInFrontOf = parentTNode && (parentTNode.type & TNodeType.ElementContainer) ?\n      lView[parentTNode.index] :\n      null;\n  applyCreateOpCodes(lView, tI18n.create, parentRNode, insertInFrontOf);\n  setInI18nBlock(true);\n}\n\n\n\n/**\n * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n *\n * @codeGenApi\n */\nexport function ɵɵi18nEnd(): void {\n  setInI18nBlock(false);\n}\n\n/**\n *\n * Use this instruction to create a translation block that doesn't contain any placeholder.\n * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n *\n * The translation `message` is the value which is locale specific. The translation string may\n * contain placeholders which associate inner elements and sub-templates within the translation.\n *\n * The translation `message` placeholders are:\n * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n *   `block` that matches the sub-template in which it was declared.\n * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n *   and end of DOM element that were embedded in the original translation block. The placeholder\n *   `index` points to the element index in the template instructions set. An optional `block` that\n *   matches the sub-template in which it was declared.\n * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n *   split up and translated separately in each angular template function. The `index` points to the\n *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n *\n * @param index A unique index of the translation in the static block.\n * @param messageIndex An index of the translation message from the `def.consts` array.\n * @param subTemplateIndex Optional sub-template index in the `message`.\n *\n * @codeGenApi\n */\nexport function ɵɵi18n(index: number, messageIndex: number, subTemplateIndex?: number): void {\n  ɵɵi18nStart(index, messageIndex, subTemplateIndex);\n  ɵɵi18nEnd();\n}\n\n/**\n * Marks a list of attributes as translatable.\n *\n * @param index A unique index in the static block\n * @param values\n *\n * @codeGenApi\n */\nexport function ɵɵi18nAttributes(index: number, attrsIndex: number): void {\n  const tView = getTView();\n  ngDevMode && assertDefined(tView, `tView should be defined`);\n  const attrs = getConstant<string[]>(tView.consts, attrsIndex)!;\n  i18nAttributesFirstPass(tView, index + HEADER_OFFSET, attrs);\n}\n\n\n/**\n * Stores the values of the bindings during each update cycle in order to determine if we need to\n * update the translated nodes.\n *\n * @param value The binding's value\n * @returns This function returns itself so that it may be chained\n * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n *\n * @codeGenApi\n */\nexport function ɵɵi18nExp<T>(value: T): typeof ɵɵi18nExp {\n  const lView = getLView();\n  setMaskBit(bindingUpdated(lView, nextBindingIndex(), value));\n  return ɵɵi18nExp;\n}\n\n/**\n * Updates a translation block or an i18n attribute when the bindings have changed.\n *\n * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n * (i18n attribute) on which it should update the content.\n *\n * @codeGenApi\n */\nexport function ɵɵi18nApply(index: number) {\n  applyI18n(getTView(), getLView(), index + HEADER_OFFSET);\n}\n\n/**\n * Handles message string post-processing for internationalization.\n *\n * Handles message string post-processing by transforming it from intermediate\n * format (that might contain some markers that we need to replace) to the final\n * form, consumable by i18nStart instruction. Post processing steps include:\n *\n * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n *    in case multiple ICUs have the same placeholder name\n *\n * @param message Raw translation string for post processing\n * @param replacements Set of replacements that should be applied\n *\n * @returns Transformed string that can be consumed by i18nStart instruction\n *\n * @codeGenApi\n */\nexport function ɵɵi18nPostprocess(\n    message: string, replacements: {[key: string]: (string|string[])} = {}): string {\n  return i18nPostprocess(message, replacements);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {resolveForwardRef} from '../di/forward_ref';\nimport {ClassProvider, Provider} from '../di/interface/provider';\nimport {isClassProvider, isTypeProvider} from '../di/provider_collection';\nimport {providerToFactory} from '../di/r3_injector';\nimport {assertDefined} from '../util/assert';\n\nimport {diPublicInInjector, getNodeInjectable, getOrCreateNodeInjectorForNode} from './di';\nimport {ɵɵdirectiveInject} from './instructions/all';\nimport {DirectiveDef} from './interfaces/definition';\nimport {NodeInjectorFactory} from './interfaces/injector';\nimport {TContainerNode, TDirectiveHostNode, TElementContainerNode, TElementNode, TNodeProviderIndexes} from './interfaces/node';\nimport {isComponentDef} from './interfaces/type_checks';\nimport {DestroyHookData, LView, TData, TVIEW, TView} from './interfaces/view';\nimport {getCurrentTNode, getLView, getTView} from './state';\n\n\n\n/**\n * Resolves the providers which are defined in the DirectiveDef.\n *\n * When inserting the tokens and the factories in their respective arrays, we can assume that\n * this method is called first for the component (if any), and then for other directives on the same\n * node.\n * As a consequence,the providers are always processed in that order:\n * 1) The view providers of the component\n * 2) The providers of the component\n * 3) The providers of the other directives\n * This matches the structure of the injectables arrays of a view (for each node).\n * So the tokens and the factories can be pushed at the end of the arrays, except\n * in one case for multi providers.\n *\n * @param def the directive definition\n * @param providers: Array of `providers`.\n * @param viewProviders: Array of `viewProviders`.\n */\nexport function providersResolver<T>(\n    def: DirectiveDef<T>, providers: Provider[], viewProviders: Provider[]): void {\n  const tView = getTView();\n  if (tView.firstCreatePass) {\n    const isComponent = isComponentDef(def);\n\n    // The list of view providers is processed first, and the flags are updated\n    resolveProvider(viewProviders, tView.data, tView.blueprint, isComponent, true);\n\n    // Then, the list of providers is processed, and the flags are updated\n    resolveProvider(providers, tView.data, tView.blueprint, isComponent, false);\n  }\n}\n\n/**\n * Resolves a provider and publishes it to the DI system.\n */\nfunction resolveProvider(\n    provider: Provider, tInjectables: TData, lInjectablesBlueprint: NodeInjectorFactory[],\n    isComponent: boolean, isViewProvider: boolean): void {\n  provider = resolveForwardRef(provider);\n  if (Array.isArray(provider)) {\n    // Recursively call `resolveProvider`\n    // Recursion is OK in this case because this code will not be in hot-path once we implement\n    // cloning of the initial state.\n    for (let i = 0; i < provider.length; i++) {\n      resolveProvider(\n          provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n    }\n  } else {\n    const tView = getTView();\n    const lView = getLView();\n    let token: any = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n    let providerFactory: () => any = providerToFactory(provider);\n\n    const tNode = getCurrentTNode()!;\n    const beginIndex = tNode.providerIndexes & TNodeProviderIndexes.ProvidersStartIndexMask;\n    const endIndex = tNode.directiveStart;\n    const cptViewProvidersCount =\n        tNode.providerIndexes >> TNodeProviderIndexes.CptViewProvidersCountShift;\n\n    if (isTypeProvider(provider) || !provider.multi) {\n      // Single provider case: the factory is created and pushed immediately\n      const factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n      const existingFactoryIndex = indexOf(\n          token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount,\n          endIndex);\n      if (existingFactoryIndex === -1) {\n        diPublicInInjector(\n            getOrCreateNodeInjectorForNode(\n                tNode as TElementNode | TContainerNode | TElementContainerNode, lView),\n            tView, token);\n        registerDestroyHooksIfSupported(tView, provider, tInjectables.length);\n        tInjectables.push(token);\n        tNode.directiveStart++;\n        tNode.directiveEnd++;\n        if (isViewProvider) {\n          tNode.providerIndexes += TNodeProviderIndexes.CptViewProvidersCountShifter;\n        }\n        lInjectablesBlueprint.push(factory);\n        lView.push(factory);\n      } else {\n        lInjectablesBlueprint[existingFactoryIndex] = factory;\n        lView[existingFactoryIndex] = factory;\n      }\n    } else {\n      // Multi provider case:\n      // We create a multi factory which is going to aggregate all the values.\n      // Since the output of such a factory depends on content or view injection,\n      // we create two of them, which are linked together.\n      //\n      // The first one (for view providers) is always in the first block of the injectables array,\n      // and the second one (for providers) is always in the second block.\n      // This is important because view providers have higher priority. When a multi token\n      // is being looked up, the view providers should be found first.\n      // Note that it is not possible to have a multi factory in the third block (directive block).\n      //\n      // The algorithm to process multi providers is as follows:\n      // 1) If the multi provider comes from the `viewProviders` of the component:\n      //   a) If the special view providers factory doesn't exist, it is created and pushed.\n      //   b) Else, the multi provider is added to the existing multi factory.\n      // 2) If the multi provider comes from the `providers` of the component or of another\n      // directive:\n      //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n      //      It is also linked to the multi factory for view providers, if it exists.\n      //   b) Else, the multi provider is added to the existing multi factory.\n\n      const existingProvidersFactoryIndex =\n          indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n      const existingViewProvidersFactoryIndex =\n          indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n      const doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n          lInjectablesBlueprint[existingProvidersFactoryIndex];\n      const doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n          lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n\n      if (isViewProvider && !doesViewProvidersFactoryExist ||\n          !isViewProvider && !doesProvidersFactoryExist) {\n        // Cases 1.a and 2.a\n        diPublicInInjector(\n            getOrCreateNodeInjectorForNode(\n                tNode as TElementNode | TContainerNode | TElementContainerNode, lView),\n            tView, token);\n        const factory = multiFactory(\n            isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver,\n            lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n        if (!isViewProvider && doesViewProvidersFactoryExist) {\n          lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n        }\n        registerDestroyHooksIfSupported(tView, provider, tInjectables.length, 0);\n        tInjectables.push(token);\n        tNode.directiveStart++;\n        tNode.directiveEnd++;\n        if (isViewProvider) {\n          tNode.providerIndexes += TNodeProviderIndexes.CptViewProvidersCountShifter;\n        }\n        lInjectablesBlueprint.push(factory);\n        lView.push(factory);\n      } else {\n        // Cases 1.b and 2.b\n        const indexInFactory = multiFactoryAdd(\n            lInjectablesBlueprint!\n                [isViewProvider ? existingViewProvidersFactoryIndex :\n                                  existingProvidersFactoryIndex],\n            providerFactory, !isViewProvider && isComponent);\n        registerDestroyHooksIfSupported(\n            tView, provider,\n            existingProvidersFactoryIndex > -1 ? existingProvidersFactoryIndex :\n                                                 existingViewProvidersFactoryIndex,\n            indexInFactory);\n      }\n      if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n        lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders!++;\n      }\n    }\n  }\n}\n\n/**\n * Registers the `ngOnDestroy` hook of a provider, if the provider supports destroy hooks.\n * @param tView `TView` in which to register the hook.\n * @param provider Provider whose hook should be registered.\n * @param contextIndex Index under which to find the context for the hook when it's being invoked.\n * @param indexInFactory Only required for `multi` providers. Index of the provider in the multi\n * provider factory.\n */\nfunction registerDestroyHooksIfSupported(\n    tView: TView, provider: Exclude<Provider, any[]>, contextIndex: number,\n    indexInFactory?: number) {\n  const providerIsTypeProvider = isTypeProvider(provider);\n  const providerIsClassProvider = isClassProvider(provider);\n\n  if (providerIsTypeProvider || providerIsClassProvider) {\n    // Resolve forward references as `useClass` can hold a forward reference.\n    const classToken = providerIsClassProvider ? resolveForwardRef(provider.useClass) : provider;\n    const prototype = classToken.prototype;\n    const ngOnDestroy = prototype.ngOnDestroy;\n\n    if (ngOnDestroy) {\n      const hooks = tView.destroyHooks || (tView.destroyHooks = []);\n\n      if (!providerIsTypeProvider && ((provider as ClassProvider)).multi) {\n        ngDevMode &&\n            assertDefined(\n                indexInFactory, 'indexInFactory when registering multi factory destroy hook');\n        const existingCallbacksIndex = hooks.indexOf(contextIndex);\n\n        if (existingCallbacksIndex === -1) {\n          hooks.push(contextIndex, [indexInFactory, ngOnDestroy]);\n        } else {\n          (hooks[existingCallbacksIndex + 1] as DestroyHookData).push(indexInFactory!, ngOnDestroy);\n        }\n      } else {\n        hooks.push(contextIndex, ngOnDestroy);\n      }\n    }\n  }\n}\n\n/**\n * Add a factory in a multi factory.\n * @returns Index at which the factory was inserted.\n */\nfunction multiFactoryAdd(\n    multiFactory: NodeInjectorFactory, factory: () => any, isComponentProvider: boolean): number {\n  if (isComponentProvider) {\n    multiFactory.componentProviders!++;\n  }\n  return multiFactory.multi!.push(factory) - 1;\n}\n\n/**\n * Returns the index of item in the array, but only in the begin to end range.\n */\nfunction indexOf(item: any, arr: any[], begin: number, end: number) {\n  for (let i = begin; i < end; i++) {\n    if (arr[i] === item) return i;\n  }\n  return -1;\n}\n\n/**\n * Use this with `multi` `providers`.\n */\nfunction multiProvidersFactoryResolver(\n    this: NodeInjectorFactory, _: undefined, tData: TData, lData: LView,\n    tNode: TDirectiveHostNode): any[] {\n  return multiResolve(this.multi!, []);\n}\n\n/**\n * Use this with `multi` `viewProviders`.\n *\n * This factory knows how to concatenate itself with the existing `multi` `providers`.\n */\nfunction multiViewProvidersFactoryResolver(\n    this: NodeInjectorFactory, _: undefined, tData: TData, lView: LView,\n    tNode: TDirectiveHostNode): any[] {\n  const factories = this.multi!;\n  let result: any[];\n  if (this.providerFactory) {\n    const componentCount = this.providerFactory.componentProviders!;\n    const multiProviders =\n        getNodeInjectable(lView, lView[TVIEW], this.providerFactory!.index!, tNode);\n    // Copy the section of the array which contains `multi` `providers` from the component\n    result = multiProviders.slice(0, componentCount);\n    // Insert the `viewProvider` instances.\n    multiResolve(factories, result);\n    // Copy the section of the array which contains `multi` `providers` from other directives\n    for (let i = componentCount; i < multiProviders.length; i++) {\n      result.push(multiProviders[i]);\n    }\n  } else {\n    result = [];\n    // Insert the `viewProvider` instances.\n    multiResolve(factories, result);\n  }\n  return result;\n}\n\n/**\n * Maps an array of factories into an array of values.\n */\nfunction multiResolve(factories: Array<() => any>, result: any[]): any[] {\n  for (let i = 0; i < factories.length; i++) {\n    const factory = factories[i]! as () => null;\n    result.push(factory());\n  }\n  return result;\n}\n\n/**\n * Creates a multi factory.\n */\nfunction multiFactory(\n    factoryFn: (\n        this: NodeInjectorFactory, _: undefined, tData: TData, lData: LView,\n        tNode: TDirectiveHostNode) => any,\n    index: number, isViewProvider: boolean, isComponent: boolean,\n    f: () => any): NodeInjectorFactory {\n  const factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n  factory.multi = [];\n  factory.index = index;\n  factory.componentProviders = 0;\n  multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n  return factory;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ProcessProvidersFunction, Provider} from '../../di/interface/provider';\nimport {providersResolver} from '../di_setup';\nimport {DirectiveDef} from '../interfaces/definition';\n\n/**\n * This feature resolves the providers of a directive (or component),\n * and publish them into the DI system, making it visible to others for injection.\n *\n * For example:\n * ```ts\n * class ComponentWithProviders {\n *   constructor(private greeter: GreeterDE) {}\n *\n *   static ɵcmp = defineComponent({\n *     type: ComponentWithProviders,\n *     selectors: [['component-with-providers']],\n *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n *    decls: 1,\n *    vars: 1,\n *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n *      if (fs & RenderFlags.Create) {\n *        ɵɵtext(0);\n *      }\n *      if (fs & RenderFlags.Update) {\n *        ɵɵtextInterpolate(ctx.greeter.greet());\n *      }\n *    },\n *    features: [ɵɵProvidersFeature([GreeterDE])]\n *  });\n * }\n * ```\n *\n * @param definition\n *\n * @codeGenApi\n */\nexport function ɵɵProvidersFeature<T>(providers: Provider[], viewProviders: Provider[] = []) {\n  return (definition: DirectiveDef<T>) => {\n    definition.providersResolver =\n        (def: DirectiveDef<T>, processProvidersFn?: ProcessProvidersFunction) => {\n          return providersResolver(\n              def,                                                             //\n              processProvidersFn ? processProvidersFn(providers) : providers,  //\n              viewProviders);\n        };\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {EnvironmentInjector} from '../di/r3_injector';\nimport {Type} from '../interface/type';\n\nimport {ComponentFactoryResolver} from './component_factory_resolver';\n\n\n/**\n * Represents an instance of an `NgModule` created by an `NgModuleFactory`.\n * Provides access to the `NgModule` instance and related objects.\n *\n * @publicApi\n */\nexport abstract class NgModuleRef<T> {\n  /**\n   * The injector that contains all of the providers of the `NgModule`.\n   */\n  abstract get injector(): EnvironmentInjector;\n\n  /**\n   * The resolver that can retrieve component factories in a context of this module.\n   *\n   * Note: since v13, dynamic component creation via\n   * [`ViewContainerRef.createComponent`](api/core/ViewContainerRef#createComponent)\n   * does **not** require resolving component factory: component class can be used directly.\n   *\n   * @deprecated Angular no longer requires Component factories. Please use other APIs where\n   *     Component class can be used directly.\n   */\n  abstract get componentFactoryResolver(): ComponentFactoryResolver;\n\n  /**\n   * The `NgModule` instance.\n   */\n  abstract get instance(): T;\n\n  /**\n   * Destroys the module instance and all of the data structures associated with it.\n   */\n  abstract destroy(): void;\n\n  /**\n   * Registers a callback to be executed when the module is destroyed.\n   */\n  abstract onDestroy(callback: () => void): void;\n}\n\nexport interface InternalNgModuleRef<T> extends NgModuleRef<T> {\n  // Note: we are using the prefix _ as NgModuleData is an NgModuleRef and therefore directly\n  // exposed to the user.\n  _bootstrapComponents: Type<any>[];\n}\n\n/**\n * @publicApi\n *\n * @deprecated\n * This class was mostly used as a part of ViewEngine-based JIT API and is no longer needed in Ivy\n * JIT mode. See [JIT API changes due to ViewEngine deprecation](guide/deprecations#jit-api-changes)\n * for additional context. Angular provides APIs that accept NgModule classes directly (such as\n * [PlatformRef.bootstrapModule](api/core/PlatformRef#bootstrapModule) and\n * [createNgModule](api/core/createNgModule)), consider switching to those APIs instead of\n * using factory-based ones.\n */\nexport abstract class NgModuleFactory<T> {\n  abstract get moduleType(): Type<T>;\n  abstract create(parentInjector: Injector|null): NgModuleRef<T>;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {createInjectorWithoutInjectorInstances} from '../di/create_injector';\nimport {Injector} from '../di/injector';\nimport {INJECTOR} from '../di/injector_token';\nimport {InjectFlags} from '../di/interface/injector';\nimport {ImportedNgModuleProviders, Provider} from '../di/interface/provider';\nimport {EnvironmentInjector, getNullInjector, R3Injector} from '../di/r3_injector';\nimport {Type} from '../interface/type';\nimport {ComponentFactoryResolver as viewEngine_ComponentFactoryResolver} from '../linker/component_factory_resolver';\nimport {InternalNgModuleRef, NgModuleFactory as viewEngine_NgModuleFactory, NgModuleRef as viewEngine_NgModuleRef} from '../linker/ng_module_factory';\nimport {assertDefined} from '../util/assert';\nimport {stringify} from '../util/stringify';\n\nimport {ComponentFactoryResolver} from './component_ref';\nimport {getNgModuleDef} from './definition';\nimport {maybeUnwrapFn} from './util/misc_utils';\n\n/**\n * Returns a new NgModuleRef instance based on the NgModule class and parent injector provided.\n *\n * @param ngModule NgModule class.\n * @param parentInjector Optional injector instance to use as a parent for the module injector. If\n *     not provided, `NullInjector` will be used instead.\n * @returns NgModuleRef that represents an NgModule instance.\n *\n * @publicApi\n */\nexport function createNgModule<T>(\n    ngModule: Type<T>, parentInjector?: Injector): viewEngine_NgModuleRef<T> {\n  return new NgModuleRef<T>(ngModule, parentInjector ?? null);\n}\n\n/**\n * The `createNgModule` function alias for backwards-compatibility.\n * Please avoid using it directly and use `createNgModule` instead.\n *\n * @deprecated Use `createNgModule` instead.\n */\nexport const createNgModuleRef = createNgModule;\nexport class NgModuleRef<T> extends viewEngine_NgModuleRef<T> implements InternalNgModuleRef<T> {\n  // tslint:disable-next-line:require-internal-with-underscore\n  _bootstrapComponents: Type<any>[] = [];\n  // tslint:disable-next-line:require-internal-with-underscore\n  _r3Injector: R3Injector;\n  override instance: T;\n  destroyCbs: (() => void)[]|null = [];\n\n  // When bootstrapping a module we have a dependency graph that looks like this:\n  // ApplicationRef -> ComponentFactoryResolver -> NgModuleRef. The problem is that if the\n  // module being resolved tries to inject the ComponentFactoryResolver, it'll create a\n  // circular dependency which will result in a runtime error, because the injector doesn't\n  // exist yet. We work around the issue by creating the ComponentFactoryResolver ourselves\n  // and providing it, rather than letting the injector resolve it.\n  override readonly componentFactoryResolver: ComponentFactoryResolver =\n      new ComponentFactoryResolver(this);\n\n  constructor(ngModuleType: Type<T>, public _parent: Injector|null) {\n    super();\n    const ngModuleDef = getNgModuleDef(ngModuleType);\n    ngDevMode &&\n        assertDefined(\n            ngModuleDef,\n            `NgModule '${stringify(ngModuleType)}' is not a subtype of 'NgModuleType'.`);\n\n    this._bootstrapComponents = maybeUnwrapFn(ngModuleDef!.bootstrap);\n    this._r3Injector = createInjectorWithoutInjectorInstances(\n                           ngModuleType, _parent,\n                           [\n                             {provide: viewEngine_NgModuleRef, useValue: this}, {\n                               provide: viewEngine_ComponentFactoryResolver,\n                               useValue: this.componentFactoryResolver\n                             }\n                           ],\n                           stringify(ngModuleType), new Set(['environment'])) as R3Injector;\n\n    // We need to resolve the injector types separately from the injector creation, because\n    // the module might be trying to use this ref in its constructor for DI which will cause a\n    // circular error that will eventually error out, because the injector isn't created yet.\n    this._r3Injector.resolveInjectorInitializers();\n    this.instance = this._r3Injector.get(ngModuleType);\n  }\n\n  override get injector(): EnvironmentInjector {\n    return this._r3Injector;\n  }\n\n  override destroy(): void {\n    ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n    const injector = this._r3Injector;\n    !injector.destroyed && injector.destroy();\n    this.destroyCbs!.forEach(fn => fn());\n    this.destroyCbs = null;\n  }\n  override onDestroy(callback: () => void): void {\n    ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n    this.destroyCbs!.push(callback);\n  }\n}\n\nexport class NgModuleFactory<T> extends viewEngine_NgModuleFactory<T> {\n  constructor(public moduleType: Type<T>) {\n    super();\n  }\n\n  override create(parentInjector: Injector|null): viewEngine_NgModuleRef<T> {\n    return new NgModuleRef(this.moduleType, parentInjector);\n  }\n}\n\nclass EnvironmentNgModuleRefAdapter extends viewEngine_NgModuleRef<null> {\n  override readonly injector: EnvironmentInjector;\n  override readonly componentFactoryResolver: ComponentFactoryResolver =\n      new ComponentFactoryResolver(this);\n  override readonly instance = null;\n\n  constructor(\n      providers: Array<Provider|ImportedNgModuleProviders>, parent: EnvironmentInjector|null,\n      source: string|null) {\n    super();\n    const injector = new R3Injector(\n        [\n          ...providers,\n          {provide: viewEngine_NgModuleRef, useValue: this},\n          {provide: viewEngine_ComponentFactoryResolver, useValue: this.componentFactoryResolver},\n        ],\n        parent || getNullInjector(), source, new Set(['environment']));\n    this.injector = injector;\n    injector.resolveInjectorInitializers();\n  }\n\n  override destroy(): void {\n    this.injector.destroy();\n  }\n\n  override onDestroy(callback: () => void): void {\n    this.injector.onDestroy(callback);\n  }\n}\n\n/**\n * Create a new environment injector.\n *\n * Learn more about environment injectors in\n * [this guide](guide/standalone-components#environment-injectors).\n *\n * @param providers An array of providers.\n * @param parent A parent environment injector.\n * @param debugName An optional name for this injector instance, which will be used in error\n *     messages.\n *\n * @publicApi\n * @developerPreview\n */\nexport function createEnvironmentInjector(\n    providers: Array<Provider|ImportedNgModuleProviders>, parent: EnvironmentInjector,\n    debugName: string|null = null): EnvironmentInjector {\n  const adapter = new EnvironmentNgModuleRefAdapter(providers, parent, debugName);\n  return adapter.injector;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ɵɵinject as inject} from '../../di/injector_compatibility';\nimport {ɵɵdefineInjectable as defineInjectable} from '../../di/interface/defs';\nimport {internalImportProvidersFrom} from '../../di/provider_collection';\nimport {EnvironmentInjector} from '../../di/r3_injector';\nimport {OnDestroy} from '../../interface/lifecycle_hooks';\nimport {ComponentDef} from '../interfaces/definition';\nimport {createEnvironmentInjector} from '../ng_module_ref';\n\n/**\n * A service used by the framework to create instances of standalone injectors. Those injectors are\n * created on demand in case of dynamic component instantiation and contain ambient providers\n * collected from the imports graph rooted at a given standalone component.\n */\nclass StandaloneService implements OnDestroy {\n  cachedInjectors = new Map<string, EnvironmentInjector|null>();\n\n  constructor(private _injector: EnvironmentInjector) {}\n\n  getOrCreateStandaloneInjector(componentDef: ComponentDef<unknown>): EnvironmentInjector|null {\n    if (!componentDef.standalone) {\n      return null;\n    }\n\n    if (!this.cachedInjectors.has(componentDef.id)) {\n      const providers = internalImportProvidersFrom(false, componentDef.type);\n      const standaloneInjector = providers.length > 0 ?\n          createEnvironmentInjector(\n              [providers], this._injector, `Standalone[${componentDef.type.name}]`) :\n          null;\n      this.cachedInjectors.set(componentDef.id, standaloneInjector);\n    }\n\n    return this.cachedInjectors.get(componentDef.id)!;\n  }\n\n  ngOnDestroy() {\n    try {\n      for (const injector of this.cachedInjectors.values()) {\n        if (injector !== null) {\n          injector.destroy();\n        }\n      }\n    } finally {\n      this.cachedInjectors.clear();\n    }\n  }\n\n  /** @nocollapse */\n  static ɵprov = /** @pureOrBreakMyCode */ defineInjectable({\n    token: StandaloneService,\n    providedIn: 'environment',\n    factory: () => new StandaloneService(inject(EnvironmentInjector)),\n  });\n}\n\n/**\n * A feature that acts as a setup code for the {@link StandaloneService}.\n *\n * The most important responsibility of this feature is to expose the \"getStandaloneInjector\"\n * function (an entry points to a standalone injector creation) on a component definition object. We\n * go through the features infrastructure to make sure that the standalone injector creation logic\n * is tree-shakable and not included in applications that don't use standalone components.\n *\n * @codeGenApi\n */\nexport function ɵɵStandaloneFeature(definition: ComponentDef<unknown>) {\n  definition.getStandaloneInjector = (parentInjector: EnvironmentInjector) => {\n    return parentInjector.get(StandaloneService).getOrCreateStandaloneInjector(definition);\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {assertIndexInRange} from '../util/assert';\nimport {bindingUpdated, bindingUpdated2, bindingUpdated3, bindingUpdated4, getBinding, updateBinding} from './bindings';\nimport {LView} from './interfaces/view';\nimport {getBindingRoot, getLView} from './state';\nimport {NO_CHANGE} from './tokens';\n\n\n/**\n * Bindings for pure functions are stored after regular bindings.\n *\n * |-------decls------|---------vars---------|                 |----- hostVars (dir1) ------|\n * ------------------------------------------------------------------------------------------\n * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n * ------------------------------------------------------------------------------------------\n *                    ^                      ^\n *      TView.bindingStartIndex      TView.expandoStartIndex\n *\n * Pure function instructions are given an offset from the binding root. Adding the offset to the\n * binding root gives the first index where the bindings are stored. In component views, the binding\n * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n * any directive instances + any hostVars in directives evaluated before it.\n *\n * See VIEW_DATA.md for more information about host binding resolution.\n */\n\n/**\n * If the value hasn't been saved, calls the pure function to store and return the\n * value. If it has been saved, returns the saved value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn Function that returns a value\n * @param thisArg Optional calling context of pureFn\n * @returns value\n *\n * @codeGenApi\n */\nexport function ɵɵpureFunction0<T>(slotOffset: number, pureFn: () => T, thisArg?: any): T {\n  const bindingIndex = getBindingRoot() + slotOffset;\n  const lView = getLView();\n  return lView[bindingIndex] === NO_CHANGE ?\n      updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n      getBinding(lView, bindingIndex);\n}\n\n/**\n * If the value of the provided exp has changed, calls the pure function to return\n * an updated value. Or if the value has not changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn Function that returns an updated value\n * @param exp Updated expression value\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n *\n * @codeGenApi\n */\nexport function ɵɵpureFunction1(\n    slotOffset: number, pureFn: (v: any) => any, exp: any, thisArg?: any): any {\n  return pureFunction1Internal(getLView(), getBindingRoot(), slotOffset, pureFn, exp, thisArg);\n}\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n *\n * @codeGenApi\n */\nexport function ɵɵpureFunction2(\n    slotOffset: number, pureFn: (v1: any, v2: any) => any, exp1: any, exp2: any,\n    thisArg?: any): any {\n  return pureFunction2Internal(\n      getLView(), getBindingRoot(), slotOffset, pureFn, exp1, exp2, thisArg);\n}\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n *\n * @codeGenApi\n */\nexport function ɵɵpureFunction3(\n    slotOffset: number, pureFn: (v1: any, v2: any, v3: any) => any, exp1: any, exp2: any, exp3: any,\n    thisArg?: any): any {\n  return pureFunction3Internal(\n      getLView(), getBindingRoot(), slotOffset, pureFn, exp1, exp2, exp3, thisArg);\n}\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n *\n * @codeGenApi\n */\nexport function ɵɵpureFunction4(\n    slotOffset: number, pureFn: (v1: any, v2: any, v3: any, v4: any) => any, exp1: any, exp2: any,\n    exp3: any, exp4: any, thisArg?: any): any {\n  return pureFunction4Internal(\n      getLView(), getBindingRoot(), slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg);\n}\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n *\n * @codeGenApi\n */\nexport function ɵɵpureFunction5(\n    slotOffset: number, pureFn: (v1: any, v2: any, v3: any, v4: any, v5: any) => any, exp1: any,\n    exp2: any, exp3: any, exp4: any, exp5: any, thisArg?: any): any {\n  const bindingIndex = getBindingRoot() + slotOffset;\n  const lView = getLView();\n  const different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n  return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n      updateBinding(\n          lView, bindingIndex + 5,\n          thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                    pureFn(exp1, exp2, exp3, exp4, exp5)) :\n      getBinding(lView, bindingIndex + 5);\n}\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n *\n * @codeGenApi\n */\nexport function ɵɵpureFunction6(\n    slotOffset: number, pureFn: (v1: any, v2: any, v3: any, v4: any, v5: any, v6: any) => any,\n    exp1: any, exp2: any, exp3: any, exp4: any, exp5: any, exp6: any, thisArg?: any): any {\n  const bindingIndex = getBindingRoot() + slotOffset;\n  const lView = getLView();\n  const different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n  return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n      updateBinding(\n          lView, bindingIndex + 6,\n          thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                    pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n      getBinding(lView, bindingIndex + 6);\n}\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n *\n * @codeGenApi\n */\nexport function ɵɵpureFunction7(\n    slotOffset: number,\n    pureFn: (v1: any, v2: any, v3: any, v4: any, v5: any, v6: any, v7: any) => any, exp1: any,\n    exp2: any, exp3: any, exp4: any, exp5: any, exp6: any, exp7: any, thisArg?: any): any {\n  const bindingIndex = getBindingRoot() + slotOffset;\n  const lView = getLView();\n  let different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n  return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n      updateBinding(\n          lView, bindingIndex + 7,\n          thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                    pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n      getBinding(lView, bindingIndex + 7);\n}\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param exp8\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n *\n * @codeGenApi\n */\nexport function ɵɵpureFunction8(\n    slotOffset: number,\n    pureFn: (v1: any, v2: any, v3: any, v4: any, v5: any, v6: any, v7: any, v8: any) => any,\n    exp1: any, exp2: any, exp3: any, exp4: any, exp5: any, exp6: any, exp7: any, exp8: any,\n    thisArg?: any): any {\n  const bindingIndex = getBindingRoot() + slotOffset;\n  const lView = getLView();\n  const different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n  return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n      updateBinding(\n          lView, bindingIndex + 8,\n          thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                    pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n      getBinding(lView, bindingIndex + 8);\n}\n\n/**\n * pureFunction instruction that can support any number of bindings.\n *\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn A pure function that takes binding values and builds an object or array\n * containing those values.\n * @param exps An array of binding values\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n *\n * @codeGenApi\n */\nexport function ɵɵpureFunctionV(\n    slotOffset: number, pureFn: (...v: any[]) => any, exps: any[], thisArg?: any): any {\n  return pureFunctionVInternal(getLView(), getBindingRoot(), slotOffset, pureFn, exps, thisArg);\n}\n\n/**\n * Results of a pure function invocation are stored in LView in a dedicated slot that is initialized\n * to NO_CHANGE. In rare situations a pure pipe might throw an exception on the very first\n * invocation and not produce any valid results. In this case LView would keep holding the NO_CHANGE\n * value. The NO_CHANGE is not something that we can use in expressions / bindings thus we convert\n * it to `undefined`.\n */\nfunction getPureFunctionReturnValue(lView: LView, returnValueIndex: number) {\n  ngDevMode && assertIndexInRange(lView, returnValueIndex);\n  const lastReturnValue = lView[returnValueIndex];\n  return lastReturnValue === NO_CHANGE ? undefined : lastReturnValue;\n}\n\n/**\n * If the value of the provided exp has changed, calls the pure function to return\n * an updated value. Or if the value has not changed, returns cached value.\n *\n * @param lView LView in which the function is being executed.\n * @param bindingRoot Binding root index.\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn Function that returns an updated value\n * @param exp Updated expression value\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nexport function pureFunction1Internal(\n    lView: LView, bindingRoot: number, slotOffset: number, pureFn: (v: any) => any, exp: any,\n    thisArg?: any): any {\n  const bindingIndex = bindingRoot + slotOffset;\n  return bindingUpdated(lView, bindingIndex, exp) ?\n      updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n      getPureFunctionReturnValue(lView, bindingIndex + 1);\n}\n\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param lView LView in which the function is being executed.\n * @param bindingRoot Binding root index.\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nexport function pureFunction2Internal(\n    lView: LView, bindingRoot: number, slotOffset: number, pureFn: (v1: any, v2: any) => any,\n    exp1: any, exp2: any, thisArg?: any): any {\n  const bindingIndex = bindingRoot + slotOffset;\n  return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n      updateBinding(\n          lView, bindingIndex + 2,\n          thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n      getPureFunctionReturnValue(lView, bindingIndex + 2);\n}\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param lView LView in which the function is being executed.\n * @param bindingRoot Binding root index.\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nexport function pureFunction3Internal(\n    lView: LView, bindingRoot: number, slotOffset: number,\n    pureFn: (v1: any, v2: any, v3: any) => any, exp1: any, exp2: any, exp3: any,\n    thisArg?: any): any {\n  const bindingIndex = bindingRoot + slotOffset;\n  return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n      updateBinding(\n          lView, bindingIndex + 3,\n          thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n      getPureFunctionReturnValue(lView, bindingIndex + 3);\n}\n\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param lView LView in which the function is being executed.\n * @param bindingRoot Binding root index.\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n *\n */\nexport function pureFunction4Internal(\n    lView: LView, bindingRoot: number, slotOffset: number,\n    pureFn: (v1: any, v2: any, v3: any, v4: any) => any, exp1: any, exp2: any, exp3: any, exp4: any,\n    thisArg?: any): any {\n  const bindingIndex = bindingRoot + slotOffset;\n  return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n      updateBinding(\n          lView, bindingIndex + 4,\n          thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n      getPureFunctionReturnValue(lView, bindingIndex + 4);\n}\n\n/**\n * pureFunction instruction that can support any number of bindings.\n *\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param lView LView in which the function is being executed.\n * @param bindingRoot Binding root index.\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn A pure function that takes binding values and builds an object or array\n * containing those values.\n * @param exps An array of binding values\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nexport function pureFunctionVInternal(\n    lView: LView, bindingRoot: number, slotOffset: number, pureFn: (...v: any[]) => any,\n    exps: any[], thisArg?: any): any {\n  let bindingIndex = bindingRoot + slotOffset;\n  let different = false;\n  for (let i = 0; i < exps.length; i++) {\n    bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n  }\n  return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n                     getPureFunctionReturnValue(lView, bindingIndex);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PipeTransform} from '../change_detection/pipe_transform';\nimport {setInjectImplementation} from '../di/inject_switch';\nimport {RuntimeError, RuntimeErrorCode} from '../errors';\nimport {Type} from '../interface/type';\n\nimport {getFactoryDef} from './definition_factory';\nimport {setIncludeViewProviders} from './di';\nimport {store, ɵɵdirectiveInject} from './instructions/all';\nimport {isHostComponentStandalone} from './instructions/element_validation';\nimport {PipeDef, PipeDefList} from './interfaces/definition';\nimport {CONTEXT, DECLARATION_COMPONENT_VIEW, HEADER_OFFSET, LView, TVIEW} from './interfaces/view';\nimport {pureFunction1Internal, pureFunction2Internal, pureFunction3Internal, pureFunction4Internal, pureFunctionVInternal} from './pure_function';\nimport {getBindingRoot, getLView, getTView} from './state';\nimport {load} from './util/view_utils';\n\n\n\n/**\n * Create a pipe.\n *\n * @param index Pipe index where the pipe will be stored.\n * @param pipeName The name of the pipe\n * @returns T the instance of the pipe.\n *\n * @codeGenApi\n */\nexport function ɵɵpipe(index: number, pipeName: string): any {\n  const tView = getTView();\n  let pipeDef: PipeDef<any>;\n  const adjustedIndex = index + HEADER_OFFSET;\n\n  if (tView.firstCreatePass) {\n    // The `getPipeDef` throws if a pipe with a given name is not found\n    // (so we use non-null assertion below).\n    pipeDef = getPipeDef(pipeName, tView.pipeRegistry)!;\n    tView.data[adjustedIndex] = pipeDef;\n    if (pipeDef.onDestroy) {\n      (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n    }\n  } else {\n    pipeDef = tView.data[adjustedIndex] as PipeDef<any>;\n  }\n\n  const pipeFactory = pipeDef.factory || (pipeDef.factory = getFactoryDef(pipeDef.type, true));\n  const previousInjectImplementation = setInjectImplementation(ɵɵdirectiveInject);\n  try {\n    // DI for pipes is supposed to behave like directives when placed on a component\n    // host node, which means that we have to disable access to `viewProviders`.\n    const previousIncludeViewProviders = setIncludeViewProviders(false);\n    const pipeInstance = pipeFactory();\n    setIncludeViewProviders(previousIncludeViewProviders);\n    store(tView, getLView(), adjustedIndex, pipeInstance);\n    return pipeInstance;\n  } finally {\n    // we have to restore the injector implementation in finally, just in case the creation of the\n    // pipe throws an error.\n    setInjectImplementation(previousInjectImplementation);\n  }\n}\n\n/**\n * Searches the pipe registry for a pipe with the given name. If one is found,\n * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n *\n * @param name Name of pipe to resolve\n * @param registry Full list of available pipes\n * @returns Matching PipeDef\n */\nfunction getPipeDef(name: string, registry: PipeDefList|null): PipeDef<any>|undefined {\n  if (registry) {\n    for (let i = registry.length - 1; i >= 0; i--) {\n      const pipeDef = registry[i];\n      if (name === pipeDef.name) {\n        return pipeDef;\n      }\n    }\n  }\n  if (ngDevMode) {\n    throw new RuntimeError(RuntimeErrorCode.PIPE_NOT_FOUND, getPipeNotFoundErrorMessage(name));\n  }\n}\n\n/**\n * Generates a helpful error message for the user when a pipe is not found.\n *\n * @param name Name of the missing pipe\n * @returns The error message\n */\nfunction getPipeNotFoundErrorMessage(name: string) {\n  const lView = getLView();\n  const declarationLView = lView[DECLARATION_COMPONENT_VIEW] as LView<Type<unknown>>;\n  const context = declarationLView[CONTEXT];\n  const hostIsStandalone = isHostComponentStandalone(lView);\n  const componentInfoMessage = context ? ` in the '${context.constructor.name}' component` : '';\n  const verifyMessage = `Verify that it is ${\n      hostIsStandalone ? 'included in the \\'@Component.imports\\' of this component' :\n                         'declared or imported in this module'}`;\n  const errorMessage =\n      `The pipe '${name}' could not be found${componentInfoMessage}. ${verifyMessage}`;\n  return errorMessage;\n}\n\n/**\n * Invokes a pipe with 1 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param v1 1st argument to {@link PipeTransform#transform}.\n *\n * @codeGenApi\n */\nexport function ɵɵpipeBind1(index: number, slotOffset: number, v1: any): any {\n  const adjustedIndex = index + HEADER_OFFSET;\n  const lView = getLView();\n  const pipeInstance = load<PipeTransform>(lView, adjustedIndex);\n  return isPure(lView, adjustedIndex) ?\n      pureFunction1Internal(\n          lView, getBindingRoot(), slotOffset, pipeInstance.transform, v1, pipeInstance) :\n      pipeInstance.transform(v1);\n}\n\n/**\n * Invokes a pipe with 2 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n *\n * @codeGenApi\n */\nexport function ɵɵpipeBind2(index: number, slotOffset: number, v1: any, v2: any): any {\n  const adjustedIndex = index + HEADER_OFFSET;\n  const lView = getLView();\n  const pipeInstance = load<PipeTransform>(lView, adjustedIndex);\n  return isPure(lView, adjustedIndex) ?\n      pureFunction2Internal(\n          lView, getBindingRoot(), slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n      pipeInstance.transform(v1, v2);\n}\n\n/**\n * Invokes a pipe with 3 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 4rd argument to {@link PipeTransform#transform}.\n *\n * @codeGenApi\n */\nexport function ɵɵpipeBind3(index: number, slotOffset: number, v1: any, v2: any, v3: any): any {\n  const adjustedIndex = index + HEADER_OFFSET;\n  const lView = getLView();\n  const pipeInstance = load<PipeTransform>(lView, adjustedIndex);\n  return isPure(lView, adjustedIndex) ?\n      pureFunction3Internal(\n          lView, getBindingRoot(), slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n      pipeInstance.transform(v1, v2, v3);\n}\n\n/**\n * Invokes a pipe with 4 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 3rd argument to {@link PipeTransform#transform}.\n * @param v4 4th argument to {@link PipeTransform#transform}.\n *\n * @codeGenApi\n */\nexport function ɵɵpipeBind4(\n    index: number, slotOffset: number, v1: any, v2: any, v3: any, v4: any): any {\n  const adjustedIndex = index + HEADER_OFFSET;\n  const lView = getLView();\n  const pipeInstance = load<PipeTransform>(lView, adjustedIndex);\n  return isPure(lView, adjustedIndex) ? pureFunction4Internal(\n                                            lView, getBindingRoot(), slotOffset,\n                                            pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n                                        pipeInstance.transform(v1, v2, v3, v4);\n}\n\n/**\n * Invokes a pipe with variable number of arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n *\n * @codeGenApi\n */\nexport function ɵɵpipeBindV(index: number, slotOffset: number, values: [any, ...any[]]): any {\n  const adjustedIndex = index + HEADER_OFFSET;\n  const lView = getLView();\n  const pipeInstance = load<PipeTransform>(lView, adjustedIndex);\n  return isPure(lView, adjustedIndex) ?\n      pureFunctionVInternal(\n          lView, getBindingRoot(), slotOffset, pipeInstance.transform, values, pipeInstance) :\n      pipeInstance.transform.apply(pipeInstance, values);\n}\n\nfunction isPure(lView: LView, index: number): boolean {\n  return (<PipeDef<any>>lView[TVIEW].data[index]).pure;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/// <reference types=\"rxjs\" />\n\nimport {PartialObserver, Subject, Subscription} from 'rxjs';\n\n/**\n * Use in components with the `@Output` directive to emit custom events\n * synchronously or asynchronously, and register handlers for those events\n * by subscribing to an instance.\n *\n * @usageNotes\n *\n * Extends\n * [RxJS `Subject`](https://rxjs.dev/api/index/class/Subject)\n * for Angular by adding the `emit()` method.\n *\n * In the following example, a component defines two output properties\n * that create event emitters. When the title is clicked, the emitter\n * emits an open or close event to toggle the current visibility state.\n *\n * ```html\n * @Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   @Output() open: EventEmitter<any> = new EventEmitter();\n *   @Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * Access the event object with the `$event` argument passed to the output event\n * handler:\n *\n * ```html\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * @see [Observables in Angular](guide/observables-in-angular)\n * @publicApi\n */\nexport interface EventEmitter<T> extends Subject<T> {\n  /**\n   * @internal\n   */\n  __isAsync: boolean;\n\n  /**\n   * Creates an instance of this class that can\n   * deliver events synchronously or asynchronously.\n   *\n   * @param [isAsync=false] When true, deliver events asynchronously.\n   *\n   */\n  new(isAsync?: boolean): EventEmitter<T>;\n\n  /**\n   * Emits an event containing a given value.\n   * @param value The value to emit.\n   */\n  emit(value?: T): void;\n\n  /**\n   * Registers handlers for events emitted by this instance.\n   * @param next When supplied, a custom handler for emitted events.\n   * @param error When supplied, a custom handler for an error notification from this emitter.\n   * @param complete When supplied, a custom handler for a completion notification from this\n   *     emitter.\n   */\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void):\n      Subscription;\n  /**\n   * Registers handlers for events emitted by this instance.\n   * @param observerOrNext When supplied, a custom handler for emitted events, or an observer\n   *     object.\n   * @param error When supplied, a custom handler for an error notification from this emitter.\n   * @param complete When supplied, a custom handler for a completion notification from this\n   *     emitter.\n   */\n  subscribe(observerOrNext?: any, error?: any, complete?: any): Subscription;\n}\n\nclass EventEmitter_ extends Subject<any> {\n  __isAsync: boolean;  // tslint:disable-line\n\n  constructor(isAsync: boolean = false) {\n    super();\n    this.__isAsync = isAsync;\n  }\n\n  emit(value?: any) {\n    super.next(value);\n  }\n\n  override subscribe(observerOrNext?: any, error?: any, complete?: any): Subscription {\n    let nextFn = observerOrNext;\n    let errorFn = error || (() => null);\n    let completeFn = complete;\n\n    if (observerOrNext && typeof observerOrNext === 'object') {\n      const observer = observerOrNext as PartialObserver<unknown>;\n      nextFn = observer.next?.bind(observer);\n      errorFn = observer.error?.bind(observer);\n      completeFn = observer.complete?.bind(observer);\n    }\n\n    if (this.__isAsync) {\n      errorFn = _wrapInTimeout(errorFn);\n\n      if (nextFn) {\n        nextFn = _wrapInTimeout(nextFn);\n      }\n\n      if (completeFn) {\n        completeFn = _wrapInTimeout(completeFn);\n      }\n    }\n\n    const sink = super.subscribe({next: nextFn, error: errorFn, complete: completeFn});\n\n    if (observerOrNext instanceof Subscription) {\n      observerOrNext.add(sink);\n    }\n\n    return sink;\n  }\n}\n\nfunction _wrapInTimeout(fn: (value: unknown) => any) {\n  return (value: unknown) => {\n    setTimeout(fn, undefined, value);\n  };\n}\n\n/**\n * @publicApi\n */\nexport const EventEmitter: {\n  new (isAsync?: boolean): EventEmitter<any>; new<T>(isAsync?: boolean): EventEmitter<T>;\n  readonly prototype: EventEmitter<any>;\n} = EventEmitter_ as any;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs';\n\nimport {EventEmitter} from '../event_emitter';\nimport {arrayEquals, flatten} from '../util/array_utils';\nimport {getSymbolIterator} from '../util/symbol';\n\nfunction symbolIterator<T>(this: QueryList<T>): Iterator<T> {\n  return ((this as any as {_results: Array<T>})._results as any)[getSymbolIterator()]();\n}\n\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * @usageNotes\n * ### Example\n * ```typescript\n * @Component({...})\n * class Container {\n *   @ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n *\n * @publicApi\n */\nexport class QueryList<T> implements Iterable<T> {\n  public readonly dirty = true;\n  private _results: Array<T> = [];\n  private _changesDetected: boolean = false;\n  private _changes: EventEmitter<QueryList<T>>|null = null;\n\n  readonly length: number = 0;\n  readonly first: T = undefined!;\n  readonly last: T = undefined!;\n\n  /**\n   * Returns `Observable` of `QueryList` notifying the subscriber of changes.\n   */\n  get changes(): Observable<any> {\n    return this._changes || (this._changes = new EventEmitter());\n  }\n\n  /**\n   * @param emitDistinctChangesOnly Whether `QueryList.changes` should fire only when actual change\n   *     has occurred. Or if it should fire when query is recomputed. (recomputing could resolve in\n   *     the same result)\n   */\n  constructor(private _emitDistinctChangesOnly: boolean = false) {\n    // This function should be declared on the prototype, but doing so there will cause the class\n    // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n    // the constructor.\n    // [getSymbolIterator()](): Iterator<T> { ... }\n    const symbol = getSymbolIterator();\n    const proto = QueryList.prototype as any;\n    if (!proto[symbol]) proto[symbol] = symbolIterator;\n  }\n\n  /**\n   * Returns the QueryList entry at `index`.\n   */\n  get(index: number): T|undefined {\n    return this._results[index];\n  }\n\n  /**\n   * See\n   * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n   */\n  map<U>(fn: (item: T, index: number, array: T[]) => U): U[] {\n    return this._results.map(fn);\n  }\n\n  /**\n   * See\n   * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n   */\n  filter(fn: (item: T, index: number, array: T[]) => boolean): T[] {\n    return this._results.filter(fn);\n  }\n\n  /**\n   * See\n   * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n   */\n  find(fn: (item: T, index: number, array: T[]) => boolean): T|undefined {\n    return this._results.find(fn);\n  }\n\n  /**\n   * See\n   * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n   */\n  reduce<U>(fn: (prevValue: U, curValue: T, curIndex: number, array: T[]) => U, init: U): U {\n    return this._results.reduce(fn, init);\n  }\n\n  /**\n   * See\n   * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n   */\n  forEach(fn: (item: T, index: number, array: T[]) => void): void {\n    this._results.forEach(fn);\n  }\n\n  /**\n   * See\n   * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n   */\n  some(fn: (value: T, index: number, array: T[]) => boolean): boolean {\n    return this._results.some(fn);\n  }\n\n  /**\n   * Returns a copy of the internal results list as an Array.\n   */\n  toArray(): T[] {\n    return this._results.slice();\n  }\n\n  toString(): string {\n    return this._results.toString();\n  }\n\n  /**\n   * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n   * on change detection, it will not notify of changes to the queries, unless a new change\n   * occurs.\n   *\n   * @param resultsTree The query results to store\n   * @param identityAccessor Optional function for extracting stable object identity from a value\n   *    in the array. This function is executed for each element of the query result list while\n   *    comparing current query list with the new one (provided as a first argument of the `reset`\n   *    function) to detect if the lists are different. If the function is not provided, elements\n   *    are compared as is (without any pre-processing).\n   */\n  reset(resultsTree: Array<T|any[]>, identityAccessor?: (value: T) => unknown): void {\n    // Cast to `QueryListInternal` so that we can mutate fields which are readonly for the usage of\n    // QueryList (but not for QueryList itself.)\n    const self = this as QueryListInternal<T>;\n    (self as {dirty: boolean}).dirty = false;\n    const newResultFlat = flatten(resultsTree);\n    if (this._changesDetected = !arrayEquals(self._results, newResultFlat, identityAccessor)) {\n      self._results = newResultFlat;\n      self.length = newResultFlat.length;\n      self.last = newResultFlat[this.length - 1];\n      self.first = newResultFlat[0];\n    }\n  }\n\n  /**\n   * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n   */\n  notifyOnChanges(): void {\n    if (this._changes && (this._changesDetected || !this._emitDistinctChangesOnly))\n      this._changes.emit(this);\n  }\n\n  /** internal */\n  setDirty() {\n    (this as {dirty: boolean}).dirty = true;\n  }\n\n  /** internal */\n  destroy(): void {\n    (this.changes as EventEmitter<any>).complete();\n    (this.changes as EventEmitter<any>).unsubscribe();\n  }\n\n  // The implementation of `Symbol.iterator` should be declared here, but this would cause\n  // tree-shaking issues with `QueryList. So instead, it's added in the constructor (see comments\n  // there) and this declaration is left here to ensure that TypeScript considers QueryList to\n  // implement the Iterable interface. This is required for template type-checking of NgFor loops\n  // over QueryLists to work correctly, since QueryList must be assignable to NgIterable.\n  [Symbol.iterator]!: () => Iterator<T>;\n}\n\n/**\n * Internal set of APIs used by the framework. (not to be made public)\n */\ninterface QueryListInternal<T> extends QueryList<T> {\n  reset(a: any[]): void;\n  notifyOnChanges(): void;\n  length: number;\n  last: T;\n  first: T;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {assertLContainer} from '../render3/assert';\nimport {createLView, renderView} from '../render3/instructions/shared';\nimport {TContainerNode, TNode, TNodeType} from '../render3/interfaces/node';\nimport {DECLARATION_LCONTAINER, LView, LViewFlags, QUERIES, TView} from '../render3/interfaces/view';\nimport {getCurrentTNode, getLView} from '../render3/state';\nimport {ViewRef as R3_ViewRef} from '../render3/view_ref';\nimport {assertDefined} from '../util/assert';\n\nimport {createElementRef, ElementRef} from './element_ref';\nimport {EmbeddedViewRef} from './view_ref';\n\n/**\n * Represents an embedded template that can be used to instantiate embedded views.\n * To instantiate embedded views based on a template, use the `ViewContainerRef`\n * method `createEmbeddedView()`.\n *\n * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n * is injected into the constructor of the directive,\n * using the `TemplateRef` token.\n *\n * You can also use a `Query` to find a `TemplateRef` associated with\n * a component or a directive.\n *\n * @see `ViewContainerRef`\n * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n *\n * @publicApi\n */\nexport abstract class TemplateRef<C> {\n  /**\n   * The anchor element in the parent view for this embedded view.\n   *\n   * The data-binding and injection contexts of embedded views created from this `TemplateRef`\n   * inherit from the contexts of this location.\n   *\n   * Typically new embedded views are attached to the view container of this location, but in\n   * advanced use-cases, the view can be attached to a different container while keeping the\n   * data-binding and injection context from the original location.\n   *\n   */\n  // TODO(i): rename to anchor or location\n  abstract readonly elementRef: ElementRef;\n\n  /**\n   * Instantiates an embedded view based on this template,\n   * and attaches it to the view container.\n   * @param context The data-binding context of the embedded view, as declared\n   * in the `<ng-template>` usage.\n   * @param injector Injector to be used within the embedded view.\n   * @returns The new embedded view object.\n   */\n  abstract createEmbeddedView(context: C, injector?: Injector): EmbeddedViewRef<C>;\n\n  /**\n   * @internal\n   * @nocollapse\n   */\n  static __NG_ELEMENT_ID__: () => TemplateRef<any>| null = injectTemplateRef;\n}\n\nconst ViewEngineTemplateRef = TemplateRef;\n\n// TODO(alxhub): combine interface and implementation. Currently this is challenging since something\n// in g3 depends on them being separate.\nconst R3TemplateRef = class TemplateRef<T> extends ViewEngineTemplateRef<T> {\n  constructor(\n      private _declarationLView: LView, private _declarationTContainer: TContainerNode,\n      public override elementRef: ElementRef) {\n    super();\n  }\n\n  override createEmbeddedView(context: T, injector?: Injector): EmbeddedViewRef<T> {\n    const embeddedTView = this._declarationTContainer.tViews as TView;\n    const embeddedLView = createLView(\n        this._declarationLView, embeddedTView, context, LViewFlags.CheckAlways, null,\n        embeddedTView.declTNode, null, null, null, null, injector || null);\n\n    const declarationLContainer = this._declarationLView[this._declarationTContainer.index];\n    ngDevMode && assertLContainer(declarationLContainer);\n    embeddedLView[DECLARATION_LCONTAINER] = declarationLContainer;\n\n    const declarationViewLQueries = this._declarationLView[QUERIES];\n    if (declarationViewLQueries !== null) {\n      embeddedLView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n    }\n\n    renderView(embeddedTView, embeddedLView, context);\n\n    return new R3_ViewRef<T>(embeddedLView);\n  }\n};\n\n/**\n * Creates a TemplateRef given a node.\n *\n * @returns The TemplateRef instance to use\n */\nexport function injectTemplateRef<T>(): TemplateRef<T>|null {\n  return createTemplateRef<T>(getCurrentTNode()!, getLView());\n}\n\n/**\n * Creates a TemplateRef and stores it on the injector.\n *\n * @param hostTNode The node on which a TemplateRef is requested\n * @param hostLView The `LView` to which the node belongs\n * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n */\nexport function createTemplateRef<T>(hostTNode: TNode, hostLView: LView): TemplateRef<T>|null {\n  if (hostTNode.type & TNodeType.Container) {\n    ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n    return new R3TemplateRef(\n        hostLView, hostTNode as TContainerNode, createElementRef(hostTNode, hostLView));\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {EnvironmentInjector} from '../di/r3_injector';\nimport {isType, Type} from '../interface/type';\nimport {assertNodeInjector} from '../render3/assert';\nimport {ComponentFactory as R3ComponentFactory} from '../render3/component_ref';\nimport {getComponentDef} from '../render3/definition';\nimport {getParentInjectorLocation, NodeInjector} from '../render3/di';\nimport {addToViewTree, createLContainer} from '../render3/instructions/shared';\nimport {CONTAINER_HEADER_OFFSET, LContainer, NATIVE, VIEW_REFS} from '../render3/interfaces/container';\nimport {NodeInjectorOffset} from '../render3/interfaces/injector';\nimport {TContainerNode, TDirectiveHostNode, TElementContainerNode, TElementNode, TNodeType} from '../render3/interfaces/node';\nimport {RComment, RElement} from '../render3/interfaces/renderer_dom';\nimport {isLContainer} from '../render3/interfaces/type_checks';\nimport {LView, PARENT, RENDERER, T_HOST, TVIEW} from '../render3/interfaces/view';\nimport {assertTNodeType} from '../render3/node_assert';\nimport {addViewToContainer, destroyLView, detachView, getBeforeNodeForView, insertView, nativeInsertBefore, nativeNextSibling, nativeParentNode} from '../render3/node_manipulation';\nimport {getCurrentTNode, getLView} from '../render3/state';\nimport {getParentInjectorIndex, getParentInjectorView, hasParentInjector} from '../render3/util/injector_utils';\nimport {getNativeByTNode, unwrapRNode, viewAttachedToContainer} from '../render3/util/view_utils';\nimport {ViewRef as R3ViewRef} from '../render3/view_ref';\nimport {addToArray, removeFromArray} from '../util/array_utils';\nimport {assertDefined, assertEqual, assertGreaterThan, assertLessThan, throwError} from '../util/assert';\n\nimport {ComponentFactory, ComponentRef} from './component_factory';\nimport {createElementRef, ElementRef} from './element_ref';\nimport {NgModuleRef} from './ng_module_factory';\nimport {TemplateRef} from './template_ref';\nimport {EmbeddedViewRef, ViewRef} from './view_ref';\n/**\n * Represents a container where one or more views can be attached to a component.\n *\n * Can contain *host views* (created by instantiating a\n * component with the `createComponent()` method), and *embedded views*\n * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n *\n * A view container instance can contain other view containers,\n * creating a [view hierarchy](guide/glossary#view-tree).\n *\n * @see `ComponentRef`\n * @see `EmbeddedViewRef`\n *\n * @publicApi\n */\nexport abstract class ViewContainerRef {\n  /**\n   * Anchor element that specifies the location of this container in the containing view.\n   * Each view container can have only one anchor element, and each anchor element\n   * can have only a single view container.\n   *\n   * Root elements of views attached to this container become siblings of the anchor element in\n   * the rendered view.\n   *\n   * Access the `ViewContainerRef` of an element by placing a `Directive` injected\n   * with `ViewContainerRef` on the element, or use a `ViewChild` query.\n   *\n   * <!-- TODO: rename to anchorElement -->\n   */\n  abstract get element(): ElementRef;\n\n  /**\n   * The [dependency injector](guide/glossary#injector) for this view container.\n   */\n  abstract get injector(): Injector;\n\n  /** @deprecated No replacement */\n  abstract get parentInjector(): Injector;\n\n  /**\n   * Destroys all views in this container.\n   */\n  abstract clear(): void;\n\n  /**\n   * Retrieves a view from this container.\n   * @param index The 0-based index of the view to retrieve.\n   * @returns The `ViewRef` instance, or null if the index is out of range.\n   */\n  abstract get(index: number): ViewRef|null;\n\n  /**\n   * Reports how many views are currently attached to this container.\n   * @returns The number of views.\n   */\n  abstract get length(): number;\n\n  /**\n   * Instantiates an embedded view and inserts it\n   * into this container.\n   * @param templateRef The HTML template that defines the view.\n   * @param context The data-binding context of the embedded view, as declared\n   * in the `<ng-template>` usage.\n   * @param options Extra configuration for the created view. Includes:\n   *  * index: The 0-based index at which to insert the new view into this container.\n   *           If not specified, appends the new view as the last entry.\n   *  * injector: Injector to be used within the embedded view.\n   *\n   * @returns The `ViewRef` instance for the newly created view.\n   */\n  abstract createEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, options?: {\n    index?: number,\n    injector?: Injector\n  }): EmbeddedViewRef<C>;\n\n  /**\n   * Instantiates an embedded view and inserts it\n   * into this container.\n   * @param templateRef The HTML template that defines the view.\n   * @param context The data-binding context of the embedded view, as declared\n   * in the `<ng-template>` usage.\n   * @param index The 0-based index at which to insert the new view into this container.\n   * If not specified, appends the new view as the last entry.\n   *\n   * @returns The `ViewRef` instance for the newly created view.\n   */\n  abstract createEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number):\n      EmbeddedViewRef<C>;\n\n  /**\n   * Instantiates a single component and inserts its host view into this container.\n   *\n   * @param componentType Component Type to use.\n   * @param options An object that contains extra parameters:\n   *  * index: the index at which to insert the new component's host view into this container.\n   *           If not specified, appends the new view as the last entry.\n   *  * injector: the injector to use as the parent for the new component.\n   *  * ngModuleRef: an NgModuleRef of the component's NgModule, you should almost always provide\n   *                 this to ensure that all expected providers are available for the component\n   *                 instantiation.\n   *  * environmentInjector: an EnvironmentInjector which will provide the component's environment.\n   *                 you should almost always provide this to ensure that all expected providers\n   *                 are available for the component instantiation. This option is intended to\n   *                 replace the `ngModuleRef` parameter.\n   *  * projectableNodes: list of DOM nodes that should be projected through\n   *                      [`<ng-content>`](api/core/ng-content) of the new component instance.\n   *\n   * @returns The new `ComponentRef` which contains the component instance and the host view.\n   */\n  abstract createComponent<C>(componentType: Type<C>, options?: {\n    index?: number,\n    injector?: Injector,\n    ngModuleRef?: NgModuleRef<unknown>,\n    environmentInjector?: EnvironmentInjector|NgModuleRef<unknown>,\n    projectableNodes?: Node[][],\n  }): ComponentRef<C>;\n\n  /**\n   * Instantiates a single component and inserts its host view into this container.\n   *\n   * @param componentFactory Component factory to use.\n   * @param index The index at which to insert the new component's host view into this container.\n   * If not specified, appends the new view as the last entry.\n   * @param injector The injector to use as the parent for the new component.\n   * @param projectableNodes List of DOM nodes that should be projected through\n   *     [`<ng-content>`](api/core/ng-content) of the new component instance.\n   * @param ngModuleRef An instance of the NgModuleRef that represent an NgModule.\n   * This information is used to retrieve corresponding NgModule injector.\n   *\n   * @returns The new `ComponentRef` which contains the component instance and the host view.\n   *\n   * @deprecated Angular no longer requires component factories to dynamically create components.\n   *     Use different signature of the `createComponent` method, which allows passing\n   *     Component class directly.\n   */\n  abstract createComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number, injector?: Injector,\n      projectableNodes?: any[][],\n      environmentInjector?: EnvironmentInjector|NgModuleRef<any>): ComponentRef<C>;\n\n  /**\n   * Inserts a view into this container.\n   * @param viewRef The view to insert.\n   * @param index The 0-based index at which to insert the view.\n   * If not specified, appends the new view as the last entry.\n   * @returns The inserted `ViewRef` instance.\n   *\n   */\n  abstract insert(viewRef: ViewRef, index?: number): ViewRef;\n\n  /**\n   * Moves a view to a new location in this container.\n   * @param viewRef The view to move.\n   * @param index The 0-based index of the new location.\n   * @returns The moved `ViewRef` instance.\n   */\n  abstract move(viewRef: ViewRef, currentIndex: number): ViewRef;\n\n  /**\n   * Returns the index of a view within the current container.\n   * @param viewRef The view to query.\n   * @returns The 0-based index of the view's position in this container,\n   * or `-1` if this container doesn't contain the view.\n   */\n  abstract indexOf(viewRef: ViewRef): number;\n\n  /**\n   * Destroys a view attached to this container\n   * @param index The 0-based index of the view to destroy.\n   * If not specified, the last view in the container is removed.\n   */\n  abstract remove(index?: number): void;\n\n  /**\n   * Detaches a view from this container without destroying it.\n   * Use along with `insert()` to move a view within the current container.\n   * @param index The 0-based index of the view to detach.\n   * If not specified, the last view in the container is detached.\n   */\n  abstract detach(index?: number): ViewRef|null;\n\n  /**\n   * @internal\n   * @nocollapse\n   */\n  static __NG_ELEMENT_ID__: () => ViewContainerRef = injectViewContainerRef;\n}\n\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @returns The ViewContainerRef instance to use\n */\nexport function injectViewContainerRef(): ViewContainerRef {\n  const previousTNode = getCurrentTNode() as TElementNode | TElementContainerNode | TContainerNode;\n  return createContainerRef(previousTNode, getLView());\n}\n\nconst VE_ViewContainerRef = ViewContainerRef;\n\n// TODO(alxhub): cleaning up this indirection triggers a subtle bug in Closure in g3. Once the fix\n// for that lands, this can be cleaned up.\nconst R3ViewContainerRef = class ViewContainerRef extends VE_ViewContainerRef {\n  constructor(\n      private _lContainer: LContainer,\n      private _hostTNode: TElementNode|TContainerNode|TElementContainerNode,\n      private _hostLView: LView) {\n    super();\n  }\n\n  override get element(): ElementRef {\n    return createElementRef(this._hostTNode, this._hostLView);\n  }\n\n  override get injector(): Injector {\n    return new NodeInjector(this._hostTNode, this._hostLView);\n  }\n\n  /** @deprecated No replacement */\n  override get parentInjector(): Injector {\n    const parentLocation = getParentInjectorLocation(this._hostTNode, this._hostLView);\n    if (hasParentInjector(parentLocation)) {\n      const parentView = getParentInjectorView(parentLocation, this._hostLView);\n      const injectorIndex = getParentInjectorIndex(parentLocation);\n      ngDevMode && assertNodeInjector(parentView, injectorIndex);\n      const parentTNode =\n          parentView[TVIEW].data[injectorIndex + NodeInjectorOffset.TNODE] as TElementNode;\n      return new NodeInjector(parentTNode, parentView);\n    } else {\n      return new NodeInjector(null, this._hostLView);\n    }\n  }\n\n  override clear(): void {\n    while (this.length > 0) {\n      this.remove(this.length - 1);\n    }\n  }\n\n  override get(index: number): ViewRef|null {\n    const viewRefs = getViewRefs(this._lContainer);\n    return viewRefs !== null && viewRefs[index] || null;\n  }\n\n  override get length(): number {\n    return this._lContainer.length - CONTAINER_HEADER_OFFSET;\n  }\n\n  override createEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, options?: {\n    index?: number,\n    injector?: Injector\n  }): EmbeddedViewRef<C>;\n  override createEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number):\n      EmbeddedViewRef<C>;\n  override createEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, indexOrOptions?: number|{\n    index?: number,\n    injector?: Injector\n  }): EmbeddedViewRef<C> {\n    let index: number|undefined;\n    let injector: Injector|undefined;\n\n    if (typeof indexOrOptions === 'number') {\n      index = indexOrOptions;\n    } else if (indexOrOptions != null) {\n      index = indexOrOptions.index;\n      injector = indexOrOptions.injector;\n    }\n\n    const viewRef = templateRef.createEmbeddedView(context || <any>{}, injector);\n    this.insert(viewRef, index);\n    return viewRef;\n  }\n\n  override createComponent<C>(componentType: Type<C>, options?: {\n    index?: number,\n    injector?: Injector,\n    projectableNodes?: Node[][],\n    ngModuleRef?: NgModuleRef<unknown>,\n  }): ComponentRef<C>;\n  /**\n   * @deprecated Angular no longer requires component factories to dynamically create components.\n   *     Use different signature of the `createComponent` method, which allows passing\n   *     Component class directly.\n   */\n  override createComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number|undefined,\n      injector?: Injector|undefined, projectableNodes?: any[][]|undefined,\n      environmentInjector?: EnvironmentInjector|NgModuleRef<any>|undefined): ComponentRef<C>;\n  override createComponent<C>(\n      componentFactoryOrType: ComponentFactory<C>|Type<C>, indexOrOptions?: number|undefined|{\n        index?: number,\n        injector?: Injector,\n        ngModuleRef?: NgModuleRef<unknown>,\n        environmentInjector?: EnvironmentInjector|NgModuleRef<unknown>,\n        projectableNodes?: Node[][],\n      },\n      injector?: Injector|undefined, projectableNodes?: any[][]|undefined,\n      environmentInjector?: EnvironmentInjector|NgModuleRef<any>|undefined): ComponentRef<C> {\n    const isComponentFactory = componentFactoryOrType && !isType(componentFactoryOrType);\n    let index: number|undefined;\n\n    // This function supports 2 signatures and we need to handle options correctly for both:\n    //   1. When first argument is a Component type. This signature also requires extra\n    //      options to be provided as as object (more ergonomic option).\n    //   2. First argument is a Component factory. In this case extra options are represented as\n    //      positional arguments. This signature is less ergonomic and will be deprecated.\n    if (isComponentFactory) {\n      if (ngDevMode) {\n        assertEqual(\n            typeof indexOrOptions !== 'object', true,\n            'It looks like Component factory was provided as the first argument ' +\n                'and an options object as the second argument. This combination of arguments ' +\n                'is incompatible. You can either change the first argument to provide Component ' +\n                'type or change the second argument to be a number (representing an index at ' +\n                'which to insert the new component\\'s host view into this container)');\n      }\n      index = indexOrOptions as number | undefined;\n    } else {\n      if (ngDevMode) {\n        assertDefined(\n            getComponentDef(componentFactoryOrType),\n            `Provided Component class doesn't contain Component definition. ` +\n                `Please check whether provided class has @Component decorator.`);\n        assertEqual(\n            typeof indexOrOptions !== 'number', true,\n            'It looks like Component type was provided as the first argument ' +\n                'and a number (representing an index at which to insert the new component\\'s ' +\n                'host view into this container as the second argument. This combination of arguments ' +\n                'is incompatible. Please use an object as the second argument instead.');\n      }\n      const options = (indexOrOptions || {}) as {\n        index?: number,\n        injector?: Injector,\n        ngModuleRef?: NgModuleRef<unknown>,\n        environmentInjector?: EnvironmentInjector | NgModuleRef<unknown>,\n        projectableNodes?: Node[][],\n      };\n      if (ngDevMode && options.environmentInjector && options.ngModuleRef) {\n        throwError(\n            `Cannot pass both environmentInjector and ngModuleRef options to createComponent().`);\n      }\n      index = options.index;\n      injector = options.injector;\n      projectableNodes = options.projectableNodes;\n      environmentInjector = options.environmentInjector || options.ngModuleRef;\n    }\n\n    const componentFactory: ComponentFactory<C> = isComponentFactory ?\n        componentFactoryOrType as ComponentFactory<C>:\n        new R3ComponentFactory(getComponentDef(componentFactoryOrType)!);\n    const contextInjector = injector || this.parentInjector;\n\n    // If an `NgModuleRef` is not provided explicitly, try retrieving it from the DI tree.\n    if (!environmentInjector && (componentFactory as any).ngModule == null) {\n      // For the `ComponentFactory` case, entering this logic is very unlikely, since we expect that\n      // an instance of a `ComponentFactory`, resolved via `ComponentFactoryResolver` would have an\n      // `ngModule` field. This is possible in some test scenarios and potentially in some JIT-based\n      // use-cases. For the `ComponentFactory` case we preserve backwards-compatibility and try\n      // using a provided injector first, then fall back to the parent injector of this\n      // `ViewContainerRef` instance.\n      //\n      // For the factory-less case, it's critical to establish a connection with the module\n      // injector tree (by retrieving an instance of an `NgModuleRef` and accessing its injector),\n      // so that a component can use DI tokens provided in MgModules. For this reason, we can not\n      // rely on the provided injector, since it might be detached from the DI tree (for example, if\n      // it was created via `Injector.create` without specifying a parent injector, or if an\n      // injector is retrieved from an `NgModuleRef` created via `createNgModule` using an\n      // NgModule outside of a module tree). Instead, we always use `ViewContainerRef`'s parent\n      // injector, which is normally connected to the DI tree, which includes module injector\n      // subtree.\n      const _injector = isComponentFactory ? contextInjector : this.parentInjector;\n\n      // DO NOT REFACTOR. The code here used to have a `injector.get(NgModuleRef, null) ||\n      // undefined` expression which seems to cause internal google apps to fail. This is documented\n      // in the following internal bug issue: go/b/142967802\n      const result = _injector.get(EnvironmentInjector, null);\n      if (result) {\n        environmentInjector = result;\n      }\n    }\n\n    const componentRef =\n        componentFactory.create(contextInjector, projectableNodes, undefined, environmentInjector);\n    this.insert(componentRef.hostView, index);\n    return componentRef;\n  }\n\n  override insert(viewRef: ViewRef, index?: number): ViewRef {\n    const lView = (viewRef as R3ViewRef<any>)._lView!;\n    const tView = lView[TVIEW];\n\n    if (ngDevMode && viewRef.destroyed) {\n      throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n    }\n\n    if (viewAttachedToContainer(lView)) {\n      // If view is already attached, detach it first so we clean up references appropriately.\n\n      const prevIdx = this.indexOf(viewRef);\n\n      // A view might be attached either to this or a different container. The `prevIdx` for\n      // those cases will be:\n      // equal to -1 for views attached to this ViewContainerRef\n      // >= 0 for views attached to a different ViewContainerRef\n      if (prevIdx !== -1) {\n        this.detach(prevIdx);\n      } else {\n        const prevLContainer = lView[PARENT] as LContainer;\n        ngDevMode &&\n            assertEqual(\n                isLContainer(prevLContainer), true,\n                'An attached view should have its PARENT point to a container.');\n\n\n        // We need to re-create a R3ViewContainerRef instance since those are not stored on\n        // LView (nor anywhere else).\n        const prevVCRef = new R3ViewContainerRef(\n            prevLContainer, prevLContainer[T_HOST] as TDirectiveHostNode, prevLContainer[PARENT]);\n\n        prevVCRef.detach(prevVCRef.indexOf(viewRef));\n      }\n    }\n\n    // Logical operation of adding `LView` to `LContainer`\n    const adjustedIdx = this._adjustIndex(index);\n    const lContainer = this._lContainer;\n    insertView(tView, lView, lContainer, adjustedIdx);\n\n    // Physical operation of adding the DOM nodes.\n    const beforeNode = getBeforeNodeForView(adjustedIdx, lContainer);\n    const renderer = lView[RENDERER];\n    const parentRNode = nativeParentNode(renderer, lContainer[NATIVE] as RElement | RComment);\n    if (parentRNode !== null) {\n      addViewToContainer(tView, lContainer[T_HOST], renderer, lView, parentRNode, beforeNode);\n    }\n\n    (viewRef as R3ViewRef<any>).attachToViewContainerRef();\n    addToArray(getOrCreateViewRefs(lContainer), adjustedIdx, viewRef);\n\n    return viewRef;\n  }\n\n  override move(viewRef: ViewRef, newIndex: number): ViewRef {\n    if (ngDevMode && viewRef.destroyed) {\n      throw new Error('Cannot move a destroyed View in a ViewContainer!');\n    }\n    return this.insert(viewRef, newIndex);\n  }\n\n  override indexOf(viewRef: ViewRef): number {\n    const viewRefsArr = getViewRefs(this._lContainer);\n    return viewRefsArr !== null ? viewRefsArr.indexOf(viewRef) : -1;\n  }\n\n  override remove(index?: number): void {\n    const adjustedIdx = this._adjustIndex(index, -1);\n    const detachedView = detachView(this._lContainer, adjustedIdx);\n\n    if (detachedView) {\n      // Before destroying the view, remove it from the container's array of `ViewRef`s.\n      // This ensures the view container length is updated before calling\n      // `destroyLView`, which could recursively call view container methods that\n      // rely on an accurate container length.\n      // (e.g. a method on this view container being called by a child directive's OnDestroy\n      // lifecycle hook)\n      removeFromArray(getOrCreateViewRefs(this._lContainer), adjustedIdx);\n      destroyLView(detachedView[TVIEW], detachedView);\n    }\n  }\n\n  override detach(index?: number): ViewRef|null {\n    const adjustedIdx = this._adjustIndex(index, -1);\n    const view = detachView(this._lContainer, adjustedIdx);\n\n    const wasDetached =\n        view && removeFromArray(getOrCreateViewRefs(this._lContainer), adjustedIdx) != null;\n    return wasDetached ? new R3ViewRef(view!) : null;\n  }\n\n  private _adjustIndex(index?: number, shift: number = 0) {\n    if (index == null) {\n      return this.length + shift;\n    }\n    if (ngDevMode) {\n      assertGreaterThan(index, -1, `ViewRef index must be positive, got ${index}`);\n      // +1 because it's legal to insert at the end.\n      assertLessThan(index, this.length + 1 + shift, 'index');\n    }\n    return index;\n  }\n};\n\nfunction getViewRefs(lContainer: LContainer): ViewRef[]|null {\n  return lContainer[VIEW_REFS] as ViewRef[];\n}\n\nfunction getOrCreateViewRefs(lContainer: LContainer): ViewRef[] {\n  return (lContainer[VIEW_REFS] || (lContainer[VIEW_REFS] = [])) as ViewRef[];\n}\n\n/**\n * Creates a ViewContainerRef and stores it on the injector.\n *\n * @param ViewContainerRefToken The ViewContainerRef type\n * @param ElementRefToken The ElementRef type\n * @param hostTNode The node that is requesting a ViewContainerRef\n * @param hostLView The view to which the node belongs\n * @returns The ViewContainerRef instance to use\n */\nexport function createContainerRef(\n    hostTNode: TElementNode|TContainerNode|TElementContainerNode,\n    hostLView: LView): ViewContainerRef {\n  ngDevMode && assertTNodeType(hostTNode, TNodeType.AnyContainer | TNodeType.AnyRNode);\n\n  let lContainer: LContainer;\n  const slotValue = hostLView[hostTNode.index];\n  if (isLContainer(slotValue)) {\n    // If the host is a container, we don't need to create a new LContainer\n    lContainer = slotValue;\n  } else {\n    let commentNode: RComment;\n    // If the host is an element container, the native host element is guaranteed to be a\n    // comment and we can reuse that comment as anchor element for the new LContainer.\n    // The comment node in question is already part of the DOM structure so we don't need to append\n    // it again.\n    if (hostTNode.type & TNodeType.ElementContainer) {\n      commentNode = unwrapRNode(slotValue) as RComment;\n    } else {\n      // If the host is a regular element, we have to insert a comment node manually which will\n      // be used as an anchor when inserting elements. In this specific case we use low-level DOM\n      // manipulation to insert it.\n      const renderer = hostLView[RENDERER];\n      ngDevMode && ngDevMode.rendererCreateComment++;\n      commentNode = renderer.createComment(ngDevMode ? 'container' : '');\n\n      const hostNative = getNativeByTNode(hostTNode, hostLView)!;\n      const parentOfHostNative = nativeParentNode(renderer, hostNative);\n      nativeInsertBefore(\n          renderer, parentOfHostNative!, commentNode, nativeNextSibling(renderer, hostNative),\n          false);\n    }\n\n    hostLView[hostTNode.index] = lContainer =\n        createLContainer(slotValue, hostLView, commentNode, hostTNode);\n\n    addToViewTree(hostLView, lContainer);\n  }\n\n  return new R3ViewContainerRef(lContainer, hostTNode, hostLView);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// We are temporarily importing the existing viewEngine_from core so we can be sure we are\n// correctly implementing its interfaces for backwards compatibility.\n\nimport {ProviderToken} from '../di/provider_token';\nimport {createElementRef, ElementRef as ViewEngine_ElementRef, unwrapElementRef} from '../linker/element_ref';\nimport {QueryList} from '../linker/query_list';\nimport {createTemplateRef, TemplateRef as ViewEngine_TemplateRef} from '../linker/template_ref';\nimport {createContainerRef, ViewContainerRef} from '../linker/view_container_ref';\nimport {assertDefined, assertIndexInRange, assertNumber, throwError} from '../util/assert';\nimport {stringify} from '../util/stringify';\nimport {assertFirstCreatePass, assertLContainer} from './assert';\nimport {getNodeInjectable, locateDirectiveOrProvider} from './di';\nimport {storeCleanupWithContext} from './instructions/shared';\nimport {CONTAINER_HEADER_OFFSET, LContainer, MOVED_VIEWS} from './interfaces/container';\nimport {unusedValueExportToPlacateAjd as unused1} from './interfaces/definition';\nimport {unusedValueExportToPlacateAjd as unused2} from './interfaces/injector';\nimport {TContainerNode, TElementContainerNode, TElementNode, TNode, TNodeType, unusedValueExportToPlacateAjd as unused3} from './interfaces/node';\nimport {LQueries, LQuery, QueryFlags, TQueries, TQuery, TQueryMetadata, unusedValueExportToPlacateAjd as unused4} from './interfaces/query';\nimport {DECLARATION_LCONTAINER, LView, PARENT, QUERIES, TVIEW, TView} from './interfaces/view';\nimport {assertTNodeType} from './node_assert';\nimport {getCurrentQueryIndex, getCurrentTNode, getLView, getTView, setCurrentQueryIndex} from './state';\nimport {isCreationMode} from './util/view_utils';\n\nconst unusedValueToPlacateAjd = unused1 + unused2 + unused3 + unused4;\n\nclass LQuery_<T> implements LQuery<T> {\n  matches: (T|null)[]|null = null;\n  constructor(public queryList: QueryList<T>) {}\n  clone(): LQuery<T> {\n    return new LQuery_(this.queryList);\n  }\n  setDirty(): void {\n    this.queryList.setDirty();\n  }\n}\n\nclass LQueries_ implements LQueries {\n  constructor(public queries: LQuery<any>[] = []) {}\n\n  createEmbeddedView(tView: TView): LQueries|null {\n    const tQueries = tView.queries;\n    if (tQueries !== null) {\n      const noOfInheritedQueries =\n          tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n      const viewLQueries: LQuery<any>[] = [];\n\n      // An embedded view has queries propagated from a declaration view at the beginning of the\n      // TQueries collection and up until a first content query declared in the embedded view. Only\n      // propagated LQueries are created at this point (LQuery corresponding to declared content\n      // queries will be instantiated from the content query instructions for each directive).\n      for (let i = 0; i < noOfInheritedQueries; i++) {\n        const tQuery = tQueries.getByIndex(i);\n        const parentLQuery = this.queries[tQuery.indexInDeclarationView];\n        viewLQueries.push(parentLQuery.clone());\n      }\n\n      return new LQueries_(viewLQueries);\n    }\n\n    return null;\n  }\n\n  insertView(tView: TView): void {\n    this.dirtyQueriesWithMatches(tView);\n  }\n\n  detachView(tView: TView): void {\n    this.dirtyQueriesWithMatches(tView);\n  }\n\n  private dirtyQueriesWithMatches(tView: TView) {\n    for (let i = 0; i < this.queries.length; i++) {\n      if (getTQuery(tView, i).matches !== null) {\n        this.queries[i].setDirty();\n      }\n    }\n  }\n}\n\nclass TQueryMetadata_ implements TQueryMetadata {\n  constructor(\n      public predicate: ProviderToken<unknown>|string[], public flags: QueryFlags,\n      public read: any = null) {}\n}\n\nclass TQueries_ implements TQueries {\n  constructor(private queries: TQuery[] = []) {}\n\n  elementStart(tView: TView, tNode: TNode): void {\n    ngDevMode &&\n        assertFirstCreatePass(\n            tView, 'Queries should collect results on the first template pass only');\n    for (let i = 0; i < this.queries.length; i++) {\n      this.queries[i].elementStart(tView, tNode);\n    }\n  }\n  elementEnd(tNode: TNode): void {\n    for (let i = 0; i < this.queries.length; i++) {\n      this.queries[i].elementEnd(tNode);\n    }\n  }\n  embeddedTView(tNode: TNode): TQueries|null {\n    let queriesForTemplateRef: TQuery[]|null = null;\n\n    for (let i = 0; i < this.length; i++) {\n      const childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n      const tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n\n      if (tqueryClone) {\n        tqueryClone.indexInDeclarationView = i;\n        if (queriesForTemplateRef !== null) {\n          queriesForTemplateRef.push(tqueryClone);\n        } else {\n          queriesForTemplateRef = [tqueryClone];\n        }\n      }\n    }\n\n    return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n  }\n\n  template(tView: TView, tNode: TNode): void {\n    ngDevMode &&\n        assertFirstCreatePass(\n            tView, 'Queries should collect results on the first template pass only');\n    for (let i = 0; i < this.queries.length; i++) {\n      this.queries[i].template(tView, tNode);\n    }\n  }\n\n  getByIndex(index: number): TQuery {\n    ngDevMode && assertIndexInRange(this.queries, index);\n    return this.queries[index];\n  }\n\n  get length(): number {\n    return this.queries.length;\n  }\n\n  track(tquery: TQuery): void {\n    this.queries.push(tquery);\n  }\n}\n\nclass TQuery_ implements TQuery {\n  matches: number[]|null = null;\n  indexInDeclarationView = -1;\n  crossesNgTemplate = false;\n\n  /**\n   * A node index on which a query was declared (-1 for view queries and ones inherited from the\n   * declaration template). We use this index (alongside with _appliesToNextNode flag) to know\n   * when to apply content queries to elements in a template.\n   */\n  private _declarationNodeIndex: number;\n\n  /**\n   * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n   * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n   * elements in a template.\n   */\n  private _appliesToNextNode = true;\n\n  constructor(public metadata: TQueryMetadata, nodeIndex: number = -1) {\n    this._declarationNodeIndex = nodeIndex;\n  }\n\n  elementStart(tView: TView, tNode: TNode): void {\n    if (this.isApplyingToNode(tNode)) {\n      this.matchTNode(tView, tNode);\n    }\n  }\n\n  elementEnd(tNode: TNode): void {\n    if (this._declarationNodeIndex === tNode.index) {\n      this._appliesToNextNode = false;\n    }\n  }\n\n  template(tView: TView, tNode: TNode): void {\n    this.elementStart(tView, tNode);\n  }\n\n  embeddedTView(tNode: TNode, childQueryIndex: number): TQuery|null {\n    if (this.isApplyingToNode(tNode)) {\n      this.crossesNgTemplate = true;\n      // A marker indicating a `<ng-template>` element (a placeholder for query results from\n      // embedded views created based on this `<ng-template>`).\n      this.addMatch(-tNode.index, childQueryIndex);\n      return new TQuery_(this.metadata);\n    }\n    return null;\n  }\n\n  private isApplyingToNode(tNode: TNode): boolean {\n    if (this._appliesToNextNode &&\n        (this.metadata.flags & QueryFlags.descendants) !== QueryFlags.descendants) {\n      const declarationNodeIdx = this._declarationNodeIndex;\n      let parent = tNode.parent;\n      // Determine if a given TNode is a \"direct\" child of a node on which a content query was\n      // declared (only direct children of query's host node can match with the descendants: false\n      // option). There are 3 main use-case / conditions to consider here:\n      // - <needs-target><i #target></i></needs-target>: here <i #target> parent node is a query\n      // host node;\n      // - <needs-target><ng-template [ngIf]=\"true\"><i #target></i></ng-template></needs-target>:\n      // here <i #target> parent node is null;\n      // - <needs-target><ng-container><i #target></i></ng-container></needs-target>: here we need\n      // to go past `<ng-container>` to determine <i #target> parent node (but we shouldn't traverse\n      // up past the query's host node!).\n      while (parent !== null && (parent.type & TNodeType.ElementContainer) &&\n             parent.index !== declarationNodeIdx) {\n        parent = parent.parent;\n      }\n      return declarationNodeIdx === (parent !== null ? parent.index : -1);\n    }\n    return this._appliesToNextNode;\n  }\n\n  private matchTNode(tView: TView, tNode: TNode): void {\n    const predicate = this.metadata.predicate;\n    if (Array.isArray(predicate)) {\n      for (let i = 0; i < predicate.length; i++) {\n        const name = predicate[i];\n        this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, name));\n        // Also try matching the name to a provider since strings can be used as DI tokens too.\n        this.matchTNodeWithReadOption(\n            tView, tNode, locateDirectiveOrProvider(tNode, tView, name, false, false));\n      }\n    } else {\n      if ((predicate as any) === ViewEngine_TemplateRef) {\n        if (tNode.type & TNodeType.Container) {\n          this.matchTNodeWithReadOption(tView, tNode, -1);\n        }\n      } else {\n        this.matchTNodeWithReadOption(\n            tView, tNode, locateDirectiveOrProvider(tNode, tView, predicate, false, false));\n      }\n    }\n  }\n\n  private matchTNodeWithReadOption(tView: TView, tNode: TNode, nodeMatchIdx: number|null): void {\n    if (nodeMatchIdx !== null) {\n      const read = this.metadata.read;\n      if (read !== null) {\n        if (read === ViewEngine_ElementRef || read === ViewContainerRef ||\n            read === ViewEngine_TemplateRef && (tNode.type & TNodeType.Container)) {\n          this.addMatch(tNode.index, -2);\n        } else {\n          const directiveOrProviderIdx =\n              locateDirectiveOrProvider(tNode, tView, read, false, false);\n          if (directiveOrProviderIdx !== null) {\n            this.addMatch(tNode.index, directiveOrProviderIdx);\n          }\n        }\n      } else {\n        this.addMatch(tNode.index, nodeMatchIdx);\n      }\n    }\n  }\n\n  private addMatch(tNodeIdx: number, matchIdx: number) {\n    if (this.matches === null) {\n      this.matches = [tNodeIdx, matchIdx];\n    } else {\n      this.matches.push(tNodeIdx, matchIdx);\n    }\n  }\n}\n\n/**\n * Iterates over local names for a given node and returns directive index\n * (or -1 if a local name points to an element).\n *\n * @param tNode static data of a node to check\n * @param selector selector to match\n * @returns directive index, -1 or null if a selector didn't match any of the local names\n */\nfunction getIdxOfMatchingSelector(tNode: TNode, selector: string): number|null {\n  const localNames = tNode.localNames;\n  if (localNames !== null) {\n    for (let i = 0; i < localNames.length; i += 2) {\n      if (localNames[i] === selector) {\n        return localNames[i + 1] as number;\n      }\n    }\n  }\n  return null;\n}\n\n\nfunction createResultByTNodeType(tNode: TNode, currentView: LView): any {\n  if (tNode.type & (TNodeType.AnyRNode | TNodeType.ElementContainer)) {\n    return createElementRef(tNode, currentView);\n  } else if (tNode.type & TNodeType.Container) {\n    return createTemplateRef(tNode, currentView);\n  }\n  return null;\n}\n\n\nfunction createResultForNode(lView: LView, tNode: TNode, matchingIdx: number, read: any): any {\n  if (matchingIdx === -1) {\n    // if read token and / or strategy is not specified, detect it using appropriate tNode type\n    return createResultByTNodeType(tNode, lView);\n  } else if (matchingIdx === -2) {\n    // read a special token from a node injector\n    return createSpecialToken(lView, tNode, read);\n  } else {\n    // read a token\n    return getNodeInjectable(lView, lView[TVIEW], matchingIdx, tNode as TElementNode);\n  }\n}\n\nfunction createSpecialToken(lView: LView, tNode: TNode, read: any): any {\n  if (read === ViewEngine_ElementRef) {\n    return createElementRef(tNode, lView);\n  } else if (read === ViewEngine_TemplateRef) {\n    return createTemplateRef(tNode, lView);\n  } else if (read === ViewContainerRef) {\n    ngDevMode && assertTNodeType(tNode, TNodeType.AnyRNode | TNodeType.AnyContainer);\n    return createContainerRef(\n        tNode as TElementNode | TContainerNode | TElementContainerNode, lView);\n  } else {\n    ngDevMode &&\n        throwError(\n            `Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got ${\n                stringify(read)}.`);\n  }\n}\n\n/**\n * A helper function that creates query results for a given view. This function is meant to do the\n * processing once and only once for a given view instance (a set of results for a given view\n * doesn't change).\n */\nfunction materializeViewResults<T>(\n    tView: TView, lView: LView, tQuery: TQuery, queryIndex: number): (T|null)[] {\n  const lQuery = lView[QUERIES]!.queries![queryIndex];\n  if (lQuery.matches === null) {\n    const tViewData = tView.data;\n    const tQueryMatches = tQuery.matches!;\n    const result: T|null[] = [];\n    for (let i = 0; i < tQueryMatches.length; i += 2) {\n      const matchedNodeIdx = tQueryMatches[i];\n      if (matchedNodeIdx < 0) {\n        // we at the <ng-template> marker which might have results in views created based on this\n        // <ng-template> - those results will be in separate views though, so here we just leave\n        // null as a placeholder\n        result.push(null);\n      } else {\n        ngDevMode && assertIndexInRange(tViewData, matchedNodeIdx);\n        const tNode = tViewData[matchedNodeIdx] as TNode;\n        result.push(createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read));\n      }\n    }\n    lQuery.matches = result;\n  }\n\n  return lQuery.matches;\n}\n\n/**\n * A helper function that collects (already materialized) query results from a tree of views,\n * starting with a provided LView.\n */\nfunction collectQueryResults<T>(tView: TView, lView: LView, queryIndex: number, result: T[]): T[] {\n  const tQuery = tView.queries!.getByIndex(queryIndex);\n  const tQueryMatches = tQuery.matches;\n  if (tQueryMatches !== null) {\n    const lViewResults = materializeViewResults<T>(tView, lView, tQuery, queryIndex);\n\n    for (let i = 0; i < tQueryMatches.length; i += 2) {\n      const tNodeIdx = tQueryMatches[i];\n      if (tNodeIdx > 0) {\n        result.push(lViewResults[i / 2] as T);\n      } else {\n        const childQueryIndex = tQueryMatches[i + 1];\n\n        const declarationLContainer = lView[-tNodeIdx] as LContainer;\n        ngDevMode && assertLContainer(declarationLContainer);\n\n        // collect matches for views inserted in this container\n        for (let i = CONTAINER_HEADER_OFFSET; i < declarationLContainer.length; i++) {\n          const embeddedLView = declarationLContainer[i];\n          if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n            collectQueryResults(embeddedLView[TVIEW], embeddedLView, childQueryIndex, result);\n          }\n        }\n\n        // collect matches for views created from this declaration container and inserted into\n        // different containers\n        if (declarationLContainer[MOVED_VIEWS] !== null) {\n          const embeddedLViews = declarationLContainer[MOVED_VIEWS]!;\n          for (let i = 0; i < embeddedLViews.length; i++) {\n            const embeddedLView = embeddedLViews[i];\n            collectQueryResults(embeddedLView[TVIEW], embeddedLView, childQueryIndex, result);\n          }\n        }\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Refreshes a query by combining matches from all active views and removing matches from deleted\n * views.\n *\n * @returns `true` if a query got dirty during change detection or if this is a static query\n * resolving in creation mode, `false` otherwise.\n *\n * @codeGenApi\n */\nexport function ɵɵqueryRefresh(queryList: QueryList<any>): boolean {\n  const lView = getLView();\n  const tView = getTView();\n  const queryIndex = getCurrentQueryIndex();\n\n  setCurrentQueryIndex(queryIndex + 1);\n\n  const tQuery = getTQuery(tView, queryIndex);\n  if (queryList.dirty &&\n      (isCreationMode(lView) ===\n       ((tQuery.metadata.flags & QueryFlags.isStatic) === QueryFlags.isStatic))) {\n    if (tQuery.matches === null) {\n      queryList.reset([]);\n    } else {\n      const result = tQuery.crossesNgTemplate ?\n          collectQueryResults(tView, lView, queryIndex, []) :\n          materializeViewResults(tView, lView, tQuery, queryIndex);\n      queryList.reset(result, unwrapElementRef);\n      queryList.notifyOnChanges();\n    }\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Creates new QueryList, stores the reference in LView and returns QueryList.\n *\n * @param predicate The type for which the query will search\n * @param flags Flags associated with the query\n * @param read What to save in the query\n *\n * @codeGenApi\n */\nexport function ɵɵviewQuery<T>(\n    predicate: ProviderToken<unknown>|string[], flags: QueryFlags, read?: any): void {\n  ngDevMode && assertNumber(flags, 'Expecting flags');\n  const tView = getTView();\n  if (tView.firstCreatePass) {\n    createTQuery(tView, new TQueryMetadata_(predicate, flags, read), -1);\n    if ((flags & QueryFlags.isStatic) === QueryFlags.isStatic) {\n      tView.staticViewQueries = true;\n    }\n  }\n  createLQuery<T>(tView, getLView(), flags);\n}\n\n/**\n * Registers a QueryList, associated with a content query, for later refresh (part of a view\n * refresh).\n *\n * @param directiveIndex Current directive index\n * @param predicate The type for which the query will search\n * @param flags Flags associated with the query\n * @param read What to save in the query\n * @returns QueryList<T>\n *\n * @codeGenApi\n */\nexport function ɵɵcontentQuery<T>(\n    directiveIndex: number, predicate: ProviderToken<unknown>|string[], flags: QueryFlags,\n    read?: any): void {\n  ngDevMode && assertNumber(flags, 'Expecting flags');\n  const tView = getTView();\n  if (tView.firstCreatePass) {\n    const tNode = getCurrentTNode()!;\n    createTQuery(tView, new TQueryMetadata_(predicate, flags, read), tNode.index);\n    saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n    if ((flags & QueryFlags.isStatic) === QueryFlags.isStatic) {\n      tView.staticContentQueries = true;\n    }\n  }\n\n  createLQuery<T>(tView, getLView(), flags);\n}\n\n/**\n * Loads a QueryList corresponding to the current view or content query.\n *\n * @codeGenApi\n */\nexport function ɵɵloadQuery<T>(): QueryList<T> {\n  return loadQueryInternal<T>(getLView(), getCurrentQueryIndex());\n}\n\nfunction loadQueryInternal<T>(lView: LView, queryIndex: number): QueryList<T> {\n  ngDevMode &&\n      assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n  ngDevMode && assertIndexInRange(lView[QUERIES]!.queries, queryIndex);\n  return lView[QUERIES]!.queries[queryIndex].queryList;\n}\n\nfunction createLQuery<T>(tView: TView, lView: LView, flags: QueryFlags) {\n  const queryList = new QueryList<T>(\n      (flags & QueryFlags.emitDistinctChangesOnly) === QueryFlags.emitDistinctChangesOnly);\n  storeCleanupWithContext(tView, lView, queryList, queryList.destroy);\n\n  if (lView[QUERIES] === null) lView[QUERIES] = new LQueries_();\n  lView[QUERIES]!.queries.push(new LQuery_(queryList));\n}\n\nfunction createTQuery(tView: TView, metadata: TQueryMetadata, nodeIndex: number): void {\n  if (tView.queries === null) tView.queries = new TQueries_();\n  tView.queries.track(new TQuery_(metadata, nodeIndex));\n}\n\nfunction saveContentQueryAndDirectiveIndex(tView: TView, directiveIndex: number) {\n  const tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n  const lastSavedDirectiveIndex =\n      tViewContentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n  if (directiveIndex !== lastSavedDirectiveIndex) {\n    tViewContentQueries.push(tView.queries!.length - 1, directiveIndex);\n  }\n}\n\nfunction getTQuery(tView: TView, index: number): TQuery {\n  ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n  return tView.queries!.getByIndex(index);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {createTemplateRef, TemplateRef} from '../linker/template_ref';\nimport {TNode} from './interfaces/node';\nimport {LView} from './interfaces/view';\n\n\n/**\n * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n * `<ng-template>` element.\n *\n * @codeGenApi\n */\nexport function ɵɵtemplateRefExtractor(tNode: TNode, lView: LView): TemplateRef<any>|null {\n  return createTemplateRef(tNode, lView);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {forwardRef, resolveForwardRef} from '../../di/forward_ref';\nimport {ɵɵinject, ɵɵinvalidFactoryDep} from '../../di/injector_compatibility';\nimport {ɵɵdefineInjectable, ɵɵdefineInjector} from '../../di/interface/defs';\nimport {registerNgModuleType} from '../../linker/ng_module_registration';\nimport * as sanitization from '../../sanitization/sanitization';\nimport * as r3 from '../index';\n\n\n/**\n * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n *\n * This should be kept up to date with the public exports of @angular/core.\n */\nexport const angularCoreEnv: {[name: string]: Function} =\n    (() => ({\n       'ɵɵattribute': r3.ɵɵattribute,\n       'ɵɵattributeInterpolate1': r3.ɵɵattributeInterpolate1,\n       'ɵɵattributeInterpolate2': r3.ɵɵattributeInterpolate2,\n       'ɵɵattributeInterpolate3': r3.ɵɵattributeInterpolate3,\n       'ɵɵattributeInterpolate4': r3.ɵɵattributeInterpolate4,\n       'ɵɵattributeInterpolate5': r3.ɵɵattributeInterpolate5,\n       'ɵɵattributeInterpolate6': r3.ɵɵattributeInterpolate6,\n       'ɵɵattributeInterpolate7': r3.ɵɵattributeInterpolate7,\n       'ɵɵattributeInterpolate8': r3.ɵɵattributeInterpolate8,\n       'ɵɵattributeInterpolateV': r3.ɵɵattributeInterpolateV,\n       'ɵɵdefineComponent': r3.ɵɵdefineComponent,\n       'ɵɵdefineDirective': r3.ɵɵdefineDirective,\n       'ɵɵdefineInjectable': ɵɵdefineInjectable,\n       'ɵɵdefineInjector': ɵɵdefineInjector,\n       'ɵɵdefineNgModule': r3.ɵɵdefineNgModule,\n       'ɵɵdefinePipe': r3.ɵɵdefinePipe,\n       'ɵɵdirectiveInject': r3.ɵɵdirectiveInject,\n       'ɵɵgetInheritedFactory': r3.ɵɵgetInheritedFactory,\n       'ɵɵinject': ɵɵinject,\n       'ɵɵinjectAttribute': r3.ɵɵinjectAttribute,\n       'ɵɵinvalidFactory': r3.ɵɵinvalidFactory,\n       'ɵɵinvalidFactoryDep': ɵɵinvalidFactoryDep,\n       'ɵɵtemplateRefExtractor': r3.ɵɵtemplateRefExtractor,\n       'ɵɵresetView': r3.ɵɵresetView,\n       'ɵɵNgOnChangesFeature': r3.ɵɵNgOnChangesFeature,\n       'ɵɵProvidersFeature': r3.ɵɵProvidersFeature,\n       'ɵɵCopyDefinitionFeature': r3.ɵɵCopyDefinitionFeature,\n       'ɵɵInheritDefinitionFeature': r3.ɵɵInheritDefinitionFeature,\n       'ɵɵStandaloneFeature': r3.ɵɵStandaloneFeature,\n       'ɵɵnextContext': r3.ɵɵnextContext,\n       'ɵɵnamespaceHTML': r3.ɵɵnamespaceHTML,\n       'ɵɵnamespaceMathML': r3.ɵɵnamespaceMathML,\n       'ɵɵnamespaceSVG': r3.ɵɵnamespaceSVG,\n       'ɵɵenableBindings': r3.ɵɵenableBindings,\n       'ɵɵdisableBindings': r3.ɵɵdisableBindings,\n       'ɵɵelementStart': r3.ɵɵelementStart,\n       'ɵɵelementEnd': r3.ɵɵelementEnd,\n       'ɵɵelement': r3.ɵɵelement,\n       'ɵɵelementContainerStart': r3.ɵɵelementContainerStart,\n       'ɵɵelementContainerEnd': r3.ɵɵelementContainerEnd,\n       'ɵɵelementContainer': r3.ɵɵelementContainer,\n       'ɵɵpureFunction0': r3.ɵɵpureFunction0,\n       'ɵɵpureFunction1': r3.ɵɵpureFunction1,\n       'ɵɵpureFunction2': r3.ɵɵpureFunction2,\n       'ɵɵpureFunction3': r3.ɵɵpureFunction3,\n       'ɵɵpureFunction4': r3.ɵɵpureFunction4,\n       'ɵɵpureFunction5': r3.ɵɵpureFunction5,\n       'ɵɵpureFunction6': r3.ɵɵpureFunction6,\n       'ɵɵpureFunction7': r3.ɵɵpureFunction7,\n       'ɵɵpureFunction8': r3.ɵɵpureFunction8,\n       'ɵɵpureFunctionV': r3.ɵɵpureFunctionV,\n       'ɵɵgetCurrentView': r3.ɵɵgetCurrentView,\n       'ɵɵrestoreView': r3.ɵɵrestoreView,\n       'ɵɵlistener': r3.ɵɵlistener,\n       'ɵɵprojection': r3.ɵɵprojection,\n       'ɵɵsyntheticHostProperty': r3.ɵɵsyntheticHostProperty,\n       'ɵɵsyntheticHostListener': r3.ɵɵsyntheticHostListener,\n       'ɵɵpipeBind1': r3.ɵɵpipeBind1,\n       'ɵɵpipeBind2': r3.ɵɵpipeBind2,\n       'ɵɵpipeBind3': r3.ɵɵpipeBind3,\n       'ɵɵpipeBind4': r3.ɵɵpipeBind4,\n       'ɵɵpipeBindV': r3.ɵɵpipeBindV,\n       'ɵɵprojectionDef': r3.ɵɵprojectionDef,\n       'ɵɵhostProperty': r3.ɵɵhostProperty,\n       'ɵɵproperty': r3.ɵɵproperty,\n       'ɵɵpropertyInterpolate': r3.ɵɵpropertyInterpolate,\n       'ɵɵpropertyInterpolate1': r3.ɵɵpropertyInterpolate1,\n       'ɵɵpropertyInterpolate2': r3.ɵɵpropertyInterpolate2,\n       'ɵɵpropertyInterpolate3': r3.ɵɵpropertyInterpolate3,\n       'ɵɵpropertyInterpolate4': r3.ɵɵpropertyInterpolate4,\n       'ɵɵpropertyInterpolate5': r3.ɵɵpropertyInterpolate5,\n       'ɵɵpropertyInterpolate6': r3.ɵɵpropertyInterpolate6,\n       'ɵɵpropertyInterpolate7': r3.ɵɵpropertyInterpolate7,\n       'ɵɵpropertyInterpolate8': r3.ɵɵpropertyInterpolate8,\n       'ɵɵpropertyInterpolateV': r3.ɵɵpropertyInterpolateV,\n       'ɵɵpipe': r3.ɵɵpipe,\n       'ɵɵqueryRefresh': r3.ɵɵqueryRefresh,\n       'ɵɵviewQuery': r3.ɵɵviewQuery,\n       'ɵɵloadQuery': r3.ɵɵloadQuery,\n       'ɵɵcontentQuery': r3.ɵɵcontentQuery,\n       'ɵɵreference': r3.ɵɵreference,\n       'ɵɵclassMap': r3.ɵɵclassMap,\n       'ɵɵclassMapInterpolate1': r3.ɵɵclassMapInterpolate1,\n       'ɵɵclassMapInterpolate2': r3.ɵɵclassMapInterpolate2,\n       'ɵɵclassMapInterpolate3': r3.ɵɵclassMapInterpolate3,\n       'ɵɵclassMapInterpolate4': r3.ɵɵclassMapInterpolate4,\n       'ɵɵclassMapInterpolate5': r3.ɵɵclassMapInterpolate5,\n       'ɵɵclassMapInterpolate6': r3.ɵɵclassMapInterpolate6,\n       'ɵɵclassMapInterpolate7': r3.ɵɵclassMapInterpolate7,\n       'ɵɵclassMapInterpolate8': r3.ɵɵclassMapInterpolate8,\n       'ɵɵclassMapInterpolateV': r3.ɵɵclassMapInterpolateV,\n       'ɵɵstyleMap': r3.ɵɵstyleMap,\n       'ɵɵstyleMapInterpolate1': r3.ɵɵstyleMapInterpolate1,\n       'ɵɵstyleMapInterpolate2': r3.ɵɵstyleMapInterpolate2,\n       'ɵɵstyleMapInterpolate3': r3.ɵɵstyleMapInterpolate3,\n       'ɵɵstyleMapInterpolate4': r3.ɵɵstyleMapInterpolate4,\n       'ɵɵstyleMapInterpolate5': r3.ɵɵstyleMapInterpolate5,\n       'ɵɵstyleMapInterpolate6': r3.ɵɵstyleMapInterpolate6,\n       'ɵɵstyleMapInterpolate7': r3.ɵɵstyleMapInterpolate7,\n       'ɵɵstyleMapInterpolate8': r3.ɵɵstyleMapInterpolate8,\n       'ɵɵstyleMapInterpolateV': r3.ɵɵstyleMapInterpolateV,\n       'ɵɵstyleProp': r3.ɵɵstyleProp,\n       'ɵɵstylePropInterpolate1': r3.ɵɵstylePropInterpolate1,\n       'ɵɵstylePropInterpolate2': r3.ɵɵstylePropInterpolate2,\n       'ɵɵstylePropInterpolate3': r3.ɵɵstylePropInterpolate3,\n       'ɵɵstylePropInterpolate4': r3.ɵɵstylePropInterpolate4,\n       'ɵɵstylePropInterpolate5': r3.ɵɵstylePropInterpolate5,\n       'ɵɵstylePropInterpolate6': r3.ɵɵstylePropInterpolate6,\n       'ɵɵstylePropInterpolate7': r3.ɵɵstylePropInterpolate7,\n       'ɵɵstylePropInterpolate8': r3.ɵɵstylePropInterpolate8,\n       'ɵɵstylePropInterpolateV': r3.ɵɵstylePropInterpolateV,\n       'ɵɵclassProp': r3.ɵɵclassProp,\n       'ɵɵadvance': r3.ɵɵadvance,\n       'ɵɵtemplate': r3.ɵɵtemplate,\n       'ɵɵtext': r3.ɵɵtext,\n       'ɵɵtextInterpolate': r3.ɵɵtextInterpolate,\n       'ɵɵtextInterpolate1': r3.ɵɵtextInterpolate1,\n       'ɵɵtextInterpolate2': r3.ɵɵtextInterpolate2,\n       'ɵɵtextInterpolate3': r3.ɵɵtextInterpolate3,\n       'ɵɵtextInterpolate4': r3.ɵɵtextInterpolate4,\n       'ɵɵtextInterpolate5': r3.ɵɵtextInterpolate5,\n       'ɵɵtextInterpolate6': r3.ɵɵtextInterpolate6,\n       'ɵɵtextInterpolate7': r3.ɵɵtextInterpolate7,\n       'ɵɵtextInterpolate8': r3.ɵɵtextInterpolate8,\n       'ɵɵtextInterpolateV': r3.ɵɵtextInterpolateV,\n       'ɵɵi18n': r3.ɵɵi18n,\n       'ɵɵi18nAttributes': r3.ɵɵi18nAttributes,\n       'ɵɵi18nExp': r3.ɵɵi18nExp,\n       'ɵɵi18nStart': r3.ɵɵi18nStart,\n       'ɵɵi18nEnd': r3.ɵɵi18nEnd,\n       'ɵɵi18nApply': r3.ɵɵi18nApply,\n       'ɵɵi18nPostprocess': r3.ɵɵi18nPostprocess,\n       'ɵɵresolveWindow': r3.ɵɵresolveWindow,\n       'ɵɵresolveDocument': r3.ɵɵresolveDocument,\n       'ɵɵresolveBody': r3.ɵɵresolveBody,\n       'ɵɵsetComponentScope': r3.ɵɵsetComponentScope,\n       'ɵɵsetNgModuleScope': r3.ɵɵsetNgModuleScope,\n       'ɵɵregisterNgModuleType': registerNgModuleType,\n\n       'ɵɵsanitizeHtml': sanitization.ɵɵsanitizeHtml,\n       'ɵɵsanitizeStyle': sanitization.ɵɵsanitizeStyle,\n       'ɵɵsanitizeResourceUrl': sanitization.ɵɵsanitizeResourceUrl,\n       'ɵɵsanitizeScript': sanitization.ɵɵsanitizeScript,\n       'ɵɵsanitizeUrl': sanitization.ɵɵsanitizeUrl,\n       'ɵɵsanitizeUrlOrResourceUrl': sanitization.ɵɵsanitizeUrlOrResourceUrl,\n       'ɵɵtrustConstantHtml': sanitization.ɵɵtrustConstantHtml,\n       'ɵɵtrustConstantResourceUrl': sanitization.ɵɵtrustConstantResourceUrl,\n\n       'forwardRef': forwardRef,\n       'resolveForwardRef': resolveForwardRef,\n     }))();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ViewEncapsulation} from '../../metadata/view';\n\nexport interface JitCompilerOptions {\n  defaultEncapsulation?: ViewEncapsulation;\n  preserveWhitespaces?: boolean;\n}\n\nlet jitOptions: JitCompilerOptions|null = null;\n\nexport function setJitOptions(options: JitCompilerOptions): void {\n  if (jitOptions !== null) {\n    if (options.defaultEncapsulation !== jitOptions.defaultEncapsulation) {\n      ngDevMode &&\n          console.error(\n              'Provided value for `defaultEncapsulation` can not be changed once it has been set.');\n      return;\n    }\n    if (options.preserveWhitespaces !== jitOptions.preserveWhitespaces) {\n      ngDevMode &&\n          console.error(\n              'Provided value for `preserveWhitespaces` can not be changed once it has been set.');\n      return;\n    }\n  }\n  jitOptions = options;\n}\n\nexport function getJitOptions(): JitCompilerOptions|null {\n  return jitOptions;\n}\n\nexport function resetJitOptions(): void {\n  jitOptions = null;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ModuleWithProviders} from '../../di/interface/provider';\nimport {Type} from '../../interface/type';\nimport {NgModuleDef} from '../../metadata/ng_module_def';\nimport {getNgModuleDef} from '../definition';\n\nexport function isModuleWithProviders(value: any): value is ModuleWithProviders<{}> {\n  return (value as {ngModule?: any}).ngModule !== undefined;\n}\n\nexport function isNgModule<T>(value: Type<T>): value is Type<T>&{ɵmod: NgModuleDef<T>} {\n  return !!getNgModuleDef(value);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getCompilerFacade, JitCompilerUsage, R3InjectorMetadataFacade} from '../../compiler/compiler_facade';\nimport {resolveForwardRef} from '../../di/forward_ref';\nimport {NG_INJ_DEF} from '../../di/interface/defs';\nimport {ModuleWithProviders} from '../../di/interface/provider';\nimport {reflectDependencies} from '../../di/jit/util';\nimport {Type} from '../../interface/type';\nimport {registerNgModuleType} from '../../linker/ng_module_registration';\nimport {Component} from '../../metadata/directives';\nimport {NgModule} from '../../metadata/ng_module';\nimport {NgModuleDef, NgModuleTransitiveScopes, NgModuleType} from '../../metadata/ng_module_def';\nimport {deepForEach, flatten} from '../../util/array_utils';\nimport {assertDefined} from '../../util/assert';\nimport {EMPTY_ARRAY} from '../../util/empty';\nimport {getComponentDef, getDirectiveDef, getNgModuleDef, getPipeDef} from '../definition';\nimport {NG_COMP_DEF, NG_DIR_DEF, NG_FACTORY_DEF, NG_MOD_DEF, NG_PIPE_DEF} from '../fields';\nimport {ComponentDef} from '../interfaces/definition';\nimport {maybeUnwrapFn} from '../util/misc_utils';\nimport {stringifyForError} from '../util/stringify_utils';\n\nimport {angularCoreEnv} from './environment';\nimport {patchModuleCompilation} from './module_patch';\nimport {isModuleWithProviders, isNgModule} from './util';\n\ninterface ModuleQueueItem {\n  moduleType: Type<any>;\n  ngModule: NgModule;\n}\n\nconst moduleQueue: ModuleQueueItem[] = [];\n\n/**\n * Enqueues moduleDef to be checked later to see if scope can be set on its\n * component declarations.\n */\nfunction enqueueModuleForDelayedScoping(moduleType: Type<any>, ngModule: NgModule) {\n  moduleQueue.push({moduleType, ngModule});\n}\n\nlet flushingModuleQueue = false;\n/**\n * Loops over queued module definitions, if a given module definition has all of its\n * declarations resolved, it dequeues that module definition and sets the scope on\n * its declarations.\n */\nexport function flushModuleScopingQueueAsMuchAsPossible() {\n  if (!flushingModuleQueue) {\n    flushingModuleQueue = true;\n    try {\n      for (let i = moduleQueue.length - 1; i >= 0; i--) {\n        const {moduleType, ngModule} = moduleQueue[i];\n\n        if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n          // dequeue\n          moduleQueue.splice(i, 1);\n          setScopeOnDeclaredComponents(moduleType, ngModule);\n        }\n      }\n    } finally {\n      flushingModuleQueue = false;\n    }\n  }\n}\n\n/**\n * Returns truthy if a declaration has resolved. If the declaration happens to be\n * an array of declarations, it will recurse to check each declaration in that array\n * (which may also be arrays).\n */\nfunction isResolvedDeclaration(declaration: any[]|Type<any>): boolean {\n  if (Array.isArray(declaration)) {\n    return declaration.every(isResolvedDeclaration);\n  }\n  return !!resolveForwardRef(declaration);\n}\n\n/**\n * Compiles a module in JIT mode.\n *\n * This function automatically gets called when a class has a `@NgModule` decorator.\n */\nexport function compileNgModule(moduleType: Type<any>, ngModule: NgModule = {}): void {\n  patchModuleCompilation();\n  compileNgModuleDefs(moduleType as NgModuleType, ngModule);\n  if (ngModule.id !== undefined) {\n    registerNgModuleType(moduleType as NgModuleType, ngModule.id);\n  }\n\n  // Because we don't know if all declarations have resolved yet at the moment the\n  // NgModule decorator is executing, we're enqueueing the setting of module scope\n  // on its declarations to be run at a later time when all declarations for the module,\n  // including forward refs, have resolved.\n  enqueueModuleForDelayedScoping(moduleType, ngModule);\n}\n\n/**\n * Compiles and adds the `ɵmod`, `ɵfac` and `ɵinj` properties to the module class.\n *\n * It's possible to compile a module via this API which will allow duplicate declarations in its\n * root.\n */\nexport function compileNgModuleDefs(\n    moduleType: NgModuleType, ngModule: NgModule,\n    allowDuplicateDeclarationsInRoot: boolean = false): void {\n  ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n  ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n  const declarations: Type<any>[] = flatten(ngModule.declarations || EMPTY_ARRAY);\n  let ngModuleDef: any = null;\n  Object.defineProperty(moduleType, NG_MOD_DEF, {\n    configurable: true,\n    get: () => {\n      if (ngModuleDef === null) {\n        if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n          // We need to assert this immediately, because allowing it to continue will cause it to\n          // go into an infinite loop before we've reached the point where we throw all the errors.\n          throw new Error(`'${stringifyForError(moduleType)}' module can't import itself`);\n        }\n        const compiler = getCompilerFacade(\n            {usage: JitCompilerUsage.Decorator, kind: 'NgModule', type: moduleType});\n        ngModuleDef = compiler.compileNgModule(angularCoreEnv, `ng:///${moduleType.name}/ɵmod.js`, {\n          type: moduleType,\n          bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY).map(resolveForwardRef),\n          declarations: declarations.map(resolveForwardRef),\n          imports: flatten(ngModule.imports || EMPTY_ARRAY)\n                       .map(resolveForwardRef)\n                       .map(expandModuleWithProviders),\n          exports: flatten(ngModule.exports || EMPTY_ARRAY)\n                       .map(resolveForwardRef)\n                       .map(expandModuleWithProviders),\n          schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n          id: ngModule.id || null,\n        });\n        // Set `schemas` on ngModuleDef to an empty array in JIT mode to indicate that runtime\n        // should verify that there are no unknown elements in a template. In AOT mode, that check\n        // happens at compile time and `schemas` information is not present on Component and Module\n        // defs after compilation (so the check doesn't happen the second time at runtime).\n        if (!ngModuleDef.schemas) {\n          ngModuleDef.schemas = [];\n        }\n      }\n      return ngModuleDef;\n    }\n  });\n\n  let ngFactoryDef: any = null;\n  Object.defineProperty(moduleType, NG_FACTORY_DEF, {\n    get: () => {\n      if (ngFactoryDef === null) {\n        const compiler = getCompilerFacade(\n            {usage: JitCompilerUsage.Decorator, kind: 'NgModule', type: moduleType});\n        ngFactoryDef = compiler.compileFactory(angularCoreEnv, `ng:///${moduleType.name}/ɵfac.js`, {\n          name: moduleType.name,\n          type: moduleType,\n          deps: reflectDependencies(moduleType),\n          target: compiler.FactoryTarget.NgModule,\n          typeArgumentCount: 0,\n        });\n      }\n      return ngFactoryDef;\n    },\n    // Make the property configurable in dev mode to allow overriding in tests\n    configurable: !!ngDevMode,\n  });\n\n  let ngInjectorDef: any = null;\n  Object.defineProperty(moduleType, NG_INJ_DEF, {\n    get: () => {\n      if (ngInjectorDef === null) {\n        ngDevMode &&\n            verifySemanticsOfNgModuleDef(\n                moduleType as any as NgModuleType, allowDuplicateDeclarationsInRoot);\n        const meta: R3InjectorMetadataFacade = {\n          name: moduleType.name,\n          type: moduleType,\n          providers: ngModule.providers || EMPTY_ARRAY,\n          imports: [\n            (ngModule.imports || EMPTY_ARRAY).map(resolveForwardRef),\n            (ngModule.exports || EMPTY_ARRAY).map(resolveForwardRef),\n          ],\n        };\n        const compiler = getCompilerFacade(\n            {usage: JitCompilerUsage.Decorator, kind: 'NgModule', type: moduleType});\n        ngInjectorDef =\n            compiler.compileInjector(angularCoreEnv, `ng:///${moduleType.name}/ɵinj.js`, meta);\n      }\n      return ngInjectorDef;\n    },\n    // Make the property configurable in dev mode to allow overriding in tests\n    configurable: !!ngDevMode,\n  });\n}\n\nexport function isStandalone<T>(type: Type<T>) {\n  const def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n  return def !== null ? def.standalone : false;\n}\n\nexport function generateStandaloneInDeclarationsError(type: Type<any>, location: string) {\n  const prefix = `Unexpected \"${stringifyForError(type)}\" found in the \"declarations\" array of the`;\n  const suffix = `\"${stringifyForError(type)}\" is marked as standalone and can't be declared ` +\n      'in any NgModule - did you intend to import it instead (by adding it to the \"imports\" array)?';\n  return `${prefix} ${location}, ${suffix}`;\n}\n\nfunction verifySemanticsOfNgModuleDef(\n    moduleType: NgModuleType, allowDuplicateDeclarationsInRoot: boolean,\n    importingModule?: NgModuleType): void {\n  if (verifiedNgModule.get(moduleType)) return;\n\n  // skip verifications of standalone components, directives and pipes\n  if (isStandalone(moduleType)) return;\n\n  verifiedNgModule.set(moduleType, true);\n  moduleType = resolveForwardRef(moduleType);\n  let ngModuleDef: NgModuleDef<any>;\n  if (importingModule) {\n    ngModuleDef = getNgModuleDef(moduleType)!;\n    if (!ngModuleDef) {\n      throw new Error(`Unexpected value '${moduleType.name}' imported by the module '${\n          importingModule.name}'. Please add an @NgModule annotation.`);\n    }\n  } else {\n    ngModuleDef = getNgModuleDef(moduleType, true);\n  }\n  const errors: string[] = [];\n  const declarations = maybeUnwrapFn(ngModuleDef.declarations);\n  const imports = maybeUnwrapFn(ngModuleDef.imports);\n  flatten(imports).map(unwrapModuleWithProvidersImports).forEach(modOrStandaloneCmpt => {\n    verifySemanticsOfNgModuleImport(modOrStandaloneCmpt, moduleType);\n    verifySemanticsOfNgModuleDef(modOrStandaloneCmpt, false, moduleType);\n  });\n  const exports = maybeUnwrapFn(ngModuleDef.exports);\n  declarations.forEach(verifyDeclarationsHaveDefinitions);\n  declarations.forEach(verifyDirectivesHaveSelector);\n  declarations.forEach((declarationType) => verifyNotStandalone(declarationType, moduleType));\n  const combinedDeclarations: Type<any>[] = [\n    ...declarations.map(resolveForwardRef),\n    ...flatten(imports.map(computeCombinedExports)).map(resolveForwardRef),\n  ];\n  exports.forEach(verifyExportsAreDeclaredOrReExported);\n  declarations.forEach(decl => verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot));\n  declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n\n  const ngModule = getAnnotation<NgModule>(moduleType, 'NgModule');\n  if (ngModule) {\n    ngModule.imports &&\n        flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(mod => {\n          verifySemanticsOfNgModuleImport(mod, moduleType);\n          verifySemanticsOfNgModuleDef(mod, false, moduleType);\n        });\n    ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n    ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n    ngModule.entryComponents &&\n        deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n  }\n\n  // Throw Error if any errors were detected.\n  if (errors.length) {\n    throw new Error(errors.join('\\n'));\n  }\n  ////////////////////////////////////////////////////////////////////////////////////////////////\n  function verifyDeclarationsHaveDefinitions(type: Type<any>): void {\n    type = resolveForwardRef(type);\n    const def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n    if (!def) {\n      errors.push(`Unexpected value '${stringifyForError(type)}' declared by the module '${\n          stringifyForError(moduleType)}'. Please add a @Pipe/@Directive/@Component annotation.`);\n    }\n  }\n\n  function verifyDirectivesHaveSelector(type: Type<any>): void {\n    type = resolveForwardRef(type);\n    const def = getDirectiveDef(type);\n    if (!getComponentDef(type) && def && def.selectors.length == 0) {\n      errors.push(`Directive ${stringifyForError(type)} has no selector, please add it!`);\n    }\n  }\n\n  function verifyNotStandalone(type: Type<any>, moduleType: NgModuleType): void {\n    type = resolveForwardRef(type);\n    const def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n    if (def?.standalone) {\n      const location = `\"${stringifyForError(moduleType)}\" NgModule`;\n      errors.push(generateStandaloneInDeclarationsError(type, location));\n    }\n  }\n\n  function verifyExportsAreDeclaredOrReExported(type: Type<any>) {\n    type = resolveForwardRef(type);\n    const kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n        getPipeDef(type) && 'pipe';\n    if (kind) {\n      // only checked if we are declared as Component, Directive, or Pipe\n      // Modules don't need to be declared or imported.\n      if (combinedDeclarations.lastIndexOf(type) === -1) {\n        // We are exporting something which we don't explicitly declare or import.\n        errors.push(`Can't export ${kind} ${stringifyForError(type)} from ${\n            stringifyForError(moduleType)} as it was neither declared nor imported!`);\n      }\n    }\n  }\n\n  function verifyDeclarationIsUnique(type: Type<any>, suppressErrors: boolean) {\n    type = resolveForwardRef(type);\n    const existingModule = ownerNgModule.get(type);\n    if (existingModule && existingModule !== moduleType) {\n      if (!suppressErrors) {\n        const modules = [existingModule, moduleType].map(stringifyForError).sort();\n        errors.push(\n            `Type ${stringifyForError(type)} is part of the declarations of 2 modules: ${\n                modules[0]} and ${modules[1]}! ` +\n            `Please consider moving ${stringifyForError(type)} to a higher module that imports ${\n                modules[0]} and ${modules[1]}. ` +\n            `You can also create a new NgModule that exports and includes ${\n                stringifyForError(\n                    type)} then import that NgModule in ${modules[0]} and ${modules[1]}.`);\n      }\n    } else {\n      // Mark type as having owner.\n      ownerNgModule.set(type, moduleType);\n    }\n  }\n\n  function verifyComponentIsPartOfNgModule(type: Type<any>) {\n    type = resolveForwardRef(type);\n    const existingModule = ownerNgModule.get(type);\n    if (!existingModule && !isStandalone(type)) {\n      errors.push(`Component ${\n          stringifyForError(\n              type)} is not part of any NgModule or the module has not been imported into your module.`);\n    }\n  }\n\n  function verifyCorrectBootstrapType(type: Type<any>) {\n    type = resolveForwardRef(type);\n    if (!getComponentDef(type)) {\n      errors.push(`${stringifyForError(type)} cannot be used as an entry component.`);\n    }\n    if (isStandalone(type)) {\n      // Note: this error should be the same as the\n      // `NGMODULE_BOOTSTRAP_IS_STANDALONE` one in AOT compiler.\n      errors.push(\n          `The \\`${stringifyForError(type)}\\` class is a standalone component, which can ` +\n          `not be used in the \\`@NgModule.bootstrap\\` array. Use the \\`bootstrapApplication\\` ` +\n          `function for bootstrap instead.`);\n    }\n  }\n\n  function verifyComponentEntryComponentsIsPartOfNgModule(type: Type<any>) {\n    type = resolveForwardRef(type);\n    if (getComponentDef(type)) {\n      // We know we are component\n      const component = getAnnotation<Component>(type, 'Component');\n      if (component && component.entryComponents) {\n        deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n      }\n    }\n  }\n\n  function verifySemanticsOfNgModuleImport(type: Type<any>, importingModule: Type<any>) {\n    type = resolveForwardRef(type);\n\n    const directiveDef = getComponentDef(type) || getDirectiveDef(type);\n    if (directiveDef !== null && !directiveDef.standalone) {\n      throw new Error(`Unexpected directive '${type.name}' imported by the module '${\n          importingModule.name}'. Please add an @NgModule annotation.`);\n    }\n\n    const pipeDef = getPipeDef(type);\n    if (pipeDef !== null && !pipeDef.standalone) {\n      throw new Error(`Unexpected pipe '${type.name}' imported by the module '${\n          importingModule.name}'. Please add an @NgModule annotation.`);\n    }\n  }\n}\n\nfunction unwrapModuleWithProvidersImports(typeOrWithProviders: NgModuleType<any>|\n                                          {ngModule: NgModuleType<any>}): NgModuleType<any> {\n  typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n  return (typeOrWithProviders as any).ngModule || typeOrWithProviders;\n}\n\nfunction getAnnotation<T>(type: any, name: string): T|null {\n  let annotation: T|null = null;\n  collect(type.__annotations__);\n  collect(type.decorators);\n  return annotation;\n\n  function collect(annotations: any[]|null) {\n    if (annotations) {\n      annotations.forEach(readAnnotation);\n    }\n  }\n\n  function readAnnotation(\n      decorator: {type: {prototype: {ngMetadataName: string}, args: any[]}, args: any}): void {\n    if (!annotation) {\n      const proto = Object.getPrototypeOf(decorator);\n      if (proto.ngMetadataName == name) {\n        annotation = decorator as any;\n      } else if (decorator.type) {\n        const proto = Object.getPrototypeOf(decorator.type);\n        if (proto.ngMetadataName == name) {\n          annotation = decorator.args[0];\n        }\n      }\n    }\n  }\n}\n\n/**\n * Keep track of compiled components. This is needed because in tests we often want to compile the\n * same component with more than one NgModule. This would cause an error unless we reset which\n * NgModule the component belongs to. We keep the list of compiled components here so that the\n * TestBed can reset it later.\n */\nlet ownerNgModule = new WeakMap<Type<any>, NgModuleType<any>>();\nlet verifiedNgModule = new WeakMap<NgModuleType<any>, boolean>();\n\nexport function resetCompiledComponents(): void {\n  ownerNgModule = new WeakMap<Type<any>, NgModuleType<any>>();\n  verifiedNgModule = new WeakMap<NgModuleType<any>, boolean>();\n  moduleQueue.length = 0;\n}\n\n/**\n * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n * traversing the exports of imported modules.\n * @param type\n */\nfunction computeCombinedExports(type: Type<any>): Type<any>[] {\n  type = resolveForwardRef(type);\n  const ngModuleDef = getNgModuleDef(type);\n\n  // a standalone component, directive or pipe\n  if (ngModuleDef === null) {\n    return [type];\n  }\n\n  return [...flatten(maybeUnwrapFn(ngModuleDef.exports).map((type) => {\n    const ngModuleDef = getNgModuleDef(type);\n    if (ngModuleDef) {\n      verifySemanticsOfNgModuleDef(type as any as NgModuleType, false);\n      return computeCombinedExports(type);\n    } else {\n      return type;\n    }\n  }))];\n}\n\n/**\n * Some declared components may be compiled asynchronously, and thus may not have their\n * ɵcmp set yet. If this is the case, then a reference to the module is written into\n * the `ngSelectorScope` property of the declared type.\n */\nfunction setScopeOnDeclaredComponents(moduleType: Type<any>, ngModule: NgModule) {\n  const declarations: Type<any>[] = flatten(ngModule.declarations || EMPTY_ARRAY);\n\n  const transitiveScopes = transitiveScopesFor(moduleType);\n\n  declarations.forEach(declaration => {\n    declaration = resolveForwardRef(declaration);\n    if (declaration.hasOwnProperty(NG_COMP_DEF)) {\n      // A `ɵcmp` field exists - go ahead and patch the component directly.\n      const component = declaration as Type<any>& {ɵcmp: ComponentDef<any>};\n      const componentDef = getComponentDef(component)!;\n      patchComponentDefWithScope(componentDef, transitiveScopes);\n    } else if (\n        !declaration.hasOwnProperty(NG_DIR_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n      // Set `ngSelectorScope` for future reference when the component compilation finishes.\n      (declaration as Type<any>& {ngSelectorScope?: any}).ngSelectorScope = moduleType;\n    }\n  });\n}\n\n/**\n * Patch the definition of a component with directives and pipes from the compilation scope of\n * a given module.\n */\nexport function patchComponentDefWithScope<C>(\n    componentDef: ComponentDef<C>, transitiveScopes: NgModuleTransitiveScopes) {\n  componentDef.directiveDefs = () =>\n      Array.from(transitiveScopes.compilation.directives)\n          .map(\n              dir => dir.hasOwnProperty(NG_COMP_DEF) ? getComponentDef(dir)! : getDirectiveDef(dir)!\n              )\n          .filter(def => !!def);\n  componentDef.pipeDefs = () =>\n      Array.from(transitiveScopes.compilation.pipes).map(pipe => getPipeDef(pipe)!);\n  componentDef.schemas = transitiveScopes.schemas;\n\n  // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n  // may face a problem where previously compiled defs available to a given Component/Directive\n  // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n  // order to avoid this problem, we force fresh TView to be created.\n  componentDef.tView = null;\n}\n\n/**\n * Compute the pair of transitive scopes (compilation scope and exported scope) for a given type\n * (either a NgModule or a standalone component / directive / pipe).\n */\nexport function transitiveScopesFor<T>(type: Type<T>): NgModuleTransitiveScopes {\n  if (isNgModule(type)) {\n    return transitiveScopesForNgModule(type);\n  } else if (isStandalone(type)) {\n    const directiveDef = getComponentDef(type) || getDirectiveDef(type);\n    if (directiveDef !== null) {\n      return {\n        schemas: null,\n        compilation: {\n          directives: new Set<any>(),\n          pipes: new Set<any>(),\n        },\n        exported: {\n          directives: new Set<any>([type]),\n          pipes: new Set<any>(),\n        },\n      };\n    }\n\n    const pipeDef = getPipeDef(type);\n    if (pipeDef !== null) {\n      return {\n        schemas: null,\n        compilation: {\n          directives: new Set<any>(),\n          pipes: new Set<any>(),\n        },\n        exported: {\n          directives: new Set<any>(),\n          pipes: new Set<any>([type]),\n        },\n      };\n    }\n  }\n\n  // TODO: change the error message to be more user-facing and take standalone into account\n  throw new Error(`${type.name} does not have a module def (ɵmod property)`);\n}\n\n/**\n * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n *\n * This operation is memoized and the result is cached on the module's definition. This function can\n * be called on modules with components that have not fully compiled yet, but the result should not\n * be used until they have.\n *\n * @param moduleType module that transitive scope should be calculated for.\n */\nexport function transitiveScopesForNgModule<T>(moduleType: Type<T>): NgModuleTransitiveScopes {\n  const def = getNgModuleDef(moduleType, true);\n\n  if (def.transitiveCompileScopes !== null) {\n    return def.transitiveCompileScopes;\n  }\n\n  const scopes: NgModuleTransitiveScopes = {\n    schemas: def.schemas || null,\n    compilation: {\n      directives: new Set<any>(),\n      pipes: new Set<any>(),\n    },\n    exported: {\n      directives: new Set<any>(),\n      pipes: new Set<any>(),\n    },\n  };\n\n  maybeUnwrapFn(def.imports).forEach(<I>(imported: Type<I>) => {\n    // When this module imports another, the imported module's exported directives and pipes are\n    // added to the compilation scope of this module.\n    const importedScope = transitiveScopesFor(imported);\n    importedScope.exported.directives.forEach(entry => scopes.compilation.directives.add(entry));\n    importedScope.exported.pipes.forEach(entry => scopes.compilation.pipes.add(entry));\n  });\n\n  maybeUnwrapFn(def.declarations).forEach(declared => {\n    const declaredWithDefs = declared as Type<any>& {\n      ɵpipe?: any;\n    };\n\n    if (getPipeDef(declaredWithDefs)) {\n      scopes.compilation.pipes.add(declared);\n    } else {\n      // Either declared has a ɵcmp or ɵdir, or it's a component which hasn't\n      // had its template compiled yet. In either case, it gets added to the compilation's\n      // directives.\n      scopes.compilation.directives.add(declared);\n    }\n  });\n\n  maybeUnwrapFn(def.exports).forEach(<E>(exported: Type<E>) => {\n    const exportedType = exported as Type<E>& {\n      // Components, Directives, NgModules, and Pipes can all be exported.\n      ɵcmp?: any;\n      ɵdir?: any;\n      ɵmod?: NgModuleDef<E>;\n      ɵpipe?: any;\n    };\n\n    // Either the type is a module, a pipe, or a component/directive (which may not have a\n    // ɵcmp as it might be compiled asynchronously).\n    if (isNgModule(exportedType)) {\n      // When this module exports another, the exported module's exported directives and pipes are\n      // added to both the compilation and exported scopes of this module.\n      const exportedScope = transitiveScopesFor(exportedType);\n      exportedScope.exported.directives.forEach(entry => {\n        scopes.compilation.directives.add(entry);\n        scopes.exported.directives.add(entry);\n      });\n      exportedScope.exported.pipes.forEach(entry => {\n        scopes.compilation.pipes.add(entry);\n        scopes.exported.pipes.add(entry);\n      });\n    } else if (getPipeDef(exportedType)) {\n      scopes.exported.pipes.add(exportedType);\n    } else {\n      scopes.exported.directives.add(exportedType);\n    }\n  });\n\n  def.transitiveCompileScopes = scopes;\n  return scopes;\n}\n\nfunction expandModuleWithProviders(value: Type<any>|ModuleWithProviders<{}>): Type<any> {\n  if (isModuleWithProviders(value)) {\n    return value.ngModule;\n  }\n  return value;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getCompilerFacade, JitCompilerUsage, R3DirectiveMetadataFacade} from '../../compiler/compiler_facade';\nimport {R3ComponentMetadataFacade, R3QueryMetadataFacade} from '../../compiler/compiler_facade_interface';\nimport {isForwardRef, resolveForwardRef} from '../../di/forward_ref';\nimport {getReflect, reflectDependencies} from '../../di/jit/util';\nimport {Type} from '../../interface/type';\nimport {Query} from '../../metadata/di';\nimport {Component, Directive, Input} from '../../metadata/directives';\nimport {componentNeedsResolution, maybeQueueResolutionOfComponentResources} from '../../metadata/resource_loading';\nimport {ViewEncapsulation} from '../../metadata/view';\nimport {flatten} from '../../util/array_utils';\nimport {EMPTY_ARRAY, EMPTY_OBJ} from '../../util/empty';\nimport {initNgDevMode} from '../../util/ng_dev_mode';\nimport {getComponentDef, getDirectiveDef, getNgModuleDef, getPipeDef} from '../definition';\nimport {NG_COMP_DEF, NG_DIR_DEF, NG_FACTORY_DEF} from '../fields';\nimport {ComponentDef, ComponentType, DirectiveDefList, PipeDefList} from '../interfaces/definition';\nimport {stringifyForError} from '../util/stringify_utils';\n\nimport {angularCoreEnv} from './environment';\nimport {getJitOptions} from './jit_options';\nimport {flushModuleScopingQueueAsMuchAsPossible, patchComponentDefWithScope, transitiveScopesFor} from './module';\nimport {isModuleWithProviders} from './util';\n\n/**\n * Keep track of the compilation depth to avoid reentrancy issues during JIT compilation. This\n * matters in the following scenario:\n *\n * Consider a component 'A' that extends component 'B', both declared in module 'M'. During\n * the compilation of 'A' the definition of 'B' is requested to capture the inheritance chain,\n * potentially triggering compilation of 'B'. If this nested compilation were to trigger\n * `flushModuleScopingQueueAsMuchAsPossible` it may happen that module 'M' is still pending in the\n * queue, resulting in 'A' and 'B' to be patched with the NgModule scope. As the compilation of\n * 'A' is still in progress, this would introduce a circular dependency on its compilation. To avoid\n * this issue, the module scope queue is only flushed for compilations at the depth 0, to ensure\n * all compilations have finished.\n */\nlet compilationDepth = 0;\n\n/**\n * Compile an Angular component according to its decorator metadata, and patch the resulting\n * component def (ɵcmp) onto the component type.\n *\n * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n * will enqueue resource resolution into a global queue and will fail to return the `ɵcmp`\n * until the global queue has been resolved with a call to `resolveComponentResources`.\n */\nexport function compileComponent(type: Type<any>, metadata: Component): void {\n  // Initialize ngDevMode. This must be the first statement in compileComponent.\n  // See the `initNgDevMode` docstring for more information.\n  (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n\n  let ngComponentDef: ComponentDef<unknown>|null = null;\n\n  // Metadata may have resources which need to be resolved.\n  maybeQueueResolutionOfComponentResources(type, metadata);\n\n  // Note that we're using the same function as `Directive`, because that's only subset of metadata\n  // that we need to create the ngFactoryDef. We're avoiding using the component metadata\n  // because we'd have to resolve the asynchronous templates.\n  addDirectiveFactoryDef(type, metadata);\n\n  Object.defineProperty(type, NG_COMP_DEF, {\n    get: () => {\n      if (ngComponentDef === null) {\n        const compiler =\n            getCompilerFacade({usage: JitCompilerUsage.Decorator, kind: 'component', type: type});\n\n        if (componentNeedsResolution(metadata)) {\n          const error = [`Component '${type.name}' is not resolved:`];\n          if (metadata.templateUrl) {\n            error.push(` - templateUrl: ${metadata.templateUrl}`);\n          }\n          if (metadata.styleUrls && metadata.styleUrls.length) {\n            error.push(` - styleUrls: ${JSON.stringify(metadata.styleUrls)}`);\n          }\n          error.push(`Did you run and wait for 'resolveComponentResources()'?`);\n          throw new Error(error.join('\\n'));\n        }\n\n        // This const was called `jitOptions` previously but had to be renamed to `options` because\n        // of a bug with Terser that caused optimized JIT builds to throw a `ReferenceError`.\n        // This bug was investigated in https://github.com/angular/angular-cli/issues/17264.\n        // We should not rename it back until https://github.com/terser/terser/issues/615 is fixed.\n        const options = getJitOptions();\n        let preserveWhitespaces = metadata.preserveWhitespaces;\n        if (preserveWhitespaces === undefined) {\n          if (options !== null && options.preserveWhitespaces !== undefined) {\n            preserveWhitespaces = options.preserveWhitespaces;\n          } else {\n            preserveWhitespaces = false;\n          }\n        }\n        let encapsulation = metadata.encapsulation;\n        if (encapsulation === undefined) {\n          if (options !== null && options.defaultEncapsulation !== undefined) {\n            encapsulation = options.defaultEncapsulation;\n          } else {\n            encapsulation = ViewEncapsulation.Emulated;\n          }\n        }\n\n        const templateUrl = metadata.templateUrl || `ng:///${type.name}/template.html`;\n        const meta: R3ComponentMetadataFacade = {\n          ...directiveMetadata(type, metadata),\n          typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl),\n          template: metadata.template || '',\n          preserveWhitespaces,\n          styles: metadata.styles || EMPTY_ARRAY,\n          animations: metadata.animations,\n          // JIT components are always compiled against an empty set of `declarations`. Instead, the\n          // `directiveDefs` and `pipeDefs` are updated at a later point:\n          //  * for NgModule-based components, they're set when the NgModule which declares the\n          //    component resolves in the module scoping queue\n          //  * for standalone components, they're set just below, after `compileComponent`.\n          declarations: [],\n          changeDetection: metadata.changeDetection,\n          encapsulation,\n          interpolation: metadata.interpolation,\n          viewProviders: metadata.viewProviders || null,\n          isStandalone: !!metadata.standalone,\n        };\n\n        compilationDepth++;\n        try {\n          if (meta.usesInheritance) {\n            addDirectiveDefToUndecoratedParents(type);\n          }\n          ngComponentDef =\n              compiler.compileComponent(angularCoreEnv, templateUrl, meta) as ComponentDef<unknown>;\n\n          if (metadata.standalone) {\n            // Patch the component definition for standalone components with `directiveDefs` and\n            // `pipeDefs` functions which lazily compute the directives/pipes available in the\n            // standalone component. Also set `dependencies` to the lazily resolved list of imports.\n            const imports: Type<any>[] = flatten(metadata.imports || EMPTY_ARRAY);\n            const {directiveDefs, pipeDefs} = getStandaloneDefFunctions(type, imports);\n            ngComponentDef.directiveDefs = directiveDefs;\n            ngComponentDef.pipeDefs = pipeDefs;\n            ngComponentDef.dependencies = () => imports.map(resolveForwardRef);\n          }\n        } finally {\n          // Ensure that the compilation depth is decremented even when the compilation failed.\n          compilationDepth--;\n        }\n\n        if (compilationDepth === 0) {\n          // When NgModule decorator executed, we enqueued the module definition such that\n          // it would only dequeue and add itself as module scope to all of its declarations,\n          // but only if  if all of its declarations had resolved. This call runs the check\n          // to see if any modules that are in the queue can be dequeued and add scope to\n          // their declarations.\n          flushModuleScopingQueueAsMuchAsPossible();\n        }\n\n        // If component compilation is async, then the @NgModule annotation which declares the\n        // component may execute and set an ngSelectorScope property on the component type. This\n        // allows the component to patch itself with directiveDefs from the module after it\n        // finishes compiling.\n        if (hasSelectorScope(type)) {\n          const scopes = transitiveScopesFor(type.ngSelectorScope);\n          patchComponentDefWithScope(ngComponentDef, scopes);\n        }\n\n        if (metadata.schemas) {\n          if (metadata.standalone) {\n            ngComponentDef.schemas = metadata.schemas;\n          } else {\n            throw new Error(`The 'schemas' was specified for the ${\n                stringifyForError(type)} but is only valid on a component that is standalone.`);\n          }\n        } else if (metadata.standalone) {\n          ngComponentDef.schemas = [];\n        }\n      }\n      return ngComponentDef;\n    },\n    // Make the property configurable in dev mode to allow overriding in tests\n    configurable: !!ngDevMode,\n  });\n}\n\nfunction getDependencyTypeForError(type: Type<any>) {\n  if (getComponentDef(type)) return 'component';\n  if (getDirectiveDef(type)) return 'directive';\n  if (getPipeDef(type)) return 'pipe';\n  return 'type';\n}\n\nfunction verifyStandaloneImport(depType: Type<unknown>, importingType: Type<unknown>) {\n  if (isForwardRef(depType)) {\n    depType = resolveForwardRef(depType);\n    if (!depType) {\n      throw new Error(`Expected forwardRef function, imported from \"${\n          stringifyForError(importingType)}\", to return a standalone entity or NgModule but got \"${\n          stringifyForError(depType) || depType}\".`);\n    }\n  }\n\n  if (getNgModuleDef(depType) == null) {\n    const def = getComponentDef(depType) || getDirectiveDef(depType) || getPipeDef(depType);\n    if (def != null) {\n      // if a component, directive or pipe is imported make sure that it is standalone\n      if (!def.standalone) {\n        throw new Error(`The \"${stringifyForError(depType)}\" ${\n            getDependencyTypeForError(depType)}, imported from \"${\n            stringifyForError(\n                importingType)}\", is not standalone. Did you forget to add the standalone: true flag?`);\n      }\n    } else {\n      // it can be either a module with provider or an unknown (not annotated) type\n      if (isModuleWithProviders(depType)) {\n        throw new Error(`A module with providers was imported from \"${\n            stringifyForError(\n                importingType)}\". Modules with providers are not supported in standalone components imports.`);\n      } else {\n        throw new Error(`The \"${stringifyForError(depType)}\" type, imported from \"${\n            stringifyForError(\n                importingType)}\", must be a standalone component / directive / pipe or an NgModule. Did you forget to add the required @Component / @Directive / @Pipe or @NgModule annotation?`);\n      }\n    }\n  }\n}\n\n/**\n * Build memoized `directiveDefs` and `pipeDefs` functions for the component definition of a\n * standalone component, which process `imports` and filter out directives and pipes. The use of\n * memoized functions here allows for the delayed resolution of any `forwardRef`s present in the\n * component's `imports`.\n */\nfunction getStandaloneDefFunctions(type: Type<any>, imports: Type<any>[]): {\n  directiveDefs: () => DirectiveDefList,\n  pipeDefs: () => PipeDefList,\n} {\n  let cachedDirectiveDefs: DirectiveDefList|null = null;\n  let cachedPipeDefs: PipeDefList|null = null;\n  const directiveDefs = () => {\n    if (cachedDirectiveDefs === null) {\n      // Standalone components are always able to self-reference, so include the component's own\n      // definition in its `directiveDefs`.\n      cachedDirectiveDefs = [getComponentDef(type)!];\n      const seen = new Set<Type<unknown>>();\n\n      for (const rawDep of imports) {\n        ngDevMode && verifyStandaloneImport(rawDep, type);\n\n        const dep = resolveForwardRef(rawDep);\n        if (seen.has(dep)) {\n          continue;\n        }\n        seen.add(dep);\n\n        if (!!getNgModuleDef(dep)) {\n          const scope = transitiveScopesFor(dep);\n          for (const dir of scope.exported.directives) {\n            const def = getComponentDef(dir) || getDirectiveDef(dir);\n            if (def && !seen.has(dir)) {\n              seen.add(dir);\n              cachedDirectiveDefs.push(def);\n            }\n          }\n        } else {\n          const def = getComponentDef(dep) || getDirectiveDef(dep);\n          if (def) {\n            cachedDirectiveDefs.push(def);\n          }\n        }\n      }\n    }\n    return cachedDirectiveDefs;\n  };\n\n  const pipeDefs = () => {\n    if (cachedPipeDefs === null) {\n      cachedPipeDefs = [];\n      const seen = new Set<Type<unknown>>();\n\n      for (const rawDep of imports) {\n        const dep = resolveForwardRef(rawDep);\n        if (seen.has(dep)) {\n          continue;\n        }\n        seen.add(dep);\n\n        if (!!getNgModuleDef(dep)) {\n          const scope = transitiveScopesFor(dep);\n          for (const pipe of scope.exported.pipes) {\n            const def = getPipeDef(pipe);\n            if (def && !seen.has(pipe)) {\n              seen.add(pipe);\n              cachedPipeDefs.push(def);\n            }\n          }\n        } else {\n          const def = getPipeDef(dep);\n          if (def) {\n            cachedPipeDefs.push(def);\n          }\n        }\n      }\n    }\n    return cachedPipeDefs;\n  };\n\n  return {\n    directiveDefs,\n    pipeDefs,\n  };\n}\n\nfunction hasSelectorScope<T>(component: Type<T>): component is Type<T>&\n    {ngSelectorScope: Type<any>} {\n  return (component as {ngSelectorScope?: any}).ngSelectorScope !== undefined;\n}\n\n/**\n * Compile an Angular directive according to its decorator metadata, and patch the resulting\n * directive def onto the component type.\n *\n * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n * will resolve when compilation completes and the directive becomes usable.\n */\nexport function compileDirective(type: Type<any>, directive: Directive|null): void {\n  let ngDirectiveDef: any = null;\n\n  addDirectiveFactoryDef(type, directive || {});\n\n  Object.defineProperty(type, NG_DIR_DEF, {\n    get: () => {\n      if (ngDirectiveDef === null) {\n        // `directive` can be null in the case of abstract directives as a base class\n        // that use `@Directive()` with no selector. In that case, pass empty object to the\n        // `directiveMetadata` function instead of null.\n        const meta = getDirectiveMetadata(type, directive || {});\n        const compiler =\n            getCompilerFacade({usage: JitCompilerUsage.Decorator, kind: 'directive', type});\n        ngDirectiveDef =\n            compiler.compileDirective(angularCoreEnv, meta.sourceMapUrl, meta.metadata);\n      }\n      return ngDirectiveDef;\n    },\n    // Make the property configurable in dev mode to allow overriding in tests\n    configurable: !!ngDevMode,\n  });\n}\n\nfunction getDirectiveMetadata(type: Type<any>, metadata: Directive) {\n  const name = type && type.name;\n  const sourceMapUrl = `ng:///${name}/ɵdir.js`;\n  const compiler = getCompilerFacade({usage: JitCompilerUsage.Decorator, kind: 'directive', type});\n  const facade = directiveMetadata(type as ComponentType<any>, metadata);\n  facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name, sourceMapUrl);\n  if (facade.usesInheritance) {\n    addDirectiveDefToUndecoratedParents(type);\n  }\n  return {metadata: facade, sourceMapUrl};\n}\n\nfunction addDirectiveFactoryDef(type: Type<any>, metadata: Directive|Component) {\n  let ngFactoryDef: any = null;\n\n  Object.defineProperty(type, NG_FACTORY_DEF, {\n    get: () => {\n      if (ngFactoryDef === null) {\n        const meta = getDirectiveMetadata(type, metadata);\n        const compiler =\n            getCompilerFacade({usage: JitCompilerUsage.Decorator, kind: 'directive', type});\n        ngFactoryDef = compiler.compileFactory(angularCoreEnv, `ng:///${type.name}/ɵfac.js`, {\n          name: meta.metadata.name,\n          type: meta.metadata.type,\n          typeArgumentCount: 0,\n          deps: reflectDependencies(type),\n          target: compiler.FactoryTarget.Directive\n        });\n      }\n      return ngFactoryDef;\n    },\n    // Make the property configurable in dev mode to allow overriding in tests\n    configurable: !!ngDevMode,\n  });\n}\n\nexport function extendsDirectlyFromObject(type: Type<any>): boolean {\n  return Object.getPrototypeOf(type.prototype) === Object.prototype;\n}\n\n/**\n * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n * `Component`).\n */\nexport function directiveMetadata(type: Type<any>, metadata: Directive): R3DirectiveMetadataFacade {\n  // Reflect inputs and outputs.\n  const reflect = getReflect();\n  const propMetadata = reflect.ownPropMetadata(type);\n\n  return {\n    name: type.name,\n    type: type,\n    selector: metadata.selector !== undefined ? metadata.selector : null,\n    host: metadata.host || EMPTY_OBJ,\n    propMetadata: propMetadata,\n    inputs: metadata.inputs || EMPTY_ARRAY,\n    outputs: metadata.outputs || EMPTY_ARRAY,\n    queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n    lifecycle: {usesOnChanges: reflect.hasLifecycleHook(type, 'ngOnChanges')},\n    typeSourceSpan: null!,\n    usesInheritance: !extendsDirectlyFromObject(type),\n    exportAs: extractExportAs(metadata.exportAs),\n    providers: metadata.providers || null,\n    viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery),\n    isStandalone: !!metadata.standalone,\n  };\n}\n\n/**\n * Adds a directive definition to all parent classes of a type that don't have an Angular decorator.\n */\nfunction addDirectiveDefToUndecoratedParents(type: Type<any>) {\n  const objPrototype = Object.prototype;\n  let parent = Object.getPrototypeOf(type.prototype).constructor;\n\n  // Go up the prototype until we hit `Object`.\n  while (parent && parent !== objPrototype) {\n    // Since inheritance works if the class was annotated already, we only need to add\n    // the def if there are no annotations and the def hasn't been created already.\n    if (!getDirectiveDef(parent) && !getComponentDef(parent) &&\n        shouldAddAbstractDirective(parent)) {\n      compileDirective(parent, null);\n    }\n    parent = Object.getPrototypeOf(parent);\n  }\n}\n\nfunction convertToR3QueryPredicate(selector: any): any|string[] {\n  return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n}\n\nexport function convertToR3QueryMetadata(propertyName: string, ann: Query): R3QueryMetadataFacade {\n  return {\n    propertyName: propertyName,\n    predicate: convertToR3QueryPredicate(ann.selector),\n    descendants: ann.descendants,\n    first: ann.first,\n    read: ann.read ? ann.read : null,\n    static: !!ann.static,\n    emitDistinctChangesOnly: !!ann.emitDistinctChangesOnly,\n  };\n}\nfunction extractQueriesMetadata(\n    type: Type<any>, propMetadata: {[key: string]: any[]},\n    isQueryAnn: (ann: any) => ann is Query): R3QueryMetadataFacade[] {\n  const queriesMeta: R3QueryMetadataFacade[] = [];\n  for (const field in propMetadata) {\n    if (propMetadata.hasOwnProperty(field)) {\n      const annotations = propMetadata[field];\n      annotations.forEach(ann => {\n        if (isQueryAnn(ann)) {\n          if (!ann.selector) {\n            throw new Error(\n                `Can't construct a query for the property \"${field}\" of ` +\n                `\"${stringifyForError(type)}\" since the query selector wasn't defined.`);\n          }\n          if (annotations.some(isInputAnnotation)) {\n            throw new Error(`Cannot combine @Input decorators with query decorators`);\n          }\n          queriesMeta.push(convertToR3QueryMetadata(field, ann));\n        }\n      });\n    }\n  }\n  return queriesMeta;\n}\n\nfunction extractExportAs(exportAs: string|undefined): string[]|null {\n  return exportAs === undefined ? null : splitByComma(exportAs);\n}\n\nfunction isContentQuery(value: any): value is Query {\n  const name = value.ngMetadataName;\n  return name === 'ContentChild' || name === 'ContentChildren';\n}\n\nfunction isViewQuery(value: any): value is Query {\n  const name = value.ngMetadataName;\n  return name === 'ViewChild' || name === 'ViewChildren';\n}\n\nfunction isInputAnnotation(value: any): value is Input {\n  return value.ngMetadataName === 'Input';\n}\n\nfunction splitByComma(value: string): string[] {\n  return value.split(',').map(piece => piece.trim());\n}\n\nconst LIFECYCLE_HOOKS = [\n  'ngOnChanges', 'ngOnInit', 'ngOnDestroy', 'ngDoCheck', 'ngAfterViewInit', 'ngAfterViewChecked',\n  'ngAfterContentInit', 'ngAfterContentChecked'\n];\n\nfunction shouldAddAbstractDirective(type: Type<any>): boolean {\n  const reflect = getReflect();\n\n  if (LIFECYCLE_HOOKS.some(hookName => reflect.hasLifecycleHook(type, hookName))) {\n    return true;\n  }\n\n  const propMetadata = reflect.propMetadata(type);\n\n  for (const field in propMetadata) {\n    const annotations = propMetadata[field];\n\n    for (let i = 0; i < annotations.length; i++) {\n      const current = annotations[i];\n      const metadataName = current.ngMetadataName;\n\n      if (isInputAnnotation(current) || isContentQuery(current) || isViewQuery(current) ||\n          metadataName === 'Output' || metadataName === 'HostBinding' ||\n          metadataName === 'HostListener') {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getCompilerFacade, JitCompilerUsage, R3PipeMetadataFacade} from '../../compiler/compiler_facade';\nimport {reflectDependencies} from '../../di/jit/util';\nimport {Type} from '../../interface/type';\nimport {Pipe} from '../../metadata/directives';\nimport {NG_FACTORY_DEF, NG_PIPE_DEF} from '../fields';\n\nimport {angularCoreEnv} from './environment';\n\nexport function compilePipe(type: Type<any>, meta: Pipe): void {\n  let ngPipeDef: any = null;\n  let ngFactoryDef: any = null;\n\n  Object.defineProperty(type, NG_FACTORY_DEF, {\n    get: () => {\n      if (ngFactoryDef === null) {\n        const metadata = getPipeMetadata(type, meta);\n        const compiler = getCompilerFacade(\n            {usage: JitCompilerUsage.Decorator, kind: 'pipe', type: metadata.type});\n        ngFactoryDef = compiler.compileFactory(angularCoreEnv, `ng:///${metadata.name}/ɵfac.js`, {\n          name: metadata.name,\n          type: metadata.type,\n          typeArgumentCount: 0,\n          deps: reflectDependencies(type),\n          target: compiler.FactoryTarget.Pipe\n        });\n      }\n      return ngFactoryDef;\n    },\n    // Make the property configurable in dev mode to allow overriding in tests\n    configurable: !!ngDevMode,\n  });\n\n  Object.defineProperty(type, NG_PIPE_DEF, {\n    get: () => {\n      if (ngPipeDef === null) {\n        const metadata = getPipeMetadata(type, meta);\n        const compiler = getCompilerFacade(\n            {usage: JitCompilerUsage.Decorator, kind: 'pipe', type: metadata.type});\n        ngPipeDef =\n            compiler.compilePipe(angularCoreEnv, `ng:///${metadata.name}/ɵpipe.js`, metadata);\n      }\n      return ngPipeDef;\n    },\n    // Make the property configurable in dev mode to allow overriding in tests\n    configurable: !!ngDevMode,\n  });\n}\n\nfunction getPipeMetadata(type: Type<any>, meta: Pipe): R3PipeMetadataFacade {\n  return {\n    type: type,\n    name: type.name,\n    pipeName: meta.name,\n    pure: meta.pure !== undefined ? meta.pure : true,\n    isStandalone: !!meta.standalone,\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy} from '../change_detection/constants';\nimport {Provider} from '../di/interface/provider';\nimport {Type} from '../interface/type';\nimport {compileComponent, compileDirective} from '../render3/jit/directive';\nimport {compilePipe} from '../render3/jit/pipe';\nimport {makeDecorator, makePropDecorator, TypeDecorator} from '../util/decorators';\n\nimport {SchemaMetadata} from './schema';\nimport {ViewEncapsulation} from './view';\n\n\n\n/**\n * Type of the Directive decorator / constructor function.\n * @publicApi\n */\nexport interface DirectiveDecorator {\n  /**\n   * Decorator that marks a class as an Angular directive.\n   * You can define your own directives to attach custom behavior to elements in the DOM.\n   *\n   * The options provide configuration metadata that determines\n   * how the directive should be processed, instantiated and used at\n   * runtime.\n   *\n   * Directive classes, like component classes, can implement\n   * [life-cycle hooks](guide/lifecycle-hooks) to influence their configuration and behavior.\n   *\n   *\n   * @usageNotes\n   * To define a directive, mark the class with the decorator and provide metadata.\n   *\n   * ```ts\n   * import {Directive} from '@angular/core';\n   *\n   * @Directive({\n   *   selector: 'my-directive',\n   * })\n   * export class MyDirective {\n   * ...\n   * }\n   * ```\n   *\n   * ### Declaring directives\n   *\n   * In order to make a directive available to other components in your application, you should do\n   * one of the following:\n   *  - either mark the directive as [standalone](guide/standalone-components),\n   *  - or declare it in an NgModule by adding it to the `declarations` and `exports` fields.\n   *\n   * ** Marking a directive as standalone **\n   *\n   * You can add the `standalone: true` flag to the Directive decorator metadata to declare it as\n   * [standalone](guide/standalone-components):\n   *\n   * ```ts\n   * @Directive({\n   *   standalone: true,\n   *   selector: 'my-directive',\n   * })\n   * class MyDirective {}\n   * ```\n   *\n   * When marking a directive as standalone, please make sure that the directive is not already\n   * declared in an NgModule.\n   *\n   *\n   * ** Declaring a directive in an NgModule **\n   *\n   * Another approach is to declare a directive in an NgModule:\n   *\n   * ```ts\n   * @Directive({\n   *   selector: 'my-directive',\n   * })\n   * class MyDirective {}\n   *\n   * @NgModule({\n   *   declarations: [MyDirective, SomeComponent],\n   *   exports: [MyDirective], // making it available outside of this module\n   * })\n   * class SomeNgModule {}\n   * ```\n   *\n   * When declaring a directive in an NgModule, please make sure that:\n   *  - the directive is declared in exactly one NgModule.\n   *  - the directive is not standalone.\n   *  - you do not re-declare a directive imported from another module.\n   *  - the directive is included into the `exports` field as well if you want this directive to be\n   *    accessible for components outside of the NgModule.\n   *\n   *\n   * @Annotation\n   */\n  (obj?: Directive): TypeDecorator;\n\n  /**\n   * See the `Directive` decorator.\n   */\n  new(obj?: Directive): Directive;\n}\n\n/**\n * Directive decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport interface Directive {\n  /**\n   * The CSS selector that identifies this directive in a template\n   * and triggers instantiation of the directive.\n   *\n   * Declare as one of the following:\n   *\n   * - `element-name`: Select by element name.\n   * - `.class`: Select by class name.\n   * - `[attribute]`: Select by attribute name.\n   * - `[attribute=value]`: Select by attribute name and value.\n   * - `:not(sub_selector)`: Select only if the element does not match the `sub_selector`.\n   * - `selector1, selector2`: Select if either `selector1` or `selector2` matches.\n   *\n   * Angular only allows directives to apply on CSS selectors that do not cross\n   * element boundaries.\n   *\n   * For the following template HTML, a directive with an `input[type=text]` selector,\n   * would be instantiated only on the `<input type=\"text\">` element.\n   *\n   * ```html\n   * <form>\n   *   <input type=\"text\">\n   *   <input type=\"radio\">\n   * <form>\n   * ```\n   *\n   */\n  selector?: string;\n\n  /**\n   * Enumerates the set of data-bound input properties for a directive\n   *\n   * Angular automatically updates input properties during change detection.\n   * The `inputs` property defines a set of `directiveProperty` to `bindingProperty`\n   * configuration:\n   *\n   * - `directiveProperty` specifies the component property where the value is written.\n   * - `bindingProperty` specifies the DOM property where the value is read from.\n   *\n   * When `bindingProperty` is not provided, it is assumed to be equal to `directiveProperty`.\n   *\n   * @usageNotes\n   *\n   * The following example creates a component with two data-bound properties.\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'bank-account',\n   *   inputs: ['bankName', 'id: account-id'],\n   *   template: `\n   *     Bank Name: {{bankName}}\n   *     Account Id: {{id}}\n   *   `\n   * })\n   * class BankAccount {\n   *   bankName: string;\n   *   id: string;\n   * }\n   * ```\n   *\n   */\n  inputs?: string[];\n\n  /**\n   * Enumerates the set of event-bound output properties.\n   *\n   * When an output property emits an event, an event handler attached to that event\n   * in the template is invoked.\n   *\n   * The `outputs` property defines a set of `directiveProperty` to `bindingProperty`\n   * configuration:\n   *\n   * - `directiveProperty` specifies the component property that emits events.\n   * - `bindingProperty` specifies the DOM property the event handler is attached to.\n   *\n   * @usageNotes\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'child-dir',\n   *   outputs: [ 'bankNameChange' ]\n   *   template: `<input (input)=\"bankNameChange.emit($event.target.value)\" />`\n   * })\n   * class ChildDir {\n   *  bankNameChange: EventEmitter<string> = new EventEmitter<string>();\n   * }\n   *\n   * @Component({\n   *   selector: 'main',\n   *   template: `\n   *     {{ bankName }} <child-dir (bankNameChange)=\"onBankNameChange($event)\"></child-dir>\n   *   `\n   * })\n   * class MainComponent {\n   *  bankName: string;\n   *\n   *   onBankNameChange(bankName: string) {\n   *     this.bankName = bankName;\n   *   }\n   * }\n   * ```\n   *\n   */\n  outputs?: string[];\n\n  /**\n   * Configures the [injector](guide/glossary#injector) of this\n   * directive or component with a [token](guide/glossary#di-token)\n   * that maps to a [provider](guide/glossary#provider) of a dependency.\n   */\n  providers?: Provider[];\n\n  /**\n   * Defines the name that can be used in the template to assign this directive to a variable.\n   *\n   * @usageNotes\n   *\n   * ```ts\n   * @Directive({\n   *   selector: 'child-dir',\n   *   exportAs: 'child'\n   * })\n   * class ChildDir {\n   * }\n   *\n   * @Component({\n   *   selector: 'main',\n   *   template: `<child-dir #c=\"child\"></child-dir>`\n   * })\n   * class MainComponent {\n   * }\n   * ```\n   *\n   */\n  exportAs?: string;\n\n  /**\n   * Configures the queries that will be injected into the directive.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * @usageNotes\n   *\n   * The following example shows how queries are defined\n   * and when their results are available in lifecycle hooks:\n   *\n   * ```ts\n   * @Component({\n   *   selector: 'someDir',\n   *   queries: {\n   *     contentChildren: new ContentChildren(ChildDirective),\n   *     viewChildren: new ViewChildren(ChildDirective)\n   *   },\n   *   template: '<child-directive></child-directive>'\n   * })\n   * class SomeDir {\n   *   contentChildren: QueryList<ChildDirective>,\n   *   viewChildren: QueryList<ChildDirective>\n   *\n   *   ngAfterContentInit() {\n   *     // contentChildren is set\n   *   }\n   *\n   *   ngAfterViewInit() {\n   *     // viewChildren is set\n   *   }\n   * }\n   * ```\n   *\n   * @Annotation\n   */\n  queries?: {[key: string]: any};\n\n  /**\n   * Maps class properties to host element bindings for properties,\n   * attributes, and events, using a set of key-value pairs.\n   *\n   * Angular automatically checks host property bindings during change detection.\n   * If a binding changes, Angular updates the directive's host element.\n   *\n   * When the key is a property of the host element, the property value is\n   * the propagated to the specified DOM property.\n   *\n   * When the key is a static attribute in the DOM, the attribute value\n   * is propagated to the specified property in the host element.\n   *\n   * For event handling:\n   * - The key is the DOM event that the directive listens to.\n   * To listen to global events, add the target to the event name.\n   * The target can be `window`, `document` or `body`.\n   * - The value is the statement to execute when the event occurs. If the\n   * statement evaluates to `false`, then `preventDefault` is applied on the DOM\n   * event. A handler method can refer to the `$event` local variable.\n   *\n   */\n  host?: {[key: string]: string};\n\n  /**\n   * When present, this directive/component is ignored by the AOT compiler.\n   * It remains in distributed code, and the JIT compiler attempts to compile it\n   * at run time, in the browser.\n   * To ensure the correct behavior, the app must import `@angular/compiler`.\n   */\n  jit?: true;\n\n  /**\n   * Angular directives marked as `standalone` do not need to be declared in an NgModule. Such\n   * directives don't depend on any \"intermediate context\" of an NgModule (ex. configured\n   * providers).\n   *\n   * More information about standalone components, directives and pipes can be found in [this\n   * guide](guide/standalone-components).\n   *\n   * @developerPreview\n   */\n  standalone?: boolean;\n}\n\n/**\n * Type of the Directive metadata.\n *\n * @publicApi\n */\nexport const Directive: DirectiveDecorator = makeDecorator(\n    'Directive', (dir: Directive = {}) => dir, undefined, undefined,\n    (type: Type<any>, meta: Directive) => compileDirective(type, meta));\n\n/**\n * Component decorator interface\n *\n * @publicApi\n */\nexport interface ComponentDecorator {\n  /**\n   * Decorator that marks a class as an Angular component and provides configuration\n   * metadata that determines how the component should be processed,\n   * instantiated, and used at runtime.\n   *\n   * Components are the most basic UI building block of an Angular app.\n   * An Angular app contains a tree of Angular components.\n   *\n   * Angular components are a subset of directives, always associated with a template.\n   * Unlike other directives, only one component can be instantiated for a given element in a\n   * template.\n   *\n   * A component must belong to an NgModule in order for it to be available\n   * to another component or application. To make it a member of an NgModule,\n   * list it in the `declarations` field of the `NgModule` metadata.\n   *\n   * Note that, in addition to these options for configuring a directive,\n   * you can control a component's runtime behavior by implementing\n   * life-cycle hooks. For more information, see the\n   * [Lifecycle Hooks](guide/lifecycle-hooks) guide.\n   *\n   * @usageNotes\n   *\n   * ### Setting component inputs\n   *\n   * The following example creates a component with two data-bound properties,\n   * specified by the `inputs` value.\n   *\n   * <code-example path=\"core/ts/metadata/directives.ts\" region=\"component-input\"></code-example>\n   *\n   *\n   * ### Setting component outputs\n   *\n   * The following example shows two event emitters that emit on an interval. One\n   * emits an output every second, while the other emits every five seconds.\n   *\n   * {@example core/ts/metadata/directives.ts region='component-output-interval'}\n   *\n   * ### Injecting a class with a view provider\n   *\n   * The following simple example injects a class into a component\n   * using the view provider specified in component metadata:\n   *\n   * ```ts\n   * class Greeter {\n   *    greet(name:string) {\n   *      return 'Hello ' + name + '!';\n   *    }\n   * }\n   *\n   * @Directive({\n   *   selector: 'needs-greeter'\n   * })\n   * class NeedsGreeter {\n   *   greeter:Greeter;\n   *\n   *   constructor(greeter:Greeter) {\n   *     this.greeter = greeter;\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'greet',\n   *   viewProviders: [\n   *     Greeter\n   *   ],\n   *   template: `<needs-greeter></needs-greeter>`\n   * })\n   * class HelloWorld {\n   * }\n   *\n   * ```\n   *\n   * ### Preserving whitespace\n   *\n   * Removing whitespace can greatly reduce AOT-generated code size and speed up view creation.\n   * As of Angular 6, the default for `preserveWhitespaces` is false (whitespace is removed).\n   * To change the default setting for all components in your application, set\n   * the `preserveWhitespaces` option of the AOT compiler.\n   *\n   * By default, the AOT compiler removes whitespace characters as follows:\n   * * Trims all whitespaces at the beginning and the end of a template.\n   * * Removes whitespace-only text nodes. For example,\n   *\n   * ```html\n   * <button>Action 1</button>  <button>Action 2</button>\n   * ```\n   *\n   * becomes:\n   *\n   * ```html\n   * <button>Action 1</button><button>Action 2</button>\n   * ```\n   *\n   * * Replaces a series of whitespace characters in text nodes with a single space.\n   * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n   * * Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n   * where whitespace characters are significant.\n   *\n   * Note that these transformations can influence DOM nodes layout, although impact\n   * should be minimal.\n   *\n   * You can override the default behavior to preserve whitespace characters\n   * in certain fragments of a template. For example, you can exclude an entire\n   * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n   *\n   * ```html\n   * <div ngPreserveWhitespaces>\n   *     whitespaces are preserved here\n   *     <span>    and here </span>\n   * </div>\n   * ```\n   *\n   * You can force a single space to be preserved in a text node by using `&ngsp;`,\n   * which is replaced with a space character by Angular's template\n   * compiler:\n   *\n   * ```html\n   * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n   * <!-- compiled to be equivalent to:\n   *  <a>Spaces</a> <a>between</a> <a>links.</a>  -->\n   * ```\n   *\n   * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n   * the `preserveWhitespaces` option is set to `false`.\n   *\n   * ```html\n   * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n   * <!-- compiled to be equivalent to:\n   *  <a>before</a> <a>after</a> -->\n   * ```\n   *\n   * To preserve sequences of whitespace characters, use the\n   * `ngPreserveWhitespaces` attribute.\n   *\n   * @Annotation\n   */\n  (obj: Component): TypeDecorator;\n  /**\n   * See the `Component` decorator.\n   */\n  new(obj: Component): Component;\n}\n\n/**\n * Supplies configuration metadata for an Angular component.\n *\n * @publicApi\n */\nexport interface Component extends Directive {\n  /**\n   * The change-detection strategy to use for this component.\n   *\n   * When a component is instantiated, Angular creates a change detector,\n   * which is responsible for propagating the component's bindings.\n   * The strategy is one of:\n   * - `ChangeDetectionStrategy#OnPush` sets the strategy to `CheckOnce` (on demand).\n   * - `ChangeDetectionStrategy#Default` sets the strategy to `CheckAlways`.\n   */\n  changeDetection?: ChangeDetectionStrategy;\n\n  /**\n   * Defines the set of injectable objects that are visible to its view DOM children.\n   * See [example](#injecting-a-class-with-a-view-provider).\n   *\n   */\n  viewProviders?: Provider[];\n\n  /**\n   * The module ID of the module that contains the component.\n   * The component must be able to resolve relative URLs for templates and styles.\n   * SystemJS exposes the `__moduleName` variable within each module.\n   * In CommonJS, this can  be set to `module.id`.\n   *\n   */\n  moduleId?: string;\n\n  /**\n   * The relative path or absolute URL of a template file for an Angular component.\n   * If provided, do not supply an inline template using `template`.\n   *\n   */\n  templateUrl?: string;\n\n  /**\n   * An inline template for an Angular component. If provided,\n   * do not supply a template file using `templateUrl`.\n   *\n   */\n  template?: string;\n\n  /**\n   * One or more relative paths or absolute URLs for files containing CSS stylesheets to use\n   * in this component.\n   */\n  styleUrls?: string[];\n\n  /**\n   * One or more inline CSS stylesheets to use\n   * in this component.\n   */\n  styles?: string[];\n\n  /**\n   * One or more animation `trigger()` calls, containing\n   * [`state()`](api/animations/state) and `transition()` definitions.\n   * See the [Animations guide](/guide/animations) and animations API documentation.\n   *\n   */\n  animations?: any[];\n\n  /**\n   * An encapsulation policy for the component's styling.\n   * Possible values:\n   * - `ViewEncapsulation.Emulated`: Apply modified component styles in order to emulate\n   *                                 a native Shadow DOM CSS encapsulation behavior.\n   * - `ViewEncapsulation.None`: Apply component styles globally without any sort of encapsulation.\n   * - `ViewEncapsulation.ShadowDom`: Use the browser's native Shadow DOM API to encapsulate styles.\n   *\n   * If not supplied, the value is taken from the `CompilerOptions`\n   * which defaults to `ViewEncapsulation.Emulated`.\n   *\n   * If the policy is `ViewEncapsulation.Emulated` and the component has no\n   * {@link Component#styles styles} nor {@link Component#styleUrls styleUrls},\n   * the policy is automatically switched to `ViewEncapsulation.None`.\n   */\n  encapsulation?: ViewEncapsulation;\n\n  /**\n   * Overrides the default interpolation start and end delimiters (`{{` and `}}`).\n   */\n  interpolation?: [string, string];\n\n  /**\n   * A set of components that should be compiled along with\n   * this component. For each component listed here,\n   * Angular creates a {@link ComponentFactory} and stores it in the\n   * {@link ComponentFactoryResolver}.\n   * @deprecated Since 9.0.0. With Ivy, this property is no longer necessary.\n   */\n  entryComponents?: Array<Type<any>|any[]>;\n\n  /**\n   * True to preserve or false to remove potentially superfluous whitespace characters\n   * from the compiled template. Whitespace characters are those matching the `\\s`\n   * character class in JavaScript regular expressions. Default is false, unless\n   * overridden in compiler options.\n   */\n  preserveWhitespaces?: boolean;\n\n  /**\n   * Angular components marked as `standalone` do not need to be declared in an NgModule. Such\n   * components directly manage their own template dependencies (components, directives and pipes\n   * used in a template) via the imports property.\n   *\n   * More information about standalone components, directives and pipes can be found in [this\n   * guide](guide/standalone-components).\n   *\n   * @developerPreview\n   */\n  standalone?: boolean;\n\n  /**\n   * The imports property specifies the standalone component's template dependencies — those\n   * directives, components, and pipes that can be used within its template. Standalone components\n   * can import other standalone components, directives and pipes as well as existing NgModules.\n   *\n   * This property is only available for standalone components - specifying it for components\n   * declared in an NgModule generates a compilation error.\n   *\n   * More information about standalone components, directives and pipes can be found in [this\n   * guide](guide/standalone-components).\n   *\n   * @developerPreview\n   */\n  imports?: (Type<any>|any[])[];\n\n  /**\n   * The set of schemas that declare elements to be allowed in a standalone component. Elements and\n   * properties that are neither Angular components nor directives must be declared in a schema.\n   *\n   * This property is only available for standalone components - specifying it for components\n   * declared in an NgModule generates a compilation error.\n   *\n   * More information about standalone components, directives and pipes can be found in [this\n   * guide](guide/standalone-components).\n   */\n  schemas?: SchemaMetadata[];\n}\n\n/**\n * Component decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Component: ComponentDecorator = makeDecorator(\n    'Component', (c: Component = {}) => ({changeDetection: ChangeDetectionStrategy.Default, ...c}),\n    Directive, undefined, (type: Type<any>, meta: Component) => compileComponent(type, meta));\n\n/**\n * Type of the Pipe decorator / constructor function.\n *\n * @publicApi\n */\nexport interface PipeDecorator {\n  /**\n   *\n   * Decorator that marks a class as pipe and supplies configuration metadata.\n   *\n   * A pipe class must implement the `PipeTransform` interface.\n   * For example, if the name is \"myPipe\", use a template binding expression\n   * such as the following:\n   *\n   * ```\n   * {{ exp | myPipe }}\n   * ```\n   *\n   * The result of the expression is passed to the pipe's `transform()` method.\n   *\n   * A pipe must belong to an NgModule in order for it to be available\n   * to a template. To make it a member of an NgModule,\n   * list it in the `declarations` field of the `NgModule` metadata.\n   *\n   * @see [Style Guide: Pipe Names](guide/styleguide#02-09)\n   *\n   */\n  (obj: Pipe): TypeDecorator;\n\n  /**\n   * See the `Pipe` decorator.\n   */\n  new(obj: Pipe): Pipe;\n}\n\n/**\n * Type of the Pipe metadata.\n *\n * @publicApi\n */\nexport interface Pipe {\n  /**\n   * The pipe name to use in template bindings.\n   * Typically uses [lowerCamelCase](guide/glossary#case-types)\n   * because the name cannot contain hyphens.\n   */\n  name: string;\n\n  /**\n   * When true, the pipe is pure, meaning that the\n   * `transform()` method is invoked only when its input arguments\n   * change. Pipes are pure by default.\n   *\n   * If the pipe has internal state (that is, the result\n   * depends on state other than its arguments), set `pure` to false.\n   * In this case, the pipe is invoked on each change-detection cycle,\n   * even if the arguments have not changed.\n   */\n  pure?: boolean;\n\n  /**\n   * Angular pipes marked as `standalone` do not need to be declared in an NgModule. Such\n   * pipes don't depend on any \"intermediate context\" of an NgModule (ex. configured providers).\n   *\n   * More information about standalone components, directives and pipes can be found in [this\n   * guide](guide/standalone-components).\n   */\n  standalone?: boolean;\n}\n\n/**\n * @Annotation\n * @publicApi\n */\nexport const Pipe: PipeDecorator = makeDecorator(\n    'Pipe', (p: Pipe) => ({pure: true, ...p}), undefined, undefined,\n    (type: Type<any>, meta: Pipe) => compilePipe(type, meta));\n\n\n/**\n * @publicApi\n */\nexport interface InputDecorator {\n  /**\n   * Decorator that marks a class field as an input property and supplies configuration metadata.\n   * The input property is bound to a DOM property in the template. During change detection,\n   * Angular automatically updates the data property with the DOM property's value.\n   *\n   * @usageNotes\n   *\n   * You can supply an optional name to use in templates when the\n   * component is instantiated, that maps to the\n   * name of the bound property. By default, the original\n   * name of the bound property is used for input binding.\n   *\n   * The following example creates a component with two input properties,\n   * one of which is given a special binding name.\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'bank-account',\n   *   template: `\n   *     Bank Name: {{bankName}}\n   *     Account Id: {{id}}\n   *   `\n   * })\n   * class BankAccount {\n   *   // This property is bound using its original name.\n   *   @Input() bankName: string;\n   *   // this property value is bound to a different property name\n   *   // when this component is instantiated in a template.\n   *   @Input('account-id') id: string;\n   *\n   *   // this property is not bound, and is not automatically updated by Angular\n   *   normalizedBankName: string;\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `\n   *     <bank-account bankName=\"RBC\" account-id=\"4747\"></bank-account>\n   *   `\n   * })\n   * class App {}\n   * ```\n   *\n   * @see [Input and Output properties](guide/inputs-outputs)\n   */\n  (bindingPropertyName?: string): any;\n  new(bindingPropertyName?: string): any;\n}\n\n/**\n * Type of metadata for an `Input` property.\n *\n * @publicApi\n */\nexport interface Input {\n  /**\n   * The name of the DOM property to which the input property is bound.\n   */\n  bindingPropertyName?: string;\n}\n\n/**\n * @Annotation\n * @publicApi\n */\nexport const Input: InputDecorator =\n    makePropDecorator('Input', (bindingPropertyName?: string) => ({bindingPropertyName}));\n\n/**\n * Type of the Output decorator / constructor function.\n *\n * @publicApi\n */\nexport interface OutputDecorator {\n  /**\n   * Decorator that marks a class field as an output property and supplies configuration metadata.\n   * The DOM property bound to the output property is automatically updated during change detection.\n   *\n   * @usageNotes\n   *\n   * You can supply an optional name to use in templates when the\n   * component is instantiated, that maps to the\n   * name of the bound property. By default, the original\n   * name of the bound property is used for output binding.\n   *\n   * See `Input` decorator for an example of providing a binding name.\n   *\n   * @see [Input and Output properties](guide/inputs-outputs)\n   *\n   */\n  (bindingPropertyName?: string): any;\n  new(bindingPropertyName?: string): any;\n}\n\n/**\n * Type of the Output metadata.\n *\n * @publicApi\n */\nexport interface Output {\n  /**\n   * The name of the DOM property to which the output property is bound.\n   */\n  bindingPropertyName?: string;\n}\n\n/**\n * @Annotation\n * @publicApi\n */\nexport const Output: OutputDecorator =\n    makePropDecorator('Output', (bindingPropertyName?: string) => ({bindingPropertyName}));\n\n\n\n/**\n * Type of the HostBinding decorator / constructor function.\n *\n * @publicApi\n */\nexport interface HostBindingDecorator {\n  /**\n   * Decorator that marks a DOM property as a host-binding property and supplies configuration\n   * metadata.\n   * Angular automatically checks host property bindings during change detection, and\n   * if a binding changes it updates the host element of the directive.\n   *\n   * @usageNotes\n   *\n   * The following example creates a directive that sets the `valid` and `invalid`\n   * properties on the DOM element that has an `ngModel` directive on it.\n   *\n   * ```typescript\n   * @Directive({selector: '[ngModel]'})\n   * class NgModelStatus {\n   *   constructor(public control: NgModel) {}\n   *   @HostBinding('class.valid') get valid() { return this.control.valid; }\n   *   @HostBinding('class.invalid') get invalid() { return this.control.invalid; }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `<input [(ngModel)]=\"prop\">`,\n   * })\n   * class App {\n   *   prop;\n   * }\n   * ```\n   *\n   */\n  (hostPropertyName?: string): any;\n  new(hostPropertyName?: string): any;\n}\n\n/**\n * Type of the HostBinding metadata.\n *\n * @publicApi\n */\nexport interface HostBinding {\n  /**\n   * The DOM property that is bound to a data property.\n   */\n  hostPropertyName?: string;\n}\n\n/**\n * @Annotation\n * @publicApi\n */\nexport const HostBinding: HostBindingDecorator =\n    makePropDecorator('HostBinding', (hostPropertyName?: string) => ({hostPropertyName}));\n\n\n/**\n * Type of the HostListener decorator / constructor function.\n *\n * @publicApi\n */\nexport interface HostListenerDecorator {\n  /**\n   * Decorator that declares a DOM event to listen for,\n   * and provides a handler method to run when that event occurs.\n   *\n   * Angular invokes the supplied handler method when the host element emits the specified event,\n   * and updates the bound element with the result.\n   *\n   * If the handler method returns false, applies `preventDefault` on the bound element.\n   */\n  (eventName: string, args?: string[]): any;\n  new(eventName: string, args?: string[]): any;\n}\n\n/**\n * Type of the HostListener metadata.\n *\n * @publicApi\n */\nexport interface HostListener {\n  /**\n   * The DOM event to listen for.\n   */\n  eventName?: string;\n  /**\n   * A set of arguments to pass to the handler method when the event occurs.\n   */\n  args?: string[];\n}\n\n/**\n * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n * Angular invokes the supplied handler method when the host element emits the specified event,\n * and updates the bound element with the result.\n *\n * If the handler method returns false, applies `preventDefault` on the bound element.\n *\n * @usageNotes\n *\n * The following example declares a directive\n * that attaches a click listener to a button and counts clicks.\n *\n * ```ts\n * @Directive({selector: 'button[counting]'})\n * class CountClicks {\n *   numberOfClicks = 0;\n *\n *   @HostListener('click', ['$event.target'])\n *   onClick(btn) {\n *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n *   }\n * }\n *\n * @Component({\n *   selector: 'app',\n *   template: '<button counting>Increment</button>',\n * })\n * class App {}\n *\n * ```\n *\n * The following example registers another DOM event handler that listens for `Enter` key-press\n * events on the global `window`.\n * ``` ts\n * import { HostListener, Component } from \"@angular/core\";\n *\n * @Component({\n *   selector: 'app',\n *   template: `<h1>Hello, you have pressed enter {{counter}} number of times!</h1> Press enter key\n * to increment the counter.\n *   <button (click)=\"resetCounter()\">Reset Counter</button>`\n * })\n * class AppComponent {\n *   counter = 0;\n *   @HostListener('window:keydown.enter', ['$event'])\n *   handleKeyDown(event: KeyboardEvent) {\n *     this.counter++;\n *   }\n *   resetCounter() {\n *     this.counter = 0;\n *   }\n * }\n * ```\n * The list of valid key names for `keydown` and `keyup` events\n * can be found here:\n * https://www.w3.org/TR/DOM-Level-3-Events-key/#named-key-attribute-values\n *\n * Note that keys can also be combined, e.g. `@HostListener('keydown.shift.a')`.\n *\n * The global target names that can be used to prefix an event name are\n * `document:`, `window:` and `body:`.\n *\n * @Annotation\n * @publicApi\n */\nexport const HostListener: HostListenerDecorator =\n    makePropDecorator('HostListener', (eventName?: string, args?: string[]) => ({eventName, args}));\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ModuleWithProviders, Provider} from '../di/interface/provider';\nimport {Type} from '../interface/type';\nimport {SchemaMetadata} from '../metadata/schema';\nimport {compileNgModule} from '../render3/jit/module';\nimport {makeDecorator, TypeDecorator} from '../util/decorators';\n\n\n/**\n * Type of the NgModule decorator / constructor function.\n *\n * @publicApi\n */\nexport interface NgModuleDecorator {\n  /**\n   * Decorator that marks a class as an NgModule and supplies configuration metadata.\n   */\n  (obj?: NgModule): TypeDecorator;\n  new(obj?: NgModule): NgModule;\n}\n\n/**\n * Type of the NgModule metadata.\n *\n * @publicApi\n */\nexport interface NgModule {\n  /**\n   * The set of injectable objects that are available in the injector\n   * of this module.\n   *\n   * @see [Dependency Injection guide](guide/dependency-injection)\n   * @see [NgModule guide](guide/providers)\n   *\n   * @usageNotes\n   *\n   * Dependencies whose providers are listed here become available for injection\n   * into any component, directive, pipe or service that is a child of this injector.\n   * The NgModule used for bootstrapping uses the root injector, and can provide dependencies\n   * to any part of the app.\n   *\n   * A lazy-loaded module has its own injector, typically a child of the app root injector.\n   * Lazy-loaded services are scoped to the lazy-loaded module's injector.\n   * If a lazy-loaded module also provides the `UserService`, any component created\n   * within that module's context (such as by router navigation) gets the local instance\n   * of the service, not the instance in the root injector.\n   * Components in external modules continue to receive the instance provided by their injectors.\n   *\n   * ### Example\n   *\n   * The following example defines a class that is injected in\n   * the HelloWorld NgModule:\n   *\n   * ```\n   * class Greeter {\n   *    greet(name:string) {\n   *      return 'Hello ' + name + '!';\n   *    }\n   * }\n   *\n   * @NgModule({\n   *   providers: [\n   *     Greeter\n   *   ]\n   * })\n   * class HelloWorld {\n   *   greeter:Greeter;\n   *\n   *   constructor(greeter:Greeter) {\n   *     this.greeter = greeter;\n   *   }\n   * }\n   * ```\n   */\n  providers?: Provider[];\n\n  /**\n   * The set of components, directives, and pipes ([declarables](guide/glossary#declarable))\n   * that belong to this module.\n   *\n   * @usageNotes\n   *\n   * The set of selectors that are available to a template include those declared here, and\n   * those that are exported from imported NgModules.\n   *\n   * Declarables must belong to exactly one module.\n   * The compiler emits an error if you try to declare the same class in more than one module.\n   * Be careful not to declare a class that is imported from another module.\n   *\n   * ### Example\n   *\n   * The following example allows the CommonModule to use the `NgFor`\n   * directive.\n   *\n   * ```javascript\n   * @NgModule({\n   *   declarations: [NgFor]\n   * })\n   * class CommonModule {\n   * }\n   * ```\n   */\n  declarations?: Array<Type<any>|any[]>;\n\n  /**\n   * The set of NgModules whose exported [declarables](guide/glossary#declarable)\n   * are available to templates in this module.\n   *\n   * @usageNotes\n   *\n   * A template can use exported declarables from any\n   * imported module, including those from modules that are imported indirectly\n   * and re-exported.\n   * For example, `ModuleA` imports `ModuleB`, and also exports\n   * it, which makes the declarables from `ModuleB` available\n   * wherever `ModuleA` is imported.\n   *\n   * ### Example\n   *\n   * The following example allows MainModule to use anything exported by\n   * `CommonModule`:\n   *\n   * ```javascript\n   * @NgModule({\n   *   imports: [CommonModule]\n   * })\n   * class MainModule {\n   * }\n   * ```\n   *\n   */\n  imports?: Array<Type<any>|ModuleWithProviders<{}>|any[]>;\n\n  /**\n   * The set of components, directives, and pipes declared in this\n   * NgModule that can be used in the template of any component that is part of an\n   * NgModule that imports this NgModule. Exported declarations are the module's public API.\n   *\n   * A declarable belongs to one and only one NgModule.\n   * A module can list another module among its exports, in which case all of that module's\n   * public declaration are exported.\n   *\n   * @usageNotes\n   *\n   * Declarations are private by default.\n   * If this ModuleA does not export UserComponent, then only the components within this\n   * ModuleA can use UserComponent.\n   *\n   * ModuleA can import ModuleB and also export it, making exports from ModuleB\n   * available to an NgModule that imports ModuleA.\n   *\n   * ### Example\n   *\n   * The following example exports the `NgFor` directive from CommonModule.\n   *\n   * ```javascript\n   * @NgModule({\n   *   exports: [NgFor]\n   * })\n   * class CommonModule {\n   * }\n   * ```\n   */\n  exports?: Array<Type<any>|any[]>;\n\n  /**\n   * The set of components to compile when this NgModule is defined,\n   * so that they can be dynamically loaded into the view.\n   *\n   * For each component listed here, Angular creates a `ComponentFactory`\n   * and stores it in the `ComponentFactoryResolver`.\n   *\n   * Angular automatically adds components in the module's bootstrap\n   * and route definitions into the `entryComponents` list. Use this\n   * option to add components that are bootstrapped\n   * using one of the imperative techniques, such as `ViewContainerRef.createComponent()`.\n   *\n   * @see [Entry Components](guide/entry-components)\n   * @deprecated\n   * Since 9.0.0. With Ivy, this property is no longer necessary.\n   * (You may need to keep these if building a library that will be consumed by a View Engine\n   * application.)\n   */\n  entryComponents?: Array<Type<any>|any[]>;\n\n  /**\n   * The set of components that are bootstrapped when\n   * this module is bootstrapped. The components listed here\n   * are automatically added to `entryComponents`.\n   */\n  bootstrap?: Array<Type<any>|any[]>;\n\n  /**\n   * The set of schemas that declare elements to be allowed in the NgModule.\n   * Elements and properties that are neither Angular components nor directives\n   * must be declared in a schema.\n   *\n   * Allowed value are `NO_ERRORS_SCHEMA` and `CUSTOM_ELEMENTS_SCHEMA`.\n   *\n   * @security When using one of `NO_ERRORS_SCHEMA` or `CUSTOM_ELEMENTS_SCHEMA`\n   * you must ensure that allowed elements and properties securely escape inputs.\n   */\n  schemas?: Array<SchemaMetadata|any[]>;\n\n  /**\n   * A name or path that uniquely identifies this NgModule in `getNgModuleById`.\n   * If left `undefined`, the NgModule is not registered with `getNgModuleById`.\n   */\n  id?: string;\n\n  /**\n   * When present, this module is ignored by the AOT compiler.\n   * It remains in distributed code, and the JIT compiler attempts to compile it\n   * at run time, in the browser.\n   * To ensure the correct behavior, the app must import `@angular/compiler`.\n   */\n  jit?: true;\n}\n\n/**\n * @Annotation\n * @publicApi\n */\nexport const NgModule: NgModuleDecorator = makeDecorator(\n    'NgModule', (ngModule: NgModule) => ngModule, undefined, undefined,\n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    (type: Type<any>, meta: NgModule) => compileNgModule(type, meta));\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport function noop(...args: any[]): any {\n  // Do nothing.\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/*\n * This file exists to support compilation of @angular/core in Ivy mode.\n *\n * When the Angular compiler processes a compilation unit, it normally writes imports to\n * @angular/core. When compiling the core package itself this strategy isn't usable. Instead, the\n * compiler writes imports to this file.\n *\n * Only a subset of such imports are supported - core is not allowed to declare components or pipes.\n * A check in ngtsc's `R3SymbolsImportRewriter` validates this condition. The rewriter is only used\n * when compiling @angular/core and is responsible for translating an external name (prefixed with\n * ɵ) to the internal symbol name as exported below.\n *\n * The below symbols are used for @Injectable and @NgModule compilation.\n */\n\nexport {ɵɵinject} from './di/injector_compatibility';\nexport {ɵɵdefineInjectable, ɵɵdefineInjector, ɵɵInjectableDeclaration} from './di/interface/defs';\nexport {NgModuleDef} from './metadata/ng_module_def';\nexport {ɵɵdefineNgModule} from './render3/definition';\nexport {ɵɵFactoryDeclaration, ɵɵInjectorDeclaration, ɵɵNgModuleDeclaration} from './render3/interfaces/public_definitions';\nexport {setClassMetadata} from './render3/metadata';\nexport {NgModuleFactory} from './render3/ng_module_ref';\nexport {noSideEffects as ɵnoSideEffects} from './util/closure';\n\n\n\n/**\n * The existence of this constant (in this particular file) informs the Angular compiler that the\n * current program is actually @angular/core, which needs to be compiled specially.\n */\nexport const ITS_JUST_ANGULAR = true;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs';\n\nimport {Inject, Injectable, InjectionToken, Optional} from './di';\nimport {isObservable, isPromise} from './util/lang';\nimport {noop} from './util/noop';\n\n\n/**\n * A [DI token](guide/glossary#di-token \"DI token definition\") that you can use to provide\n * one or more initialization functions.\n *\n * The provided functions are injected at application startup and executed during\n * app initialization. If any of these functions returns a Promise or an Observable, initialization\n * does not complete until the Promise is resolved or the Observable is completed.\n *\n * You can, for example, create a factory function that loads language data\n * or an external configuration, and provide that function to the `APP_INITIALIZER` token.\n * The function is executed during the application bootstrap process,\n * and the needed data is available on startup.\n *\n * @see `ApplicationInitStatus`\n *\n * @usageNotes\n *\n * The following example illustrates how to configure a multi-provider using `APP_INITIALIZER` token\n * and a function returning a promise.\n *\n * ```\n *  function initializeApp(): Promise<any> {\n *    return new Promise((resolve, reject) => {\n *      // Do some asynchronous stuff\n *      resolve();\n *    });\n *  }\n *\n *  @NgModule({\n *   imports: [BrowserModule],\n *   declarations: [AppComponent],\n *   bootstrap: [AppComponent],\n *   providers: [{\n *     provide: APP_INITIALIZER,\n *     useFactory: () => initializeApp,\n *     multi: true\n *    }]\n *   })\n *  export class AppModule {}\n * ```\n *\n * It's also possible to configure a multi-provider using `APP_INITIALIZER` token and a function\n * returning an observable, see an example below. Note: the `HttpClient` in this example is used for\n * demo purposes to illustrate how the factory function can work with other providers available\n * through DI.\n *\n * ```\n *  function initializeAppFactory(httpClient: HttpClient): () => Observable<any> {\n *   return () => httpClient.get(\"https://someUrl.com/api/user\")\n *     .pipe(\n *        tap(user => { ... })\n *     );\n *  }\n *\n *  @NgModule({\n *    imports: [BrowserModule, HttpClientModule],\n *    declarations: [AppComponent],\n *    bootstrap: [AppComponent],\n *    providers: [{\n *      provide: APP_INITIALIZER,\n *      useFactory: initializeAppFactory,\n *      deps: [HttpClient],\n *      multi: true\n *    }]\n *  })\n *  export class AppModule {}\n * ```\n *\n * @publicApi\n */\nexport const APP_INITIALIZER =\n    new InjectionToken<ReadonlyArray<() => Observable<unknown>| Promise<unknown>| void>>(\n        'Application Initializer');\n\n/**\n * A class that reflects the state of running {@link APP_INITIALIZER} functions.\n *\n * @publicApi\n */\n@Injectable({providedIn: 'root'})\nexport class ApplicationInitStatus {\n  private resolve = noop;\n  private reject = noop;\n  private initialized = false;\n  public readonly donePromise: Promise<any>;\n  public readonly done = false;\n\n  constructor(@Inject(APP_INITIALIZER) @Optional() private readonly appInits:\n                  ReadonlyArray<() => Observable<unknown>| Promise<unknown>| void>) {\n    this.donePromise = new Promise((res, rej) => {\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n\n  /** @internal */\n  runInitializers() {\n    if (this.initialized) {\n      return;\n    }\n\n    const asyncInitPromises: Promise<any>[] = [];\n\n    const complete = () => {\n      (this as {done: boolean}).done = true;\n      this.resolve();\n    };\n\n    if (this.appInits) {\n      for (let i = 0; i < this.appInits.length; i++) {\n        const initResult = this.appInits[i]();\n        if (isPromise(initResult)) {\n          asyncInitPromises.push(initResult);\n        } else if (isObservable(initResult)) {\n          const observableAsPromise = new Promise<void>((resolve, reject) => {\n            initResult.subscribe({complete: resolve, error: reject});\n          });\n          asyncInitPromises.push(observableAsPromise);\n        }\n      }\n    }\n\n    Promise.all(asyncInitPromises)\n        .then(() => {\n          complete();\n        })\n        .catch(e => {\n          this.reject(e);\n        });\n\n    if (asyncInitPromises.length === 0) {\n      complete();\n    }\n    this.initialized = true;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from './di';\nimport {ComponentRef} from './linker/component_factory';\n\n\n/**\n * A [DI token](guide/glossary#di-token \"DI token definition\") representing a unique string ID, used\n * primarily for prefixing application attributes and CSS styles when\n * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * BY default, the value is randomly generated and assigned to the application by Angular.\n * To provide a custom ID value, use a DI provider <!-- TODO: provider --> to configure\n * the root {@link Injector} that uses this token.\n *\n * @publicApi\n */\nexport const APP_ID = new InjectionToken<string>('AppId', {\n  providedIn: 'root',\n  factory: _appIdRandomProviderFactory,\n});\n\nexport function _appIdRandomProviderFactory() {\n  return `${_randomChar()}${_randomChar()}${_randomChar()}`;\n}\n\n/**\n * Providers that generate a random `APP_ID_TOKEN`.\n * @publicApi\n */\nexport const APP_ID_RANDOM_PROVIDER = {\n  provide: APP_ID,\n  useFactory: _appIdRandomProviderFactory,\n  deps: <any[]>[],\n};\n\nfunction _randomChar(): string {\n  return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n\n/**\n * A function that is executed when a platform is initialized.\n * @publicApi\n */\nexport const PLATFORM_INITIALIZER = new InjectionToken<Array<() => void>>('Platform Initializer');\n\n/**\n * A token that indicates an opaque platform ID.\n * @publicApi\n */\nexport const PLATFORM_ID = new InjectionToken<Object>('Platform ID', {\n  providedIn: 'platform',\n  factory: () => 'unknown',  // set a default platform name, when none set explicitly\n});\n\n/**\n * A [DI token](guide/glossary#di-token \"DI token definition\") that provides a set of callbacks to\n * be called for every component that is bootstrapped.\n *\n * Each callback must take a `ComponentRef` instance and return nothing.\n *\n * `(componentRef: ComponentRef) => void`\n *\n * @publicApi\n */\nexport const APP_BOOTSTRAP_LISTENER =\n    new InjectionToken<Array<(compRef: ComponentRef<any>) => void>>('appBootstrapListener');\n\n/**\n * A [DI token](guide/glossary#di-token \"DI token definition\") that indicates the root directory of\n * the application\n * @publicApi\n */\nexport const PACKAGE_ROOT_URL = new InjectionToken<string>('Application Packages Root URL');\n\n// We keep this token here, rather than the animations package, so that modules that only care\n// about which animations module is loaded (e.g. the CDK) can retrieve it without having to\n// include extra dependencies. See #44970 for more context.\n\n/**\n * A [DI token](guide/glossary#di-token \"DI token definition\") that indicates which animations\n * module has been loaded.\n * @publicApi\n */\nexport const ANIMATION_MODULE_TYPE =\n    new InjectionToken<'NoopAnimations'|'BrowserAnimations'>('AnimationModuleType');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from './di';\n\n@Injectable({providedIn: 'platform'})\nexport class Console {\n  log(message: string): void {\n    // tslint:disable-next-line:no-console\n    console.log(message);\n  }\n  // Note: for reporting errors use `DOM.logError()` as it is platform specific\n  warn(message: string): void {\n    // tslint:disable-next-line:no-console\n    console.warn(message);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '../di/injection_token';\nimport {inject} from '../di/injector_compatibility';\nimport {InjectFlags} from '../di/interface/injector';\n\nimport {DEFAULT_LOCALE_ID, USD_CURRENCY_CODE} from './localization';\n\ndeclare const $localize: {locale?: string};\n\n/**\n * Work out the locale from the potential global properties.\n *\n * * Closure Compiler: use `goog.LOCALE`.\n * * Ivy enabled: use `$localize.locale`\n */\nexport function getGlobalLocale(): string {\n  if (typeof ngI18nClosureMode !== 'undefined' && ngI18nClosureMode &&\n      typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n    // * The default `goog.LOCALE` value is `en`, while Angular used `en-US`.\n    // * In order to preserve backwards compatibility, we use Angular default value over\n    //   Closure Compiler's one.\n    return goog.LOCALE;\n  } else {\n    // KEEP `typeof $localize !== 'undefined' && $localize.locale` IN SYNC WITH THE LOCALIZE\n    // COMPILE-TIME INLINER.\n    //\n    // * During compile time inlining of translations the expression will be replaced\n    //   with a string literal that is the current locale. Other forms of this expression are not\n    //   guaranteed to be replaced.\n    //\n    // * During runtime translation evaluation, the developer is required to set `$localize.locale`\n    //   if required, or just to provide their own `LOCALE_ID` provider.\n    return (typeof $localize !== 'undefined' && $localize.locale) || DEFAULT_LOCALE_ID;\n  }\n}\n\n/**\n * Provide this token to set the locale of your application.\n * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n * DecimalPipe and PercentPipe) and by ICU expressions.\n *\n * See the [i18n guide](guide/i18n-common-locale-id) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { LOCALE_ID } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n * });\n * ```\n *\n * @publicApi\n */\nexport const LOCALE_ID: InjectionToken<string> = new InjectionToken('LocaleId', {\n  providedIn: 'root',\n  factory: () =>\n      inject(LOCALE_ID, InjectFlags.Optional | InjectFlags.SkipSelf) || getGlobalLocale(),\n});\n\n/**\n * Provide this token to set the default currency code your application uses for\n * CurrencyPipe when there is no currency code passed into it. This is only used by\n * CurrencyPipe and has no relation to locale currency. Defaults to USD if not configured.\n *\n * See the [i18n guide](guide/i18n-common-locale-id) for more information.\n *\n * <div class=\"alert is-helpful\">\n *\n * **Deprecation notice:**\n *\n * The default currency code is currently always `USD` but this is deprecated from v9.\n *\n * **In v10 the default currency code will be taken from the current locale.**\n *\n * If you need the previous behavior then set it by creating a `DEFAULT_CURRENCY_CODE` provider in\n * your application `NgModule`:\n *\n * ```ts\n * {provide: DEFAULT_CURRENCY_CODE, useValue: 'USD'}\n * ```\n *\n * </div>\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: DEFAULT_CURRENCY_CODE, useValue: 'EUR' }]\n * });\n * ```\n *\n * @publicApi\n */\nexport const DEFAULT_CURRENCY_CODE = new InjectionToken<string>('DefaultCurrencyCode', {\n  providedIn: 'root',\n  factory: () => USD_CURRENCY_CODE,\n});\n\n/**\n * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n * `xlf` or `xlf2`) when you want to translate your application in another language.\n *\n * See the [i18n guide](guide/i18n-common-merge) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * // content of your translation file\n * const translations = '....';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n * });\n * ```\n *\n * @publicApi\n */\nexport const TRANSLATIONS = new InjectionToken<string>('Translations');\n\n/**\n * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n * `xlf` or `xlf2`.\n *\n * See the [i18n guide](guide/i18n-common-merge) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS_FORMAT } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n * });\n * ```\n *\n * @publicApi\n */\nexport const TRANSLATIONS_FORMAT = new InjectionToken<string>('TranslationsFormat');\n\n/**\n * Use this enum at bootstrap as an option of `bootstrapModule` to define the strategy\n * that the compiler should use in case of missing translations:\n * - Error: throw if you have missing translations.\n * - Warning (default): show a warning in the console and/or shell.\n * - Ignore: do nothing.\n *\n * See the [i18n guide](guide/i18n-common-merge#report-missing-translations) for more information.\n *\n * @usageNotes\n * ### Example\n * ```typescript\n * import { MissingTranslationStrategy } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   missingTranslation: MissingTranslationStrategy.Error\n * });\n * ```\n *\n * @publicApi\n */\nexport enum MissingTranslationStrategy {\n  Error = 0,\n  Warning = 1,\n  Ignore = 2,\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '../di/injectable';\nimport {InjectionToken} from '../di/injection_token';\nimport {StaticProvider} from '../di/interface/provider';\nimport {MissingTranslationStrategy} from '../i18n/tokens';\nimport {Type} from '../interface/type';\nimport {ViewEncapsulation} from '../metadata/view';\nimport {ComponentFactory as ComponentFactoryR3} from '../render3/component_ref';\nimport {getComponentDef, getNgModuleDef} from '../render3/definition';\nimport {NgModuleFactory as NgModuleFactoryR3} from '../render3/ng_module_ref';\nimport {maybeUnwrapFn} from '../render3/util/misc_utils';\n\nimport {ComponentFactory} from './component_factory';\nimport {NgModuleFactory} from './ng_module_factory';\n\n/**\n * Combination of NgModuleFactory and ComponentFactories.\n *\n * @publicApi\n *\n * @deprecated\n * Ivy JIT mode doesn't require accessing this symbol.\n * See [JIT API changes due to ViewEngine deprecation](guide/deprecations#jit-api-changes) for\n * additional context.\n */\nexport class ModuleWithComponentFactories<T> {\n  constructor(\n      public ngModuleFactory: NgModuleFactory<T>,\n      public componentFactories: ComponentFactory<any>[]) {}\n}\n\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n *\n * @publicApi\n *\n * @deprecated\n * Ivy JIT mode doesn't require accessing this symbol.\n * See [JIT API changes due to ViewEngine deprecation](guide/deprecations#jit-api-changes) for\n * additional context.\n */\n@Injectable({providedIn: 'root'})\nexport class Compiler {\n  /**\n   * Compiles the given NgModule and all of its components. All templates of the components listed\n   * in `entryComponents` have to be inlined.\n   */\n  compileModuleSync<T>(moduleType: Type<T>): NgModuleFactory<T> {\n    return new NgModuleFactoryR3(moduleType);\n  }\n\n  /**\n   * Compiles the given NgModule and all of its components\n   */\n  compileModuleAsync<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> {\n    return Promise.resolve(this.compileModuleSync(moduleType));\n  }\n\n  /**\n   * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n   */\n  compileModuleAndAllComponentsSync<T>(moduleType: Type<T>): ModuleWithComponentFactories<T> {\n    const ngModuleFactory = this.compileModuleSync(moduleType);\n    const moduleDef = getNgModuleDef(moduleType)!;\n    const componentFactories =\n        maybeUnwrapFn(moduleDef.declarations)\n            .reduce((factories: ComponentFactory<any>[], declaration: Type<any>) => {\n              const componentDef = getComponentDef(declaration);\n              componentDef && factories.push(new ComponentFactoryR3(componentDef));\n              return factories;\n            }, [] as ComponentFactory<any>[]);\n    return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n  }\n\n  /**\n   * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n   */\n  compileModuleAndAllComponentsAsync<T>(moduleType: Type<T>):\n      Promise<ModuleWithComponentFactories<T>> {\n    return Promise.resolve(this.compileModuleAndAllComponentsSync(moduleType));\n  }\n\n  /**\n   * Clears all caches.\n   */\n  clearCache(): void {}\n\n  /**\n   * Clears the cache for the given component/ngModule.\n   */\n  clearCacheFor(type: Type<any>) {}\n\n  /**\n   * Returns the id for a given NgModule, if one is defined and known to the compiler.\n   */\n  getModuleId(moduleType: Type<any>): string|undefined {\n    return undefined;\n  }\n}\n\n/**\n * Options for creating a compiler.\n *\n * Note: the `useJit` and `missingTranslation` config options are not used in Ivy, passing them has\n * no effect. Those config options are deprecated since v13.\n *\n * @publicApi\n */\nexport type CompilerOptions = {\n  /**\n   * @deprecated not used at all in Ivy, providing this config option has no effect.\n   */\n  useJit?: boolean,\n  defaultEncapsulation?: ViewEncapsulation,\n  providers?: StaticProvider[],\n  /**\n   * @deprecated not used at all in Ivy, providing this config option has no effect.\n   */\n  missingTranslation?: MissingTranslationStrategy,\n  preserveWhitespaces?: boolean,\n};\n\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * @publicApi\n */\nexport const COMPILER_OPTIONS = new InjectionToken<CompilerOptions[]>('compilerOptions');\n\n/**\n * A factory for creating a Compiler\n *\n * @publicApi\n *\n * @deprecated\n * Ivy JIT mode doesn't require accessing this symbol.\n * See [JIT API changes due to ViewEngine deprecation](guide/deprecations#jit-api-changes) for\n * additional context.\n */\nexport abstract class CompilerFactory {\n  abstract createCompiler(options?: CompilerOptions[]): Compiler;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst promise: Promise<any> = (() => Promise.resolve(0))();\n\ndeclare const Zone: any;\n\nexport function scheduleMicroTask(fn: Function) {\n  if (typeof Zone === 'undefined') {\n    // use promise to schedule microTask instead of use Zone\n    promise.then(() => {\n      fn && fn.apply(null, null);\n    });\n  } else {\n    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {RuntimeError, RuntimeErrorCode} from '../errors';\nimport {EventEmitter} from '../event_emitter';\nimport {global} from '../util/global';\nimport {noop} from '../util/noop';\nimport {getNativeRequestAnimationFrame} from '../util/raf';\n\n\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '@angular/core';\n * import {NgIf} from '@angular/common';\n *\n * @Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nexport class NgZone {\n  readonly hasPendingMacrotasks: boolean = false;\n  readonly hasPendingMicrotasks: boolean = false;\n\n  /**\n   * Whether there are no outstanding microtasks or macrotasks.\n   */\n  readonly isStable: boolean = true;\n\n  /**\n   * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n   */\n  readonly onUnstable: EventEmitter<any> = new EventEmitter(false);\n\n  /**\n   * Notifies when there is no more microtasks enqueued in the current VM Turn.\n   * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n   * For this reason this event can fire multiple times per VM Turn.\n   */\n  readonly onMicrotaskEmpty: EventEmitter<any> = new EventEmitter(false);\n\n  /**\n   * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n   * implies we are about to relinquish VM turn.\n   * This event gets called just once.\n   */\n  readonly onStable: EventEmitter<any> = new EventEmitter(false);\n\n  /**\n   * Notifies that an error has been delivered.\n   */\n  readonly onError: EventEmitter<any> = new EventEmitter(false);\n\n\n  constructor({\n    enableLongStackTrace = false,\n    shouldCoalesceEventChangeDetection = false,\n    shouldCoalesceRunChangeDetection = false\n  }) {\n    if (typeof Zone == 'undefined') {\n      throw new RuntimeError(\n          RuntimeErrorCode.MISSING_ZONEJS,\n          ngDevMode && `In this configuration Angular requires Zone.js`);\n    }\n\n    Zone.assertZonePatched();\n    const self = this as any as NgZonePrivate;\n    self._nesting = 0;\n\n    self._outer = self._inner = Zone.current;\n\n    if ((Zone as any)['AsyncStackTaggingZoneSpec']) {\n      const AsyncStackTaggingZoneSpec = (Zone as any)['AsyncStackTaggingZoneSpec'];\n      self._inner = self._inner.fork(new AsyncStackTaggingZoneSpec('Angular'));\n    }\n\n    if ((Zone as any)['TaskTrackingZoneSpec']) {\n      self._inner = self._inner.fork(new ((Zone as any)['TaskTrackingZoneSpec'] as any));\n    }\n\n    if (enableLongStackTrace && (Zone as any)['longStackTraceZoneSpec']) {\n      self._inner = self._inner.fork((Zone as any)['longStackTraceZoneSpec']);\n    }\n    // if shouldCoalesceRunChangeDetection is true, all tasks including event tasks will be\n    // coalesced, so shouldCoalesceEventChangeDetection option is not necessary and can be skipped.\n    self.shouldCoalesceEventChangeDetection =\n        !shouldCoalesceRunChangeDetection && shouldCoalesceEventChangeDetection;\n    self.shouldCoalesceRunChangeDetection = shouldCoalesceRunChangeDetection;\n    self.lastRequestAnimationFrameId = -1;\n    self.nativeRequestAnimationFrame = getNativeRequestAnimationFrame().nativeRequestAnimationFrame;\n    forkInnerZoneWithAngularBehavior(self);\n  }\n\n  static isInAngularZone(): boolean {\n    // Zone needs to be checked, because this method might be called even when NoopNgZone is used.\n    return typeof Zone !== 'undefined' && Zone.current.get('isAngularZone') === true;\n  }\n\n  static assertInAngularZone(): void {\n    if (!NgZone.isInAngularZone()) {\n      throw new RuntimeError(\n          RuntimeErrorCode.UNEXPECTED_ZONE_STATE,\n          ngDevMode && 'Expected to be in Angular Zone, but it is not!');\n    }\n  }\n\n  static assertNotInAngularZone(): void {\n    if (NgZone.isInAngularZone()) {\n      throw new RuntimeError(\n          RuntimeErrorCode.UNEXPECTED_ZONE_STATE,\n          ngDevMode && 'Expected to not be in Angular Zone, but it is!');\n    }\n  }\n\n  /**\n   * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n   * the function.\n   *\n   * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n   * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n   *\n   * Any future tasks or microtasks scheduled from within this function will continue executing from\n   * within the Angular zone.\n   *\n   * If a synchronous error happens it will be rethrown and not reported via `onError`.\n   */\n  run<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[]): T {\n    return (this as any as NgZonePrivate)._inner.run(fn, applyThis, applyArgs);\n  }\n\n  /**\n   * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n   * returned by the function.\n   *\n   * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n   * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n   *\n   * Any future tasks or microtasks scheduled from within this function will continue executing from\n   * within the Angular zone.\n   *\n   * If a synchronous error happens it will be rethrown and not reported via `onError`.\n   */\n  runTask<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[], name?: string): T {\n    const zone = (this as any as NgZonePrivate)._inner;\n    const task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n    try {\n      return zone.runTask(task, applyThis, applyArgs);\n    } finally {\n      zone.cancelTask(task);\n    }\n  }\n\n  /**\n   * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n   * rethrown.\n   */\n  runGuarded<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[]): T {\n    return (this as any as NgZonePrivate)._inner.runGuarded(fn, applyThis, applyArgs);\n  }\n\n  /**\n   * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n   * the function.\n   *\n   * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n   * work that\n   * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n   *\n   * Any future tasks or microtasks scheduled from within this function will continue executing from\n   * outside of the Angular zone.\n   *\n   * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n   */\n  runOutsideAngular<T>(fn: (...args: any[]) => T): T {\n    return (this as any as NgZonePrivate)._outer.run(fn);\n  }\n}\n\nconst EMPTY_PAYLOAD = {};\n\ninterface NgZonePrivate extends NgZone {\n  _outer: Zone;\n  _inner: Zone;\n  _nesting: number;\n  _hasPendingMicrotasks: boolean;\n\n  hasPendingMacrotasks: boolean;\n  hasPendingMicrotasks: boolean;\n  lastRequestAnimationFrameId: number;\n  /**\n   * A flag to indicate if NgZone is currently inside\n   * checkStable and to prevent re-entry. The flag is\n   * needed because it is possible to invoke the change\n   * detection from within change detection leading to\n   * incorrect behavior.\n   *\n   * For detail, please refer here,\n   * https://github.com/angular/angular/pull/40540\n   */\n  isCheckStableRunning: boolean;\n  isStable: boolean;\n  /**\n   * Optionally specify coalescing event change detections or not.\n   * Consider the following case.\n   *\n   * <div (click)=\"doSomething()\">\n   *   <button (click)=\"doSomethingElse()\"></button>\n   * </div>\n   *\n   * When button is clicked, because of the event bubbling, both\n   * event handlers will be called and 2 change detections will be\n   * triggered. We can coalesce such kind of events to trigger\n   * change detection only once.\n   *\n   * By default, this option will be false. So the events will not be\n   * coalesced and the change detection will be triggered multiple times.\n   * And if this option be set to true, the change detection will be\n   * triggered async by scheduling it in an animation frame. So in the case above,\n   * the change detection will only be trigged once.\n   */\n  shouldCoalesceEventChangeDetection: boolean;\n  /**\n   * Optionally specify if `NgZone#run()` method invocations should be coalesced\n   * into a single change detection.\n   *\n   * Consider the following case.\n   *\n   * for (let i = 0; i < 10; i ++) {\n   *   ngZone.run(() => {\n   *     // do something\n   *   });\n   * }\n   *\n   * This case triggers the change detection multiple times.\n   * With ngZoneRunCoalescing options, all change detections in an event loops trigger only once.\n   * In addition, the change detection executes in requestAnimation.\n   *\n   */\n  shouldCoalesceRunChangeDetection: boolean;\n\n  nativeRequestAnimationFrame: (callback: FrameRequestCallback) => number;\n\n  // Cache a  \"fake\" top eventTask so you don't need to schedule a new task every\n  // time you run a `checkStable`.\n  fakeTopEventTask: Task;\n}\n\nfunction checkStable(zone: NgZonePrivate) {\n  // TODO: @JiaLiPassion, should check zone.isCheckStableRunning to prevent\n  // re-entry. The case is:\n  //\n  // @Component({...})\n  // export class AppComponent {\n  // constructor(private ngZone: NgZone) {\n  //   this.ngZone.onStable.subscribe(() => {\n  //     this.ngZone.run(() => console.log('stable'););\n  //   });\n  // }\n  //\n  // The onStable subscriber run another function inside ngZone\n  // which causes `checkStable()` re-entry.\n  // But this fix causes some issues in g3, so this fix will be\n  // launched in another PR.\n  if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n    try {\n      zone._nesting++;\n      zone.onMicrotaskEmpty.emit(null);\n    } finally {\n      zone._nesting--;\n      if (!zone.hasPendingMicrotasks) {\n        try {\n          zone.runOutsideAngular(() => zone.onStable.emit(null));\n        } finally {\n          zone.isStable = true;\n        }\n      }\n    }\n  }\n}\n\nfunction delayChangeDetectionForEvents(zone: NgZonePrivate) {\n  /**\n   * We also need to check _nesting here\n   * Consider the following case with shouldCoalesceRunChangeDetection = true\n   *\n   * ngZone.run(() => {});\n   * ngZone.run(() => {});\n   *\n   * We want the two `ngZone.run()` only trigger one change detection\n   * when shouldCoalesceRunChangeDetection is true.\n   * And because in this case, change detection run in async way(requestAnimationFrame),\n   * so we also need to check the _nesting here to prevent multiple\n   * change detections.\n   */\n  if (zone.isCheckStableRunning || zone.lastRequestAnimationFrameId !== -1) {\n    return;\n  }\n  zone.lastRequestAnimationFrameId = zone.nativeRequestAnimationFrame.call(global, () => {\n    // This is a work around for https://github.com/angular/angular/issues/36839.\n    // The core issue is that when event coalescing is enabled it is possible for microtasks\n    // to get flushed too early (As is the case with `Promise.then`) between the\n    // coalescing eventTasks.\n    //\n    // To workaround this we schedule a \"fake\" eventTask before we process the\n    // coalescing eventTasks. The benefit of this is that the \"fake\" container eventTask\n    //  will prevent the microtasks queue from getting drained in between the coalescing\n    // eventTask execution.\n    if (!zone.fakeTopEventTask) {\n      zone.fakeTopEventTask = Zone.root.scheduleEventTask('fakeTopEventTask', () => {\n        zone.lastRequestAnimationFrameId = -1;\n        updateMicroTaskStatus(zone);\n        zone.isCheckStableRunning = true;\n        checkStable(zone);\n        zone.isCheckStableRunning = false;\n      }, undefined, () => {}, () => {});\n    }\n    zone.fakeTopEventTask.invoke();\n  });\n  updateMicroTaskStatus(zone);\n}\n\nfunction forkInnerZoneWithAngularBehavior(zone: NgZonePrivate) {\n  const delayChangeDetectionForEventsDelegate = () => {\n    delayChangeDetectionForEvents(zone);\n  };\n  zone._inner = zone._inner.fork({\n    name: 'angular',\n    properties: <any>{'isAngularZone': true},\n    onInvokeTask:\n        (delegate: ZoneDelegate, current: Zone, target: Zone, task: Task, applyThis: any,\n         applyArgs: any): any => {\n          try {\n            onEnter(zone);\n            return delegate.invokeTask(target, task, applyThis, applyArgs);\n          } finally {\n            if ((zone.shouldCoalesceEventChangeDetection && task.type === 'eventTask') ||\n                zone.shouldCoalesceRunChangeDetection) {\n              delayChangeDetectionForEventsDelegate();\n            }\n            onLeave(zone);\n          }\n        },\n\n    onInvoke:\n        (delegate: ZoneDelegate, current: Zone, target: Zone, callback: Function, applyThis: any,\n         applyArgs?: any[], source?: string): any => {\n          try {\n            onEnter(zone);\n            return delegate.invoke(target, callback, applyThis, applyArgs, source);\n          } finally {\n            if (zone.shouldCoalesceRunChangeDetection) {\n              delayChangeDetectionForEventsDelegate();\n            }\n            onLeave(zone);\n          }\n        },\n\n    onHasTask:\n        (delegate: ZoneDelegate, current: Zone, target: Zone, hasTaskState: HasTaskState) => {\n          delegate.hasTask(target, hasTaskState);\n          if (current === target) {\n            // We are only interested in hasTask events which originate from our zone\n            // (A child hasTask event is not interesting to us)\n            if (hasTaskState.change == 'microTask') {\n              zone._hasPendingMicrotasks = hasTaskState.microTask;\n              updateMicroTaskStatus(zone);\n              checkStable(zone);\n            } else if (hasTaskState.change == 'macroTask') {\n              zone.hasPendingMacrotasks = hasTaskState.macroTask;\n            }\n          }\n        },\n\n    onHandleError: (delegate: ZoneDelegate, current: Zone, target: Zone, error: any): boolean => {\n      delegate.handleError(target, error);\n      zone.runOutsideAngular(() => zone.onError.emit(error));\n      return false;\n    }\n  });\n}\n\nfunction updateMicroTaskStatus(zone: NgZonePrivate) {\n  if (zone._hasPendingMicrotasks ||\n      ((zone.shouldCoalesceEventChangeDetection || zone.shouldCoalesceRunChangeDetection) &&\n       zone.lastRequestAnimationFrameId !== -1)) {\n    zone.hasPendingMicrotasks = true;\n  } else {\n    zone.hasPendingMicrotasks = false;\n  }\n}\n\nfunction onEnter(zone: NgZonePrivate) {\n  zone._nesting++;\n  if (zone.isStable) {\n    zone.isStable = false;\n    zone.onUnstable.emit(null);\n  }\n}\n\nfunction onLeave(zone: NgZonePrivate) {\n  zone._nesting--;\n  checkStable(zone);\n}\n\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nexport class NoopNgZone implements NgZone {\n  readonly hasPendingMicrotasks: boolean = false;\n  readonly hasPendingMacrotasks: boolean = false;\n  readonly isStable: boolean = true;\n  readonly onUnstable: EventEmitter<any> = new EventEmitter();\n  readonly onMicrotaskEmpty: EventEmitter<any> = new EventEmitter();\n  readonly onStable: EventEmitter<any> = new EventEmitter();\n  readonly onError: EventEmitter<any> = new EventEmitter();\n\n  run<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any): T {\n    return fn.apply(applyThis, applyArgs);\n  }\n\n  runGuarded<T>(fn: (...args: any[]) => any, applyThis?: any, applyArgs?: any): T {\n    return fn.apply(applyThis, applyArgs);\n  }\n\n  runOutsideAngular<T>(fn: (...args: any[]) => T): T {\n    return fn();\n  }\n\n  runTask<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any, name?: string): T {\n    return fn.apply(applyThis, applyArgs);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {global} from './global';\n\nexport function getNativeRequestAnimationFrame() {\n  let nativeRequestAnimationFrame: (callback: FrameRequestCallback) => number =\n      global['requestAnimationFrame'];\n  let nativeCancelAnimationFrame: (handle: number) => void = global['cancelAnimationFrame'];\n  if (typeof Zone !== 'undefined' && nativeRequestAnimationFrame! && nativeCancelAnimationFrame!) {\n    // use unpatched version of requestAnimationFrame(native delegate) if possible\n    // to avoid another Change detection\n    const unpatchedRequestAnimationFrame =\n        (nativeRequestAnimationFrame as any)[(Zone as any).__symbol__('OriginalDelegate')];\n    if (unpatchedRequestAnimationFrame) {\n      nativeRequestAnimationFrame = unpatchedRequestAnimationFrame;\n    }\n    const unpatchedCancelAnimationFrame =\n        (nativeCancelAnimationFrame as any)[(Zone as any).__symbol__('OriginalDelegate')];\n    if (unpatchedCancelAnimationFrame) {\n      nativeCancelAnimationFrame = unpatchedCancelAnimationFrame;\n    }\n  }\n  return {nativeRequestAnimationFrame, nativeCancelAnimationFrame};\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, InjectionToken} from '../di';\nimport {scheduleMicroTask} from '../util/microtask';\nimport {NgZone} from '../zone/ng_zone';\n\n/**\n * Testability API.\n * `declare` keyword causes tsickle to generate externs, so these methods are\n * not renamed by Closure Compiler.\n * @publicApi\n */\nexport declare interface PublicTestability {\n  isStable(): boolean;\n  whenStable(callback: Function, timeout?: number, updateCallback?: Function): void;\n  findProviders(using: any, provider: string, exactMatch: boolean): any[];\n}\n\n// Angular internal, not intended for public API.\nexport interface PendingMacrotask {\n  source: string;\n  creationLocation: Error;\n  runCount?: number;\n  data?: TaskData;\n}\n\nexport interface TaskData {\n  target?: XMLHttpRequest;\n  delay?: number;\n  isPeriodic?: boolean;\n}\n\n// Angular internal, not intended for public API.\nexport type DoneCallback = (didWork: boolean, tasks?: PendingMacrotask[]) => void;\nexport type UpdateCallback = (tasks: PendingMacrotask[]) => boolean;\n\ninterface WaitCallback {\n  // Needs to be 'any' - setTimeout returns a number according to ES6, but\n  // on NodeJS it returns a Timer.\n  timeoutId: any;\n  doneCb: DoneCallback;\n  updateCb?: UpdateCallback;\n}\n\n/**\n * Internal injection token that can used to access an instance of a Testability class.\n *\n * This token acts as a bridge between the core bootstrap code and the `Testability` class. This is\n * needed to ensure that there are no direct references to the `Testability` class, so it can be\n * tree-shaken away (if not referenced). For the environments/setups when the `Testability` class\n * should be available, this token is used to add a provider that references the `Testability`\n * class. Otherwise, only this token is retained in a bundle, but the `Testability` class is not.\n */\nexport const TESTABILITY = new InjectionToken<Testability>('');\n\n/**\n * Internal injection token to retrieve Testability getter class instance.\n */\nexport const TESTABILITY_GETTER = new InjectionToken<GetTestability>('');\n\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser.\n *\n * Angular applications bootstrapped using an NgModule (via `@NgModule.bootstrap` field) will also\n * instantiate Testability by default (in both development and production modes).\n *\n * For applications bootstrapped using the `bootstrapApplication` function, Testability is not\n * included by default. You can include it into your applications by getting the list of necessary\n * providers using the `provideProtractorTestingSupport()` function and adding them into the\n * `options.providers` array. Example:\n *\n * ```typescript\n * import {provideProtractorTestingSupport} from '@angular/platform-browser';\n *\n * await bootstrapApplication(RootComponent, providers: [provideProtractorTestingSupport()]);\n * ```\n *\n * @publicApi\n */\n@Injectable()\nexport class Testability implements PublicTestability {\n  private _pendingCount: number = 0;\n  private _isZoneStable: boolean = true;\n  /**\n   * Whether any work was done since the last 'whenStable' callback. This is\n   * useful to detect if this could have potentially destabilized another\n   * component while it is stabilizing.\n   * @internal\n   */\n  private _didWork: boolean = false;\n  private _callbacks: WaitCallback[] = [];\n\n  private taskTrackingZone: {macroTasks: Task[]}|null = null;\n\n  constructor(\n      private _ngZone: NgZone, private registry: TestabilityRegistry,\n      @Inject(TESTABILITY_GETTER) testabilityGetter: GetTestability) {\n    // If there was no Testability logic registered in the global scope\n    // before, register the current testability getter as a global one.\n    if (!_testabilityGetter) {\n      setTestabilityGetter(testabilityGetter);\n      testabilityGetter.addToWindow(registry);\n    }\n    this._watchAngularEvents();\n    _ngZone.run(() => {\n      this.taskTrackingZone =\n          typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n    });\n  }\n\n  private _watchAngularEvents(): void {\n    this._ngZone.onUnstable.subscribe({\n      next: () => {\n        this._didWork = true;\n        this._isZoneStable = false;\n      }\n    });\n\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.subscribe({\n        next: () => {\n          NgZone.assertNotInAngularZone();\n          scheduleMicroTask(() => {\n            this._isZoneStable = true;\n            this._runCallbacksIfReady();\n          });\n        }\n      });\n    });\n  }\n\n  /**\n   * Increases the number of pending request\n   * @deprecated pending requests are now tracked with zones.\n   */\n  increasePendingRequestCount(): number {\n    this._pendingCount += 1;\n    this._didWork = true;\n    return this._pendingCount;\n  }\n\n  /**\n   * Decreases the number of pending request\n   * @deprecated pending requests are now tracked with zones\n   */\n  decreasePendingRequestCount(): number {\n    this._pendingCount -= 1;\n    if (this._pendingCount < 0) {\n      throw new Error('pending async requests below zero');\n    }\n    this._runCallbacksIfReady();\n    return this._pendingCount;\n  }\n\n  /**\n   * Whether an associated application is stable\n   */\n  isStable(): boolean {\n    return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n  }\n\n  private _runCallbacksIfReady(): void {\n    if (this.isStable()) {\n      // Schedules the call backs in a new frame so that it is always async.\n      scheduleMicroTask(() => {\n        while (this._callbacks.length !== 0) {\n          let cb = this._callbacks.pop()!;\n          clearTimeout(cb.timeoutId);\n          cb.doneCb(this._didWork);\n        }\n        this._didWork = false;\n      });\n    } else {\n      // Still not stable, send updates.\n      let pending = this.getPendingTasks();\n      this._callbacks = this._callbacks.filter((cb) => {\n        if (cb.updateCb && cb.updateCb(pending)) {\n          clearTimeout(cb.timeoutId);\n          return false;\n        }\n\n        return true;\n      });\n\n      this._didWork = true;\n    }\n  }\n\n  private getPendingTasks(): PendingMacrotask[] {\n    if (!this.taskTrackingZone) {\n      return [];\n    }\n\n    // Copy the tasks data so that we don't leak tasks.\n    return this.taskTrackingZone.macroTasks.map((t: Task) => {\n      return {\n        source: t.source,\n        // From TaskTrackingZone:\n        // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n        creationLocation: (t as any).creationLocation as Error,\n        data: t.data\n      };\n    });\n  }\n\n  private addCallback(cb: DoneCallback, timeout?: number, updateCb?: UpdateCallback) {\n    let timeoutId: any = -1;\n    if (timeout && timeout > 0) {\n      timeoutId = setTimeout(() => {\n        this._callbacks = this._callbacks.filter((cb) => cb.timeoutId !== timeoutId);\n        cb(this._didWork, this.getPendingTasks());\n      }, timeout);\n    }\n    this._callbacks.push(<WaitCallback>{doneCb: cb, timeoutId: timeoutId, updateCb: updateCb});\n  }\n\n  /**\n   * Wait for the application to be stable with a timeout. If the timeout is reached before that\n   * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n   *\n   * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n   *    whichever comes first.\n   * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n   *    specified, whenStable() will wait forever.\n   * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n   *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n   *    and no further updates will be issued.\n   */\n  whenStable(doneCb: Function, timeout?: number, updateCb?: Function): void {\n    if (updateCb && !this.taskTrackingZone) {\n      throw new Error(\n          'Task tracking zone is required when passing an update callback to ' +\n          'whenStable(). Is \"zone.js/plugins/task-tracking\" loaded?');\n    }\n    // These arguments are 'Function' above to keep the public API simple.\n    this.addCallback(doneCb as DoneCallback, timeout, updateCb as UpdateCallback);\n    this._runCallbacksIfReady();\n  }\n\n  /**\n   * Get the number of pending requests\n   * @deprecated pending requests are now tracked with zones\n   */\n  getPendingRequestCount(): number {\n    return this._pendingCount;\n  }\n  /**\n   * Registers an application with a testability hook so that it can be tracked.\n   * @param token token of application, root element\n   *\n   * @internal\n   */\n  registerApplication(token: any) {\n    this.registry.registerApplication(token, this);\n  }\n\n  /**\n   * Unregisters an application.\n   * @param token token of application, root element\n   *\n   * @internal\n   */\n  unregisterApplication(token: any) {\n    this.registry.unregisterApplication(token);\n  }\n\n  /**\n   * Find providers by name\n   * @param using The root element to search from\n   * @param provider The name of binding variable\n   * @param exactMatch Whether using exactMatch\n   */\n  findProviders(using: any, provider: string, exactMatch: boolean): any[] {\n    // TODO(juliemr): implement.\n    return [];\n  }\n}\n\n/**\n * A global registry of {@link Testability} instances for specific elements.\n * @publicApi\n */\n@Injectable({providedIn: 'platform'})\nexport class TestabilityRegistry {\n  /** @internal */\n  _applications = new Map<any, Testability>();\n\n  /**\n   * Registers an application with a testability hook so that it can be tracked\n   * @param token token of application, root element\n   * @param testability Testability hook\n   */\n  registerApplication(token: any, testability: Testability) {\n    this._applications.set(token, testability);\n  }\n\n  /**\n   * Unregisters an application.\n   * @param token token of application, root element\n   */\n  unregisterApplication(token: any) {\n    this._applications.delete(token);\n  }\n\n  /**\n   * Unregisters all applications\n   */\n  unregisterAllApplications() {\n    this._applications.clear();\n  }\n\n  /**\n   * Get a testability hook associated with the application\n   * @param elem root element\n   */\n  getTestability(elem: any): Testability|null {\n    return this._applications.get(elem) || null;\n  }\n\n  /**\n   * Get all registered testabilities\n   */\n  getAllTestabilities(): Testability[] {\n    return Array.from(this._applications.values());\n  }\n\n  /**\n   * Get all registered applications(root elements)\n   */\n  getAllRootElements(): any[] {\n    return Array.from(this._applications.keys());\n  }\n\n  /**\n   * Find testability of a node in the Tree\n   * @param elem node\n   * @param findInAncestors whether finding testability in ancestors if testability was not found in\n   * current node\n   */\n  findTestabilityInTree(elem: Node, findInAncestors: boolean = true): Testability|null {\n    return _testabilityGetter?.findTestabilityInTree(this, elem, findInAncestors) ?? null;\n  }\n}\n\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * @publicApi\n */\nexport interface GetTestability {\n  addToWindow(registry: TestabilityRegistry): void;\n  findTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability|null;\n}\n\n/**\n * Set the {@link GetTestability} implementation used by the Angular testing framework.\n * @publicApi\n */\nexport function setTestabilityGetter(getter: GetTestability): void {\n  _testabilityGetter = getter;\n}\n\nlet _testabilityGetter: GetTestability|undefined;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport './util/ng_jit_mode';\n\nimport {merge, Observable, Observer, Subscription} from 'rxjs';\nimport {share} from 'rxjs/operators';\n\nimport {ApplicationInitStatus} from './application_init';\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_INITIALIZER} from './application_tokens';\nimport {getCompilerFacade, JitCompilerUsage} from './compiler/compiler_facade';\nimport {Console} from './console';\nimport {Injectable} from './di/injectable';\nimport {InjectionToken} from './di/injection_token';\nimport {Injector} from './di/injector';\nimport {ImportedNgModuleProviders, Provider, StaticProvider} from './di/interface/provider';\nimport {EnvironmentInjector} from './di/r3_injector';\nimport {INJECTOR_SCOPE} from './di/scope';\nimport {ErrorHandler} from './error_handler';\nimport {formatRuntimeError, RuntimeError, RuntimeErrorCode} from './errors';\nimport {DEFAULT_LOCALE_ID} from './i18n/localization';\nimport {LOCALE_ID} from './i18n/tokens';\nimport {Type} from './interface/type';\nimport {COMPILER_OPTIONS, CompilerOptions} from './linker/compiler';\nimport {ComponentFactory, ComponentRef} from './linker/component_factory';\nimport {ComponentFactoryResolver} from './linker/component_factory_resolver';\nimport {InternalNgModuleRef, NgModuleFactory, NgModuleRef} from './linker/ng_module_factory';\nimport {InternalViewRef, ViewRef} from './linker/view_ref';\nimport {isComponentResourceResolutionQueueEmpty, resolveComponentResources} from './metadata/resource_loading';\nimport {assertNgModuleType} from './render3/assert';\nimport {ComponentFactory as R3ComponentFactory} from './render3/component_ref';\nimport {assertStandaloneComponentType} from './render3/errors';\nimport {setLocaleId} from './render3/i18n/i18n_locale_id';\nimport {setJitOptions} from './render3/jit/jit_options';\nimport {isStandalone} from './render3/jit/module';\nimport {createEnvironmentInjector, NgModuleFactory as R3NgModuleFactory} from './render3/ng_module_ref';\nimport {publishDefaultGlobalUtils as _publishDefaultGlobalUtils} from './render3/util/global_utils';\nimport {TESTABILITY} from './testability/testability';\nimport {isPromise} from './util/lang';\nimport {scheduleMicroTask} from './util/microtask';\nimport {stringify} from './util/stringify';\nimport {NgZone, NoopNgZone} from './zone/ng_zone';\n\nlet _platformInjector: Injector|null = null;\n\n/**\n * Internal token to indicate whether having multiple bootstrapped platform should be allowed (only\n * one bootstrapped platform is allowed by default). This token helps to support SSR scenarios.\n */\nexport const ALLOW_MULTIPLE_PLATFORMS = new InjectionToken<boolean>('AllowMultipleToken');\n\n/**\n * Internal token that allows to register extra callbacks that should be invoked during the\n * `PlatformRef.destroy` operation. This token is needed to avoid a direct reference to the\n * `PlatformRef` class (i.e. register the callback via `PlatformRef.onDestroy`), thus making the\n * entire class tree-shakeable.\n */\nconst PLATFORM_DESTROY_LISTENERS =\n    new InjectionToken<Set<VoidFunction>>('PlatformDestroyListeners');\n\nconst NG_DEV_MODE = typeof ngDevMode === 'undefined' || ngDevMode;\n\nexport function compileNgModuleFactory<M>(\n    injector: Injector, options: CompilerOptions,\n    moduleType: Type<M>): Promise<NgModuleFactory<M>> {\n  ngDevMode && assertNgModuleType(moduleType);\n\n  const moduleFactory = new R3NgModuleFactory(moduleType);\n\n  // All of the logic below is irrelevant for AOT-compiled code.\n  if (typeof ngJitMode !== 'undefined' && !ngJitMode) {\n    return Promise.resolve(moduleFactory);\n  }\n\n  const compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n\n  // Configure the compiler to use the provided options. This call may fail when multiple modules\n  // are bootstrapped with incompatible options, as a component can only be compiled according to\n  // a single set of options.\n  setJitOptions({\n    defaultEncapsulation: _lastDefined(compilerOptions.map(opts => opts.defaultEncapsulation)),\n    preserveWhitespaces: _lastDefined(compilerOptions.map(opts => opts.preserveWhitespaces)),\n  });\n\n  if (isComponentResourceResolutionQueueEmpty()) {\n    return Promise.resolve(moduleFactory);\n  }\n\n  const compilerProviders = _mergeArrays(compilerOptions.map(o => o.providers!));\n\n  // In case there are no compiler providers, we just return the module factory as\n  // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n  // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n  // unnecessarily require the JIT compiler.\n  if (compilerProviders.length === 0) {\n    return Promise.resolve(moduleFactory);\n  }\n\n  const compiler = getCompilerFacade({\n    usage: JitCompilerUsage.Decorator,\n    kind: 'NgModule',\n    type: moduleType,\n  });\n  const compilerInjector = Injector.create({providers: compilerProviders});\n  const resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n  // The resource loader can also return a string while the \"resolveComponentResources\"\n  // always expects a promise. Therefore we need to wrap the returned value in a promise.\n  return resolveComponentResources(url => Promise.resolve(resourceLoader.get(url)))\n      .then(() => moduleFactory);\n}\n\nexport function publishDefaultGlobalUtils() {\n  ngDevMode && _publishDefaultGlobalUtils();\n}\n\nexport function isBoundToModule<C>(cf: ComponentFactory<C>): boolean {\n  return (cf as R3ComponentFactory<C>).isBoundToModule;\n}\n\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * @publicApi\n */\nexport class NgProbeToken {\n  constructor(public name: string, public token: any) {}\n}\n\n/**\n * Creates a platform.\n * Platforms must be created on launch using this function.\n *\n * @publicApi\n */\nexport function createPlatform(injector: Injector): PlatformRef {\n  if (_platformInjector && !_platformInjector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n    throw new RuntimeError(\n        RuntimeErrorCode.MULTIPLE_PLATFORMS,\n        ngDevMode &&\n            'There can be only one platform. Destroy the previous one to create a new one.');\n  }\n  publishDefaultGlobalUtils();\n  _platformInjector = injector;\n  const platform = injector.get(PlatformRef);\n  runPlatformInitializers(injector);\n  return platform;\n}\n\n/**\n * The goal of this function is to bootstrap a platform injector,\n * but avoid referencing `PlatformRef` class.\n * This function is needed for bootstrapping a Standalone Component.\n */\nexport function createOrReusePlatformInjector(providers: StaticProvider[] = []): Injector {\n  // If a platform injector already exists, it means that the platform\n  // is already bootstrapped and no additional actions are required.\n  if (_platformInjector) return _platformInjector;\n\n  // Otherwise, setup a new platform injector and run platform initializers.\n  const injector = createPlatformInjector(providers);\n  _platformInjector = injector;\n  publishDefaultGlobalUtils();\n  runPlatformInitializers(injector);\n  return injector;\n}\n\nexport function runPlatformInitializers(injector: Injector): void {\n  const inits = injector.get(PLATFORM_INITIALIZER, null);\n  if (inits) {\n    inits.forEach((init: any) => init());\n  }\n}\n\n/**\n * Internal bootstrap application API that implements the core bootstrap logic.\n *\n * Platforms (such as `platform-browser`) may require different set of application and platform\n * providers for an application to function correctly. As a result, platforms may use this function\n * internally and supply the necessary providers during the bootstrap, while exposing\n * platform-specific APIs as a part of their public API.\n *\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n */\nexport function internalBootstrapApplication(config: {\n  rootComponent: Type<unknown>,\n  appProviders?: Array<Provider|ImportedNgModuleProviders>,\n  platformProviders?: Provider[],\n}): Promise<ApplicationRef> {\n  const {rootComponent, appProviders, platformProviders} = config;\n  NG_DEV_MODE && assertStandaloneComponentType(rootComponent);\n\n  const platformInjector = createOrReusePlatformInjector(platformProviders as StaticProvider[]);\n\n  const ngZone = new NgZone(getNgZoneOptions());\n\n  return ngZone.run(() => {\n    // Create root application injector based on a set of providers configured at the platform\n    // bootstrap level as well as providers passed to the bootstrap call by a user.\n    const allAppProviders = [\n      {provide: NgZone, useValue: ngZone},  //\n      ...(appProviders || []),              //\n    ];\n    const appInjector = createEnvironmentInjector(\n        allAppProviders, platformInjector as EnvironmentInjector, 'Environment Injector');\n\n    const exceptionHandler: ErrorHandler|null = appInjector.get(ErrorHandler, null);\n    if (NG_DEV_MODE && !exceptionHandler) {\n      throw new RuntimeError(\n          RuntimeErrorCode.ERROR_HANDLER_NOT_FOUND,\n          'No `ErrorHandler` found in the Dependency Injection tree.');\n    }\n\n    let onErrorSubscription: Subscription;\n    ngZone.runOutsideAngular(() => {\n      onErrorSubscription = ngZone.onError.subscribe({\n        next: (error: any) => {\n          exceptionHandler!.handleError(error);\n        }\n      });\n    });\n    return _callAndReportToErrorHandler(exceptionHandler!, ngZone, () => {\n      const initStatus = appInjector.get(ApplicationInitStatus);\n      initStatus.runInitializers();\n      return initStatus.donePromise.then(() => {\n        const localeId = appInjector.get(LOCALE_ID, DEFAULT_LOCALE_ID);\n        setLocaleId(localeId || DEFAULT_LOCALE_ID);\n\n        const appRef = appInjector.get(ApplicationRef);\n\n        // If the whole platform is destroyed, invoke the `destroy` method\n        // for all bootstrapped applications as well.\n        const destroyListener = () => appRef.destroy();\n        const onPlatformDestroyListeners = platformInjector.get(PLATFORM_DESTROY_LISTENERS, null);\n        onPlatformDestroyListeners?.add(destroyListener);\n\n        appRef.onDestroy(() => {\n          onPlatformDestroyListeners?.delete(destroyListener);\n          onErrorSubscription.unsubscribe();\n        });\n\n        appRef.bootstrap(rootComponent);\n        return appRef;\n      });\n    });\n  });\n}\n\n/**\n * Creates a factory for a platform. Can be used to provide or override `Providers` specific to\n * your application's runtime needs, such as `PLATFORM_INITIALIZER` and `PLATFORM_ID`.\n * @param parentPlatformFactory Another platform factory to modify. Allows you to compose factories\n * to build up configurations that might be required by different libraries or parts of the\n * application.\n * @param name Identifies the new platform factory.\n * @param providers A set of dependency providers for platforms created with the new factory.\n *\n * @publicApi\n */\nexport function createPlatformFactory(\n    parentPlatformFactory: ((extraProviders?: StaticProvider[]) => PlatformRef)|null, name: string,\n    providers: StaticProvider[] = []): (extraProviders?: StaticProvider[]) => PlatformRef {\n  const desc = `Platform: ${name}`;\n  const marker = new InjectionToken(desc);\n  return (extraProviders: StaticProvider[] = []) => {\n    let platform = getPlatform();\n    if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n      const platformProviders: StaticProvider[] = [\n        ...providers,       //\n        ...extraProviders,  //\n        {provide: marker, useValue: true}\n      ];\n      if (parentPlatformFactory) {\n        parentPlatformFactory(platformProviders);\n      } else {\n        createPlatform(createPlatformInjector(platformProviders, desc));\n      }\n    }\n    return assertPlatform(marker);\n  };\n}\n\n/**\n * Checks that there is currently a platform that contains the given token as a provider.\n *\n * @publicApi\n */\nexport function assertPlatform(requiredToken: any): PlatformRef {\n  const platform = getPlatform();\n\n  if (!platform) {\n    throw new RuntimeError(RuntimeErrorCode.PLATFORM_NOT_FOUND, ngDevMode && 'No platform exists!');\n  }\n\n  if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n      !platform.injector.get(requiredToken, null)) {\n    throw new RuntimeError(\n        RuntimeErrorCode.MULTIPLE_PLATFORMS,\n        'A platform with a different configuration has been created. Please destroy it first.');\n  }\n\n  return platform;\n}\n\n/**\n * Helper function to create an instance of a platform injector (that maintains the 'platform'\n * scope).\n */\nexport function createPlatformInjector(providers: StaticProvider[] = [], name?: string): Injector {\n  return Injector.create({\n    name,\n    providers: [\n      {provide: INJECTOR_SCOPE, useValue: 'platform'},\n      {provide: PLATFORM_DESTROY_LISTENERS, useValue: new Set([() => _platformInjector = null])},\n      ...providers\n    ],\n  });\n}\n\n/**\n * Destroys the current Angular platform and all Angular applications on the page.\n * Destroys all modules and listeners registered with the platform.\n *\n * @publicApi\n */\nexport function destroyPlatform(): void {\n  getPlatform()?.destroy();\n}\n\n/**\n * Returns the current platform.\n *\n * @publicApi\n */\nexport function getPlatform(): PlatformRef|null {\n  return _platformInjector?.get(PlatformRef) ?? null;\n}\n\n/**\n * Provides additional options to the bootstrapping process.\n *\n * @publicApi\n */\nexport interface BootstrapOptions {\n  /**\n   * Optionally specify which `NgZone` should be used.\n   *\n   * - Provide your own `NgZone` instance.\n   * - `zone.js` - Use default `NgZone` which requires `Zone.js`.\n   * - `noop` - Use `NoopNgZone` which does nothing.\n   */\n  ngZone?: NgZone|'zone.js'|'noop';\n\n  /**\n   * Optionally specify coalescing event change detections or not.\n   * Consider the following case.\n   *\n   * <div (click)=\"doSomething()\">\n   *   <button (click)=\"doSomethingElse()\"></button>\n   * </div>\n   *\n   * When button is clicked, because of the event bubbling, both\n   * event handlers will be called and 2 change detections will be\n   * triggered. We can coalesce such kind of events to only trigger\n   * change detection only once.\n   *\n   * By default, this option will be false. So the events will not be\n   * coalesced and the change detection will be triggered multiple times.\n   * And if this option be set to true, the change detection will be\n   * triggered async by scheduling a animation frame. So in the case above,\n   * the change detection will only be triggered once.\n   */\n  ngZoneEventCoalescing?: boolean;\n\n  /**\n   * Optionally specify if `NgZone#run()` method invocations should be coalesced\n   * into a single change detection.\n   *\n   * Consider the following case.\n   *\n   * for (let i = 0; i < 10; i ++) {\n   *   ngZone.run(() => {\n   *     // do something\n   *   });\n   * }\n   *\n   * This case triggers the change detection multiple times.\n   * With ngZoneRunCoalescing options, all change detections in an event loop trigger only once.\n   * In addition, the change detection executes in requestAnimation.\n   *\n   */\n  ngZoneRunCoalescing?: boolean;\n}\n\n/**\n * The Angular platform is the entry point for Angular on a web page.\n * Each page has exactly one platform. Services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n * A page's platform is initialized implicitly when a platform is created using a platform\n * factory such as `PlatformBrowser`, or explicitly by calling the `createPlatform()` function.\n *\n * @publicApi\n */\n@Injectable({providedIn: 'platform'})\nexport class PlatformRef {\n  private _modules: NgModuleRef<any>[] = [];\n  private _destroyListeners: Array<() => void> = [];\n  private _destroyed: boolean = false;\n\n  /** @internal */\n  constructor(private _injector: Injector) {}\n\n  /**\n   * Creates an instance of an `@NgModule` for the given platform.\n   *\n   * @deprecated Passing NgModule factories as the `PlatformRef.bootstrapModuleFactory` function\n   *     argument is deprecated. Use the `PlatformRef.bootstrapModule` API instead.\n   */\n  bootstrapModuleFactory<M>(moduleFactory: NgModuleFactory<M>, options?: BootstrapOptions):\n      Promise<NgModuleRef<M>> {\n    // Note: We need to create the NgZone _before_ we instantiate the module,\n    // as instantiating the module creates some providers eagerly.\n    // So we create a mini parent injector that just contains the new NgZone and\n    // pass that as parent to the NgModuleFactory.\n    const ngZone = getNgZone(options?.ngZone, getNgZoneOptions(options));\n    const providers: StaticProvider[] = [{provide: NgZone, useValue: ngZone}];\n    // Note: Create ngZoneInjector within ngZone.run so that all of the instantiated services are\n    // created within the Angular zone\n    // Do not try to replace ngZone.run with ApplicationRef#run because ApplicationRef would then be\n    // created outside of the Angular zone.\n    return ngZone.run(() => {\n      const ngZoneInjector = Injector.create(\n          {providers: providers, parent: this.injector, name: moduleFactory.moduleType.name});\n      const moduleRef = <InternalNgModuleRef<M>>moduleFactory.create(ngZoneInjector);\n      const exceptionHandler: ErrorHandler|null = moduleRef.injector.get(ErrorHandler, null);\n      if (!exceptionHandler) {\n        throw new RuntimeError(\n            RuntimeErrorCode.ERROR_HANDLER_NOT_FOUND,\n            ngDevMode && 'No ErrorHandler. Is platform module (BrowserModule) included?');\n      }\n      ngZone!.runOutsideAngular(() => {\n        const subscription = ngZone!.onError.subscribe({\n          next: (error: any) => {\n            exceptionHandler.handleError(error);\n          }\n        });\n        moduleRef.onDestroy(() => {\n          remove(this._modules, moduleRef);\n          subscription.unsubscribe();\n        });\n      });\n      return _callAndReportToErrorHandler(exceptionHandler, ngZone!, () => {\n        const initStatus: ApplicationInitStatus = moduleRef.injector.get(ApplicationInitStatus);\n        initStatus.runInitializers();\n        return initStatus.donePromise.then(() => {\n          // If the `LOCALE_ID` provider is defined at bootstrap then we set the value for ivy\n          const localeId = moduleRef.injector.get(LOCALE_ID, DEFAULT_LOCALE_ID);\n          setLocaleId(localeId || DEFAULT_LOCALE_ID);\n          this._moduleDoBootstrap(moduleRef);\n          return moduleRef;\n        });\n      });\n    });\n  }\n\n  /**\n   * Creates an instance of an `@NgModule` for a given platform.\n   *\n   * @usageNotes\n   * ### Simple Example\n   *\n   * ```typescript\n   * @NgModule({\n   *   imports: [BrowserModule]\n   * })\n   * class MyModule {}\n   *\n   * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n   * ```\n   *\n   */\n  bootstrapModule<M>(\n      moduleType: Type<M>,\n      compilerOptions: (CompilerOptions&BootstrapOptions)|\n      Array<CompilerOptions&BootstrapOptions> = []): Promise<NgModuleRef<M>> {\n    const options = optionsReducer({}, compilerOptions);\n    return compileNgModuleFactory(this.injector, options, moduleType)\n        .then(moduleFactory => this.bootstrapModuleFactory(moduleFactory, options));\n  }\n\n  private _moduleDoBootstrap(moduleRef: InternalNgModuleRef<any>): void {\n    const appRef = moduleRef.injector.get(ApplicationRef) as ApplicationRef;\n    if (moduleRef._bootstrapComponents.length > 0) {\n      moduleRef._bootstrapComponents.forEach(f => appRef.bootstrap(f));\n    } else if (moduleRef.instance.ngDoBootstrap) {\n      moduleRef.instance.ngDoBootstrap(appRef);\n    } else {\n      throw new RuntimeError(\n          RuntimeErrorCode.BOOTSTRAP_COMPONENTS_NOT_FOUND,\n          ngDevMode &&\n              `The module ${stringify(moduleRef.instance.constructor)} was bootstrapped, ` +\n                  `but it does not declare \"@NgModule.bootstrap\" components nor a \"ngDoBootstrap\" method. ` +\n                  `Please define one of these.`);\n    }\n    this._modules.push(moduleRef);\n  }\n\n  /**\n   * Registers a listener to be called when the platform is destroyed.\n   */\n  onDestroy(callback: () => void): void {\n    this._destroyListeners.push(callback);\n  }\n\n  /**\n   * Retrieves the platform {@link Injector}, which is the parent injector for\n   * every Angular application on the page and provides singleton providers.\n   */\n  get injector(): Injector {\n    return this._injector;\n  }\n\n  /**\n   * Destroys the current Angular platform and all Angular applications on the page.\n   * Destroys all modules and listeners registered with the platform.\n   */\n  destroy() {\n    if (this._destroyed) {\n      throw new RuntimeError(\n          RuntimeErrorCode.PLATFORM_ALREADY_DESTROYED,\n          ngDevMode && 'The platform has already been destroyed!');\n    }\n    this._modules.slice().forEach(module => module.destroy());\n    this._destroyListeners.forEach(listener => listener());\n\n    const destroyListeners = this._injector.get(PLATFORM_DESTROY_LISTENERS, null);\n    if (destroyListeners) {\n      destroyListeners.forEach(listener => listener());\n      destroyListeners.clear();\n    }\n\n    this._destroyed = true;\n  }\n\n  /**\n   * Indicates whether this instance was destroyed.\n   */\n  get destroyed() {\n    return this._destroyed;\n  }\n}\n\n// Set of options recognized by the NgZone.\ninterface NgZoneOptions {\n  enableLongStackTrace: boolean;\n  shouldCoalesceEventChangeDetection: boolean;\n  shouldCoalesceRunChangeDetection: boolean;\n}\n\n// Transforms a set of `BootstrapOptions` (supported by the NgModule-based bootstrap APIs) ->\n// `NgZoneOptions` that are recognized by the NgZone constructor. Passing no options will result in\n// a set of default options returned.\nfunction getNgZoneOptions(options?: BootstrapOptions): NgZoneOptions {\n  return {\n    enableLongStackTrace: typeof ngDevMode === 'undefined' ? false : !!ngDevMode,\n    shouldCoalesceEventChangeDetection: !!(options && options.ngZoneEventCoalescing) || false,\n    shouldCoalesceRunChangeDetection: !!(options && options.ngZoneRunCoalescing) || false,\n  };\n}\n\nfunction getNgZone(ngZoneToUse: NgZone|'zone.js'|'noop'|undefined, options: NgZoneOptions): NgZone {\n  let ngZone: NgZone;\n\n  if (ngZoneToUse === 'noop') {\n    ngZone = new NoopNgZone();\n  } else {\n    ngZone = (ngZoneToUse === 'zone.js' ? undefined : ngZoneToUse) || new NgZone(options);\n  }\n  return ngZone;\n}\n\nfunction _callAndReportToErrorHandler(\n    errorHandler: ErrorHandler, ngZone: NgZone, callback: () => any): any {\n  try {\n    const result = callback();\n    if (isPromise(result)) {\n      return result.catch((e: any) => {\n        ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n        // rethrow as the exception handler might not do it\n        throw e;\n      });\n    }\n\n    return result;\n  } catch (e) {\n    ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n    // rethrow as the exception handler might not do it\n    throw e;\n  }\n}\n\nfunction optionsReducer<T extends Object>(dst: any, objs: T|T[]): T {\n  if (Array.isArray(objs)) {\n    dst = objs.reduce(optionsReducer, dst);\n  } else {\n    dst = {...dst, ...(objs as any)};\n  }\n  return dst;\n}\n\n/**\n * A reference to an Angular application running on a page.\n *\n * @usageNotes\n *\n * {@a is-stable-examples}\n * ### isStable examples and caveats\n *\n * Note two important points about `isStable`, demonstrated in the examples below:\n * - the application will never be stable if you start any kind\n * of recurrent asynchronous task when the application starts\n * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n * or using RxJS operators like `interval`);\n * - the `isStable` Observable runs outside of the Angular zone.\n *\n * Let's imagine that you start a recurrent task\n * (here incrementing a counter, using RxJS `interval`),\n * and at the same time subscribe to `isStable`.\n *\n * ```\n * constructor(appRef: ApplicationRef) {\n *   appRef.isStable.pipe(\n *      filter(stable => stable)\n *   ).subscribe(() => console.log('App is stable now');\n *   interval(1000).subscribe(counter => console.log(counter));\n * }\n * ```\n * In this example, `isStable` will never emit `true`,\n * and the trace \"App is stable now\" will never get logged.\n *\n * If you want to execute something when the app is stable,\n * you have to wait for the application to be stable\n * before starting your polling process.\n *\n * ```\n * constructor(appRef: ApplicationRef) {\n *   appRef.isStable.pipe(\n *     first(stable => stable),\n *     tap(stable => console.log('App is stable now')),\n *     switchMap(() => interval(1000))\n *   ).subscribe(counter => console.log(counter));\n * }\n * ```\n * In this example, the trace \"App is stable now\" will be logged\n * and then the counter starts incrementing every second.\n *\n * Note also that this Observable runs outside of the Angular zone,\n * which means that the code in the subscription\n * to this Observable will not trigger the change detection.\n *\n * Let's imagine that instead of logging the counter value,\n * you update a field of your component\n * and display it in its template.\n *\n * ```\n * constructor(appRef: ApplicationRef) {\n *   appRef.isStable.pipe(\n *     first(stable => stable),\n *     switchMap(() => interval(1000))\n *   ).subscribe(counter => this.value = counter);\n * }\n * ```\n * As the `isStable` Observable runs outside the zone,\n * the `value` field will be updated properly,\n * but the template will not be refreshed!\n *\n * You'll have to manually trigger the change detection to update the template.\n *\n * ```\n * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n *   appRef.isStable.pipe(\n *     first(stable => stable),\n *     switchMap(() => interval(1000))\n *   ).subscribe(counter => {\n *     this.value = counter;\n *     cd.detectChanges();\n *   });\n * }\n * ```\n *\n * Or make the subscription callback run inside the zone.\n *\n * ```\n * constructor(appRef: ApplicationRef, zone: NgZone) {\n *   appRef.isStable.pipe(\n *     first(stable => stable),\n *     switchMap(() => interval(1000))\n *   ).subscribe(counter => zone.run(() => this.value = counter));\n * }\n * ```\n *\n * @publicApi\n */\n@Injectable({providedIn: 'root'})\nexport class ApplicationRef {\n  /** @internal */\n  private _bootstrapListeners: ((compRef: ComponentRef<any>) => void)[] = [];\n  private _views: InternalViewRef[] = [];\n  private _runningTick: boolean = false;\n  private _stable = true;\n  private _onMicrotaskEmptySubscription: Subscription;\n  private _destroyed = false;\n  private _destroyListeners: Array<() => void> = [];\n\n  /**\n   * Indicates whether this instance was destroyed.\n   */\n  get destroyed() {\n    return this._destroyed;\n  }\n\n  /**\n   * Get a list of component types registered to this application.\n   * This list is populated even before the component is created.\n   */\n  public readonly componentTypes: Type<any>[] = [];\n\n  /**\n   * Get a list of components registered to this application.\n   */\n  public readonly components: ComponentRef<any>[] = [];\n\n  /**\n   * Returns an Observable that indicates when the application is stable or unstable.\n   *\n   * @see  [Usage notes](#is-stable-examples) for examples and caveats when using this API.\n   */\n  // TODO(issue/24571): remove '!'.\n  public readonly isStable!: Observable<boolean>;\n\n  /**\n   * The `EnvironmentInjector` used to create this application.\n   */\n  get injector(): EnvironmentInjector {\n    return this._injector;\n  }\n\n  /** @internal */\n  constructor(\n      private _zone: NgZone,\n      private _injector: EnvironmentInjector,\n      private _exceptionHandler: ErrorHandler,\n  ) {\n    this._onMicrotaskEmptySubscription = this._zone.onMicrotaskEmpty.subscribe({\n      next: () => {\n        this._zone.run(() => {\n          this.tick();\n        });\n      }\n    });\n\n    const isCurrentlyStable = new Observable<boolean>((observer: Observer<boolean>) => {\n      this._stable = this._zone.isStable && !this._zone.hasPendingMacrotasks &&\n          !this._zone.hasPendingMicrotasks;\n      this._zone.runOutsideAngular(() => {\n        observer.next(this._stable);\n        observer.complete();\n      });\n    });\n\n    const isStable = new Observable<boolean>((observer: Observer<boolean>) => {\n      // Create the subscription to onStable outside the Angular Zone so that\n      // the callback is run outside the Angular Zone.\n      let stableSub: Subscription;\n      this._zone.runOutsideAngular(() => {\n        stableSub = this._zone.onStable.subscribe(() => {\n          NgZone.assertNotInAngularZone();\n\n          // Check whether there are no pending macro/micro tasks in the next tick\n          // to allow for NgZone to update the state.\n          scheduleMicroTask(() => {\n            if (!this._stable && !this._zone.hasPendingMacrotasks &&\n                !this._zone.hasPendingMicrotasks) {\n              this._stable = true;\n              observer.next(true);\n            }\n          });\n        });\n      });\n\n      const unstableSub: Subscription = this._zone.onUnstable.subscribe(() => {\n        NgZone.assertInAngularZone();\n        if (this._stable) {\n          this._stable = false;\n          this._zone.runOutsideAngular(() => {\n            observer.next(false);\n          });\n        }\n      });\n\n      return () => {\n        stableSub.unsubscribe();\n        unstableSub.unsubscribe();\n      };\n    });\n\n    (this as {isStable: Observable<boolean>}).isStable =\n        merge(isCurrentlyStable, isStable.pipe(share()));\n  }\n\n  /**\n   * Bootstrap a component onto the element identified by its selector or, optionally, to a\n   * specified element.\n   *\n   * @usageNotes\n   * ### Bootstrap process\n   *\n   * When bootstrapping a component, Angular mounts it onto a target DOM element\n   * and kicks off automatic change detection. The target DOM element can be\n   * provided using the `rootSelectorOrNode` argument.\n   *\n   * If the target DOM element is not provided, Angular tries to find one on a page\n   * using the `selector` of the component that is being bootstrapped\n   * (first matched element is used).\n   *\n   * ### Example\n   *\n   * Generally, we define the component to bootstrap in the `bootstrap` array of `NgModule`,\n   * but it requires us to know the component while writing the application code.\n   *\n   * Imagine a situation where we have to wait for an API call to decide about the component to\n   * bootstrap. We can use the `ngDoBootstrap` hook of the `NgModule` and call this method to\n   * dynamically bootstrap a component.\n   *\n   * {@example core/ts/platform/platform.ts region='componentSelector'}\n   *\n   * Optionally, a component can be mounted onto a DOM element that does not match the\n   * selector of the bootstrapped component.\n   *\n   * In the following example, we are providing a CSS selector to match the target element.\n   *\n   * {@example core/ts/platform/platform.ts region='cssSelector'}\n   *\n   * While in this example, we are providing reference to a DOM node.\n   *\n   * {@example core/ts/platform/platform.ts region='domNode'}\n   */\n  bootstrap<C>(component: Type<C>, rootSelectorOrNode?: string|any): ComponentRef<C>;\n\n  /**\n   * Bootstrap a component onto the element identified by its selector or, optionally, to a\n   * specified element.\n   *\n   * @usageNotes\n   * ### Bootstrap process\n   *\n   * When bootstrapping a component, Angular mounts it onto a target DOM element\n   * and kicks off automatic change detection. The target DOM element can be\n   * provided using the `rootSelectorOrNode` argument.\n   *\n   * If the target DOM element is not provided, Angular tries to find one on a page\n   * using the `selector` of the component that is being bootstrapped\n   * (first matched element is used).\n   *\n   * ### Example\n   *\n   * Generally, we define the component to bootstrap in the `bootstrap` array of `NgModule`,\n   * but it requires us to know the component while writing the application code.\n   *\n   * Imagine a situation where we have to wait for an API call to decide about the component to\n   * bootstrap. We can use the `ngDoBootstrap` hook of the `NgModule` and call this method to\n   * dynamically bootstrap a component.\n   *\n   * {@example core/ts/platform/platform.ts region='componentSelector'}\n   *\n   * Optionally, a component can be mounted onto a DOM element that does not match the\n   * selector of the bootstrapped component.\n   *\n   * In the following example, we are providing a CSS selector to match the target element.\n   *\n   * {@example core/ts/platform/platform.ts region='cssSelector'}\n   *\n   * While in this example, we are providing reference to a DOM node.\n   *\n   * {@example core/ts/platform/platform.ts region='domNode'}\n   *\n   * @deprecated Passing Component factories as the `Application.bootstrap` function argument is\n   *     deprecated. Pass Component Types instead.\n   */\n  bootstrap<C>(componentFactory: ComponentFactory<C>, rootSelectorOrNode?: string|any):\n      ComponentRef<C>;\n\n  /**\n   * Bootstrap a component onto the element identified by its selector or, optionally, to a\n   * specified element.\n   *\n   * @usageNotes\n   * ### Bootstrap process\n   *\n   * When bootstrapping a component, Angular mounts it onto a target DOM element\n   * and kicks off automatic change detection. The target DOM element can be\n   * provided using the `rootSelectorOrNode` argument.\n   *\n   * If the target DOM element is not provided, Angular tries to find one on a page\n   * using the `selector` of the component that is being bootstrapped\n   * (first matched element is used).\n   *\n   * ### Example\n   *\n   * Generally, we define the component to bootstrap in the `bootstrap` array of `NgModule`,\n   * but it requires us to know the component while writing the application code.\n   *\n   * Imagine a situation where we have to wait for an API call to decide about the component to\n   * bootstrap. We can use the `ngDoBootstrap` hook of the `NgModule` and call this method to\n   * dynamically bootstrap a component.\n   *\n   * {@example core/ts/platform/platform.ts region='componentSelector'}\n   *\n   * Optionally, a component can be mounted onto a DOM element that does not match the\n   * selector of the bootstrapped component.\n   *\n   * In the following example, we are providing a CSS selector to match the target element.\n   *\n   * {@example core/ts/platform/platform.ts region='cssSelector'}\n   *\n   * While in this example, we are providing reference to a DOM node.\n   *\n   * {@example core/ts/platform/platform.ts region='domNode'}\n   */\n  bootstrap<C>(componentOrFactory: ComponentFactory<C>|Type<C>, rootSelectorOrNode?: string|any):\n      ComponentRef<C> {\n    NG_DEV_MODE && this.warnIfDestroyed();\n    const isComponentFactory = componentOrFactory instanceof ComponentFactory;\n    const initStatus = this._injector.get(ApplicationInitStatus);\n\n    if (!initStatus.done) {\n      const standalone = !isComponentFactory && isStandalone(componentOrFactory);\n      const errorMessage =\n          'Cannot bootstrap as there are still asynchronous initializers running.' +\n          (standalone ? '' :\n                        ' Bootstrap components in the `ngDoBootstrap` method of the root module.');\n      throw new RuntimeError(\n          RuntimeErrorCode.ASYNC_INITIALIZERS_STILL_RUNNING, NG_DEV_MODE && errorMessage);\n    }\n\n    let componentFactory: ComponentFactory<C>;\n    if (isComponentFactory) {\n      componentFactory = componentOrFactory;\n    } else {\n      const resolver = this._injector.get(ComponentFactoryResolver);\n      componentFactory = resolver.resolveComponentFactory(componentOrFactory)!;\n    }\n    this.componentTypes.push(componentFactory.componentType);\n\n    // Create a factory associated with the current module if it's not bound to some other\n    const ngModule =\n        isBoundToModule(componentFactory) ? undefined : this._injector.get(NgModuleRef);\n    const selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n    const compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n    const nativeElement = compRef.location.nativeElement;\n    const testability = compRef.injector.get(TESTABILITY, null);\n    testability?.registerApplication(nativeElement);\n\n    compRef.onDestroy(() => {\n      this.detachView(compRef.hostView);\n      remove(this.components, compRef);\n      testability?.unregisterApplication(nativeElement);\n    });\n\n    this._loadComponent(compRef);\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      const _console = this._injector.get(Console);\n      _console.log(\n          `Angular is running in development mode. Call enableProdMode() to enable production mode.`);\n    }\n    return compRef;\n  }\n\n  /**\n   * Invoke this method to explicitly process change detection and its side-effects.\n   *\n   * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n   * further changes are detected. If additional changes are picked up during this second cycle,\n   * bindings in the app have side-effects that cannot be resolved in a single change detection\n   * pass.\n   * In this case, Angular throws an error, since an Angular application can only have one change\n   * detection pass during which all change detection must complete.\n   */\n  tick(): void {\n    NG_DEV_MODE && this.warnIfDestroyed();\n    if (this._runningTick) {\n      throw new RuntimeError(\n          RuntimeErrorCode.RECURSIVE_APPLICATION_REF_TICK,\n          ngDevMode && 'ApplicationRef.tick is called recursively');\n    }\n\n    try {\n      this._runningTick = true;\n      for (let view of this._views) {\n        view.detectChanges();\n      }\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        for (let view of this._views) {\n          view.checkNoChanges();\n        }\n      }\n    } catch (e) {\n      // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n      this._zone.runOutsideAngular(() => this._exceptionHandler.handleError(e));\n    } finally {\n      this._runningTick = false;\n    }\n  }\n\n  /**\n   * Attaches a view so that it will be dirty checked.\n   * The view will be automatically detached when it is destroyed.\n   * This will throw if the view is already attached to a ViewContainer.\n   */\n  attachView(viewRef: ViewRef): void {\n    NG_DEV_MODE && this.warnIfDestroyed();\n    const view = (viewRef as InternalViewRef);\n    this._views.push(view);\n    view.attachToAppRef(this);\n  }\n\n  /**\n   * Detaches a view from dirty checking again.\n   */\n  detachView(viewRef: ViewRef): void {\n    NG_DEV_MODE && this.warnIfDestroyed();\n    const view = (viewRef as InternalViewRef);\n    remove(this._views, view);\n    view.detachFromAppRef();\n  }\n\n  private _loadComponent(componentRef: ComponentRef<any>): void {\n    this.attachView(componentRef.hostView);\n    this.tick();\n    this.components.push(componentRef);\n    // Get the listeners lazily to prevent DI cycles.\n    const listeners =\n        this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n    listeners.forEach((listener) => listener(componentRef));\n  }\n\n  /** @internal */\n  ngOnDestroy() {\n    if (this._destroyed) return;\n\n    try {\n      // Call all the lifecycle hooks.\n      this._destroyListeners.forEach(listener => listener());\n\n      // Destroy all registered views.\n      this._views.slice().forEach((view) => view.destroy());\n      this._onMicrotaskEmptySubscription.unsubscribe();\n    } finally {\n      // Indicate that this instance is destroyed.\n      this._destroyed = true;\n\n      // Release all references.\n      this._views = [];\n      this._bootstrapListeners = [];\n      this._destroyListeners = [];\n    }\n  }\n\n  /**\n   * Registers a listener to be called when an instance is destroyed.\n   *\n   * @param callback A callback function to add as a listener.\n   * @returns A function which unregisters a listener.\n   *\n   * @internal\n   */\n  onDestroy(callback: () => void): VoidFunction {\n    NG_DEV_MODE && this.warnIfDestroyed();\n    this._destroyListeners.push(callback);\n    return () => remove(this._destroyListeners, callback);\n  }\n\n  /**\n   * Destroys an Angular application represented by this `ApplicationRef`. Calling this function\n   * will destroy the associated environment injectors as well as all the bootstrapped components\n   * with their views.\n   */\n  destroy(): void {\n    if (this._destroyed) {\n      throw new RuntimeError(\n          RuntimeErrorCode.APPLICATION_REF_ALREADY_DESTROYED,\n          ngDevMode && 'This instance of the `ApplicationRef` has already been destroyed.');\n    }\n\n    // This is a temporary type to represent an instance of an R3Injector, which can be destroyed.\n    // The type will be replaced with a different one once destroyable injector type is available.\n    type DestroyableInjector = Injector&{destroy?: Function, destroyed?: boolean};\n\n    const injector = this._injector as DestroyableInjector;\n\n    // Check that this injector instance supports destroy operation.\n    if (injector.destroy && !injector.destroyed) {\n      // Destroying an underlying injector will trigger the `ngOnDestroy` lifecycle\n      // hook, which invokes the remaining cleanup actions.\n      injector.destroy();\n    }\n  }\n\n  /**\n   * Returns the number of attached views.\n   */\n  get viewCount() {\n    return this._views.length;\n  }\n\n  private warnIfDestroyed() {\n    if (NG_DEV_MODE && this._destroyed) {\n      console.warn(formatRuntimeError(\n          RuntimeErrorCode.APPLICATION_REF_ALREADY_DESTROYED,\n          'This instance of the `ApplicationRef` has already been destroyed.'));\n    }\n  }\n}\n\nfunction remove<T>(list: T[], el: T): void {\n  const index = list.indexOf(el);\n  if (index > -1) {\n    list.splice(index, 1);\n  }\n}\n\nfunction _lastDefined<T>(args: T[]): T|undefined {\n  for (let i = args.length - 1; i >= 0; i--) {\n    if (args[i] !== undefined) {\n      return args[i];\n    }\n  }\n  return undefined;\n}\n\nfunction _mergeArrays(parts: any[][]): any[] {\n  const result: any[] = [];\n  parts.forEach((part) => part && result.push(...part));\n  return result;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectFlags} from '../di';\nimport {InternalInjectFlags} from '../di/interface/injector';\nimport {TNode, TNodeType} from '../render3/interfaces/node';\nimport {isComponentHost} from '../render3/interfaces/type_checks';\nimport {DECLARATION_COMPONENT_VIEW, LView} from '../render3/interfaces/view';\nimport {getCurrentTNode, getLView} from '../render3/state';\nimport {getComponentLViewByIndex} from '../render3/util/view_utils';\nimport {ViewRef as R3_ViewRef} from '../render3/view_ref';\n\n/**\n * Base class that provides change detection functionality.\n * A change-detection tree collects all views that are to be checked for changes.\n * Use the methods to add and remove views from the tree, initiate change-detection,\n * and explicitly mark views as _dirty_, meaning that they have changed and need to be re-rendered.\n *\n * @see [Using change detection hooks](guide/lifecycle-hooks#using-change-detection-hooks)\n * @see [Defining custom change detection](guide/lifecycle-hooks#defining-custom-change-detection)\n *\n * @usageNotes\n *\n * The following examples demonstrate how to modify default change-detection behavior\n * to perform explicit detection when needed.\n *\n * ### Use `markForCheck()` with `CheckOnce` strategy\n *\n * The following example sets the `OnPush` change-detection strategy for a component\n * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n * after an interval. See [live demo](https://plnkr.co/edit/GC512b?p=preview).\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n * region=\"mark-for-check\"></code-example>\n *\n * ### Detach change detector to limit how often check occurs\n *\n * The following example defines a component with a large list of read-only data\n * that is expected to change constantly, many times per second.\n * To improve performance, we want to check and update the list\n * less often than the changes actually occur. To do that, we detach\n * the component's change detector and perform an explicit local check every five seconds.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n *\n *\n * ### Reattaching a detached component\n *\n * The following example creates a component displaying live data.\n * The component detaches its change detector from the main change detector tree\n * when the `live` property is set to false, and reattaches it when the property\n * becomes true.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n *\n * @publicApi\n */\nexport abstract class ChangeDetectorRef {\n  /**\n   * When a view uses the {@link ChangeDetectionStrategy#OnPush OnPush} (checkOnce)\n   * change detection strategy, explicitly marks the view as changed so that\n   * it can be checked again.\n   *\n   * Components are normally marked as dirty (in need of rerendering) when inputs\n   * have changed or events have fired in the view. Call this method to ensure that\n   * a component is checked even if these triggers have not occurred.\n   *\n   * <!-- TODO: Add a link to a chapter on OnPush components -->\n   *\n   */\n  abstract markForCheck(): void;\n\n  /**\n   * Detaches this view from the change-detection tree.\n   * A detached view is  not checked until it is reattached.\n   * Use in combination with `detectChanges()` to implement local change detection checks.\n   *\n   * Detached views are not checked during change detection runs until they are\n   * re-attached, even if they are marked as dirty.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n   *\n   */\n  abstract detach(): void;\n\n  /**\n   * Checks this view and its children. Use in combination with {@link ChangeDetectorRef#detach\n   * detach}\n   * to implement local change detection checks.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n   *\n   */\n  abstract detectChanges(): void;\n\n  /**\n   * Checks the change detector and its children, and throws if any changes are detected.\n   *\n   * Use in development mode to verify that running change detection doesn't introduce\n   * other changes. Calling it in production mode is a noop.\n   */\n  abstract checkNoChanges(): void;\n\n  /**\n   * Re-attaches the previously detached view to the change detection tree.\n   * Views are attached to the tree by default.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   *\n   */\n  abstract reattach(): void;\n\n  /**\n   * @internal\n   * @nocollapse\n   */\n  static __NG_ELEMENT_ID__: (flags: InjectFlags) => ChangeDetectorRef = injectChangeDetectorRef;\n}\n\n\n\n/** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\nexport function injectChangeDetectorRef(flags: InjectFlags): ChangeDetectorRef {\n  return createViewRef(\n      getCurrentTNode()!, getLView(),\n      (flags & InternalInjectFlags.ForPipe) === InternalInjectFlags.ForPipe);\n}\n\n/**\n * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n *\n * @param tNode The node that is requesting a ChangeDetectorRef\n * @param lView The view to which the node belongs\n * @param isPipe Whether the view is being injected into a pipe.\n * @returns The ChangeDetectorRef to use\n */\nfunction createViewRef(tNode: TNode, lView: LView, isPipe: boolean): ChangeDetectorRef {\n  if (isComponentHost(tNode) && !isPipe) {\n    // The LView represents the location where the component is declared.\n    // Instead we want the LView for the component View and so we need to look it up.\n    const componentView = getComponentLViewByIndex(tNode.index, lView);  // look down\n    return new R3_ViewRef(componentView, componentView);\n  } else if (tNode.type & (TNodeType.AnyRNode | TNodeType.AnyContainer | TNodeType.Icu)) {\n    // The LView represents the location where the injection is requested from.\n    // We need to locate the containing LView (in case where the `lView` is an embedded view)\n    const hostComponentView = lView[DECLARATION_COMPONENT_VIEW];  // look up\n    return new R3_ViewRef(hostComponentView, lView);\n  }\n  return null!;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {assertTNodeForLView} from '../render3/assert';\nimport {getLContext} from '../render3/context_discovery';\nimport {CONTAINER_HEADER_OFFSET, LContainer, NATIVE} from '../render3/interfaces/container';\nimport {TElementNode, TNode, TNodeFlags, TNodeType} from '../render3/interfaces/node';\nimport {isComponentHost, isLContainer} from '../render3/interfaces/type_checks';\nimport {DECLARATION_COMPONENT_VIEW, LView, PARENT, T_HOST, TData, TVIEW} from '../render3/interfaces/view';\nimport {getComponent, getContext, getInjectionTokens, getInjector, getListeners, getLocalRefs, getOwningComponent} from '../render3/util/discovery_utils';\nimport {INTERPOLATION_DELIMITER} from '../render3/util/misc_utils';\nimport {renderStringify} from '../render3/util/stringify_utils';\nimport {getComponentLViewByIndex, getNativeByTNodeOrNull} from '../render3/util/view_utils';\nimport {assertDomNode} from '../util/assert';\n\n/**\n * @publicApi\n */\nexport class DebugEventListener {\n  constructor(public name: string, public callback: Function) {}\n}\n\n/**\n * @publicApi\n */\nexport function asNativeElements(debugEls: DebugElement[]): any {\n  return debugEls.map((el) => el.nativeElement);\n}\n\n/**\n * @publicApi\n */\nexport class DebugNode {\n  /**\n   * The underlying DOM node.\n   */\n  readonly nativeNode: any;\n\n  constructor(nativeNode: Node) {\n    this.nativeNode = nativeNode;\n  }\n\n  /**\n   * The `DebugElement` parent. Will be `null` if this is the root element.\n   */\n  get parent(): DebugElement|null {\n    const parent = this.nativeNode.parentNode as Element;\n    return parent ? new DebugElement(parent) : null;\n  }\n\n  /**\n   * The host dependency injector. For example, the root element's component instance injector.\n   */\n  get injector(): Injector {\n    return getInjector(this.nativeNode);\n  }\n\n  /**\n   * The element's own component instance, if it has one.\n   */\n  get componentInstance(): any {\n    const nativeElement = this.nativeNode;\n    return nativeElement &&\n        (getComponent(nativeElement as Element) || getOwningComponent(nativeElement));\n  }\n\n  /**\n   * An object that provides parent context for this element. Often an ancestor component instance\n   * that governs this element.\n   *\n   * When an element is repeated within *ngFor, the context is an `NgForOf` whose `$implicit`\n   * property is the value of the row instance value. For example, the `hero` in `*ngFor=\"let hero\n   * of heroes\"`.\n   */\n  get context(): any {\n    return getComponent(this.nativeNode as Element) || getContext(this.nativeNode as Element);\n  }\n\n  /**\n   * The callbacks attached to the component's @Output properties and/or the element's event\n   * properties.\n   */\n  get listeners(): DebugEventListener[] {\n    return getListeners(this.nativeNode as Element).filter(listener => listener.type === 'dom');\n  }\n\n  /**\n   * Dictionary of objects associated with template local variables (e.g. #foo), keyed by the local\n   * variable name.\n   */\n  get references(): {[key: string]: any} {\n    return getLocalRefs(this.nativeNode);\n  }\n\n  /**\n   * This component's injector lookup tokens. Includes the component itself plus the tokens that the\n   * component lists in its providers metadata.\n   */\n  get providerTokens(): any[] {\n    return getInjectionTokens(this.nativeNode as Element);\n  }\n}\n\n/**\n * @publicApi\n *\n * @see [Component testing scenarios](guide/testing-components-scenarios)\n * @see [Basics of testing components](guide/testing-components-basics)\n * @see [Testing utility APIs](guide/testing-utility-apis)\n */\nexport class DebugElement extends DebugNode {\n  constructor(nativeNode: Element) {\n    ngDevMode && assertDomNode(nativeNode);\n    super(nativeNode);\n  }\n\n  /**\n   * The underlying DOM element at the root of the component.\n   */\n  get nativeElement(): any {\n    return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode as Element : null;\n  }\n\n  /**\n   * The element tag name, if it is an element.\n   */\n  get name(): string {\n    const context = getLContext(this.nativeNode)!;\n    const lView = context ? context.lView : null;\n\n    if (lView !== null) {\n      const tData = lView[TVIEW].data;\n      const tNode = tData[context.nodeIndex] as TNode;\n      return tNode.value!;\n    } else {\n      return this.nativeNode.nodeName;\n    }\n  }\n\n  /**\n   *  Gets a map of property names to property values for an element.\n   *\n   *  This map includes:\n   *  - Regular property bindings (e.g. `[id]=\"id\"`)\n   *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n   *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n   *\n   *  It does not include:\n   *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n   *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n   */\n  get properties(): {[key: string]: any;} {\n    const context = getLContext(this.nativeNode)!;\n    const lView = context ? context.lView : null;\n\n    if (lView === null) {\n      return {};\n    }\n\n    const tData = lView[TVIEW].data;\n    const tNode = tData[context.nodeIndex] as TNode;\n\n    const properties: {[key: string]: string} = {};\n    // Collect properties from the DOM.\n    copyDomProperties(this.nativeElement, properties);\n    // Collect properties from the bindings. This is needed for animation renderer which has\n    // synthetic properties which don't get reflected into the DOM.\n    collectPropertyBindings(properties, tNode, lView, tData);\n    return properties;\n  }\n\n  /**\n   *  A map of attribute names to attribute values for an element.\n   */\n  get attributes(): {[key: string]: string|null} {\n    const attributes: {[key: string]: string|null} = {};\n    const element = this.nativeElement;\n\n    if (!element) {\n      return attributes;\n    }\n\n    const context = getLContext(element)!;\n    const lView = context ? context.lView : null;\n\n    if (lView === null) {\n      return {};\n    }\n\n    const tNodeAttrs = (lView[TVIEW].data[context.nodeIndex] as TNode).attrs;\n    const lowercaseTNodeAttrs: string[] = [];\n\n    // For debug nodes we take the element's attribute directly from the DOM since it allows us\n    // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n    // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n    // however since we have the attributes already on the TNode, we can preserve the case by going\n    // through them once, adding them to the `attributes` map and putting their lower-cased name\n    // into an array. Afterwards when we're going through the native DOM attributes, we can check\n    // whether we haven't run into an attribute already through the TNode.\n    if (tNodeAttrs) {\n      let i = 0;\n      while (i < tNodeAttrs.length) {\n        const attrName = tNodeAttrs[i];\n\n        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n        // else will be handled below when we read the final attributes off the DOM.\n        if (typeof attrName !== 'string') break;\n\n        const attrValue = tNodeAttrs[i + 1];\n        attributes[attrName] = attrValue as string;\n        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n\n        i += 2;\n      }\n    }\n\n    const eAttrs = element.attributes;\n    for (let i = 0; i < eAttrs.length; i++) {\n      const attr = eAttrs[i];\n      const lowercaseName = attr.name.toLowerCase();\n\n      // Make sure that we don't assign the same attribute both in its\n      // case-sensitive form and the lower-cased one from the browser.\n      if (lowercaseTNodeAttrs.indexOf(lowercaseName) === -1) {\n        // Save the lowercase name to align the behavior between browsers.\n        // IE preserves the case, while all other browser convert it to lower case.\n        attributes[lowercaseName] = attr.value;\n      }\n    }\n\n    return attributes;\n  }\n\n  /**\n   * The inline styles of the DOM element.\n   *\n   * Will be `null` if there is no `style` property on the underlying DOM element.\n   *\n   * @see [ElementCSSInlineStyle](https://developer.mozilla.org/en-US/docs/Web/API/ElementCSSInlineStyle/style)\n   */\n  get styles(): {[key: string]: string|null} {\n    if (this.nativeElement && (this.nativeElement as HTMLElement).style) {\n      return (this.nativeElement as HTMLElement).style as {[key: string]: any};\n    }\n    return {};\n  }\n\n  /**\n   * A map containing the class names on the element as keys.\n   *\n   * This map is derived from the `className` property of the DOM element.\n   *\n   * Note: The values of this object will always be `true`. The class key will not appear in the KV\n   * object if it does not exist on the element.\n   *\n   * @see [Element.className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className)\n   */\n  get classes(): {[key: string]: boolean} {\n    const result: {[key: string]: boolean} = {};\n    const element = this.nativeElement as HTMLElement | SVGElement;\n\n    // SVG elements return an `SVGAnimatedString` instead of a plain string for the `className`.\n    const className = element.className as string | SVGAnimatedString;\n    const classes =\n        typeof className !== 'string' ? className.baseVal.split(' ') : className.split(' ');\n\n    classes.forEach((value: string) => result[value] = true);\n\n    return result;\n  }\n\n  /**\n   * The `childNodes` of the DOM element as a `DebugNode` array.\n   *\n   * @see [Node.childNodes](https://developer.mozilla.org/en-US/docs/Web/API/Node/childNodes)\n   */\n  get childNodes(): DebugNode[] {\n    const childNodes = this.nativeNode.childNodes;\n    const children: DebugNode[] = [];\n    for (let i = 0; i < childNodes.length; i++) {\n      const element = childNodes[i];\n      children.push(getDebugNode(element)!);\n    }\n    return children;\n  }\n\n  /**\n   * The immediate `DebugElement` children. Walk the tree by descending through `children`.\n   */\n  get children(): DebugElement[] {\n    const nativeElement = this.nativeElement;\n    if (!nativeElement) return [];\n    const childNodes = nativeElement.children;\n    const children: DebugElement[] = [];\n    for (let i = 0; i < childNodes.length; i++) {\n      const element = childNodes[i];\n      children.push(getDebugNode(element) as DebugElement);\n    }\n    return children;\n  }\n\n  /**\n   * @returns the first `DebugElement` that matches the predicate at any depth in the subtree.\n   */\n  query(predicate: Predicate<DebugElement>): DebugElement {\n    const results = this.queryAll(predicate);\n    return results[0] || null;\n  }\n\n  /**\n   * @returns All `DebugElement` matches for the predicate at any depth in the subtree.\n   */\n  queryAll(predicate: Predicate<DebugElement>): DebugElement[] {\n    const matches: DebugElement[] = [];\n    _queryAll(this, predicate, matches, true);\n    return matches;\n  }\n\n  /**\n   * @returns All `DebugNode` matches for the predicate at any depth in the subtree.\n   */\n  queryAllNodes(predicate: Predicate<DebugNode>): DebugNode[] {\n    const matches: DebugNode[] = [];\n    _queryAll(this, predicate, matches, false);\n    return matches;\n  }\n\n  /**\n   * Triggers the event by its name if there is a corresponding listener in the element's\n   * `listeners` collection.\n   *\n   * If the event lacks a listener or there's some other problem, consider\n   * calling `nativeElement.dispatchEvent(eventObject)`.\n   *\n   * @param eventName The name of the event to trigger\n   * @param eventObj The _event object_ expected by the handler\n   *\n   * @see [Testing components scenarios](guide/testing-components-scenarios#trigger-event-handler)\n   */\n  triggerEventHandler(eventName: string, eventObj?: any): void {\n    const node = this.nativeNode as any;\n    const invokedListeners: Function[] = [];\n\n    this.listeners.forEach(listener => {\n      if (listener.name === eventName) {\n        const callback = listener.callback;\n        callback.call(node, eventObj);\n        invokedListeners.push(callback);\n      }\n    });\n\n    // We need to check whether `eventListeners` exists, because it's something\n    // that Zone.js only adds to `EventTarget` in browser environments.\n    if (typeof node.eventListeners === 'function') {\n      // Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some\n      // cases. We use '__ngUnwrap__' as a special token that gives us access to the actual event\n      // listener.\n      node.eventListeners(eventName).forEach((listener: Function) => {\n        // In order to ensure that we can detect the special __ngUnwrap__ token described above, we\n        // use `toString` on the listener and see if it contains the token. We use this approach to\n        // ensure that it still worked with compiled code since it cannot remove or rename string\n        // literals. We also considered using a special function name (i.e. if(listener.name ===\n        // special)) but that was more cumbersome and we were also concerned the compiled code could\n        // strip the name, turning the condition in to (\"\" === \"\") and always returning true.\n        if (listener.toString().indexOf('__ngUnwrap__') !== -1) {\n          const unwrappedListener = listener('__ngUnwrap__');\n          return invokedListeners.indexOf(unwrappedListener) === -1 &&\n              unwrappedListener.call(node, eventObj);\n        }\n      });\n    }\n  }\n}\n\nfunction copyDomProperties(element: Element|null, properties: {[name: string]: string}): void {\n  if (element) {\n    // Skip own properties (as those are patched)\n    let obj = Object.getPrototypeOf(element);\n    const NodePrototype: any = Node.prototype;\n    while (obj !== null && obj !== NodePrototype) {\n      const descriptors = Object.getOwnPropertyDescriptors(obj);\n      for (let key in descriptors) {\n        if (!key.startsWith('__') && !key.startsWith('on')) {\n          // don't include properties starting with `__` and `on`.\n          // `__` are patched values which should not be included.\n          // `on` are listeners which also should not be included.\n          const value = (element as any)[key];\n          if (isPrimitiveValue(value)) {\n            properties[key] = value;\n          }\n        }\n      }\n      obj = Object.getPrototypeOf(obj);\n    }\n  }\n}\n\nfunction isPrimitiveValue(value: any): boolean {\n  return typeof value === 'string' || typeof value === 'boolean' || typeof value === 'number' ||\n      value === null;\n}\n\n/**\n * Walk the TNode tree to find matches for the predicate.\n *\n * @param parentElement the element from which the walk is started\n * @param predicate the predicate to match\n * @param matches the list of positive matches\n * @param elementsOnly whether only elements should be searched\n */\nfunction _queryAll(\n    parentElement: DebugElement, predicate: Predicate<DebugElement>, matches: DebugElement[],\n    elementsOnly: true): void;\nfunction _queryAll(\n    parentElement: DebugElement, predicate: Predicate<DebugNode>, matches: DebugNode[],\n    elementsOnly: false): void;\nfunction _queryAll(\n    parentElement: DebugElement, predicate: Predicate<DebugElement>|Predicate<DebugNode>,\n    matches: DebugElement[]|DebugNode[], elementsOnly: boolean) {\n  const context = getLContext(parentElement.nativeNode)!;\n  const lView = context ? context.lView : null;\n  if (lView !== null) {\n    const parentTNode = lView[TVIEW].data[context.nodeIndex] as TNode;\n    _queryNodeChildren(\n        parentTNode, lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n  } else {\n    // If the context is null, then `parentElement` was either created with Renderer2 or native DOM\n    // APIs.\n    _queryNativeNodeDescendants(parentElement.nativeNode, predicate, matches, elementsOnly);\n  }\n}\n\n/**\n * Recursively match the current TNode against the predicate, and goes on with the next ones.\n *\n * @param tNode the current TNode\n * @param lView the LView of this TNode\n * @param predicate the predicate to match\n * @param matches the list of positive matches\n * @param elementsOnly whether only elements should be searched\n * @param rootNativeNode the root native node on which predicate should not be matched\n */\nfunction _queryNodeChildren(\n    tNode: TNode, lView: LView, predicate: Predicate<DebugElement>|Predicate<DebugNode>,\n    matches: DebugElement[]|DebugNode[], elementsOnly: boolean, rootNativeNode: any) {\n  ngDevMode && assertTNodeForLView(tNode, lView);\n  const nativeNode = getNativeByTNodeOrNull(tNode, lView);\n  // For each type of TNode, specific logic is executed.\n  if (tNode.type & (TNodeType.AnyRNode | TNodeType.ElementContainer)) {\n    // Case 1: the TNode is an element\n    // The native node has to be checked.\n    _addQueryMatch(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n    if (isComponentHost(tNode)) {\n      // If the element is the host of a component, then all nodes in its view have to be processed.\n      // Note: the component's content (tNode.child) will be processed from the insertion points.\n      const componentView = getComponentLViewByIndex(tNode.index, lView);\n      if (componentView && componentView[TVIEW].firstChild) {\n        _queryNodeChildren(\n            componentView[TVIEW].firstChild!, componentView, predicate, matches, elementsOnly,\n            rootNativeNode);\n      }\n    } else {\n      if (tNode.child) {\n        // Otherwise, its children have to be processed.\n        _queryNodeChildren(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n      }\n\n      // We also have to query the DOM directly in order to catch elements inserted through\n      // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n      // times. ViewEngine could do it more efficiently, because all the insertions go through\n      // Renderer2, however that's not the case in Ivy. This approach is being used because:\n      // 1. Matching the ViewEngine behavior would mean potentially introducing a dependency\n      //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n      // 2. It allows us to capture nodes that were inserted directly via the DOM.\n      nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n    }\n    // In all cases, if a dynamic container exists for this node, each view inside it has to be\n    // processed.\n    const nodeOrContainer = lView[tNode.index];\n    if (isLContainer(nodeOrContainer)) {\n      _queryNodeChildrenInContainer(\n          nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n    }\n  } else if (tNode.type & TNodeType.Container) {\n    // Case 2: the TNode is a container\n    // The native node has to be checked.\n    const lContainer = lView[tNode.index];\n    _addQueryMatch(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n    // Each view inside the container has to be processed.\n    _queryNodeChildrenInContainer(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n  } else if (tNode.type & TNodeType.Projection) {\n    // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n    // The nodes projected at this location all need to be processed.\n    const componentView = lView![DECLARATION_COMPONENT_VIEW];\n    const componentHost = componentView[T_HOST] as TElementNode;\n    const head: TNode|null =\n        (componentHost.projection as (TNode | null)[])[tNode.projection as number];\n\n    if (Array.isArray(head)) {\n      for (let nativeNode of head) {\n        _addQueryMatch(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n      }\n    } else if (head) {\n      const nextLView = componentView[PARENT]! as LView;\n      const nextTNode = nextLView[TVIEW].data[head.index] as TNode;\n      _queryNodeChildren(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n    }\n  } else if (tNode.child) {\n    // Case 4: the TNode is a view.\n    _queryNodeChildren(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n  }\n\n  // We don't want to go to the next sibling of the root node.\n  if (rootNativeNode !== nativeNode) {\n    // To determine the next node to be processed, we need to use the next or the projectionNext\n    // link, depending on whether the current node has been projected.\n    const nextTNode = (tNode.flags & TNodeFlags.isProjected) ? tNode.projectionNext : tNode.next;\n    if (nextTNode) {\n      _queryNodeChildren(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n    }\n  }\n}\n\n/**\n * Process all TNodes in a given container.\n *\n * @param lContainer the container to be processed\n * @param predicate the predicate to match\n * @param matches the list of positive matches\n * @param elementsOnly whether only elements should be searched\n * @param rootNativeNode the root native node on which predicate should not be matched\n */\nfunction _queryNodeChildrenInContainer(\n    lContainer: LContainer, predicate: Predicate<DebugElement>|Predicate<DebugNode>,\n    matches: DebugElement[]|DebugNode[], elementsOnly: boolean, rootNativeNode: any) {\n  for (let i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n    const childView = lContainer[i] as LView;\n    const firstChild = childView[TVIEW].firstChild;\n    if (firstChild) {\n      _queryNodeChildren(firstChild, childView, predicate, matches, elementsOnly, rootNativeNode);\n    }\n  }\n}\n\n/**\n * Match the current native node against the predicate.\n *\n * @param nativeNode the current native node\n * @param predicate the predicate to match\n * @param matches the list of positive matches\n * @param elementsOnly whether only elements should be searched\n * @param rootNativeNode the root native node on which predicate should not be matched\n */\nfunction _addQueryMatch(\n    nativeNode: any, predicate: Predicate<DebugElement>|Predicate<DebugNode>,\n    matches: DebugElement[]|DebugNode[], elementsOnly: boolean, rootNativeNode: any) {\n  if (rootNativeNode !== nativeNode) {\n    const debugNode = getDebugNode(nativeNode);\n    if (!debugNode) {\n      return;\n    }\n    // Type of the \"predicate and \"matches\" array are set based on the value of\n    // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n    // types with generics, so we manually cast the parameters accordingly.\n    if (elementsOnly && (debugNode instanceof DebugElement) && predicate(debugNode) &&\n        matches.indexOf(debugNode) === -1) {\n      matches.push(debugNode);\n    } else if (\n        !elementsOnly && (predicate as Predicate<DebugNode>)(debugNode) &&\n        (matches as DebugNode[]).indexOf(debugNode) === -1) {\n      (matches as DebugNode[]).push(debugNode);\n    }\n  }\n}\n\n/**\n * Match all the descendants of a DOM node against a predicate.\n *\n * @param nativeNode the current native node\n * @param predicate the predicate to match\n * @param matches the list where matches are stored\n * @param elementsOnly whether only elements should be searched\n */\nfunction _queryNativeNodeDescendants(\n    parentNode: any, predicate: Predicate<DebugElement>|Predicate<DebugNode>,\n    matches: DebugElement[]|DebugNode[], elementsOnly: boolean) {\n  const nodes = parentNode.childNodes;\n  const length = nodes.length;\n\n  for (let i = 0; i < length; i++) {\n    const node = nodes[i];\n    const debugNode = getDebugNode(node);\n\n    if (debugNode) {\n      if (elementsOnly && (debugNode instanceof DebugElement) && predicate(debugNode) &&\n          matches.indexOf(debugNode) === -1) {\n        matches.push(debugNode);\n      } else if (\n          !elementsOnly && (predicate as Predicate<DebugNode>)(debugNode) &&\n          (matches as DebugNode[]).indexOf(debugNode) === -1) {\n        (matches as DebugNode[]).push(debugNode);\n      }\n\n      _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n    }\n  }\n}\n\n/**\n * Iterates through the property bindings for a given node and generates\n * a map of property names to values. This map only contains property bindings\n * defined in templates, not in host bindings.\n */\nfunction collectPropertyBindings(\n    properties: {[key: string]: string}, tNode: TNode, lView: LView, tData: TData): void {\n  let bindingIndexes = tNode.propertyBindings;\n\n  if (bindingIndexes !== null) {\n    for (let i = 0; i < bindingIndexes.length; i++) {\n      const bindingIndex = bindingIndexes[i];\n      const propMetadata = tData[bindingIndex] as string;\n      const metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n      const propertyName = metadataParts[0];\n      if (metadataParts.length > 1) {\n        let value = metadataParts[1];\n        for (let j = 1; j < metadataParts.length - 1; j++) {\n          value += renderStringify(lView[bindingIndex + j - 1]) + metadataParts[j + 1];\n        }\n        properties[propertyName] = value;\n      } else {\n        properties[propertyName] = lView[bindingIndex];\n      }\n    }\n  }\n}\n\n\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nconst _nativeNodeToDebugNode = new Map<any, DebugNode>();\n\nconst NG_DEBUG_PROPERTY = '__ng_debug__';\n\n/**\n * @publicApi\n */\nexport function getDebugNode(nativeNode: any): DebugNode|null {\n  if (nativeNode instanceof Node) {\n    if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n      (nativeNode as any)[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n          new DebugElement(nativeNode as Element) :\n          new DebugNode(nativeNode);\n    }\n    return (nativeNode as any)[NG_DEBUG_PROPERTY];\n  }\n  return null;\n}\n\n// TODO: cleanup all references to this function and remove it.\nexport function getDebugNodeR2(_nativeNode: any): DebugNode|null {\n  return null;\n}\n\nexport function getAllDebugNodes(): DebugNode[] {\n  return Array.from(_nativeNodeToDebugNode.values());\n}\n\nexport function indexDebugNode(node: DebugNode) {\n  _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n\nexport function removeDebugNodeFromIndex(node: DebugNode) {\n  _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * @publicApi\n */\nexport interface Predicate<T> {\n  (value: T): boolean;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {RuntimeError, RuntimeErrorCode} from '../../errors';\nimport {isListLikeIterable, iterateListLike} from '../../util/iterable';\nimport {stringify} from '../../util/stringify';\n\nimport {IterableChangeRecord, IterableChanges, IterableDiffer, IterableDifferFactory, NgIterable, TrackByFunction} from './iterable_differs';\n\n\nexport class DefaultIterableDifferFactory implements IterableDifferFactory {\n  constructor() {}\n  supports(obj: Object|null|undefined): boolean {\n    return isListLikeIterable(obj);\n  }\n\n  create<V>(trackByFn?: TrackByFunction<V>): DefaultIterableDiffer<V> {\n    return new DefaultIterableDiffer<V>(trackByFn);\n  }\n}\n\nconst trackByIdentity = (index: number, item: any) => item;\n\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n * @publicApi\n */\nexport class DefaultIterableDiffer<V> implements IterableDiffer<V>, IterableChanges<V> {\n  public readonly length: number = 0;\n  // TODO(issue/24571): remove '!'.\n  public readonly collection!: V[]|Iterable<V>|null;\n  // Keeps track of the used records at any point in time (during & across `_check()` calls)\n  private _linkedRecords: _DuplicateMap<V>|null = null;\n  // Keeps track of the removed records at any point in time during `_check()` calls.\n  private _unlinkedRecords: _DuplicateMap<V>|null = null;\n  private _previousItHead: IterableChangeRecord_<V>|null = null;\n  private _itHead: IterableChangeRecord_<V>|null = null;\n  private _itTail: IterableChangeRecord_<V>|null = null;\n  private _additionsHead: IterableChangeRecord_<V>|null = null;\n  private _additionsTail: IterableChangeRecord_<V>|null = null;\n  private _movesHead: IterableChangeRecord_<V>|null = null;\n  private _movesTail: IterableChangeRecord_<V>|null = null;\n  private _removalsHead: IterableChangeRecord_<V>|null = null;\n  private _removalsTail: IterableChangeRecord_<V>|null = null;\n  // Keeps track of records where custom track by is the same, but item identity has changed\n  private _identityChangesHead: IterableChangeRecord_<V>|null = null;\n  private _identityChangesTail: IterableChangeRecord_<V>|null = null;\n  private _trackByFn: TrackByFunction<V>;\n\n  constructor(trackByFn?: TrackByFunction<V>) {\n    this._trackByFn = trackByFn || trackByIdentity;\n  }\n\n  forEachItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._itHead; record !== null; record = record._next) {\n      fn(record);\n    }\n  }\n\n  forEachOperation(\n      fn: (item: IterableChangeRecord<V>, previousIndex: number|null, currentIndex: number|null) =>\n          void) {\n    let nextIt = this._itHead;\n    let nextRemove = this._removalsHead;\n    let addRemoveOffset = 0;\n    let moveOffsets: number[]|null = null;\n    while (nextIt || nextRemove) {\n      // Figure out which is the next record to process\n      // Order: remove, add, move\n      const record: IterableChangeRecord<V> = !nextRemove ||\n              nextIt &&\n                  nextIt.currentIndex! <\n                      getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n          nextIt! :\n          nextRemove;\n      const adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n      const currentIndex = record.currentIndex;\n\n      // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n      if (record === nextRemove) {\n        addRemoveOffset--;\n        nextRemove = nextRemove._nextRemoved;\n      } else {\n        nextIt = nextIt!._next;\n        if (record.previousIndex == null) {\n          addRemoveOffset++;\n        } else {\n          // INVARIANT:  currentIndex < previousIndex\n          if (!moveOffsets) moveOffsets = [];\n          const localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n          const localCurrentIndex = currentIndex! - addRemoveOffset;\n          if (localMovePreviousIndex != localCurrentIndex) {\n            for (let i = 0; i < localMovePreviousIndex; i++) {\n              const offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n              const index = offset + i;\n              if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                moveOffsets[i] = offset + 1;\n              }\n            }\n            const previousIndex = record.previousIndex;\n            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n          }\n        }\n      }\n\n      if (adjPreviousIndex !== currentIndex) {\n        fn(record, adjPreviousIndex, currentIndex);\n      }\n    }\n  }\n\n  forEachPreviousItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n      fn(record);\n    }\n  }\n\n  forEachAddedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      fn(record);\n    }\n  }\n\n  forEachMovedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._movesHead; record !== null; record = record._nextMoved) {\n      fn(record);\n    }\n  }\n\n  forEachRemovedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      fn(record);\n    }\n  }\n\n  forEachIdentityChange(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n      fn(record);\n    }\n  }\n\n  diff(collection: NgIterable<V>|null|undefined): DefaultIterableDiffer<V>|null {\n    if (collection == null) collection = [];\n    if (!isListLikeIterable(collection)) {\n      throw new RuntimeError(\n          RuntimeErrorCode.INVALID_DIFFER_INPUT,\n          ngDevMode &&\n              `Error trying to diff '${\n                  stringify(collection)}'. Only arrays and iterables are allowed`);\n    }\n\n    if (this.check(collection)) {\n      return this;\n    } else {\n      return null;\n    }\n  }\n\n  onDestroy() {}\n\n  check(collection: NgIterable<V>): boolean {\n    this._reset();\n\n    let record: IterableChangeRecord_<V>|null = this._itHead;\n    let mayBeDirty: boolean = false;\n    let index: number;\n    let item: V;\n    let itemTrackBy: any;\n    if (Array.isArray(collection)) {\n      (this as {length: number}).length = collection.length;\n\n      for (let index = 0; index < this.length; index++) {\n        item = collection[index];\n        itemTrackBy = this._trackByFn(index, item);\n        if (record === null || !Object.is(record.trackById, itemTrackBy)) {\n          record = this._mismatch(record, item, itemTrackBy, index);\n          mayBeDirty = true;\n        } else {\n          if (mayBeDirty) {\n            // TODO(misko): can we limit this to duplicates only?\n            record = this._verifyReinsertion(record, item, itemTrackBy, index);\n          }\n          if (!Object.is(record.item, item)) this._addIdentityChange(record, item);\n        }\n\n        record = record._next;\n      }\n    } else {\n      index = 0;\n      iterateListLike(collection, (item: V) => {\n        itemTrackBy = this._trackByFn(index, item);\n        if (record === null || !Object.is(record.trackById, itemTrackBy)) {\n          record = this._mismatch(record, item, itemTrackBy, index);\n          mayBeDirty = true;\n        } else {\n          if (mayBeDirty) {\n            // TODO(misko): can we limit this to duplicates only?\n            record = this._verifyReinsertion(record, item, itemTrackBy, index);\n          }\n          if (!Object.is(record.item, item)) this._addIdentityChange(record, item);\n        }\n        record = record._next;\n        index++;\n      });\n      (this as {length: number}).length = index;\n    }\n\n    this._truncate(record);\n    (this as {collection: V[] | Iterable<V>}).collection = collection;\n    return this.isDirty;\n  }\n\n  /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n   * changes.\n   */\n  get isDirty(): boolean {\n    return this._additionsHead !== null || this._movesHead !== null ||\n        this._removalsHead !== null || this._identityChangesHead !== null;\n  }\n\n  /**\n   * Reset the state of the change objects to show no changes. This means set previousKey to\n   * currentKey, and clear all of the queues (additions, moves, removals).\n   * Set the previousIndexes of moved and added items to their currentIndexes\n   * Reset the list of additions, moves and removals\n   *\n   * @internal\n   */\n  _reset() {\n    if (this.isDirty) {\n      let record: IterableChangeRecord_<V>|null;\n\n      for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n        record._nextPrevious = record._next;\n      }\n\n      for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n        record.previousIndex = record.currentIndex;\n      }\n      this._additionsHead = this._additionsTail = null;\n\n      for (record = this._movesHead; record !== null; record = record._nextMoved) {\n        record.previousIndex = record.currentIndex;\n      }\n      this._movesHead = this._movesTail = null;\n      this._removalsHead = this._removalsTail = null;\n      this._identityChangesHead = this._identityChangesTail = null;\n\n      // TODO(vicb): when assert gets supported\n      // assert(!this.isDirty);\n    }\n  }\n\n  /**\n   * This is the core function which handles differences between collections.\n   *\n   * - `record` is the record which we saw at this position last time. If null then it is a new\n   *   item.\n   * - `item` is the current item in the collection\n   * - `index` is the position of the item in the collection\n   *\n   * @internal\n   */\n  _mismatch(record: IterableChangeRecord_<V>|null, item: V, itemTrackBy: any, index: number):\n      IterableChangeRecord_<V> {\n    // The previous record after which we will append the current one.\n    let previousRecord: IterableChangeRecord_<V>|null;\n\n    if (record === null) {\n      previousRecord = this._itTail;\n    } else {\n      previousRecord = record._prev;\n      // Remove the record from the collection since we know it does not match the item.\n      this._remove(record);\n    }\n\n    // See if we have evicted the item, which used to be at some anterior position of _itHead list.\n    record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n    if (record !== null) {\n      // It is an item which we have evicted earlier: reinsert it back into the list.\n      // But first we need to check if identity changed, so we can update in view if necessary.\n      if (!Object.is(record.item, item)) this._addIdentityChange(record, item);\n\n      this._reinsertAfter(record, previousRecord, index);\n    } else {\n      // Attempt to see if the item is at some posterior position of _itHead list.\n      record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n      if (record !== null) {\n        // We have the item in _itHead at/after `index` position. We need to move it forward in the\n        // collection.\n        // But first we need to check if identity changed, so we can update in view if necessary.\n        if (!Object.is(record.item, item)) this._addIdentityChange(record, item);\n\n        this._moveAfter(record, previousRecord, index);\n      } else {\n        // It is a new item: add it.\n        record =\n            this._addAfter(new IterableChangeRecord_<V>(item, itemTrackBy), previousRecord, index);\n      }\n    }\n    return record;\n  }\n\n  /**\n   * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n   *\n   * Use case: `[a, a]` => `[b, a, a]`\n   *\n   * If we did not have this check then the insertion of `b` would:\n   *   1) evict first `a`\n   *   2) insert `b` at `0` index.\n   *   3) leave `a` at index `1` as is. <-- this is wrong!\n   *   3) reinsert `a` at index 2. <-- this is wrong!\n   *\n   * The correct behavior is:\n   *   1) evict first `a`\n   *   2) insert `b` at `0` index.\n   *   3) reinsert `a` at index 1.\n   *   3) move `a` at from `1` to `2`.\n   *\n   *\n   * Double check that we have not evicted a duplicate item. We need to check if the item type may\n   * have already been removed:\n   * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n   * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n   * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n   * at the end.\n   *\n   * @internal\n   */\n  _verifyReinsertion(record: IterableChangeRecord_<V>, item: V, itemTrackBy: any, index: number):\n      IterableChangeRecord_<V> {\n    let reinsertRecord: IterableChangeRecord_<V>|null =\n        this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n    if (reinsertRecord !== null) {\n      record = this._reinsertAfter(reinsertRecord, record._prev!, index);\n    } else if (record.currentIndex != index) {\n      record.currentIndex = index;\n      this._addToMoves(record, index);\n    }\n    return record;\n  }\n\n  /**\n   * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n   *\n   * - `record` The first excess {@link IterableChangeRecord_}.\n   *\n   * @internal\n   */\n  _truncate(record: IterableChangeRecord_<V>|null) {\n    // Anything after that needs to be removed;\n    while (record !== null) {\n      const nextRecord: IterableChangeRecord_<V>|null = record._next;\n      this._addToRemovals(this._unlink(record));\n      record = nextRecord;\n    }\n    if (this._unlinkedRecords !== null) {\n      this._unlinkedRecords.clear();\n    }\n\n    if (this._additionsTail !== null) {\n      this._additionsTail._nextAdded = null;\n    }\n    if (this._movesTail !== null) {\n      this._movesTail._nextMoved = null;\n    }\n    if (this._itTail !== null) {\n      this._itTail._next = null;\n    }\n    if (this._removalsTail !== null) {\n      this._removalsTail._nextRemoved = null;\n    }\n    if (this._identityChangesTail !== null) {\n      this._identityChangesTail._nextIdentityChange = null;\n    }\n  }\n\n  /** @internal */\n  _reinsertAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    if (this._unlinkedRecords !== null) {\n      this._unlinkedRecords.remove(record);\n    }\n    const prev = record._prevRemoved;\n    const next = record._nextRemoved;\n\n    if (prev === null) {\n      this._removalsHead = next;\n    } else {\n      prev._nextRemoved = next;\n    }\n    if (next === null) {\n      this._removalsTail = prev;\n    } else {\n      next._prevRemoved = prev;\n    }\n\n    this._insertAfter(record, prevRecord, index);\n    this._addToMoves(record, index);\n    return record;\n  }\n\n  /** @internal */\n  _moveAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    this._unlink(record);\n    this._insertAfter(record, prevRecord, index);\n    this._addToMoves(record, index);\n    return record;\n  }\n\n  /** @internal */\n  _addAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    this._insertAfter(record, prevRecord, index);\n\n    if (this._additionsTail === null) {\n      // TODO(vicb):\n      // assert(this._additionsHead === null);\n      this._additionsTail = this._additionsHead = record;\n    } else {\n      // TODO(vicb):\n      // assert(_additionsTail._nextAdded === null);\n      // assert(record._nextAdded === null);\n      this._additionsTail = this._additionsTail._nextAdded = record;\n    }\n    return record;\n  }\n\n  /** @internal */\n  _insertAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    // TODO(vicb):\n    // assert(record != prevRecord);\n    // assert(record._next === null);\n    // assert(record._prev === null);\n\n    const next: IterableChangeRecord_<V>|null =\n        prevRecord === null ? this._itHead : prevRecord._next;\n    // TODO(vicb):\n    // assert(next != record);\n    // assert(prevRecord != record);\n    record._next = next;\n    record._prev = prevRecord;\n    if (next === null) {\n      this._itTail = record;\n    } else {\n      next._prev = record;\n    }\n    if (prevRecord === null) {\n      this._itHead = record;\n    } else {\n      prevRecord._next = record;\n    }\n\n    if (this._linkedRecords === null) {\n      this._linkedRecords = new _DuplicateMap<V>();\n    }\n    this._linkedRecords.put(record);\n\n    record.currentIndex = index;\n    return record;\n  }\n\n  /** @internal */\n  _remove(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    return this._addToRemovals(this._unlink(record));\n  }\n\n  /** @internal */\n  _unlink(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    if (this._linkedRecords !== null) {\n      this._linkedRecords.remove(record);\n    }\n\n    const prev = record._prev;\n    const next = record._next;\n\n    // TODO(vicb):\n    // assert((record._prev = null) === null);\n    // assert((record._next = null) === null);\n\n    if (prev === null) {\n      this._itHead = next;\n    } else {\n      prev._next = next;\n    }\n    if (next === null) {\n      this._itTail = prev;\n    } else {\n      next._prev = prev;\n    }\n\n    return record;\n  }\n\n  /** @internal */\n  _addToMoves(record: IterableChangeRecord_<V>, toIndex: number): IterableChangeRecord_<V> {\n    // TODO(vicb):\n    // assert(record._nextMoved === null);\n\n    if (record.previousIndex === toIndex) {\n      return record;\n    }\n\n    if (this._movesTail === null) {\n      // TODO(vicb):\n      // assert(_movesHead === null);\n      this._movesTail = this._movesHead = record;\n    } else {\n      // TODO(vicb):\n      // assert(_movesTail._nextMoved === null);\n      this._movesTail = this._movesTail._nextMoved = record;\n    }\n\n    return record;\n  }\n\n  private _addToRemovals(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    if (this._unlinkedRecords === null) {\n      this._unlinkedRecords = new _DuplicateMap<V>();\n    }\n    this._unlinkedRecords.put(record);\n    record.currentIndex = null;\n    record._nextRemoved = null;\n\n    if (this._removalsTail === null) {\n      // TODO(vicb):\n      // assert(_removalsHead === null);\n      this._removalsTail = this._removalsHead = record;\n      record._prevRemoved = null;\n    } else {\n      // TODO(vicb):\n      // assert(_removalsTail._nextRemoved === null);\n      // assert(record._nextRemoved === null);\n      record._prevRemoved = this._removalsTail;\n      this._removalsTail = this._removalsTail._nextRemoved = record;\n    }\n    return record;\n  }\n\n  /** @internal */\n  _addIdentityChange(record: IterableChangeRecord_<V>, item: V) {\n    record.item = item;\n    if (this._identityChangesTail === null) {\n      this._identityChangesTail = this._identityChangesHead = record;\n    } else {\n      this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n    }\n    return record;\n  }\n}\n\nexport class IterableChangeRecord_<V> implements IterableChangeRecord<V> {\n  currentIndex: number|null = null;\n  previousIndex: number|null = null;\n\n  /** @internal */\n  _nextPrevious: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _prev: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _next: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _prevDup: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _nextDup: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _prevRemoved: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _nextRemoved: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _nextAdded: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _nextMoved: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _nextIdentityChange: IterableChangeRecord_<V>|null = null;\n\n\n  constructor(public item: V, public trackById: any) {}\n}\n\n// A linked list of IterableChangeRecords with the same IterableChangeRecord_.item\nclass _DuplicateItemRecordList<V> {\n  /** @internal */\n  _head: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _tail: IterableChangeRecord_<V>|null = null;\n\n  /**\n   * Append the record to the list of duplicates.\n   *\n   * Note: by design all records in the list of duplicates hold the same value in record.item.\n   */\n  add(record: IterableChangeRecord_<V>): void {\n    if (this._head === null) {\n      this._head = this._tail = record;\n      record._nextDup = null;\n      record._prevDup = null;\n    } else {\n      // TODO(vicb):\n      // assert(record.item ==  _head.item ||\n      //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n      this._tail!._nextDup = record;\n      record._prevDup = this._tail;\n      record._nextDup = null;\n      this._tail = record;\n    }\n  }\n\n  // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n  // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n  get(trackById: any, atOrAfterIndex: number|null): IterableChangeRecord_<V>|null {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._head; record !== null; record = record._nextDup) {\n      if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex!) &&\n          Object.is(record.trackById, trackById)) {\n        return record;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n   *\n   * Returns whether the list of duplicates is empty.\n   */\n  remove(record: IterableChangeRecord_<V>): boolean {\n    // TODO(vicb):\n    // assert(() {\n    //  // verify that the record being removed is in the list.\n    //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n    //    if (identical(cursor, record)) return true;\n    //  }\n    //  return false;\n    //});\n\n    const prev: IterableChangeRecord_<V>|null = record._prevDup;\n    const next: IterableChangeRecord_<V>|null = record._nextDup;\n    if (prev === null) {\n      this._head = next;\n    } else {\n      prev._nextDup = next;\n    }\n    if (next === null) {\n      this._tail = prev;\n    } else {\n      next._prevDup = prev;\n    }\n    return this._head === null;\n  }\n}\n\nclass _DuplicateMap<V> {\n  map = new Map<any, _DuplicateItemRecordList<V>>();\n\n  put(record: IterableChangeRecord_<V>) {\n    const key = record.trackById;\n\n    let duplicates = this.map.get(key);\n    if (!duplicates) {\n      duplicates = new _DuplicateItemRecordList<V>();\n      this.map.set(key, duplicates);\n    }\n    duplicates.add(record);\n  }\n\n  /**\n   * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n   * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n   *\n   * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n   * have any more `a`s needs to return the second `a`.\n   */\n  get(trackById: any, atOrAfterIndex: number|null): IterableChangeRecord_<V>|null {\n    const key = trackById;\n    const recordList = this.map.get(key);\n    return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n  }\n\n  /**\n   * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n   *\n   * The list of duplicates also is removed from the map if it gets empty.\n   */\n  remove(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    const key = record.trackById;\n    const recordList: _DuplicateItemRecordList<V> = this.map.get(key)!;\n    // Remove the list of duplicates when it gets empty\n    if (recordList.remove(record)) {\n      this.map.delete(key);\n    }\n    return record;\n  }\n\n  get isEmpty(): boolean {\n    return this.map.size === 0;\n  }\n\n  clear() {\n    this.map.clear();\n  }\n}\n\nfunction getPreviousIndex(item: any, addRemoveOffset: number, moveOffsets: number[]|null): number {\n  const previousIndex = item.previousIndex;\n  if (previousIndex === null) return previousIndex;\n  let moveOffset = 0;\n  if (moveOffsets && previousIndex < moveOffsets.length) {\n    moveOffset = moveOffsets[previousIndex];\n  }\n  return previousIndex + addRemoveOffset + moveOffset;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {RuntimeError, RuntimeErrorCode} from '../../errors';\nimport {isJsObject} from '../../util/iterable';\nimport {stringify} from '../../util/stringify';\n\nimport {KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDifferFactory} from './keyvalue_differs';\n\n\nexport class DefaultKeyValueDifferFactory<K, V> implements KeyValueDifferFactory {\n  constructor() {}\n  supports(obj: any): boolean {\n    return obj instanceof Map || isJsObject(obj);\n  }\n\n  create<K, V>(): KeyValueDiffer<K, V> {\n    return new DefaultKeyValueDiffer<K, V>();\n  }\n}\n\nexport class DefaultKeyValueDiffer<K, V> implements KeyValueDiffer<K, V>, KeyValueChanges<K, V> {\n  private _records = new Map<K, KeyValueChangeRecord_<K, V>>();\n  private _mapHead: KeyValueChangeRecord_<K, V>|null = null;\n  // _appendAfter is used in the check loop\n  private _appendAfter: KeyValueChangeRecord_<K, V>|null = null;\n  private _previousMapHead: KeyValueChangeRecord_<K, V>|null = null;\n  private _changesHead: KeyValueChangeRecord_<K, V>|null = null;\n  private _changesTail: KeyValueChangeRecord_<K, V>|null = null;\n  private _additionsHead: KeyValueChangeRecord_<K, V>|null = null;\n  private _additionsTail: KeyValueChangeRecord_<K, V>|null = null;\n  private _removalsHead: KeyValueChangeRecord_<K, V>|null = null;\n  private _removalsTail: KeyValueChangeRecord_<K, V>|null = null;\n\n  get isDirty(): boolean {\n    return this._additionsHead !== null || this._changesHead !== null ||\n        this._removalsHead !== null;\n  }\n\n  forEachItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._mapHead; record !== null; record = record._next) {\n      fn(record);\n    }\n  }\n\n  forEachPreviousItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n      fn(record);\n    }\n  }\n\n  forEachChangedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._changesHead; record !== null; record = record._nextChanged) {\n      fn(record);\n    }\n  }\n\n  forEachAddedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      fn(record);\n    }\n  }\n\n  forEachRemovedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      fn(record);\n    }\n  }\n\n  diff(map?: Map<any, any>|{[k: string]: any}|null): any {\n    if (!map) {\n      map = new Map();\n    } else if (!(map instanceof Map || isJsObject(map))) {\n      throw new RuntimeError(\n          RuntimeErrorCode.INVALID_DIFFER_INPUT,\n          ngDevMode &&\n              `Error trying to diff '${stringify(map)}'. Only maps and objects are allowed`);\n    }\n\n    return this.check(map) ? this : null;\n  }\n\n  onDestroy() {}\n\n  /**\n   * Check the current state of the map vs the previous.\n   * The algorithm is optimised for when the keys do no change.\n   */\n  check(map: Map<any, any>|{[k: string]: any}): boolean {\n    this._reset();\n\n    let insertBefore = this._mapHead;\n    this._appendAfter = null;\n\n    this._forEach(map, (value: any, key: any) => {\n      if (insertBefore && insertBefore.key === key) {\n        this._maybeAddToChanges(insertBefore, value);\n        this._appendAfter = insertBefore;\n        insertBefore = insertBefore._next;\n      } else {\n        const record = this._getOrCreateRecordForKey(key, value);\n        insertBefore = this._insertBeforeOrAppend(insertBefore, record);\n      }\n    });\n\n    // Items remaining at the end of the list have been deleted\n    if (insertBefore) {\n      if (insertBefore._prev) {\n        insertBefore._prev._next = null;\n      }\n\n      this._removalsHead = insertBefore;\n\n      for (let record: KeyValueChangeRecord_<K, V>|null = insertBefore; record !== null;\n           record = record._nextRemoved) {\n        if (record === this._mapHead) {\n          this._mapHead = null;\n        }\n        this._records.delete(record.key);\n        record._nextRemoved = record._next;\n        record.previousValue = record.currentValue;\n        record.currentValue = null;\n        record._prev = null;\n        record._next = null;\n      }\n    }\n\n    // Make sure tails have no next records from previous runs\n    if (this._changesTail) this._changesTail._nextChanged = null;\n    if (this._additionsTail) this._additionsTail._nextAdded = null;\n\n    return this.isDirty;\n  }\n\n  /**\n   * Inserts a record before `before` or append at the end of the list when `before` is null.\n   *\n   * Notes:\n   * - This method appends at `this._appendAfter`,\n   * - This method updates `this._appendAfter`,\n   * - The return value is the new value for the insertion pointer.\n   */\n  private _insertBeforeOrAppend(\n      before: KeyValueChangeRecord_<K, V>|null,\n      record: KeyValueChangeRecord_<K, V>): KeyValueChangeRecord_<K, V>|null {\n    if (before) {\n      const prev = before._prev;\n      record._next = before;\n      record._prev = prev;\n      before._prev = record;\n      if (prev) {\n        prev._next = record;\n      }\n      if (before === this._mapHead) {\n        this._mapHead = record;\n      }\n\n      this._appendAfter = before;\n      return before;\n    }\n\n    if (this._appendAfter) {\n      this._appendAfter._next = record;\n      record._prev = this._appendAfter;\n    } else {\n      this._mapHead = record;\n    }\n\n    this._appendAfter = record;\n    return null;\n  }\n\n  private _getOrCreateRecordForKey(key: K, value: V): KeyValueChangeRecord_<K, V> {\n    if (this._records.has(key)) {\n      const record = this._records.get(key)!;\n      this._maybeAddToChanges(record, value);\n      const prev = record._prev;\n      const next = record._next;\n      if (prev) {\n        prev._next = next;\n      }\n      if (next) {\n        next._prev = prev;\n      }\n      record._next = null;\n      record._prev = null;\n\n      return record;\n    }\n\n    const record = new KeyValueChangeRecord_<K, V>(key);\n    this._records.set(key, record);\n    record.currentValue = value;\n    this._addToAdditions(record);\n    return record;\n  }\n\n  /** @internal */\n  _reset() {\n    if (this.isDirty) {\n      let record: KeyValueChangeRecord_<K, V>|null;\n      // let `_previousMapHead` contain the state of the map before the changes\n      this._previousMapHead = this._mapHead;\n      for (record = this._previousMapHead; record !== null; record = record._next) {\n        record._nextPrevious = record._next;\n      }\n\n      // Update `record.previousValue` with the value of the item before the changes\n      // We need to update all changed items (that's those which have been added and changed)\n      for (record = this._changesHead; record !== null; record = record._nextChanged) {\n        record.previousValue = record.currentValue;\n      }\n      for (record = this._additionsHead; record != null; record = record._nextAdded) {\n        record.previousValue = record.currentValue;\n      }\n\n      this._changesHead = this._changesTail = null;\n      this._additionsHead = this._additionsTail = null;\n      this._removalsHead = null;\n    }\n  }\n\n  // Add the record or a given key to the list of changes only when the value has actually changed\n  private _maybeAddToChanges(record: KeyValueChangeRecord_<K, V>, newValue: any): void {\n    if (!Object.is(newValue, record.currentValue)) {\n      record.previousValue = record.currentValue;\n      record.currentValue = newValue;\n      this._addToChanges(record);\n    }\n  }\n\n  private _addToAdditions(record: KeyValueChangeRecord_<K, V>) {\n    if (this._additionsHead === null) {\n      this._additionsHead = this._additionsTail = record;\n    } else {\n      this._additionsTail!._nextAdded = record;\n      this._additionsTail = record;\n    }\n  }\n\n  private _addToChanges(record: KeyValueChangeRecord_<K, V>) {\n    if (this._changesHead === null) {\n      this._changesHead = this._changesTail = record;\n    } else {\n      this._changesTail!._nextChanged = record;\n      this._changesTail = record;\n    }\n  }\n\n  /** @internal */\n  private _forEach<K, V>(obj: Map<K, V>|{[k: string]: V}, fn: (v: V, k: any) => void) {\n    if (obj instanceof Map) {\n      obj.forEach(fn);\n    } else {\n      Object.keys(obj).forEach(k => fn(obj[k], k));\n    }\n  }\n}\n\nclass KeyValueChangeRecord_<K, V> implements KeyValueChangeRecord<K, V> {\n  previousValue: V|null = null;\n  currentValue: V|null = null;\n\n  /** @internal */\n  _nextPrevious: KeyValueChangeRecord_<K, V>|null = null;\n  /** @internal */\n  _next: KeyValueChangeRecord_<K, V>|null = null;\n  /** @internal */\n  _prev: KeyValueChangeRecord_<K, V>|null = null;\n  /** @internal */\n  _nextAdded: KeyValueChangeRecord_<K, V>|null = null;\n  /** @internal */\n  _nextRemoved: KeyValueChangeRecord_<K, V>|null = null;\n  /** @internal */\n  _nextChanged: KeyValueChangeRecord_<K, V>|null = null;\n\n  constructor(public key: K) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵɵdefineInjectable} from '../../di/interface/defs';\nimport {StaticProvider} from '../../di/interface/provider';\nimport {Optional, SkipSelf} from '../../di/metadata';\nimport {RuntimeError, RuntimeErrorCode} from '../../errors';\nimport {DefaultIterableDifferFactory} from '../differs/default_iterable_differ';\n\n\n\n/**\n * A type describing supported iterable types.\n *\n * @publicApi\n */\nexport type NgIterable<T> = Array<T>|Iterable<T>;\n\n/**\n * A strategy for tracking changes over time to an iterable. Used by {@link NgForOf} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n * @publicApi\n */\nexport interface IterableDiffer<V> {\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: NgIterable<V>|undefined|null): IterableChanges<V>|null;\n}\n\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n * @publicApi\n */\nexport interface IterableChanges<V> {\n  /**\n   * Iterate over all changes. `IterableChangeRecord` will contain information about changes\n   * to each item.\n   */\n  forEachItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /**\n   * Iterate over a set of operations which when applied to the original `Iterable` will produce the\n   * new `Iterable`.\n   *\n   * NOTE: These are not necessarily the actual operations which were applied to the original\n   * `Iterable`, rather these are a set of computed operations which may not be the same as the\n   * ones applied.\n   *\n   * @param record A change which needs to be applied\n   * @param previousIndex The `IterableChangeRecord#previousIndex` of the `record` refers to the\n   *        original `Iterable` location, where as `previousIndex` refers to the transient location\n   *        of the item, after applying the operations up to this point.\n   * @param currentIndex The `IterableChangeRecord#currentIndex` of the `record` refers to the\n   *        original `Iterable` location, where as `currentIndex` refers to the transient location\n   *        of the item, after applying the operations up to this point.\n   */\n  forEachOperation(\n      fn:\n          (record: IterableChangeRecord<V>, previousIndex: number|null,\n           currentIndex: number|null) => void): void;\n\n  /**\n   * Iterate over changes in the order of original `Iterable` showing where the original items\n   * have moved.\n   */\n  forEachPreviousItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all added items. */\n  forEachAddedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all moved items. */\n  forEachMovedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all removed items. */\n  forEachRemovedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /**\n   * Iterate over all items which had their identity (as computed by the `TrackByFunction`)\n   * changed.\n   */\n  forEachIdentityChange(fn: (record: IterableChangeRecord<V>) => void): void;\n}\n\n/**\n * Record representing the item change information.\n *\n * @publicApi\n */\nexport interface IterableChangeRecord<V> {\n  /** Current index of the item in `Iterable` or null if removed. */\n  readonly currentIndex: number|null;\n\n  /** Previous index of the item in `Iterable` or null if added. */\n  readonly previousIndex: number|null;\n\n  /** The item. */\n  readonly item: V;\n\n  /** Track by identity as computed by the `TrackByFunction`. */\n  readonly trackById: any;\n}\n\n/**\n * A function optionally passed into the `NgForOf` directive to customize how `NgForOf` uniquely\n * identifies items in an iterable.\n *\n * `NgForOf` needs to uniquely identify items in the iterable to correctly perform DOM updates\n * when items in the iterable are reordered, new items are added, or existing items are removed.\n *\n *\n * In all of these scenarios it is usually desirable to only update the DOM elements associated\n * with the items affected by the change. This behavior is important to:\n *\n * - preserve any DOM-specific UI state (like cursor position, focus, text selection) when the\n *   iterable is modified\n * - enable animation of item addition, removal, and iterable reordering\n * - preserve the value of the `<select>` element when nested `<option>` elements are dynamically\n *   populated using `NgForOf` and the bound iterable is updated\n *\n * A common use for custom `trackBy` functions is when the model that `NgForOf` iterates over\n * contains a property with a unique identifier. For example, given a model:\n *\n * ```ts\n * class User {\n *   id: number;\n *   name: string;\n *   ...\n * }\n * ```\n * a custom `trackBy` function could look like the following:\n * ```ts\n * function userTrackBy(index, user) {\n *   return user.id;\n * }\n * ```\n *\n * A custom `trackBy` function must have several properties:\n *\n * - be [idempotent](https://en.wikipedia.org/wiki/Idempotence) (be without side effects, and always\n * return the same value for a given input)\n * - return unique value for all unique inputs\n * - be fast\n *\n * @see [`NgForOf#ngForTrackBy`](api/common/NgForOf#ngForTrackBy)\n * @publicApi\n */\nexport interface TrackByFunction<T> {\n  // Note: the type parameter `U` enables more accurate template type checking in case a trackBy\n  // function is declared using a base type of the iterated type. The `U` type gives TypeScript\n  // additional freedom to infer a narrower type for the `item` parameter type, instead of imposing\n  // the trackBy's declared item type as the inferred type for `T`.\n  // See https://github.com/angular/angular/issues/40125\n\n  /**\n   * @param index The index of the item within the iterable.\n   * @param item The item in the iterable.\n   */\n  <U extends T>(index: number, item: T&U): any;\n}\n\n/**\n * Provides a factory for {@link IterableDiffer}.\n *\n * @publicApi\n */\nexport interface IterableDifferFactory {\n  supports(objects: any): boolean;\n  create<V>(trackByFn?: TrackByFunction<V>): IterableDiffer<V>;\n}\n\nexport function defaultIterableDiffersFactory() {\n  return new IterableDiffers([new DefaultIterableDifferFactory()]);\n}\n\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n *\n * @publicApi\n */\nexport class IterableDiffers {\n  /** @nocollapse */\n  static ɵprov = /** @pureOrBreakMyCode */ ɵɵdefineInjectable(\n      {token: IterableDiffers, providedIn: 'root', factory: defaultIterableDiffersFactory});\n\n  /**\n   * @deprecated v4.0.0 - Should be private\n   */\n  factories: IterableDifferFactory[];\n  constructor(factories: IterableDifferFactory[]) {\n    this.factories = factories;\n  }\n\n  static create(factories: IterableDifferFactory[], parent?: IterableDiffers): IterableDiffers {\n    if (parent != null) {\n      const copied = parent.factories.slice();\n      factories = factories.concat(copied);\n    }\n\n    return new IterableDiffers(factories);\n  }\n\n  /**\n   * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n   * inherited {@link IterableDiffers} instance with the provided factories and return a new\n   * {@link IterableDiffers} instance.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * The following example shows how to extend an existing list of factories,\n   * which will only be applied to the injector for this component and its children.\n   * This step is all that's required to make a new {@link IterableDiffer} available.\n   *\n   * ```\n   * @Component({\n   *   viewProviders: [\n   *     IterableDiffers.extend([new ImmutableListDiffer()])\n   *   ]\n   * })\n   * ```\n   */\n  static extend(factories: IterableDifferFactory[]): StaticProvider {\n    return {\n      provide: IterableDiffers,\n      useFactory: (parent: IterableDiffers|null) => {\n        // if parent is null, it means that we are in the root injector and we have just overridden\n        // the default injection mechanism for IterableDiffers, in such a case just assume\n        // `defaultIterableDiffersFactory`.\n        return IterableDiffers.create(factories, parent || defaultIterableDiffersFactory());\n      },\n      // Dependency technically isn't optional, but we can provide a better error message this way.\n      deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n    };\n  }\n\n  find(iterable: any): IterableDifferFactory {\n    const factory = this.factories.find(f => f.supports(iterable));\n    if (factory != null) {\n      return factory;\n    } else {\n      throw new RuntimeError(\n          RuntimeErrorCode.NO_SUPPORTING_DIFFER_FACTORY,\n          ngDevMode &&\n              `Cannot find a differ supporting object '${iterable}' of type '${\n                  getTypeNameForDebugging(iterable)}'`);\n    }\n  }\n}\n\nexport function getTypeNameForDebugging(type: any): string {\n  return type['name'] || typeof type;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Optional, SkipSelf, StaticProvider, ɵɵdefineInjectable} from '../../di';\nimport {RuntimeError, RuntimeErrorCode} from '../../errors';\n\nimport {DefaultKeyValueDifferFactory} from './default_keyvalue_differ';\n\n\n/**\n * A differ that tracks changes made to an object over time.\n *\n * @publicApi\n */\nexport interface KeyValueDiffer<K, V> {\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: Map<K, V>): KeyValueChanges<K, V>|null;\n\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: {[key: string]: V}): KeyValueChanges<string, V>|null;\n  // TODO(TS2.1): diff<KP extends string>(this: KeyValueDiffer<KP, V>, object: Record<KP, V>):\n  // KeyValueDiffer<KP, V>;\n}\n\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n * @publicApi\n */\nexport interface KeyValueChanges<K, V> {\n  /**\n   * Iterate over all changes. `KeyValueChangeRecord` will contain information about changes\n   * to each item.\n   */\n  forEachItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over changes in the order of original Map showing where the original items\n   * have moved.\n   */\n  forEachPreviousItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all keys for which values have changed.\n   */\n  forEachChangedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all added items.\n   */\n  forEachAddedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all removed items.\n   */\n  forEachRemovedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n}\n\n/**\n * Record representing the item change information.\n *\n * @publicApi\n */\nexport interface KeyValueChangeRecord<K, V> {\n  /**\n   * Current key in the Map.\n   */\n  readonly key: K;\n\n  /**\n   * Current value for the key or `null` if removed.\n   */\n  readonly currentValue: V|null;\n\n  /**\n   * Previous value for the key or `null` if added.\n   */\n  readonly previousValue: V|null;\n}\n\n/**\n * Provides a factory for {@link KeyValueDiffer}.\n *\n * @publicApi\n */\nexport interface KeyValueDifferFactory {\n  /**\n   * Test to see if the differ knows how to diff this kind of object.\n   */\n  supports(objects: any): boolean;\n\n  /**\n   * Create a `KeyValueDiffer`.\n   */\n  create<K, V>(): KeyValueDiffer<K, V>;\n}\n\nexport function defaultKeyValueDiffersFactory() {\n  return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]);\n}\n\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n *\n * @publicApi\n */\nexport class KeyValueDiffers {\n  /** @nocollapse */\n  static ɵprov = /** @pureOrBreakMyCode */ ɵɵdefineInjectable(\n      {token: KeyValueDiffers, providedIn: 'root', factory: defaultKeyValueDiffersFactory});\n\n  /**\n   * @deprecated v4.0.0 - Should be private.\n   */\n  factories: KeyValueDifferFactory[];\n\n  constructor(factories: KeyValueDifferFactory[]) {\n    this.factories = factories;\n  }\n\n  static create<S>(factories: KeyValueDifferFactory[], parent?: KeyValueDiffers): KeyValueDiffers {\n    if (parent) {\n      const copied = parent.factories.slice();\n      factories = factories.concat(copied);\n    }\n    return new KeyValueDiffers(factories);\n  }\n\n  /**\n   * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n   * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n   * {@link KeyValueDiffers} instance.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * The following example shows how to extend an existing list of factories,\n   * which will only be applied to the injector for this component and its children.\n   * This step is all that's required to make a new {@link KeyValueDiffer} available.\n   *\n   * ```\n   * @Component({\n   *   viewProviders: [\n   *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n   *   ]\n   * })\n   * ```\n   */\n  static extend<S>(factories: KeyValueDifferFactory[]): StaticProvider {\n    return {\n      provide: KeyValueDiffers,\n      useFactory: (parent: KeyValueDiffers) => {\n        // if parent is null, it means that we are in the root injector and we have just overridden\n        // the default injection mechanism for KeyValueDiffers, in such a case just assume\n        // `defaultKeyValueDiffersFactory`.\n        return KeyValueDiffers.create(factories, parent || defaultKeyValueDiffersFactory());\n      },\n      // Dependency technically isn't optional, but we can provide a better error message this way.\n      deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n    };\n  }\n\n  find(kv: any): KeyValueDifferFactory {\n    const factory = this.factories.find(f => f.supports(kv));\n    if (factory) {\n      return factory;\n    }\n    throw new RuntimeError(\n        RuntimeErrorCode.NO_SUPPORTING_DIFFER_FACTORY,\n        ngDevMode && `Cannot find a differ supporting object '${kv}'`);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DefaultIterableDifferFactory} from './differs/default_iterable_differ';\nimport {DefaultKeyValueDifferFactory} from './differs/default_keyvalue_differ';\nimport {IterableDifferFactory, IterableDiffers} from './differs/iterable_differs';\nimport {KeyValueDifferFactory, KeyValueDiffers} from './differs/keyvalue_differs';\n\nexport {SimpleChange, SimpleChanges} from '../interface/simple_change';\nexport {devModeEqual} from '../util/comparison';\nexport {ChangeDetectorRef} from './change_detector_ref';\nexport {ChangeDetectionStrategy, ChangeDetectorStatus, isDefaultChangeDetectionStrategy} from './constants';\nexport {DefaultIterableDiffer, DefaultIterableDifferFactory} from './differs/default_iterable_differ';\nexport {DefaultKeyValueDifferFactory} from './differs/default_keyvalue_differ';\nexport {IterableChangeRecord, IterableChanges, IterableDiffer, IterableDifferFactory, IterableDiffers, NgIterable, TrackByFunction} from './differs/iterable_differs';\nexport {KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDifferFactory, KeyValueDiffers} from './differs/keyvalue_differs';\nexport {PipeTransform} from './pipe_transform';\n\n\n\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nconst keyValDiff: KeyValueDifferFactory[] = [new DefaultKeyValueDifferFactory()];\n\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nconst iterableDiff: IterableDifferFactory[] = [new DefaultIterableDifferFactory()];\n\nexport const defaultIterableDiffers = new IterableDiffers(iterableDiff);\n\nexport const defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {createPlatformFactory, PlatformRef} from './application_ref';\nimport {StaticProvider} from './di';\n\n/**\n * This platform has to be included in any other platform\n *\n * @publicApi\n */\nexport const platformCore: (extraProviders?: StaticProvider[]|undefined) => PlatformRef =\n    createPlatformFactory(null, 'core', []);\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef} from './application_ref';\nimport {NgModule} from './metadata';\n\n/**\n * Re-exported by `BrowserModule`, which is included automatically in the root\n * `AppModule` when you create a new app with the CLI `new` command. Eagerly injects\n * `ApplicationRef` to instantiate it.\n *\n * @publicApi\n */\n@NgModule()\nexport class ApplicationModule {\n  // Inject ApplicationRef to make it eager...\n  constructor(appRef: ApplicationRef) {}\n}\n"],"names":["UINT32_MAX","setInt64","view","offset","value","high","Math","floor","low","setUint32","getInt64","getInt32","getUint32","TEXT_ENCODING_AVAILABLE","process","_a","TextEncoder","TextDecoder","utf8Count","str","strLength","length","byteLength","pos","charCodeAt","extra","sharedTextEncoder","undefined","TEXT_ENCODER_THRESHOLD","_b","utf8EncodeTE","encodeInto","output","outputOffset","subarray","set","encode","utf8DecodeJs","bytes","inputOffset","end","units","result","byte1","push","byte2","byte3","unit","String","fromCharCode","apply","sharedTextDecoder","TEXT_DECODER_THRESHOLD","_c","type","data","message","_super","proto","Object","create","DecodeError","prototype","setPrototypeOf","_this","defineProperty","configurable","enumerable","name","__extends","Error","timestampExtension","object","msec","sec","nsec","nsecInSec","Date","rv","Uint8Array","DataView","buffer","secHigh","secLow","encodeTimeSpecToTimestamp","getTime","decode","timeSpec","byteOffset","nsec30AndSecHigh2","decodeTimestampToTimeSpec","register","ExtensionCodec","encoders","decoders","index","builtInEncoders","builtInDecoders","context","i","encodeExt","ExtData","decodeExt","ensureUint8Array","ArrayBuffer","isView","from","extensionCodec","maxDepth","initialBufferSize","sortKeys","forceFloat32","ignoreUndefined","forceIntegerToFloat","Encoder","reinitializeState","doEncode","getUint8Array","depth","encodeNil","encodeBoolean","encodeNumber","encodeString","encodeObject","sizeToWrite","requiredSize","resizeBuffer","newSize","newBuffer","newBytes","newView","writeU8","Number","isSafeInteger","writeU16","writeU32","writeU64","writeI8","writeI16","writeI32","writeI64","writeF32","writeF64","ensureBufferSizeToWrite","writeStringHeader","utf8EncodeJs","ext","tryToEncode","encodeExtension","Array","isArray","encodeArray","encodeBinary","toString","encodeMap","size","writeU8a","_i","item","keys","count","sort","countWithoutUndefined","key","setUint8","values","setInt8","setUint16","setInt16","setInt32","setFloat32","setFloat64","setUint64","prettyByte","byte","concat","abs","padStart","maxKeyLength","maxLengthPerKey","caches","CachedKeyDecoder","FIND_CHUNK","record","recordBytes","j","records","random","cachedValue","find","hit","miss","slicedCopyOfBytes","slice","call","store","EMPTY_VIEW","EMPTY_BYTES","DataViewIndexOutOfBoundsError","getInt8","e","constructor","MORE_DATA","sharedCachedKeyDecoder","maxStrLength","maxBinLength","maxArrayLength","maxMapLength","maxExtLength","keyDecoder","Decoder","totalPos","headByte","stack","bufferView","createDataView","hasRemaining","remainingData","newData","setBuffer","posToShow","RangeError","doDecodeSync","createExtraByteError","stream","decoded","stream_1","appendBuffer","decodeMultiAsync","isArrayHeaderRequired","arrayItemsLeft","stream_2","readArraySize","complete","e_2","DECODE","readHeadByte","pushMapState","pushArrayState","decodeUtf8String","readF32","readF64","readU8","readU16","readU32","readU64","readI8","readI16","readI32","readI64","lookU8","lookU16","lookU32","decodeBinary","decodeExtension","state","array","position","pop","keyType","map","readCount","headerOffset","stateIsMapKey","canBeCached","stringBytes","utf8DecodeTD","headOffset","extType","getUint8","getUint16","getInt16","getFloat32","getFloat64","BinaryMessageFormat","lenBuffer","sizePart","input","uint8Array","numBitsToShift","byteRead","numBytes","min","SERIALIZED_PING_MESSAGE","MessageType","MessagePackHubProtocol","messagePackOptions","version","transferFormat","TransferFormat","_errorResult","_voidResult","_nonVoidResult","this","_encoder","_decoder","parseMessages","logger","val","NullLogger","messages","parse","hubMessages","parsedMessage","_parseMessage","writeMessage","_writeInvocation","_writeStreamInvocation","_writeStreamItem","_writeCompletion","write","_writeCancelInvocation","properties","messageType","_createInvocationMessage","_readHeaders","_createStreamItemMessage","_createCompletionMessage","_createPingMessage","_createCloseMessage","log","LogLevel","allowReconnect","error","headers","invocationId","arguments","streamIds","target","resultKind","invocationMessage","payload","streamInvocationMessage","streamItemMessage","completionMessage","cancelInvocationMessage","DEFAULT_RETRY_DELAYS_IN_MILLISECONDS","DefaultReconnectPolicy","retryDelays","_retryDelays","nextRetryDelayInMilliseconds","retryContext","previousRetryCount","HttpError","errorMessage","statusCode","trueProto","super","__proto__","TimeoutError","AbortError","UnsupportedTransportError","transport","errorType","DisabledTransportError","FailedToStartTransportError","FailedToNegotiateWithServerError","AggregateErrors","innerErrors","HttpResponse","statusText","content","HttpClient","get","url","options","send","method","post","delete","getCookieString","Arg","match","Platform","isBrowser","window","document","isWebWorker","self","isReactNative","isNode","getDataDetail","includeContent","detail","isArrayBuffer","forEach","num","substr","formatArrayBuffer","sendMessage","transportName","httpClient","accessTokenFactory","token","getUserAgentHeader","logMessageContent","responseType","response","timeout","withCredentials","SubjectSubscription","subject","observer","_subject","_observer","dispose","observers","indexOf","splice","cancelCallback","catch","_","ConsoleLogger","minimumLogLevel","_minLevel","out","console","logLevel","msg","toISOString","warn","info","userAgentHeaderName","constructUserAgent","getOsName","getRuntime","getRuntimeVersion","os","runtime","runtimeVersion","userAgent","majorAndMinor","split","platform","versions","node","getErrorString","FetchHttpClient","_logger","fetch","requireFunc","__non_webpack_require__","_jar","_fetchType","bind","globalThis","global","getGlobalThis","AbortController","_abortControllerType","request","abortSignal","aborted","abortController","onabort","abort","timeoutId","msTimeout","setTimeout","body","cache","credentials","mode","redirect","signal","clearTimeout","ok","deserializeContent","status","cookies","getCookies","c","join","arrayBuffer","text","XhrHttpClient","Promise","reject","resolve","xhr","XMLHttpRequest","open","setRequestHeader","header","onload","responseText","onerror","ontimeout","DefaultHttpClient","_httpClient","HeaderNames","_isAborted","LongPollingTransport","_accessTokenFactory","_pollAbort","_options","_running","onreceive","onclose","pollAborted","isRequired","isIn","_url","pollOptions","_getAccessToken","_updateHeaderToken","pollUrl","now","_closeError","_receiving","_poll","Authorization","_raiseOnClose","deleteOptions","logMessage","ServerSentEventsTransport","encodeURIComponent","eventSource","opened","EventSource","Cookie","onmessage","_close","onopen","_eventSource","stop","close","WebSocketTransport","webSocketConstructor","_logMessageContent","_webSocketConstructor","_headers","webSocket","replace","binaryType","_event","_webSocket","event","ErrorEvent","readyState","OPEN","_isCloseEvent","wasClean","code","reason","HttpConnection","_stopPromiseResolver","features","_negotiateVersion","baseUrl","_resolveUrl","webSocketModule","eventSourceModule","WebSocket","_connectionState","_connectionStarted","_startInternalPromise","_startInternal","_stopPromise","_sendQueue","TransportSendQueue","_stopInternal","_stopError","_stopConnection","skipNegotiation","HttpTransportType","_constructTransport","_startTransport","negotiateResponse","redirects","_getNegotiationResponse","ProtocolVersion","accessToken","_createTransport","inherentKeepAlive","negotiateUrl","_resolveNegotiateUrl","JSON","negotiateVersion","connectionToken","connectionId","_createConnectUrl","requestedTransport","requestedTransferFormat","connectUrl","_isITransport","transportExceptions","transports","availableTransports","negotiate","endpoint","transportOrError","_resolveTransportOrError","ex","connect","actualTransport","transportMatches","transferFormats","s","lastIndexOf","aTag","createElement","href","substring","_transport","_buffer","_executing","_sendBufferedData","PromiseSource","_transportResult","_sendLoopPromise","_sendLoop","_bufferData","promise","transportResult","_concatBuffers","arrayBuffers","totalLength","b","reduce","a","_resolver","_rejecter","TextMessageFormat","RecordSeparator","RecordSeparatorCode","HandshakeProtocol","writeHandshakeRequest","handshakeRequest","stringify","parseHandshakeResponse","messageData","binaryData","separatorIndex","responseLength","textData","Subject","next","err","subscribe","HubConnectionState","HubConnection","connection","protocol","reconnectPolicy","_nextKeepAlive","_freezeEventListener","serverTimeoutInMilliseconds","keepAliveIntervalInMilliseconds","_protocol","_reconnectPolicy","_handshakeProtocol","_processIncomingData","_connectionClosed","_callbacks","_methods","_closedCallbacks","_reconnectingCallbacks","_reconnectedCallbacks","_invocationId","_receivedHandshakeResponse","Disconnected","_cachedPingMessage","Reconnecting","start","_startPromise","_startWithStateTransitions","Connecting","addEventListener","Connected","_stopDuringStartError","handshakePromise","_handshakeResolver","_handshakeRejecter","_sendMessage","_cleanupTimeout","_resetTimeoutPeriod","_resetKeepAliveInterval","_cleanupPingTimer","startPromise","Disconnecting","_reconnectDelayHandle","_completeClose","methodName","args","streams","_replaceStreamingParams","invocationDescriptor","_createStreamInvocation","promiseQueue","cancelInvocation","_createCancelInvocation","then","_sendWithProtocol","invocationEvent","_launchStreams","sendPromise","_createInvocation","invoke","on","newMethod","toLowerCase","off","handlers","removeIdx","callback","onreconnecting","onreconnected","_processHandshakeResponse","_invokeClientMethod","responseMessage","_timeoutHandle","serverTimeout","_pingServerHandle","nextPing","async","methods","m","_cancelCallbacksWithError","_reconnect","removeEventListener","reconnectStartTime","previousReconnectAttempts","retryError","nextRetryDelay","_getNextRetryDelay","elapsedMilliseconds","retryReason","callbacks","nonblocking","streamId","argument","_isObservable","arg","id","JsonHubProtocol","_isInvocationMessage","_isStreamItemMessage","_isCompletionMessage","_assertNotEmptyString","LogLevelNameMapping","trace","debug","information","warning","critical","none","HubConnectionBuilder","configureLogging","logging","mapping","parseLogLevel","withUrl","transportTypeOrOptions","isNotEmpty","httpConnectionOptions","withHubProtocol","withAutomaticReconnect","retryDelaysOrReconnectPolicy","build","_logLevel","_message","Module","moduleOverrides","hasOwnProperty","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","arguments_","importScripts","read_","readAsync","readBinary","nodeFS","nodePath","scriptDirectory","require","__dirname","filename","binary","ret","assert","module","ExitStatus","read","f","readbuffer","scriptArgs","quit","print","printErr","location","currentScript","src","wasmBinary","wasmMemory","WebAssembly","ABORT","condition","HEAPU8","UTF8Decoder","updateGlobalBufferAndViews","buf","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","wasmTable","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runDependencies","runDependencyWatcher","dependenciesFulfilled","what","RuntimeError","isDataURI","startsWith","isFileURI","path","wasmBinaryFile","getBinary","file","callRuntimeCallbacks","shift","func","emscripten_realloc_buffer","grow","calledRun","asmLibraryArg","dest","copyWithin","requestedSize","x","multiple","oldSize","maxHeapSize","cutDown","overGrownHeapSize","max","_malloc","receiveInstance","instance","cb","exports","unshift","clearInterval","removeRunDependency","receiveInstantiationResult","instantiateArrayBuffer","receiver","getBinaryPromise","instantiate","instantiateStreaming","createWasm","stackAlloc","run","doRun","postRun","preRun","slab","allocator","ptr","maxBytesToRead","heap","idx","endIdx","endPtr","u0","u1","u2","ch","UTF8ArrayToString","runCaller","unloadRuntime","define","ArgonType","Argon2d","Argon2i","Argon2id","loadModule","mem","_promise","_module","loadWasmModule","loadWasmBinary","initWasm","createWasmMemory","loadArgon2WasmModule","loadArgon2WasmBinary","wasmModule","decodeWasmBinary","base64","atob","KB","WASM_PAGE_SIZE","totalMemory","initialMemory","ceil","Memory","initial","maximum","allocateArray","arr","allocate","ALLOC_NORMAL","allocateArrayStr","encodeUtf8","Buffer","argon2Hash","params","mCost","tCost","time","parallelism","pwdEncoded","pass","pwd","pwdlen","saltEncoded","salt","saltlen","argon2Type","hash","hashLen","secret","secretlen","ad","adlen","hashlen","encodedlen","_argon2_encodedlen","encoded","res","_argon2_hash_ext","UTF8ToString","_argon2_error_message","hashStr","hashArr","HEAP8","hashHex","_free","argon2Verify","enc","typeStr","_argon2_verify_ext","verify","bigInt","BASE","MAX_INT","MAX_INT_ARR","smallToArray","DEFAULT_ALPHABET","supportsNativeBigInt","BigInt","Integer","v","radix","alphabet","caseSensitive","parseBase","parseValue","BigInteger","sign","isSmall","SmallInteger","NativeBigInt","isPrecise","n","arrayToSmall","trim","compareAbs","createArray","truncate","add","sum","l_a","l_b","r","carry","base","addAny","addSmall","l","subtract","difference","a_l","b_l","borrow","subtractSmall","multiplyLong","product","a_i","multiplySmall","shiftLeft","multiplyKaratsuba","y","d","ac","bd","abcd","multiplySmallAndArray","square","divModSmall","lambda","q","remainder","divisor","quotient","divModAny","negate","comparison","quotientDigit","divisorMostSignificantDigit","divMod1","guess","xlen","highx","highy","check","part","reverse","divMod2","qSign","mod","mSign","isBasicPrime","isUnit","equals","isEven","isDivisibleBy","lesser","millerRabinTest","nPrev","prev","divide","modPow","plus","subtractAny","minus","small","multiply","l1","l2","times","_multiplyBySmall","divmod","over","pow","_0","_1","_2","isNegative","exp","isZero","modInv","isPositive","isOdd","compare","Infinity","compareTo","eq","notEquals","neq","greater","gt","lt","greaterOrEquals","geq","lesserOrEquals","leq","isPrime","strict","bits","bitLength","logN","toJSNumber","t","isProbablePrime","iterations","rng","randBetween","lastT","lastR","zero","newT","one","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","fn","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","shiftRight","remQuo","and","or","xor","LOBMASK_I","roughLOB","integerLogarithm","tmp","p","gcd","absBase","alphabetValues","digits","parseBaseFromArray","toBase","valueOf","neg","left","digit","toBaseString","parseStringValue","decimalPlace","test","parseNumberValue","toArray","toJSON","parseInt","minusOne","lcm","isInstance","usedRNG","range","restricted","top","fromArray","step2list","step3list","C","re_mgr0","re_mgr1","re_meq1","re_s_v","re_1a","re2_1a","re_1b","re2_1b","re_1b_2","re2_1b_2","re3_1b_2","re4_1b_2","re_1c","re_2","re_3","re_4","re2_4","re_5","re_5_1","re3_5","porterStemmer","lunr","config","builder","Builder","pipeline","trimmer","stopWordFilter","stemmer","searchPipeline","utils","asString","obj","clone","TypeError","FieldRef","docRef","fieldName","stringValue","_stringValue","joiner","fromString","fieldRef","Set","elements","intersect","other","union","contains","empty","intersection","element","idf","posting","documentCount","documentsWithTerm","Token","metadata","update","tokenizer","len","tokens","sliceEnd","sliceStart","sliceLength","charAt","separator","tokenMetadata","Pipeline","_stack","registeredFunctions","registerFunction","label","warnIfFunctionNotRegistered","load","serialised","fnName","fns","after","existingFn","newFn","before","remove","stackLength","memo","k","runString","reset","Vector","_magnitude","positionForIndex","pivotPoint","pivotIndex","insert","insertIdx","upsert","magnitude","sumOfSquares","elementsLength","sqrt","dot","otherVector","dotProduct","aLen","bLen","aVal","bVal","similarity","RegExp","w","stem","suffix","firstch","re","re2","re3","re4","toUpperCase","fp","exec","generateStopWordFilter","stopWords","words","stopWord","TokenSet","final","edges","_nextId","finish","root","fromClause","clause","fromFuzzyString","term","editDistance","editsRemaining","frame","noEditNode","char","insertionNode","substitutionNode","transposeNode","charA","charB","prefix","edge","_str","labels","qNode","qEdges","qLen","nEdges","nLen","qEdge","nEdge","previousWord","uncheckedNodes","minimizedNodes","word","commonPrefix","minimize","child","nextNode","parent","downTo","childKey","Index","attrs","invertedIndex","fieldVectors","tokenSet","fields","search","queryString","query","QueryParser","Query","matchingFields","queryVectors","termFieldCache","requiredMatches","prohibitedMatches","clauses","terms","clauseMatches","usePipeline","termTokenSet","expandedTerms","presence","REQUIRED","field","expandedTerm","termIndex","_index","fieldPosting","matchingDocumentRefs","termField","matchingDocumentsSet","PROHIBITED","boost","fieldMatch","matchingDocumentRef","matchingFieldRef","MatchData","allRequiredMatches","allProhibitedMatches","matchingFieldRefs","results","matches","isNegated","docMatch","fieldVector","score","matchData","combine","ref","serializedIndex","serializedVectors","serializedInvertedIndex","tokenSetBuilder","tuple","_ref","_fields","_documents","fieldTermFrequencies","fieldLengths","_k1","metadataWhitelist","attributes","number","k1","doc","extractor","fieldTerms","metadataKey","calculateAverageFieldLengths","fieldRefs","numberOfFields","accumulator","documentsWithField","averageFieldLength","createFieldVectors","fieldRefsLength","termIdfCache","fieldLength","termFrequencies","termsLength","fieldBoost","docBoost","scoreWithPrecision","tf","round","createTokenSet","use","clonedMetadata","metadataKeys","otherMatchData","allFields","wildcard","NONE","LEADING","TRAILING","OPTIONAL","QueryParseError","QueryLexer","lexemes","escapeCharPositions","lexText","sliceString","subSlices","emit","escapeCharacter","EOS","width","ignore","backup","acceptDigitRun","charCode","more","FIELD","TERM","EDIT_DISTANCE","BOOST","PRESENCE","lexField","lexer","lexTerm","lexEditDistance","lexBoost","lexEOS","termSeparator","currentClause","lexemeIdx","parseClause","peekLexeme","consumeLexeme","lexeme","nextClause","completedClause","parser","parsePresence","parseField","parseTerm","nextLexeme","possibleFields","parseEditDistance","parseBoost","isNaN","forge","registerAlgorithm","cipher","aes","Algorithm","startEncrypting","iv","_createCipher","decrypt","createEncryptionCipher","startDecrypting","createDecryptionCipher","init","initialize","blockSize","encrypt","inBlock","outBlock","_updateBlock","_w","_init","util","createBuffer","putByte","encryptOp","_expandKey","modes","ecb","cbc","cfb","ofb","ctr","gcm","sbox","isbox","rcon","mix","imix","xtime","e2","e4","e8","sx","sx2","me","ime","ei","temp","iNk","Nk","m0","m1","m2","m3","wnew","wi","sub","a2","b2","c2","Nr","algorithm","createDecipher","createCipher","ByteBuffer","tls","initConnectionState","sp","client","entity","ConnectionEnd","cipherState","server_write_key","client_write_key","server_write_IV","client_write_IV","cipherFunction","decrypt_aes_cbc_sha1","encrypt_aes_cbc_sha1","macLength","mac_length","macFunction","hmac_sha1","rval","mac","macKey","sequenceNumber","fragment","putBytes","updateSequenceNumber","minor","Versions","TLS_1_0","getBytesSync","TLS_1_1","encrypt_aes_cbc_sha1_padding","padding","fillWithByte","decrypt_aes_cbc_sha1_padding","paddingLength","last","at","getBytes","macLen","mac2","mac1","hmac","digest","compareMacs","CipherSuites","initSecurityParameters","bulk_cipher_algorithm","BulkCipherAlgorithm","cipher_type","CipherType","block","enc_key_length","block_length","fixed_iv_length","record_iv_length","mac_algorithm","MACAlgorithm","mac_key_length","asn1","privateKeyValidator","tagClass","Class","UNIVERSAL","Type","SEQUENCE","constructed","INTEGER","capture","OID","OCTETSTRING","publicKeyValidator","captureAsn1","BITSTRING","composed","captureBitStringValue","_checkBufferLength","remaining","available","requested","APPLICATION","CONTEXT_SPECIFIC","PRIVATE","BOOLEAN","NULL","ODESC","EXTERNAL","REAL","ENUMERATED","EMBEDDED","UTF8","ROID","SET","PRINTABLESTRING","IA5STRING","UTCTIME","GENERALIZEDTIME","BMPSTRING","bitStringContents","original","copy","excludeBitStringContents","obj1","obj2","equal","includeBitStringContents","getBerValueLength","getByte","getInt","_fromDer","b1","longFormBytes","_getValueLength","decodeBitStrings","savedRead","savedRemaining","unused","used","tc","asn1Options","fromDer","parseAllBytes","byteCount","toDer","useBitStringContents","putBuffer","putInt16","lenBytes","oidToDer","oid","valueBytes","derToOid","utcTimeToDate","utc","date","year","MM","DD","hh","mm","ss","setUTCFullYear","setUTCHours","setTime","generalizedTimeToDate","gentime","YYYY","fff","isUTC","parseFloat","setFullYear","setHours","dateToUtcTime","format","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","dateToGeneralizedTime","integerToDer","putSignedInt","integer","derToInteger","getSignedInt","validate","errors","optional","captureBitStringContents","_nonLatinRegex","prettyPrint","level","indentation","indent","IA5String","subvalues","pki","oids","bytesToHex","decodeUtf8","api","_reverseAlphabets","maxline","first","_encodeWithByteBuffer","regex","table","algorithms","getAlgorithm","BlockCipher","_finish","_input","_op","_decrypt","opts","compact","pad","unpad","overflow","afterFinish","transformIV","ints","blocks","inc32","from64To32","_ints","_inBlock","_outBlock","putInt32","_prev","_iv","_partialBlock","_partialOutput","_partialBytes","inputLength","partialBytes","clear","_R","additionalData","_cipherLength","_tagLength","tagLength","_tag","tag","_hashBlock","_hashSubkey","componentBits","_m","generateHashTable","ivLength","_j0","ghash","_aDataLength","_s","lengths","z_i","v_i","lsb","tableMultiply","z","x_i","ah","h","multiplier","perInt","shft","generateSubHashTable","mid","half","m_i","m_j","des","_keys","pc2bytes0","pc2bytes1","pc2bytes2","pc2bytes3","pc2bytes4","pc2bytes5","pc2bytes6","pc2bytes7","pc2bytes8","pc2bytes9","pc2bytes10","pc2bytes11","pc2bytes12","pc2bytes13","shifts","right","lefttmp","righttmp","_createKeys","spfunction1","spfunction2","spfunction3","spfunction4","spfunction5","spfunction6","spfunction7","spfunction8","looping","endloop","loopinc","right1","right2","asn1Validator","jsbn","NativeBuffer","ed25519","messageToNativeBuffer","encoding","md","constants","PUBLIC_KEY_BYTE_LENGTH","PRIVATE_KEY_BYTE_LENGTH","SEED_BYTE_LENGTH","SIGN_BYTE_LENGTH","HASH_BYTE_LENGTH","generateKeyPair","seed","pk","sk","gf","sha512","scalarbase","pack","crypto_sign_keypair","publicKey","privateKey","privateKeyFromAsn1","privateKeyOid","ed25519Oid","EdDSA25519","privateKeyBytes","publicKeyFromAsn1","publicKeyOid","publicKeyBytes","ed25519PublicKey","publicKeyFromPrivateKey","signedMsg","sm","smlen","modL","crypto_sign","sig","signature","chk","den","den2","den4","den6","set25519","gf1","o","unpack25519","S","M","D","Z","A","pow2523","neq25519","I","par25519","gf0","unpackneg","scalarmult","crypto_verify_32","crypto_sign_open","D2","X","Y","L","msgLen","g","cswap","sel25519","tx","ty","zi","inv25519","pack25519","car25519","xi","yi","vn","t0","t1","t2","t3","t4","t5","t6","t7","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","usePureJavaScript","_key","_md","_ipadding","_opadding","ctx","keylen","blockLength","inner","getMac","dbits","fromNumber","nbi","am3","xl","xh","navigator","am","appName","DB","DM","DV","FV","F1","F2","rr","vv","BI_RC","int2char","intAt","nbv","fromInt","nbits","Classic","Montgomery","mp","invDigit","mpl","mph","um","mt2","op_and","op_or","op_xor","op_andnot","lbit","cbit","NullExp","nNop","Barrett","r2","q3","ONE","dlShiftTo","mu","convert","revert","divRemTo","mulTo","multiplyTo","sqrTo","squareTo","ZERO","subTo","copyTo","clamp","drShiftTo","fromRadix","mi","sh","lShiftTo","bs","cbs","bm","ds","rShiftTo","pm","pt","ts","ms","nsh","ys","y0","yt","d1","d2","qd","toRadix","km","modPowInt","multiplyUpperTo","multiplyLowerTo","dAddOffset","lowprimes","lplim","chunkSize","LN2","signum","cs","intValue","dMultiply","testBit","bitwiseTo","nextBytes","op","changeBit","addTo","modInt","millerRabin","n1","getLowestSetBit","prng","byteValue","shortValue","toByteArray","andNot","bitCount","setBit","clearBit","flipBit","divideAndRemainder","g2","is1","modInverse","u","kem","_createKDF","kdf","counterStart","digestLength","generate","rsa","keyLength","zeros","hexToBytes","fillString","encapsulation","kdf1","kdf2","levels","sLevelInfo","sLoggers","sConsoleLogger","LEVEL_LOCKED","NO_LEVEL_CHECK","INTERPOLATE","messageLevelIndex","flags","prepareStandard","standard","category","prepareFull","full","prepareStandardFull","standardFull","timestamp","makeLogger","logFunction","setLevel","lock","addLogger","levelHandlers","verbose","handler","URL","searchParams","has","consoleLogger","md5","_initialized","_padding","_g","_r","_k","sin","_state","messageLength","fullMessageLength","messageLengthSize","messageLength64","int32s","h0","h1","h2","h3","_update","finalBlock","putInt32Le","s2","getInt32Le","mgf","mgf1","maskLen","_IN","_I_","pbe","encryptedPrivateKeyValidator","PBES2AlgorithmsValidator","pkcs12PbeParamsValidator","prfOidToMessageDigest","prfOid","prfAlgorithm","supported","prfAlgorithmToMessageDigest","factory","encryptPrivateKeyInfo","password","saltSize","dkLen","encryptionAlgorithm","encryptedData","countBytes","ivLen","encOid","cipherFn","dk","pkcs5","pbkdf2","createPbkdf2Params","saltBytes","generatePkcs12Key","decryptPrivateKeyInfo","encryptionOid","getCipher","encryptionParams","encrypted","encryptedPrivateKeyToPem","epki","pem","encryptedPrivateKeyFromPem","headerType","procType","encryptRsaPrivateKey","rsaKey","legacy","wrapRsaPrivateKey","privateKeyToAsn1","opensslDeriveBytes","dekInfo","parameters","decryptRsaPrivateKey","rc2","iter","sha1","passBuf","Slen","Plen","P","B","Inew","chunk","setAt","getCipherForPBES2","getCipherForPKCS12PBE","supportedOids","kdfOid","kdfSalt","kdfIterationCount","encIv","dIvLen","digests","crypto","isNodejs","pbkdf2Sync","hLen","prf","u_c","u_c1","int32ToBytes","xorBytes","outer","setImmediate","foldHeader","insertSpace","$1","candidate","ltrim","contentDomain","encode64","rMessage","rHeader","rCRLF","decode64","lines","li","line","nl","vi","pkcs1","rsa_mgf1","maskLength","encode_rsa_oaep","mgf1Md","maxLength","lHash","PS","PS_length","seedLength","dbMask","maskedDB","seedMask","maskedSeed","decode_rsa_oaep","em","expectedLength","db","lHashPrime","in_ps","is_0","error_mask","p12","pkcs12","contentInfoValidator","pfxValidator","safeBagValidator","attributeValidator","certBagValidator","_getBagsByAttribute","safeContents","attrName","attrValue","bagType","safeBags","bag","_decodePkcs7Data","_decryptSafeContents","pkcs7","encryptedDataValidator","contentType","encAlgorithm","encParameter","encryptedContentAsn1","_decodeSafeContents","safeBag","validator","decoder","bagId","_decodeBagAttributes","bagAttributes","bagAsn1","bagValue","pkcs8ShroudedKeyBag","keyBag","certBag","certId","x509Certificate","certAsn1","cert","certificateFromAsn1","decodedAttrs","pkcs12FromAsn1","pfx","getBags","filter","localKeyId","localKeyIdHex","friendlyName","getBagsByFriendlyName","getBagsByLocalKeyId","macKeyBytes","macAlgorithm","sha256","sha384","macSalt","macIterations","generateKey","macDigest","authSafe","contentInfo","_decodeAuthenticatedSafe","toPkcs12Asn1","useMac","generateLocalKeyId","bagAttrs","pairedCert","certificateFromPem","certificateToAsn1","contents","chain","certSafeBags","certBagAttrs","certSafeBag","certSafeContents","certCI","pkAsn1","keySafeContents","keyCI","macData","safe","macValue","p7","_recipientFromAsn1","recipientInfoValidator","issuer","RDNAttributesAsArray","serialNumber","serial","toHex","encryptedContent","parameter","encKey","_recipientsToAsn1","recipients","distinguishedNameToAsn1","_signerToAsn1","digestAlgorithm","authenticatedAttributesAsn1","signatureAlgorithm","unauthenticatedAttributes","attrsAsn1","attr","_attributeToAsn1","messageDigest","signingTime","jan_1_1950","jan_1_2050","_fromAsn1","rawCapture","_decryptContent","ciph","messageFromPem","messageFromAsn1","messageToPem","pemObj","toAsn1","envelopedData","createEnvelopedData","createEncryptedData","signedData","createSignedData","fromAsn1","certificates","crls","signers","digestAlgorithmIdentifiers","signerInfos","signedDataValidator","certs","addSigner","signer","certificate","privateKeyFromPem","authenticatedAttributes","rsaEncryption","detached","detachedContent","mds","ai","_signersToAsn1","addSignerInfos","addDigestAlgorithmIds","addCertificate","addCertificateRevokationList","crl","envelopedDataValidator","infos","_recipientsFromAsn1","recipientInfos","ec","findRecipient","sAttr","rAttr","recipient","privKey","desCBC","addRecipient","keyLen","ciphFn","p7v","pkcs7asn1","encryptedContentInfoValidator","signerValidator","pemToDer","privateKeyToPem","privateKeyInfoToPem","prime","GCD_30_DELTA","THIRTY","generateProbablePrime","Worker","primeincFindPrimeWithoutWorkers","generateRandom","numWorkers","workers","workLoad","workerScript","estimateCores","cores","workerMessage","found","terminate","hex","postMessage","primeincFindPrimeWithWorkers","primeincFindPrime","mrTests","getMillerRabinTests","millerRabinTests","maxBlockTime","_primeinc","deltaIdx","bits1","_crypto","plugin","reseeds","generated","keyBytes","pools","_reseedSync","_seed","needed","collect","seedFileSync","_2powK","seedBytes","formatKey","formatSeed","defaultSeedFile","getRandomValues","globalScope","msCrypto","entropy","QuotaExceededError","hi","lo","pool","generateSync","increment","nextTick","seedFile","_reseed","randomBytes","collectInt","registerWorker","worker","listener","pss","saltLength","sLen","salt_","pssobj","modBits","emBits","emLen","mHash","m_","ps","mask","checkLen","jQuery","prng_aes","_prng_aes_output","_prng_aes_buffer","spawnPrng","_ctx","_navBytes","mousemove","clientX","clientY","keypress","createInstance","piTable","rol","ror","expandKey","effKeyBits","T","T1","T8","TM","mixRound","mashRound","_output","K","getInt16Le","R","runPlan","plan","putInt16Le","rsaPrivateKeyValidator","rsaPublicKeyValidator","digestInfoValidator","emsaPkcs1v15encode","oidBytes","digestInfo","_modPow","pub","dP","dQ","qInv","xp","xq","_encodePkcs1_v1_5","bt","eb","padByte","padNum","numZeros","padBytes","_decodePkcs1_v1_5","ml","_generateKeyPair","getPrime","pBits","qBits","p1","q1","phi","setPrivateKey","setPublicKey","_bnToBytes","_getMillerRabinTests","_detectNodeCrypto","_detectSubtleCrypto","subtle","_detectSubtleMsCrypto","_intToUint8Array","yhex","ed","expected","xhex","createKeyPairGenerationState","eInt","pqState","stepKeyPairGenerationState","total","modulusLength","publicExponent","publicKeyEncoding","privateKeyEncoding","priv","publicKeyFromPem","pair","exportKey","pkcs8","setRsaPublicKey","genOp","oncomplete","exportOp","keypair","generateKeyPairSync","scheme","schemeOptions","_parseAllDigestBytes","algorithmIdentifier","md2","sha224","setRsaPrivateKey","privateKeyModulus","privateKeyPublicExponent","privateKeyPrivateExponent","privateKeyPrime1","privateKeyPrime2","privateKeyExponent1","privateKeyExponent2","privateKeyCoefficient","privateKeyToRSAPrivateKey","rsaPublicKey","publicKeyModulus","publicKeyExponent","publicKeyToAsn1","publicKeyToSubjectPublicKeyInfo","publicKeyToRSAPublicKey","h4","h5","h6","h7","s0","maj","_states","_h","messageLength128","hlen","t1_hi","t1_lo","t2_hi","t2_lo","s0_hi","s0_lo","s1_hi","ch_hi","maj_hi","maj_lo","a_hi","a_lo","b_hi","b_lo","c_hi","c_lo","d_hi","d_lo","e_hi","e_lo","f_hi","f_lo","g_hi","g_lo","h_hi","h_lo","w2","w7","w15","w16","ssh","_addBigIntegerToBuffer","hexVal","_addStringToBuffer","putString","_sha1","sha","privateKeyToPutty","passphrase","comment","ppk","pubbuffer","privbuffer","encLen","aeskey","mackey","macbuffer","publicKeyToOpenSSH","privateKeyToOpenSSH","getPublicKeyFingerprint","delimiter","prf_TLS1","slen","s1","md5itr","sha1itr","md5bytes","sha1bytes","deflate","inflate","readVector","getInt24","writeVector","putInt","major","TLS_1_2","SupportedVersions","Version","MaxFragment","server","PRFAlgorithm","tls_prf_sha256","rc4","des3","aead","hmac_md5","hmac_sha256","hmac_sha384","hmac_sha512","CompressionMethod","ContentType","change_cipher_spec","alert","handshake","application_data","heartbeat","HandshakeType","hello_request","client_hello","server_hello","server_key_exchange","certificate_request","server_hello_done","certificate_verify","client_key_exchange","finished","Alert","Level","fatal","Description","close_notify","unexpected_message","bad_record_mac","decryption_failed","record_overflow","decompression_failure","handshake_failure","bad_certificate","unsupported_certificate","certificate_revoked","certificate_expired","certificate_unknown","illegal_parameter","unknown_ca","access_denied","decode_error","decrypt_error","export_restriction","protocol_version","insufficient_security","internal_error","user_canceled","no_renegotiation","HeartbeatMessageType","heartbeat_request","heartbeat_response","getCipherSuite","twoBytes","handleUnexpected","description","handleHelloRequest","handshaking","handshakes","queue","createAlert","flush","parseHelloMessage","session_id","extensions","cipher_suite","compression_method","cipher_suites","compression_methods","exts","snl","session","server_name","serverNameList","cipherSuite","compressionMethod","createSecurityParameters","msgRandom","cRandom","client_random","sRandom","createRandom","prf_algorithm","compression_algorithm","pre_master_secret","master_secret","server_random","handleServerHello","fail","sessionId","expect","SCC","resuming","SCE","handleClientHello","sessionCache","getSession","clientHelloVersion","CCC","verifyClient","CCE","CKE","createRecord","createServerHello","createChangeCipherSpec","pending","createConnectionState","current","createFinished","createCertificate","createServerKeyExchange","createCertificateRequest","createServerHelloDone","handleCertificate","certificate_list","cause","SKE","serverCertificate","clientCertificate","verifyCertificateChain","handleServerKeyExchange","SCR","handleClientKeyExchange","enc_pre_master_secret","getPrivateKey","CCV","handleCertificateRequest","certificate_types","certificate_authorities","certificateRequest","SHD","handleCertificateVerify","msgBytes","handleServerHelloDone","createClientKeyExchange","SER","createCertificateVerify","getClientSignature","handleChangeCipherSpec","SFI","CFI","handleFinished","vd","SAD","CAD","peerCertificate","isConnected","connected","handleAlert","origin","handleHandshake","fragmented","hsTable","handleApplicationData","dataReady","handleHeartbeat","createHeartbeat","expectedHeartbeatPayload","heartbeatReceived","__","R0","R1","R2","R3","R4","ctTable","H0","H1","H2","H3","H4","H5","H6","H7","H8","H9","generateKeys","tls10","client_write_MAC_key","server_write_MAC_key","createMode","compressionState","compressFunction","getTimezoneOffset","createClientHello","cipherSuites","cSuites","compressionMethods","cMethods","virtualHost","serverName","snList","extLength","putInt24","hint","getCertificate","certList","der","certBuffer","getSignature","certTypes","cAs","caStore","dn","byteBuffer","payloadLength","plaintextLength","rec","tlsData","tlsDataReady","_certErrorToAlertDesc","certificateError","verifyOptions","vfd","desc","_alertDescToCertError","createSessionCache","capacity","setSession","order","createConnection","createCaStore","cn","dpth","cts","closed","clearFail","ready","isEmpty","compatibleVersion","_readRecordHeader","_readRecord","aligned","prepare","prepareHeartbeatRequest","prf_tls1","seqNum","baseN","_checkBitsParam","ByteStringBuffer","isArrayBufferView","_constructedStringLength","browser","source","stopPropagation","MutationObserver","div","observe","oldSetImmediate","setAttribute","_optimizeConstructedString","putInt24Le","getInt24Le","DataBuffer","readOffset","growSize","writeOffset","accommodate","amount","dst","raw","utf16","utf8","s3","_base64","_base64Idx","_base58","chr1","chr2","chr3","enc1","enc2","enc3","enc4","unescape","decodeURIComponent","escape","base58","_setStorageObject","removeItem","setItem","_getStorageObject","getItem","_setItem","_getItem","_removeItem","prop","_clearItems","_callStorageFunction","done","exception","localStorage","clearItems","argi","parts","lastIndex","formatNumber","decimals","dec_point","thousands_sep","toFixed","formatSize","bytesFromIP","ip","bytesFromIPv4","bytesFromIPv6","blanks","bytesToIP","bytesToIPv4","bytesToIPv6","zeroGroups","zeroMaxGroup","group","hardwareConcurrency","Blob","blobUrl","createObjectURL","st","et","sample","samples","avg","revokeObjectURL","overlaps","r1","overlap","_shortNames","x509CertificateValidator","rsassaPssParameterValidator","certificationRequestInfoValidator","certificationRequestValidator","_getAttribute","shortName","rdn","si","valueTagClass","CRIAttributesAsArray","seq","extensionRequest","certificateExtensionFromAsn1","_readSignatureParameters","fillDefaults","algorithmOid","hashOid","maskGenOid","maskGenHashOid","_createSignatureDigest","signatureOid","_verifySignature","sha1WithRSAEncryption","sha1WithRSASignature","signatureParameters","_dnToAsn1","_fillMissingFields","attribute","valueConstructed","certificateExtensionToAsn1","_fillMissingExtensionFields","extension","digitalSignature","nonRepudiation","keyEncipherment","dataEncipherment","keyAgreement","keyCertSign","cRLSign","encipherOnly","decipherOnly","cA","pathLenConstraint","email","objsign","reserved","sslCA","emailCA","objCA","altNames","altName","ski","generateSubjectKeyIdentifier","subjectKeyIdentifier","keyIdentifier","authorityCertIssuer","subSeq","fullNameGeneralNames","_signatureParametersToAsn1","_CRIAttributesToAsn1","csr","computeHash","certificateToPem","publicKeyToPem","publicKeyToRSAPublicKeyPem","certificationRequestFromPem","certificationRequestFromAsn1","certificationRequestToPem","certificationRequestToAsn1","siginfo","validity","notBefore","notAfter","getField","sn","addField","setSubject","uniqueId","setIssuer","setExtensions","getExtension","tbsCertificate","getTBSCertificate","issued","expectedIssuer","actualIssuer","isIssuer","iattr","sattr","verifySubjectKeyIdentifier","certVersion","certSerialNumber","certSignatureOid","certSignatureParams","certinfoSignatureOid","certinfoSignatureParams","certSignature","certValidity1UTCTime","certValidity2GeneralizedTime","certValidity3UTCTime","certValidity4GeneralizedTime","imd","ibytes","certIssuer","certIssuerUniqueId","smd","sbytes","certSubject","certSubjectUniqueId","certExtensions","certificateExtensionsFromAsn1","subjectPublicKeyInfo","extseq","ev","gn","createCertificationRequest","csrVersion","csrSignatureOid","csrSignatureParams","csrSignature","certificationRequestInfo","certificationRequestInfoSubject","getAttribute","addAttribute","certificationRequestInfoAttributes","setAttributes","getCertificationRequestInfo","cri","_dateToAsn1","tbs","certificateExtensionsToAsn1","getBySubject","ensureSubjectHasHash","getIssuer","hasCertificate","der1","listAllCertificates","removeCertificate","validityCheckDate","selfSigned","parents","verified","se","keyUsage","basicConstraints","bcExt","keyUsageExt","dynamicTyping","dynamicTypingFunction","transform","WORKERS_SUPPORTED","webkitURL","BLOB_URL","userStep","step","userChunk","userComplete","userError","workerId","NODE_STREAM_INPUT","download","readable","File","unparse","BAD_DELIMITERS","quotes","skipEmptyLines","newline","quoteChar","columns","escapeChar","escapeFormulae","meta","RECORD_SEP","UNIT_SEP","BYTE_ORDER_MARK","LocalChunkSize","RemoteChunkSize","DefaultDelimiter","Parser","E","ParserHandle","NetworkStreamer","FileStreamer","StringStreamer","ReadableStreamStreamer","each","FileReader","files","inputElem","instanceConfig","extend","action","_handle","_finished","_completed","_halted","_baseIndex","_partialLine","_rowCount","_start","_nextChunk","isFirstChunk","_completeResults","streamer","_config","parseChunk","beforeFirstChunk","paused","cursor","preview","WORKER_ID","_sendError","_readChunk","_chunkLoaded","_chunkError","downloadRequestBody","downloadRequestHeaders","getResponseHeader","webkitSlice","mozSlice","FileReaderSync","readAsText","pause","resume","_streamData","_streamEnd","_streamError","_checkIsFinished","_streamCleanUp","removeListener","transformHeader","row","comments","successful","bestDelimiter","delimitersToGuess","getCharIndex","O","fastMode","F","linebreak","truncated","assertPath","normalizeStringPosix","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","posix","cwd","resolvedPath","resolvedAbsolute","normalize","isAbsolute","trailingSeparator","joined","relative","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","_makeLong","dirname","hasRoot","matchedSlash","basename","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","pathObject","sep","dir","_format","win32","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","marker","runClearTimeout","Item","noop","title","env","argv","addListener","once","removeAllListeners","prependListener","prependOnceListener","listeners","binding","chdir","umask","nodeType","freeGlobal","punycode","maxInt","regexPunycode","regexNonASCII","regexSeparators","stringFromCharCode","mapDomain","string","ucs2decode","counter","ucs2encode","digitToBasic","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","basic","oldi","baseMinusT","codePoint","bias","handledCPCount","basicLength","currentValue","handledCPCountPlusOne","qMinusT","qs","regexp","maxKeys","kstr","vstr","stringifyPrimitive","isFinite","ks","_value","BehaviorSubject","getValue","subscriber","subscription","_subscribe","hasError","thrownError","_throwIfClosed","Observable","operator","observable","observerOrNext","Subscriber","isFunction","isObserver","isSubscription","SafeSubscriber","errorContext","_trySubscribe","sink","promiseCtor","getPromiseCtor","unsubscribe","Symbol_observable","operations","pipeFromArray","_bufferSize","_windowTime","_timestampProvider","_infiniteTimeWindow","ReplaySubject","isStopped","_trimBuffer","_innerSubscribe","_checkFinalizedStatuses","adjustedBufferSize","ObjectUnsubscribedError","createErrorClass","AnonymousSubject","currentObservers","EMPTY_SUBSCRIPTION","Subscription","arrRemove","destination","COMPLETE_NOTIFICATION","createNotification","kind","EMPTY_OBSERVER","handleStoppedNotification","nextNotification","_next","_error","_complete","_bind","Function","thisArg","partialObserver","ConsumerObserver","handleUnhandledError","context_1","captureError","reportUnhandledError","notification","onStoppedNotification","timeoutProvider","UnsubscriptionError","initialTeardown","_parentage","_parentage_1_1","initialFinalizer","_finalizers","_finalizers_1_1","finalizer","execFinalizer","__read","teardown","_hasParent","_addParent","includes","_removeParent","EMPTY","onUnhandledError","useDeprecatedSynchronousErrorHandling","useDeprecatedNextContext","firstValueFrom","hasConfig","defaultValue","EmptyError","observeOn","scheduler","delay","operate","createOperatorSubscriber","subscribeOn","schedule","scheduleAsyncIterable","executeSchedule","iterator","Symbol","asyncIterator","scheduled","isInteropObservable","innerFrom","pipe","scheduleObservable","isArrayLike","scheduleArray","isPromise","schedulePromise","isAsyncIterable","isIterable","Symbol_iterator","return","scheduleIterable","isReadableStreamLike","readableStreamLikeToAsyncGenerator","scheduleReadableStreamLike","createInvalidObservableTypeError","nodeEventEmitterMethods","eventTargetMethods","jqueryMethods","fromEvent","eventName","resultSelector","mapOneOrManyArgs","isEventTarget","isNodeStyleEventEmitter","toCommonHandlerRegistry","isJQueryStyleEventEmitter","mergeMap","subTarget","obs","fromAsyncIterable","iterable","iterable_1_1","readableStream","asyncIterable","asyncIterable_1","merge","popScheduler","concurrent","popNumber","sources","mergeAll","of","onNext","onComplete","onError","onFinalize","OperatorSubscriber","shouldUnsubscribe","closed_1","concatMap","project","defaultIfEmpty","hasValue","predicate","identity","ii","onBeforeNext","expand","innerSubScheduler","additionalFinalizer","active","isComplete","checkComplete","outerNext","doInnerSub","innerComplete","innerValue","bufferedValue","share","resetOnError","resetOnComplete","_d","resetOnRefCountZero","wrapperSource","resetConnection","refCount","hasCompleted","hasErrored","cancelReset","resetAndUnsubscribe","conn","connector","handleReset","onSubscriber","__spreadArray","skip","takeUntil","notifier","dateTimestampProvider","delegate","handle","isScheduler","createImpl","ctorFunc","isRoot","errorThrown","parentSubscription","work","repeat","scheduleSubscription","reader","getReader","releaseLock","lift","hasLift","liftedSource","getDomainWithoutSuffix","domain","getDomain","hostname","validHosts","vhost","endsWith","shareSameDomainSuffix","publicSuffix","publicSuffixIndex","lastDotBeforeSuffixIndex","extractHostname","urlIsValidHostname","hasUpper","indexOfProtocol","protocolSize","c0","c1","c3","c4","lowerCaseCode","indexOfIdentifier","indexOfClosingBracket","indexOfPort","getEmptyResult","domainWithoutSuffix","isIcann","isIp","isPrivate","subdomain","resetResult","parseImpl","suffixLookup","partialOptions","setDefaults","mixedInputs","isValidHostname","detectIp","validateHostname","getSubdomain","hasColon","isProbablyIpv6","numberOfDots","isProbablyIpv4","lastDotIndex","lastCharCode","isValidAscii","allowPrivateDomains","DEFAULT_OPTIONS","allowIcannDomains","setDefaultsImpl","RESULT","getHostname","exceptions","rules","_3","_4","_5","_6","_7","_8","_9","_10","_11","_12","_13","_14","_15","_16","_17","_18","_19","_20","_21","_22","_23","_24","_25","_26","_27","_28","_29","_30","_31","_32","_33","_34","_35","_36","_37","_38","_39","_40","lookupInTrie","trie","allowedMask","$","succ","fastPathLookup","hostnameParts","exceptionMatch","rulesMatch","extendStatics","__awaiter","_arguments","generator","fulfilled","rejected","__generator","sent","trys","ops","verb","__values","ar","__await","__asyncGenerator","fulfill","settle","__asyncValues","Url","slashes","auth","host","port","pathname","urlParse","resolveObject","isString","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","hostlessProtocol","slashedProtocol","querystring","parseQueryString","slashesDenoteHost","isObject","queryIndex","splitter","uSplit","rest","simplePath","lowerProto","atSign","hostEnd","hec","parseHost","ipv6Hostname","hostparts","newpart","validParts","notHost","bit","toASCII","ae","esc","qm","rel","tkeys","tk","tkey","rkeys","rk","rkey","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","isNullOrUndefined","authInHost","isNull","hasTrailingSlash","up","adjacency_graphs","qwerty","dvorak","keypad","mac_keypad","scoring","feedback","default_feedback","suggestions","get_feedback","sequence","longest_match","extra_feedback","get_match_feedback","is_sole_match","pattern","get_dictionary_match_feedback","graph","turns","base_token","regex_name","dictionary_name","l33t","reversed","guesses_log10","rank","START_UPPER","ALL_UPPER","english_wikipedia","female_names","surnames","us_tv_and_film","male_names","frequency_lists","matching","time_estimates","zxcvbn","user_inputs","sanitized_inputs","set_user_input_dictionary","omnimatch","most_guessable_match_sequence","calc_time","attack_times","estimate_attack_times","guesses","build_ranked_dict","ordered_list","RANKED_DICTIONARIES","lst","GRAPHS","L33T_TABLE","REGEXEN","recent_year","DATE_SPLITS","lst2","translate","chr_map","chr","sorted","matchers","dictionary_match","reverse_dictionary_match","l33t_match","spatial_match","repeat_match","sequence_match","regex_match","date_match","matcher","_ranked_dictionaries","password_lower","ref1","ranked_dict","matched_word","reversed_password","relevant_l33t_subtable","password_chars","subtable","relevant_subs","enumerate_l33t_subs","subs","dedup","deduped","members","assoc","helper","first_key","rest_keys","next_subs","dup_l33t_index","l33t_chr","sub_extension","sub_alternative","sub_dicts","sub_dict","_l33t_table","subbed_password","match_sub","subbed_chr","sub_display","_graphs","spatial_match_helper","graph_name","SHIFTED_RX","last_direction","shifted_count","found_direction","cur_direction","adjacents","cur_char","adj","greedy","lazy","lazy_anchored","greedy_match","lazy_match","base_matches","base_analysis","base_guesses","repeat_count","MAX_DELTA","sequence_name","sequence_space","ascending","last_delta","_regexen","rx_match","maybe_date_no_separator","maybe_date_with_separator","candidates","ref3","dmy","map_ints_to_dmy","best_candidate","metric","REFERENCE_YEAR","min_distance","ref5","distance","ref6","month","day","ref8","is_submatch","other_match","over_12","over_31","under_1","int","possible_year_splits","dm","map_ints_to_dm","two_to_four_digit_year","calc_average_degree","average","nCk","log10","log2","factorial","_exclude_additive","matches_by_j","optimal","pi","competing_l","competing_g","bruteforce_update","make_bruteforce_match","results1","last_m","unwind","optimal_match_sequence","candidate_l","candidate_g","optimal_l","estimate_guesses","min_guesses","bruteforce","bruteforce_guesses","dictionary","dictionary_guesses","spatial","spatial_guesses","repeat_guesses","sequence_guesses","regex_guesses","date_guesses","POSITIVE_INFINITY","MAX_VALUE","MIN_SUBMATCH_GUESSES_SINGLE_CHAR","MIN_SUBMATCH_GUESSES_MULTI_CHAR","first_chr","MIN_YEAR_SPACE","getFullYear","char_class_bases","alpha_lower","alpha_upper","alpha","alphanumeric","symbols","year_space","KEYBOARD_AVERAGE_DEGREE","KEYPAD_AVERAGE_DEGREE","KEYBOARD_STARTING_POSITIONS","KEYPAD_STARTING_POSITIONS","U","shifted_variations","uppercase_variations","l33t_variations","reversed_variations","END_UPPER","ALL_LOWER","variations","chrs","subbed","unsubbed","possibilities","crack_times_display","crack_times_seconds","online_throttling_100_per_hour","online_no_throttling_10_per_second","offline_slow_hashing_1e4_per_second","offline_fast_hashing_1e10_per_second","display_time","seconds","guesses_to_score","hour","minute","display_str","display_num","getClosureSafeProperty","objWithPropertyToExtract","fillProperties","overriddenName","newLineIndex","concatStringsWithSpace","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","isForwardRef","formatRuntimeError","fullCode","renderStringify","stringifyForError","throwCyclicDependencyError","depPath","throwProviderNotFoundError","injectorName","ngDevMode","assertEqual","actual","throwError","assertDefined","ɵɵdefineInjectable","providedIn","ɵɵdefineInjector","providers","imports","getInjectableDef","getOwnDefinition","NG_PROV_DEF","NG_INJECTABLE_DEF","getInjectorDef","NG_INJ_DEF","NG_INJECTOR_DEF","ɵprov","ɵinj","ngInjectableDef","ngInjectorDef","InjectFlags","_injectImplementation","setInjectImplementation","impl","previous","injectRootLimpMode","notFoundValue","injectableDef","Optional","noSideEffects","ChangeDetectionStrategy","ChangeDetectorStatus","ViewEncapsulation","_global","WorkerGlobalScope","EMPTY_OBJ","EMPTY_ARRAY","NG_COMP_DEF","ɵcmp","NG_DIR_DEF","ɵdir","NG_PIPE_DEF","ɵpipe","NG_MOD_DEF","ɵmod","NG_FACTORY_DEF","ɵfac","NG_ELEMENT_ID","__NG_ELEMENT_ID__","componentDefCount","ɵɵdefineComponent","componentDefinition","standalone","declaredInputs","def","providersResolver","decls","vars","template","consts","ngContentSelectors","hostBindings","hostVars","hostAttrs","contentQueries","inputs","outputs","exportAs","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","dependencies","getStandaloneInjector","selectors","viewQuery","Emulated","styles","setInput","schemas","tView","feature","invertObject","extractDirectiveDef","nonNull","getPipeDef","ɵɵsetComponentScope","directives","pipes","getComponentDef","getDirectiveDef","autoRegisterModuleById","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","scope","ngModuleDef","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","onDestroy","ngOnDestroy","throwNotFound","ID","HEADER_OFFSET","CONTAINER_HEADER_OFFSET","isLView","isLContainer","isContentQueryHost","tNode","isComponentHost","isDirectiveHost","isComponentDef","getFactoryDef","hasFactoryDef","SimpleChange","previousValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","definition","ngOnChanges","ngOnChangesSetInput","rememberChangeHistoryAndInvokeOnChangesHook","simpleChangesStore","getSimpleChangesStore","privateName","setSimpleChangesStore","previousChange","ngInherit","profilerCallback","profiler","hookOrListener","SVG_NAMESPACE","MATH_ML_NAMESPACE","unwrapRNode","getNativeByIndex","lView","getNativeByTNode","getTNode","getComponentLViewByIndex","nodeIndex","hostView","slotValue","isCreationMode","viewAttachedToChangeDetector","getConstant","resetPreOrderHookFlags","PREORDER_HOOK_FLAGS","updateTransplantedViewCount","lContainer","viewOrContainer","instructionState","lFrame","createLFrame","bindingsEnabled","getBindingsEnabled","ɵɵenableBindings","ɵɵdisableBindings","getLView","getTView","ɵɵrestoreView","viewToRestore","contextLView","ɵɵresetView","getCurrentTNode","currentTNode","getCurrentTNodePlaceholderOk","getCurrentParentTNode","isParent","setCurrentTNode","isCurrentTNodeParent","setCurrentTNodeAsNotParent","getBindingRoot","bindingRootIndex","bindingStartIndex","getBindingIndex","bindingIndex","setBindingIndex","nextBindingIndex","incrementBindingIndex","setInI18nBlock","isInI18nBlock","inI18n","setBindingRootForHostBindings","currentDirectiveIndex","setCurrentDirectiveIndex","getCurrentDirectiveDef","tData","getCurrentQueryIndex","currentQueryIndex","setCurrentQueryIndex","getDeclarationTNode","declTNode","enterDI","SkipSelf","parentTNode","parentLView","Host","DECLARATION_VIEW","allocLFrame","enterView","newLFrame","firstChild","currentLFrame","childLFrame","selectedIndex","elementDepthCount","currentNamespace","leaveViewLight","oldLFrame","leaveDI","leaveView","nextContextImpl","nestingLevel","currentView","walkUpViews","getSelectedIndex","setSelectedIndex","getSelectedTNode","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","registerPostOrderHooks","directiveStart","directiveEnd","directiveDef","lifecycleHooks","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeCheckHooks","hooks","callHooks","executeInitAndCheckHooks","initPhase","incrementInitPhaseFlags","currentNodeIndex","startIndex","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","setUpAttributes","renderer","native","namespaceURI","attrVal","isAnimationProp","setProperty","isNameOnlyAttributeMarker","mergeHostAttrs","srcMarker","mergeHostAttribute","key1","key2","markerInsertPosition","dstValue","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorView","startView","viewOffset","parentView","includeViewProviders","setIncludeViewProviders","oldValue","nextNgElementId","NOT_FOUND","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","firstCreatePass","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentData","footer","declarationViewOffset","lViewCursor","getTNodeFromLView","diPublicInInjector","bloomHash","BLOOM_SIZE","bloomAdd","notFoundValueOrThrow","lookupTokenUsingModuleInjector","Self","moduleInjector","previousInjectImplementation","getOrCreateInjectable","Default","embeddedInjectorValue","currentLView","nodeInjectorValue","lookupTokenUsingNodeInjector","embeddedViewInjector","embeddedViewInjectorValue","lookupTokenUsingEmbeddedInjector","tokenId","createNodeInjector","bloomHashBitOrFactory","previousTView","hostTElementNode","DECLARATION_COMPONENT_VIEW","shouldSearchParent","bloomHasToken","searchTokensOnInjector","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","previousIncludeViewProviders","directiveIndex","ngOnInit","ngDoCheck","wrappedOnChanges","preOrderHooks","preOrderCheckHooks","registerPreOrderHooks","injectorView","isFirstHostTNode","NodeInjector","_tNode","_lView","ɵɵgetInheritedFactory","ownConstructor","ownFactory","getFactoryOf","objectPrototype","getPrototypeOf","tViewType","ɵɵinjectAttribute","attrNameToInject","classes","attrsLength","injectAttributeImpl","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","annotationInstance","cls","ngMetadataName","annotationCls","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","makePropDecorator","PropDecoratorFactory","decoratorInstance","Attribute","attributeName","InjectionToken","_desc","multi","selector","isViewQuery","descendants","emitDistinctChangesOnly","FactoryTarget","R3TemplateDependencyKind","getCompilerFacade","globalNg","ɵcompilerFacade","isType","flatten","list","deepForEach","addToArray","removeFromArray","newArray","keyValueArraySet","keyValueArray","keyValueArrayIndexOf","value1","value2","previousEnd","arrayInsert2","keyValueArrayGet","_arrayIndexOfSorted","middle","ES5_DELEGATE_CTOR","ES2015_INHERITED_CLASS","ES2015_INHERITED_CLASS_WITH_CTOR","ES2015_INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","isDelegateCtor","tsickleCtorParams","ctorParameters","ctorParam","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","parentPropMetadata","ownPropMetadata","hasLifecycleHook","lcProperty","decoratorInvocations","decoratorInvocation","ctor","parentProto","THROW_IF_NOT_FOUND","NEW_LINE","SOURCE","_currentInjector","setCurrentInjector","injector","former","injectInjectorOnly","ɵɵinject","ɵɵinvalidFactoryDep","injectArgs","types","attachInjectFlag","decorator","catchInjectorError","injectorErrorName","tokenPath","formatError","Inject","getReflect","reflectDependencies","convertDependencies","deps","dep","skipSelf","param","reflectDependency","resolveComponentResources","resourceResolver","componentResolved","urlMap","Map","cachedResourceResolve","resp","unwrapResponse","componentResourceResolutionQueue","component","promises","templateUrl","styleUrls","styleOffset","styleUrl","style","fullyResolved","all","componentDefPendingResolution","componentDefResolved","old","clearResolutionOfComponentResourcesQueue","componentNeedsResolution","modules","DOCUMENT","policy","checkForDuplicateNgModules","registerNgModuleType","ngModuleType","incoming","assertSameOrNotExisting","getDocument","getPolicy","trustedTypes","createPolicy","createHTML","createScript","createScriptURL","trustedHTMLFromString","html","trustedHTMLFromStringBypass","trustedScriptFromStringBypass","script","trustedScriptURLFromStringBypass","SafeValueImpl","changingThisBreaksApplicationSecurity","unwrapSafeValue","allowSanitizationBypassAndThrow","actualType","getTypeName","getSanitizationBypassType","getInertBodyHelper","defaultDoc","inertDocumentHelper","InertDocumentHelper","DOMParser","parseFromString","isDOMParserAvailable","DOMParserHelper","getInertBodyElement","removeChild","inertDocument","implementation","createHTMLDocument","inertHtml","appendChild","inertBodyElement","templateEl","innerHTML","inertBody","documentMode","stripCustomNsAttrs","el","elAttrs","removeAttribute","childNode","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","sanitizeSrcset","srcset","tagSet","tags","sets","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","sanitizeChildren","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","elAttr","lower","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","inertBodyHelper","getTemplateContent","isTemplateElement","SecurityContext","ɵɵsanitizeHtml","unsafeHtml","sanitizer","getSanitizer","sanitize","HTML","unsafeHtmlInput","mXSSAttempts","parsedHtml","_sanitizeHtml","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","ɵɵtrustConstantHtml","ɵɵtrustConstantResourceUrl","trustedScriptURLFromString","ɵɵsanitizeUrlOrResourceUrl","getUrlSanitizer","ENVIRONMENT_INITIALIZER","INJECTOR","INJECTOR_DEF_TYPES","NullInjector","importProvidersFrom","ɵproviders","internalImportProvidersFrom","checkForStandaloneCmp","providersOut","injectorTypesWithProviders","internalSource","walkProviderTree","processInjectorTypesWithProviders","typesWithProviders","ngModule","provider","container","defType","injDef","cmpDef","isDuplicate","importTypesWithProviders","imported","provide","useFactory","useValue","inject","defProviders","USE_VALUE","isValueProvider","isExistingProvider","useExisting","isFactoryProvider","isTypeProvider","INJECTOR_SCOPE","NOT_YET","CIRCULAR","NULL_INJECTOR","getNullInjector","EnvironmentInjector","R3Injector","scopes","_ngOnDestroyHooks","_onDestroyHooks","_destroyed","forEachSingleProvider","processProvider","makeRecord","injectorDefTypes","destroyed","destroy","assertNotDestroyed","service","runInContext","previousInjector","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","nextInjector","resolveInjectorInitializers","initializers","initializer","providerToFactory","providerToRecord","multiRecord","paramLength","inheritedInjectableDef","typeName","getInheritedInjectableDef","getUndecoratedInjectableFactory","unwrappedProvider","classRef","useClass","isImportedNgModuleProviders","ComponentFactory","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","noComponentFactoryError","ComponentFactoryResolver","createElementRef","ElementRef","nativeElement","unwrapElementRef","RendererFactory2","Sanitizer","VERSION","patch","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","getOriginalError","ErrorHandler","_console","handleError","originalError","_findOriginalError","COMMENT_DISALLOWED","COMMENT_DELIMITER","escapeCommentText","TRACKED_LVIEWS","uniqueIdCounter","getLViewById","attachPatchData","readPatchedData","readPatchedLView","defaultScheduler","requestAnimationFrame","ɵɵresolveWindow","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","maybeUnwrapFn","RendererStyleFlags2","_icuContainerIterate","icuContainerIterate","tIcuContainerNode","getLViewParent","getFirstLContainer","getNearestLContainer","CHILD_HEAD","getNextLContainer","applyToElementOrContainer","lNodeToHandle","beforeNode","isComponent","rNode","nativeAppendChild","nativeInsertBefore","nativeRemoveNode","destroyNode","parentRElement","anchor","applyView","applyContainer","createTextNode","createText","updateTextNode","setValue","createCommentNode","createComment","createElementNode","namespace","insertView","indexInContainer","containerLength","declarationLContainer","declarationContainer","movedViews","insertedLContainer","insertedComponentLView","declaredComponentLView","trackMovedView","lQueries","QUERIES","detachMovedView","declarationViewIndex","insertionLContainer","detachView","removeIndex","viewToDetach","removedLView","RENDERER","destroyLView","rootView","lViewOrLContainer","cleanUpView","firstView","destroyViewTree","toCall","callContext","executeOnDestroys","tCleanup","cleanup","lCleanup","lastLCleanupIndex","idxOrTargetGetter","useCaptureOrSubIdx","instanceCleanupFn","processCleanups","unregisterLView","getParentRElement","getClosestRElement","None","isMove","insertBefore","nativeAppendOrInsertBefore","nativeParentNode","getInsertInFrontOfRNode","_getInsertInFrontOfRNodeWithI18n","getInsertInFrontOfRNodeWithNoI18n","_processI18nInsertBefore","setI18nHandling","getInsertInFrontOfRNodeWithI18n","processI18nInsertBefore","childRNode","childTNode","parentRNode","anchorNode","getFirstNativeNode","tNodeType","getBeforeNodeForView","elIcuContainerChild","rNodeOrLContainer","nextRNode","projectionNodes","getProjectionNodes","componentHost","slotIdx","projection","viewIndexInContainer","nextViewIndex","firstTNodeOfView","isHostElement","nativeParent","nativeRemoveChild","applyNodes","isProjection","rawSlotValue","applyProjectionRecursive","projectionNext","tProjectionNode","componentLView","nodeToProjectOrRNodes","writeDirectStyle","newValue","writeDirectClass","classIndexOf","className","classToSearch","startingIndex","foundIndex","NG_TEMPLATE_SELECTOR","isCssClassMatching","cssClassToMatch","isProjectionMode","isInlineTemplate","hasTagAndTypeMatch","currentSelector","isNodeMatchingSelector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","selectorAttrValue","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","maybeWrapInNotSelector","isNegativeMode","stringifyCSSSelector","currentChunk","valueOrMarker","NO_CHANGE","ɵɵadvance","selectIndexInternal","checkNoChangesMode","angularCoreDiEnv","compileInjectable","ngFactoryDef","compiler","srcMeta","compilerMeta","typeArgumentCount","isUseClassProvider","isUseFactoryProvider","isUseValueProvider","isUseExistingProvider","getInjectableMetadata","compileFactory","Injectable","createInjector","additionalProviders","createInjectorWithoutInjectorInstances","Injector","constructResolvingPath","findFirstClosedCycle","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","mixingMultiProvidersWithRegularProvidersError","provider1","provider2","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","_allKeys","newKey","ReflectiveDependency","visibility","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","multiProvider","resolvedFactory","ResolvedReflectiveFactory","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","fromKey","_extractToken","constructDependencies","resolveReflectiveProvider","resolveReflectiveProviders","resolvedProviderMap","normalizedProvidersMap","existing","resolvedProvider","mergeResolvedReflectiveProviders","_normalizeProviders","some","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","_instantiate","_getByReflectiveDependency","originalException","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ɵɵdirectiveInject","ɵɵinvalidFactory","toTStylingRange","getTStylingRangePrev","tStylingRange","getTStylingRangePrevDuplicate","setTStylingRangePrevDuplicate","getTStylingRangeNext","setTStylingRangeNext","getTStylingRangeNextDuplicate","setTStylingRangeNextDuplicate","_CLEAN_PROMISE","refreshContentQueries","queryStartIdx","directiveDefIdx","createLView","tHostNode","rendererFactory","RENDERER_FACTORY","getOrCreateTNode","createTNodeAtIndex","tParent","insertBeforeIndex","directiveStylingLast","propertyBindings","mergedAttrs","localNames","initialInputs","tViews","stylesWithoutHost","residualStyles","classesWithoutHost","residualClasses","classBindings","styleBindings","createTNode","allocExpando","numSlotsToAlloc","initialValue","allocIdx","renderView","executeViewQueryFn","templateFn","executeTemplate","staticContentQueries","staticViewQueries","components","hostLView","renderComponent","renderChildComponents","incompleteFirstPass","refreshView","hooksInitPhaseCompleted","movedLView","markTransplantedViewsForRefresh","embeddedLView","embeddedTView","refreshEmbeddedViews","hostBindingOpCodes","opCode","directiveIdx","bindingRootIndx","hostBindingFn","processHostBindingOpCodes","refreshComponent","refreshChildComponents","firstUpdatePass","renderComponentOrTemplate","creationModeIsActive","begin","rf","prevSelectedIndex","isUpdatePhase","executeContentQueries","createDirectivesInstances","addComponentLogic","setInputsFromAttrs","instantiateAllDirectives","elementIndex","dirIndex","invokeHostBindingsInCreationMode","invokeDirectivesHostBindings","saveResolvedLocalsInData","viewData","localRefExtractor","localIndex","getOrCreateTComponentView","createTView","constsOrFactory","initialViewLength","createViewBlueprint","queries","fill","expandoStartIndex","directiveRegistry","pipeRegistry","storeCleanupWithContext","cleanupFn","getOrCreateLViewCleanup","getOrCreateTViewCleanup","generatePropertyAliases","inputAliasMap","propStore","internalName","initializeInputAndOutputAliases","tViewData","tNodeAttrs","inputsFromAttrs","inputsStore","outputsStore","directiveInputs","generateInitialInputs","elementPropertyInternal","nativeOnly","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","viewIndex","childComponentLView","resolveDirectives","localRefs","hasDirectives","registry","markAsComponentHost","findDirectiveDefMatches","exportsMap","initTNodeFlags","preOrderHooksFound","preOrderCheckHooksFound","configureViewWithDirective","saveNameToExportMap","lifeCycleHooks","cacheMatchingLocalNames","registerHostBindingOpCodes","directiveVarsIdx","elementIndx","lastSelectedElementIdx","hostTNode","numberOfDirectives","directiveFactory","nodeInjectorFactory","componentView","addToViewTree","createRenderer","elementAttributeInternal","setElementAttribute","strValue","initialInputData","inputsToStore","createLContainer","hostNative","componentHostIdx","refreshContainsDirtyView","componentTView","syncViewWithBlueprint","markViewDirty","tickRootContext","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","viewQueryFn","CLEAN_PROMISE","loadComponentRenderer","currentDef","unwrapLView","errorHandler","textBindingInternal","computeStaticStyling","writeToHost","collectNativeNodes","lNode","lViewInAContainer","lViewFirstChildTNode","nodesInSlot","ViewRef","_cdRefInjectingView","_appRef","_attachedToViewContainer","rootNodes","viewRefs","markForCheck","detach","reattach","detectChanges","checkNoChanges","attachToViewContainerRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_view","viewEngine_ComponentFactoryResolver","componentDef","toRefArray","nonMinified","minified","templateName","ChainedInjector","parentInjector","viewEngine_ComponentFactory","componentType","isBoundToModule","projectableNodes","rootSelectorOrNode","environmentInjector","realEnvironmentInjector","rootViewInjector","hostRenderer","elementName","hostRNode","elementOrSelector","preserveContent","ShadowDom","selectRootElement","locateHostElement","getNamespace","rootFlags","clean","playerHandler","rootTView","rootLView","tElementNode","viewRenderer","createRootComponentView","extractAttrsAndClassesFromSelector","nodesforSlot","hostFeatures","rootTNode","instantiateRootComponent","createRootComponent","LifecycleHooksFeature","ComponentRef","_rootLView","changeDetectorRef","getSuperType","ɵɵInheritDefinitionFeature","superType","shouldInheritFields","inheritanceChain","superDef","writeableDef","maybeUnwrapEmpty","superHostBindings","inheritHostBindings","superViewQuery","superContentQueries","inheritViewQuery","inheritContentQueries","animation","defData","mergeHostAttrsAcrossInheritance","prevViewQuery","prevContentQueries","prevHostBindings","COPY_DIRECTIVE_FIELDS","COPY_COMPONENT_FIELDS","ɵɵCopyDefinitionFeature","defAny","_symbolIterator","getSymbolIterator","getOwnPropertyNames","isListLikeIterable","isJsObject","updateBinding","getBinding","bindingUpdated","is","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵattribute","interpolationV","isBindingUpdated","interpolation1","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","interpolatedValue","ɵɵattributeInterpolate1","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","ɵɵtemplate","attrsIndex","localRefsIndex","adjustedIndex","tViewConsts","templateFirstCreatePass","ɵɵreference","ɵɵproperty","setDirectiveInputsWhichShadowsStyling","isClassBased","property","elementStartFirstCreatePass","elementStart","ɵɵelementStart","ɵɵelementEnd","elementEnd","hasClassInput","hasStyleInput","ɵɵelement","ɵɵelementContainerStart","elementContainerStartFirstCreatePass","ɵɵelementContainerEnd","ɵɵelementContainer","ɵɵgetCurrentView","isObservable","ɵɵlistener","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵsyntheticHostListener","isTNodeDirectiveHost","processOutputs","lCleanupIndex","existingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","findExistingListener","__ngLastListenerFn__","__ngNextListenerFn__","wrapListener","listen","propsLength","minifiedName","directiveInstance","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","ngProjectAsAttrIdx","getProjectAsAttrValue","ɵɵprojectionDef","componentNode","numProjectionSlots","projectionHeads","tails","componentChild","slotIndex","ɵɵprojection","selectorIndex","applyProjection","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","insertTStylingBinding","tStylingKeyWithStatic","isHostBinding","isClassBinding","tBindings","tmplHead","tmplTail","tStylingKey","isKeyDuplicateOfStatic","staticKeyValueArray","previousNode","markDuplicates","residual","markDuplicateOfResidualStyling","isPrevDir","tStylingAtIndex","isMap","foundDuplicate","tStylingValueAtCursor","tStyleRangeAtCursor","isStylingMatch","tStylingKeyCursor","parserState","textEnd","keyEnd","valueEnd","getLastParsedKey","getLastParsedValue","parseClassNameNext","consumeClassToken","consumeWhitespace","parseStyleNext","consumeStyleKey","consumeSeparator","ch1","ch2","ch3","lastChIndex","consumeQuotedText","consumeStyleValue","resetParserState","quoteCharCode","ɵɵstyleProp","checkStylingProperty","ɵɵclassProp","ɵɵstyleMap","checkStylingMap","styleKeyValueArraySet","styleStringParser","parseStyle","ɵɵclassMap","classStringParser","parseClassName","stylingFirstUpdatePass","updateStyling","normalizeSuffix","stringParser","hasStylingInputShadow","isInHostBindings","staticPrefix","oldKeyValueArray","newKeyValueArray","oldIndex","newIndex","oldKey","setKey","updateStylingMap","styleKeyValueArray","unwrappedValue","toStylingKeyValueArray","isHostBindings","stylingKey","hostDirectiveDef","collectStylingFromTAttrs","collectStylingFromDirectives","templateStylingKey","bindings","getTemplateHeadTStylingKey","setTemplateHeadTStylingKey","collectResidual","wrapInStaticStylingKey","currentDirective","desiredMarker","currentMarker","tRange","isStylingValuePresent","findStylingValue","addClass","removeClass","DashCase","removeStyle","Important","setStyle","applyStyling","isPrevDirection","rawKey","containsStatics","isStylingMap","valueAtLViewIndex","ɵɵtext","textNative","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","ɵɵclassMapInterpolate1","ɵɵclassMapInterpolate2","ɵɵclassMapInterpolate4","ɵɵclassMapInterpolate5","ɵɵclassMapInterpolate6","ɵɵclassMapInterpolateV","ɵɵstyleMapInterpolate1","ɵɵstyleMapInterpolate2","ɵɵstyleMapInterpolate4","ɵɵstyleMapInterpolate5","ɵɵstyleMapInterpolate6","ɵɵstyleMapInterpolateV","ɵɵstylePropInterpolate1","valueSuffix","ɵɵstylePropInterpolate2","ɵɵstylePropInterpolate3","ɵɵstylePropInterpolate4","ɵɵstylePropInterpolate5","ɵɵstylePropInterpolate6","ɵɵstylePropInterpolate7","ɵɵstylePropInterpolate8","ɵɵstylePropInterpolateV","ɵɵhostProperty","ɵɵsyntheticHostProperty","LOCALE_DATA","findLocaleData","locale","normalizedLocale","normalizeLocale","getLocaleData","parentLocale","localeEn","ng","common","locales","LocaleDataIndex","pluralMapping","getPluralCase","plural","PluralCase","getLocalePluralCase","DEFAULT_LOCALE_ID","ELEMENT_MARKER","ICU_MARKER","I18nCreateOpCode","LOCALE_ID","setLocaleId","localeId","tNodeInsertBeforeIndex","i18nParent","anchorRNode","addTNodeAndUpdateInsertBeforeIndex","previousTNodes","newTNode","existingTNode","isI18nText","isNewTNodeCreatedBefore","getInsertBeforeIndex","setInsertBeforeIndex","getTIcu","tIcu","createTNodePlaceholder","getCurrentICUCaseIndex","currentCase","currentCaseLViewIndex","getParentFromIcuCreateOpCode","mergedCode","getRefFromIcuCreateOpCode","changeMask","changeMaskCounter","applyMutableOpCodes","mutableOpCodes","rootRNode","rootIdx","textNodeIndex","parentIdx","insertInFrontOf","refIdx","caseIndex","anchorIdx","elementNodeIndex","commentValue","commentNodeIndex","applyUpdateOpCodes","updateOpCodes","bindingsStartIndex","checkBit","skipCodes","sanitizeFn","tNodeOrTagName","rText","applyIcuSwitchCase","applyIcuUpdateCase","activeCaseIndex","icuExpression","bindingValue","cases","resolvedCase","getCaseIndex","applyIcuSwitchCaseRemove","removeCodes","nodeOrIcuIndex","loadIcuContainerVisitor","_removes","enterIcu","icuContainerIteratorNext","removeOpCode","tIcuIndex","BINDING_REGEXP","ICU_REGEXP","NESTED_ICU","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","NGSP_UNICODE_REGEXP","i18nStartFirstCreatePass","parentTNodeIndex","subTemplateIndex","createOpCodes","existingTNodeStack","isRootTemplateMessage","removeInnerTemplateTranslation","getTranslationForTemplate","msgParts","i18nParseTextIntoPartsAndICU","i18nStartFirstCreatePassProcessTextNode","icuNodeIndex","createTNodeAndAddOpCode","icuStart","isClosing","existingTNodes","isICU","i18nNodeIdx","SHIFT","loader","APPEND_EAGERLY","COMMENT","setTNodeInsertBeforeIndex","hasBinding","generateBindingUpdateOpCodes","destinationNode","bindingStart","maskIndex","sizeIndex","textParts","textValue","toMaskBit","countBindings","opCodes","tagMatched","inTemplate","bindingMask","mainBinding","addUpdateIcuSwitch","setTIcu","valueArr","nestedIcus","icuIndex","parseIcuCase","addUpdateIcuUpdate","parseICUBlock","icuType","prevPos","braceStack","braces","caseName","unsafeCaseHtml","inertRootNode","walkIcuTree","sharedUpdateOpCodes","currentNode","addCreateNodeAndAppend","lowerAttrName","addCreateAttribute","addRemoveNode","textContent","COMMENT_NODE","isNestedIcu","nestedIcuIndex","addRemoveNestedIcu","appendToParentIdx","createAtIdx","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICU_PLACEHOLDERS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","ɵɵi18nStart","messageIndex","tI18n","isComment","appendNow","applyCreateOpCodes","ɵɵi18nEnd","ɵɵi18n","previousElementIndex","i18nAttributesFirstPass","ɵɵi18nExp","ɵɵi18nApply","applyI18n","ɵɵi18nPostprocess","replacements","templateIdsStack","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_type","_idx","i18nPostprocess","resolveProvider","lInjectablesBlueprint","providerFactory","beginIndex","existingFactoryIndex","registerDestroyHooksIfSupported","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesProvidersFactoryExist","doesViewProvidersFactoryExist","componentProviders","multiFactoryAdd","multiFactory","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","contextIndex","indexInFactory","providerIsTypeProvider","providerIsClassProvider","existingCallbacksIndex","isComponentProvider","lData","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","NgModuleRef","viewEngine_NgModuleRef","_bootstrapComponents","destroyCbs","componentFactoryResolver","_r3Injector","NgModuleFactory","moduleType","EnvironmentNgModuleRefAdapter","createEnvironmentInjector","debugName","StandaloneService","_injector","cachedInjectors","getOrCreateStandaloneInjector","standaloneInjector","ɵɵStandaloneFeature","ɵɵpureFunction0","slotOffset","pureFn","ɵɵpureFunction1","pureFunction1Internal","ɵɵpureFunction2","pureFunction2Internal","pureFunction3Internal","pureFunction4Internal","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","pureFunctionVInternal","getPureFunctionReturnValue","returnValueIndex","lastReturnValue","bindingRoot","pipeName","pipeFactory","pipeInstance","ɵɵpipeBind1","isPure","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBindV","defineInjectable","EventEmitter_","isAsync","__isAsync","nextFn","errorFn","completeFn","_wrapInTimeout","EventEmitter","symbolIterator","_results","QueryList","_emitDistinctChangesOnly","dirty","_changesDetected","_changes","symbol","changes","resultsTree","identityAccessor","newResultFlat","valueA","valueB","arrayEquals","notifyOnChanges","setDirty","TemplateRef","createTemplateRef","ViewEngineTemplateRef","R3TemplateRef","_declarationLView","_declarationTContainer","elementRef","createEmbeddedView","declarationViewLQueries","R3_ViewRef","ViewContainerRef","createContainerRef","VE_ViewContainerRef","R3ViewContainerRef","_lContainer","_hostTNode","_hostLView","getViewRefs","templateRef","indexOrOptions","viewRef","createComponent","componentFactoryOrType","isComponentFactory","ngModuleRef","componentFactory","R3ComponentFactory","contextInjector","componentRef","prevIdx","prevLContainer","prevVCRef","adjustedIdx","_adjustIndex","parentNativeNode","addViewToContainer","getOrCreateViewRefs","move","viewRefsArr","detachedView","R3ViewRef","commentNode","nativeNextSibling","LQuery_","queryList","LQueries_","tQueries","noOfInheritedQueries","viewLQueries","tQuery","getByIndex","parentLQuery","indexInDeclarationView","dirtyQueriesWithMatches","getTQuery","TQueryMetadata_","TQueries_","queriesForTemplateRef","childQueryIndex","tqueryClone","track","tquery","TQuery_","crossesNgTemplate","_appliesToNextNode","_declarationNodeIndex","isApplyingToNode","matchTNode","addMatch","declarationNodeIdx","matchTNodeWithReadOption","getIdxOfMatchingSelector","ViewEngine_TemplateRef","nodeMatchIdx","ViewEngine_ElementRef","directiveOrProviderIdx","matchIdx","createResultForNode","matchingIdx","createResultByTNodeType","createSpecialToken","materializeViewResults","lQuery","tQueryMatches","matchedNodeIdx","collectQueryResults","lViewResults","embeddedLViews","ɵɵqueryRefresh","ɵɵviewQuery","createTQuery","createLQuery","ɵɵcontentQuery","tViewContentQueries","lastSavedDirectiveIndex","saveContentQueryAndDirectiveIndex","ɵɵloadQuery","angularCoreEnv","r3.ɵɵattribute","r3.ɵɵattributeInterpolate1","r3.ɵɵattributeInterpolate2","r3.ɵɵattributeInterpolate3","r3.ɵɵattributeInterpolate4","r3.ɵɵattributeInterpolate5","r3.ɵɵattributeInterpolate6","r3.ɵɵattributeInterpolate7","r3.ɵɵattributeInterpolate8","r3.ɵɵattributeInterpolateV","r3.ɵɵdefineComponent","r3.ɵɵdefineDirective","r3.ɵɵdefineNgModule","r3.ɵɵdefinePipe","r3.ɵɵdirectiveInject","r3.ɵɵgetInheritedFactory","r3.ɵɵinjectAttribute","r3.ɵɵinvalidFactory","r3.ɵɵtemplateRefExtractor","r3.ɵɵresetView","r3.ɵɵNgOnChangesFeature","r3.ɵɵProvidersFeature","r3.ɵɵCopyDefinitionFeature","r3.ɵɵInheritDefinitionFeature","r3.ɵɵStandaloneFeature","r3.ɵɵnextContext","r3.ɵɵnamespaceHTML","r3.ɵɵnamespaceMathML","r3.ɵɵnamespaceSVG","r3.ɵɵenableBindings","r3.ɵɵdisableBindings","r3.ɵɵelementStart","r3.ɵɵelementEnd","r3.ɵɵelement","r3.ɵɵelementContainerStart","r3.ɵɵelementContainerEnd","r3.ɵɵelementContainer","r3.ɵɵpureFunction0","r3.ɵɵpureFunction1","r3.ɵɵpureFunction2","r3.ɵɵpureFunction3","r3.ɵɵpureFunction4","r3.ɵɵpureFunction5","r3.ɵɵpureFunction6","r3.ɵɵpureFunction7","r3.ɵɵpureFunction8","r3.ɵɵpureFunctionV","r3.ɵɵgetCurrentView","r3.ɵɵrestoreView","r3.ɵɵlistener","r3.ɵɵprojection","r3.ɵɵsyntheticHostProperty","r3.ɵɵsyntheticHostListener","r3.ɵɵpipeBind1","r3.ɵɵpipeBind2","r3.ɵɵpipeBind3","r3.ɵɵpipeBind4","r3.ɵɵpipeBindV","r3.ɵɵprojectionDef","r3.ɵɵhostProperty","r3.ɵɵproperty","r3.ɵɵpropertyInterpolate","r3.ɵɵpropertyInterpolate1","r3.ɵɵpropertyInterpolate2","r3.ɵɵpropertyInterpolate3","r3.ɵɵpropertyInterpolate4","r3.ɵɵpropertyInterpolate5","r3.ɵɵpropertyInterpolate6","r3.ɵɵpropertyInterpolate7","r3.ɵɵpropertyInterpolate8","r3.ɵɵpropertyInterpolateV","r3.ɵɵpipe","r3.ɵɵqueryRefresh","r3.ɵɵviewQuery","r3.ɵɵloadQuery","r3.ɵɵcontentQuery","r3.ɵɵreference","r3.ɵɵclassMap","r3.ɵɵclassMapInterpolate1","r3.ɵɵclassMapInterpolate2","r3.ɵɵclassMapInterpolate3","r3.ɵɵclassMapInterpolate4","r3.ɵɵclassMapInterpolate5","r3.ɵɵclassMapInterpolate6","r3.ɵɵclassMapInterpolate7","r3.ɵɵclassMapInterpolate8","r3.ɵɵclassMapInterpolateV","r3.ɵɵstyleMap","r3.ɵɵstyleMapInterpolate1","r3.ɵɵstyleMapInterpolate2","r3.ɵɵstyleMapInterpolate3","r3.ɵɵstyleMapInterpolate4","r3.ɵɵstyleMapInterpolate5","r3.ɵɵstyleMapInterpolate6","r3.ɵɵstyleMapInterpolate7","r3.ɵɵstyleMapInterpolate8","r3.ɵɵstyleMapInterpolateV","r3.ɵɵstyleProp","r3.ɵɵstylePropInterpolate1","r3.ɵɵstylePropInterpolate2","r3.ɵɵstylePropInterpolate3","r3.ɵɵstylePropInterpolate4","r3.ɵɵstylePropInterpolate5","r3.ɵɵstylePropInterpolate6","r3.ɵɵstylePropInterpolate7","r3.ɵɵstylePropInterpolate8","r3.ɵɵstylePropInterpolateV","r3.ɵɵclassProp","r3.ɵɵadvance","r3.ɵɵtemplate","r3.ɵɵtext","r3.ɵɵtextInterpolate","r3.ɵɵtextInterpolate1","r3.ɵɵtextInterpolate2","r3.ɵɵtextInterpolate3","r3.ɵɵtextInterpolate4","r3.ɵɵtextInterpolate5","r3.ɵɵtextInterpolate6","r3.ɵɵtextInterpolate7","r3.ɵɵtextInterpolate8","r3.ɵɵtextInterpolateV","r3.ɵɵi18n","r3.ɵɵi18nAttributes","r3.ɵɵi18nExp","r3.ɵɵi18nStart","r3.ɵɵi18nEnd","r3.ɵɵi18nApply","r3.ɵɵi18nPostprocess","r3.ɵɵresolveWindow","r3.ɵɵresolveDocument","r3.ɵɵresolveBody","r3.ɵɵsetComponentScope","r3.ɵɵsetNgModuleScope","sanitization.ɵɵsanitizeHtml","sanitization.ɵɵsanitizeStyle","sanitization.ɵɵsanitizeResourceUrl","sanitization.ɵɵsanitizeScript","sanitization.ɵɵsanitizeUrl","sanitization.ɵɵsanitizeUrlOrResourceUrl","sanitization.ɵɵtrustConstantHtml","sanitization.ɵɵtrustConstantResourceUrl","jitOptions","isModuleWithProviders","isNgModule","moduleQueue","flushingModuleQueue","isResolvedDeclaration","declaration","every","compileNgModule","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","NgModule","compileInjector","compileNgModuleDefs","enqueueModuleForDelayedScoping","isStandalone","WeakMap","setScopeOnDeclaredComponents","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","exported","importedScope","entry","declared","exportedType","exportedScope","transitiveScopesForNgModule","compilationDepth","compileComponent","ngComponentDef","maybeQueueResolutionOfComponentResources","addDirectiveFactoryDef","preserveWhitespaces","defaultEncapsulation","directiveMetadata","typeSourceSpan","createParseSourceSpan","animations","interpolation","usesInheritance","addDirectiveDefToUndecoratedParents","cachedDirectiveDefs","cachedPipeDefs","seen","rawDep","getStandaloneDefFunctions","flushModuleScopingQueueAsMuchAsPossible","compileDirective","ngDirectiveDef","getDirectiveMetadata","sourceMapUrl","facade","Directive","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","splitByComma","viewQueries","objPrototype","shouldAddAbstractDirective","convertToR3QueryMetadata","propertyName","ann","static","isQueryAnn","queriesMeta","isInputAnnotation","piece","LIFECYCLE_HOOKS","hookName","metadataName","getPipeMetadata","ngPipeDef","Pipe","compilePipe","bindingPropertyName","hostPropertyName","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","runInitializers","asyncInitPromises","initResult","observableAsPromise","_appIdRandomProviderFactory","_randomChar","PLATFORM_INITIALIZER","APP_BOOTSTRAP_LISTENER","Console","$localize","MissingTranslationStrategy","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler","compileModuleSync","NgModuleFactoryR3","compileModuleAsync","compileModuleAndAllComponentsSync","ComponentFactoryR3","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","shouldCoalesceEventChangeDetection","shouldCoalesceRunChangeDetection","hasPendingMacrotasks","hasPendingMicrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","assertZonePatched","_nesting","_outer","_inner","AsyncStackTaggingZoneSpec","fork","lastRequestAnimationFrameId","nativeRequestAnimationFrame","nativeCancelAnimationFrame","unpatchedRequestAnimationFrame","__symbol__","unpatchedCancelAnimationFrame","getNativeRequestAnimationFrame","zone","delayChangeDetectionForEventsDelegate","isCheckStableRunning","fakeTopEventTask","scheduleEventTask","updateMicroTaskStatus","checkStable","delayChangeDetectionForEvents","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","onHasTask","hasTaskState","hasTask","change","_hasPendingMicrotasks","microTask","macroTask","onHandleError","runOutsideAngular","forkInnerZoneWithAngularBehavior","isInAngularZone","runTask","EMPTY_PAYLOAD","cancelTask","runGuarded","NoopNgZone","TESTABILITY","TESTABILITY_GETTER","Testability","_ngZone","testabilityGetter","_pendingCount","_isZoneStable","_didWork","taskTrackingZone","_testabilityGetter","addToWindow","_watchAngularEvents","assertNotInAngularZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","doneCb","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","whenStable","getPendingRequestCount","registerApplication","unregisterApplication","findProviders","using","exactMatch","i0.ɵɵinject","TestabilityRegistry","_applications","testability","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_platformInjector","ALLOW_MULTIPLE_PLATFORMS","PLATFORM_DESTROY_LISTENERS","NG_DEV_MODE","compileNgModuleFactory","moduleFactory","R3NgModuleFactory","ngJitMode","compilerOptions","setJitOptions","_lastDefined","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","runPlatformInitializers","inits","createPlatformInjector","getPlatform","PlatformRef","_modules","_destroyListeners","bootstrapModuleFactory","ngZone","ngZoneToUse","getNgZone","getNgZoneOptions","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","optionsReducer","ApplicationRef","ngDoBootstrap","destroyListeners","ngZoneEventCoalescing","ngZoneRunCoalescing","_zone","_exceptionHandler","_bootstrapListeners","_views","_runningTick","_stable","componentTypes","_onMicrotaskEmptySubscription","tick","isCurrentlyStable","stableSub","unstableSub","assertInAngularZone","componentOrFactory","selectorOrNode","compRef","_loadComponent","attachView","viewCount","warnIfDestroyed","ChangeDetectorRef","isPipe","hostComponentView","createViewRef","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","_reset","itemTrackBy","mayBeDirty","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","isDirty","previousRecord","_remove","_reinsertAfter","_moveAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","nextRecord","_addToRemovals","_unlink","prevRecord","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_records","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","KeyValueChangeRecord_","_addToAdditions","_addToChanges","defaultIterableDiffersFactory","IterableDiffers","copied","defaultKeyValueDiffersFactory","KeyValueDiffers","kv","keyValDiff","iterableDiff","parentPlatformFactory","createPlatformFactory","ApplicationModule"],"sourceRoot":""}
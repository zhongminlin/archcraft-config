#!/usr/bin/env bash

## Copyright (C) 2020-2022 Aditya Shakya <adi1090x@gmail.com>
## Everyone is permitted to copy and distribute copies of this file under GNU-GPL3

## A script to get colours from the theme file & deploy it to polybar, alacritty, rofi & dunst.

DIR="$HOME/.config/bspwm"
CONFIGDIR="$HOME/.config"

## Current theme ---------------------------------------------#
source "$DIR"/themes/current.bash

## Get colors
getcolors () {
	FOREGROUND="$foreground"
	BACKGROUND="$background"
	CURSOR="$cursor"
	BLACK="$color0"
	RED="$color1"
	GREEN="$color2"
	YELLOW="$color3"
	BLUE="$color4"
	MAGENTA="$color5"
	CYAN="$color6"
	WHITE="$color7"
	ALTBLACK="$color8"
	ALTRED="$color9"
	ALTGREEN="$color10"
	ALTYELLOW="$color11"
	ALTBLUE="$color12"
	ALTMAGENTA="$color13"
	ALTCYAN="$color14"
	ALTWHITE="$color15"
}

## Write polybar colors file with current theme colors
bspbar () {
	cat > "$DIR"/polybar/colors <<- EOF	
	[color]

	FOREGROUND = ${FOREGROUND}
	BACKGROUND = ${BACKGROUND}
	BLACK = ${BLACK}
	RED = ${RED}
	GREEN = ${GREEN}
	YELLOW = ${YELLOW}
	BLUE = ${BLUE}
	MAGENTA = ${MAGENTA}
	CYAN = ${CYAN}
	WHITE = ${WHITE}
	ALTBLACK = ${ALTBLACK}
	ALTRED = ${ALTRED}
	ALTGREEN = ${ALTGREEN}
	ALTYELLOW = ${ALTYELLOW}
	ALTBLUE = ${ALTBLUE}
	ALTMAGENTA = ${ALTMAGENTA}
	ALTCYAN = ${ALTCYAN}
	ALTWHITE = ${ALTWHITE}
	EOF
}

## Write alacritty colors.yml file with current theme colors
bspterm () {
	cat > "$DIR"/alacritty/colors.yml <<- _EOF_
		## Colors configuration
		colors:
		  # Default colors
		  primary:
		    background: '${BACKGROUND}'
		    foreground: '${FOREGROUND}'

		  # Normal colors
		  normal:
		    black:   '${BLACK}'
		    red:     '${RED}'
		    green:   '${GREEN}'
		    yellow:  '${YELLOW}'
		    blue:    '${BLUE}'
		    magenta: '${MAGENTA}'
		    cyan:    '${CYAN}'
		    white:   '${WHITE}'

		  # Bright colors
		  bright:
		    black:   '${ALTBLACK}'
		    red:     '${ALTRED}'
		    green:   '${ALTGREEN}'
		    yellow:  '${ALTYELLOW}'
		    blue:    '${ALTBLUE}'
		    magenta: '${ALTMAGENTA}'
		    cyan:    '${ALTCYAN}'
		    white:   '${ALTWHITE}'
	_EOF_
}

## Write rofi colors.rasi file with current theme colors
bsprofi () {
	cat > "$DIR"/rofi/themes/colors.rasi <<- EOF	
	* {
	    background:			${BACKGROUND};
	    foreground:			${FOREGROUND};
	    selected:			${BLUE};
	    highlight:			${YELLOW};
	    urgent:				${RED};
	    on:					${GREEN};
	    off:				${RED};
	}
	EOF
}

## Write dunstrc file with current theme colors
bspdunst () {
	sed -i '/urgency_low/Q' "$DIR"/dunstrc
	cat >> "$DIR"/dunstrc <<- _EOF_
		[urgency_low]
		timeout = 2
		background = "${BACKGROUND}"
		foreground = "${FOREGROUND}"
		frame_color = "${BLUE}"

		[urgency_normal]
		timeout = 5
		background = "${BACKGROUND}"
		foreground = "${FOREGROUND}"
		frame_color = "${BLUE}"

		[urgency_critical]
		timeout = 0
		background = "${BACKGROUND}"
		foreground = "${FOREGROUND}"
		frame_color = "${RED}"
	_EOF_
}

## Write zathurarc file with current theme colors
bspzathura () {
	bg_r=$(printf "%d\n" 0x${BACKGROUND:1:2})
	bg_g=$(printf "%d\n" 0x${BACKGROUND:3:2})
	bg_b=$(printf "%d\n" 0x${BACKGROUND:5:2})
	cat > "$CONFIGDIR"/zathura/zathurarc <<- EOF		
	# Zathura configuration file
	set adjust-open 				"best-fit"
	set recolor 					"true"
	set recolor-keephue 			"true"
	
	# semi transparent background
	set default-bg 					rgba(${bg_r},${bg_g},${bg_b},0.95)
	set default-fg 					"${WHITE}"

	set statusbar-bg 				"${BACKGROUND}"
	set statusbar-fg                "${FOREGROUND}"
	set inputbar-bg 				"${BACKGROUND}"
	set inputbar-fg                 "${BLUE}"
	
	set highlight-color             "${ALTCYAN}"
	set highlight-active-color      "${CYAN}"

	set index-bg                    "${BACKGROUND}"
	set index-fg                    "${GREEN}" 
	set index-active-bg             "${BLACK}"
	set index-active-fg             "${YELLOW}" 
	
	set notification-error-bg       "${RED}" 
	set notification-error-fg       "${BACKGROUND}" 
	set notification-warning-bg     "${YELLOW}" 
	set notification-warning-fg     "${BACKGROUND}" 
	set notification-bg             "${BLUE}" 
	set notification-fg             "${BACKGROUND}" 

	set completion-bg               "${BACKGROUND}" 
	set completion-fg               "${GREEN}" 
	set completion-group-bg         "${BACKGROUND}" 
	set completion-group-fg         "${YELLOW}" 
	set completion-highlight-bg     "${CYAN}" 
	set completion-highlight-fg     "${BLACK}" 

	set render-loading              true
	set render-loading-fg           "${FOREGROUND}"
	set render-loading-bg           "${BACKGROUND}"
	
	# Recolor mode settings, fully transparent light background
	set recolor-lightcolor 			rgba(${bg_r},${bg_g},${bg_b},0)
	set recolor-darkcolor 			"${WHITE}"
	EOF
}

## Write CAVA colors file with current theme colors
bspcava () {
	cat > "$CONFIGDIR"/cava/config <<- EOF	
	[color]

	background = default
	foreground = default

	gradient = 1
	gradient_count = 6
	gradient_color_1 = '${BLUE}'
	gradient_color_2 = '${ALTBLUE}'
	gradient_color_3 = '${CYAN}'
	gradient_color_4 = '${ALTCYAN}'
	gradient_color_5 = '${GREEN}'
	gradient_color_6 = '${ALTGREEN}'
	EOF
}

## Write bashtop colors file with current theme colors
bspbashtop () {
	cat > "$CONFIGDIR"/bashtop/user_themes/current.theme <<- EOF	
	theme[main_bg]="${BACKGROUND}"
	theme[main_fg]="${FOREGROUND}"
	theme[title]="${FOREGROUND}"
	theme[hi_fg]="${BLUE}"
	theme[selected_bg]="${BLACK}"
	theme[selected_fg]="${BLUE}"
	theme[inactive_fg]="${ALTBLACK}"
	theme[graph_text]="${WHITE}"
	theme[meter_bg]="${BLACK}"
	theme[proc_misc]="${WHITE}"
	theme[cpu_box]="${CYAN}"
	theme[mem_box]="${GREEN}"
	theme[net_box]="${MAGENTA}"
	theme[proc_box]="${ALTWHITE}"
	theme[div_line]="${ALTBLACK}"
	theme[temp_start]="${GREEN}"
	theme[temp_mid]="${YELLOW}"
	theme[temp_end]="${RED}"
	theme[cpu_start]="${BLUE}"
	theme[cpu_mid]="${ALTBLUE}"
	theme[cpu_end]="${CYAN}"
	theme[free_start]="${CYAN}"
	theme[free_mid]="${CYAN}"
	theme[free_end]="${GREEN}"
	theme[cached_start]="${MAGENTA}"
	theme[cached_mid]="${MAGENTA}"
	theme[cached_end]="${ALTMAGENTA}"
	theme[available_start]="${WHITE}"
	theme[available_mid]="${ALTWHITE}"
	theme[available_end]="${ALTWHITE}"
	theme[used_start]="${YELLOW}"
	theme[used_mid]="${YELLOW}"
	theme[used_end]="${RED}"
	theme[download_start]="${BLUE}"
	theme[download_mid]="${BLUE}"
	theme[download_end]="${MAGENTA}"
	theme[upload_start]="${BLUE}"
	theme[upload_mid]="${BLUE}"
	theme[upload_end]="${MAGENTA}"
	theme[process_start]="${BLUE}"
	theme[process_mid]="${ALTBLUE}"
	theme[process_end]="${CYAN}"
	EOF
}

## Execute functions and run main 
main () {
	getcolors
	bspbar
	bspterm
	bsprofi
	bspdunst
	bspzathura
	bspcava
	bspbashtop
}

main
